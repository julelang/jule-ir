// Auto generated by JuleC.
// JuleC version: jule0.1.1 @master
// Date: 1/10/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include <arpa/inet.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <mach-o/dyld.h>
#include <pthread.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _1dbaa825c_acceptRange;
struct _1dbaebd3e_LittleEndian;
struct _1dbb1671b_u128;
struct _1c064151a_group;
struct _1c068bcc4_group;
struct _1c063e1c7__Map;
struct _1c0689bd4__Map;
struct _1c064a953_mapIterator;
struct _1c069422c_mapIterator;
struct _1dd09dce5_foldPair;
struct _1dd09e2e0_CaseRange;
struct _1dd09e796_Range16;
struct _1dd09ecc4_Range32;
struct _1dd0a0247_RangeTable;
struct _1dd0b6912_Builder;
struct _1dd0c3a1d_lazyBuff;
struct _1dbd04750_DirEntry;
struct _1dbd049d6_Directory;
struct _1dbd064aa_File;
struct _1dbd08545_Status;
struct _1dd462bd1_cmdAttrs;
struct _1dd356476_Log;
struct _1ab14596d_floatInfo;
struct _1ab146595_decimalSlice;
struct _1ab15861d_leftCheat;
struct _1ab159135_decimal;
struct _1dd49a07b_AnsiEscape;
struct _1ab15e668_Logger;
struct _1ad6ceb70_Token;
struct _1ad6d5527_Fileset;
struct _1ad6d7529_kindPair;
struct _1ad6dd50d_lex;
struct _1ad6e325a_AST;
struct _1ad6e41b2_Node;
struct _1ad6e45d0_Directive;
struct _1ad6e51b3_TypeDecl;
struct _1ad6e57bd_IdentTypeDecl;
struct _1ad6e5a87_SubIdentTypeDecl;
struct _1ad6e5e61_NamespaceTypeDecl;
struct _1ad6e625d_SptrTypeDecl;
struct _1ad6e65e3_SlcTypeDecl;
struct _1ad6e68e0_TupleTypeDecl;
struct _1ad6e6bdc_PtrTypeDecl;
struct _1ad6e747e_ArrTypeDecl;
struct _1ad6e7bcc_MapTypeDecl;
struct _1ad6e80a6_RetTypeDecl;
struct _1ad6e94e7_Expr;
struct _1ad6e97b1_RangeExpr;
struct _1ad6e9dbb_UseExpr;
struct _1ad6ea0db_TupleExpr;
struct _1ad6ea482_LitExpr;
struct _1ad6ea85b_UnsafeExpr;
struct _1ad6ead12_IdentExpr;
struct _1ad6eb5a4_UnaryExpr;
struct _1ad6eb97d_VariadicExpr;
struct _1ad6ebd57_CastExpr;
struct _1ad6ec231_NamespaceExpr;
struct _1ad6ec60a_SubIdentExpr;
struct _1ad6ecab1_BinaryExpr;
struct _1ad6ed221_FnCallExpr;
struct _1ad6edc16_FieldExprPair;
struct _1ad6ee541_StructLit;
struct _1ad6ee9e7_BraceLit;
struct _1ad700322_KeyValPair;
struct _1ad700a4d_SliceExpr;
struct _1ad7014aa_IndexingExpr;
struct _1ad701b1a_SlicingExpr;
struct _1ad701e17_Constraint;
struct _1ad7023bd_GenericDecl;
struct _1ad702797_LabelSt;
struct _1ad702b71_GotoSt;
struct _1ad702e6d_FallSt;
struct _1ad7035cd_AssignLeft;
struct _1ad703b61_AssignSt;
struct _1ad704a74_Stmt;
struct _1ad7051d4_ScopeTree;
struct _1ad705921_ParamDecl;
struct _1ad706d73_FnDecl;
struct _1ad70802d_VarDecl;
struct _1ad708407_RetSt;
struct _1ad708b77_Iter;
struct _1ad7094a2_WhileKind;
struct _1ad709da9_RangeKind;
struct _1ad70a283_BreakSt;
struct _1ad70a65c_ContSt;
struct _1ad70ab13_If;
struct _1ad70aedc_Else;
struct _1ad70b493_Conditional;
struct _1ad70bbd0_TypeAliasDecl;
struct _1ad70c186_Case;
struct _1ad70c9a0_MatchCase;
struct _1ad70d033_UseDecl;
struct _1ad70d4d9_EnumItemDecl;
struct _1ad70e09a_EnumDecl;
struct _1ad70e8c5_TypeEnumItemDecl;
struct _1ad710035_TypeEnumDecl;
struct _1ad7102ee_FieldDecl;
struct _1ad710be5_StructDecl;
struct _1ad711432_TraitDecl;
struct _1ad711a92_Impl;
struct _1ad778ec2_Const;
struct _1ad712ac6_Field;
struct _1ad714ad9_Operators;
struct _1ad7159ec_Struct;
struct _1ad717ca7_FieldIns;
struct _1ad718857_StructIns;
struct _1ad7d9dac_OperandExprModel;
struct _1ad7da3a7_BinaryExprModel;
struct _1ad7da781_UnaryExprModel;
struct _1ad7dacae_StructArgExprModel;
struct _1ad7db155_StructLitExprModel;
struct _1ad7db452_AllocStructLitExprModel;
struct _1ad7db9d5_CastingExprModel;
struct _1ad7dc387_FnCallExprModel;
struct _1ad7dc761_SliceExprModel;
struct _1ad7dcc17_IndexingExprModel;
struct _1ad7dd1bd_AnonFnExprModel;
struct _1ad7dd597_KeyValPairExprModel;
struct _1ad7dd971_MapExprModel;
struct _1ad7de004_SlicingExprModel;
struct _1ad7de587_TraitSubIdentExprModel;
struct _1ad7dee28_StructSubIdentExprModel;
struct _1ad7e02be_StructStaticIdentExprModel;
struct _1ad7e0698_ArrayExprModel;
struct _1ad7e0995_TupleExprModel;
struct _1ad7e0d6e_BuiltinOutCallExprModel;
struct _1ad7e1248_BuiltinOutlnCallExprModel;
struct _1ad7e1622_BuiltinNewCallExprModel;
struct _1ad7e19eb_BuiltinPanicCallExprModel;
struct _1ad7e1ea2_BuiltinMakeCallExprModel;
struct _1ad7e237b_BuiltinAppendCallExprModel;
struct _1ad7e2678_BuiltinLenCallExprModel;
struct _1ad7e2975_BuiltinCapCallExprModel;
struct _1ad7e2d4e_BuiltinDeleteCallExprModel;
struct _1ad7e3228_BuiltinCopyCallExprModel;
struct _1ad7e3602_BuiltinErrorCallExprModel;
struct _1ad7e38ee_SizeofExprModel;
struct _1ad7e40a3_AlignofExprModel;
struct _1ad7e4290_RuneExprModel;
struct _1ad7e4614_BackendEmitExprModel;
struct _1ad7e4911_FreeExprModel;
struct _1ad7e5538_RetType;
struct _1ad7e5cb9_Param;
struct _1ad7e778d_Fn;
struct _1ad7e96e6_ParamIns;
struct _1ad7ea84b_FnIns;
struct _1ad7eda91_SymTab;
struct _1ad802ea2_Trait;
struct _1ad804b0d_EnumItem;
struct _1ad805658_Enum;
struct _1ad80678b_TypeEnumItem;
struct _1ad806d63_TypeEnum;
struct _1ad87db21_comptimeRange;
struct _1ad8844d9_comptimeStructField;
struct _1ad885c7c_comptimeStructFields;
struct _1ad88770c_comptimeStatic;
struct _1ad888eb1_comptimeStatics;
struct _1ad88a930_comptimeEnumField;
struct _1ad88bc3e_comptimeEnumFields;
struct _1ad88d746_comptimeParam;
struct _1ad8905a0_comptimeParams;
struct _1ad891e0e_comptimeTypeInfos;
struct _1ad89387d_comptimeTypeInfo;
struct _1ad899983_comptimeValue;
struct _1ad89c6de_comptimeFiles;
struct _1ad89e15d_comptimeFile;
struct _1ad8a0c86_comptimeDecls;
struct _1ad8a3074_comptimeDecl;
struct _1ad8a9960_constraintChecker;
struct _1ad8abc5e_Impl;
struct _1ad8b136d_Scope;
struct _1ad8b178b_If;
struct _1ad8b1a88_Else;
struct _1ad8b1ea6_Conditional;
struct _1ad8b22a3_InfIter;
struct _1ad8b2759_WhileIter;
struct _1ad8b31a5_RangeIter;
struct _1ad8b353a_ContSt;
struct _1ad8b3914_BreakSt;
struct _1ad8b3dba_Label;
struct _1ad8b452a_GotoSt;
struct _1ad8b4904_Postfix;
struct _1ad8b4daa_Assign;
struct _1ad8b5361_MultiAssign;
struct _1ad8b5a9d_Match;
struct _1ad8b65c6_Case;
struct _1ad8b6cbe_FallSt;
struct _1ad8b7165_RetSt;
struct _1ad8b761b_scopeLabel;
struct _1ad8b860b_scopeChecker;
struct _1ad8cc499_directiveChecker;
struct _1ad8ced70_ReferenceStack;
struct _1ad8d11d4_Pass;
struct _1ad8d5b89_symBuilder;
struct _1ad8e1bea_ImportInfo;
struct _1ad8e446c_Package;
struct _1ad90e245_commonSemaMeta;
struct _1ad90ed6c_sema;
struct _1ad93009b_missingRetChecker;
struct _1ad933a83_Var;
struct _1ad93490d_FuncPattern;
struct _1ad9721ba_typeCompatibilityChecker;
struct _1ad974046_assignTypeChecker;
struct _1ad97591b_dynamicTypeAnnotation;
struct _1ad97a778_fnCallArgChecker;
struct _1ad97d6b0_structLitChecker;
struct _1ad980492_rangeChecker;
struct _1ad982c03_retTypeChecker;
struct _1ad985b90_Data;
struct _1ad986d17_Value;
struct _1ad9878b7_eval;
struct _1ad9a6bb1_unaryEval;
struct _1ad9a8b4c_binaryEval;
struct _1ad9b6de1_InsGeneric;
struct _1ad9b77a4_TypeAlias;
struct _1ad9b8596_TypeKind;
struct _1ad9c0ca7_TypeSymbol;
struct _1ad9c16ae_Prim;
struct _1ad9c51da_Sptr;
struct _1ad9c5bad_Slc;
struct _1ad9c67a2_Tuple;
struct _1ad9c7352_Map;
struct _1ad9c7ece_Arr;
struct _1ad9c89a2_Ptr;
struct _1ad9c99a3_referencer;
struct _1ad9ca993_typeChecker;
struct _1ad9d3a56_identTypeLookup;
struct _1bb01b25c_FileInfo;
struct _1bb0673c9_stmt;
struct _1bb067c6a_scopeParser;
struct _1bb0756a1_exprBuilder;
struct _1bb082c85_assignInfo;
struct _1bb085e64_parser;
struct _1bb09711d_typeBuilder;
struct _1adb5c6a2_CompileInfo;
struct _1adb5da7c_directiveEval;
struct _1bb09b254_Importer;
struct _1bb0a2cd8_ExprInspector;
struct _1bb0a8e76_OrderedDefines;
struct _1bbed7722_specialCaseDefines;
struct _1bbedb171_liveTable;
struct _1bbedb627_ObjectDeadCode;
struct _1bbee0692_scopeDeadCode;
struct _1bbee4c29_exprDeadCode;
struct _1bbd9506e_ExceptionalForwardingExprModel;
struct _1bbd952e4_SwapExprModel;
struct _1bbd956bd_EmptyCompareExprModel;
struct _1bbd95a42_RefExprModel;
struct _1bbd95eb5_StrCompExprModel;
struct _1bbd96548_MutSlicingExprModel;
struct _1bbd96845_UnsafeBinaryExprModel;
struct _1bbd96bca_UnsafeIndexingExprModel;
struct _1bbd970a4_PushToSliceExprModel;
struct _1bbd9747d_AppendToSliceExprModel;
struct _1bbd97857_StrRuneIter;
struct _1bbd97b54_UnsafeDerefExprModel;
struct _1bbd97e51_UnsafeCastingExprModel;
struct _1bbd98a78_nilVar;
struct _1bbd98db9_nils;
struct _1bbd9ba37_scopeOptimizer;
struct _1bbda31d1_exprOptimizer;
struct _1bbda848e_dynamicVar;
struct _1bbda87d0_dynamic;
struct _1bbdab409_data;
struct _1bbdac8a0_boundaryVar;
struct _1bbdacbe1_boundary;
struct _1bbee5d4b_Optimizer;
struct _1bc0c1850_AbsTime;
struct _1bc0c2026_Time;
struct _1bbee9ba7_scopeCoder;
struct _1bc005dd3_exprCoder;
struct _1bc0183ac_TestCoder;
struct _1bc01b03b_identCoder;
struct _1bc0cba36_SerializationInfo;
struct _1bc0cbe54_traitCast;
struct _1bc0cc32d_anonHash;
struct _1bc0cc6a2_metadata;
struct _1bc0cdd35_ObjectCoder;
struct _1bc0dce98_customType;
struct _1bc0dda8c_typeCoder;
struct _1bc0e6677_resultCoder;
struct _1c0d47d20_Flag;
struct _1c0d4b63c_Flag;
struct _1c0d4ed49_Flag;
struct _1c0d5359a_Flag;
struct _1c0d56ca7_Flag;
struct _1bc161ea6_FlagSet;
struct _1bc16496a_argParser;
struct _1dd40e1bb_Cmd;
struct _1bb09dcd4_IR;
struct _1bbdaae0e_dataCheckpoint;
struct _1dbaa825c_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
	

};
inline jule::Bool _1dbaa825c_acceptRange_eq(_1dbaa825c_acceptRange *_self_, _1dbaa825c_acceptRange _other_);


struct _1dbaebd3e_LittleEndian {
	

};
inline jule::Bool _1dbaebd3e_LittleEndian_eq(_1dbaebd3e_LittleEndian *_self_, _1dbaebd3e_LittleEndian _other_);


struct _1dbb1671b_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
	

};
inline jule::Bool _1dbb1671b_u128_eq(_1dbb1671b_u128 *_self_, _1dbb1671b_u128 _other_);


struct _1c064151a_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
	

};
inline jule::Bool _1c064151a_group_eq(_1c064151a_group *_self_, _1c064151a_group _other_);

struct _1c068bcc4_group {
	jule::Array<jule::Ptr<_1ad7ea84b_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
	

};
struct _1c063e1c7__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c064151a_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};struct _1c0689bd4__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c068bcc4_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};
struct _1c064a953_mapIterator {
	jule::Ptr<_1c063e1c7__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c064151a_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};struct _1c069422c_mapIterator {
	jule::Ptr<_1c0689bd4__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c068bcc4_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};
struct _1dd09dce5_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
	

};
inline jule::Bool _1dd09dce5_foldPair_eq(_1dd09dce5_foldPair *_self_, _1dd09dce5_foldPair _other_);


struct _1dd09e2e0_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
	

};
inline jule::Bool _1dd09e2e0_CaseRange_eq(_1dd09e2e0_CaseRange *_self_, _1dd09e2e0_CaseRange _other_);


struct _1dd09e796_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
	

};
inline jule::Bool _1dd09e796_Range16_eq(_1dd09e796_Range16 *_self_, _1dd09e796_Range16 _other_);


struct _1dd09ecc4_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
	

};
inline jule::Bool _1dd09ecc4_Range32_eq(_1dd09ecc4_Range32 *_self_, _1dd09ecc4_Range32 _other_);


struct _1dd0a0247_RangeTable {
	jule::Slice<_1dd09e796_Range16> _field_R16;
	jule::Slice<_1dd09ecc4_Range32> _field_R32;
	jule::I64 _field_LatinOffset;
	

};
struct _1dd0b6912_Builder {
	jule::Slice<jule::U8> _field_buf;
	

};
struct _1dd0c3a1d_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen;
	

};
struct _1dbd04750_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_1dbd08545_Status> _field_Stat;
	

};
inline jule::Bool _1dbd04750_DirEntry_eq(_1dbd04750_DirEntry *_self_, _1dbd04750_DirEntry _other_);


struct _1dbd049d6_Directory {
	

};
inline jule::Bool _1dbd049d6_Directory_eq(_1dbd049d6_Directory *_self_, _1dbd049d6_Directory _other_);


struct _1dbd064aa_File {
	jule::Uintptr _field_handle;
	

};
inline jule::Bool _1dbd064aa_File_eq(_1dbd064aa_File *_self_, _1dbd064aa_File _other_);


struct _1dbd08545_Status {
	jule::I64 _field_mode;
	jule::U64 _field_size;
	

};
inline jule::Bool _1dbd08545_Status_eq(_1dbd08545_Status *_self_, _1dbd08545_Status _other_);


struct _1dd462bd1_cmdAttrs {
	jule::I64 _field_pid;
	

};
inline jule::Bool _1dd462bd1_cmdAttrs_eq(_1dd462bd1_cmdAttrs *_self_, _1dd462bd1_cmdAttrs _other_);


struct _1dd356476_Log {
	jule::I64 _field_Kind;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

};
inline jule::Bool _1dd356476_Log_eq(_1dd356476_Log *_self_, _1dd356476_Log _other_);


struct _1ab14596d_floatInfo {
	jule::U64 _field_mantbits;
	jule::U64 _field_expbits;
	jule::I64 _field_bias;
	

};
inline jule::Bool _1ab14596d_floatInfo_eq(_1ab14596d_floatInfo *_self_, _1ab14596d_floatInfo _other_);


struct _1ab146595_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	

};
struct _1ab15861d_leftCheat {
	jule::I64 _field_delta;
	jule::Str _field_cutoff;
	

};
inline jule::Bool _1ab15861d_leftCheat_eq(_1ab15861d_leftCheat *_self_, _1ab15861d_leftCheat _other_);


struct _1ab159135_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
	

};
inline jule::Bool _1ab159135_decimal_eq(_1ab159135_decimal *_self_, _1ab159135_decimal _other_);


struct _1dd49a07b_AnsiEscape {
	

};
inline jule::Bool _1dd49a07b_AnsiEscape_eq(_1dd49a07b_AnsiEscape *_self_, _1dd49a07b_AnsiEscape _other_);


struct _1ab15e668_Logger {
	

};
inline jule::Bool _1ab15e668_Logger_eq(_1ab15e668_Logger *_self_, _1ab15e668_Logger _other_);


struct _1ad6ceb70_Token {
	jule::Ptr<_1ad6d5527_Fileset> _field_File;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Kind;
	jule::U64 _field_Id;
	

};
inline jule::Bool _1ad6ceb70_Token_eq(_1ad6ceb70_Token *_self_, _1ad6ceb70_Token _other_);


struct _1ad6d5527_Fileset {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _field_Tokens;
	

};
struct _1ad6d7529_kindPair {
	jule::Str _field_kind;
	jule::U64 _field_id;
	

};
inline jule::Bool _1ad6d7529_kindPair_eq(_1ad6d7529_kindPair *_self_, _1ad6d7529_kindPair _other_);


struct _1ad6dd50d_lex {
	jule::I64 _field_mode;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _field_tokens;
	jule::Ptr<_1ad6d5527_Fileset> _field_file;
	jule::I64 _field_pos;
	jule::I64 _field_column;
	jule::I64 _field_row;
	jule::Slice<_1dd356476_Log> _field_errors;
	

};
struct _1ad6e325a_AST {
	jule::Ptr<_1ad6d5527_Fileset> _field_File;
	jule::Slice<jule::Ptr<_1ad6e45d0_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1ad70d033_UseDecl>> _field_UseDecls;
	jule::Slice<_1ad6e41b2_Node> _field_Nodes;
	

};
struct _1ad6e41b2_Node {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1ad6e41b2_Node_eq(_1ad6e41b2_Node *_self_, _1ad6e41b2_Node _other_);


struct _1ad6e45d0_Directive {
	jule::Ptr<_1ad6ceb70_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _field_Args;
	

};
struct _1ad6e51b3_TypeDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1ad6e51b3_TypeDecl_eq(_1ad6e51b3_TypeDecl *_self_, _1ad6e51b3_TypeDecl _other_);


struct _1ad6e57bd_IdentTypeDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> _field_Generics;
	

};
struct _1ad6e5a87_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1ad6e57bd_IdentTypeDecl>> _field_Idents;
	

};
struct _1ad6e5e61_NamespaceTypeDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Namespace;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1ad6e5e61_NamespaceTypeDecl_eq(_1ad6e5e61_NamespaceTypeDecl *_self_, _1ad6e5e61_NamespaceTypeDecl _other_);


struct _1ad6e625d_SptrTypeDecl {
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1ad6e625d_SptrTypeDecl_eq(_1ad6e625d_SptrTypeDecl *_self_, _1ad6e625d_SptrTypeDecl _other_);


struct _1ad6e65e3_SlcTypeDecl {
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1ad6e65e3_SlcTypeDecl_eq(_1ad6e65e3_SlcTypeDecl *_self_, _1ad6e65e3_SlcTypeDecl _other_);


struct _1ad6e68e0_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> _field_Types;
	

};
struct _1ad6e6bdc_PtrTypeDecl {
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1ad6e6bdc_PtrTypeDecl_eq(_1ad6e6bdc_PtrTypeDecl *_self_, _1ad6e6bdc_PtrTypeDecl _other_);


struct _1ad6e747e_ArrTypeDecl {
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Elem;
	jule::Ptr<_1ad6e94e7_Expr> _field_Size;
	

};
inline jule::Bool _1ad6e747e_ArrTypeDecl_eq(_1ad6e747e_ArrTypeDecl *_self_, _1ad6e747e_ArrTypeDecl _other_);


struct _1ad6e7bcc_MapTypeDecl {
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Key;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Val;
	

};
inline jule::Bool _1ad6e7bcc_MapTypeDecl_eq(_1ad6e7bcc_MapTypeDecl *_self_, _1ad6e7bcc_MapTypeDecl _other_);


struct _1ad6e80a6_RetTypeDecl {
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _field_Idents;
	

};
struct _1ad6e94e7_Expr {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1ad6e94e7_Expr_eq(_1ad6e94e7_Expr *_self_, _1ad6e94e7_Expr _other_);


struct _1ad6e97b1_RangeExpr {
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	

};
inline jule::Bool _1ad6e97b1_RangeExpr_eq(_1ad6e97b1_RangeExpr *_self_, _1ad6e97b1_RangeExpr _other_);


struct _1ad6e9dbb_UseExpr {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	

};
inline jule::Bool _1ad6e9dbb_UseExpr_eq(_1ad6e9dbb_UseExpr *_self_, _1ad6e9dbb_UseExpr _other_);


struct _1ad6ea0db_TupleExpr {
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _field_Expr;
	

};
struct _1ad6ea482_LitExpr {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Value;
	

};
inline jule::Bool _1ad6ea482_LitExpr_eq(_1ad6ea482_LitExpr *_self_, _1ad6ea482_LitExpr _other_);


struct _1ad6ea85b_UnsafeExpr {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	

};
inline jule::Bool _1ad6ea85b_UnsafeExpr_eq(_1ad6ea85b_UnsafeExpr *_self_, _1ad6ea85b_UnsafeExpr _other_);


struct _1ad6ead12_IdentExpr {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	

};
inline jule::Bool _1ad6ead12_IdentExpr_eq(_1ad6ead12_IdentExpr *_self_, _1ad6ead12_IdentExpr _other_);


struct _1ad6eb5a4_UnaryExpr {
	jule::Ptr<_1ad6ceb70_Token> _field_Op;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	

};
inline jule::Bool _1ad6eb5a4_UnaryExpr_eq(_1ad6eb5a4_UnaryExpr *_self_, _1ad6eb5a4_UnaryExpr _other_);


struct _1ad6eb97d_VariadicExpr {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	

};
inline jule::Bool _1ad6eb97d_VariadicExpr_eq(_1ad6eb97d_VariadicExpr *_self_, _1ad6eb97d_VariadicExpr _other_);


struct _1ad6ebd57_CastExpr {
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Kind;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	

};
inline jule::Bool _1ad6ebd57_CastExpr_eq(_1ad6ebd57_CastExpr *_self_, _1ad6ebd57_CastExpr _other_);


struct _1ad6ec231_NamespaceExpr {
	jule::Ptr<_1ad6ceb70_Token> _field_Namespace;
	jule::Ptr<_1ad6ceb70_Token> _field_Ident;
	

};
inline jule::Bool _1ad6ec231_NamespaceExpr_eq(_1ad6ec231_NamespaceExpr *_self_, _1ad6ec231_NamespaceExpr _other_);


struct _1ad6ec60a_SubIdentExpr {
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	jule::Ptr<_1ad6ceb70_Token> _field_Ident;
	

};
inline jule::Bool _1ad6ec60a_SubIdentExpr_eq(_1ad6ec60a_SubIdentExpr *_self_, _1ad6ec60a_SubIdentExpr _other_);


struct _1ad6ecab1_BinaryExpr {
	jule::Ptr<_1ad6e94e7_Expr> _field_Left;
	jule::Ptr<_1ad6e94e7_Expr> _field_Right;
	jule::Ptr<_1ad6ceb70_Token> _field_Op;
	

};
inline jule::Bool _1ad6ecab1_BinaryExpr_eq(_1ad6ecab1_BinaryExpr *_self_, _1ad6ecab1_BinaryExpr _other_);


struct _1ad6ed221_FnCallExpr {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _field_Args;
	jule::Ptr<_1ad7051d4_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
	

};
struct _1ad6edc16_FieldExprPair {
	jule::Ptr<_1ad6ceb70_Token> _field_Field;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	

};
inline jule::Bool _1ad6edc16_FieldExprPair_eq(_1ad6edc16_FieldExprPair *_self_, _1ad6edc16_FieldExprPair _other_);


struct _1ad6ee541_StructLit {
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _field_Exprs;
	

};
struct _1ad6ee9e7_BraceLit {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _field_Exprs;
	

};
struct _1ad700322_KeyValPair {
	jule::Ptr<_1ad6e94e7_Expr> _field_Key;
	jule::Ptr<_1ad6e94e7_Expr> _field_Val;
	jule::Ptr<_1ad6ceb70_Token> _field_Colon;
	

};
inline jule::Bool _1ad700322_KeyValPair_eq(_1ad700322_KeyValPair *_self_, _1ad700322_KeyValPair _other_);


struct _1ad700a4d_SliceExpr {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _field_Exprs;
	

};
struct _1ad7014aa_IndexingExpr {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	jule::Ptr<_1ad6e94e7_Expr> _field_Index;
	

};
inline jule::Bool _1ad7014aa_IndexingExpr_eq(_1ad7014aa_IndexingExpr *_self_, _1ad7014aa_IndexingExpr _other_);


struct _1ad701b1a_SlicingExpr {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	jule::Ptr<_1ad6e94e7_Expr> _field_Start;
	jule::Ptr<_1ad6e94e7_Expr> _field_To;
	

};
inline jule::Bool _1ad701b1a_SlicingExpr_eq(_1ad701b1a_SlicingExpr *_self_, _1ad701b1a_SlicingExpr _other_);


struct _1ad701e17_Constraint {
	jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> _field_Mask;
	

};
struct _1ad7023bd_GenericDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ad701e17_Constraint> _field_Constraint;
	

};
inline jule::Bool _1ad7023bd_GenericDecl_eq(_1ad7023bd_GenericDecl *_self_, _1ad7023bd_GenericDecl _other_);


struct _1ad702797_LabelSt {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1ad702797_LabelSt_eq(_1ad702797_LabelSt *_self_, _1ad702797_LabelSt _other_);


struct _1ad702b71_GotoSt {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_Label;
	

};
inline jule::Bool _1ad702b71_GotoSt_eq(_1ad702b71_GotoSt *_self_, _1ad702b71_GotoSt _other_);


struct _1ad702e6d_FallSt {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	

};
inline jule::Bool _1ad702e6d_FallSt_eq(_1ad702e6d_FallSt *_self_, _1ad702e6d_FallSt _other_);


struct _1ad7035cd_AssignLeft {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	

};
inline jule::Bool _1ad7035cd_AssignLeft_eq(_1ad7035cd_AssignLeft *_self_, _1ad7035cd_AssignLeft _other_);


struct _1ad703b61_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1ad6ceb70_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1ad7035cd_AssignLeft>> _field_Left;
	jule::Ptr<_1ad6e94e7_Expr> _field_Right;
	

};
struct _1ad704a74_Stmt {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1ad704a74_Stmt_eq(_1ad704a74_Stmt *_self_, _1ad704a74_Stmt _other_);


struct _1ad7051d4_ScopeTree {
	jule::Ptr<_1ad7051d4_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1ad704a74_Stmt> _field_Stmts;
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	

};
struct _1ad705921_ParamDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1ad705921_ParamDecl_eq(_1ad705921_ParamDecl *_self_, _1ad705921_ParamDecl _other_);


struct _1ad706d73_FnDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ad6e45d0_Directive>> _field_Directives;
	jule::Ptr<_1ad7051d4_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> _field_Generics;
	jule::Ptr<_1ad6e80a6_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1ad705921_ParamDecl>> _field_Params;
	

};
struct _1ad70802d_VarDecl {
	jule::Ptr<_1ad7051d4_ScopeTree> _field_Scope;
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1ad6e45d0_Directive>> _field_Directives;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Kind;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	

};
struct _1ad708407_RetSt {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	

};
inline jule::Bool _1ad708407_RetSt_eq(_1ad708407_RetSt *_self_, _1ad708407_RetSt _other_);


struct _1ad708b77_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1ad7051d4_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1ad708b77_Iter_eq(_1ad708b77_Iter *_self_, _1ad708b77_Iter _other_);


struct _1ad7094a2_WhileKind {
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1ad6ceb70_Token> _field_NextToken;
	

};
inline jule::Bool _1ad7094a2_WhileKind_eq(_1ad7094a2_WhileKind *_self_, _1ad7094a2_WhileKind _other_);


struct _1ad709da9_RangeKind {
	jule::Ptr<_1ad6ceb70_Token> _field_InToken;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	jule::Ptr<_1ad70802d_VarDecl> _field_KeyA;
	jule::Ptr<_1ad70802d_VarDecl> _field_KeyB;
	

};
inline jule::Bool _1ad709da9_RangeKind_eq(_1ad709da9_RangeKind *_self_, _1ad709da9_RangeKind _other_);


struct _1ad70a283_BreakSt {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_Label;
	

};
inline jule::Bool _1ad70a283_BreakSt_eq(_1ad70a283_BreakSt *_self_, _1ad70a283_BreakSt _other_);


struct _1ad70a65c_ContSt {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_Label;
	

};
inline jule::Bool _1ad70a65c_ContSt_eq(_1ad70a65c_ContSt *_self_, _1ad70a65c_ContSt _other_);


struct _1ad70ab13_If {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	jule::Ptr<_1ad7051d4_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1ad70ab13_If_eq(_1ad70ab13_If *_self_, _1ad70ab13_If _other_);


struct _1ad70aedc_Else {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad7051d4_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1ad70aedc_Else_eq(_1ad70aedc_Else *_self_, _1ad70aedc_Else _other_);


struct _1ad70b493_Conditional {
	jule::Ptr<_1ad70ab13_If> _field_Head;
	jule::Slice<jule::Ptr<_1ad70ab13_If>> _field_Tail;
	jule::Ptr<_1ad70aedc_Else> _field_Default;
	

};
struct _1ad70bbd0_TypeAliasDecl {
	jule::Ptr<_1ad7051d4_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1ad70bbd0_TypeAliasDecl_eq(_1ad70bbd0_TypeAliasDecl *_self_, _1ad70bbd0_TypeAliasDecl _other_);


struct _1ad70c186_Case {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad7051d4_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _field_Exprs;
	

};
struct _1ad70c9a0_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ad70c186_Case>> _field_Cases;
	jule::Ptr<_1ad70aedc_Else> _field_Default;
	

};
struct _1ad70d033_UseDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_Path;
	jule::Ptr<_1ad6ceb70_Token> _field_Alias;
	jule::Bool _field_Binded;
	

};
inline jule::Bool _1ad70d033_UseDecl_eq(_1ad70d033_UseDecl *_self_, _1ad70d033_UseDecl _other_);


struct _1ad70d4d9_EnumItemDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	

};
inline jule::Bool _1ad70d4d9_EnumItemDecl_eq(_1ad70d4d9_EnumItemDecl *_self_, _1ad70d4d9_EnumItemDecl _other_);


struct _1ad70e09a_EnumDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ad70d4d9_EnumItemDecl>> _field_Items;
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	

};
struct _1ad70e8c5_TypeEnumItemDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1ad70e8c5_TypeEnumItemDecl_eq(_1ad70e8c5_TypeEnumItemDecl *_self_, _1ad70e8c5_TypeEnumItemDecl _other_);


struct _1ad710035_TypeEnumDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ad70e8c5_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	

};
struct _1ad7102ee_FieldDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Kind;
	jule::Ptr<_1ad6e94e7_Expr> _field_Default;
	

};
inline jule::Bool _1ad7102ee_FieldDecl_eq(_1ad7102ee_FieldDecl *_self_, _1ad7102ee_FieldDecl _other_);


struct _1ad710be5_StructDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ad7102ee_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1ad6e45d0_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> _field_Generics;
	

};
struct _1ad711432_TraitDecl {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ad706d73_FnDecl>> _field_Methods;
	

};
struct _1ad711a92_Impl {
	jule::Ptr<_1ad6ceb70_Token> _field_End;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Base;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ad706d73_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1ad70802d_VarDecl>> _field_Statics;
	

};
inline jule::Bool _1ad7d4604_Eq(_1ad778ec2_Const* _self_, _1ad778ec2_Const _25814_x);
inline jule::Bool _1ad7d4945_Lt(_1ad778ec2_Const* _self_, _1ad778ec2_Const _28514_x);
inline jule::Bool _1ad7d4c86_LtEq(_1ad778ec2_Const* _self_, _1ad778ec2_Const _30816_x);
inline jule::Bool _1ad7d50c7_Gt(_1ad778ec2_Const* _self_, _1ad778ec2_Const _33114_x);
inline jule::Bool _1ad7d5418_GtEq(_1ad778ec2_Const* _self_, _1ad778ec2_Const _35416_x);
struct _1ad778ec2_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

};
struct _1ad712ac6_Field {
	jule::Ptr<_1ad7159ec_Struct> _field_Owner;
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1ad9c0ca7_TypeSymbol> _field_Kind;
	jule::Ptr<_1ad6e94e7_Expr> _field_Default;
	

};
inline jule::Bool _1ad712ac6_Field_eq(_1ad712ac6_Field *_self_, _1ad712ac6_Field _other_);


struct _1ad714ad9_Operators {
	jule::Ptr<_1ad7ea84b_FnIns> _field_Eq;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Gt;
	jule::Ptr<_1ad7ea84b_FnIns> _field_GtEq;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Lt;
	jule::Ptr<_1ad7ea84b_FnIns> _field_LtEq;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Shl;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Shr;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Add;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Sub;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Div;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Mul;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Mod;
	jule::Ptr<_1ad7ea84b_FnIns> _field_BitAnd;
	jule::Ptr<_1ad7ea84b_FnIns> _field_BitOr;
	jule::Ptr<_1ad7ea84b_FnIns> _field_BitXor;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Neg;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Pos;
	jule::Ptr<_1ad7ea84b_FnIns> _field_BitNot;
	jule::Ptr<_1ad7ea84b_FnIns> _field_AddAssign;
	jule::Ptr<_1ad7ea84b_FnIns> _field_SubAssign;
	jule::Ptr<_1ad7ea84b_FnIns> _field_DivAssign;
	jule::Ptr<_1ad7ea84b_FnIns> _field_MulAssign;
	jule::Ptr<_1ad7ea84b_FnIns> _field_ModAssign;
	jule::Ptr<_1ad7ea84b_FnIns> _field_ShlAssign;
	jule::Ptr<_1ad7ea84b_FnIns> _field_ShrAssign;
	jule::Ptr<_1ad7ea84b_FnIns> _field_BitOrAssign;
	jule::Ptr<_1ad7ea84b_FnIns> _field_BitAndAssign;
	jule::Ptr<_1ad7ea84b_FnIns> _field_BitXorAssign;
	

};
inline jule::Bool _1ad714ad9_Operators_eq(_1ad714ad9_Operators *_self_, _1ad714ad9_Operators _other_);


struct _1ad7159ec_Struct {
	jule::Ptr<_1ad90ed6c_sema> _field_sema;
	jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _field_Uses;
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ad712ac6_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1ad7e778d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1ad6e45d0_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1ad802ea2_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1ad718857_StructIns>> _field_Instances;
	

};
struct _1ad717ca7_FieldIns {
	jule::Ptr<_1ad718857_StructIns> _field_Owner;
	jule::Ptr<_1ad712ac6_Field> _field_Decl;
	jule::Ptr<_1ad9b8596_TypeKind> _field_Kind;
	jule::Ptr<_1ad985b90_Data> _field_Default;
	

};
inline jule::Bool _1ad717ca7_FieldIns_eq(_1ad717ca7_FieldIns *_self_, _1ad717ca7_FieldIns _other_);


struct _1ad718857_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1ad7159ec_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ad717ca7_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1ad7e778d_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1ad8ced70_ReferenceStack> _field_Refers;
	_1ad714ad9_Operators _field_Operators;
	

};
struct _1ad7d9dac_OperandExprModel {
	jule::Ptr<_1ad9b8596_TypeKind> _field_Kind;
	jule::Any _field_Model;
	

};
inline jule::Bool _1ad7d9dac_OperandExprModel_eq(_1ad7d9dac_OperandExprModel *_self_, _1ad7d9dac_OperandExprModel _other_);


struct _1ad7da3a7_BinaryExprModel {
	jule::Ptr<_1ad7d9dac_OperandExprModel> _field_Left;
	jule::Ptr<_1ad7d9dac_OperandExprModel> _field_Right;
	jule::Ptr<_1ad6ceb70_Token> _field_Op;
	

};
inline jule::Bool _1ad7da3a7_BinaryExprModel_eq(_1ad7da3a7_BinaryExprModel *_self_, _1ad7da3a7_BinaryExprModel _other_);


struct _1ad7da781_UnaryExprModel {
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	jule::Ptr<_1ad6ceb70_Token> _field_Op;
	

};
inline jule::Bool _1ad7da781_UnaryExprModel_eq(_1ad7da781_UnaryExprModel *_self_, _1ad7da781_UnaryExprModel _other_);


struct _1ad7dacae_StructArgExprModel {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad717ca7_FieldIns> _field_Field;
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	

};
inline jule::Bool _1ad7dacae_StructArgExprModel_eq(_1ad7dacae_StructArgExprModel *_self_, _1ad7dacae_StructArgExprModel _other_);


struct _1ad7db155_StructLitExprModel {
	jule::Ptr<_1ad718857_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1ad7dacae_StructArgExprModel>> _field_Args;
	

};
struct _1ad7db452_AllocStructLitExprModel {
	jule::Ptr<_1ad7db155_StructLitExprModel> _field_Lit;
	

};
inline jule::Bool _1ad7db452_AllocStructLitExprModel_eq(_1ad7db452_AllocStructLitExprModel *_self_, _1ad7db452_AllocStructLitExprModel _other_);


struct _1ad7db9d5_CastingExprModel {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	jule::Ptr<_1ad9b8596_TypeKind> _field_Kind;
	jule::Ptr<_1ad9b8596_TypeKind> _field_ExprKind;
	

};
inline jule::Bool _1ad7db9d5_CastingExprModel_eq(_1ad7db9d5_CastingExprModel *_self_, _1ad7db9d5_CastingExprModel _other_);


struct _1ad7dc387_FnCallExprModel {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1ad8b136d_Scope> _field_Except;
	jule::Bool _field_Assigned;
	

};
struct _1ad7dc761_SliceExprModel {
	jule::Ptr<_1ad9b8596_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1ad7dcc17_IndexingExprModel {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	jule::Ptr<_1ad985b90_Data> _field_Index;
	

};
inline jule::Bool _1ad7dcc17_IndexingExprModel_eq(_1ad7dcc17_IndexingExprModel *_self_, _1ad7dcc17_IndexingExprModel _other_);


struct _1ad7dd1bd_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _field_Captured;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Func;
	jule::Bool _field_Global;
	

};
struct _1ad7dd597_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
	

};
inline jule::Bool _1ad7dd597_KeyValPairExprModel_eq(_1ad7dd597_KeyValPairExprModel *_self_, _1ad7dd597_KeyValPairExprModel _other_);


struct _1ad7dd971_MapExprModel {
	jule::Ptr<_1ad9c7352_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1ad7dd597_KeyValPairExprModel>> _field_Entries;
	

};
struct _1ad7de004_SlicingExprModel {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1ad7de004_SlicingExprModel_eq(_1ad7de004_SlicingExprModel *_self_, _1ad7de004_SlicingExprModel _other_);


struct _1ad7de587_TraitSubIdentExprModel {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1ad7e778d_Fn> _field_Method;
	jule::Ptr<_1ad802ea2_Trait> _field_Trt;
	

};
inline jule::Bool _1ad7de587_TraitSubIdentExprModel_eq(_1ad7de587_TraitSubIdentExprModel *_self_, _1ad7de587_TraitSubIdentExprModel _other_);


struct _1ad7dee28_StructSubIdentExprModel {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Method;
	jule::Ptr<_1ad717ca7_FieldIns> _field_Field;
	jule::Ptr<_1ad718857_StructIns> _field_Owner;
	

};
inline jule::Bool _1ad7dee28_StructSubIdentExprModel_eq(_1ad7dee28_StructSubIdentExprModel *_self_, _1ad7dee28_StructSubIdentExprModel _other_);


struct _1ad7e02be_StructStaticIdentExprModel {
	jule::Ptr<_1ad718857_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1ad7ea84b_FnIns> _field_Method;
	

};
inline jule::Bool _1ad7e02be_StructStaticIdentExprModel_eq(_1ad7e02be_StructStaticIdentExprModel *_self_, _1ad7e02be_StructStaticIdentExprModel _other_);


struct _1ad7e0698_ArrayExprModel {
	jule::Ptr<_1ad9c7ece_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1ad7e0995_TupleExprModel {
	jule::Slice<jule::Ptr<_1ad985b90_Data>> _field_Datas;
	

};
struct _1ad7e0d6e_BuiltinOutCallExprModel {
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1ad7e0d6e_BuiltinOutCallExprModel_eq(_1ad7e0d6e_BuiltinOutCallExprModel *_self_, _1ad7e0d6e_BuiltinOutCallExprModel _other_);


struct _1ad7e1248_BuiltinOutlnCallExprModel {
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1ad7e1248_BuiltinOutlnCallExprModel_eq(_1ad7e1248_BuiltinOutlnCallExprModel *_self_, _1ad7e1248_BuiltinOutlnCallExprModel _other_);


struct _1ad7e1622_BuiltinNewCallExprModel {
	jule::Ptr<_1ad9b8596_TypeKind> _field_Kind;
	jule::Any _field_Init;
	

};
inline jule::Bool _1ad7e1622_BuiltinNewCallExprModel_eq(_1ad7e1622_BuiltinNewCallExprModel *_self_, _1ad7e1622_BuiltinNewCallExprModel _other_);


struct _1ad7e19eb_BuiltinPanicCallExprModel {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1ad7e19eb_BuiltinPanicCallExprModel_eq(_1ad7e19eb_BuiltinPanicCallExprModel *_self_, _1ad7e19eb_BuiltinPanicCallExprModel _other_);


struct _1ad7e1ea2_BuiltinMakeCallExprModel {
	jule::Ptr<_1ad9b8596_TypeKind> _field_Kind;
	jule::Any _field_Len;
	jule::Any _field_Cap;
	

};
inline jule::Bool _1ad7e1ea2_BuiltinMakeCallExprModel_eq(_1ad7e1ea2_BuiltinMakeCallExprModel *_self_, _1ad7e1ea2_BuiltinMakeCallExprModel _other_);


struct _1ad7e237b_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
	

};
inline jule::Bool _1ad7e237b_BuiltinAppendCallExprModel_eq(_1ad7e237b_BuiltinAppendCallExprModel *_self_, _1ad7e237b_BuiltinAppendCallExprModel _other_);


struct _1ad7e2678_BuiltinLenCallExprModel {
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	

};
inline jule::Bool _1ad7e2678_BuiltinLenCallExprModel_eq(_1ad7e2678_BuiltinLenCallExprModel *_self_, _1ad7e2678_BuiltinLenCallExprModel _other_);


struct _1ad7e2975_BuiltinCapCallExprModel {
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	

};
inline jule::Bool _1ad7e2975_BuiltinCapCallExprModel_eq(_1ad7e2975_BuiltinCapCallExprModel *_self_, _1ad7e2975_BuiltinCapCallExprModel _other_);


struct _1ad7e2d4e_BuiltinDeleteCallExprModel {
	jule::Ptr<_1ad985b90_Data> _field_Dest;
	jule::Ptr<_1ad985b90_Data> _field_Key;
	

};
inline jule::Bool _1ad7e2d4e_BuiltinDeleteCallExprModel_eq(_1ad7e2d4e_BuiltinDeleteCallExprModel *_self_, _1ad7e2d4e_BuiltinDeleteCallExprModel _other_);


struct _1ad7e3228_BuiltinCopyCallExprModel {
	jule::Ptr<_1ad985b90_Data> _field_Dest;
	jule::Ptr<_1ad985b90_Data> _field_Src;
	

};
inline jule::Bool _1ad7e3228_BuiltinCopyCallExprModel_eq(_1ad7e3228_BuiltinCopyCallExprModel *_self_, _1ad7e3228_BuiltinCopyCallExprModel _other_);


struct _1ad7e3602_BuiltinErrorCallExprModel {
	jule::Ptr<_1ad7ea84b_FnIns> _field_Func;
	jule::Ptr<_1ad985b90_Data> _field_Err;
	

};
inline jule::Bool _1ad7e3602_BuiltinErrorCallExprModel_eq(_1ad7e3602_BuiltinErrorCallExprModel *_self_, _1ad7e3602_BuiltinErrorCallExprModel _other_);


struct _1ad7e38ee_SizeofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1ad7e38ee_SizeofExprModel_eq(_1ad7e38ee_SizeofExprModel *_self_, _1ad7e38ee_SizeofExprModel _other_);


struct _1ad7e40a3_AlignofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1ad7e40a3_AlignofExprModel_eq(_1ad7e40a3_AlignofExprModel *_self_, _1ad7e40a3_AlignofExprModel _other_);


struct _1ad7e4290_RuneExprModel {
	jule::I32 _field_Code;
	

};
inline jule::Bool _1ad7e4290_RuneExprModel_eq(_1ad7e4290_RuneExprModel *_self_, _1ad7e4290_RuneExprModel _other_);


struct _1ad7e4614_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

};
struct _1ad7e4911_FreeExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1ad7e4911_FreeExprModel_eq(_1ad7e4911_FreeExprModel *_self_, _1ad7e4911_FreeExprModel _other_);


struct _1ad7e5538_RetType {
	jule::Ptr<_1ad9c0ca7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _field_Idents;
	

};
struct _1ad7e5cb9_Param {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1ad9c0ca7_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1ad7e5cb9_Param_eq(_1ad7e5cb9_Param *_self_, _1ad7e5cb9_Param _other_);


struct _1ad7e778d_Fn {
	jule::Ptr<_1ad90ed6c_sema> _field_sema;
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ad6e45d0_Directive>> _field_Directives;
	jule::Ptr<_1ad7051d4_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> _field_Generics;
	jule::Ptr<_1ad7e5538_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1ad7e5cb9_Param>> _field_Params;
	jule::Ptr<_1ad7159ec_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>> _field_Instances;
	

};
struct _1ad7e96e6_ParamIns {
	jule::Ptr<_1ad7e5cb9_Param> _field_Decl;
	jule::Ptr<_1ad9b8596_TypeKind> _field_Kind;
	

};
inline jule::Bool _1ad7e96e6_ParamIns_eq(_1ad7e96e6_ParamIns *_self_, _1ad7e96e6_ParamIns _other_);


struct _1ad7ea84b_FnIns {
	jule::Ptr<_1ad718857_StructIns> _field_Owner;
	jule::Ptr<_1ad7e778d_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>> _field_Params;
	jule::Ptr<_1ad9b8596_TypeKind> _field_Result;
	jule::Ptr<_1ad8b136d_Scope> _field_Scope;
	jule::Ptr<_1ad8ced70_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*> _field_caller;
	jule::Bool _field_reloaded;
	

};
struct _1ad7eda91_SymTab {
	jule::Ptr<_1ad6d5527_Fileset> _field_File;
	jule::Slice<_1ad8d11d4_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ad7e778d_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1ad802ea2_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1ad805658_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1ad806d63_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1ad8abc5e_Impl>> _field_Impls;
	

};
struct _1ad802ea2_Trait {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1ad9c0ca7_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ad7e778d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _field_Implemented;
	

};
struct _1ad804b0d_EnumItem {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ad986d17_Value> _field_Value;
	

};
inline jule::Bool _1ad804b0d_EnumItem_eq(_1ad804b0d_EnumItem *_self_, _1ad804b0d_EnumItem _other_);


struct _1ad805658_Enum {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1ad9c0ca7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ad804b0d_EnumItem>> _field_Items;
	

};
struct _1ad80678b_TypeEnumItem {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ad9c0ca7_TypeSymbol> _field_Kind;
	

};
inline jule::Bool _1ad80678b_TypeEnumItem_eq(_1ad80678b_TypeEnumItem *_self_, _1ad80678b_TypeEnumItem _other_);


struct _1ad806d63_TypeEnum {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ad80678b_TypeEnumItem>> _field_Items;
	

};
struct _1ad87db21_comptimeRange {
	jule::Trait _field_kind;
	

};
inline jule::Bool _1ad87db21_comptimeRange_eq(_1ad87db21_comptimeRange *_self_, _1ad87db21_comptimeRange _other_);


struct _1ad8844d9_comptimeStructField {
	jule::Ptr<_1ad717ca7_FieldIns> _field_field;
	

};
inline jule::Bool _1ad8844d9_comptimeStructField_eq(_1ad8844d9_comptimeStructField *_self_, _1ad8844d9_comptimeStructField _other_);


struct _1ad885c7c_comptimeStructFields {
	jule::Slice<jule::Ptr<_1ad717ca7_FieldIns>> _field_fields;
	

};
struct _1ad88770c_comptimeStatic {
	jule::Ptr<_1ad933a83_Var> _field_field;
	

};
inline jule::Bool _1ad88770c_comptimeStatic_eq(_1ad88770c_comptimeStatic *_self_, _1ad88770c_comptimeStatic _other_);


struct _1ad888eb1_comptimeStatics {
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _field_fields;
	

};
struct _1ad88a930_comptimeEnumField {
	jule::Ptr<_1ad804b0d_EnumItem> _field_field;
	

};
inline jule::Bool _1ad88a930_comptimeEnumField_eq(_1ad88a930_comptimeEnumField *_self_, _1ad88a930_comptimeEnumField _other_);


struct _1ad88bc3e_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1ad804b0d_EnumItem>> _field_fields;
	

};
struct _1ad88d746_comptimeParam {
	jule::Ptr<_1ad7e96e6_ParamIns> _field_param;
	

};
inline jule::Bool _1ad88d746_comptimeParam_eq(_1ad88d746_comptimeParam *_self_, _1ad88d746_comptimeParam _other_);


struct _1ad8905a0_comptimeParams {
	jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>> _field_params;
	

};
struct _1ad891e0e_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1ad89387d_comptimeTypeInfo>> _field_types;
	

};
struct _1ad89387d_comptimeTypeInfo {
	jule::Ptr<_1ad9b8596_TypeKind> _field_base;
	

};
inline jule::Bool _1ad89387d_comptimeTypeInfo_eq(_1ad89387d_comptimeTypeInfo *_self_, _1ad89387d_comptimeTypeInfo _other_);


struct _1ad899983_comptimeValue {
	jule::Ptr<_1ad985b90_Data> _field_data;
	

};
inline jule::Bool _1ad899983_comptimeValue_eq(_1ad899983_comptimeValue *_self_, _1ad899983_comptimeValue _other_);


struct _1ad89c6de_comptimeFiles {
	jule::Slice<jule::Ptr<_1ad7eda91_SymTab>> _field_files;
	

};
struct _1ad89e15d_comptimeFile {
	jule::Ptr<_1ad7eda91_SymTab> _field_file;
	

};
inline jule::Bool _1ad89e15d_comptimeFile_eq(_1ad89e15d_comptimeFile *_self_, _1ad89e15d_comptimeFile _other_);


struct _1ad8a0c86_comptimeDecls {
	jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>> _field_decls;
	

};
struct _1ad8a3074_comptimeDecl {
	jule::Any _field_decl;
	

};
inline jule::Bool _1ad8a3074_comptimeDecl_eq(_1ad8a3074_comptimeDecl *_self_, _1ad8a3074_comptimeDecl _other_);


struct _1ad8a9960_constraintChecker {
	jule::Ptr<_1ad90ed6c_sema> _field_s;
	jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _field_genericsA;
	jule::Ptr<_1ad7ea84b_FnIns> _field_fi;
	jule::Ptr<_1ad718857_StructIns> _field_si;
	jule::Ptr<_1ad6ceb70_Token> _field_et;
	jule::Bool _field_uniq;
	

};
struct _1ad8abc5e_Impl {
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Base;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ad7e778d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _field_Statics;
	

};
struct _1ad8b136d_Scope {
	jule::Ptr<_1ad8b136d_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I64 _field_ChildIndex;
	jule::I64 _field_StmtIndex;
	

};
struct _1ad8b178b_If {
	jule::Any _field_Expr;
	jule::Ptr<_1ad8b136d_Scope> _field_Scope;
	

};
inline jule::Bool _1ad8b178b_If_eq(_1ad8b178b_If *_self_, _1ad8b178b_If _other_);


struct _1ad8b1a88_Else {
	jule::Ptr<_1ad8b136d_Scope> _field_Scope;
	

};
inline jule::Bool _1ad8b1a88_Else_eq(_1ad8b1a88_Else *_self_, _1ad8b1a88_Else _other_);


struct _1ad8b1ea6_Conditional {
	jule::Slice<jule::Ptr<_1ad8b178b_If>> _field_Elifs;
	jule::Ptr<_1ad8b1a88_Else> _field_Default;
	

};
struct _1ad8b22a3_InfIter {
	jule::Ptr<_1ad8b136d_Scope> _field_Scope;
	

};
inline jule::Bool _1ad8b22a3_InfIter_eq(_1ad8b22a3_InfIter *_self_, _1ad8b22a3_InfIter _other_);


struct _1ad8b2759_WhileIter {
	jule::Ptr<_1ad8b136d_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
	

};
inline jule::Bool _1ad8b2759_WhileIter_eq(_1ad8b2759_WhileIter *_self_, _1ad8b2759_WhileIter _other_);


struct _1ad8b31a5_RangeIter {
	jule::Ptr<_1ad8b136d_Scope> _field_Scope;
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	jule::Ptr<_1ad933a83_Var> _field_KeyA;
	jule::Ptr<_1ad933a83_Var> _field_KeyB;
	

};
inline jule::Bool _1ad8b31a5_RangeIter_eq(_1ad8b31a5_RangeIter *_self_, _1ad8b31a5_RangeIter _other_);


struct _1ad8b353a_ContSt {
	jule::Uintptr _field_It;
	

};
inline jule::Bool _1ad8b353a_ContSt_eq(_1ad8b353a_ContSt *_self_, _1ad8b353a_ContSt _other_);


struct _1ad8b3914_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
	

};
inline jule::Bool _1ad8b3914_BreakSt_eq(_1ad8b3914_BreakSt *_self_, _1ad8b3914_BreakSt _other_);


struct _1ad8b3dba_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1ad8b136d_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1ad8b3dba_Label_eq(_1ad8b3dba_Label *_self_, _1ad8b3dba_Label _other_);


struct _1ad8b452a_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Ptr<_1ad8b3dba_Label> _field_Label;
	jule::Ptr<_1ad8b136d_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1ad8b452a_GotoSt_eq(_1ad8b452a_GotoSt *_self_, _1ad8b452a_GotoSt _other_);


struct _1ad8b4904_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
	

};
inline jule::Bool _1ad8b4904_Postfix_eq(_1ad8b4904_Postfix *_self_, _1ad8b4904_Postfix _other_);


struct _1ad8b4daa_Assign {
	jule::Ptr<_1ad7d9dac_OperandExprModel> _field_Left;
	jule::Ptr<_1ad7d9dac_OperandExprModel> _field_Right;
	jule::Ptr<_1ad6ceb70_Token> _field_Op;
	

};
inline jule::Bool _1ad8b4daa_Assign_eq(_1ad8b4daa_Assign *_self_, _1ad8b4daa_Assign _other_);


struct _1ad8b5361_MultiAssign {
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1ad985b90_Data>> _field_Left;
	jule::Any _field_Right;
	

};
struct _1ad8b5a9d_Match {
	jule::Ptr<_1ad8b136d_Scope> _field_Scope;
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1ad8b65c6_Case>> _field_Cases;
	jule::Ptr<_1ad8b65c6_Case> _field_Default;
	

};
struct _1ad8b65c6_Case {
	jule::Ptr<_1ad8b5a9d_Match> _field_Owner;
	jule::Ptr<_1ad8b136d_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1ad985b90_Data>> _field_Exprs;
	jule::Ptr<_1ad8b65c6_Case> _field_Next;
	

};
struct _1ad8b6cbe_FallSt {
	jule::Uintptr _field_DestCase;
	

};
inline jule::Bool _1ad8b6cbe_FallSt_eq(_1ad8b6cbe_FallSt *_self_, _1ad8b6cbe_FallSt _other_);


struct _1ad8b7165_RetSt {
	jule::Ptr<_1ad7ea84b_FnIns> _field_Func;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1ad8b7165_RetSt_eq(_1ad8b7165_RetSt *_self_, _1ad8b7165_RetSt _other_);


struct _1ad8b761b_scopeLabel {
	jule::Ptr<_1ad6ceb70_Token> _field_token;
	jule::Ptr<_1ad8b3dba_Label> _field_node;
	jule::Bool _field_used;
	

};
inline jule::Bool _1ad8b761b_scopeLabel_eq(_1ad8b761b_scopeLabel *_self_, _1ad8b761b_scopeLabel _other_);


struct _1ad8b860b_scopeChecker {
	jule::Ptr<_1ad6ceb70_Token> _field_calledFrom;
	jule::Ptr<_1ad90ed6c_sema> _field_s;
	jule::Ptr<_1ad7ea84b_FnIns> _field_owner;
	jule::Ptr<_1ad8b860b_scopeChecker> _field_parent;
	jule::I64 _field_childIndex;
	jule::Ptr<_1ad7eda91_SymTab> _field_table;
	jule::Ptr<_1ad8b136d_Scope> _field_scope;
	jule::Ptr<_1ad7051d4_ScopeTree> _field_tree;
	jule::Ptr<_1ad7ea84b_FnIns> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1ad933a83_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1ad8b761b_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ad8b452a_GotoSt>>> _field_gotos;
	jule::I64 _field_i;
	

};
inline jule::Bool _1ad8b860b_scopeChecker_eq(_1ad8b860b_scopeChecker *_self_, _1ad8b860b_scopeChecker _other_);


struct _1ad8cc499_directiveChecker {
	jule::Ptr<_1ad90ed6c_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>> _field_d;
	jule::Any _field_o;
	

};
inline jule::Bool _1ad8cc499_directiveChecker_eq(_1ad8cc499_directiveChecker *_self_, _1ad8cc499_directiveChecker _other_);


struct _1ad8ced70_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

};
struct _1ad8d11d4_Pass {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Text;
	

};
inline jule::Bool _1ad8d11d4_Pass_eq(_1ad8d11d4_Pass *_self_, _1ad8d11d4_Pass _other_);


struct _1ad8d5b89_symBuilder {
	jule::Ptr<_1ad8d5b89_symBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1dd356476_Log> _field_errors;
	jule::Ptr<_1ad6e325a_AST> _field_ast;
	jule::Ptr<_1ad7eda91_SymTab> _field_table;
	

};
struct _1ad8e1bea_ImportInfo {
	jule::Ptr<_1ad70d033_UseDecl> _field_Decl;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Ptr<_1ad8e446c_Package> _field_Package;
	jule::I64 _field_ModId;
	

};
inline jule::Bool _1ad8e1bea_ImportInfo_eq(_1ad8e1bea_ImportInfo *_self_, _1ad8e1bea_ImportInfo _other_);


struct _1ad8e446c_Package {
	jule::Slice<jule::Ptr<_1ad7eda91_SymTab>> _field_Files;
	

};
struct _1ad90e245_commonSemaMeta {
	jule::Slice<jule::Ptr<_1ad89387d_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1ad8e1bea_ImportInfo> _field_runtime;
	

};
struct _1ad90ed6c_sema {
	jule::Slice<_1dd356476_Log> _field_errors;
	jule::Slice<jule::Ptr<_1ad7eda91_SymTab>> _field_files;
	jule::Ptr<_1ad7eda91_SymTab> _field_file;
	jule::I64 _field_flags;
	jule::Ptr<_1ad90e245_commonSemaMeta> _field_meta;
	

};
struct _1ad93009b_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
	

};
struct _1ad933a83_Var {
	jule::Ptr<_1ad8b136d_Scope> _field_Scope;
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1ad9c0ca7_TypeSymbol> _field_Kind;
	jule::Ptr<_1ad986d17_Value> _field_Value;
	jule::Ptr<_1ad8ced70_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1ad6e45d0_Directive>> _field_Directives;
	jule::I64 _field_RetOrder;
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _field_Depends;
	

};
struct _1ad93490d_FuncPattern {
	

};
struct _1ad9721ba_typeCompatibilityChecker {
	jule::Ptr<_1ad90ed6c_sema> _field_s;
	jule::Ptr<_1ad9b8596_TypeKind> _field_dest;
	jule::Ptr<_1ad9b8596_TypeKind> _field_src;
	jule::Ptr<_1ad6ceb70_Token> _field_errorToken;
	

};
inline jule::Bool _1ad9721ba_typeCompatibilityChecker_eq(_1ad9721ba_typeCompatibilityChecker *_self_, _1ad9721ba_typeCompatibilityChecker _other_);


struct _1ad974046_assignTypeChecker {
	jule::Ptr<_1ad90ed6c_sema> _field_s;
	jule::Ptr<_1ad9b8596_TypeKind> _field_dest;
	jule::Ptr<_1ad985b90_Data> _field_d;
	jule::Ptr<_1ad6ceb70_Token> _field_errorToken;
	jule::Ptr<_1ad8ced70_ReferenceStack> _field_refers;
	

};
inline jule::Bool _1ad974046_assignTypeChecker_eq(_1ad974046_assignTypeChecker *_self_, _1ad974046_assignTypeChecker _other_);


struct _1ad97591b_dynamicTypeAnnotation {
	jule::Ptr<_1ad9878b7_eval> _field_e;
	jule::Ptr<_1ad7ea84b_FnIns> _field_f;
	jule::Ptr<_1ad7e96e6_ParamIns> _field_p;
	jule::Ptr<_1ad985b90_Data> _field_a;
	jule::Ptr<_1ad6ceb70_Token> _field_errorToken;
	jule::Ptr<_1ad9b8596_TypeKind>* _field_k;
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _field_ignored;
	

};
struct _1ad97a778_fnCallArgChecker {
	jule::Ptr<_1ad9878b7_eval> _field_e;
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _field_args;
	jule::Ptr<_1ad6ceb70_Token> _field_errorToken;
	jule::Ptr<_1ad7ea84b_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _field_ignored;
	

};
struct _1ad97d6b0_structLitChecker {
	jule::Ptr<_1ad9878b7_eval> _field_e;
	jule::Ptr<_1ad6ceb70_Token> _field_errorToken;
	jule::Ptr<_1ad718857_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1ad7dacae_StructArgExprModel>> _field_args;
	

};
struct _1ad980492_rangeChecker {
	jule::Ptr<_1ad8b860b_scopeChecker> _field_sc;
	jule::Ptr<_1ad709da9_RangeKind> _field_rang;
	jule::Ptr<_1ad8b31a5_RangeIter> _field_Kind;
	jule::Ptr<_1ad985b90_Data> _field_d;
	

};
inline jule::Bool _1ad980492_rangeChecker_eq(_1ad980492_rangeChecker *_self_, _1ad980492_rangeChecker _other_);


struct _1ad982c03_retTypeChecker {
	jule::Ptr<_1ad8b860b_scopeChecker> _field_sc;
	jule::Ptr<_1ad7ea84b_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _field_exprs;
	jule::Ptr<_1ad6ceb70_Token> _field_errorToken;
	jule::Any _field_model;
	

};
struct _1ad985b90_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1ad9b8596_TypeKind> _field_Kind;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1ad778ec2_Const> _field_Constant;
	

};
inline jule::Bool _1ad985b90_Data_eq(_1ad985b90_Data *_self_, _1ad985b90_Data _other_);


struct _1ad986d17_Value {
	jule::Ptr<_1ad6e94e7_Expr> _field_Expr;
	jule::Ptr<_1ad985b90_Data> _field_Data;
	

};
inline jule::Bool _1ad986d17_Value_eq(_1ad986d17_Value *_self_, _1ad986d17_Value _other_);


struct _1ad9878b7_eval {
	jule::Ptr<_1ad90ed6c_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1ad9b8596_TypeKind> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_immutable;
	jule::Bool _field_ignored;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1ad933a83_Var> _field_owner;
	jule::Ptr<_1ad717ca7_FieldIns> _field_field;
	jule::Bool _field_arg;
	

};
inline jule::Bool _1ad9878b7_eval_eq(_1ad9878b7_eval *_self_, _1ad9878b7_eval _other_);


struct _1ad9a6bb1_unaryEval {
	jule::Ptr<_1ad9878b7_eval> _field_e;
	jule::Ptr<_1ad985b90_Data> _field_d;
	jule::Ptr<_1ad6eb5a4_UnaryExpr> _field_u;
	

};
inline jule::Bool _1ad9a6bb1_unaryEval_eq(_1ad9a6bb1_unaryEval *_self_, _1ad9a6bb1_unaryEval _other_);


struct _1ad9a8b4c_binaryEval {
	jule::Ptr<_1ad9878b7_eval> _field_e;
	jule::Ptr<_1ad985b90_Data> _field_l;
	jule::Ptr<_1ad985b90_Data> _field_r;
	jule::Ptr<_1ad6ceb70_Token> _field_op;
	

};
inline jule::Bool _1ad9a8b4c_binaryEval_eq(_1ad9a8b4c_binaryEval *_self_, _1ad9a8b4c_binaryEval _other_);


struct _1ad9b6de1_InsGeneric {
	jule::Ptr<_1ad9b8596_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _field_Constraint;
	

};
struct _1ad9b77a4_TypeAlias {
	jule::Ptr<_1ad7051d4_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ad9c0ca7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _field_Generics;
	

};
struct _1ad9b8596_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
	

};
inline jule::Bool _1ad9b8596_TypeKind_eq(_1ad9b8596_TypeKind *_self_, _1ad9b8596_TypeKind _other_);


struct _1ad9c0ca7_TypeSymbol {
	jule::Ptr<_1ad6e51b3_TypeDecl> _field_Decl;
	jule::Ptr<_1ad9b8596_TypeKind> _field_Kind;
	

};
inline jule::Bool _1ad9c0ca7_TypeSymbol_eq(_1ad9c0ca7_TypeSymbol *_self_, _1ad9c0ca7_TypeSymbol _other_);


struct _1ad9c16ae_Prim {
	jule::Str _field_Kind;
	

};
inline jule::Bool _1ad9c16ae_Prim_eq(_1ad9c16ae_Prim *_self_, _1ad9c16ae_Prim _other_);


struct _1ad9c51da_Sptr {
	jule::Ptr<_1ad9b8596_TypeKind> _field_Elem;
	

};
inline jule::Bool _1ad9c51da_Sptr_eq(_1ad9c51da_Sptr *_self_, _1ad9c51da_Sptr _other_);


struct _1ad9c5bad_Slc {
	jule::Ptr<_1ad9b8596_TypeKind> _field_Elem;
	

};
inline jule::Bool _1ad9c5bad_Slc_eq(_1ad9c5bad_Slc *_self_, _1ad9c5bad_Slc _other_);


struct _1ad9c67a2_Tuple {
	jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _field_Types;
	

};
struct _1ad9c7352_Map {
	jule::Ptr<_1ad9b8596_TypeKind> _field_Key;
	jule::Ptr<_1ad9b8596_TypeKind> _field_Val;
	

};
inline jule::Bool _1ad9c7352_Map_eq(_1ad9c7352_Map *_self_, _1ad9c7352_Map _other_);


struct _1ad9c7ece_Arr {
	jule::Bool _field_Auto;
	jule::I64 _field_N;
	jule::Ptr<_1ad9b8596_TypeKind> _field_Elem;
	

};
inline jule::Bool _1ad9c7ece_Arr_eq(_1ad9c7ece_Arr *_self_, _1ad9c7ece_Arr _other_);


struct _1ad9c89a2_Ptr {
	jule::Ptr<_1ad9b8596_TypeKind> _field_Elem;
	

};
inline jule::Bool _1ad9c89a2_Ptr_eq(_1ad9c89a2_Ptr *_self_, _1ad9c89a2_Ptr _other_);


struct _1ad9c99a3_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
	

};
inline jule::Bool _1ad9c99a3_referencer_eq(_1ad9c99a3_referencer *_self_, _1ad9c99a3_referencer _other_);


struct _1ad9ca993_typeChecker {
	jule::Ptr<_1ad90ed6c_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1ad9c99a3_referencer> _field_referencer;
	jule::Ptr<_1ad8ced70_ReferenceStack> _field_refers;
	jule::Ptr<_1ad6ceb70_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1ad9b77a4_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
	

};
struct _1ad9d3a56_identTypeLookup {
	

};
inline jule::Bool _1ad9d3a56_identTypeLookup_eq(_1ad9d3a56_identTypeLookup *_self_, _1ad9d3a56_identTypeLookup _other_);


struct _1bb01b25c_FileInfo {
	jule::Ptr<_1ad6e325a_AST> _field_Ast;
	jule::Slice<_1dd356476_Log> _field_Errors;
	

};
struct _1bb0673c9_stmt {
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _field_tokens;
	jule::Bool _field_terminated;
	

};
struct _1bb067c6a_scopeParser {
	jule::Ptr<_1bb085e64_parser> _field_p;
	jule::Ptr<_1ad7051d4_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1bb0673c9_stmt>> _field_stmts;
	jule::I64 _field_pos;
	

};
struct _1bb0756a1_exprBuilder {
	jule::Ptr<_1bb085e64_parser> _field_p;
	

};
inline jule::Bool _1bb0756a1_exprBuilder_eq(_1bb0756a1_exprBuilder *_self_, _1bb0756a1_exprBuilder _other_);


struct _1bb082c85_assignInfo {
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _field_l;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _field_r;
	jule::Ptr<_1ad6ceb70_Token> _field_setter;
	jule::Bool _field_ok;
	

};
struct _1bb085e64_parser {
	jule::Ptr<_1ad6e325a_AST> _field_ast;
	jule::Slice<jule::Ptr<_1ad6e45d0_Directive>> _field_directives;
	jule::Slice<_1dd356476_Log> _field_errors;
	jule::Ptr<_1bb0756a1_exprBuilder> _field_ep;
	

};
struct _1bb09711d_typeBuilder {
	jule::Ptr<_1bb085e64_parser> _field_p;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _field_tokens;
	jule::I64* _field_i;
	jule::Bool _field_err;
	

};
struct _1adb5c6a2_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
	

};
inline jule::Bool _1adb5c6a2_CompileInfo_eq(_1adb5c6a2_CompileInfo *_self_, _1adb5c6a2_CompileInfo _other_);


struct _1adb5da7c_directiveEval {
	jule::Slice<_1dd356476_Log> _field_logs;
	jule::Ptr<_1ad6e45d0_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1bb09b254_Importer {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1bb0a2cd8_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
	

};
struct _1bb0a8e76_OrderedDefines {
	jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _field_Globals;
	

};
struct _1bbed7722_specialCaseDefines {
	jule::Ptr<_1ad7159ec_Struct> _field_runtime_Map;
	jule::Ptr<_1ad7159ec_Struct> _field_runtime_mapIterator;
	

};
inline jule::Bool _1bbed7722_specialCaseDefines_eq(_1bbed7722_specialCaseDefines *_self_, _1bbed7722_specialCaseDefines _other_);


struct _1bbedb171_liveTable {
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1ad718857_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1ad802ea2_Trait>> _field_traits;
	

};
struct _1bbedb627_ObjectDeadCode {
	_1bbedb171_liveTable _field_live;
	jule::Ptr<_1bb09dcd4_IR> _field_ir;
	_1bbed7722_specialCaseDefines _field_scd;
	

};
struct _1bbee0692_scopeDeadCode {
	jule::Ptr<_1bbee0692_scopeDeadCode> _field_parent;
	jule::Ptr<_1ad8b136d_Scope> _field_s;
	jule::I64 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1ad8b3dba_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ad8b452a_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
	

};
inline jule::Bool _1bbee0692_scopeDeadCode_eq(_1bbee0692_scopeDeadCode *_self_, _1bbee0692_scopeDeadCode _other_);


struct _1bbee4c29_exprDeadCode {
	jule::Ptr<_1bbee0692_scopeDeadCode> _field_s;
	

};
inline jule::Bool _1bbee4c29_exprDeadCode_eq(_1bbee4c29_exprDeadCode *_self_, _1bbee4c29_exprDeadCode _other_);


struct _1bbd9506e_ExceptionalForwardingExprModel {
	jule::Ptr<_1ad7dc387_FnCallExprModel> _field_Expr;
	

};
inline jule::Bool _1bbd9506e_ExceptionalForwardingExprModel_eq(_1bbd9506e_ExceptionalForwardingExprModel *_self_, _1bbd9506e_ExceptionalForwardingExprModel _other_);


struct _1bbd952e4_SwapExprModel {
	jule::Ptr<_1ad985b90_Data> _field_Left;
	jule::Ptr<_1ad985b90_Data> _field_Right;
	

};
inline jule::Bool _1bbd952e4_SwapExprModel_eq(_1bbd952e4_SwapExprModel *_self_, _1bbd952e4_SwapExprModel _other_);


struct _1bbd956bd_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
	

};
inline jule::Bool _1bbd956bd_EmptyCompareExprModel_eq(_1bbd956bd_EmptyCompareExprModel *_self_, _1bbd956bd_EmptyCompareExprModel _other_);


struct _1bbd95a42_RefExprModel {
	jule::Ptr<_1ad933a83_Var> _field_Var;
	

};
inline jule::Bool _1bbd95a42_RefExprModel_eq(_1bbd95a42_RefExprModel *_self_, _1bbd95a42_RefExprModel _other_);


struct _1bbd95eb5_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1ad778ec2_Const> _field_Right;
	jule::Bool _field_NotEq;
	

};
inline jule::Bool _1bbd95eb5_StrCompExprModel_eq(_1bbd95eb5_StrCompExprModel *_self_, _1bbd95eb5_StrCompExprModel _other_);


struct _1bbd96548_MutSlicingExprModel {
	jule::Ptr<_1ad6ceb70_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1bbd96548_MutSlicingExprModel_eq(_1bbd96548_MutSlicingExprModel *_self_, _1bbd96548_MutSlicingExprModel _other_);


struct _1bbd96845_UnsafeBinaryExprModel {
	jule::Ptr<_1ad7da3a7_BinaryExprModel> _field_Node;
	

};
inline jule::Bool _1bbd96845_UnsafeBinaryExprModel_eq(_1bbd96845_UnsafeBinaryExprModel *_self_, _1bbd96845_UnsafeBinaryExprModel _other_);


struct _1bbd96bca_UnsafeIndexingExprModel {
	jule::Ptr<_1ad7dcc17_IndexingExprModel> _field_Node;
	

};
inline jule::Bool _1bbd96bca_UnsafeIndexingExprModel_eq(_1bbd96bca_UnsafeIndexingExprModel *_self_, _1bbd96bca_UnsafeIndexingExprModel _other_);


struct _1bbd970a4_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1ad7dc761_SliceExprModel> _field_Elems;
	

};
inline jule::Bool _1bbd970a4_PushToSliceExprModel_eq(_1bbd970a4_PushToSliceExprModel *_self_, _1bbd970a4_PushToSliceExprModel _other_);


struct _1bbd9747d_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
	

};
inline jule::Bool _1bbd9747d_AppendToSliceExprModel_eq(_1bbd9747d_AppendToSliceExprModel *_self_, _1bbd9747d_AppendToSliceExprModel _other_);


struct _1bbd97857_StrRuneIter {
	jule::Ptr<_1ad985b90_Data> _field_Expr;
	jule::Ptr<_1ad8b31a5_RangeIter> _field_Base;
	

};
inline jule::Bool _1bbd97857_StrRuneIter_eq(_1bbd97857_StrRuneIter *_self_, _1bbd97857_StrRuneIter _other_);


struct _1bbd97b54_UnsafeDerefExprModel {
	jule::Ptr<_1ad7da781_UnaryExprModel> _field_Base;
	

};
inline jule::Bool _1bbd97b54_UnsafeDerefExprModel_eq(_1bbd97b54_UnsafeDerefExprModel *_self_, _1bbd97b54_UnsafeDerefExprModel _other_);


struct _1bbd97e51_UnsafeCastingExprModel {
	jule::Ptr<_1ad7db9d5_CastingExprModel> _field_Base;
	

};
inline jule::Bool _1bbd97e51_UnsafeCastingExprModel_eq(_1bbd97e51_UnsafeCastingExprModel *_self_, _1bbd97e51_UnsafeCastingExprModel _other_);


struct _1bbd98a78_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
	

};
inline jule::Bool _1bbd98a78_nilVar_eq(_1bbd98a78_nilVar *_self_, _1bbd98a78_nilVar _other_);


struct _1bbd98db9_nils {
	jule::Slice<_1bbd98a78_nilVar> _field_vars;
	

};
struct _1bbd9ba37_scopeOptimizer {
	jule::Ptr<_1bbd9ba37_scopeOptimizer> _field_parent;
	jule::I64 _field_i;
	jule::Ptr<_1ad8b136d_Scope> _field_scope;
	jule::Ptr<_1bbdab409_data> _field_data;
	

};
inline jule::Bool _1bbd9ba37_scopeOptimizer_eq(_1bbd9ba37_scopeOptimizer *_self_, _1bbd9ba37_scopeOptimizer _other_);


struct _1bbda31d1_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1bbdab409_data> _field_data;
	jule::Ptr<_1bb0a2cd8_ExprInspector> _field_inspector;
	

};
inline jule::Bool _1bbda31d1_exprOptimizer_eq(_1bbda31d1_exprOptimizer *_self_, _1bbda31d1_exprOptimizer _other_);


struct _1bbda848e_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1ad9b8596_TypeKind> _field_kind;
	

};
inline jule::Bool _1bbda848e_dynamicVar_eq(_1bbda848e_dynamicVar *_self_, _1bbda848e_dynamicVar _other_);


struct _1bbda87d0_dynamic {
	jule::Slice<_1bbda848e_dynamicVar> _field_vars;
	

};
struct _1bbdab409_data {
	jule::Ptr<_1bbdacbe1_boundary> _field_boundary;
	jule::Ptr<_1bbd98db9_nils> _field_nils;
	jule::Ptr<_1bbda87d0_dynamic> _field_dynamic;
	

};
inline jule::Bool _1bbdab409_data_eq(_1bbdab409_data *_self_, _1bbdab409_data _other_);


struct _1bbdac8a0_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
	

};
struct _1bbdacbe1_boundary {
	jule::Slice<_1bbdac8a0_boundaryVar> _field_vars;
	

};
struct _1bbee5d4b_Optimizer {
	jule::Ptr<_1bb09dcd4_IR> _field_ir;
	

};
inline jule::Bool _1bbee5d4b_Optimizer_eq(_1bbee5d4b_Optimizer *_self_, _1bbee5d4b_Optimizer _other_);


struct _1bc0c1850_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
	

};
inline jule::Bool _1bc0c1850_AbsTime_eq(_1bc0c1850_AbsTime *_self_, _1bc0c1850_AbsTime _other_);


struct _1bc0c2026_Time {
	jule::U64 _field_sec;
	

};
inline jule::Bool _1bc0c2026_Time_eq(_1bc0c2026_Time *_self_, _1bc0c2026_Time _other_);


struct _1bbee9ba7_scopeCoder {
	jule::Ptr<_1bc0cdd35_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1bbee9ba7_scopeCoder_eq(_1bbee9ba7_scopeCoder *_self_, _1bbee9ba7_scopeCoder _other_);


struct _1bc005dd3_exprCoder {
	jule::Ptr<_1bc0cdd35_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1ad933a83_Var>>> _field_varPrefixes;
	

};
struct _1bc0183ac_TestCoder {
	jule::Ptr<_1ad718857_StructIns> _field_t;
	jule::Ptr<_1ad7e778d_Fn> _field_tmReset;
	jule::Ptr<_1ad7e778d_Fn> _field_tmFailed;
	jule::Ptr<_1ad7e778d_Fn> _field_tmSkipped;
	jule::Ptr<_1bc0cdd35_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1bc0183ac_TestCoder_eq(_1bc0183ac_TestCoder *_self_, _1bc0183ac_TestCoder _other_);


struct _1bc01b03b_identCoder {
	

};
inline jule::Bool _1bc01b03b_identCoder_eq(_1bc01b03b_identCoder *_self_, _1bc01b03b_identCoder _other_);


struct _1bc0cba36_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

};
inline jule::Bool _1bc0cba36_SerializationInfo_eq(_1bc0cba36_SerializationInfo *_self_, _1bc0cba36_SerializationInfo _other_);


struct _1bc0cbe54_traitCast {
	jule::Ptr<_1ad802ea2_Trait> _field_t1;
	jule::Ptr<_1ad802ea2_Trait> _field_t2;
	

};
inline jule::Bool _1bc0cbe54_traitCast_eq(_1bc0cbe54_traitCast *_self_, _1bc0cbe54_traitCast _other_);


struct _1bc0cc32d_anonHash {
	jule::Ptr<_1ad7dd1bd_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

};
inline jule::Bool _1bc0cc32d_anonHash_eq(_1bc0cc32d_anonHash *_self_, _1bc0cc32d_anonHash _other_);


struct _1bc0cc6a2_metadata {
	jule::Bool _field_concurrent;
	

};
inline jule::Bool _1bc0cc6a2_metadata_eq(_1bc0cc6a2_metadata *_self_, _1bc0cc6a2_metadata _other_);


struct _1bc0cdd35_ObjectCoder {
	_1dd0b6912_Builder _field_Buf;
	_1dd0b6912_Builder _field_resultDecls;
	_1dd0b6912_Builder _field_anyObj;
	_1dd0b6912_Builder _field_anonObj;
	_1dd0b6912_Builder _field_deallocObj;
	_1dd0b6912_Builder _field_coSpawnObj;
	jule::Ptr<_1bb09dcd4_IR> _field_ir;
	_1bc0cba36_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1bc0cc32d_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1c063e1c7__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1bc0cbe54_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>> _field_coSpawnMap;
	jule::Ptr<_1c0689bd4__Map> _field_traitMetMap;
	jule::Ptr<_1bc005dd3_exprCoder> _field_ec;
	jule::Ptr<_1bbee9ba7_scopeCoder> _field_sc;
	jule::Ptr<_1bc0dda8c_typeCoder> _field_tc;
	jule::I64 _field_headPos;
	jule::I64 _field_declPos;
	jule::I64 _field_wrapPos;
	_1bc0cc6a2_metadata _field_meta;
	

};
struct _1bc0dce98_customType {
	jule::Str _field_kind;
	

};
inline jule::Bool _1bc0dce98_customType_eq(_1bc0dce98_customType *_self_, _1bc0dce98_customType _other_);


struct _1bc0dda8c_typeCoder {
	jule::Ptr<_1bc0cdd35_ObjectCoder> _field_oc;
	jule::Ptr<_1bc0e6677_resultCoder> _field_rc;
	

};
inline jule::Bool _1bc0dda8c_typeCoder_eq(_1bc0dda8c_typeCoder *_self_, _1bc0dda8c_typeCoder _other_);


struct _1bc0e6677_resultCoder {
	jule::Ptr<_1bc0dda8c_typeCoder> _field_tc;
	

};
inline jule::Bool _1bc0e6677_resultCoder_eq(_1bc0e6677_resultCoder *_self_, _1bc0e6677_resultCoder _other_);


struct _1c0d47d20_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

};
inline jule::Bool _1c0d47d20_Flag_eq(_1c0d47d20_Flag *_self_, _1c0d47d20_Flag _other_);

struct _1c0d4b63c_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

};
inline jule::Bool _1c0d4b63c_Flag_eq(_1c0d4b63c_Flag *_self_, _1c0d4b63c_Flag _other_);

struct _1c0d4ed49_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

};
inline jule::Bool _1c0d4ed49_Flag_eq(_1c0d4ed49_Flag *_self_, _1c0d4ed49_Flag _other_);

struct _1c0d5359a_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

};
inline jule::Bool _1c0d5359a_Flag_eq(_1c0d5359a_Flag *_self_, _1c0d5359a_Flag _other_);

struct _1c0d56ca7_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

};
inline jule::Bool _1c0d56ca7_Flag_eq(_1c0d56ca7_Flag *_self_, _1c0d56ca7_Flag _other_);


struct _1bc161ea6_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	

};
struct _1bc16496a_argParser {
	_1bc161ea6_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i;
	

};
struct _1dd40e1bb_Cmd {
	_1dd462bd1_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

};
struct _1bb09dcd4_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1ad8e446c_Package> _field_Main;
	jule::Ptr<_1ad8e1bea_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>> _field_Used;
	_1bb0a8e76_OrderedDefines _field_Ordered;
	

};
struct _1bbdaae0e_dataCheckpoint {
	_1bbdacbe1_boundary _field_boundary;
	_1bbd98db9_nils _field_nils;
	_1bbda87d0_dynamic _field_dynamic;
	

};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1ad7ea84b_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1ad7ea84b_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_str {
	jule::Bool __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ad985b90_Data__jule_tuple_x_1ad985b90_Data {
	jule::Ptr<_1ad985b90_Data> __jule_result_arg0;
	jule::Ptr<_1ad985b90_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1ad985b90_Data__jule_tuple_bool {
	jule::Ptr<_1ad985b90_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ad6e94e7_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ad70c186_Case__jule_tuple_bool {
	jule::Ptr<_1ad70c186_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ad70c186_Case__jule_tuple_x_1ad70aedc_Else {
	jule::Slice<jule::Ptr<_1ad70c186_Case>> __jule_result_arg0;
	jule::Ptr<_1ad70aedc_Else> __jule_result_arg1;
};
struct __jule_tuple__1ad704821_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ad703b61_AssignSt__jule_tuple_bool {
	jule::Ptr<_1ad703b61_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1ad6e51b3_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ad6e80a6_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1ad6e80a6_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ad6e325a_AST__jule_tuple_s_1dd356476_Log {
	jule::Slice<jule::Ptr<_1ad6e325a_AST>> __jule_result_arg0;
	jule::Slice<_1dd356476_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1dd356476_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1dd356476_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ad7ea84b_FnIns__jule_tuple_bool {
	jule::Ptr<_1ad7ea84b_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bb09dcd4_IR__jule_tuple_s_1dd356476_Log {
	jule::Ptr<_1bb09dcd4_IR> __jule_result_arg0;
	jule::Slice<_1dd356476_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1a9c49771_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1a9c49771_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1a9c49771_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1a9c49771_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ad7eda91_SymTab__jule_tuple_s_1dd356476_Log {
	jule::Ptr<_1ad7eda91_SymTab> __jule_result_arg0;
	jule::Slice<_1dd356476_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ad8e446c_Package__jule_tuple_s_1dd356476_Log {
	jule::Ptr<_1ad8e446c_Package> __jule_result_arg0;
	jule::Slice<_1dd356476_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ad6e325a_AST__jule_tuple_s_1dd356476_Log {
	jule::Ptr<_1ad6e325a_AST> __jule_result_arg0;
	jule::Slice<_1dd356476_Log> __jule_result_arg1;
};
struct __jule_tuple_sx_1ad6ceb70_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ad6ceb70_Token__jule_tuple_sx_1ad6ceb70_Token {
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1ad6ceb70_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> __jule_result_arg0;
	jule::Slice<_1dd356476_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__1dbb126b2_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__1dbb130db_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1c063e1c7__Map> static__1c063e78d_make(void);
inline void _1c063e8e2_initData(_1c063e1c7__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1c063ea46_hash(_1c063e1c7__Map* _self_, jule::Str _14616_k);
inline void _1c063eb9a_rehash(_1c063e1c7__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1c063ecee_nextSize(_1c063e1c7__Map* _self_);
inline void _1c063ee53_lookup(jule::Ptr<_1c063e1c7__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1c06400a7_get(jule::Ptr<_1c063e1c7__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1c064020b_set(_1c063e1c7__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1c0640360_del(jule::Ptr<_1c063e1c7__Map> _self_, jule::Str _27624_k);
inline void _1c06404b4_clear(jule::Ptr<_1c063e1c7__Map> _self_);
inline jule::I64 _1c0640618_len(jule::Ptr<_1c063e1c7__Map> _self_);
inline jule::I64 _1c064076c_cap(_1c063e1c7__Map* _self_);
inline _1c064a953_mapIterator _1c06408c1_iterator(jule::Ptr<_1c063e1c7__Map> _self_);
inline jule::Ptr<_1c0689bd4__Map> static__1c068a201_make(void);
inline void _1c068a355_initData(_1c0689bd4__Map* _self_, jule::I64 _13524_cap);
inline jule::U64 _1c068a4a9_hash(_1c0689bd4__Map* _self_, jule::Ptr<_1ad7ea84b_FnIns> _14616_k);
inline void _1c068a60d_rehash(_1c0689bd4__Map* _self_, jule::I64 _15122_n);
inline jule::I64 _1c068a762_nextSize(_1c0689bd4__Map* _self_);
inline void _1c068a8b6_lookup(jule::Ptr<_1c0689bd4__Map> _self_, jule::Ptr<_1ad7ea84b_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1c068aa1a_get(jule::Ptr<_1c0689bd4__Map> _self_, jule::Ptr<_1ad7ea84b_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1c068ab6e_set(_1c0689bd4__Map* _self_, jule::Ptr<_1ad7ea84b_FnIns> _24123_k);
inline jule::Bool _1c068acc3_del(jule::Ptr<_1c0689bd4__Map> _self_, jule::Ptr<_1ad7ea84b_FnIns> _27624_k);
inline void _1c068ae27_clear(jule::Ptr<_1c0689bd4__Map> _self_);
inline jule::I64 _1c068b07b_len(jule::Ptr<_1c0689bd4__Map> _self_);
inline jule::I64 _1c068b1d0_cap(_1c0689bd4__Map* _self_);
inline _1c069422c_mapIterator _1c068b334_iterator(jule::Ptr<_1c0689bd4__Map> _self_);
inline void _1c064aed6_init(_1c064a953_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1c064b13a_next(_1c064a953_mapIterator* _self_);
inline void _1c06947b0_init(_1c069422c_mapIterator* _self_);
inline __jule_tuple_px_1ad7ea84b_FnIns__jule_tuple_psuintptr _1c0694914_next(_1c069422c_mapIterator* _self_);
inline _1dd0b6912_Builder static__1dd0b74d4_New(jule::I64 _1516_cap);
inline void _1dd0c0b2a_Write(_1dd0b6912_Builder* _self_, jule::Slice<jule::U8> _2521_b);
inline void _1dd0c0dd3_WriteStr(_1dd0b6912_Builder* _self_, jule::Str _3024_s);
inline void _1dd0c118b_WriteByte(_1dd0b6912_Builder* _self_, jule::U8 _3525_b);
inline jule::Str _1dd0c16ca_Str(_1dd0b6912_Builder* _self_);
inline void _1dd0c18c8_Clear(_1dd0b6912_Builder* _self_);
inline jule::I64 _1dd0c1b5e_Len(_1dd0b6912_Builder* _self_);
inline jule::Slice<jule::U8> _1dd0c217b_Buf(_1dd0b6912_Builder* _self_);
inline void _1dd0c2434_SetBuf(_1dd0b6912_Builder* _self_, jule::Slice<jule::U8> _7733_buf);
inline jule::U8 _1dd0c3ea2_index(_1dd0c3a1d_lazyBuff* _self_, jule::I64 _5521_i);
inline void _1dd0c425a_append(_1dd0c3a1d_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _1dd0c44e1_string(_1dd0c3a1d_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_1dbd04750_DirEntry>>> static__1dd0c8171_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__1dd0c83a2_Create(jule::Str _4019_path);
inline jule::VoidExceptional static__1dd0c85d3_Remove(jule::Str _5319_path);
inline jule::Exceptional<jule::Ptr<_1dbd064aa_File>> static__1dbd036a5_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode);
inline jule::VoidExceptional static__1dbd038d6_Remove(jule::Str _3319_path);
inline jule::Exceptional<jule::I64> _1dbd03d6a_Write(_1dbd064aa_File* _self_, jule::Slice<jule::U8> _4821_buf);
inline jule::Exceptional<jule::I64> _1dbd041ab_Read(_1dbd064aa_File* _self_, jule::Slice<jule::U8> _6924_buf);
inline jule::Ptr<_1dbd064aa_File> static__1dbd0690b_New(jule::Uintptr _4516_handle);
inline jule::Exceptional<jule::Ptr<_1dbd064aa_File>> static__1dbd06bc5_Create(jule::Str _5519_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1dbd06e8e_Read(jule::Str _6717_path);
inline jule::VoidExceptional static__1dbd07335_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm);
inline jule::VoidExceptional _1dbd07a72_Close(_1dbd064aa_File* _self_);
inline jule::Exceptional<jule::Ptr<_1dbd08545_Status>> static__1dbd05322_Of(jule::Str _1215_path);
inline jule::Bool _1dbd08952_IsDir(_1dbd08545_Status* _self_);
inline jule::Bool _1dbd08bd8_IsReg(_1dbd08545_Status* _self_);
inline jule::U64 _1dbd08e6e_Size(_1dbd08545_Status* _self_);
inline jule::Bool _1ab150aee_set(_1ab159135_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1ab150e40_floatBits(_1ab159135_decimal* _self_, _1ab14596d_floatInfo* _33226_flt);
inline void _1ab159520_assign(_1ab159135_decimal* _self_, jule::U64 _15126_v);
inline void _1ab1597c8_shift(_1ab159135_decimal* _self_, jule::I64 _17625_k);
inline void _1ab159a81_roundDown(_1ab159135_decimal* _self_, jule::I64 _19625_nd);
inline void _1ab159d39_roundUp(_1ab159135_decimal* _self_, jule::I64 _20523_nd);
inline void _1ab15a0e2_round(_1ab159135_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1ab15a378_roundedInteger(_1ab159135_decimal* _self_);
inline void static__1dd498ee2_Reset(void);
inline void static__1dd49a268_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1ab15e965_LogFlat(_1dd356476_Log* _1421_l);
inline void static__1ab15eb96_LogError(_1dd356476_Log* _1922_l);
inline void static__1ab15edc7_Log(_1dd356476_Log* _6417_l);
inline void static__1ab160108_PrintLogs(jule::Slice<_1dd356476_Log>* _7423_logs);
inline jule::U8 _1ad6d0027_Prec(_1ad6ceb70_Token* _self_);
inline jule::Ptr<_1ad6d5527_Fileset> static__1ad6d5989_New(jule::Str _1616_path);
inline void _1ad6d5c42_Fill(_1ad6d5527_Fileset* _self_, jule::Slice<jule::U8> _2324_data);
inline jule::Str _1ad6d5ec8_Dir(_1ad6d5527_Fileset* _self_);
inline jule::Str _1ad6d625e_Name(_1ad6d5527_Fileset* _self_);
inline jule::Str _1ad6d6836_GetRow(_1ad6d5527_Fileset* _self_, jule::I64 _4418_row);
inline void _1ad6ddac4_pushErr(_1ad6dd50d_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44743_args);
inline void _1ad6de135_lex(_1ad6dd50d_lex* _self_);
inline jule::Str _1ad6de476_id(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _47119_ln);
inline jule::Slice<jule::U8> _1ad6de70c_resume(_1ad6dd50d_lex* _self_);
inline void _1ad6de9b5_lexLineComment(_1ad6dd50d_lex* _self_, jule::Ptr<_1ad6ceb70_Token>* _52135_token);
inline void _1ad6dec6d_lexRangeComment(_1ad6dd50d_lex* _self_, jule::Ptr<_1ad6ceb70_Token>* _53636_token);
inline jule::Str _1ad6e00ae_num(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _56420_txt);
inline jule::Str _1ad6e0400_escapeSeq(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _58626_txt);
inline jule::Str _1ad6e07eb_getRune(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw);
inline jule::Str _1ad6e0b3c_lexRune(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _62524_txt);
inline jule::Str _1ad6e0dc3_lexStr(_1ad6dd50d_lex* _self_);
inline void _1ad6e1357_newLine(_1ad6dd50d_lex* _self_);
inline jule::Bool _1ad6e18b8_isOp(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1ad6ceb70_Token>* _70758_t);
inline jule::Bool _1ad6e1cb4_lexBasicOps(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1ad6ceb70_Token>* _71745_tok);
inline jule::Bool _1ad6e21b0_lexId(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1ad6ceb70_Token>* _72640_t);
inline jule::Bool _1ad6e25ab_lexNum(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1ad6ceb70_Token>* _73641_t);
inline jule::Ptr<_1ad6ceb70_Token> _1ad6e2842_token(_1ad6dd50d_lex* _self_);
inline jule::Bool _1ad6e7083_IsUnsafe(_1ad6e6bdc_PtrTypeDecl* _self_);
inline jule::Bool _1ad6e7825_AutoSized(_1ad6e747e_ArrTypeDecl* _self_);
inline jule::Bool _1ad6ed5c8_Unhandled(_1ad6ed221_FnCallExpr* _self_);
inline jule::Bool _1ad6ed85e_Ignored(_1ad6ed221_FnCallExpr* _self_);
inline jule::Bool _1ad705cc8_IsSelf(_1ad705921_ParamDecl* _self_);
inline jule::Bool _1ad707219_IsAnon(_1ad706d73_FnDecl* _self_);
inline jule::Bool _1ad70901d_IsInf(_1ad708b77_Iter* _self_);
inline jule::Bool _1ad709848_IsWhileNext(_1ad7094a2_WhileKind* _self_);
inline jule::Ptr<_1ad778ec2_Const> static__1ad7ce07c_NewI64(jule::I64 _1419_x);
inline jule::Ptr<_1ad778ec2_Const> static__1ad7ce258_NewU64(jule::U64 _1719_x);
inline jule::Ptr<_1ad778ec2_Const> static__1ad7ce522_NewBool(jule::Bool _2020_x);
inline jule::Ptr<_1ad778ec2_Const> static__1ad7ce7db_NewStr(jule::Str _2319_x);
inline jule::Ptr<_1ad778ec2_Const> static__1ad7ceaa5_NewF64(jule::F64 _2619_x);
inline jule::Ptr<_1ad778ec2_Const> static__1ad7cecb4_NewNil(void);
inline jule::I64 _1ad7d0424_ReadI64(_1ad778ec2_Const* _self_);
inline jule::U64 _1ad7d06aa_ReadU64(_1ad778ec2_Const* _self_);
inline jule::Bool _1ad7d0941_ReadBool(_1ad778ec2_Const* _self_);
inline jule::Str _1ad7d0bc7_ReadStr(_1ad778ec2_Const* _self_);
inline jule::F64 _1ad7d0e5d_ReadF64(_1ad778ec2_Const* _self_);
inline jule::I64 _1ad7d11e4_AsI64(_1ad778ec2_Const* _self_);
inline jule::U64 _1ad7d147a_AsU64(_1ad778ec2_Const* _self_);
inline jule::F64 _1ad7d1711_AsF64(_1ad778ec2_Const* _self_);
inline void _1ad7d19b9_SetI64(_1ad778ec2_Const* _self_, jule::I64 _13622_x);
inline void _1ad7d1c72_SetU64(_1ad778ec2_Const* _self_, jule::U64 _13922_x);
inline void _1ad7d202a_SetBool(_1ad778ec2_Const* _self_, jule::Bool _14223_x);
inline void _1ad7d22d3_SetStr(_1ad778ec2_Const* _self_, jule::Str _14522_x);
inline void _1ad7d258b_SetF64(_1ad778ec2_Const* _self_, jule::F64 _14822_x);
inline jule::Bool _1ad7d2a20_IsI64(_1ad778ec2_Const* _self_);
inline jule::Bool _1ad7d2ca6_IsU64(_1ad778ec2_Const* _self_);
inline jule::Bool _1ad7d303c_IsBool(_1ad778ec2_Const* _self_);
inline jule::Bool _1ad7d32c3_IsStr(_1ad778ec2_Const* _self_);
inline jule::Bool _1ad7d3559_IsF64(_1ad778ec2_Const* _self_);
inline jule::Bool _1ad7d37e0_IsNil(_1ad778ec2_Const* _self_);
inline jule::Bool _1ad7d3e72_And(_1ad778ec2_Const* _self_, _1ad778ec2_Const _23615_x);
inline jule::Bool _1ad7d42b3_Or(_1ad778ec2_Const* _self_, _1ad778ec2_Const _24714_x);
inline jule::Bool _1ad7d5759_Add(_1ad778ec2_Const* _self_, _1ad778ec2_Const _37519_x);
inline jule::Bool _1ad7d5a9a_Sub(_1ad778ec2_Const* _self_, _1ad778ec2_Const _40419_x);
inline jule::Bool _1ad7d5ddb_Mul(_1ad778ec2_Const* _self_, _1ad778ec2_Const _42819_x);
inline jule::Bool _1ad7d622c_Div(_1ad778ec2_Const* _self_, _1ad778ec2_Const _45619_x);
inline jule::Bool _1ad7d656d_Mod(_1ad778ec2_Const* _self_, _1ad778ec2_Const _48519_x);
inline jule::Bool _1ad7d68ae_BitwiseAnd(_1ad778ec2_Const* _self_, _1ad778ec2_Const _50726_x);
inline jule::Bool _1ad7d6c00_BitwiseOr(_1ad778ec2_Const* _self_, _1ad778ec2_Const _52125_x);
inline jule::Bool _1ad7d7041_Xor(_1ad778ec2_Const* _self_, _1ad778ec2_Const _53519_x);
inline jule::Bool _1ad7d7382_Lshift(_1ad778ec2_Const* _self_, _1ad778ec2_Const _54922_x);
inline jule::Bool _1ad7d76c3_Rshift(_1ad778ec2_Const* _self_, _1ad778ec2_Const _56922_x);
inline jule::Ptr<_1ad717ca7_FieldIns> _1ad712eb1_instance(jule::Ptr<_1ad712ac6_Field> _self_);
inline jule::Ptr<_1ad718857_StructIns> _1ad715e92_instance(jule::Ptr<_1ad7159ec_Struct> _self_);
inline jule::Ptr<_1ad718857_StructIns> _1ad7162a0_appendInstance(_1ad7159ec_Struct* _self_, jule::Ptr<_1ad718857_StructIns>* _13535_ins);
inline jule::Ptr<_1ad7e778d_Fn> _1ad71669b_FindMethod(_1ad7159ec_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically);
inline jule::Ptr<_1ad933a83_Var> _1ad7169dc_FindStatic(_1ad7159ec_Struct* _self_, jule::Str _16426_ident);
inline jule::Ptr<_1ad712ac6_Field> _1ad716d2d_FindField(_1ad7159ec_Struct* _self_, jule::Str _17525_ident);
inline jule::Bool _1ad71716e_IsImplements(_1ad7159ec_Struct* _self_, jule::Ptr<_1ad802ea2_Trait> _18524_t);
inline jule::Bool _1ad7174b0_IsUses(_1ad7159ec_Struct* _self_, jule::Ptr<_1ad7159ec_Struct> _19518_s);
inline jule::Str _1ad718c0e_Str(_1ad718857_StructIns* _self_);
inline jule::Bool _1ad719050_Equal(jule::Ptr<_1ad718857_StructIns> _self_, jule::Ptr<_1ad9b8596_TypeKind> _25718_other);
inline jule::Bool _1ad719506_Same(_1ad718857_StructIns* _self_, jule::Ptr<_1ad718857_StructIns> _28516_s);
inline jule::Ptr<_1ad7e778d_Fn> _1ad719902_FindMethod(_1ad718857_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically);
inline jule::Ptr<_1ad717ca7_FieldIns> _1ad719c43_FindField(_1ad718857_StructIns* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1ad933a83_Var> _1ad71a084_FindStatic(_1ad718857_StructIns* _self_, jule::Str _32226_ident);
inline jule::Ptr<_1ad7e96e6_ParamIns> _1ad7e6182_instance(jule::Ptr<_1ad7e5cb9_Param> _self_);
inline jule::Bool _1ad7e6418_IsSelf(_1ad7e5cb9_Param* _self_);
inline jule::Bool _1ad7e669e_IsRef(_1ad7e5cb9_Param* _self_);
inline jule::Bool _1ad7e7c44_IsVoid(_1ad7e778d_Fn* _self_);
inline jule::Bool _1ad7e7eca_IsMethod(_1ad7e778d_Fn* _self_);
inline jule::Bool _1ad7e8261_IsEntryPoint(_1ad7e778d_Fn* _self_);
inline jule::Bool _1ad7e84e7_IsInit(_1ad7e778d_Fn* _self_);
inline jule::Bool _1ad7e877d_IsAnon(_1ad7e778d_Fn* _self_);
inline jule::Bool _1ad7e8a14_AnyVar(_1ad7e778d_Fn* _self_);
inline jule::Ptr<_1ad7ea84b_FnIns> _1ad7e8c9a_instanceForce(jule::Ptr<_1ad7e778d_Fn> _self_);
inline jule::Ptr<_1ad7ea84b_FnIns> _1ad7e9031_instance(jule::Ptr<_1ad7e778d_Fn> _self_);
inline jule::Ptr<_1ad7ea84b_FnIns> _1ad7e933e_appendInstance(_1ad7e778d_Fn* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _13835_ins);
inline jule::Str _1ad7e9a8c_Str(_1ad7e96e6_ParamIns* _self_);
inline jule::Str _1ad7eabc0_Str(_1ad7ea84b_FnIns* _self_);
inline jule::Bool _1ad7eb011_Equal(jule::Ptr<_1ad7ea84b_FnIns> _self_, jule::Ptr<_1ad9b8596_TypeKind> _22918_other);
inline jule::Bool _1ad7eb4a6_EqualFn(jule::Ptr<_1ad7ea84b_FnIns> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _24021_f);
inline jule::Bool _1ad7eb7e7_equalTrait(jule::Ptr<_1ad7ea84b_FnIns> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _29924_other);
inline jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _1ad7eba7d_Types(_1ad7ea84b_FnIns* _self_);
inline jule::Bool _1ad7ebd14_IsBuiltin(_1ad7ea84b_FnIns* _self_);
inline jule::Bool _1ad7ec09a_IsAnon(_1ad7ea84b_FnIns* _self_);
inline jule::Bool _1ad7ec3db_Same(_1ad7ea84b_FnIns* _self_, jule::Ptr<_1ad7ea84b_FnIns> _34216_f);
inline jule::Str _1ad7ec72c_GetKindStr(_1ad7ea84b_FnIns* _self_, jule::Bool _35922_ident);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad7ee0ad_SelectPackage(_1ad7eda91_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _2729_selector);
inline jule::Ptr<_1ad933a83_Var> _1ad7ee4a9_FindVar(_1ad7eda91_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad7ee8a5_FindTypeAlias(_1ad7eda91_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1ad7159ec_Struct> _1ad7eeca1_FindStruct(_1ad7eda91_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1ad7e778d_Fn> _1ad80019c_FindFn(_1ad7eda91_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1ad802ea2_Trait> _1ad8004dd_FindTrait(_1ad7eda91_SymTab* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1ad805658_Enum> _1ad80082e_FindEnum(_1ad7eda91_SymTab* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1ad806d63_TypeEnum> _1ad800b70_FindTypeEnum(_1ad7eda91_SymTab* _self_, jule::Str _9728_ident);
inline jule::I64 _1ad801137_findVar1(_1ad7eda91_SymTab* _self_, jule::Ptr<_1ad933a83_Var>* _10825_v);
inline jule::Ptr<_1ad933a83_Var> _1ad8015dd_findVar(_1ad7eda91_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad801a94_findTypeAlias(_1ad7eda91_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1ad801e90_defByIdent(_1ad7eda91_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1ad802446_isDuplicatedIdent(_1ad7eda91_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Str _1ad80339d_Str(_1ad802ea2_Trait* _self_);
inline jule::Bool _1ad8036de_Equal(jule::Ptr<_1ad802ea2_Trait> _self_, jule::Ptr<_1ad9b8596_TypeKind> _2518_other);
inline jule::Ptr<_1ad7e778d_Fn> _1ad803b84_FindMethod(_1ad802ea2_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1ad7e778d_Fn> _1ad804316_findMethodInherit(_1ad802ea2_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1ad804ec6_AutoExpr(_1ad804b0d_EnumItem* _self_);
inline jule::Str _1ad805a10_Str(_1ad805658_Enum* _self_);
inline jule::Bool _1ad805d51_Equal(jule::Ptr<_1ad805658_Enum> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other);
inline jule::Ptr<_1ad804b0d_EnumItem> _1ad806280_FindItem(_1ad805658_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1ad8071d7_Str(_1ad806d63_TypeEnum* _self_);
inline jule::Bool _1ad807528_Equal(jule::Ptr<_1ad806d63_TypeEnum> _self_, jule::Ptr<_1ad9b8596_TypeKind> _8018_other);
inline jule::Ptr<_1ad80678b_TypeEnumItem> _1ad807957_FindItem(_1ad806d63_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1ad883e23_Str(_1ad87db21_comptimeRange* _self_);
inline jule::Bool _1ad8841ba_Equal(jule::Ptr<_1ad87db21_comptimeRange> _self_, jule::Ptr<_1ad9b8596_TypeKind> _2718_other);
inline jule::Str _1ad884891_Str(_1ad8844d9_comptimeStructField* _self_);
inline jule::Bool _1ad884bd2_Equal(jule::Ptr<_1ad8844d9_comptimeStructField> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3718_other);
inline jule::Ptr<_1ad985b90_Data> _1ad8851dd__Decl(jule::Ptr<_1ad8844d9_comptimeStructField> _self_, jule::Ptr<_1ad9878b7_eval>* _4127_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8855d9__Type(jule::Ptr<_1ad8844d9_comptimeStructField> _self_, jule::Ptr<_1ad9878b7_eval>* _5327_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad88592a_subIdent(jule::Ptr<_1ad8844d9_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1ad886145_Str(_1ad885c7c_comptimeStructFields* _self_);
inline jule::Bool _1ad886486_Equal(jule::Ptr<_1ad885c7c_comptimeStructFields> _self_, jule::Ptr<_1ad9b8596_TypeKind> _9018_other);
inline void _1ad88691a_ready(_1ad885c7c_comptimeStructFields* _self_, jule::Ptr<_1ad933a83_Var>* _9426_keyA, jule::Ptr<_1ad933a83_Var>* _9443_keyB);
inline void _1ad886c7d_index(_1ad885c7c_comptimeStructFields* _self_, jule::Ptr<_1ad985b90_Data>* _11526_d, jule::I64 _11536_i);
inline void _1ad88719b_step(_1ad885c7c_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1ad933a83_Var>* _12633_keyA, jule::Ptr<_1ad933a83_Var>* _12650_keyB);
inline jule::I64 _1ad887432_len(_1ad885c7c_comptimeStructFields* _self_);
inline jule::Str _1ad887ab4_Str(_1ad88770c_comptimeStatic* _self_);
inline jule::Bool _1ad887e05_Equal(jule::Ptr<_1ad88770c_comptimeStatic> _self_, jule::Ptr<_1ad9b8596_TypeKind> _15018_other);
inline jule::Ptr<_1ad985b90_Data> _1ad888411__Decl(jule::Ptr<_1ad88770c_comptimeStatic> _self_, jule::Ptr<_1ad9878b7_eval>* _15427_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad88880c__Type(jule::Ptr<_1ad88770c_comptimeStatic> _self_, jule::Ptr<_1ad9878b7_eval>* _16627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad888b4d_subIdent(jule::Ptr<_1ad88770c_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1ad889368_Str(_1ad888eb1_comptimeStatics* _self_);
inline jule::Bool _1ad8896a9_Equal(jule::Ptr<_1ad888eb1_comptimeStatics> _self_, jule::Ptr<_1ad9b8596_TypeKind> _20318_other);
inline void _1ad889b3d_ready(_1ad888eb1_comptimeStatics* _self_, jule::Ptr<_1ad933a83_Var>* _20726_keyA, jule::Ptr<_1ad933a83_Var>* _20743_keyB);
inline void _1ad889ea1_index(_1ad888eb1_comptimeStatics* _self_, jule::Ptr<_1ad985b90_Data>* _22826_d, jule::I64 _22836_i);
inline void _1ad88a3be_step(_1ad888eb1_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1ad933a83_Var>* _23933_keyA, jule::Ptr<_1ad933a83_Var>* _23950_keyB);
inline jule::I64 _1ad88a655_len(_1ad888eb1_comptimeStatics* _self_);
inline jule::Str _1ad88acd7_Str(_1ad88a930_comptimeEnumField* _self_);
inline jule::Bool _1ad88b128_Equal(jule::Ptr<_1ad88a930_comptimeEnumField> _self_, jule::Ptr<_1ad9b8596_TypeKind> _26318_other);
inline jule::Ptr<_1ad985b90_Data> _1ad88b623__Decl(jule::Ptr<_1ad88a930_comptimeEnumField> _self_, jule::Ptr<_1ad9878b7_eval>* _26727_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad88b964_subIdent(jule::Ptr<_1ad88a930_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1ad88c206_Str(_1ad88bc3e_comptimeEnumFields* _self_);
inline jule::Bool _1ad88c547_Equal(jule::Ptr<_1ad88bc3e_comptimeEnumFields> _self_, jule::Ptr<_1ad9b8596_TypeKind> _30118_other);
inline void _1ad88c954_ready(_1ad88bc3e_comptimeEnumFields* _self_, jule::Ptr<_1ad933a83_Var>* _30526_keyA, jule::Ptr<_1ad933a83_Var>* _30543_keyB);
inline void _1ad88ccb7_index(_1ad88bc3e_comptimeEnumFields* _self_, jule::Ptr<_1ad985b90_Data>* _32626_d, jule::I64 _32636_i);
inline void _1ad88d1d5_step(_1ad88bc3e_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1ad933a83_Var>* _33733_keyA, jule::Ptr<_1ad933a83_Var>* _33750_keyB);
inline jule::I64 _1ad88d46b_len(_1ad88bc3e_comptimeEnumFields* _self_);
inline jule::Str _1ad88daed_Str(_1ad88d746_comptimeParam* _self_);
inline jule::Bool _1ad88de3e_Equal(jule::Ptr<_1ad88d746_comptimeParam> _self_, jule::Ptr<_1ad9b8596_TypeKind> _36118_other);
inline jule::Ptr<_1ad985b90_Data> _1ad88e45b__Decl(jule::Ptr<_1ad88d746_comptimeParam> _self_, jule::Ptr<_1ad9878b7_eval>* _36527_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad88e857__Type(jule::Ptr<_1ad88d746_comptimeParam> _self_, jule::Ptr<_1ad9878b7_eval>* _37727_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad88ec53__Recv(jule::Ptr<_1ad88d746_comptimeParam> _self_, jule::Ptr<_1ad9878b7_eval>* _38527_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad890094_subIdent(jule::Ptr<_1ad88d746_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1ad890847_Str(_1ad8905a0_comptimeParams* _self_);
inline jule::Bool _1ad890b88_Equal(jule::Ptr<_1ad8905a0_comptimeParams> _self_, jule::Ptr<_1ad9b8596_TypeKind> _43418_other);
inline void _1ad89111c_ready(_1ad8905a0_comptimeParams* _self_, jule::Ptr<_1ad933a83_Var>* _43826_keyA, jule::Ptr<_1ad933a83_Var>* _43843_keyB);
inline void _1ad891480_index(_1ad8905a0_comptimeParams* _self_, jule::Ptr<_1ad985b90_Data>* _45926_d, jule::I64 _45936_i);
inline void _1ad89189d_step(_1ad8905a0_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1ad933a83_Var>* _47033_keyA, jule::Ptr<_1ad933a83_Var>* _47050_keyB);
inline jule::I64 _1ad891b34_len(_1ad8905a0_comptimeParams* _self_);
inline jule::Str _1ad8922b6_Str(_1ad891e0e_comptimeTypeInfos* _self_);
inline jule::Bool _1ad892607_Equal(jule::Ptr<_1ad891e0e_comptimeTypeInfos> _self_, jule::Ptr<_1ad9b8596_TypeKind> _49418_other);
inline void _1ad892a8b_ready(_1ad891e0e_comptimeTypeInfos* _self_, jule::Ptr<_1ad933a83_Var>* _49826_keyA, jule::Ptr<_1ad933a83_Var>* _49843_keyB);
inline void _1ad892dee_index(_1ad891e0e_comptimeTypeInfos* _self_, jule::Ptr<_1ad985b90_Data>* _51926_d, jule::I64 _51936_i);
inline void _1ad89331c_step(_1ad891e0e_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1ad933a83_Var>* _52833_keyA, jule::Ptr<_1ad933a83_Var>* _52850_keyB);
inline jule::I64 _1ad8935a3_len(_1ad891e0e_comptimeTypeInfos* _self_);
inline jule::Str _1ad893c35_Str(_1ad89387d_comptimeTypeInfo* _self_);
inline jule::Bool _1ad894076_Equal(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9b8596_TypeKind> _55218_other);
inline jule::Ptr<_1ad985b90_Data> _1ad8946b4__Decl(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _55627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad894ab0__Str(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _59322_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad894eab__Kind(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _60627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8953a7__Bits(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _68627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8957a3__Elem(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _71027_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad895b9e__Size(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _74327_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad89609a__Key(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _76226_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad896496__Value(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _77528_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad896892__Fields(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _78829_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad896c8d__Statics(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _81730_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad897189__Binded(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _83629_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad897585__Ordered(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _84926_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad897981__Comparable(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _86229_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad897d7c__Mutable(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _87526_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad898278__Types(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _88828_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad898674__CanNil(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _91129_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad898a70__GC(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _92425_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad898e6b__Result(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _93729_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad899367__Params(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _95329_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8996a8_subIdent(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1ad899d3a_Str(_1ad899983_comptimeValue* _self_);
inline jule::Bool _1ad89a17b_Equal(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9b8596_TypeKind> _111818_other);
inline jule::Ptr<_1ad985b90_Data> _1ad89a6dc__Unwrap(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _112229_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad89aad8__Type(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _113027_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad89aed4__Lvalue(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _113829_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad89b3d0__Mutable(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _115130_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad89b7cb__Const(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _116428_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad89bbc7__Field(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _117728_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad89c0c3__Method(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _121229_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad89c414_subIdent(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _1ad89ca96_Str(_1ad89c6de_comptimeFiles* _self_);
inline jule::Bool _1ad89cdd7_Equal(jule::Ptr<_1ad89c6de_comptimeFiles> _self_, jule::Ptr<_1ad9b8596_TypeKind> _132218_other);
inline void _1ad89d36b_ready(_1ad89c6de_comptimeFiles* _self_, jule::Ptr<_1ad933a83_Var>* _132626_keyA, jule::Ptr<_1ad933a83_Var>* _132643_keyB);
inline void _1ad89d6ce_index(_1ad89c6de_comptimeFiles* _self_, jule::Ptr<_1ad985b90_Data>* _134726_d, jule::I64 _134736_i);
inline void _1ad89daec_step(_1ad89c6de_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1ad933a83_Var>* _135833_keyA, jule::Ptr<_1ad933a83_Var>* _135850_keyB);
inline jule::I64 _1ad89dd83_len(_1ad89c6de_comptimeFiles* _self_);
inline jule::Str _1ad89e515_Str(_1ad89e15d_comptimeFile* _self_);
inline jule::Bool _1ad89e856_Equal(jule::Ptr<_1ad89e15d_comptimeFile> _self_, jule::Ptr<_1ad9b8596_TypeKind> _138218_other);
inline jule::Ptr<_1ad985b90_Data> _1ad89ed73__Path(jule::Ptr<_1ad89e15d_comptimeFile> _self_, jule::Ptr<_1ad9878b7_eval>* _138627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _138642_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a026e__Name(jule::Ptr<_1ad89e15d_comptimeFile> _self_, jule::Ptr<_1ad9878b7_eval>* _139927_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _139942_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a066a__Dir(jule::Ptr<_1ad89e15d_comptimeFile> _self_, jule::Ptr<_1ad9878b7_eval>* _141226_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _141241_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a09ab_subIdent(jule::Ptr<_1ad89e15d_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _1ad8a136e_Str(_1ad8a0c86_comptimeDecls* _self_);
inline jule::Bool _1ad8a16b0_Equal(jule::Ptr<_1ad8a0c86_comptimeDecls> _self_, jule::Ptr<_1ad9b8596_TypeKind> _146118_other);
inline void _1ad8a1a34_ready(_1ad8a0c86_comptimeDecls* _self_, jule::Ptr<_1ad933a83_Var>* _146526_keyA, jule::Ptr<_1ad933a83_Var>* _146543_keyB);
inline void _1ad8a1d97_index(_1ad8a0c86_comptimeDecls* _self_, jule::Ptr<_1ad985b90_Data>* _148626_d, jule::I64 _148636_i);
inline void _1ad8a22b5_step(_1ad8a0c86_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1ad933a83_Var>* _149533_keyA, jule::Ptr<_1ad933a83_Var>* _149550_keyB);
inline jule::I64 _1ad8a254b_len(_1ad8a0c86_comptimeDecls* _self_);
inline jule::Str _1ad8a342b_Str(_1ad8a3074_comptimeDecl* _self_);
inline jule::Bool _1ad8a376c_Equal(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9b8596_TypeKind> _153418_other);
inline jule::Str _1ad8a3bbd_declAsStr(_1ad8a3074_comptimeDecl* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad8a40b9__Name(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _156527_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _156542_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a44b5__Public(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _160329_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _160344_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a48b1__Binded(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _164129_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _164144_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a4cac__Exceptional(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _167534_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _167549_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a51a8__Mutable(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _169630_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _169645_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a55a4__Variadic(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _172931_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _172946_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a59a0__Reference(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _176032_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _176047_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a5d9b__Params(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _179229_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _179244_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a6297__Fields(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _182729_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _182744_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a6693__Statics(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _186830_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _186845_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a6a8e__Methods(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _190430_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _190445_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad8a6dd0_subIdent(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1ad90ed6c_sema>*,jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>*> _1ad8a9d8e_readyFn(jule::Ptr<_1ad8a9960_constraintChecker> _self_);
inline jule::Bool _1ad8aa125_readyFi(jule::Ptr<_1ad8a9960_constraintChecker> _self_);
inline jule::Bool _1ad8aa3ab_readySi(jule::Ptr<_1ad8a9960_constraintChecker> _self_);
inline jule::Bool _1ad8aa642_ready(jule::Ptr<_1ad8a9960_constraintChecker> _self_);
inline jule::Bool _1ad8aa8c8_check(jule::Ptr<_1ad8a9960_constraintChecker> _self_);
inline jule::Bool _1ad8ac15a_IsTraitImpl(_1ad8abc5e_Impl* _self_);
inline jule::Bool _1ad8ac3e1_IsStructImpl(_1ad8abc5e_Impl* _self_);
inline jule::Bool _1ad8b2b00_IsWhileNext(_1ad8b2759_WhileIter* _self_);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8b8ad4_SelectPackage(_1ad8b860b_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _34829_selector);
inline jule::Ptr<_1ad933a83_Var> _1ad8b8ed0_FindVar(_1ad8b860b_scopeChecker* _self_, jule::Str _35923_ident, jule::Bool _35935_binded);
inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad8b93cb_FindTypeAlias(_1ad8b860b_scopeChecker* _self_, jule::Str _37629_ident, jule::Bool _37641_binded);
inline jule::Ptr<_1ad7159ec_Struct> _1ad8b97c7_FindStruct(_1ad8b860b_scopeChecker* _self_, jule::Str _40126_ident, jule::Bool _40138_binded);
inline jule::Ptr<_1ad7e778d_Fn> _1ad8b9bc3_FindFn(_1ad8b860b_scopeChecker* _self_, jule::Str _41022_ident, jule::Bool _41034_binded);
inline jule::Ptr<_1ad802ea2_Trait> _1ad8ba014_FindTrait(_1ad8b860b_scopeChecker* _self_, jule::Str _41925_ident);
inline jule::Ptr<_1ad805658_Enum> _1ad8ba355_FindEnum(_1ad8b860b_scopeChecker* _self_, jule::Str _42824_ident);
inline jule::Ptr<_1ad806d63_TypeEnum> _1ad8ba696_FindTypeEnum(_1ad8b860b_scopeChecker* _self_, jule::Str _43728_ident);
inline jule::Bool _1ad8ba9e8_isUnsafe(jule::Ptr<_1ad8b860b_scopeChecker> _self_);
inline jule::Bool _1ad8bac7e_isRoot(_1ad8b860b_scopeChecker* _self_);
inline void _1ad8bae7c_stop(_1ad8b860b_scopeChecker* _self_);
inline jule::Bool _1ad8bb213_stopped(_1ad8b860b_scopeChecker* _self_);
inline jule::Bool _1ad8bb499_isDeferred(jule::Ptr<_1ad8b860b_scopeChecker> _self_);
inline void _1ad8bb752_pushCaptured(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad933a83_Var>* _49934_v);
inline jule::Ptr<_1ad8b860b_scopeChecker> _1ad8bb9d8_getRoot(jule::Ptr<_1ad8b860b_scopeChecker> _self_);
inline jule::Ptr<_1ad8b860b_scopeChecker> _1ad8bbc6e_getHardRoot(jule::Ptr<_1ad8b860b_scopeChecker> _self_);
inline jule::Ptr<_1ad8ced70_ReferenceStack> _1ad8bc005_getOwnerRefers(jule::Ptr<_1ad8b860b_scopeChecker> _self_);
inline jule::Ptr<_1ad933a83_Var> _1ad8bc346_findVar(_1ad8b860b_scopeChecker* _self_, jule::Str _54623_ident);
inline jule::Ptr<_1ad8b3dba_Label> _1ad8bc687_findLabel(_1ad8b860b_scopeChecker* _self_, jule::Str* _56726_ident);
inline jule::Ptr<_1ad8b761b_scopeLabel> _1ad8bc9c8_findLabelScope(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Str* _58332_ident);
inline jule::Ptr<_1ad8b761b_scopeLabel> _1ad8bcd19_findLabelAll(_1ad8b860b_scopeChecker* _self_, jule::Str* _59429_ident);
inline jule::Bool _1ad8bd215_isDuplicatedIdent(_1ad8b860b_scopeChecker* _self_, jule::Uintptr _60633_itself, jule::Str* _60651_ident);
inline void _1ad8bd4bd_checkVarDecl(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70802d_VarDecl> _62633_decl);
inline void _1ad8bd776_checkTypeAlias(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad9b77a4_TypeAlias>* _65736_ta);
inline void _1ad8bda2e_checkTypeAliasDecl(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70bbd0_TypeAliasDecl> _67339_decl);
inline jule::Ptr<_1ad8b136d_Scope> _1ad8bdcb5_getChild(_1ad8b860b_scopeChecker* _self_);
inline void _1ad8be1d3_checkChildSsc(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7051d4_ScopeTree>* _68435_tree, jule::Ptr<_1ad8b136d_Scope>* _68463_s, jule::Ptr<_1ad8b860b_scopeChecker>* _68479_ssc);
inline jule::Ptr<_1ad8b136d_Scope> _1ad8be5ce_checkChildSc(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7051d4_ScopeTree>* _69134_tree, jule::Ptr<_1ad8b860b_scopeChecker>* _69162_ssc);
inline jule::Ptr<_1ad8b136d_Scope> _1ad8be920_checkChild(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7051d4_ScopeTree>* _69732_tree);
inline void _1ad8bebc8_checkAnonScope(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7051d4_ScopeTree> _70235_tree);
inline void _1ad8c003b_processErrorCall(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7e3602_BuiltinErrorCallExprModel>* _70738_m, jule::Ptr<_1ad6ceb70_Token> _70769_err);
inline void _1ad8c02e4_checkExpr(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad6e94e7_Expr> _72030_expr);
inline jule::Ptr<_1ad8b178b_If> _1ad8c0635_checkIf(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70ab13_If> _75028_i);
inline jule::Ptr<_1ad8b1a88_Else> _1ad8c0976_checkElse(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70aedc_Else> _77030_e);
inline void _1ad8c0c2e_checkConditional(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70b493_Conditional> _77637_conditional);
inline void _1ad8c1207_checkIterScopeSsc(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Uintptr _79234_it, jule::Ptr<_1ad7051d4_ScopeTree> _79251_tree, jule::Ptr<_1ad8b136d_Scope>* _79279_s, jule::Ptr<_1ad8b860b_scopeChecker> _79294_ssc);
inline jule::Ptr<_1ad8b136d_Scope> _1ad8c16ad_checkIterScopeSc(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Uintptr _79733_it, jule::Ptr<_1ad7051d4_ScopeTree> _79750_tree, jule::Ptr<_1ad8b860b_scopeChecker> _79777_ssc);
inline jule::Ptr<_1ad8b136d_Scope> _1ad8c1aa9_checkIterScope(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Uintptr _80331_it, jule::Ptr<_1ad7051d4_ScopeTree>* _80349_tree);
inline void _1ad8c1d62_checkInfIter(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708b77_Iter>* _80834_it);
inline void _1ad8c211a_checkWhileIter(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708b77_Iter>* _81436_it);
inline void _1ad8c2538_checkComptimeRangeIter(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708b77_Iter>* _86444_it, jule::Ptr<_1ad8b31a5_RangeIter>* _86465_kind, jule::Ptr<_1ad985b90_Data>* _86488_d);
inline void _1ad8c27e1_checkRangeIter(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708b77_Iter>* _92136_it);
inline void _1ad8c2a99_checkIter(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708b77_Iter> _98130_it);
inline jule::Bool _1ad8c2dda_checkValidContLabel(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Uintptr _100536_it);
inline jule::Bool _1ad8c322b_checkValidBreakLabel(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Uintptr _102137_ptr);
inline jule::Ptr<_1ad8b353a_ContSt> _1ad8c356c_checkContValidScope(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70a65c_ContSt> _104436_c);
inline void _1ad8c3825_checkCont(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70a65c_ContSt> _106826_c);
inline void _1ad8c3acd_checkLabel(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad702797_LabelSt> _111531_l);
inline void _1ad8c3d86_pushGoto(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad702b71_GotoSt> _113429_gt);
inline void _1ad8c413e_checkPostfix(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad703b61_AssignSt> _114533_a);
inline jule::Bool _1ad8c4480_isNewAssignIdent(_1ad8b860b_scopeChecker* _self_, jule::Str _117832_ident);
inline void _1ad8c4738_removeInteriorMutRisk(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad985b90_Data>* _119143_d);
inline jule::Bool _1ad8c4bde_checkStructureAssignOp(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad718857_StructIns>* _120544_s, jule::Ptr<_1ad703b61_AssignSt>* _120564_a, jule::Ptr<_1ad985b90_Data>* _120588_r);
inline void _1ad8c4e97_checkSingleAssign(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad703b61_AssignSt>* _124439_a);
inline void _1ad8c55d5_processEndPartOfMultiAssign(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad8b5361_MultiAssign>* _132649_st, jule::Ptr<_1ad703b61_AssignSt>* _132672_a, jule::Ptr<_1ad7035cd_AssignLeft>* _13278_lexpr, jule::Ptr<_1ad985b90_Data>* _132738_l, jule::Ptr<_1ad985b90_Data>* _132753_r, jule::Bool _132763_strict);
inline void _1ad8c588d_checkMultiAssign(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad703b61_AssignSt>* _140238_a);
inline void _1ad8c5b46_checkAssignSt(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad703b61_AssignSt> _146934_a);
inline jule::Ptr<_1ad8b136d_Scope> _1ad8c6042_checkCaseScope(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad8b65c6_Case>* _148032_c, jule::Ptr<_1ad7051d4_ScopeTree>* _148047_tree);
inline jule::Ptr<_1ad8b65c6_Case> _1ad8c65a3_checkCase(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad8b5a9d_Match> _148630_m, jule::I64 _148641_i, jule::Ptr<_1ad70c186_Case> _148653_c, jule::Ptr<_1ad985b90_Data> _148672_expr);
inline void _1ad8c69c1_checkCases(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70c9a0_MatchCase>* _156332_m, jule::Ptr<_1ad8b5a9d_Match> _156356_rm, jule::Ptr<_1ad985b90_Data> _156372_expr);
inline jule::Ptr<_1ad8b65c6_Case> _1ad8c6dbc_checkDefault(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad8b5a9d_Match> _158433_m, jule::Ptr<_1ad70aedc_Else> _158448_d);
inline void _1ad8c7230_checkComptimePanic(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad6ceb70_Token> _159239_callToken, jule::Ptr<_1ad8b136d_Scope>* _159266_s);
inline void _1ad8c7593_processConstMatch(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad8b5a9d_Match>* _162439_tm, jule::Ptr<_1ad70c9a0_MatchCase>* _162456_m);
inline void _1ad8c784b_checkTypeMatch(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70c9a0_MatchCase>* _165336_m);
inline void _1ad8c7b04_checkCommonMatch(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70c9a0_MatchCase>* _169638_m);
inline void _1ad8c7dac_checkMatch(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70c9a0_MatchCase> _174731_m);
inline void _1ad8c8165_checkFall(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad702e6d_FallSt> _175526_f);
inline jule::Ptr<_1ad8b3914_BreakSt> _1ad8c84a6_checkBreakWithLabel(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70a283_BreakSt> _177836_b);
inline jule::Ptr<_1ad8b3914_BreakSt> _1ad8c87e7_checkPlainBreak(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70a283_BreakSt> _183632_b);
inline void _1ad8c8aa0_checkBreak(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70a283_BreakSt> _185827_b);
inline void _1ad8c8d58_checkRet(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708407_RetSt> _186929_r);
inline void _1ad8c9111_checkUseExpr(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad6e9dbb_UseExpr> _189429_ue);
inline void _1ad8c93b9_checkNode(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Any* _191031_node);
inline void _1ad8c95b7_checkResult(jule::Ptr<_1ad8b860b_scopeChecker> _self_);
inline void _1ad8c97b5_checkTree(jule::Ptr<_1ad8b860b_scopeChecker> _self_);
inline void _1ad8c9b28_checkGoto(_1ad8b860b_scopeChecker* _self_, jule::Ptr<_1ad8b452a_GotoSt>* _201230_gt, jule::Ptr<_1ad8b761b_scopeLabel>* _201248_label);
inline void _1ad8c9d26_checkGotos(_1ad8b860b_scopeChecker* _self_);
inline void _1ad8ca024_checkLabels(_1ad8b860b_scopeChecker* _self_);
inline void _1ad8ca222_checkVars(_1ad8b860b_scopeChecker* _self_);
inline void _1ad8ca420_checkAliases(_1ad8b860b_scopeChecker* _self_);
inline void _1ad8ca783_check(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7051d4_ScopeTree>* _210727_tree, jule::Ptr<_1ad8b136d_Scope>* _210755_s);
inline jule::Ptr<_1ad8b860b_scopeChecker> _1ad8caa19_newChildChecker(jule::Ptr<_1ad8b860b_scopeChecker> _self_);
inline void _1ad8cc8d9_checkCdef(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _1626_d);
inline void _1ad8ccb92_checkTypedef(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _3229_d);
inline void _1ad8cce4a_checkNamespace(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _4835_d);
inline void _1ad8cd203_checkDeprecated(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _10036_d);
inline void _1ad8cd4ab_checkTest(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _14126_d);
inline void _1ad8cd764_checkExport(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _16232_d);
inline void _1ad8cda1c_checkDirective(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _20035_d);
inline void _1ad8cdc1a_check(_1ad8cc499_directiveChecker* _self_);
inline jule::Ptr<_1ad8ced70_ReferenceStack> static__1ad8d005c_new(void);
inline jule::I64 _1ad8d03e2_Len(_1ad8ced70_ReferenceStack* _self_);
inline jule::Any _1ad8d0733_At(_1ad8ced70_ReferenceStack* _self_, jule::I64 _4218_i);
inline void _1ad8d09db_Push(_1ad8ced70_ReferenceStack* _self_, jule::Any _4724_ref);
inline jule::Bool _1be6d7936_Exist(_1ad8ced70_ReferenceStack* _self_, jule::Ptr<_1ad7ea84b_FnIns> _5220_t);
inline jule::Bool _1be6ee387_Exist(_1ad8ced70_ReferenceStack* _self_, jule::Ptr<_1ad933a83_Var> _5220_t);
inline jule::Bool _1be7d9d46_Exist(_1ad8ced70_ReferenceStack* _self_, jule::Ptr<_1ad718857_StructIns> _5220_t);
inline jule::Bool _1beb73168_Exist(_1ad8ced70_ReferenceStack* _self_, jule::Ptr<_1ad802ea2_Trait> _5220_t);
inline void _1ad8d6690_pushErr(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad6ceb70_Token>* _30624_token, jule::Str _30646_fmt, jule::Slice<jule::Any> _30666_args);
inline void _1ad8d6e21_pushSuggestion(_1ad8d5b89_symBuilder* _self_, jule::Str _31530_fmt, jule::Slice<jule::Any> _31550_args);
inline jule::Bool _1ad8d731c_checkCppUseDeclPath(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad70d033_UseDecl>* _31936_decl, jule::Str* _31958_path);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8d762a_buildCppHeaderImport(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad70d033_UseDecl>* _33941_decl);
inline jule::Str _1ad8d7a26_checkAbsPath(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Str _36933_filepath, jule::Ptr<_1ad70d033_UseDecl>* _36953_decl);
inline jule::Str _1ad8d7e22_checkStdAbsPath(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Str _39836_filepath, jule::Ptr<_1ad70d033_UseDecl>* _39856_decl);
inline __jule_tuple_bool__jule_tuple_str _1ad8d8263_checkImpPath(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad70d033_UseDecl>* _42134_decl);
inline void _1ad8d851b_assignAlias(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _45133_imp);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8d885c_buildImport(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad70d033_UseDecl>* _45833_decl);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8d8b9d_findUseDecl(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _48528_pkg);
inline jule::Bool _1ad8d8ede_checkDuplicateUseDecl(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _49342_pkg);
inline jule::Str _1ad8d9330_getAsLinkPath(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Str _50334_path);
inline void _1ad8d974d_pushCycleError(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad8d5b89_symBuilder>* _52432_sb, jule::Str _52449_path, _1dd0b6912_Builder* _52465_message);
inline void _1ad8d9b6b_pushCrossCycleError(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad8d5b89_symBuilder>* _53737_target, jule::Ptr<_1ad8e1bea_ImportInfo>* _53759_imp, jule::Ptr<_1ad6ceb70_Token>* _53778_errorToken);
inline jule::Bool _1ad8da067_checkImportCycles(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad8e1bea_ImportInfo> _56034_imp, jule::Ptr<_1ad70d033_UseDecl>* _56053_decl);
inline void _1ad8da485_checkPackageAccessibility(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad70d033_UseDecl>* _59142_decl, jule::Str* _59164_mod, jule::Str* _59175_path);
inline jule::Bool _1ad8da881_importPackage(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _62135_imp, jule::Ptr<_1ad70d033_UseDecl>* _62158_decl);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8dabc2_importUseDecl(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad70d033_UseDecl>* _66735_decl);
inline void _1ad8dadc0_importUseDecls(jule::Ptr<_1ad8d5b89_symBuilder> _self_);
inline void _1ad8db178_appendNode(_1ad8d5b89_symBuilder* _self_, _1ad6e41b2_Node* _69631_node);
inline void _1ad8db376_appendNodes(_1ad8d5b89_symBuilder* _self_);
inline void _1ad8db62e_pushDirectivePass(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad6e45d0_Directive>* _73238_d);
inline void _1ad8db82c_appendTopDirectives(_1ad8d5b89_symBuilder* _self_);
inline void _1ad8dba2a_build(jule::Ptr<_1ad8d5b89_symBuilder> _self_);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8e2217_SelectPackage(_1ad8e1bea_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> );
inline jule::Ptr<_1ad933a83_Var> _1ad8e2613_FindVar(_1ad8e1bea_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad8e2a0e_FindTypeAlias(_1ad8e1bea_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1ad7159ec_Struct> _1ad8e2e0a_FindStruct(_1ad8e1bea_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1ad7e778d_Fn> _1ad8e3306_FindFn(_1ad8e1bea_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1ad802ea2_Trait> _1ad8e3647_FindTrait(_1ad8e1bea_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1ad805658_Enum> _1ad8e3988_FindEnum(_1ad8e1bea_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1ad806d63_TypeEnum> _1ad8e3cc9_FindTypeEnum(_1ad8e1bea_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1ad8e4192_isLookupable(_1ad8e1bea_ImportInfo* _self_);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8e4945_SelectPackage(_1ad8e446c_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> );
inline jule::Ptr<_1ad933a83_Var> _1ad8e4d41_FindVar(_1ad8e446c_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded);
inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad8e523c_FindTypeAlias(_1ad8e446c_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded);
inline jule::Ptr<_1ad7159ec_Struct> _1ad8e5638_FindStruct(_1ad8e446c_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded);
inline jule::Ptr<_1ad7e778d_Fn> _1ad8e5a34_FindFn(_1ad8e446c_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded);
inline jule::Ptr<_1ad802ea2_Trait> _1ad8e5d75_FindTrait(_1ad8e446c_Package* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1ad805658_Enum> _1ad8e61b6_FindEnum(_1ad8e446c_Package* _self_, jule::Str _31724_ident);
inline jule::Ptr<_1ad806d63_TypeEnum> _1ad8e6507_FindTypeEnum(_1ad8e446c_Package* _self_, jule::Str _32328_ident);
inline jule::Ptr<_1ad89387d_comptimeTypeInfo> _1ad90e6da_pushComptimeTypeInfo(_1ad90e245_commonSemaMeta* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _21241_t);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad910345_SelectPackage(_1ad90ed6c_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _24129_selector);
inline jule::Ptr<_1ad933a83_Var> _1ad910741_FindVar(_1ad90ed6c_sema* _self_, jule::Str _25123_ident, jule::Bool _25135_binded);
inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad910b3c_FindTypeAlias(_1ad90ed6c_sema* _self_, jule::Str _26629_ident, jule::Bool _26641_binded);
inline jule::Ptr<_1ad7159ec_Struct> _1ad911038_FindStruct(_1ad90ed6c_sema* _self_, jule::Str _28126_ident, jule::Bool _28138_binded);
inline jule::Ptr<_1ad7e778d_Fn> _1ad911434_FindFn(_1ad90ed6c_sema* _self_, jule::Str _29622_ident, jule::Bool _29634_binded);
inline jule::Ptr<_1ad802ea2_Trait> _1ad911775_FindTrait(_1ad90ed6c_sema* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1ad805658_Enum> _1ad911ab6_FindEnum(_1ad90ed6c_sema* _self_, jule::Str _32624_ident);
inline jule::Ptr<_1ad806d63_TypeEnum> _1ad911e07_FindTypeEnum(_1ad90ed6c_sema* _self_, jule::Str _34128_ident);
inline jule::Bool _1ad912314_isFlag(_1ad90ed6c_sema* _self_, jule::I64 _35318_flags);
inline jule::Ptr<_1ad7eda91_SymTab> _1ad91259a_getCurrentFile(_1ad90ed6c_sema* _self_);
inline void _1ad912853_setCurrentFile(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7eda91_SymTab> _35634_f);
inline void _1ad912c71_pushErr(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad6ceb70_Token> _35823_token, jule::Str _35845_fmt, jule::Slice<jule::Any> _35865_args);
inline void _1ad9130d4_pushSuggestion(_1ad90ed6c_sema* _self_, jule::Str _36330_fmt, jule::Slice<jule::Any> _36350_args);
inline jule::Bool _1ad9134d0_isAccessibleDefine(_1ad90ed6c_sema* _self_, jule::Bool _36930_public, jule::Ptr<_1ad6ceb70_Token> _36944_token);
inline jule::Bool _1ad913986_isDuplicatedIdent(_1ad90ed6c_sema* _self_, jule::Uintptr _39229_itself, jule::Str* _39247_ident, jule::Bool _39259_binded);
inline void _1ad913ce9_checkDirectives(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _40137_d, jule::Any _40163_o);
inline jule::Bool _1ad9142a0_checkGenericQuantity(_1ad90ed6c_sema* _self_, jule::I64 _41036_required, jule::I64 _41051_given, jule::Ptr<_1ad6ceb70_Token> _41063_token);
inline jule::Bool _1ad9152d4_isUseAliasDuplication(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _46838_imp);
inline jule::Bool _1ad915625_checkAutoAlias(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _48035_imp);
inline jule::Bool _1ad915966_checkImport(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _49832_imp);
inline void _1ad915b64_checkImports(_1ad90ed6c_sema* _self_);
inline void _1ad915d62_implFileImpls(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad916060_implImpls(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad91625d_checkEnums(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad91645b_checkFileInherits(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad916659_checkInherits(jule::Ptr<_1ad90ed6c_sema> _self_);
inline _1ad9ca993_typeChecker _1ad916b10_typeChecker(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Trait _59132_l, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _59147_generics, jule::Ptr<_1ad9c99a3_referencer> _5927_referencer);
inline jule::Ptr<_1ad9b8596_TypeKind> _1ad917171_buildTypeWithRefers(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _61841_t, jule::Trait _61864_l, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _6197_generics, jule::Ptr<_1ad9c99a3_referencer> _61935_referencer);
inline jule::Bool _1ad9176d2_checkTypeWithRefers(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9c0ca7_TypeSymbol>* _62541_t, jule::Trait _62561_l, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _6267_generics, jule::Ptr<_1ad9c99a3_referencer> _62635_referencer);
inline jule::Ptr<_1ad8a9960_constraintChecker> _1ad917968_constraintChecker(jule::Ptr<_1ad90ed6c_sema> _self_);
inline jule::Bool _1ad917d64_checkType(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9c0ca7_TypeSymbol>* _64031_t, jule::Trait _64051_l);
inline jule::Ptr<_1ad9b8596_TypeKind> _1ad91831a_checkTypeRefers(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _64537_t, jule::Trait _64560_l, jule::Ptr<_1ad8ced70_ReferenceStack> _64575_refers);
inline jule::Ptr<_1ad9b8596_TypeKind> _1ad9187c1_buildTypeWithGenerics(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _65743_t, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _6587_generics, jule::Ptr<_1ad8ced70_ReferenceStack> _65835_refers);
inline jule::Ptr<_1ad9b8596_TypeKind> _1ad918e53_selectType(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _67532_t);
inline jule::Ptr<_1ad9878b7_eval> _1ad919409_evalpd(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Trait _68727_l, jule::Ptr<_1ad9b8596_TypeKind> _68742_p, jule::Ptr<_1ad933a83_Var> _68760_owner);
inline jule::Ptr<_1ad9878b7_eval> _1ad919805_evalp(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Trait _70226_l, jule::Ptr<_1ad9b8596_TypeKind> _70241_p);
inline jule::Ptr<_1ad9878b7_eval> _1ad919b46_eval(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Trait _70725_l);
inline jule::Bool _1ad91a262_checkAssignType(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Bool _71132_destIsRef, jule::Ptr<_1ad9b8596_TypeKind>* _71154_dest, jule::Ptr<_1ad985b90_Data>* _7128_d, jule::Ptr<_1ad6ceb70_Token> _71222_errorToken, jule::Ptr<_1ad8ced70_ReferenceStack> _71253_refers);
inline jule::Bool _1ad91a718__checkTypeCompatibility(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _75445_dest, jule::Ptr<_1ad9b8596_TypeKind>* _75467_src, jule::Ptr<_1ad6ceb70_Token> _7557_errorToken);
inline jule::Bool _1ad91abbe_checkTypeCompatibility(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _77244_dest, jule::Ptr<_1ad9b8596_TypeKind>* _7738_src, jule::Ptr<_1ad6ceb70_Token>* _77329_errorToken);
inline void _1ad91b0dc_pushCompatiblityError(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _78142_dest, jule::Ptr<_1ad985b90_Data>* _78164_src, jule::Ptr<_1ad6ceb70_Token>* _7828_errorToken);
inline jule::Bool _1ad91b593_checkTypeCompatibility1(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _79945_dest, jule::Ptr<_1ad985b90_Data>* _79967_src, jule::Ptr<_1ad6ceb70_Token>* _8008_errorToken);
inline jule::Ptr<_1ad9b8596_TypeKind> _1ad91ba49_buildNonGenericTypeKind(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _81445_ast, jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>* _8158_generics, jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>* _81544_ignored);
inline jule::Bool _1ad91be45_buildFnNonGenericTypeKinds(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns> _82647_f, jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>* _82663_ignored);
inline jule::Ptr<_1ad7ea84b_FnIns> _1ad91c286_getTraitCheckFnKind(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _84941_f);
inline jule::Bool _1ad91c73c_checkConstraintsFn(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _87840_f, jule::Ptr<_1ad6ceb70_Token>* _87856_et, jule::Ptr<_1ad7ea84b_FnIns> _87879_exist);
inline jule::Bool _1ad91cbe3_checkConstraintsStruct(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _89244_s, jule::Ptr<_1ad6ceb70_Token>* _89264_et, jule::Ptr<_1ad718857_StructIns> _89287_exist);
inline jule::Bool _1ad91d0de_basicFnEnvironment(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _90940_f, jule::Fn<jule::Bool,jule::Ptr<_1ad90ed6c_sema>*> _90951_algo);
inline jule::Bool _1ad91d4da_fnEnvironment(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _92935_f, jule::Fn<jule::Bool,jule::Ptr<_1ad90ed6c_sema>*,jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>*> _92946_algo);
inline void _1ad91d793_checkFnParamKind(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e96e6_ParamIns>* _94138_p);
inline jule::Bool _1ad91dad4_reloadFnInsTypes(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns> _94837_f);
inline jule::Bool _1ad91e08a_checkRefValidityForInitExpr(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Bool _98844_leftMut, jule::Ptr<_1ad985b90_Data>* _98864_d, jule::Ptr<_1ad6ceb70_Token>* _98879_errorToken);
inline jule::Bool _1ad91e3cb_isMutRiskyStruct(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad718857_StructIns>* _100529_s);
inline jule::Bool _1ad91e9e7_checkValidityForInitExpr(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Bool _103241_leftMut, jule::Bool _103256_leftRef, jule::Ptr<_1ad9b8596_TypeKind>* _10334_leftKind, jule::Ptr<_1ad985b90_Data>* _103330_d, jule::Ptr<_1ad6ceb70_Token>* _103345_errorToken);
inline jule::Bool _1ad91ede3_checkTypeAliasDeclKind(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b77a4_TypeAlias>* _106044_ta, jule::Trait _106064_l);
inline void _1ad920256_checkTypeAliasDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b77a4_TypeAlias>* _108340_ta, jule::Trait _108360_l);
inline void _1ad92050e_checkTypeAliasDeclDup(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b77a4_TypeAlias>* _109143_ta);
inline jule::Bool _1ad920795_checkTypeAliasDecls(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1be33e912_checkEnumItemsDup(_1ad90ed6c_sema* _self_, jule::Slice<jule::Ptr<_1ad804b0d_EnumItem>> _111536_items);
inline void _1be3527b0_checkEnumItemsDup(_1ad90ed6c_sema* _self_, jule::Slice<jule::Ptr<_1ad80678b_TypeEnumItem>> _111536_items);
inline void _1ad920d06_checkEnumItemsStr(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad805658_Enum>* _113539_e);
inline void _1be31d8e1_checkEnumItemInt(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9878b7_eval>* _116243_eval, jule::Ptr<_1ad805658_Enum>* _116261_e, jule::Ptr<_1ad9c16ae_Prim>* _116272_prim, jule::Ptr<_1ad804b0d_EnumItem>* _116290_item, jule::U64* _1162112_n);
inline void _1be32e44b_checkEnumItemInt(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9878b7_eval>* _116243_eval, jule::Ptr<_1ad805658_Enum>* _116261_e, jule::Ptr<_1ad9c16ae_Prim>* _116272_prim, jule::Ptr<_1ad804b0d_EnumItem>* _116290_item, jule::I64* _1162112_n);
inline void _1be319a74_checkEnumItemsInt1(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9c16ae_Prim>* _119841_prim, jule::Ptr<_1ad805658_Enum>* _119859_e);
inline void _1be319d60_checkEnumItemsInt1(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9c16ae_Prim>* _119841_prim, jule::Ptr<_1ad805658_Enum>* _119859_e);
inline void _1ad9219a5_checkEnumItemsInt(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad805658_Enum>* _123339_e);
inline void _1ad921c5d_checkEnumDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad805658_Enum>* _124335_e);
inline void _1ad922016_checkTypeEnumDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad806d63_TypeEnum>* _128439_e);
inline jule::Bool _1ad92229c_checkEnumDecls(jule::Ptr<_1ad90ed6c_sema> _self_);
inline jule::Bool _1ad922533_checkTypeEnumDecls(jule::Ptr<_1ad90ed6c_sema> _self_);
inline jule::Bool _1ad922874_checkDeclGenerics(_1ad90ed6c_sema* _self_, jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>* _134734_generics);
inline jule::Bool _1ad922bb5_checkFnDeclParamsDup(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7e778d_Fn>* _137437_f);
inline jule::Bool _1ad923006_checkFnDeclResultDup(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7e778d_Fn>* _141137_f);
inline jule::Bool _1ad923347_checkFnVariadicParam(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _145642_f);
inline void _1ad923600_checkFnDeclPrototype(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _146942_f);
inline jule::Bool _1ad923aa6_catchTraitInheritCycle(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad802ea2_Trait> _149139_t1, jule::Ptr<_1ad802ea2_Trait> _149155_t2, _1dd0b6912_Builder* _149172_message);
inline jule::Bool _1ad923de7__checkTraitDeclInherits(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad802ea2_Trait>* _151045_t);
inline void _1ad9241a0_checkTraitDeclInherits(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad802ea2_Trait>* _155144_t);
inline void _1ad924458_checkTraitDeclMethod(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _157642_f);
inline void _1ad924711_checkTraitDeclMethods(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad802ea2_Trait>* _159043_t);
inline void _1ad9249b9_checkTraitDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad802ea2_Trait>* _162636_t);
inline jule::Bool _1ad924c50_checkTraitDecls(jule::Ptr<_1ad90ed6c_sema> _self_);
inline jule::Bool _1ad92514b_checkTraitImplMethods(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad802ea2_Trait>* _165042_base, jule::Ptr<_1ad8abc5e_Impl>* _165057_ipl);
inline jule::Bool _1ad925547_implToStruct(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _166134_dest, jule::Ptr<_1ad8abc5e_Impl>* _166154_ipl);
inline void _1ad925800_implTrait(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad8abc5e_Impl>* _170331_decl);
inline void _1ad925aa8_implStruct(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad8abc5e_Impl>* _174632_decl);
inline void _1ad925d61_implImpl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad8abc5e_Impl>* _177030_decl);
inline void _1ad9261c4_checkVarDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad933a83_Var>* _178134_decl, jule::Trait _178150_l);
inline void _1ad92647c_checkGlobalVarDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad933a83_Var>* _182740_decl);
inline jule::Bool _1ad926713_checkGlobalDecls(jule::Ptr<_1ad90ed6c_sema> _self_);
inline jule::Bool _1ad926b0e_checkStructTraitImpl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _185542_strct, jule::Ptr<_1ad802ea2_Trait>* _185563_trt);
inline jule::Bool _1ad926e50_checkStructImpls(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _188138_s);
inline jule::Bool _1ad927291_checkStructFields(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _188939_st);
inline void _1ad927549_checkStructDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _190637_s);
inline jule::Bool _1ad9277d0_checkStructDecls(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad927a88_checkAnonFuncDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _193639_f);
inline void _1ad927d41_checkFuncDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _194135_f);
inline jule::Bool _1ad928182_checkFuncDeclsBy(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Slice<jule::Ptr<_1ad7e778d_Fn>>* _196338_funcs);
inline jule::Bool _1ad928418_checkFuncDecls(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad928836_pushCycleError(_1ad90ed6c_sema* _self_, jule::Str* _197927_st1, jule::Str* _197938_st2, _1dd0b6912_Builder* _197953_message);
inline void _1ad928eda_checkPackageDecls(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad92934d_checkDataForTypeInference(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad985b90_Data>* _203942_d, jule::Ptr<_1ad6ceb70_Token>* _203953_errToken);
inline void _1ad929606_checkVarValue(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad933a83_Var>* _205135_v);
inline void _1ad929969_evalVarValue(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad933a83_Var>* _210434_decl, jule::Trait _210450_l);
inline void _1ad929ccc_checkVar(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad933a83_Var>* _212130_decl, jule::Trait _212146_l);
inline void _1ad929eca_checkGlobals(jule::Ptr<_1ad90ed6c_sema> _self_);
inline jule::Ptr<_1ad7ea84b_FnIns> _1ad92a3c6_readyToCheckFn(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _214536_s, jule::Ptr<_1ad7e778d_Fn>* _214556_f);
inline __jule_tuple_bool__jule_tuple_bool _1ad92a7c2_checkGenericFn(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _216136_f, jule::Ptr<_1ad6ceb70_Token>* _216152_et);
inline void _1ad92ab35_checkTypeMethod(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _218437_s, jule::Ptr<_1ad7e778d_Fn>* _218457_f);
inline jule::Ptr<_1ad7ea84b_FnIns> _1ad92b0db_checkStructInsOp(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _219738_s, jule::Ptr<_1ad7e778d_Fn>* _219758_f, jule::Fn<jule::Bool,jule::Ptr<_1ad7e778d_Fn>> _219766_p);
inline jule::Bool _1ad92b4d7_checkStructEnv(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _220736_s, jule::Ptr<_1ad6ceb70_Token> _220755_errorToken);
inline jule::Bool _1ad92b8d3_precheckStructIns(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _230439_s, jule::Ptr<_1ad6ceb70_Token> _230458_errorToken);
inline void _1ad92bb8b_checkStructIns(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _234136_s);
inline void _1ad92be44_checkTypeStruct(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _234737_s);
inline void _1ad92c142_checkStructTypes(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad92c3ea_checkStructInsOperators(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns> _237144_s);
inline void _1ad92c6a3_precheckStructType(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _243540_s);
inline void _1ad92c8a1_precheckStructTypes(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad92cb59_checkRets(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _246130_f);
inline void _1ad92cebc_checkFnInsSc(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _247233_f, jule::Ptr<_1ad8b860b_scopeChecker>* _247249_sc);
inline void _1ad92d330_checkFnInsCaller(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _248538_f, jule::Ptr<_1ad6ceb70_Token> _248553_caller);
inline void _1ad92d5d8_checkFnIns(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _250732_f);
inline void _1ad92d891_checkFunc(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _251131_f);
inline void _1ad92db49_checkTestFn(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _252632_f);
inline void _1ad92de02_precheckFunc(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _255934_f);
inline void _1ad92e100_precheckFuncs(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad92e2ed_checkFuncs(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad92e4eb_checkPackageTypes(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad92e6e9_setFileSemaFields(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad92e8e7_setSemaFields(jule::Ptr<_1ad90ed6c_sema> _self_);
inline void _1ad92eba0_check(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _263727_files);
inline _1ad93009b_missingRetChecker static__1ad930497_new(void);
inline jule::Bool _1ad9307a5_checkConditional(_1ad93009b_missingRetChecker* _self_, jule::Ptr<_1ad8b1ea6_Conditional> _268532_c);
inline jule::Bool _1ad930ae6_checkMatch(_1ad93009b_missingRetChecker* _self_, jule::Ptr<_1ad8b5a9d_Match> _269726_m);
inline jule::Bool _1ad930ee2_checkInfIter(_1ad93009b_missingRetChecker* _self_, jule::Uintptr _272324_it, jule::Ptr<_1ad8b136d_Scope>* _272342_s);
inline jule::Bool _1ad931333_checkScope(_1ad93009b_missingRetChecker* _self_, jule::Ptr<_1ad8b136d_Scope> _274126_s);
inline jule::Bool _1ad931674_check(_1ad93009b_missingRetChecker* _self_, jule::Ptr<_1ad8b136d_Scope> _279621_s);
inline jule::Bool _1ad933e90_IsInitialized(_1ad933a83_Var* _self_);
inline jule::Bool _1ad934226_IsTypeInferred(_1ad933a83_Var* _self_);
inline jule::Bool _1ad9344ac_untypedConstant(_1ad933a83_Var* _self_);
inline jule::Bool static__1ad93505c_Dispose(jule::Ptr<_1ad7e778d_Fn> _1020_f);
inline jule::Bool static__1ad935326_Str(jule::Ptr<_1ad7e778d_Fn> _2416_f);
inline jule::Bool static__1ad93569a_logical(jule::Ptr<_1ad7e778d_Fn>* _4621_f, jule::Str _4629_ident);
inline jule::Bool static__1ad935964_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _7215_f);
inline jule::Bool static__1ad935c2d_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _7715_f);
inline jule::Bool static__1ad935ee7_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _8217_f);
inline jule::Bool static__1ad9362b1_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _8715_f);
inline jule::Bool static__1ad93657a_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _9217_f);
inline jule::Bool static__1ad9368ee_result(jule::Ptr<_1ad7e778d_Fn>* _9620_f, jule::Str _9628_ident);
inline jule::Bool static__1ad936bb8_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _11816_f);
inline jule::Bool static__1ad936e82_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _12316_f);
inline jule::Bool static__1ad93724b_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _12816_f);
inline jule::Bool static__1ad937515_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _13316_f);
inline jule::Bool static__1ad9377ce_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _13816_f);
inline jule::Bool static__1ad937a98_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _14316_f);
inline jule::Bool static__1ad937d62_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _14816_f);
inline jule::Bool static__1ad93812b_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _15319_f);
inline jule::Bool static__1ad9383e5_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _15818_f);
inline jule::Bool static__1ad9386ae_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _16319_f);
inline jule::Bool static__1ad938a33_unary(jule::Ptr<_1ad7e778d_Fn>* _16719_f, jule::Str _16727_ident);
inline jule::Bool static__1ad938cec_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _18716_f);
inline jule::Bool static__1ad9390b6_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _19216_f);
inline jule::Bool static__1ad939380_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _19719_f);
inline jule::Bool static__1ad939704_assign(jule::Ptr<_1ad7e778d_Fn>* _20120_f, jule::Str _20128_ident);
inline jule::Bool static__1ad9399bd_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _22122_f);
inline jule::Bool static__1ad939c87_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _22622_f);
inline jule::Bool static__1ad93a051_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _23122_f);
inline jule::Bool static__1ad93a31a_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _23622_f);
inline jule::Bool static__1ad93a5d4_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _24122_f);
inline jule::Bool static__1ad93a89d_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _24622_f);
inline jule::Bool static__1ad93ab67_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _25122_f);
inline jule::Bool static__1ad93ae31_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _25624_f);
inline jule::Bool static__1ad93b1ea_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _26125_f);
inline jule::Bool static__1ad93b4b4_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _26625_f);
inline void _1ad9726e8_pushErr(_1ad9721ba_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args);
inline jule::Bool _1ad97297e_checkTrait(_1ad9721ba_typeCompatibilityChecker* _self_);
inline jule::Bool _1ad972c15_checkPtr(_1ad9721ba_typeCompatibilityChecker* _self_);
inline jule::Bool _1ad972e9b_checkPrim(_1ad9721ba_typeCompatibilityChecker* _self_);
inline jule::Bool _1ad973397_typeEnum(_1ad9721ba_typeCompatibilityChecker* _self_, jule::Ptr<_1ad806d63_TypeEnum>* _18725_e, jule::Ptr<_1ad9b8596_TypeKind>* _18744_t2);
inline jule::Bool _1ad97362d_checkTypeEnum(_1ad9721ba_typeCompatibilityChecker* _self_);
inline jule::Bool _1ad9738b4_check(_1ad9721ba_typeCompatibilityChecker* _self_);
inline void _1ad97450d_pushErr(_1ad974046_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args);
inline jule::Bool _1ad974794_checkValidity(_1ad974046_assignTypeChecker* _self_);
inline jule::Bool _1ad974a2a_checkConst(_1ad974046_assignTypeChecker* _self_);
inline jule::Bool _1ad974cb1_checkCompatibility(_1ad974046_assignTypeChecker* _self_);
inline jule::Bool _1ad975047_check(_1ad974046_assignTypeChecker* _self_);
inline jule::Bool _1be53ce73_annotateConstraintElem(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _34646_k);
inline jule::Bool _1be53d21a_annotateConstraintElem(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _34646_k);
inline jule::Bool _1be545046_annotateConstraintElem(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _34646_k);
inline jule::Bool _1be549127_annotateConstraintElem(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _34646_k);
inline jule::Bool _1ad976345_annotateConstraintMap(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _36642_k);
inline jule::Bool _1ad976686_annotateConstraintTup(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _38142_k);
inline jule::Bool _1ad9769c7_annotateConstraintFn(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _39841_k);
inline jule::Bool _1ad976d18_annotateConstraintIdent(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _41944_k);
inline jule::Bool _1ad977159_annotateConstraint(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _44839_k);
inline void _1ad9774bc_pushGeneric(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _47332_k, jule::I64 _47346_i);
inline jule::Bool _1ad97780d_annotatePrim(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _48840_k);
inline jule::Bool _1ad977b4e_annotateArr(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _49239_k);
inline jule::Bool _1ad977e90_annotateSlc(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _50239_k);
inline jule::Bool _1ad97838b_checkMapKey(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _51238_k, jule::Ptr<_1ad9b8596_TypeKind>* _51258_ck);
inline jule::Bool _1ad9786cc_annotateMap(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _52039_k);
inline jule::Bool _1ad978a1d_annotateFn(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _53038_k);
inline jule::Bool _1ad978d5e_annotatePtr(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _55939_k);
inline jule::Bool _1ad9791a0_annotateSptr(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _56940_k);
inline jule::Bool _1ad9794e1_annotateStruct(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _57942_k);
inline jule::Bool _1ad979832_annotateAny(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _60139_k);
inline jule::Bool _1ad979b73_annotateKind(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _62240_k);
inline jule::Bool _1ad979e09_annotate(_1ad97591b_dynamicTypeAnnotation* _self_);
inline void _1ad97ad1c_pushErrToken(_1ad97a778_fnCallArgChecker* _self_, jule::Ptr<_1ad6ceb70_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args);
inline void _1ad97b180_pushErr(_1ad97a778_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args);
inline jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>> _1ad97b416_getParams(_1ad97a778_fnCallArgChecker* _self_);
inline jule::Bool _1ad97b757_checkCounts(_1ad97a778_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>* _68428_params);
inline jule::Bool _1ad97bc0d_checkArg(_1ad97a778_fnCallArgChecker* _self_, jule::Ptr<_1ad7e96e6_ParamIns>* _71629_p, jule::Ptr<_1ad985b90_Data>* _71648_arg, jule::Ptr<_1ad6ceb70_Token>* _71665_errorToken);
inline jule::Bool _1ad97c109_push(_1ad97a778_fnCallArgChecker* _self_, jule::Ptr<_1ad7e96e6_ParamIns>* _74525_p, jule::Ptr<_1ad6e94e7_Expr> _74543_arg);
inline jule::Bool _1ad97c505_pushVariadic(_1ad97a778_fnCallArgChecker* _self_, jule::Ptr<_1ad7e96e6_ParamIns>* _76933_p, jule::I64 _76951_i);
inline jule::Bool _1ad97c846_checkArgs(_1ad97a778_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>* _85030_params);
inline jule::Bool _1ad97cacc_checkDynamicTypeAnnotation(_1ad97a778_fnCallArgChecker* _self_);
inline jule::Bool _1ad97cd63_check(_1ad97a778_fnCallArgChecker* _self_);
inline void _1ad97dc43_pushErr(_1ad97d6b0_structLitChecker* _self_, jule::Ptr<_1ad6ceb70_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args);
inline void _1ad97e0a6_pushSuggestion(_1ad97d6b0_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args);
inline void _1ad97e4c4_pushMatch(_1ad97d6b0_structLitChecker* _self_, jule::Ptr<_1ad717ca7_FieldIns>* _93930_f, jule::Ptr<_1ad985b90_Data>* _93949_d, jule::Ptr<_1ad6ceb70_Token>* _93964_errorToken);
inline void _1ad97e837_checkPair(_1ad97d6b0_structLitChecker* _self_, jule::Ptr<_1ad6edc16_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>* _95862_exprs);
inline jule::Bool _1ad97eb78_readyExprs(_1ad97d6b0_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>* _99731_exprs);
inline void _1ad97ee31_check(_1ad97d6b0_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>* _102126_exprs);
inline jule::Ptr<_1ad933a83_Var> _1ad9809ae_buildVar(_1ad980492_rangeChecker* _self_, jule::Ptr<_1ad70802d_VarDecl>* _109725_decl);
inline void _1ad980bac_setSizeKey(_1ad980492_rangeChecker* _self_);
inline void _1ad9810ca_checkRangeExprValidity(_1ad980492_rangeChecker* _self_, jule::Ptr<_1ad985b90_Data>* _111643_d, jule::Ptr<_1ad933a83_Var>* _111654_key, jule::Ptr<_1ad9b8596_TypeKind>* _111670_k);
inline void _1ad9812c8_checkSlice(_1ad980492_rangeChecker* _self_);
inline void _1ad9814c6_checkArray(_1ad980492_rangeChecker* _self_);
inline void _1ad9816c4_checkMapKeyA(_1ad980492_rangeChecker* _self_);
inline void _1ad9818c2_checkMapKeyB(_1ad980492_rangeChecker* _self_);
inline void _1ad981ac0_checkMap(_1ad980492_rangeChecker* _self_);
inline void _1ad981cbd_checkStr(_1ad980492_rangeChecker* _self_);
inline void _1ad981ebb_checkComptime(_1ad980492_rangeChecker* _self_);
inline jule::Bool _1ad982252_checkComptimeRange(_1ad980492_rangeChecker* _self_);
inline jule::Bool _1ad9824d8_check(_1ad980492_rangeChecker* _self_);
inline void _1ad983165_prepareTypes(_1ad982c03_retTypeChecker* _self_);
inline void _1ad98341d_prepareExprs(_1ad982c03_retTypeChecker* _self_, jule::Ptr<_1ad6e94e7_Expr>* _127533_e);
inline void _1ad98361b_checkExprs(_1ad982c03_retTypeChecker* _self_);
inline jule::Bool _1ad9838a2_tryFuncMultiRetForward(_1ad982c03_retTypeChecker* _self_);
inline jule::Bool _1ad983be3_check(_1ad982c03_retTypeChecker* _self_, jule::Ptr<_1ad6e94e7_Expr>* _137726_e);
inline jule::Bool _1ad9860ad_IsNil(_1ad985b90_Data* _self_);
inline jule::Bool _1ad986344_IsVoid(_1ad985b90_Data* _self_);
inline jule::Bool _1ad9865ca_IsConst(_1ad985b90_Data* _self_);
inline jule::Bool _1ad98691b_GoodOperand(_1ad985b90_Data* _self_, jule::Ptr<_1ad985b90_Data>* _6128_other);
inline void _1ad987e4a_pushErr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _9223_token, jule::Str _9245_fmt, jule::Slice<jule::Any> _9265_args);
inline void _1ad9882ad_pushSuggestion(_1ad9878b7_eval* _self_, jule::Str _9730_fmt, jule::Slice<jule::Any> _9750_args);
inline void _1ad9884ab_allowBuiltin(_1ad9878b7_eval* _self_);
inline void _1ad9886a9_disallowBuiltin(_1ad9878b7_eval* _self_);
inline jule::Bool _1ad988940_isUnsafe(_1ad9878b7_eval* _self_);
inline jule::Bool _1ad988bc6_isGlobal(_1ad9878b7_eval* _self_);
inline jule::Bool _1ad988ed4_applyNumericPrefix(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _12439_d);
inline jule::Ptr<_1ad985b90_Data> _1ad989325_litStr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr>* _15919_l);
inline jule::Ptr<_1ad985b90_Data> _1ad989666_litRune(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr>* _17620_l);
inline jule::Ptr<_1ad985b90_Data> _1ad9899a7_litFloat(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr>* _19521_l);
inline jule::Ptr<_1ad985b90_Data> _1ad989ce8_litInt(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr>* _20723_l);
inline jule::Ptr<_1ad985b90_Data> _1ad98a139_litNum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr>* _26223_l);
inline jule::Ptr<_1ad985b90_Data> _1ad98a47a_evalLit(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr> _27123_lit);
inline jule::Any _1ad98a7bb_findBuiltins(_1ad9878b7_eval* _self_, jule::Str* _28429_ident);
inline jule::Any _1ad98abb7_getDef(_1ad9878b7_eval* _self_, jule::Str* _31123_ident, jule::Bool _31135_binded);
inline jule::Ptr<_1ad8ced70_ReferenceStack> _1ad98ae4d_getOwnerRefers(_1ad9878b7_eval* _self_);
inline void _1be6d548e_pushReference(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _36937_ref);
inline void _1be6ec044_pushReference(_1ad9878b7_eval* _self_, jule::Ptr<_1ad933a83_Var>* _36937_ref);
inline void _1be7d787c_pushReference(_1ad9878b7_eval* _self_, jule::Ptr<_1ad718857_StructIns>* _36937_ref);
inline jule::Ptr<_1ad985b90_Data> _1ad98b547__evalEnum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad805658_Enum> _37625_enm);
inline jule::Ptr<_1ad985b90_Data> _1ad98b943_evalEnum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad805658_Enum> _38528_enm, jule::Ptr<_1ad6ceb70_Token> _38540_errorToken);
inline jule::Ptr<_1ad985b90_Data> _1ad98bc84__evalTypeEnum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad806d63_TypeEnum> _39429_enm);
inline jule::Ptr<_1ad985b90_Data> _1ad98c180_evalTypeEnum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad806d63_TypeEnum> _40332_enm, jule::Ptr<_1ad6ceb70_Token> _40348_errorToken);
inline jule::Ptr<_1ad985b90_Data> _1ad98c4c1__evalStruct(_1ad9878b7_eval* _self_, jule::Ptr<_1ad718857_StructIns> _41227_s);
inline jule::Ptr<_1ad985b90_Data> _1ad98c8bc_evalStruct(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7159ec_Struct> _42630_s, jule::Ptr<_1ad6ceb70_Token> _42646_errorToken);
inline jule::Ptr<_1ad985b90_Data> _1ad98cc0d_evalFnIns(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7ea84b_FnIns> _45525_f);
inline void _1ad98d071_checkDeprecated(_1ad9878b7_eval* _self_, jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _46436_directives, jule::Ptr<_1ad6ceb70_Token> _46467_tok);
inline jule::Ptr<_1ad985b90_Data> _1ad98d46c_evalFn(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7e778d_Fn> _48026_f, jule::Ptr<_1ad6ceb70_Token> _48034_errorToken);
inline void _1ad98d88a_pushIllegalCycleError(_1ad9878b7_eval* _self_, jule::Ptr<_1ad933a83_Var>* _50538_v1, jule::Ptr<_1ad933a83_Var>* _50549_v2, _1dd0b6912_Builder* _50564_message);
inline jule::Bool _1ad98dc86_checkCrossCycle(_1ad9878b7_eval* _self_, jule::Ptr<_1ad933a83_Var>* _51532_v, _1dd0b6912_Builder* _51546_message);
inline jule::Bool _1ad98e182_checkIllegalCycles(_1ad9878b7_eval* _self_, jule::Ptr<_1ad933a83_Var>* _53239_v, jule::Ptr<_1ad6ceb70_Token> _53248_declToken);
inline jule::Ptr<_1ad985b90_Data> _1ad98e57d_evalVar(_1ad9878b7_eval* _self_, jule::Ptr<_1ad933a83_Var> _56027_v, jule::Ptr<_1ad6ceb70_Token> _56036_errorToken);
inline jule::Ptr<_1ad985b90_Data> _1ad98e979_evalTypeAlias(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b77a4_TypeAlias> _68333_ta, jule::Ptr<_1ad6ceb70_Token> _68349_errorToken);
inline jule::Ptr<_1ad985b90_Data> _1ad98ed75_evalDef(_1ad9878b7_eval* _self_, jule::Any* _72228_def, jule::Ptr<_1ad6ceb70_Token> _72242_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9901b6_evalIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ead12_IdentExpr> _74629_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad990507_evalUnary(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6eb5a4_UnaryExpr> _75130_u);
inline jule::Ptr<_1ad985b90_Data> _1ad990848_evalVariadic(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6eb97d_VariadicExpr> _75633_v);
inline jule::Ptr<_1ad985b90_Data> _1ad990b89_evalUnsafe(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ea85b_UnsafeExpr> _77831_u);
inline jule::Ptr<_1ad985b90_Data> _1ad990eca_evalArr(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad700a4d_SliceExpr> _78628_s);
inline jule::Ptr<_1ad985b90_Data> _1ad991481_evalExpSlc(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad700a4d_SliceExpr> _86331_s, jule::Ptr<_1ad9b8596_TypeKind> _86355_t, jule::Any _86373_first);
inline jule::Ptr<_1ad985b90_Data> _1ad9917c2_evalSliceExpr(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad700a4d_SliceExpr> _90134_s);
inline jule::Bool _1ad991bbd_checkIntegerIndexingByData(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _93747_d, jule::Ptr<_1ad6ceb70_Token> _93761_token);
inline void _1ad9920db_indexingPtr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _95032_d, jule::Ptr<_1ad985b90_Data>* _95047_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _95066_i);
inline void _1ad992509_indexingArr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _96632_d, jule::Ptr<_1ad985b90_Data>* _96647_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _96666_i);
inline void _1ad992927_indexingSlc(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _97632_d, jule::Ptr<_1ad985b90_Data>* _97647_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _97666_i);
inline void _1ad992d45_indexingMap(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _99932_d, jule::Ptr<_1ad985b90_Data>* _99947_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _99966_i);
inline void _1ad993263_indexingStr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _101632_d, jule::Ptr<_1ad985b90_Data>* _101647_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _101666_i);
inline void _1ad993681_comptimeRange(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _104434_d, jule::Ptr<_1ad985b90_Data>* _104449_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _104468_i);
inline void _1ad993a9e_toIndexing(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _106931_d, jule::Ptr<_1ad985b90_Data>* _106946_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _106965_i);
inline jule::Bool _1ad994055_pushGenericsFromExprSubIdent(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _109750_sexpr, jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>* _10988_generics, jule::Ptr<_1ad6e94e7_Expr>* _109841_expr);
inline jule::Bool _1ad994451_pushGenericsFromData(jule::Ptr<_1ad9878b7_eval> _self_, jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>* _110842_generics, jule::Ptr<_1ad6e94e7_Expr>* _110875_expr);
inline void _1ad9947b4_evalIdentDeclFromIndexing(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad985b90_Data>* _117847_d, jule::Ptr<_1ad7014aa_IndexingExpr>* _117862_i);
inline __jule_tuple_bool__jule_tuple_bool _1ad994c6a_checkGenericFn(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _122136_f, jule::Ptr<_1ad6ceb70_Token>* _122152_et, jule::Any* _122176_model);
inline void _1ad9950cd_evalFnGenericFromIndexing(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad985b90_Data>* _123747_d, jule::Ptr<_1ad7014aa_IndexingExpr>* _123762_i);
inline jule::Ptr<_1ad985b90_Data> _1ad99541e_evalIndexing(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad7014aa_IndexingExpr> _127733_i);
inline __jule_tuple_x_1ad985b90_Data__jule_tuple_x_1ad985b90_Data _1ad995760_evalSlicingExprs(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad701b1a_SlicingExpr>* _133738_s);
inline void _1ad995a18_slicingArr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _137327_d);
inline void _1ad995e36_slicingStr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _138827_d, jule::Ptr<_1ad985b90_Data>* _138838_l, jule::Ptr<_1ad985b90_Data>* _138849_r);
inline void _1ad99640e_checkSlicing(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _142633_d, jule::Ptr<_1ad985b90_Data>* _142644_l, jule::Ptr<_1ad985b90_Data>* _142655_r, jule::Ptr<_1ad701b1a_SlicingExpr>* _142666_s);
inline jule::Ptr<_1ad985b90_Data> _1ad996750_evalSlicing(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad701b1a_SlicingExpr> _144532_s);
inline void _1ad996b6d_castPtr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _148227_t, jule::Ptr<_1ad985b90_Data> _148245_d, jule::Ptr<_1ad6ceb70_Token> _148255_errorToken);
inline void _1ad99708b_castStruct(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _150430_t, jule::Ptr<_1ad985b90_Data> _150448_d, jule::Ptr<_1ad6ceb70_Token> _150458_errorToken);
inline void _1ad9974a9_castRef(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _152127_t, jule::Ptr<_1ad985b90_Data> _152145_d, jule::Ptr<_1ad6ceb70_Token> _152155_errorToken);
inline void _1ad9978c7_castSlc(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _154427_t, jule::Ptr<_1ad985b90_Data> _154445_d, jule::Ptr<_1ad6ceb70_Token> _154455_errorToken);
inline void _1ad997c3a_castStr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data> _159927_d, jule::Ptr<_1ad6ceb70_Token> _159937_errorToken);
inline void _1ad998158_castInt(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _164627_t, jule::Ptr<_1ad985b90_Data> _164645_d, jule::Ptr<_1ad6ceb70_Token> _164655_errorToken);
inline void _1ad998576_castNum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _169227_t, jule::Ptr<_1ad985b90_Data> _169245_d, jule::Ptr<_1ad6ceb70_Token> _169255_errorToken);
inline void _1ad998994_castPrim(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _172328_t, jule::Ptr<_1ad985b90_Data> _172346_d, jule::Ptr<_1ad6ceb70_Token> _172356_errorToken);
inline void _1ad998d07_castConstant(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _173933_t, jule::Ptr<_1ad985b90_Data>* _173952_d);
inline void _1ad999225_castTypeEnum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _174833_t, jule::Ptr<_1ad985b90_Data>* _174852_d, jule::Ptr<_1ad6ceb70_Token>* _174867_errorToken);
inline void _1ad999643_castTypeEnumT(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _175834_t, jule::Ptr<_1ad985b90_Data>* _175853_d, jule::Ptr<_1ad6ceb70_Token>* _175868_errorToken);
inline jule::Ptr<_1ad985b90_Data> _1ad999ae9_evalCastByTypeNData(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _176839_t, jule::Ptr<_1ad985b90_Data> _176857_d, jule::Ptr<_1ad6ceb70_Token> _176871_errorToken);
inline jule::Ptr<_1ad985b90_Data> _1ad99a0a0_evalCastT(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _184531_t, jule::Ptr<_1ad6e94e7_Expr>* _184550_e, jule::Ptr<_1ad6ceb70_Token>* _184570_et);
inline jule::Ptr<_1ad985b90_Data> _1ad99a3e1_evalCast(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ebd57_CastExpr> _186229_c);
inline jule::Ptr<_1ad985b90_Data> _1ad99a732_evalNamespace(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ec231_NamespaceExpr> _187133_s);
inline jule::Ptr<_1ad985b90_Data> _1ad99abd8_evalStructLitExplicit(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad718857_StructIns> _189342_s, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _18947_exprs, jule::Ptr<_1ad6ceb70_Token> _189432_errorToken);
inline jule::Ptr<_1ad985b90_Data> _1ad99b029_evalStructLit(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ee541_StructLit> _193134_lit);
inline _1ad9ca993_typeChecker _1ad99b2b0_typeChecker(_1ad9878b7_eval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad99b601_evalType(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6e51b3_TypeDecl> _196328_t);
inline void _1ad99b964_callTypeFn(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ed221_FnCallExpr>* _197632_fc, jule::Ptr<_1ad985b90_Data>* _197659_d);
inline void _1ad99bcc7_callBuiltinFn(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ed221_FnCallExpr>* _200235_fc, jule::Ptr<_1ad985b90_Data>* _200262_d);
inline void _1ad99c13a_checkFnOfConcurrentCall(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _201440_f, jule::Ptr<_1ad6ceb70_Token> _201451_errorToken);
inline void _1ad99c558_processExceptionalHandler(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _203346_f, jule::Ptr<_1ad6ed221_FnCallExpr>* _203362_fc, jule::Ptr<_1ad985b90_Data>* _203389_d);
inline void _1ad99c8bb_callFn(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ed221_FnCallExpr>* _206028_fc, jule::Ptr<_1ad985b90_Data>* _206055_d);
inline jule::Ptr<_1ad985b90_Data> _1ad99cc0c_evalFnCall(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ed221_FnCallExpr> _220931_fc);
inline jule::Ptr<_1ad985b90_Data> _1ad99d108_evalEnumStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad805658_Enum> _224234_enm, jule::Ptr<_1ad6ceb70_Token> _224250_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad99d504_evalTypeEnumStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad806d63_TypeEnum> _225038_enm, jule::Ptr<_1ad6ceb70_Token> _225054_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad99d900_evalStructStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad718857_StructIns> _227336_s, jule::Ptr<_1ad6ceb70_Token> _227351_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad99dda6_evalTraitSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data> _230837_d, jule::Ptr<_1ad802ea2_Trait> _230851_trt, jule::Ptr<_1ad6ceb70_Token> _230868_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad99e417_evalStructSubIdentField(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _233044_d, jule::Ptr<_1ad718857_StructIns>* _233059_s, jule::Ptr<_1ad6ceb70_Token>* _233079_tok, jule::Ptr<_1ad717ca7_FieldIns>* _2330104_f);
inline jule::Ptr<_1ad985b90_Data> _1ad99ea33_evalStructSubIdentMethod(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _235545_d, jule::Ptr<_1ad718857_StructIns>* _235560_s, jule::Ptr<_1ad6ceb70_Token>* _235580_tok, jule::Ptr<_1ad7e778d_Fn>* _2355105_m, jule::Bool _2355113_ref);
inline jule::Ptr<_1ad985b90_Data> _1ad9a0094_evalStructSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data> _237638_d, jule::Ptr<_1ad718857_StructIns> _237652_s, jule::Ptr<_1ad6ec60a_SubIdentExpr> _237671_si, jule::Bool _237695_ref);
inline jule::Ptr<_1ad985b90_Data> _1ad9a03d5_evalIntTypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _240033_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a0726_evalUintTypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _242734_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a0a67_evalI8TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _244532_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a0da8_evalI16TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _247433_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a11e9_evalI32TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _250333_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a153a_evalI64TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _253233_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a187b_evalU8TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _256132_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a1bbc_evalU16TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _258033_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a200d_evalU32TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _259933_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a234e_evalU64TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _261833_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a2690_evalF32TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _263733_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a29d1_evalF64TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _267633_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a2dcc_evalPrimStatic(_1ad9878b7_eval* _self_, jule::Str _271530_kind, jule::Ptr<_1ad6ceb70_Token> _271541_ident);
inline jule::Ptr<_1ad985b90_Data> _1ad9a32c8_evalTypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data> _274734_d, jule::Ptr<_1ad6ec60a_SubIdentExpr> _274748_si);
inline jule::Ptr<_1ad985b90_Data> _1be921972_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad89387d_comptimeTypeInfo>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1ad985b90_Data> _1be92623a_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad8844d9_comptimeStructField>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1ad985b90_Data> _1be92a9ae_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad88a930_comptimeEnumField>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1ad985b90_Data> _1be930277_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad88d746_comptimeParam>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1ad985b90_Data> _1be934b3e_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad88770c_comptimeStatic>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1ad985b90_Data> _1be9393b3_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad899983_comptimeValue>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1ad985b90_Data> _1be93db37_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad89e15d_comptimeFile>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si);
inline jule::Ptr<_1ad985b90_Data> _1be943444_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad8a3074_comptimeDecl>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si);
inline __jule_tuple_x_1ad985b90_Data__jule_tuple_bool _1ad9a3b7a_tryComptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _277143_d, jule::Ptr<_1ad6ec60a_SubIdentExpr> _277157_si);
inline jule::Ptr<_1ad985b90_Data> _1ad9a4076_evalObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data> _280235_d, jule::Ptr<_1ad6ec60a_SubIdentExpr> _280249_si);
inline jule::Ptr<_1ad985b90_Data> _1ad9a43b7_evalSubIdent(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ec60a_SubIdentExpr> _284633_si);
inline jule::Ptr<_1ad985b90_Data> _1ad9a4708_evalTuple(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ea0db_TupleExpr> _286030_tup);
inline jule::Ptr<_1ad985b90_Data> _1ad9a4b04_evalMap(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad9c7352_Map> _288928_m, jule::Ptr<_1ad6ee9e7_BraceLit> _288941_lit);
inline jule::Ptr<_1ad985b90_Data> _1ad9a4e45_evalBraceLit(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ee9e7_BraceLit> _293733_lit);
inline jule::Ptr<_1ad985b90_Data> _1ad9a5286_evalAnonFunc(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad706d73_FnDecl> _295233_decl);
inline jule::Ptr<_1ad985b90_Data> _1ad9a55c7_evalBinary(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ecab1_BinaryExpr> _299031_op);
inline jule::Ptr<_1ad985b90_Data> _1ad9a5918_evalExprKind(jule::Ptr<_1ad9878b7_eval> _self_, jule::Any _300533_kind);
inline jule::Ptr<_1ad985b90_Data> _1ad9a5c59_eval1(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6e94e7_Expr> _305326_expr);
inline jule::Ptr<_1ad985b90_Data> _1ad9a609a_eval(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6e94e7_Expr> _309825_expr);
inline jule::Ptr<_1ad985b90_Data> _1ad9a63db_evalExpr1(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6e94e7_Expr> _311330_expr);
inline jule::Ptr<_1ad985b90_Data> _1ad9a672c_evalExpr(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6e94e7_Expr> _312929_expr);
inline _1ad9a6bb1_unaryEval static__1ad9a7134_new(jule::Ptr<_1ad9878b7_eval> _315020_e);
inline void _1ad9a7332_minus(_1ad9a6bb1_unaryEval* _self_);
inline void _1ad9a7530_plus(_1ad9a6bb1_unaryEval* _self_);
inline void _1ad9a772d_caret(_1ad9a6bb1_unaryEval* _self_);
inline void _1ad9a792b_excl(_1ad9a6bb1_unaryEval* _self_);
inline void _1ad9a7b29_star(_1ad9a6bb1_unaryEval* _self_);
inline void _1ad9a7d27_amper(_1ad9a6bb1_unaryEval* _self_);
inline void _1ad9a8025_typeDecl(_1ad9a6bb1_unaryEval* _self_);
inline void _1ad9a8223_evalData(_1ad9a6bb1_unaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9a8564_eval(_1ad9a6bb1_unaryEval* _self_, jule::Ptr<_1ad6eb5a4_UnaryExpr> _341024_u);
inline _1ad9a8b4c_binaryEval static__1ad9a9235_newPlain(jule::Ptr<_1ad9878b7_eval> _345825_e);
inline _1ad9a8b4c_binaryEval static__1ad9a95a9_new(jule::Ptr<_1ad9878b7_eval> _346420_e, jule::Ptr<_1ad6ceb70_Token> _346434_op);
inline jule::Bool _1ad9a9840_checkTypeCompatibility(_1ad9a8b4c_binaryEval* _self_);
inline jule::Bool _1ad9a9ac6_checkStructCommonOperatorCompatibility(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9a9d5c_evalComptimeTypeInfo(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9aa0e3_evalNil(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9aa379_evalEnum(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9aa610_evalTypeEnum(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9aa896_evalSptr(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9aab2c_evalPtr(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9aadb3_evalArr(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9ab149_evalStruct(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9ab3d0_evalTrait(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9ab666_evalAny(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9ab8ec_evalBool(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9abb83_evalStr(_1ad9a8b4c_binaryEval* _self_);
inline void _1ad9abd81_setTypeToGreater(_1ad9a8b4c_binaryEval* _self_);
inline void _1ad9ac139_checkModData(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _386333_d);
inline void _1ad9ac337_mod(_1ad9a8b4c_binaryEval* _self_);
inline jule::Bool _1ad9ac733_numbersAreCompatibile(_1ad9a8b4c_binaryEval* _self_, jule::Str* _388534_lk, jule::Str* _388544_rk);
inline jule::Ptr<_1ad985b90_Data> _1ad9ac9b9_shift(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9acc50_evalFloat(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9aced6_evalInt(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9ad26c_evalPrim(_1ad9a8b4c_binaryEval* _self_);
inline jule::Bool _1ad9ad503_checkSpecialCases(_1ad9a8b4c_binaryEval* _self_);
inline jule::Ptr<_1ad985b90_Data> _1ad9ad789_evalOp(_1ad9a8b4c_binaryEval* _self_);
inline void _1ad9ada42_evalConst(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _417530_d);
inline void _1ad9adcea_checkData(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _425330_d);
inline void _1ad9adee8_checkDatas(_1ad9a8b4c_binaryEval* _self_);
inline void _1ad9ae2a1_setModel(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _426529_d);
inline void _1ad9ae559_postEval(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _429429_d);
inline jule::Ptr<_1ad985b90_Data> _1ad9ae955_solveExplicit(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _429934_l, jule::Ptr<_1ad985b90_Data>* _429949_r);
inline jule::Ptr<_1ad985b90_Data> _1ad9aec96_eval(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad6ecab1_BinaryExpr>* _431925_op);
inline jule::Str _1ad9b8992_Str(_1ad9b8596_TypeKind* _self_);
inline jule::Bool _1ad9b8cd3_Equal(jule::Ptr<_1ad9b8596_TypeKind> _self_, jule::Ptr<_1ad9b8596_TypeKind> _7218_other);
inline jule::Bool _1ad9b9443_Binded(_1ad9b8596_TypeKind* _self_);
inline jule::Bool _1ad9b96c9_IsNil(_1ad9b8596_TypeKind* _self_);
inline jule::Bool _1ad9b9960_Void(_1ad9b8596_TypeKind* _self_);
inline jule::Bool _1ad9b9be6_Comparable(_1ad9b8596_TypeKind* _self_);
inline jule::Bool _1ad9b9e7c_Mutable(_1ad9b8596_TypeKind* _self_);
inline jule::Bool _1ad9ba213_Ordered(_1ad9b8596_TypeKind* _self_);
inline jule::Bool _1ad9ba499_NilCompatible(_1ad9b8596_TypeKind* _self_);
inline jule::Bool _1ad9ba730_GC(_1ad9b8596_TypeKind* _self_);
inline jule::Bool _1ad9ba9b6_Variadicable(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad9c16ae_Prim> _1ad9bac4c_Prim(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad9c51da_Sptr> _1ad9baed3_Sptr(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad9c89a2_Ptr> _1ad9bb269_Ptr(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad805658_Enum> _1ad9bb500_Enum(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad806d63_TypeEnum> _1ad9bb786_TypeEnum(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad9c7ece_Arr> _1ad9bba1c_Arr(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad9c5bad_Slc> _1ad9bbca3_Slc(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad7ea84b_FnIns> _1ad9bc039_Fn(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad718857_StructIns> _1ad9bc2c0_Struct(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad802ea2_Trait> _1ad9bc556_Trait(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad9c7352_Map> _1ad9bc7dc_Map(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad9c67a2_Tuple> _1ad9bca73_Tup(_1ad9b8596_TypeKind* _self_);
inline jule::Bool _1ad9bcd09_comptime(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad885c7c_comptimeStructFields> _1ad9bd090_comptimeStructFields(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad8844d9_comptimeStructField> _1ad9bd326_comptimeStructField(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad88bc3e_comptimeEnumFields> _1ad9bd5ac_comptimeEnumFields(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad88a930_comptimeEnumField> _1ad9bd843_comptimeEnumField(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad8905a0_comptimeParams> _1ad9bdac9_comptimeParams(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad88d746_comptimeParam> _1ad9bdd60_comptimeParam(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad87db21_comptimeRange> _1ad9be0e6_comptimeRange(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad891e0e_comptimeTypeInfos> _1ad9be37c_comptimeTypeInfos(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad89387d_comptimeTypeInfo> _1ad9be613_comptimeTypeInfo(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad888eb1_comptimeStatics> _1ad9be899_comptimeStatics(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad88770c_comptimeStatic> _1ad9beb30_comptimeStatic(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad899983_comptimeValue> _1ad9bedb6_comptimeValue(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad8a3074_comptimeDecl> _1ad9c014c_comptimeDecl(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad8a0c86_comptimeDecls> _1ad9c03d3_comptimeDecls(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad89e15d_comptimeFile> _1ad9c0669_comptimeFile(_1ad9b8596_TypeKind* _self_);
inline jule::Ptr<_1ad89c6de_comptimeFiles> _1ad9c0900_comptimeFiles(_1ad9b8596_TypeKind* _self_);
inline jule::Bool _1ad9c115e_checked(_1ad9c0ca7_TypeSymbol* _self_);
inline jule::Str _1ad9c1a33_Str(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c1d74_Equal(jule::Ptr<_1ad9c16ae_Prim> _self_, jule::Ptr<_1ad9b8596_TypeKind> _51418_other);
inline jule::Bool _1ad9c2319_IsConstraint(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c25a0_IsI8(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c2836_IsI16(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c2abc_IsI32(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c2d53_IsI64(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c30d9_IsU8(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c3370_IsU16(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c3606_IsU32(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c388c_IsU64(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c3b23_IsF32(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c3da9_IsF64(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c4140_IsInt(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c43c6_IsUint(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c465c_IsUintptr(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c48e3_IsBool(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c4b79_IsStr(_1ad9c16ae_Prim* _self_);
inline jule::Bool _1ad9c4e10_IsAny(_1ad9c16ae_Prim* _self_);
inline jule::Str _1ad9c5592_Str(_1ad9c51da_Sptr* _self_);
inline jule::Bool _1ad9c58d3_Equal(jule::Ptr<_1ad9c51da_Sptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _59118_other);
inline jule::Str _1ad9c6175_Str(_1ad9c5bad_Slc* _self_);
inline jule::Bool _1ad9c64b6_Equal(jule::Ptr<_1ad9c5bad_Slc> _self_, jule::Ptr<_1ad9b8596_TypeKind> _61018_other);
inline jule::Str _1ad9c6b59_Str(_1ad9c67a2_Tuple* _self_);
inline jule::Bool _1ad9c6e9a_Equal(jule::Ptr<_1ad9c67a2_Tuple> _self_, jule::Ptr<_1ad9b8596_TypeKind> _63918_other);
inline jule::Str _1ad9c7709_Str(_1ad9c7352_Map* _self_);
inline jule::Bool _1ad9c7a4a_Equal(jule::Ptr<_1ad9c7352_Map> _self_, jule::Ptr<_1ad9b8596_TypeKind> _67618_other);
inline jule::Str _1ad9c8386_Str(_1ad9c7ece_Arr* _self_);
inline jule::Bool _1ad9c86c7_Equal(jule::Ptr<_1ad9c7ece_Arr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _70418_other);
inline jule::Str _1ad9c8d59_Str(_1ad9c89a2_Ptr* _self_);
inline jule::Bool _1ad9c919a_Equal(jule::Ptr<_1ad9c89a2_Ptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _72818_other);
inline jule::Bool _1ad9c951e_IsUnsafe(_1ad9c89a2_Ptr* _self_);
inline void _1ad9cb224_pushErr(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6ceb70_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args);
inline void _1ad9cb422_allowBuiltin(_1ad9ca993_typeChecker* _self_);
inline void _1ad9cb620_disallowBuiltin(_1ad9ca993_typeChecker* _self_);
inline void _1beb6d98d_pushReference(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad718857_StructIns>* _83237_t);
inline void _1beb71463_pushReference(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad802ea2_Trait>* _83237_t);
inline void _1ad9cbb81_pushReferenceByKind(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _84240_k);
inline void _1ad9cc09e_pushCycleError(_1ad9ca993_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1dd0b6912_Builder* _85353_message);
inline jule::Bool _1ad9cc49a_checkCrossCycle(_1ad9ca993_typeChecker* _self_, jule::Any _87527_decl, _1dd0b6912_Builder* _87543_message);
inline jule::Bool _1ad9cc896_checkIllegalCycles(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl);
inline jule::Trait _1ad9ccc92_fromTypeAlias(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _95930_decl, jule::Ptr<_1ad9b77a4_TypeAlias>* _95962_ta);
inline jule::Ptr<_1ad805658_Enum> _1ad9cd18d_fromEnum(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _103625_decl, jule::Ptr<_1ad805658_Enum>* _103657_e);
inline jule::Ptr<_1ad806d63_TypeEnum> _1ad9cd589_fromTypeEnum(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _104829_decl, jule::Ptr<_1ad806d63_TypeEnum>* _104861_e);
inline jule::Ptr<_1ad802ea2_Trait> _1ad9cd985_fromTrait(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _106026_decl, jule::Ptr<_1ad802ea2_Trait>* _106058_t);
inline jule::Bool _1ad9cdd81_checkStructIns(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad718857_StructIns>* _107335_ins, jule::Ptr<_1ad6ceb70_Token>* _107357_errorToken);
inline void _1ad9ce139_appendUsedStructReference(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad7159ec_Struct>* _109446_s);
inline jule::Ptr<_1ad718857_StructIns> _1ad9ce535_buildStructInstance(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _110740_decl, jule::Ptr<_1ad7159ec_Struct>* _110772_s);
inline jule::Ptr<_1ad718857_StructIns> _1ad9ce931_fromStructIns(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad718857_StructIns>* _115534_ins, jule::Ptr<_1ad6ceb70_Token> _115555_token);
inline jule::Ptr<_1ad718857_StructIns> _1ad9ced2c_fromStruct(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _117331_decl, jule::Ptr<_1ad7159ec_Struct>* _117363_s);
inline jule::Trait _1ad9d016d_getDef(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _121727_decl);
inline jule::Trait _1ad9d04ae_buildIdent(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl> _127830_decl);
inline jule::Trait _1ad9d0800_buildSubIdent(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e5a87_SubIdentTypeDecl> _128233_decl);
inline jule::Ptr<_1ad9c51da_Sptr> _1ad9d0b41_buildSptrFromType(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _131638_elem);
inline jule::Ptr<_1ad9c51da_Sptr> _1ad9d0e82_buildSptr(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e625d_SptrTypeDecl> _133629_decl);
inline jule::Ptr<_1ad9c89a2_Ptr> _1ad9d12c3_buildPtrFromType(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _134537_elem);
inline jule::Ptr<_1ad9c89a2_Ptr> _1ad9d1614_buildPtr(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e6bdc_PtrTypeDecl> _136028_decl);
inline jule::Ptr<_1ad9c5bad_Slc> _1ad9d1955_buildSlc(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e65e3_SlcTypeDecl> _137728_decl);
inline jule::Ptr<_1ad9c7ece_Arr> _1ad9d1c96_buildArr(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e747e_ArrTypeDecl> _139828_decl);
inline jule::Ptr<_1ad9c7352_Map> _1ad9d20d7_buildMap(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e7bcc_MapTypeDecl> _144728_decl);
inline jule::Ptr<_1ad9c67a2_Tuple> _1ad9d2428_buildTuple(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e68e0_TupleTypeDecl> _147930_decl);
inline jule::Bool _1ad9d2769_checkFuncTypes(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _149235_f);
inline jule::Ptr<_1ad7ea84b_FnIns> _1ad9d2aaa_buildFunc(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad706d73_FnDecl> _151029_decl);
inline jule::Trait _1ad9d2deb_buildNamespace(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e5e61_NamespaceTypeDecl> _154034_ns);
inline jule::Ptr<_1ad9b8596_TypeKind> _1ad9d323c_build(_1ad9ca993_typeChecker* _self_, jule::Any* _155926_declKind);
inline jule::Ptr<_1ad9b8596_TypeKind> _1ad9d357d_checkDecl(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _164730_decl);
inline jule::Bool static__1ad9d3ec9_prim(jule::Str* _167418_ident, jule::Ptr<_1ad9c16ae_Prim> _167430_t);
inline jule::Bool static__1ad9d434d_exist(jule::Str* _167819_ident, jule::Ptr<_1ad9b8596_TypeKind>* _167836_k);
inline void _1bb06841e_stop(_1bb067c6a_scopeParser* _self_);
inline jule::Bool _1bb0686a5_stopped(_1bb067c6a_scopeParser* _self_);
inline jule::Bool _1bb06893b_finished(_1bb067c6a_scopeParser* _self_);
inline jule::Bool _1bb068bc2_isLastSt(_1bb067c6a_scopeParser* _self_);
inline void _1bb069035_pushErr(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1ad6ceb70_Token> _15323_token, jule::Str _15345_fmt);
inline void _1bb069398_pushSuggestion(_1bb067c6a_scopeParser* _self_, jule::Str _15830_fmt, jule::Slice<jule::Any> _15850_args);
inline void _1bb069651_insertAsNext(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _16233_tokens);
inline jule::Ptr<_1bb0673c9_stmt> _1bb0698d7_next(_1bb067c6a_scopeParser* _self_);
inline jule::Ptr<_1ad7051d4_ScopeTree> _1bb069cd3_buildScope(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _17231_tokens, jule::Ptr<_1ad6ceb70_Token> _17260_end);
inline jule::Ptr<_1ad70802d_VarDecl> _1bb06a124_buildVarSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _18331_tokens);
inline jule::Ptr<_1ad708407_RetSt> _1bb06a465_buildRetSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _19130_tokens);
inline jule::Ptr<_1ad708b77_Iter> _1bb06a7a6_buildWhileNextIter(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1bb0673c9_stmt>* _20239_s);
inline jule::Ptr<_1ad7094a2_WhileKind> _1bb06aae7_buildWhileIterKind(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _24739_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1bb06ae38_getRangeKindKeysTokens(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _25343_toks);
inline jule::Ptr<_1ad70802d_VarDecl> _1bb06b279_buildRangeKindKey(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _25938_tokens);
inline jule::Slice<jule::Ptr<_1ad70802d_VarDecl>> _1bb06b5ba_buildRangeKindKeys(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>>* _28539_parts);
inline void _1bb06b92d_setupRangeKindKeysPlain(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1ad709da9_RangeKind>* _29344_rng, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _29371_tokens);
inline void _1bb06bc91_setupRangeKindKeysExplicit(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1ad709da9_RangeKind>* _30847_rng, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _30874_tokens);
inline void _1bb06c104_setupRangeKindKeys(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1ad709da9_RangeKind>* _31739_rng, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _31766_tokens);
inline jule::Ptr<_1ad709da9_RangeKind> _1bb06c5aa_buildRangeIterKind(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _32539_varTokens, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _3268_exprTokens, jule::Ptr<_1ad6ceb70_Token>* _32642_inToken);
inline jule::Any _1bb06c9a6_buildCommonIterKind(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _34140_tokens, jule::Ptr<_1ad6ceb70_Token>* _34166_errTok);
inline jule::Ptr<_1ad708b77_Iter> _1bb06cce7_buildCommonIter(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _36835_tokens);
inline jule::Ptr<_1ad708b77_Iter> _1bb06d138_buildIterSt(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1bb0673c9_stmt>* _39832_st);
inline jule::Ptr<_1ad70a283_BreakSt> _1bb06d479_buildBreakSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _40533_tokens);
inline jule::Ptr<_1ad70a65c_ContSt> _1bb06d7ba_buildContSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _42332_tokens);
inline jule::Ptr<_1ad70ab13_If> _1bb06db0b_buildIf(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _44128_tokens);
inline jule::Ptr<_1ad70aedc_Else> _1bb06de4c_buildElse(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _47430_tokens);
inline jule::Ptr<_1ad70b493_Conditional> _1bb06e28d_buildIfElseChain(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _49836_tokens);
inline jule::Ptr<_1ad6e94e7_Expr> _1bb06e5ce_buildCoCallSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _52133_tokens);
inline jule::Ptr<_1ad702b71_GotoSt> _1bb06e920_buildGotoSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _53732_tokens);
inline jule::Ptr<_1ad702e6d_FallSt> _1bb06ec61_buildFallSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _55732_tokens);
inline jule::Ptr<_1ad70bbd0_TypeAliasDecl> _1bb0700a2_buildTypeAliasSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _56737_tokens);
inline void _1bb07057a_pushCaseExpr(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _57332_tokens, jule::Ptr<_1ad6ceb70_Token> _57361_token, jule::Bool _5743_typeMatch, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>* _57425_exprs);
inline __jule_tuple_sx_1ad6e94e7_Expr__jule_tuple_bool _1bb070a31_buildCaseExprs(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _59635_tokens, jule::Ptr<_1ad6ceb70_Token>* _59665_colon, jule::Bool _59687_typeMatch);
inline jule::Ptr<_1ad7051d4_ScopeTree> _1bb070d72_buildCaseScope(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _63835_tokens);
inline __jule_tuple_x_1ad70c186_Case__jule_tuple_bool _1bb07126d_buildCase(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _66530_tokens, jule::Bool _66555_typeMatch);
inline __jule_tuple_sx_1ad70c186_Case__jule_tuple_x_1ad70aedc_Else _1bb071669_buildCases(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _68430_tokens, jule::Bool _68455_typeMatch);
inline jule::Ptr<_1ad70c9a0_MatchCase> _1bb0719aa_buildMatchCase(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _71834_tokens);
inline jule::Ptr<_1ad7051d4_ScopeTree> _1bb071ceb_buildScopeSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _75132_tokens);
inline jule::Ptr<_1ad702797_LabelSt> _1bb07213c_buildLabelSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _79433_tokens);
inline __jule_tuple__1ad704821_StmtData__jule_tuple_bool _1bb07247d_buildIdSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _80930_tokens);
inline jule::Ptr<_1bb082c85_assignInfo> _1bb0727be_buildAssignInfo(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _82336_tokens);
inline jule::Ptr<_1ad7035cd_AssignLeft> _1bb072b10_buildAssignL(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _86833_tokens);
inline jule::Slice<jule::Ptr<_1ad7035cd_AssignLeft>> _1bb072e51_buildAssignLs(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>>* _87934_parts);
inline __jule_tuple__1ad704821_StmtData__jule_tuple_bool _1bb073292_buildPlainAssign(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _88837_tokens);
inline jule::Bool _1bb07368d_buildDeclAssign1(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _94237_lefts, jule::Ptr<_1ad703b61_AssignSt>* _94266_assign);
inline __jule_tuple_x_1ad703b61_AssignSt__jule_tuple_bool _1bb0739ce_buildDeclAssign(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _99035_tokens);
inline __jule_tuple__1ad704821_StmtData__jule_tuple_bool _1bb073d20_buildAssignSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _102434_tokens);
inline jule::Ptr<_1ad6e9dbb_UseExpr> _1bb074161_buildUseExpr(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _103733_tokens);
inline jule::Any _1bb0744a2_buildConstSt(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1bb0673c9_stmt>* _105033_st);
inline jule::Any _1bb0747e3_buildSt(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1bb0673c9_stmt>* _107528_st);
inline void _1bb074b56_build(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _113926_tokens, jule::Ptr<_1ad7051d4_ScopeTree>* _113956_s);
inline void _1bb075d99_pushErr(_1bb0756a1_exprBuilder* _self_, jule::Ptr<_1ad6ceb70_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args);
inline void _1bb07620c_pushSuggestion(_1bb0756a1_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args);
inline jule::Ptr<_1ad6ea0db_TupleExpr> _1bb07654d_buildTuple(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>>* _2331_parts);
inline jule::Ptr<_1ad6ea482_LitExpr> _1bb07688e_buildLit(_1bb0756a1_exprBuilder* _self_, jule::Ptr<_1ad6ceb70_Token> _3324_token);
inline jule::Any _1bb077021_buildSingle(_1bb0756a1_exprBuilder* _self_, jule::Ptr<_1ad6ceb70_Token> _4431_token);
inline jule::Ptr<_1ad6ead12_IdentExpr> _1bb077362_buildBindIdent(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _6135_tokens);
inline jule::Ptr<_1ad6eb5a4_UnaryExpr> _1bb0776a3_buildUnary(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _8030_tokens);
inline jule::Ptr<_1ad6ec60a_SubIdentExpr> _1bb0779e4_buildObjSubIdent(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _10136_tokens);
inline jule::Ptr<_1ad6ec231_NamespaceExpr> _1bb077d35_buildNamespace(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _11635_tokens);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb078176_buildType(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _15030_tokens);
inline jule::Any _1bb0784b7_buildSubIdent(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _16434_tokens);
inline jule::Ptr<_1ad6eb97d_VariadicExpr> _1bb078808_buildVariadic(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _18633_tokens);
inline jule::Ptr<_1ad6e97b1_RangeExpr> _1bb078b49_buildBetweenParentheses(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _19543_tokens);
inline jule::Ptr<_1ad6ebd57_CastExpr> _1bb078e8a_tryBuildCast(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _20733_tokens);
inline void _1bb0793a8_pushArg(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _28152_tokens, jule::Ptr<_1ad6ceb70_Token> _28177_errToken);
inline jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _1bb0796e9_buildArgs(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _29029_tokens);
inline jule::Ptr<_1ad6ed221_FnCallExpr> _1bb079ee1_buildFnCall(_1bb0756a1_exprBuilder* _self_, jule::Ptr<_1ad6ceb70_Token>* _35632_token, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _35687_args);
inline jule::Any _1bb07a332_buildParenthesesRange(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _36442_tokens);
inline jule::Ptr<_1ad6ea85b_UnsafeExpr> _1bb07a673_buildUnsafeExpr(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _38635_tokens);
inline jule::Ptr<_1ad706d73_FnDecl> _1bb07a9b4_buildAnonFn(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _40132_tokens);
inline jule::Any _1bb07ad05_buildUnsafe(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _41032_tokens);
inline void _1bb07b223_pushRangeLitPart(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _42036_part, jule::Ptr<_1ad6ceb70_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>>* _42135_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1bb07b564_getBraceRangeLitExprParts(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _43145_tokens);
inline jule::Ptr<_1ad6edc16_FieldExprPair> _1bb07b8a5_buildFieldExprPair(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _47338_tokens);
inline jule::Ptr<_1ad6e94e7_Expr> _1bb07bbe6_buildStructLitExpr(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _48639_tokens);
inline jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _1bb07c037_buildStructLitExprs(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _50140_tokens);
inline jule::Ptr<_1ad6ee541_StructLit> _1bb07c378_buildTypedStructLiteral(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _51443_tokens);
inline jule::Ptr<_1ad6e94e7_Expr> _1bb07c6b9_buildBraceLitPart(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _53838_tokens);
inline jule::Ptr<_1ad6ee9e7_BraceLit> _1bb07ca0a_buildBraceLit(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _55534_tokens);
inline jule::Any _1bb07cd4b_buildBraceRange(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _57436_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1bb07d18c_getEnumerableParts(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _62638_tokens);
inline jule::Ptr<_1ad700a4d_SliceExpr> _1bb07d4cd_buildSlice(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _63330_tokens);
inline jule::Ptr<_1ad7014aa_IndexingExpr> _1bb07d984_buildIndexing(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _6567_tokens, jule::Ptr<_1ad6ceb70_Token> _65636_errorToken);
inline jule::Ptr<_1ad701b1a_SlicingExpr> _1bb07e0a0_buildSlicing(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _67967_start, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _6808_to, jule::Ptr<_1ad6ceb70_Token>* _68034_errorToken, jule::Ptr<_1ad6ceb70_Token> _68065_end);
inline jule::Any _1bb07e3e1_buildBracketRange(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _69537_tokens);
inline jule::Any _1bb07e732_buildExclRight(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _72035_tokens);
inline jule::Any _1bb07ea73_buildData(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _73830_tokens);
inline jule::Any _1bb07ee6e_buildBinary(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _80732_tokens, jule::I64 _80757_i);
inline jule::Any _1bb0802b0_build(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _83226_tokens);
inline jule::Any _1bb080601_buildKind(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _84330_tokens);
inline jule::Ptr<_1ad6e94e7_Expr> _1bb080942_buildFromTokens(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _85435_tokens);
inline void _1bb086294_stop(_1bb085e64_parser* _self_);
inline jule::Bool _1bb08652a_stopped(_1bb085e64_parser* _self_);
inline void _1bb086948_pushErr(_1bb085e64_parser* _self_, jule::Ptr<_1ad6ceb70_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args);
inline void _1bb086cab_pushSuggestion(_1bb085e64_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args);
inline jule::Ptr<_1ad6e94e7_Expr> _1bb0870ec_buildExpr(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _17831_tokens);
inline jule::Ptr<_1ad6e45d0_Directive> _1bb08743d_buildDirective(_1bb085e64_parser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _18234_tokens);
inline void _1bb0876e6_pushDirective(_1bb085e64_parser* _self_, jule::Ptr<_1ad6e45d0_Directive> _19733_d);
inline jule::Ptr<_1ad7051d4_ScopeTree> _1bb087ae2_buildScope(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _21032_tokens, jule::Ptr<_1ad6ceb70_Token> _21061_end);
inline __jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool _1bb088098__buildType(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _22039_tokens, jule::I64* _2217_i, jule::Bool _22116_err);
inline __jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool _1bb08854e_buildType(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _23238_tokens, jule::I64* _2337_i, jule::Bool _23316_err);
inline jule::Ptr<_1ad70bbd0_TypeAliasDecl> _1bb088890_buildTypeAliasDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _24240_tokens);
inline void _1bb088c03_buildVarTypeAndExpr(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad70802d_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _28264_tokens);
inline void _1bb089066_buildVarCommon(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad70802d_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _31558_tokens);
inline void _1bb0893c9_buildVarBegin(_1bb085e64_parser* _self_, jule::Ptr<_1ad70802d_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _33157_tokens);
inline jule::Ptr<_1ad70802d_VarDecl> _1bb08971a_buildVar(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _35929_tokens);
inline jule::Ptr<_1ad7023bd_GenericDecl> _1bb089a5b_buildGeneric(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _37834_tokens);
inline jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> _1bb089e57_buildGenerics(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _41535_tokens, jule::Ptr<_1ad6ceb70_Token>* _41561_errorToken);
inline jule::Ptr<_1ad705921_ParamDecl> _1bb08a298_buildSelfParam(_1bb085e64_parser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _43534_tokens);
inline void _1bb08a6b6_paramTypeBegin(_1bb085e64_parser* _self_, jule::Ptr<_1ad705921_ParamDecl>* _47535_param, jule::I64* _47564_i, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _47573_tokens);
inline void _1bb08aa29_buildParamType(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad705921_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _49065_tokens);
inline void _1bb08ad8c_buildParamBody(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad705921_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _50364_tokens);
inline jule::Ptr<_1ad705921_ParamDecl> _1bb08b1cd_buildParam(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _52331_tokens);
inline void _1bb08b486_checkParams(_1bb085e64_parser* _self_, jule::Slice<jule::Ptr<_1ad705921_ParamDecl>>* _56632_params);
inline jule::Slice<jule::Ptr<_1ad705921_ParamDecl>> _1bb08b882_buildParams(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _58633_tokens, jule::Bool _58658_method);
inline __jule_tuple_x_1ad6e80a6_RetTypeDecl__jule_tuple_bool _1bb08bc7d_buildMultiRetType(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _61639_tokens, jule::I64* _61669_i);
inline __jule_tuple_x_1ad6e80a6_RetTypeDecl__jule_tuple_bool _1bb08c179_buildRetType(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _68734_tokens, jule::I64* _68764_i);
inline jule::Ptr<_1ad706d73_FnDecl> _1bb08c630_buildFnPrototype(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _72638_tokens, jule::I64* _72668_i, jule::Bool _72676_method);
inline jule::Ptr<_1ad706d73_FnDecl> _1bb08cad6_buildFn(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype);
inline void _1bb08ce49_buildBindUseDecl(_1bb085e64_parser* _self_, jule::Ptr<_1ad70d033_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _83763_tokens);
inline void _1bb08d2ac_parseUseDecl(_1bb085e64_parser* _self_, jule::Ptr<_1ad70d033_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _85058_tokens);
inline jule::Ptr<_1ad70d033_UseDecl> _1bb08d6a8_buildUseDecl(_1bb085e64_parser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _87932_tokens, jule::Bool _87957_binded);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb08daa4_buildTypeEnumItemKind(jule::Ptr<_1bb085e64_parser> _self_, jule::I64* _89343_i, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _89356_tokens);
inline jule::Slice<jule::Ptr<_1ad70e8c5_TypeEnumItemDecl>> _1bb08dde5_buildTypeEnumItems(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _93040_tokens);
inline jule::Ptr<_1ad710035_TypeEnumDecl> _1bb08e236_buildTypeEnumDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _95439_tokens);
inline jule::Ptr<_1ad6e94e7_Expr> _1bb08e632_buildEnumItemExpr(jule::Ptr<_1bb085e64_parser> _self_, jule::I64* _98139_i, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _98152_tokens);
inline jule::Slice<jule::Ptr<_1ad70d4d9_EnumItemDecl>> _1bb08e973_buildEnumItems(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _101336_tokens);
inline jule::Ptr<_1ad70e09a_EnumDecl> _1bb08ecb4_buildEnumDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _105035_tokens);
inline jule::Any _1bb090105_buildNodeEnumDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _109539_tokens);
inline jule::Ptr<_1ad7102ee_FieldDecl> _1bb090446_buildField(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _110431_tokens);
inline jule::Slice<jule::Ptr<_1ad7102ee_FieldDecl>> _1bb090787_buildStructDeclFields(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _115342_tokens);
inline jule::Ptr<_1ad710be5_StructDecl> _1bb090ac8_buildStructDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _116437_tokens);
inline void _1bb090d81_checkMethodReceiver(_1bb085e64_parser* _self_, jule::Ptr<_1ad706d73_FnDecl>* _121236_f);
inline void _1bb0911e4_buildTraitBody(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad711432_TraitDecl>* _123136_t, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _123160_tokens);
inline jule::Ptr<_1ad711432_TraitDecl> _1bb091535_buildTraitDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _126336_tokens);
inline jule::Ptr<_1ad706d73_FnDecl> _1bb091876_buildBindFn(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _129332_tokens);
inline jule::Ptr<_1ad70802d_VarDecl> _1bb091bb7_buildBindVar(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _130333_tokens);
inline jule::Ptr<_1ad710be5_StructDecl> _1bb092008_buildBindStruct(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _131636_tokens);
inline jule::Ptr<_1ad70bbd0_TypeAliasDecl> _1bb092349_buildBindTypeAlias(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _133039_tokens);
inline jule::Ptr<_1ad70d033_UseDecl> _1bb09268a_buildBindUse(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _134033_tokens);
inline jule::Any _1bb0929cb_buildBind(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _135131_tokens);
inline jule::Ptr<_1ad706d73_FnDecl> _1bb092d1c_getMethod(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _137531_tokens);
inline void _1bb093180_parseImplBody(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad711a92_Impl>* _140435_ipl, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _140457_tokens);
inline jule::Ptr<_1ad711a92_Impl> _1bb0934c1_buildImpl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _143730_tokens);
inline jule::Any _1bb093812_buildNodeData(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _150835_tokens);
inline void _1bb093aba_applyFnMeta(_1bb085e64_parser* _self_, jule::Ptr<_1ad706d73_FnDecl>* _154132_f);
inline void _1bb093d73_applyMeta(_1bb085e64_parser* _self_, _1ad6e41b2_Node* _154630_node);
inline void _1bb09412b_pushUseDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad70d033_UseDecl>* _157133_decl);
inline jule::Bool _1bb09446c_pushMetaNodes(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _157935_tokens);
inline _1ad6e41b2_Node _1bb0947ad_parseNode(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _159931_st);
inline void _1bb094a66_appendNode(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _162332_st);
inline void _1bb09503e_removeRange(_1bb085e64_parser* _self_, jule::I64 _163327_i, jule::U64 _163335_id, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _163351_tokens, jule::Slice<jule::I64>* _163381_ranges);
inline void _1bb09545c_pushWrongOrderCloseErr(_1bb085e64_parser* _self_, jule::Ptr<_1ad6ceb70_Token>* _164539_t, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _164558_tokens, jule::Slice<jule::I64>* _164584_ranges);
inline void _1bb095935_pushRangeClose(_1bb085e64_parser* _self_, jule::Ptr<_1ad6ceb70_Token> _165630_t, jule::U64 _165648_left, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _165666_tokens, jule::Slice<jule::I64>* _165696_ranges);
inline void _1bb095bdd_checkRanges(_1bb085e64_parser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _167428_tokens);
inline void _1bb095e96_parse(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad6d5527_Fileset>* _170527_f);
inline void _1bb0976e5_pushErr(_1bb09711d_typeBuilder* _self_, jule::Ptr<_1ad6ceb70_Token> _3123_token, jule::Str _3145_fmt);
inline void _1bb097a58_pushSuggestion(_1bb09711d_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb097cde_buildNamespace(_1bb09711d_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> _1bb098075_buildGenerics(_1bb09711d_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1bb09830b_identGenerics(_1bb09711d_typeBuilder* _self_);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb098592_buildIdent(_1bb09711d_typeBuilder* _self_);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb098828_buildCppLink(_1bb09711d_typeBuilder* _self_);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb098aae_buildFn(_1bb09711d_typeBuilder* _self_);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb098d45_buildPtr(_1bb09711d_typeBuilder* _self_);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb0990cb_buildSptr(_1bb09711d_typeBuilder* _self_);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb099362_buildSlc(_1bb09711d_typeBuilder* _self_);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb0995e8_buildArr(_1bb09711d_typeBuilder* _self_);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb09987e_buildMap(_1bb09711d_typeBuilder* _self_);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb099b15_buildEnumerable(_1bb09711d_typeBuilder* _self_);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb099d9b_step(_1bb09711d_typeBuilder* _self_);
inline __jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool _1bb09a132_build(_1bb09711d_typeBuilder* _self_);
inline void _1adb5e0ee_pushErr(_1adb5da7c_directiveEval* _self_, jule::Ptr<_1ad6ceb70_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1adb5e4ea_splitOperans(_1adb5da7c_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _3348_tokens);
inline jule::Bool _1adb5e83b_evalDirectiveIdent(_1adb5da7c_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1adb5eb7c_evalDirectivePart(_1adb5da7c_directiveEval* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _7837_part);
inline jule::Bool _1adb5ee13_eval(_1adb5da7c_directiveEval* _self_);
inline jule::Ptr<_1bb09b254_Importer> static__1bb09b683_New(_1adb5c6a2_CompileInfo _4516_info);
inline jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>> _1bb09b919_AllPackages(_1bb09b254_Importer* _self_);
inline void _1bb09bd59_SetModPath(_1bb09b254_Importer* _self_, jule::Str _6226_path);
inline jule::Str _1bb09c0e0_GetModPath(_1bb09b254_Importer* _self_);
inline jule::Str _1bb09c431_ModById(_1bb09b254_Importer* _self_, jule::I64 _7019_id);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1bb09c772_GetImport(_1bb09b254_Importer* _self_, jule::Str _7425_path);
inline __jule_tuple_sx_1ad6e325a_AST__jule_tuple_s_1dd356476_Log _1bb09cb6d_ImportPackage(_1bb09b254_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod);
inline void _1bb09ce26_Imported(_1bb09b254_Importer* _self_, jule::Ptr<_1ad8e1bea_ImportInfo> _14128_imp);
inline __jule_tuple_bool__jule_tuple_s_1dd356476_Log _1bb09d355_isPassBuildDirectives(_1bb09b254_Importer* _self_, jule::Ptr<_1ad6e325a_AST>* _16842_file);
inline jule::Ptr<_1bb0a2cd8_ExprInspector> static__1bb0a3107_New(void);
inline void _1bb0a33b0_args(_1bb0a2cd8_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args);
inline void _1bb0a3668_inspect(_1bb0a2cd8_ExprInspector* _self_, jule::Any* _2828_m);
inline void _1bb0a39cb_Inspect(_1bb0a2cd8_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f);
inline jule::Bool _1bbedaabb_isAllMethodsLive(_1bbed7722_specialCaseDefines* _self_, jule::Ptr<_1ad7159ec_Struct> _1928_s);
inline jule::Ptr<_1bbedb627_ObjectDeadCode> static__1bbedbb99_new(jule::Ptr<_1bb09dcd4_IR>* _3921_ir);
inline jule::Bool _1c034a6db_isLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad718857_StructIns>* _4527_t);
inline jule::Bool _1c03525d3_isLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _4527_t);
inline jule::Bool _1c037e06b_isLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad802ea2_Trait>* _4527_t);
inline jule::Bool _1c0389296_isLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad933a83_Var>* _4527_t);
inline void _1c034b16a_pushLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad718857_StructIns> _6532_t);
inline void _1c0355cbd_pushLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad7ea84b_FnIns> _6532_t);
inline void _1c037e9ea_pushLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad802ea2_Trait> _6532_t);
inline void _1c038c70b_pushLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad933a83_Var> _6532_t);
inline void _1bbedc518_pushStructAsLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad718857_StructIns>* _7838_s);
inline void _1bbedc7c1_setReferencesAsLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad8ced70_ReferenceStack>* _14141_rs);
inline void _1bbedca79_inits(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad8e446c_Package>* _19127_pkg);
inline void _1bbedcd32_collectLivePackage(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad8e446c_Package>* _20540_pkg);
inline void _1bbedd030_collectLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_);
inline void _1bbedd2d8_removeDeadGlobals(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ad933a83_Var>>* _28139_vars);
inline void _1bbedd591_removeDeadFns(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ad7e778d_Fn>>* _29335_funcs);
inline void _1bbedd849_removeDeadStructs(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ad7159ec_Struct>>* _31439_structs);
inline void _1bbeddb02_removeDeadTraits(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ad802ea2_Trait>>* _33638_traits);
inline void _1bbedddaa_removeDeadsFile(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad7eda91_SymTab>* _35737_file);
inline void _1bbede163_removeDeadsPackage(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad8e446c_Package>* _36440_pkg);
inline void _1bbede361_removeDeads(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_);
inline void _1bbede55e_collectSpecialCaseDefines(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_);
inline void _1bbede75c_elimanate(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_);
inline void _1bbee0bae_optimizeChild(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b136d_Scope>* _1935_s);
inline void _1bbee0e67_optimizeBodyChildExceptional(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b136d_Scope>* _2950_s);
inline void _1bbee1220_optimizeBodyChild(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b136d_Scope>* _3939_s);
inline void _1bbee14c8_optimizeExprModel(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Any* _4839_model);
inline void _1bbee16c6_eliminateFollowed(_1bbee0692_scopeDeadCode* _self_);
inline void _1bbee197e_pushGoto(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b452a_GotoSt> _6929_gt);
inline void _1bbee1c37_pushLabel(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b3dba_Label> _7930_l);
inline void _1bbee1ee0_optimizeRangeIter(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b31a5_RangeIter> _9238_it);
inline void _1bbee2298_optimizeWhileIter(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b2759_WhileIter> _9738_it);
inline void _1bbee2551_optimizeInfIter(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b22a3_InfIter> _10536_it);
inline void _1bbee2809_optimizeConditional(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b1ea6_Conditional> _10940_c);
inline void _1bbee2ab2_optimizeMatch(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b5a9d_Match> _12734_m);
inline void _1bbee2d6a_optimizeAssign(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b4daa_Assign> _14535_assign);
inline void _1bbee3123_optimizeMultiAssign(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b5361_MultiAssign> _15040_assign);
inline void _1bbee33cb_optimizeStmt(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Any _15933_st);
inline void _1bbee35c9_optimizeStmts(jule::Ptr<_1bbee0692_scopeDeadCode> _self_);
inline _1bbee4c29_exprDeadCode static__1bbee5147_new(jule::Ptr<_1bbee0692_scopeDeadCode>* _1421_s);
inline void _1bbee5400_optimize(_1bbee4c29_exprDeadCode* _self_, jule::Any* _2025_model);
inline void _1bbd9935e_pushVar(_1bbd98db9_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe);
inline jule::Bool _1bbd996a0_removeVar(_1bbd98db9_nils* _self_, jule::Uintptr _4625_var);
inline jule::Bool _1bbd999e1_isSafe(_1bbd98db9_nils* _self_, jule::Uintptr _6022_var);
inline jule::Ptr<_1bbd9ba37_scopeOptimizer> static__1bbd9c087_new(jule::Ptr<_1ad8b136d_Scope> _2320_scope);
inline void _1bbd9c340_setCurrentStmt(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Any _3535_stmt);
inline void _1bbd9c53d_removeCurrent(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_);
inline jule::Bool _1bbd9c7c4_isLastStmt(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_);
inline jule::Bool _1bbd9ca5a_isIter(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_);
inline void _1bbd9cd13_optimizeData(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad985b90_Data> _6733_d);
inline void _1bbd9d0bb_optimizeVar(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad933a83_Var> _9332_v);
inline void _1bbd9d374_optimizeConditional(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b1ea6_Conditional> _11440_c);
inline void _1bbd9d792_buildDefaultConstantTrueCase(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b65c6_Case> _18849_case, jule::I64* _18873_i, jule::Ptr<_1ad8b5a9d_Match>* _18886_m);
inline void _1bbd9da4a_optimizeMatch(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b5a9d_Match> _21434_m);
inline void _1bbd9dd03_optimizeRangeIter(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b31a5_RangeIter> _29638_it);
inline void _1bbd9e0ab_optimizeWhileIter(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b2759_WhileIter> _34138_it);
inline jule::Bool _1bbd9e3ec_substr(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b4daa_Assign> _34727_a);
inline jule::Bool _1bbd9e73d_strAssign(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b4daa_Assign> _36730_a);
inline jule::Bool _1bbd9ea7e_sliceAssign(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b4daa_Assign> _37832_a);
inline void _1bbd9ed37_optimizePostfix(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b4904_Postfix> _38636_postfix);
inline void _1bbda00e0_optimizeAssign(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b4daa_Assign> _39335_assign);
inline jule::Bool _1bbda0431_tryOptimizeSwap(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b5361_MultiAssign>* _50737_assign);
inline void _1bbda06d9_optimizeMultiAssign(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b5361_MultiAssign> _54440_assign);
inline void _1bbda0992_optimizeRet(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b7165_RetSt> _59032_r);
inline void _1bbda0c4a_optimizeStmt(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Any _61433_stmt);
inline void _1bbda1003_optimizeChild(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b136d_Scope> _64334_child);
inline void _1bbda1201_optimize(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_);
inline void static__1bbda3687_optimize(jule::Any* _2126_model);
inline void static__1bbda3973_optimizeData(jule::Any* _2530_model, jule::Ptr<_1bbdab409_data>* _2559_d);
inline jule::Bool _1bbda3cb4_selfCmpCond(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _3728_m);
inline jule::Bool _1bbda4105_boolCond(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _6125_m);
inline jule::Bool _1bbda4446_strCond(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel> _11423_m);
inline jule::Bool _1bbda48ec_tryNeutralElement1(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _17135_m, jule::Ptr<_1ad778ec2_Const> _17166_c, jule::Ptr<_1ad7d9dac_OperandExprModel>* _17188_nc);
inline jule::Bool _1bbda4c3d_tryNeutralElement(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _21534_m);
inline void _1bbda4ee6_checkBinaryForBoundary(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _23039_m);
inline void _1bbda529e_checkBinaryForNil(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _28234_m);
inline void _1bbda5557_binary(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel> _31422_m);
inline void _1bbda5810_unary(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da781_UnaryExprModel> _41221_m);
inline void _1bbda5ab8_structureLit(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7db155_StructLitExprModel> _45528_m);
inline void _1bbda5d71_casting(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7db9d5_CastingExprModel> _47123_m);
inline void _1bbda61d4_args(_1bbda31d1_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>> _48520_params, jule::Slice<jule::Any>* _48552_args);
inline void _1bbda648c_scope(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad8b136d_Scope>* _50722_s);
inline void _1bbda6745_funcCall(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7dc387_FnCallExprModel> _51324_m);
inline void _1bbda69ed_indexing(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7dcc17_IndexingExprModel> _52024_m);
inline void _1bbda6ca6_anonFunc(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel> _54424_m);
inline void _1bbda6ea4_do(_1bbda31d1_exprOptimizer* _self_);
inline void _1bbda8c75_pushVar(jule::Ptr<_1bbda87d0_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1ad9b8596_TypeKind> _2442_kind);
inline jule::Bool _1bbda90b6_removeVar(_1bbda87d0_dynamic* _self_, jule::Uintptr _4725_var);
inline jule::Bool _1bbda94b2_isFits(_1bbda87d0_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1ad9b8596_TypeKind> _6136_kind);
inline _1bbdaae0e_dataCheckpoint _1bbdab7b1_getCheckpoint(_1bbdab409_data* _self_);
inline void _1bbdaba69_loadCheckpoint(_1bbdab409_data* _self_, _1bbdaae0e_dataCheckpoint* _3535_c);
inline void _1bbdad186_pushVar(_1bbdacbe1_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1bbdad8c3_fitsMaxSize(_1bbdacbe1_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1bbee5d4b_Optimizer> static__1bbee6302_New(jule::Ptr<_1bb09dcd4_IR>* _2121_ir);
inline void _1bbee65aa_optimizeGlobal(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad933a83_Var>* _2735_v);
inline void _1bbee6863_optimizeFunction(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad7e778d_Fn>* _3337_func);
inline void _1bbee6b1b_optimizeStruct(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad7159ec_Struct>* _4335_s);
inline void _1bbee6dc4_optimizeGlobals(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad8e446c_Package>* _5936_p);
inline void _1bbee717c_optimizeFunctions(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad8e446c_Package>* _6738_p);
inline void _1bbee7435_optimizeStructs(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad8e446c_Package>* _7536_p);
inline void _1bbee76dd_optimizePackage(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad8e446c_Package>* _8336_p);
inline void _1bbee78db_Optimize(_1bbee5d4b_Optimizer* _self_);
inline _1bc0c2026_Time static__1bc0c2411_Unix(jule::U64 _9117_sec);
inline _1bc0c2026_Time static__1bc0c2620_Now(void);
inline _1bc0c1850_AbsTime _1bc0c3d08_Abs(_1bc0c2026_Time* _self_);
inline jule::Ptr<_1bbee9ba7_scopeCoder> static__1bbeea3a0_new(jule::Ptr<_1bc0cdd35_ObjectCoder>* _3721_oc);
inline void _1c0760606_iterHead(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b31a5_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin);
inline void _1bbeeaa76_rangeIndexIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b31a5_RangeIter>* _9336_it);
inline void _1bbeead2e_rangeHashmapIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b31a5_RangeIter>* _16038_it);
inline void _1bbeeb0d7_strRuneIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1bbd97857_StrRuneIter> _24332_it);
inline void _1bbeeb390_ifCase(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b178b_If> _35527_i);
inline void _1bbeeb648_conditional(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b1ea6_Conditional> _36432_c);
inline void _1bbeeb901_infIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b22a3_InfIter> _38428_it);
inline void _1bbeebba9_whileIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b2759_WhileIter> _40130_it);
inline void _1bbeebe62_rangeIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b31a5_RangeIter> _44030_it);
inline void _1bbeec21a_cont(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b353a_ContSt> _45321_c);
inline void _1bbeec4c3_label(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b3dba_Label> _45822_l);
inline void _1bbeec77b_gotoSt(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b452a_GotoSt> _46323_gt);
inline void _1bbeeca34_postfix(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b4904_Postfix> _46828_p);
inline void _1bbeeccdc_assignLeft(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Any* _47532_model);
inline void _1bbeed095_shl(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b4daa_Assign> _50724_a);
inline void _1bbeed34d_shr(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b4daa_Assign> _51324_a);
inline void _1bbeed606_divByZeroAssign(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b4daa_Assign> _51936_a);
inline void _1bbeedace_operatorOverloadingAssign(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _52547_s, jule::Ptr<_1ad7d9dac_OperandExprModel>* _52573_l, jule::Ptr<_1ad7d9dac_OperandExprModel>* _5268_r, jule::U64 _52636_op);
inline void _1bbeedd87_assign(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b4daa_Assign> _54027_a);
inline void _1bbeee140_mapLookupAssign(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5361_MultiAssign>* _57337_a);
inline void _1bbeee3e8_multiAssignTup(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5361_MultiAssign>* _60636_a);
inline void _1bbeee6a1_multiAssignFn(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5361_MultiAssign>* _65535_a);
inline void _1bbeee959_multiAssign(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5361_MultiAssign> _71432_a);
inline jule::Fn<void> _1bbeeec9a_matchExpr(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5a9d_Match> _74030_m);
inline void _1bc00010d_case(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5a9d_Match> _75025_m, jule::Ptr<_1ad8b65c6_Case> _75046_c);
inline void _1bc0003b6_matchSt(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5a9d_Match> _82028_m);
inline void _1bc00066e_fallSt(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b6cbe_FallSt> _87523_f);
inline void _1bc000927_breakSt(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b3914_BreakSt> _88024_b);
inline void _1bc000bd0_setResult(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b7165_RetSt> _88930_r);
inline void _1bc000e88_retSt(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b7165_RetSt> _91726_r);
inline void _1bc001241_var(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad933a83_Var> _95324_v);
inline void _1bc0014e9_mutSlicing(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1bbd96548_MutSlicingExprModel> _95931_m);
inline void _1bc0017a2_swap(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1bbd952e4_SwapExprModel> _97625_m);
inline void _1bc001a5a_exceptionalForwarding(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1bbd9506e_ExceptionalForwardingExprModel> _98442_m);
inline void _1bc001d13_st(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Any _99023_st);
inline void _1bc0020bb_scopeStmts(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b136d_Scope>* _104632_s);
inline void _1bc002374_scope(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b136d_Scope> _105526_s);
inline void _1bc00262c_commonFuncScope(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _107037_f);
inline void _1bc002990_anonFuncScope(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel> _111034_m, jule::Str _111061_ident);
inline void _1bc002c48_funcScope(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _114230_f);
inline jule::Ptr<_1bc005dd3_exprCoder> static__1bc0062ce_new(jule::Ptr<_1bc0cdd35_ObjectCoder>* _4621_oc);
inline void _1bc006587_string(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad778ec2_Const>* _5224_c);
inline void _1bc006840_boolean(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Bool _6724_b);
inline void _1bc006a3d_nilLit(jule::Ptr<_1bc005dd3_exprCoder> _self_);
inline jule::Bool _1bc006d7e_ftoaSpecialCases(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::F64* _7934_x);
inline void _1bc007137_float32(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad778ec2_Const>* _9325_c);
inline void _1bc0073e0_float64(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad778ec2_Const>* _11225_c);
inline void _1bc007698_constant(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad778ec2_Const> _13029_c);
inline void _1bc007ab6_operatorOverloadingUnary(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _15446_s, jule::U64 _15467_op, jule::Any _15486_e);
inline void _1bc007ed4_divByZeroBinary(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad6ceb70_Token>* _16633_op, jule::Ptr<_1ad7d9dac_OperandExprModel>* _16657_l, jule::Ptr<_1ad7d9dac_OperandExprModel>* _16690_r);
inline void _1bc0086cc__unsafeBinary(jule::Ptr<_1bc005dd3_exprCoder> _self_, _1dd0b6912_Builder* _20535_buf, jule::Str* _20559_l, jule::Str* _20568_r, jule::Ptr<_1ad9b8596_TypeKind>* _2068_lk, jule::Ptr<_1ad9b8596_TypeKind>* _20634_rk, jule::U64 _20655_op, jule::Str _20670_kind);
inline void _1bc008985_unsafeBinary(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel> _27633_m);
inline void _1bc008ce8_shl(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7d9dac_OperandExprModel>* _28825_l, jule::Ptr<_1ad7d9dac_OperandExprModel>* _28858_r);
inline void _1bc00915b_shr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7d9dac_OperandExprModel>* _31625_l, jule::Ptr<_1ad7d9dac_OperandExprModel>* _31658_r);
inline void _1bc009414_binary(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel> _34427_m);
inline void _1bc0096bc_var(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad933a83_Var> _36824_m);
inline void _1bc009975_structureIns(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad718857_StructIns> _38433_m);
inline void _1bc009c2d_unary(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7da781_UnaryExprModel> _38826_m);
inline void _1bc009ed6_structureLit(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7db155_StructLitExprModel> _41933_m);
inline void _1bc00a28e_allocStructure(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7db452_AllocStructLitExprModel> _46235_m);
inline void _1bc00a547_possibleRefExpr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Any _47032_expr);
inline void _1bc00a965_castTraitFromTrait(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7db9d5_CastingExprModel>* _48440_m, jule::Ptr<_1ad802ea2_Trait> _48472_t1, jule::Ptr<_1ad802ea2_Trait> _48494_t2);
inline void _1bc00ac1d_casting(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7db9d5_CastingExprModel> _49728_m);
inline void _1bc00aec6_args(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel>* _64426_m);
inline void _1bc00b27e_modelForCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Any _67533_expr);
inline void _1bc00b537_pushCallInf(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel>* _69029_m);
inline jule::Bool _1bc00b878_isWrapped(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel>* _71331_m);
inline jule::Bool _1bc00bbb9_writeReceiver(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Any _73734_m);
inline void _1bc00be72_pureFuncCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel>* _75034_m);
inline void _1bc00c22a_coFuncCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel>* _84032_m);
inline void _1bc00c58d_writeUseExpr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _91834_f, jule::Ptr<_1ad985b90_Data> _91855_d);
inline void _1bc00c846_funcCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel> _93929_m);
inline void _1bc00caee_slice(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc761_SliceExprModel> _101226_m);
inline void _1bc00cda7_indexing(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dcc17_IndexingExprModel> _104129_m);
inline void _1bc00d160_unsafeIndexing(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd96bca_UnsafeIndexingExprModel> _109335_m);
inline void _1bc00d418_anonFunc(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel> _111029_m);
inline void _1bc00d6c1_mapExpr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dd971_MapExprModel> _114128_m);
inline void _1bc00d979_slicing(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7de004_SlicingExprModel> _117728_m);
inline void _1bc00dc32_traitSub(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7de587_TraitSubIdentExprModel> _119329_m);
inline void _1bc00deda_structureSub(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _120933_m);
inline void _1bc00e293_array(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e0698_ArrayExprModel> _121826_m);
inline void _1bc00e54b_funcInsCommon(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _126834_m);
inline void _1bc00e804_funcIns(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _127528_m);
inline void _1bc00eaac_tuple(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e0995_TupleExprModel> _128626_m);
inline void _1bc00ed65_newCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e1622_BuiltinNewCallExprModel> _129728_m);
inline void _1bc01011d_outCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e0d6e_BuiltinOutCallExprModel> _130928_m);
inline void _1bc0103c6_outlnCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e1248_BuiltinOutlnCallExprModel> _132230_m);
inline void _1bc01067e_panicCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e19eb_BuiltinPanicCallExprModel> _133530_m);
inline void _1bc010937_errorCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e3602_BuiltinErrorCallExprModel> _134330_m);
inline void _1bc010be0_copyCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e3228_BuiltinCopyCallExprModel> _137529_m);
inline void _1bc010e98_lenCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e2678_BuiltinLenCallExprModel> _138328_m);
inline void _1bc011251_capCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e2975_BuiltinCapCallExprModel> _140028_m);
inline void _1bc011509_deleteCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e2d4e_BuiltinDeleteCallExprModel> _140531_m);
inline void _1bc0117b2_makeCallSlice(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e1ea2_BuiltinMakeCallExprModel>* _143035_m);
inline void _1bc011a6a_makeCallStr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e1ea2_BuiltinMakeCallExprModel>* _145433_m);
inline void _1bc011d23_makeCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e1ea2_BuiltinMakeCallExprModel> _146529_m);
inline void _1bc0120cb_pushToSlice(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd970a4_PushToSliceExprModel> _147332_m);
inline void _1bc012384_appendToSlice(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd9747d_AppendToSliceExprModel> _153334_m);
inline void _1bc01263c_appendCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e237b_BuiltinAppendCallExprModel> _154131_m);
inline void _1bc0128e5_sizeof(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e38ee_SizeofExprModel> _154927_m);
inline void _1bc012b9d_alignof(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e40a3_AlignofExprModel> _155528_m);
inline void _1bc012e56_runeLit(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e4290_RuneExprModel> _156124_m);
inline void _1bc01320e_structureStatic(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e02be_StructStaticIdentExprModel> _157536_m);
inline void _1bc0134b7_backendEmit(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e4614_BackendEmitExprModel> _157932_m);
inline void _1bc013770_free(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e4911_FreeExprModel> _159525_m);
inline void _1bc013a28_strComp(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd95eb5_StrCompExprModel> _160428_m);
inline void _1bc013cd1_emptyCompare(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd956bd_EmptyCompareExprModel> _162033_m);
inline void _1bc014089_unsafeDeref(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd97b54_UnsafeDerefExprModel> _162932_m);
inline void _1bc014342_unsafeCasting(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd97e51_UnsafeCastingExprModel> _164034_m);
inline void _1bc0145ea_model(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Any _165726_m);
inline jule::Bool _1bc01493b_handleFieldByDefault(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad717ca7_FieldIns>* _175742_f);
inline void _1bc014be4_initStructLit(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _177835_s);
inline void _1bc014e9c_fillCollectionByDefault(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _180045_elem);
inline void _1bc015255_initCollection(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _181536_elem);
inline void _1bc01550d_initArray(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad9c7ece_Arr>* _182931_arr);
inline void _1bc0157b6_initExpr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind> _184329_t);
inline jule::Ptr<_1bc0183ac_TestCoder> static__1bc018863_New(jule::Ptr<_1bc0cdd35_ObjectCoder>* _2021_oc);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1bc018ae9_findTestingPackage(jule::Ptr<_1bc0183ac_TestCoder> _self_);
inline void _1bc018da2_appendTest(jule::Ptr<_1bc0183ac_TestCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _3531_f);
inline void _1bc01915a_appendPackageTests(jule::Ptr<_1bc0183ac_TestCoder> _self_, jule::Ptr<_1ad8e446c_Package>* _5040_p);
inline jule::Bool _1bc0193e1_readyTestingPackage(jule::Ptr<_1bc0183ac_TestCoder> _self_);
inline void _1bc0195de_callTmReset(jule::Ptr<_1bc0183ac_TestCoder> _self_);
inline void _1bc0197dc_callTmFailed(jule::Ptr<_1bc0183ac_TestCoder> _self_);
inline void _1bc0199da_callTmSkipped(jule::Ptr<_1bc0183ac_TestCoder> _self_);
inline void _1bc019bd8_Serialize(jule::Ptr<_1bc0183ac_TestCoder> _self_);
inline void static__1bc01b547_writeIdentTo(_1dd0b6912_Builder* _2630_buf, jule::Str* _2654_ident);
inline void static__1bc01b8dd_toOut(_1dd0b6912_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr);
inline void static__1bc01bd3e_toLocal(_1dd0b6912_Builder* _6925_buf, jule::I64 _6948_row, jule::I64 _6958_col, jule::Str* _6969_ident);
inline void static__1bc01c12a_func(_1dd0b6912_Builder* _7722_buf, jule::Ptr<_1ad7e778d_Fn>* _7750_f);
inline void static__1bc01c416_funcIns(_1dd0b6912_Builder* _9825_buf, jule::Ptr<_1ad7ea84b_FnIns>* _9853_f);
inline void static__1bc01c702_traitDecl(_1dd0b6912_Builder* _11327_buf, jule::Ptr<_1ad802ea2_Trait> _11350_t);
inline void static__1bc01c9dd_param(_1dd0b6912_Builder* _11723_buf, jule::Ptr<_1ad7e5cb9_Param>* _11747_p);
inline void static__1bc01ccc9_structure(_1dd0b6912_Builder* _13227_buf, jule::Ptr<_1ad7159ec_Struct>* _13251_s);
inline void static__1bc01d0b5_structureIns(_1dd0b6912_Builder* _14330_buf, jule::Ptr<_1ad718857_StructIns>* _14354_s);
inline void static__1bc01d3a1_field(_1dd0b6912_Builder* _15123_buf, jule::Ptr<_1ad712ac6_Field>* _15147_f);
inline void static__1bc01d68c_var(_1dd0b6912_Builder* _16121_buf, jule::Ptr<_1ad933a83_Var> _16148_v);
inline void static__1bc01d978_iterBegin(_1dd0b6912_Builder* _18827_buf, jule::Uintptr _18850_it);
inline void static__1bc01dc64_iterEnd(_1dd0b6912_Builder* _19325_buf, jule::Uintptr _19348_it);
inline void static__1bc01e050_iterNext(_1dd0b6912_Builder* _19826_buf, jule::Uintptr _19849_it);
inline void static__1bc01e33b_label(_1dd0b6912_Builder* _20323_buf, jule::Uintptr _20346_u);
inline void static__1bc01e627_matchEnd(_1dd0b6912_Builder* _20826_buf, jule::Uintptr _20849_m);
inline void static__1bc02486e_caseBegin(_1dd0b6912_Builder* _21327_buf, jule::Uintptr _21350_c);
inline jule::Ptr<_1bc0cdd35_ObjectCoder> static__1bc0ce297_New(jule::Ptr<_1bb09dcd4_IR>* _11321_ir, _1bc0cba36_SerializationInfo _11335_info);
inline void _1bc0ce550_write(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Str _12622_s);
inline void _1bc0ce808_writeBytes(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Slice<jule::U8> _13027_b);
inline void _1bc0cea06_addIndent(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0cec04_doneIndent(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0cee02_indent(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline jule::I64 _1bc0d0243_findAnyType(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _14933_t);
inline jule::I64 _1bc0d0584_pushCoSpawn(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _15832_f);
inline jule::I64 _1bc0d08c5_pushDealloc(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind> _26132_t);
inline jule::Str _1bc0d0c16_pushAnonFn(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel>* _27732_m);
inline jule::I64 _1bc0d1057_pushAnyType(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind> _31932_t);
inline void _1bc0d1310_pushResultIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _42435_f);
inline void _1bc0d15b8_pushResult(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7e778d_Fn>* _44532_f);
inline void _1bc0d192b_pushAndWriteMaskMapper(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad802ea2_Trait> _45843_t1, jule::Ptr<_1ad802ea2_Trait> _45865_t2);
inline void _1bc0d1bd4_locInfo(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad6ceb70_Token>* _50925_t);
inline void _1bc0d1dd2_head(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d218a_links(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Bool _57622_std);
inline void _1bc0d2443_prepareStructure(_1bc0cdd35_ObjectCoder* _self_, jule::Ptr<_1ad7159ec_Struct>* _59937_s);
inline void _1bc0d2641_prepareStructures(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d28e9_structurePlainDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7159ec_Struct>* _63040_s);
inline void _1bc0d2ae7_structurePlainDecls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d2da0_fieldDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad717ca7_FieldIns>* _64631_f);
inline void _1bc0d3158_structureDestructor(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _65341_s);
inline void _1bc0d3576_structureOperatorEq(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Str _66936_ident, jule::Ptr<_1ad718857_StructIns>* _66953_s, jule::Bool _66974_decl);
inline void _1bc0d38d9_structureOperators(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _73740_s, jule::Bool _73761_decl);
inline void _1bc0d3b92_structureInsDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _74638_s);
inline void _1bc0d3e4a_structureDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7159ec_Struct>* _77635_s);
inline void _1bc0d4148_structureDecls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d4346_structureMethodDecls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d481e_funcHead(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, _1dd0b6912_Builder* _81030_buf, jule::Ptr<_1ad7ea84b_FnIns>* _81058_f, jule::Bool _81075_ptr, jule::Str _81086_ident);
inline void _1bc0d4b82_funcDeclIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _82933_f, jule::Bool _82950_ptr);
inline void _1bc0d4ee5_funcDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7e778d_Fn>* _83730_f, jule::Bool _83744_ptr);
inline void _1bc0d529d_funcDeclTrait(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7e778d_Fn>* _84335_f);
inline void _1bc0d549b_funcDecls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d5754_traitDataTypeMethods(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad802ea2_Trait>* _86542_t);
inline void _1bc0d5952_traitDataTypes(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d5cb5_paramIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, _1dd0b6912_Builder* _90130_buf, jule::Ptr<_1ad7e96e6_ParamIns>* _90158_p);
inline void _1bc0d6128_paramsIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, _1dd0b6912_Builder* _90731_buf, jule::Ptr<_1ad7ea84b_FnIns>* _90759_f);
inline void _1bc0d648b_varInitExpr(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad933a83_Var>* _92833_v, jule::Fn<void> _92848_init);
inline void _1bc0d6744_var(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad933a83_Var> _94624_v);
inline void _1bc0d6aa7_anonFuncInsDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel>* _97737_m, jule::Str _97764_ident);
inline void _1bc0d6e1a_anonFuncIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel>* _98333_m, jule::Str _98360_ident);
inline void _1bc0d727d_funcIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _99328_f, jule::Str _99345_ident);
inline void _1bc0d7536_func(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7e778d_Fn>* _100326_f);
inline void _1bc0d7899_funcTrait(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _100927_s, jule::Ptr<_1ad7ea84b_FnIns>* _100953_f);
inline __jule_tuple_x_1ad7ea84b_FnIns__jule_tuple_bool _1bc0d7bda_findTraitMetMap(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7e778d_Fn>* _102437_m);
inline void _1bc0d804d_traitWrapper(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad802ea2_Trait>* _103634_t, jule::Ptr<_1ad7e778d_Fn>* _103656_m);
inline void _1bc0d824b_traitWrappers(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d85ae_traitDataMethods(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad802ea2_Trait>* _110338_t, jule::Ptr<_1ad718857_StructIns> _110355_s);
inline void _1bc0d89cc_traitData(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad802ea2_Trait>* _112031_t, jule::I64 _112048_i, jule::Ptr<_1ad718857_StructIns>* _112061_s);
inline void _1bc0d8bca_traitDatas(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d8dc8_globalDecls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d90c6_decls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d937e_structureMethods(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _118338_s);
inline void _1bc0d9637_structureIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _119034_s);
inline void _1bc0d98e0_structure(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7159ec_Struct>* _119631_s);
inline void _1bc0d9add_structures(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0d9cdb_funcs(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0da094_pushInit(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad8e446c_Package>* _123530_pkg);
inline void _1bc0da292_anonHashes(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0da490_initGlobals(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0da68d_initCaller(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0da88b_end(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0dabee_insertBuf(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, _1dd0b6912_Builder* _130631_buf, jule::I64 _130654_pos);
inline void _1bc0dadec_implementRC(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0db0ea_serializeHead(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline void _1bc0db2e8_Serialize(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_);
inline jule::Str _1bc0dd350_Str(_1bc0dce98_customType* _self_);
inline jule::Bool _1bc0dd691_Equal(jule::Ptr<_1bc0dce98_customType> _self_, jule::Ptr<_1ad9b8596_TypeKind> _2518_k);
inline jule::Ptr<_1bc0dda8c_typeCoder> static__1bc0de0dc_new(jule::Ptr<_1bc0cdd35_ObjectCoder>* _5021_oc);
inline void _1bc0de450_toType(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _5727_buf, jule::Str _5754_id);
inline void _1bc0de7b3_prim(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _7125_buf, jule::Ptr<_1ad9c16ae_Prim> _7148_p);
inline void _1bc0deb26_tuple(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _7626_buf, jule::Ptr<_1ad9c67a2_Tuple> _7653_t);
inline void _1bc0dee89_asSptr(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem);
inline void _1bc0e02ec_sptr(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _9525_buf, jule::Ptr<_1ad9c51da_Sptr> _9552_sptr);
inline void _1bc0e0660_ptr(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _10224_buf, jule::Ptr<_1ad9c89a2_Ptr> _10251_p);
inline void _1bc0e09c3_enumDecl(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _11329_buf, jule::Ptr<_1ad805658_Enum> _11356_e);
inline void _1bc0e0d36_typeEnumDecl(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _11833_buf, jule::Ptr<_1ad806d63_TypeEnum> _11860_e);
inline void _1bc0e1199_asSlice(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _12228_buf, jule::Ptr<_1ad9b8596_TypeKind> _12255_elem);
inline void _1bc0e150c_slice(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _12926_buf, jule::Ptr<_1ad9c5bad_Slc> _12953_s);
inline void _1bc0e1870_mapType(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _13428_buf, jule::Ptr<_1ad9c7352_Map> _13455_m);
inline void _1bc0e2046_structureIns(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _14833_buf, jule::Ptr<_1ad718857_StructIns> _14860_s);
inline void _1bc0e23a9_array(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _17226_buf, jule::Ptr<_1ad9c7ece_Arr> _17253_a);
inline void _1bc0e2a80_paramIns(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _19529_buf, jule::Ptr<_1ad7e96e6_ParamIns>* _19557_p);
inline void _1bc0e3256_funcInsResult(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _22734_s, jule::Ptr<_1ad7ea84b_FnIns>* _22760_f);
inline void _1bc0e35b9_anonFunc(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _24529_buf, jule::Ptr<_1ad7ea84b_FnIns> _24556_f);
inline void _1bc0e392c_func(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _26625_buf, jule::Ptr<_1ad7ea84b_FnIns> _26652_f);
inline void _1bc0e3c90_kind(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _27325_buf, jule::Ptr<_1ad9b8596_TypeKind> _27352_k);
inline jule::Ptr<_1bc0e6677_resultCoder> static__1bc0e6b83_new(jule::Ptr<_1bc0dda8c_typeCoder>* _34121_tc);
inline void _1bc0e6ee6_ptr(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _34524_s, jule::Ptr<_1ad9c89a2_Ptr> _34549_p);
inline void _1bc0e7359_sptr(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _35025_s, jule::Ptr<_1ad9c51da_Sptr> _35050_p);
inline void _1bc0e76bc_mapType(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _35528_s, jule::Ptr<_1ad9c7352_Map> _35553_p);
inline void _1bc0e7a30_slice(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _36126_s, jule::Ptr<_1ad9c5bad_Slc> _36151_slc);
inline void _1bc0e7d93_arr(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _36624_s, jule::Ptr<_1ad9c7ece_Arr> _36649_arr);
inline void _1bc0e8206_func(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _37225_s, jule::Ptr<_1ad7ea84b_FnIns> _37250_f);
inline void _1bc0e8569_tup(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _38524_s, jule::Ptr<_1ad9c67a2_Tuple> _38549_tup);
inline void _1bc0e88cc_codeMut(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _39228_s, jule::Ptr<_1ad9b8596_TypeKind>* _39254_t);
inline void _1bc0e8c40_codeMut1(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _43229_s, jule::Ptr<_1ad9b8596_TypeKind>* _43255_t);
inline jule::Slice<jule::U8> _1bc0e904d_code(_1bc0e6677_resultCoder* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _44125_t);
inline jule::Str _1c0d47b77_Name(_1c0d47d20_Flag* _self_);
inline jule::Str _1c0d4810b_What(_1c0d47d20_Flag* _self_);
inline void _1c0d4824e_Reset(_1c0d47d20_Flag* _self_);
inline jule::I32 _1c0d48392_Short(_1c0d47d20_Flag* _self_);
inline jule::Str _1c0d4b2b8_Name(_1c0d4b63c_Flag* _self_);
inline jule::Str _1c0d4b928_What(_1c0d4b63c_Flag* _self_);
inline void _1c0d4ba6b_Reset(_1c0d4b63c_Flag* _self_);
inline jule::I32 _1c0d4bbae_Short(_1c0d4b63c_Flag* _self_);
inline jule::Str _1c0d4e9c5_Name(_1c0d4ed49_Flag* _self_);
inline jule::Str _1c0d50135_What(_1c0d4ed49_Flag* _self_);
inline void _1c0d50278_Reset(_1c0d4ed49_Flag* _self_);
inline jule::I32 _1c0d503bb_Short(_1c0d4ed49_Flag* _self_);
inline jule::Str _1c0d53226_Name(_1c0d5359a_Flag* _self_);
inline jule::Str _1c0d53886_What(_1c0d5359a_Flag* _self_);
inline void _1c0d539c9_Reset(_1c0d5359a_Flag* _self_);
inline jule::I32 _1c0d53b1c_Short(_1c0d5359a_Flag* _self_);
inline jule::Str _1c0d56933_Name(_1c0d56ca7_Flag* _self_);
inline jule::Str _1c0d57093_What(_1c0d56ca7_Flag* _self_);
inline void _1c0d571d6_Reset(_1c0d56ca7_Flag* _self_);
inline jule::I32 _1c0d57329_Short(_1c0d56ca7_Flag* _self_);
inline jule::Ptr<_1bc161ea6_FlagSet> static__1bc1622c5_New(void);
inline jule::Trait _1bc16277b_FindFlag(_1bc161ea6_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1bc162abc_FindFlagShort(_1bc161ea6_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1bc163194_Parse(_1bc161ea6_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1c0d56ca7_Flag> _1c0dd399e_addFlagCommon(_1bc161ea6_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1c0d5359a_Flag> _1c0ddca74_addFlagCommon(_1bc161ea6_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1c0dd1282_AddVar(_1bc161ea6_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1c0dda38a_AddVar(_1bc161ea6_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1c0d69a78_parseInteger(_1bc16496a_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1c0d72652_parseInteger(_1bc16496a_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1bc1652b7_getData(_1bc16496a_argParser* _self_);
inline jule::VoidExceptional _1bc16553c_processFlag(_1bc16496a_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1bc1657e5_singleDash(_1bc16496a_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1bc165a9d_doubleDash(_1bc16496a_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1bc165c9b_tryArg(_1bc16496a_argParser* _self_);
inline jule::VoidExceptional _1bc165e99_parse(_1bc16496a_argParser* _self_);
inline jule::Ptr<_1dd40e1bb_Cmd> static__1dd40e60b_New(jule::Str _2616_path);
inline jule::VoidExceptional _1dd40e809_Spawn(_1dd40e1bb_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1dd40ec8d_Wait(_1dd40e1bb_Cmd* _self_);
inline jule::VoidExceptional _1dd46397e_spawn(_1dd40e1bb_Cmd* _self_);
inline jule::Exceptional<jule::I64> _1dd463e13_wait(_1dd40e1bb_Cmd* _self_);
inline __jule_tuple_x_1bb09dcd4_IR__jule_tuple_s_1dd356476_Log static__1bb09e2ac_Build(jule::Str _3018_path, jule::I64 _3029_flags);
inline void _1bb09e796_appendStructs(_1bb09dcd4_IR* _self_, jule::Ptr<_1ad8e446c_Package>* _6830_p, jule::Slice<jule::Ptr<_1ad7159ec_Struct>>* _6854_buffer);
inline jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _1bb09ea2c_GetAllStructures(_1bb09dcd4_IR* _self_);
inline void _1bb09ed90_appendGlobals(_1bb09dcd4_IR* _self_, jule::Ptr<_1ad8e446c_Package>* _9130_p, jule::Slice<jule::Ptr<_1ad933a83_Var>>* _9154_buffer);
inline jule::Slice<jule::Ptr<_1ad933a83_Var>> _1bb0a0126_GetAllGlobals(_1bb09dcd4_IR* _self_);
inline void _1bb0a0324_Order(_1bb09dcd4_IR* _self_);
inline void _1db909564_Free(void* _4520_ptr);
inline jule::Str _1db939d47_BytePtrToStr(jule::U8* _6524_s);
inline jule::Slice<jule::U8> _1db93a0cd_StrToBytes(jule::Str _9015_s);
inline jule::I64 _1db5d9695_GetLastErrno(void);
inline jule::I64 _1db94953d_Fcntl(jule::I64 _5510_handle, jule::I64 _5523_cmd, jule::I64 _5533_arg);
inline jule::I64 _1db9498b2_Stat(jule::U8* _6016_path, struct stat* _6033_stat);
inline jule::I64 _1db949ce1_Open(jule::U8* _6516_path, jule::I64 _6529_flag, jule::I64 _6540_mode);
inline jule::U8* _1db94a165_Getcwd(jule::U8* _7118_buff, jule::U64 _7131_bufflen);
inline DIR* _1db94a660_Opendir(jule::U8* _7619_path);
inline struct dirent* _1db94a83b_Readdir(DIR* _7923_dir);
inline jule::I64 _1db94aad3_Closedir(DIR* _8224_dir);
inline jule::I64 _1db94b4da_Mkdir(jule::U8* _9117_path, jule::I64 _9130_mode);
inline jule::I64 _1db94b7a4_Rmdir(jule::U8* _9617_path);
inline jule::I64 _1db94ba6d_Unlink(jule::U8* _9918_path);
inline jule::I64 _1db95c364_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _1db95c73d_Close(jule::I64 _2510_handle);
inline jule::I64 _1db95cae5_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _1db95cd26_Exit(jule::I64 _339_code);
inline jule::Str _1db984314_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1bc1e70b3_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap);
inline jule::Slice<jule::U8> _1db990188_StrBytes(jule::Str _4013_s);
inline jule::Str _1db99041e_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _1db9906d8_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline __jule_tuple_i32__jule_tuple_int _1dbaa8e3e_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1dbaa9280_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1dbaa97d0_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::Slice<jule::U8> _1dbaaa32a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1dbaaa69e_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _1dbaaac32_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1dbaaaeeb_RuneStart(jule::U8 _51714_b);
inline jule::I64 _1dbc08de6_LeadingZeros64(jule::U64 _6119_x);
inline jule::I64 _1dbc09d3c_TrailingZeros(jule::U64 _8318_x);
inline jule::I64 _1dbc0a722_TrailingZeros32(jule::U32 _10520_x);
inline jule::I64 _1dbc0a9db_TrailingZeros64(jule::U64 _11420_x);
inline jule::I64 _1dbc114b4_Len32(jule::U32 _35214_x);
inline jule::I64 _1dbc1177d_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _1dbc1251a_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1dbc13d24_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::I64 _205e3dcd2_randInt(jule::U64 _716_seed, jule::I64 _727_max);
inline jule::Bool _1bc38ea41_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1bc3dd100_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1bd438237_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1c0641c57_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void _1db9769aa__handleRW(jule::Slice<jule::U8>* _1615_b);
inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2520_buf);
inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3620_buf);
inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf);
inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n);
inline jule::U64 _1bc2de6a5_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo);
inline jule::U64 _1bc2de870_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo);
inline jule::Str _1db996667_executable(void);
inline jule::U64* __jule_RCNew(void);
inline jule::U64 __jule_RCLoad(jule::U64* _4019_p);
inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p);
inline void __jule_RCAdd(jule::U64* _5722_p);
inline void __jule_RCAddAtomic(jule::U64* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U64* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p);
inline void __jule_RCFree(jule::U64* _9219_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I64 _1db9a11cc_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1c0da3089_arrToStr(jule::Slice<jule::U8> _13316_x);
inline jule::Str _1c0d97e2a_structToStr(_1dd0b6912_Builder _16619_x);
inline jule::Str _1bc352d56_toStr(jule::Any _20713_x);
inline jule::Str _1bc355034_toStr(jule::Str _20713_x);
inline jule::Str _1bc355782_toStr(jule::I64 _20713_x);
inline jule::Str _1bc35a4e0_toStr(jule::I8 _20713_x);
inline jule::Str _1bc358224_toStr(jule::I16 _20713_x);
inline jule::Str _1bc360902_toStr(jule::I32 _20713_x);
inline jule::Str _1bc3633d8_toStr(jule::I64 _20713_x);
inline jule::Str _1bc365e35_toStr(jule::U64 _20713_x);
inline jule::Str _1bc363949_toStr(jule::Uintptr _20713_x);
inline jule::Str _1bc368b19_toStr(jule::U8 _20713_x);
inline jule::Str _1bc36b05b_toStr(jule::U16 _20713_x);
inline jule::Str _1bc36d49d_toStr(jule::U32 _20713_x);
inline jule::Str _1bc3708e0_toStr(jule::U64 _20713_x);
inline jule::Str _1bc373cbc_toStr(jule::F32 _20713_x);
inline jule::Str _1bc372d76_toStr(jule::F64 _20713_x);
inline jule::Str _1bc360ccb_toStr(jule::Bool _20713_x);
inline jule::Str _1bc3536e7_toStr(jule::I64 _20713_x);
inline jule::Str _1bd135253_toStr(jule::I64 _20713_x);
inline jule::Str _1bd16d9a6_toStr(jule::I64 _20713_x);
inline jule::Str _1bd4cc50c_toStr(jule::I64 _20713_x);
inline jule::Str _1bdb72dc2_toStr(jule::Ptr<_1ad933a83_Var> _20713_x);
inline jule::Str _1bdb7508e_toStr(jule::Ptr<_1ad9b77a4_TypeAlias> _20713_x);
inline jule::Str _1bdb78a32_toStr(jule::Ptr<_1ad7159ec_Struct> _20713_x);
inline jule::Str _1bdb7c2e9_toStr(jule::Ptr<_1ad7e778d_Fn> _20713_x);
inline jule::Str _1bdb80d8b_toStr(jule::Ptr<_1ad802ea2_Trait> _20713_x);
inline jule::Str _1bdb81177_toStr(jule::Ptr<_1ad805658_Enum> _20713_x);
inline jule::Str _1bdb88d61_toStr(jule::Ptr<_1ad806d63_TypeEnum> _20713_x);
inline jule::Str _1bdba64bb_toStr(jule::Ptr<_1ad712ac6_Field> _20713_x);
inline jule::Str _1bdbb85aa_toStr(jule::Ptr<_1ad778ec2_Const> _20713_x);
inline jule::Str _1bdbd27b1_toStr(jule::Ptr<_1ad804b0d_EnumItem> _20713_x);
inline jule::Str _1bdbe3daa_toStr(jule::Ptr<_1ad7e5cb9_Param> _20713_x);
inline jule::Str _1bdccdcec_toStr(jule::Str _20713_x);
inline jule::Str _1bdda591d_toStr(jule::Ptr<_1ad6e57bd_IdentTypeDecl> _20713_x);
inline jule::Str _1bddbcade_toStr(jule::Ptr<_1ad7e0995_TupleExprModel> _20713_x);
inline jule::Str _1bddc0097_toStr(jule::Ptr<_1ad6ea0db_TupleExpr> _20713_x);
inline jule::Str _1bddcee31_toStr(jule::Ptr<_1ad703b61_AssignSt> _20713_x);
inline jule::Str _1bddd2917_toStr(jule::Ptr<_1ad6e94e7_Expr> _20713_x);
inline jule::Str _1bddd593c_toStr(jule::Ptr<_1ad8b4904_Postfix> _20713_x);
inline jule::Str _1bddd928c_toStr(jule::Ptr<_1ad8b4daa_Assign> _20713_x);
inline jule::Str _1bddd948a_toStr(jule::Ptr<_1ad8b5361_MultiAssign> _20713_x);
inline jule::Str _1bdddeade_toStr(jule::Ptr<_1ad985b90_Data> _20713_x);
inline jule::Str _1bdde24c6_toStr(jule::Ptr<_1ad7dc387_FnCallExprModel> _20713_x);
inline jule::Str _1bde2850c_toStr(jule::Ptr<_1ad8b3dba_Label> _20713_x);
inline jule::Str _1bde46ccd_toStr(jule::Ptr<_1ad8b136d_Scope> _20713_x);
inline jule::Str _1bde51249_toStr(jule::Ptr<_1ad7e3602_BuiltinErrorCallExprModel> _20713_x);
inline jule::Str _1bde558ad_toStr(jule::Ptr<_1ad7e4614_BackendEmitExprModel> _20713_x);
inline jule::Str _1bde56084_toStr(jule::Ptr<_1ad7e237b_BuiltinAppendCallExprModel> _20713_x);
inline jule::Str _1bde58938_toStr(jule::Ptr<_1ad7e0d6e_BuiltinOutCallExprModel> _20713_x);
inline jule::Str _1bde5ded2_toStr(jule::Ptr<_1ad7e1248_BuiltinOutlnCallExprModel> _20713_x);
inline jule::Str _1bde61a84_toStr(jule::Ptr<_1ad7e19eb_BuiltinPanicCallExprModel> _20713_x);
inline jule::Str _1bde64636_toStr(jule::Ptr<_1ad7e3228_BuiltinCopyCallExprModel> _20713_x);
inline jule::Str _1bde671d8_toStr(jule::Ptr<_1ad7e2d4e_BuiltinDeleteCallExprModel> _20713_x);
inline jule::Str _1bde69c8a_toStr(jule::Ptr<_1ad7e4911_FreeExprModel> _20713_x);
inline jule::Str _1bde7415c_toStr(jule::Ptr<_1ad8b1ea6_Conditional> _20713_x);
inline jule::Str _1bde7ea3b_toStr(jule::Ptr<_1ad8b22a3_InfIter> _20713_x);
inline jule::Str _1bde85877_toStr(jule::Ptr<_1ad8b2759_WhileIter> _20713_x);
inline jule::Str _1bdeac0a7_toStr(jule::Ptr<_1ad8b31a5_RangeIter> _20713_x);
inline jule::Str _1bdebbbbb_toStr(jule::Ptr<_1ad7094a2_WhileKind> _20713_x);
inline jule::Str _1bdebe44e_toStr(jule::Ptr<_1ad709da9_RangeKind> _20713_x);
inline jule::Str _1bdedadb6_toStr(jule::Ptr<_1ad8b353a_ContSt> _20713_x);
inline jule::Str _1bdee4c27_toStr(jule::Ptr<_1ad8b452a_GotoSt> _20713_x);
inline jule::Str _1be02a8d9_toStr(jule::Ptr<_1ad6ead12_IdentExpr> _20713_x);
inline jule::Str _1be04035a_toStr(jule::Ptr<_1ad7dcc17_IndexingExprModel> _20713_x);
inline jule::Str _1be08c94b_toStr(jule::Ptr<_1ad8b5a9d_Match> _20713_x);
inline jule::Str _1be0a19b5_toStr(jule::Ptr<_1ad8b6cbe_FallSt> _20713_x);
inline jule::Str _1be0bca36_toStr(jule::Ptr<_1ad8b3914_BreakSt> _20713_x);
inline jule::Str _1be0c41ad_toStr(jule::Ptr<_1ad8b7165_RetSt> _20713_x);
inline jule::Str _1be0cdb35_toStr(jule::Ptr<_1ad7051d4_ScopeTree> _20713_x);
inline jule::Str _1be0d1c26_toStr(jule::Ptr<_1ad70802d_VarDecl> _20713_x);
inline jule::Str _1be0d0c8b_toStr(jule::Ptr<_1ad70bbd0_TypeAliasDecl> _20713_x);
inline jule::Str _1be0d7435_toStr(jule::Ptr<_1ad70b493_Conditional> _20713_x);
inline jule::Str _1be0dbb54_toStr(jule::Ptr<_1ad708b77_Iter> _20713_x);
inline jule::Str _1be0dabb9_toStr(jule::Ptr<_1ad70a65c_ContSt> _20713_x);
inline jule::Str _1be0e2a7d_toStr(jule::Ptr<_1ad702797_LabelSt> _20713_x);
inline jule::Str _1be0e57b7_toStr(jule::Ptr<_1ad702b71_GotoSt> _20713_x);
inline jule::Str _1be0e8336_toStr(jule::Ptr<_1ad70c9a0_MatchCase> _20713_x);
inline jule::Str _1be0ec505_toStr(jule::Ptr<_1ad702e6d_FallSt> _20713_x);
inline jule::Str _1be0ebacb_toStr(jule::Ptr<_1ad70a283_BreakSt> _20713_x);
inline jule::Str _1be103990_toStr(jule::Ptr<_1ad708407_RetSt> _20713_x);
inline jule::Str _1be102e67_toStr(jule::Ptr<_1ad6e9dbb_UseExpr> _20713_x);
inline jule::Str _1be1e3a19_toStr(jule::Ptr<_1ad711a92_Impl> _20713_x);
inline jule::Str _1be1e85ce_toStr(jule::Ptr<_1ad710be5_StructDecl> _20713_x);
inline jule::Str _1be1eab42_toStr(jule::Ptr<_1ad706d73_FnDecl> _20713_x);
inline jule::Str _1be1ee739_toStr(jule::Ptr<_1ad711432_TraitDecl> _20713_x);
inline jule::Str _1be205bb3_toStr(jule::Ptr<_1ad70e09a_EnumDecl> _20713_x);
inline jule::Str _1be207d6e_toStr(jule::Ptr<_1ad710035_TypeEnumDecl> _20713_x);
inline jule::Str _1be23133c_toStr(jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _20713_x);
inline jule::Str _1be231abd_toStr(jule::Ptr<_1ad7da781_UnaryExprModel> _20713_x);
inline jule::Str _1be264837_toStr(jule::Ptr<_1ad7ea84b_FnIns> _20713_x);
inline jule::Str _1be525d7e_toStr(jule::Ptr<_1ad6e7bcc_MapTypeDecl> _20713_x);
inline jule::Str _1be52b6e2_toStr(jule::Ptr<_1ad6e68e0_TupleTypeDecl> _20713_x);
inline jule::Str _1be53ea68_toStr(jule::Ptr<_1ad6e747e_ArrTypeDecl> _20713_x);
inline jule::Str _1be545e8c_toStr(jule::Ptr<_1ad6e65e3_SlcTypeDecl> _20713_x);
inline jule::Str _1be54c3b1_toStr(jule::Ptr<_1ad6e6bdc_PtrTypeDecl> _20713_x);
inline jule::Str _1be5534b6_toStr(jule::Ptr<_1ad6e625d_SptrTypeDecl> _20713_x);
inline jule::Str _1be59d885_toStr(jule::Ptr<_1ad6eb97d_VariadicExpr> _20713_x);
inline jule::Str _1be5a45c2_toStr(jule::Ptr<_1ad7dc761_SliceExprModel> _20713_x);
inline jule::Str _1be5be2bd_toStr(jule::Ptr<_1ad6edc16_FieldExprPair> _20713_x);
inline jule::Str _1be5c7b89_toStr(jule::Ptr<_1ad700322_KeyValPair> _20713_x);
inline jule::Str _1be633ba1_toStr(jule::Ptr<_1ad6ed221_FnCallExpr> _20713_x);
inline jule::Str _1be646741_toStr(jule::Ptr<_1ad7db452_AllocStructLitExprModel> _20713_x);
inline jule::Str _1be6597a9_toStr(jule::Ptr<_1ad7db9d5_CastingExprModel> _20713_x);
inline jule::Str _1be67187b_toStr(jule::Ptr<_1ad7e02be_StructStaticIdentExprModel> _20713_x);
inline jule::Str _1be674164_toStr(jule::Ptr<_1ad6ec60a_SubIdentExpr> _20713_x);
inline jule::Str _1be681270_toStr(jule::Ptr<_1ad7db155_StructLitExprModel> _20713_x);
inline jule::Str _1be6a1768_toStr(jule::Ptr<_1ad7e4290_RuneExprModel> _20713_x);
inline jule::Str _1be6c4505_toStr(jule::Ptr<_1ad718857_StructIns> _20713_x);
inline jule::Str _1be7146bb_toStr(jule::Ptr<_1ad9b8596_TypeKind> _20713_x);
inline jule::Str _1be736710_toStr(jule::Ptr<_1ad7e0698_ArrayExprModel> _20713_x);
inline jule::Str _1be7754da_toStr(jule::Ptr<_1ad6e5a87_SubIdentTypeDecl> _20713_x);
inline jule::Str _1be779ae9_toStr(jule::Ptr<_1ad6eb5a4_UnaryExpr> _20713_x);
inline jule::Str _1be783c79_toStr(jule::Ptr<_1ad6e51b3_TypeDecl> _20713_x);
inline jule::Str _1be7886c9_toStr(jule::Ptr<_1ad6ec231_NamespaceExpr> _20713_x);
inline jule::Str _1be7901b4_toStr(jule::Ptr<_1ad6e5e61_NamespaceTypeDecl> _20713_x);
inline jule::Str _1be7ca793_toStr(jule::Ptr<_1ad7de004_SlicingExprModel> _20713_x);
inline jule::Str _1be848448_toStr(jule::Ptr<_1ad700a4d_SliceExpr> _20713_x);
inline jule::Str _1be8b4dbb_toStr(jule::Ptr<_1ad7de587_TraitSubIdentExprModel> _20713_x);
inline jule::Str _1be9641ce_toStr(jule::Ptr<_1ad7dd971_MapExprModel> _20713_x);
inline jule::Str _1be974563_toStr(jule::Ptr<_1ad7dd1bd_AnonFnExprModel> _20713_x);
inline jule::Str _1be97b603_toStr(jule::Ptr<_1ad6e97b1_RangeExpr> _20713_x);
inline jule::Str _1be97e727_toStr(jule::Ptr<_1ad6ea482_LitExpr> _20713_x);
inline jule::Str _1be982780_toStr(jule::Ptr<_1ad6ea85b_UnsafeExpr> _20713_x);
inline jule::Str _1be9876a8_toStr(jule::Ptr<_1ad7014aa_IndexingExpr> _20713_x);
inline jule::Str _1be98b2b1_toStr(jule::Ptr<_1ad701b1a_SlicingExpr> _20713_x);
inline jule::Str _1be98a326_toStr(jule::Ptr<_1ad6ebd57_CastExpr> _20713_x);
inline jule::Str _1be992196_toStr(jule::Ptr<_1ad6ee541_StructLit> _20713_x);
inline jule::Str _1be995430_toStr(jule::Ptr<_1ad6ee9e7_BraceLit> _20713_x);
inline jule::Str _1be99a9b8_toStr(jule::Ptr<_1ad6ecab1_BinaryExpr> _20713_x);
inline jule::Str _1beae40ea_toStr(jule::Ptr<_1ad7da3a7_BinaryExprModel> _20713_x);
inline jule::Str _1bc7ed0d1_toStr(jule::Ptr<_1ad7e1622_BuiltinNewCallExprModel> _20713_x);
inline jule::Str _1bc81416e_toStr(jule::Ptr<_1ad7e1ea2_BuiltinMakeCallExprModel> _20713_x);
inline jule::Str _1bc848ec8_toStr(jule::Ptr<_1ad7e2678_BuiltinLenCallExprModel> _20713_x);
inline jule::Str _1bece6011_toStr(jule::Ptr<_1ad7e2975_BuiltinCapCallExprModel> _20713_x);
inline jule::Str _1bed3cb90_toStr(jule::Ptr<_1ad7e38ee_SizeofExprModel> _20713_x);
inline jule::Str _1bed46b99_toStr(jule::Ptr<_1ad7e40a3_AlignofExprModel> _20713_x);
inline jule::Str _1c02a4348_toStr(jule::Str _20713_x);
inline jule::Str _1c04670ee_toStr(jule::Ptr<_1bbd9506e_ExceptionalForwardingExprModel> _20713_x);
inline jule::Str _1c049e136_toStr(jule::Ptr<_1bbd97857_StrRuneIter> _20713_x);
inline jule::Str _1c04a6a78_toStr(jule::Ptr<_1bbd96548_MutSlicingExprModel> _20713_x);
inline jule::Str _1c04d19a4_toStr(jule::Ptr<_1bbd9747d_AppendToSliceExprModel> _20713_x);
inline jule::Str _1c04d3dd5_toStr(jule::Ptr<_1bbd970a4_PushToSliceExprModel> _20713_x);
inline jule::Str _1c04e1db0_toStr(jule::Ptr<_1bbd952e4_SwapExprModel> _20713_x);
inline jule::Str _1c052e936_toStr(jule::Ptr<_1bbd956bd_EmptyCompareExprModel> _20713_x);
inline jule::Str _1c05322b8_toStr(jule::Ptr<_1bbd95eb5_StrCompExprModel> _20713_x);
inline jule::Str _1c056a7a7_toStr(jule::Ptr<_1bbd96845_UnsafeBinaryExprModel> _20713_x);
inline jule::Str _1c0573b56_toStr(jule::Ptr<_1bbd97b54_UnsafeDerefExprModel> _20713_x);
inline jule::Str _1c057a4ba_toStr(jule::Ptr<_1bbd95a42_RefExprModel> _20713_x);
inline jule::Str _1c057ea63_toStr(jule::Ptr<_1ad7dacae_StructArgExprModel> _20713_x);
inline jule::Str _1c058632d_toStr(jule::Ptr<_1bbd97e51_UnsafeCastingExprModel> _20713_x);
inline jule::Str _1c0595194_toStr(jule::Ptr<_1bbd96bca_UnsafeIndexingExprModel> _20713_x);
inline jule::Str _1c0b0dd39_toStr(jule::Ptr<jule::Str> _20713_x);
inline jule::Str _1c0d92e69_toStr(_1dd0b6912_Builder _20713_x);
inline jule::Str _1c0d9e7b1_toStr(jule::Slice<jule::U8> _20713_x);
inline jule::Str _1c0d9708e_toStr(jule::Str _20713_x);
inline jule::Str _1c0da67da_toStr(jule::Str _20713_x);
inline void _1db9a2376_rev(jule::Slice<jule::U8> _26012_b);
inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen);
inline void _1dbaad9b0_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Slice<jule::Str> _1dbaade88_args(void);
inline jule::I64 _1dbaae54e_strlen(jule::U8* _3122_p);
inline jule::Bool _1dbab086e__coSpawn(void* _1520_func, void* _1535_args);
inline jule::U64 _1dbb16ac3_hash128to64(_1dbb1671b_u128 _4316_sum);
inline jule::U64 _1dbb16dd1_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _1dbb1719a_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _1dbb174db_shiftMix(jule::U64 _5513_z);
inline jule::U64 _1dbb1782c_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _1dbb17ba1_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _1dbb180d0_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _1dbb18564_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n);
inline _1dbb1671b_u128 _1dbb1891b_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _1dbb1671b_u128 _10342_seed);
inline _1dbb1671b_u128 _1dbb1906a_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _1dbb1671b_u128 _1dbb19499_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _1dbb1671b_u128 _1dbb198c8_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _1dbb1671b_u128 _16048_seed);
inline jule::U64 _1dbb19b92_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _1dbc18499_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _1dbc187a7_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _1dbc18a71_nextMatch(jule::U64* _6419_b);
inline jule::U64 _1dbc18db2_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _1dbc19148_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I64 _1dbc19412_numGroups(jule::I64 _7914_n);
inline jule::Array<jule::I8,8> _1dbc19621_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _1dbc199ea_splitHash(jule::U64 _9414_h);
inline jule::U32 _1dbc19ce7_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups);
inline jule::U32 _1dbc1a16b_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline jule::I64 _1dbc45d78_getLastOsError(void);
inline jule::Slice<jule::Str> _1dbc4676e_Args(void);
inline jule::Exceptional<jule::Str> _1dbc46c69_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1dbc476c6_getwd(void);
inline jule::I64 _1dbe8c993_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _1dbe8d0c0_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _1dbe8d444_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Bool _1dd035ab2_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1dd0a1534_is16(jule::Slice<_1dd09e796_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1dd0a18a8_is32(jule::Slice<_1dd09ecc4_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1dd0a21b1_isExcludingLatin(jule::Ptr<_1dd0a0247_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1dd0a2403_IsUpper(jule::I32 _29512_r);
inline jule::I32 _1dd0a2aeb_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_1dd09e2e0_CaseRange> _31336_cr);
inline jule::Ptr<_1dd09e2e0_CaseRange> _1dd0a2e70_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1dd09e2e0_CaseRange> _33329_caseRange);
inline jule::I32 _1dd0a3239_SimpleFold(jule::I32 _37015_r);
inline jule::Str _1dd0a3613_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _1dd0a3976_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1dd0a3cea_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _1dd0a42a1_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _1dd0a45e2_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _1dd0a4a21_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _1dd0a4d95_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _1dd0a667c_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _1dd0a6a01_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _1dd0a742a_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1dd0a7abd_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Bool _1dd0a7e42_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _1dd0a89ae_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I64 _1dd0a8d33_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _1dd0a931c_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n);
inline jule::Str _1dd0aa098_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _1dd0aa41c_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _1dd0aa791_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Str _1dd0aab15_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep);
inline jule::Bool _1dd0c33ad_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Str _1dd0c4876_Clean(jule::Str _10914_path);
inline jule::Str _1dd0c4e4d_FromSlash(jule::Str _21214_path);
inline jule::Str _1dd0c528e_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1dd0c5525_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1dd0c57de_Abs(jule::Str _2468_path);
inline jule::Str _1dd0c5aa8_Base(jule::Str _25213_path);
inline jule::Str _1dd0c5e82_Dir(jule::Str _2838_path);
inline jule::Str _1dd0c61c4_VolumeName(jule::Str _30115_path);
inline jule::Bool _1dd0c6eb6_IsPathSep(jule::U8 _4814_c);
inline jule::Bool _1dd0c72c4_IsAbs(jule::Str _5310_path);
inline jule::I64 _1dd0c758d_volumeNameLen(jule::Str _5918_path);
inline __jule_tuple_str__jule_tuple_bool _1dd0c78ce_abs(jule::Str _638_path);
inline jule::Str _1dd0c7b65_join(jule::Slice<jule::Str> _739_elem);
inline jule::I64 _1dbd02ad3_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1dd45592c_AtoiBp(jule::U8* _722_b, jule::I64 _736_n);
inline jule::Str _1dd45de74_Itoa(jule::I64 _89_x);
inline jule::Str _1dd45e282_Utoa(jule::U64 _1613_x);
inline void _1dd45e4b3_rev(jule::Slice<jule::U8>* _3513_b);
inline jule::Slice<char*> _1dd463143_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs);
inline jule::I64 _1dd4634b7_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv);
inline jule::VoidExceptional _1dd4636e8_setenv(jule::Slice<jule::Str>* _5712_envv);
inline jule::I64 _1dd4646e9_processErrorFromCode(jule::I64 _725_code);
inline jule::I64 _1dd464870_getLastProcessError(void);
inline void _1dd465035_Exit(jule::I64 _109_code);
inline jule::Str _1dd465299_Executable(void);
inline jule::Bool _1dd348d2b_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1dd349106_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1dd3493c0_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1dd3568d8_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args);
inline jule::Str _1dd356be6_argToStr(jule::Any _32813_arg);
inline jule::I64 _1dd356eb0_findNextFmt(jule::Str _34116_fmt);
inline jule::Str _1dd357378_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args);
inline jule::Bool _1dd35827a_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _1dd359699_IsWindows(jule::Str _3714_os);
inline jule::Bool _1dd3599a7_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1dd359c71_IsLinux(jule::Str _4312_os);
inline jule::Bool _1dd35a0b2_IsI386(jule::Str _4611_arch);
inline jule::Bool _1dd35a348_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1dd35a612_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1dd35a8cb_IsUnix(jule::Str _5511_os);
inline jule::Bool _1dd35aca5_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1dd35aee7_Is64Bit(jule::Str _6112_arch);
inline void _1dd466476_init(void);
inline jule::U32 _1c2d42d5c_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1c2d4316a_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1c2d43434_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1c2d43775_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1c2d45cd8_Frexp(jule::F64 _4714_f);
inline jule::F64 _1c2d4b250_NaN(void);
inline jule::Bool _1c2d4b55d_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1c2d4b827_Inf(jule::I64 _618_sign);
inline jule::Bool _1c2d4bbe0_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1c2d4bea9_normalize(jule::F64 _8214_x);
inline jule::F64 _1c2d4d97d_Log(jule::F64 _1118_x);
inline jule::F64 _1c2d4e363_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1c2d55dd6_Modf(jule::F64 _449_f);
inline jule::F64 _1c2d566de_Log2(jule::F64 _449_x);
inline jule::Str _1ab146b28_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1ab147211_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1ab14791a_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1ab14596d_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1ab1480e1_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1ab146595_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1ab14850e_roundShortest(_1ab159135_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1ab14596d_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1ab148aa3_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1ab146595_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1ab14908c_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1ab146595_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1ab149741_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1ab14596d_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1ab149dc3_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1ab14596d_floatInfo* _51232_flt);
inline jule::I64 _1ab14a247_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1ab14a5bb_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1ab14b259_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1a9c49771_ConvError _1ab14b6cc_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1ab14bb0b_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1ab14c0b2_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1ab14cc72_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1ab14d13a_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1ab14ed62_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1ab150170_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1ab150439_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1ab151e85_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1ab1523b4_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1a9c49771_ConvError _1ab152958_atofHex(_1ab14596d_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a9c49771_ConvError _1ab152d32_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a9c49771_ConvError _1ab153074_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a9c49771_ConvError _1ab1533e8_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1ab15376c_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1ab154097_ryuFtoaFixed32(_1ab146595_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1ab15453c_ryuFtoaFixed64(_1ab146595_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1ab154d78_formatDecimal(_1ab146595_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1ab155351_ryuFtoaShortest(_1ab146595_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1ab14596d_floatInfo* _26168_flt);
inline jule::I64 _1ab1555d7_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1ab1558a1_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1ab155cd0_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1ab14596d_floatInfo* _3963_flt);
inline void _1ab15642e_ryuDigits(_1ab146595_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1ab156aa0_ryuDigits32(_1ab146595_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1ab156ece_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1ab15740d_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1ab157782_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1ab157a4b_divmod1e9(jule::U64 _60214_x);
inline void _1ab15a983_trim(_1ab159135_decimal* _27414_a);
inline void _1ab15ac6e_rightShift(_1ab159135_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1ab15b225_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1ab15b4cd_leftShift(_1ab159135_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1ab15b852_shouldRoundUp(_1ab159135_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1ab15d029_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1ab15d3e2_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1ab15d6ab_Itoa(jule::I64 _819_i);
inline jule::Str _1ab15d9ec_small(jule::I64 _8610_i);
inline jule::Bool _1ab15dc83_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1ab15e327_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline void _1ab160a32_Throw(jule::Str _910_msg);
inline jule::Bool _1ad6d03ac_IsUnaryOp(jule::U64 _33314_id);
inline jule::Bool _1ad6d06ba_IsBinOp(jule::U64 _34312_id);
inline jule::Bool _1ad6d0cc5_IsStr(jule::Str _36310_k);
inline jule::Bool _1ad6d105b_IsRawStr(jule::Str _36613_k);
inline jule::Bool _1ad6d1325_IsRune(jule::Str _37011_k);
inline jule::Bool _1ad6d1c0a_IsFloat(jule::Str _37912_k);
inline jule::Bool _1ad6d1ec4_IsNum(jule::Str _38710_k);
inline jule::Bool _1ad6d2557_IsIgnoreIdent(jule::Str _40218_ident);
inline jule::Bool _1ad6d2821_IsAnonIdent(jule::Str _40516_ident);
inline jule::Bool _1ad6d2da4_IsSpace(jule::I32 _41812_r);
inline jule::Bool _1ad6d339e_IsLetter(jule::I32 _42813_r);
inline jule::Bool _1ad6d3822_IsKeyword(jule::Str _44814_s);
inline jule::Bool _1ad6d3adb_IsDecimal(jule::U8 _45814_b);
inline jule::Bool _1ad6d3da5_IsBinary(jule::U8 _46113_b);
inline jule::Bool _1ad6d416e_IsOctal(jule::U8 _46412_b);
inline jule::Bool _1ad6d4438_IsHex(jule::U8 _46710_b);
inline jule::Bool _1ad6d4702_IsAssign(jule::U64 _48213_id);
inline jule::Bool _1ad6d49bb_IsPostfixOp(jule::U64 _49416_id);
inline jule::Bool _1ad6d4c85_IsAssignOp(jule::U64 _50415_id);
inline _1dd356476_Log _1ad6d82c7_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1ad6d5527_Fileset>* _10033_f, jule::Str _10046_fmt, jule::Slice<jule::Any> _10066_args);
inline jule::Bool _1ad6d8690_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1ad6d8a14_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i);
inline jule::Str _1ad6d8dcc_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i);
inline jule::Str _1ad6d9251_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i);
inline jule::Str _1ad6d95c5_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i);
inline jule::Str _1ad6d9949_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i);
inline jule::Str _1ad6d9dcd_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i);
inline jule::Str _1ad6da120_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1ad6da3d9_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1ad6da75d_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i);
inline jule::Bool _1ad6daad2_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i);
inline jule::Bool _1ad6dae56_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i);
inline jule::Bool _1ad6db2ca_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i);
inline jule::Bool _1ad6db64e_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i);
inline jule::Str _1ad6dbb49_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1ad6dbd25_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1ad6dc177_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n);
inline jule::Str _1ad6dc441_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1ad6dc70a_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1ad6dc9c4_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1ad6dcc8d_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_1dd356476_Log> _1ad6e2c82_Lex(jule::Ptr<_1ad6d5527_Fileset> _80612_f, jule::I64 _80625_mode);
inline void _1ad7d7a36_lshiftUnsig(_1ad778ec2_Const* _58821_c, _1ad778ec2_Const* _58832_x);
inline void _1ad7d7d66_rshiftUnsig(_1ad778ec2_Const* _59421_c, _1ad778ec2_Const* _59432_x);
inline jule::Str _1ad873c8c_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1ad874056_BitSizeOf(jule::Str _5914_k);
inline jule::Str _1ad874397_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1ad87462d_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1ad8748e7_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1ad8754ec_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1ad8757b6_BitSizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1ad875a80_BitSizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1ad875d49_BitSizeOfUint(jule::U64 _19718_x);
inline void _1ad875ee2_UpdateTarget(void);
inline void _1ad876168_init(void);
inline jule::I64 _1ad879c2c_MinI(jule::Str _6113_k);
inline jule::I64 _1ad87a03a_MaxI(jule::Str _7913_k);
inline jule::U64 _1ad87a304_MaxU(jule::Str _9713_k);
inline jule::F64 _1ad87a645_Min(jule::Str _11512_k);
inline jule::F64 _1ad87a8cb_Max(jule::Str _13312_k);
inline jule::Bool _1ad87b9ed_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1ad87bd0b_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1ad87c0c5_IsInt(jule::Str _4610_k);
inline jule::Bool _1ad87c416_IsFloat(jule::Str _5112_k);
inline jule::Bool _1ad87c69c_IsNum(jule::Str _5610_k);
inline jule::Bool _1ad87c966_IsSigNum(jule::Str _6113_k);
inline jule::Bool _1ad90b1ed_FindModuleFile(jule::Slice<jule::Ptr<_1dbd04750_DirEntry>>* _1320_dirents);
inline jule::Str _1ad90b50b_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_1dd356476_Log> _1ad90b7c5_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1ad90c078_IsPub(jule::Str _910_ident);
inline jule::Bool _1ad96c9ce_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1ad954c19_ToRune(jule::Str _2015_lit);
inline jule::Str _1ad96e816_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1ad96eb57_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1ad96eddd_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1ad970262_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1ad970608_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1ada3868d_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i);
inline jule::Slice<jule::U8> _1ada3ecb0_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1ada4009b_FmtByDefault(_1dd0b6912_Builder* _4822_buf, jule::Any* _4846_arg);
inline void _1ada404b9_applyFmtByDefault(_1dd0b6912_Builder* _8727_buf, jule::I64* _8755_j, jule::Slice<jule::Any> _8763_args);
inline void _1ada408d7_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1dd0b6912_Builder* _9536_buf, jule::I64* _9564_j, jule::Slice<jule::Any> _9572_args);
inline jule::Slice<jule::U8> _1ada40c5b_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1ada9c9dd_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1ad7e778d_Fn> _1ab307aca_runtimeFindFn(jule::Ptr<_1ad8e1bea_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1ad7159ec_Struct> _1ab307338_runtimeFindStruct(jule::Ptr<_1ad8e1bea_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1ad7ecb28_parameterUsesGenerics(jule::Ptr<_1ad7e96e6_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>* _39546_generics);
inline jule::Ptr<_1ad985b90_Data> _1ad8a7562_buildAsComptimeMethodData(jule::Ptr<_1ad7ea84b_FnIns>* _203035_f);
inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8a7771_findComptimePackage(jule::Ptr<_1ad90ed6c_sema>* _203829_s);
inline jule::Ptr<_1ad985b90_Data> _1ad8a7ae5_buildComptimeTypeInfoData(jule::Ptr<_1ad90ed6c_sema>* _204435_s, jule::Ptr<_1ad9b8596_TypeKind>* _204450_t);
inline jule::Ptr<_1ad985b90_Data> _1ad8a7e36_buildComptimeValue(jule::Ptr<_1ad985b90_Data>* _205228_d);
inline jule::Str _1ad8aac5d_toStrConstraints(jule::Ptr<_1ad9b6de1_InsGeneric> _14321_g);
inline jule::Bool _1ad8ab126_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1ad9b8596_TypeKind>* _15434_g);
inline jule::Bool _1ad8ab3e0_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1ad8b860b_scopeChecker> _1ad8adcc7_newScopeCheckerBase(jule::Ptr<_1ad90ed6c_sema>* _3229_s, jule::Ptr<_1ad7ea84b_FnIns> _3243_owner);
inline jule::Ptr<_1ad8b860b_scopeChecker> _1ad8ae190_newScopeChecker(jule::Ptr<_1ad90ed6c_sema>* _4025_s, jule::Ptr<_1ad7ea84b_FnIns> _4039_owner);
inline jule::Ptr<_1ad8b761b_scopeLabel> _1ad8ae514_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1ad8b860b_scopeChecker> _5037_scope);
inline jule::Slice<jule::Ptr<_1ad985b90_Data>> _1ad8ae855_getDatasFromTupleData(jule::Ptr<_1ad985b90_Data>* _6231_d);
inline jule::Bool _1ad8b00c5_checkMut(jule::Ptr<_1ad90ed6c_sema>* _9718_s, jule::Ptr<_1ad985b90_Data>* _9729_left, jule::Ptr<_1ad985b90_Data> _9746_right, jule::Ptr<_1ad6ceb70_Token> _9760_op);
inline jule::Bool _1ad8b05ae_checkAssign(jule::Ptr<_1ad90ed6c_sema>* _11621_s, jule::Ptr<_1ad985b90_Data>* _11636_left, jule::Ptr<_1ad985b90_Data> _11653_right, jule::Ptr<_1ad6ceb70_Token> _11667_op);
inline jule::Bool _1ad8b0988_isValidAstStForNextSt(jule::Any* _13831_n);
inline jule::Bool _1ad8b0bca_isValidStForNextSt(jule::Any* _14924_st);
inline jule::U64 _1ad8cad5a_removeEqFromOp(jule::U64 _214019_op);
inline void _1ad8cb08b_makeComptimeRange(jule::Ptr<_1ad985b90_Data>* _216927_d);
inline jule::Bool _1ad8cb355_canComptimeMatch(jule::Ptr<_1ad985b90_Data>* _219226_d);
inline jule::Bool _1ad8cb61e_stmtIsDef(jule::Any* _220015_stmt);
inline jule::I64 _1ad8cb993_countMatchType(jule::Ptr<_1ad8b5a9d_Match>* _221220_m, jule::Ptr<_1ad9b8596_TypeKind>* _221232_t);
inline jule::Ptr<_1ad9c0ca7_TypeSymbol> _1ad8d1547_buildType(jule::Ptr<_1ad6e51b3_TypeDecl> _6818_t);
inline jule::Ptr<_1ad986d17_Value> _1ad8d1855_buildExpr(jule::Ptr<_1ad6e94e7_Expr> _7718_expr);
inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad8d1b1e_buildTypeAlias(jule::Ptr<_1ad70bbd0_TypeAliasDecl> _8623_decl);
inline jule::Ptr<_1ad712ac6_Field> _1ad8d1e60_buildField(jule::Ptr<_1ad7102ee_FieldDecl> _9719_decl);
inline jule::Slice<jule::Ptr<_1ad712ac6_Field>> _1ad8d21e6_buildFields(jule::Slice<jule::Ptr<_1ad7102ee_FieldDecl>>* _10821_decls);
inline jule::Ptr<_1ad7159ec_Struct> _1ad8d24b0_buildStruct(jule::Ptr<_1ad710be5_StructDecl> _11620_decl);
inline jule::Ptr<_1ad7e5cb9_Param> _1ad8d2779_buildParam(jule::Ptr<_1ad705921_ParamDecl> _12819_decl);
inline jule::Slice<jule::Ptr<_1ad7e5cb9_Param>> _1ad8d2b53_buildParams(jule::Slice<jule::Ptr<_1ad705921_ParamDecl>>* _13921_decls);
inline jule::Ptr<_1ad7e5538_RetType> _1ad8d2d95_buildRetType(jule::Ptr<_1ad6e80a6_RetTypeDecl> _14721_decl);
inline jule::Ptr<_1ad7e778d_Fn> _1ad8d315e_buildFunc(jule::Ptr<_1ad706d73_FnDecl> _15718_decl);
inline jule::Slice<jule::Ptr<_1ad7e778d_Fn>> _1ad8d3428_buildMethods(jule::Slice<jule::Ptr<_1ad706d73_FnDecl>>* _17522_decls);
inline jule::Slice<jule::Ptr<_1ad9c0ca7_TypeSymbol>> _1ad8d36e2_buildTraitInherits(jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>* _18328_inherits);
inline jule::Ptr<_1ad802ea2_Trait> _1ad8d39ab_buildTrait(jule::Ptr<_1ad711432_TraitDecl> _19119_decl);
inline jule::Ptr<_1ad804b0d_EnumItem> _1ad8d3c75_buildEnumItem(jule::Ptr<_1ad70d4d9_EnumItemDecl> _20122_decl);
inline jule::Slice<jule::Ptr<_1ad804b0d_EnumItem>> _1ad8d403e_buildEnumItems(jule::Slice<jule::Ptr<_1ad70d4d9_EnumItemDecl>>* _20924_decls);
inline jule::Ptr<_1ad805658_Enum> _1ad8d4539_buildEnum(jule::Ptr<_1ad70e09a_EnumDecl> _21718_decl);
inline jule::Ptr<_1ad80678b_TypeEnumItem> _1ad8d4715_buildTypeEnumItem(jule::Ptr<_1ad70e8c5_TypeEnumItemDecl> _22726_decl);
inline jule::Slice<jule::Ptr<_1ad80678b_TypeEnumItem>> _1ad8d49ac_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ad70e8c5_TypeEnumItemDecl>>* _23528_decls);
inline jule::Ptr<_1ad806d63_TypeEnum> _1ad8d4c76_buildTypeEnum(jule::Ptr<_1ad710035_TypeEnumDecl> _24322_decl);
inline jule::Ptr<_1ad933a83_Var> _1ad8d5040_buildVar(jule::Ptr<_1ad70802d_VarDecl> _25217_decl);
inline jule::Slice<jule::Ptr<_1ad933a83_Var>> _1ad8d5309_buildVars(jule::Slice<jule::Ptr<_1ad70802d_VarDecl>> _26918_decls);
inline jule::Ptr<_1ad8abc5e_Impl> _1ad8d55c3_buildImpl(jule::Ptr<_1ad711a92_Impl> _27718_decl);
inline jule::Bool _1ad8dbde3_isImplicitImport(jule::Ptr<_1ad8e1bea_ImportInfo> _79021_imp);
inline jule::Ptr<_1ad7eda91_SymTab> _1ad8de038_findVarFileInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _4430_files, jule::Ptr<_1ad933a83_Var>* _4449_v);
inline jule::Ptr<_1ad933a83_Var> _1ad8de4ab_findVarInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded);
inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad8de8da_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded);
inline jule::Ptr<_1ad7159ec_Struct> _1ad8ded91_findStructInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded);
inline jule::Ptr<_1ad7e778d_Fn> _1ad8e028c_findFnInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded);
inline jule::Ptr<_1ad802ea2_Trait> _1ad8e0611_findTraitInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _10328_files, jule::Str* _10347_ident);
inline jule::Ptr<_1ad805658_Enum> _1ad8e0985_findEnumInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _11527_files, jule::Str* _11546_ident);
inline jule::Ptr<_1ad806d63_TypeEnum> _1ad8e0e19_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _12731_files, jule::Str* _12750_ident);
inline jule::Bool _1ad8e6947_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p);
inline jule::Bool _1ad90c72c_isValidModelForRef(jule::Any* _1428_m);
inline _1dd356476_Log _1ad90cc5a_compilerErr(jule::Ptr<_1ad6ceb70_Token>* _4817_token, jule::Bool _4839_line, jule::Str _4851_fmt, jule::Slice<jule::Any> _4871_args);
inline void _1ad90d046_appendRetVars(jule::Slice<jule::Ptr<_1ad933a83_Var>>* _6223_dest, jule::Ptr<_1ad7ea84b_FnIns>* _6242_f);
inline void _1ad90d376_appendParamVars(jule::Slice<jule::Ptr<_1ad933a83_Var>>* _9225_dest, jule::Ptr<_1ad7ea84b_FnIns>* _9244_f);
inline void _1ad90d662_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>* _15234_dest, jule::Ptr<_1ad7ea84b_FnIns>* _15259_f);
inline jule::Ptr<_1ad7eda91_SymTab> _1ad90d9d6_findFile(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _19318_files, jule::Ptr<_1ad6d5527_Fileset>* _19337_handler);
inline void _1ad90dd7c_pushSuggestion(_1dd356476_Log* _20230_log, jule::Str _20248_fmt, jule::Slice<jule::Any> _20268_args);
inline void _1ad9319d7_pushImplemented(jule::Ptr<_1ad802ea2_Trait> _280124_t, jule::Ptr<_1ad7159ec_Struct>* _280140_d);
inline void _1ad931cc3_pushImplements(jule::Ptr<_1ad7159ec_Struct>* _281924_s, jule::Ptr<_1ad802ea2_Trait> _281940_t);
inline void _1ad932224_pushRuntimeToStr(jule::Ptr<_1ad90ed6c_sema>* _283726_s, jule::Ptr<_1ad9b8596_TypeKind>* _283741_t, jule::Ptr<_1ad6ceb70_Token>* _283760_token, jule::Ptr<_1ad8ced70_ReferenceStack> _28386_refers);
inline jule::Bool _1ad9324dd_isValidImpAlias(jule::Str _285524_alias);
inline jule::Bool _1ad970c57_traitHasReferenceReceiver(jule::Ptr<_1ad802ea2_Trait>* _1631_t);
inline jule::Bool _1ad971120_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1ad985b90_Data>* _3133_d);
inline jule::Bool _1ad971494_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1ad985b90_Data>* _3630_d);
inline jule::Bool _1ad97185c_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1ad985b90_Data>* _5932_d);
inline jule::Bool _1ad971bd1_intAssignable(jule::Str _8818_kind, jule::Ptr<_1ad985b90_Data>* _8830_d);
inline void _1ad97d1c6_checkMutRiskOfStructLit(jule::Ptr<_1ad90ed6c_sema>* _90933_s, jule::Ptr<_1ad7db155_StructLitExprModel>* _90944_m);
inline jule::Ptr<_1ad9b8596_TypeKind> _1ad984012_lenKind(void);
inline jule::Bool _1ad984364_isGoodValueToInfer(jule::Ptr<_1ad985b90_Data>* _141424_d);
inline jule::Ptr<_1ad6e45d0_Directive> _1ad9b0192_findDirective(jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _435323_directives, jule::Str _435354_d);
inline jule::Any _1ad9b055a_findBuiltinsImport(jule::Str* _436224_ident, jule::Ptr<_1ad8e1bea_ImportInfo> _436236_imp);
inline void _1ad9b078b_fitBitsize(jule::Ptr<_1ad985b90_Data>* _437120_d);
inline void _1ad9b0abb_makeStructLitAlloc(jule::Ptr<_1ad985b90_Data>* _440028_d, jule::Ptr<_1ad7db155_StructLitExprModel>* _440043_lit);
inline jule::Ptr<_1ad933a83_Var> _1ad9b0e40_buildErrorVar(jule::Ptr<_1ad8b136d_Scope>* _441123_s, jule::Ptr<_1ad6ed221_FnCallExpr>* _441139_fc);
inline jule::Any _1ad9b12b4_findBuiltinsSema(jule::Str* _442622_ident, jule::Ptr<_1ad90ed6c_sema> _442638_s);
inline jule::Bool _1ad9b157d_isOkForShifting(jule::Ptr<_1ad985b90_Data>* _444125_d);
inline jule::Bool _1ad9b1957_isInstancedStruct(jule::Ptr<_1ad718857_StructIns> _445822_s);
inline jule::Bool _1ad9b1c54_isPtrArithmeticCompatible(jule::Ptr<_1ad985b90_Data>* _446235_l, jule::Ptr<_1ad985b90_Data>* _446250_r);
inline void _1ad9b2260_applyRuntimeToStr(jule::Ptr<_1ad90ed6c_sema>* _448327_s, jule::Ptr<_1ad9b8596_TypeKind>* _448342_from, jule::Ptr<_1ad9b8596_TypeKind>* _448364_to, jule::Ptr<_1ad6ceb70_Token>* _44847_token, jule::Ptr<_1ad8ced70_ReferenceStack> _448433_refers);
inline void _1ad9b276b_applyCastKindModel(jule::Ptr<_1ad90ed6c_sema>* _449828_s, jule::Ptr<_1ad985b90_Data>* _449843_d, jule::Ptr<_1ad9b8596_TypeKind>* _449858_t, jule::Ptr<_1ad6ceb70_Token>* _44997_token, jule::Ptr<_1ad8ced70_ReferenceStack> _449933_refers);
inline void _1ad9b2c77_applyCastKind(jule::Ptr<_1ad90ed6c_sema>* _450923_s, jule::Ptr<_1ad985b90_Data>* _450938_d, jule::Ptr<_1ad9b8596_TypeKind>* _450953_t, jule::Ptr<_1ad6ceb70_Token>* _45107_token, jule::Ptr<_1ad8ced70_ReferenceStack> _451033_refers);
inline jule::Ptr<_1ad985b90_Data> _1ad9b2e86_buildVoidData(void);
inline jule::Str _1ad9b3470_checkDataForIntegerIndexing(jule::Ptr<_1ad90ed6c_sema>* _452137_s, jule::Ptr<_1ad985b90_Data>* _452152_d, jule::Ptr<_1ad6ceb70_Token>* _45227_token, jule::Ptr<_1ad8ced70_ReferenceStack> _452233_refers);
inline void _1ad9b397b_applyCastModelByEnum(jule::Ptr<_1ad90ed6c_sema>* _454730_s, jule::Ptr<_1ad985b90_Data>* _454745_d, jule::Ptr<_1ad805658_Enum> _454759_e, jule::Ptr<_1ad6ceb70_Token>* _45487_token, jule::Ptr<_1ad8ced70_ReferenceStack> _454833_refers);
inline void _1ad9b3e98_castConstByType(jule::Str* _455521_t, jule::Ptr<_1ad985b90_Data>* _455534_d);
inline void _1ad9b4174_updateModelToGenericIns(jule::Any* _458933_m, jule::Ptr<_1ad7ea84b_FnIns>* _458952_f);
inline jule::Bool _1ad9b44e8_pushSubIdentFromExpr(jule::Any _460029_expr, jule::Ptr<_1ad6e5a87_SubIdentTypeDecl>* _460055_t);
inline jule::Str _1ad9b47b2_constoa(jule::Ptr<_1ad778ec2_Const>* _462313_c);
inline jule::Ptr<_1ad985b90_Data> _1ad9b4d56_evalEnumStatic(jule::Ptr<_1ad90ed6c_sema>* _463424_s, jule::Ptr<_1ad805658_Enum>* _463439_enm, jule::Ptr<_1ad804b0d_EnumItem>* _463456_item, jule::Ptr<_1ad6ceb70_Token>* _46357_token, jule::Ptr<_1ad8ced70_ReferenceStack> _463533_refers);
inline jule::Ptr<_1ad7db155_StructLitExprModel> _1ad9b5120_isLitBased(jule::Any* _465220_m);
inline void _1ad9b540b_makeImplicitDeref(jule::Ptr<_1ad985b90_Data>* _466927_d, jule::Ptr<_1ad6ceb70_Token> _466941_baseToken);
inline void _1be79d4e1_updateRefer(jule::Ptr<_1ad8ced70_ReferenceStack> _468023_ref, jule::Ptr<_1ad7ea84b_FnIns>* _468046_old, jule::Ptr<_1ad7ea84b_FnIns>* _468059_new);
inline void _1ad9b5a8d_makeVariadic(jule::Ptr<_1ad985b90_Data>* _468822_d, jule::Ptr<_1ad9b8596_TypeKind> _468836_elem);
inline jule::Bool _1ad9b5ebc_isVarCaptured(jule::Ptr<_1ad8b860b_scopeChecker> _470218_r, jule::Ptr<_1ad8b860b_scopeChecker> _470240_s, jule::Ptr<_1ad933a83_Var> _470258_v);
inline jule::Bool _1ad9d4749_kindUsesGenerics(jule::Ptr<_1ad9b8596_TypeKind>* _173426_k, jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>* _173441_generics);
inline jule::Bool _1ad9d4b12_hasDirective(jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _174422_directives, jule::Str _174453_tag);
inline jule::Bool _1ad9d4dcb_canGetPtr(jule::Ptr<_1ad985b90_Data>* _175319_d);
inline jule::Bool _1ad9d521c_isValidForSptrType(jule::Ptr<_1ad9b8596_TypeKind>* _175628_t);
inline jule::Bool _1ad9d54a3_isValidForRef(jule::Ptr<_1ad9b8596_TypeKind>* _176523_t);
inline jule::Bool _1ad9d576c_isBuiltinStrConvertable(jule::Ptr<_1ad9b8596_TypeKind>* _176833_t);
inline jule::Ptr<_1ad9c16ae_Prim> _1ad9d5a36_buildPrimType(jule::Str _177218_kind);
inline void _1ad9d6394_applyImplicitCast(jule::Ptr<_1ad90ed6c_sema>* _180027_s, jule::Ptr<_1ad9b8596_TypeKind>* _180042_dest, jule::Ptr<_1ad985b90_Data>* _180064_d, jule::Ptr<_1ad6ceb70_Token>* _18017_token, jule::Ptr<_1ad8ced70_ReferenceStack> _180133_refers);
inline jule::Bool _1ad9d665d_validTypeForXof(jule::Ptr<_1ad9b8596_TypeKind>* _182925_t);
inline __jule_tuple_x_1ad7eda91_SymTab__jule_tuple_s_1dd356476_Log _1ad9d9661_buildSymbols(jule::Ptr<_1ad6e325a_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1ad8d5b89_symBuilder> _1667_owner);
inline void _1ad9d9991_collectImplicitImports(jule::Ptr<_1ad90ed6c_sema>* _3132_s, jule::Ptr<_1ad7eda91_SymTab>* _3147_file);
inline __jule_tuple_x_1ad8e446c_Package__jule_tuple_s_1dd356476_Log _1ad9dec2c_analyzePackage(jule::Slice<jule::Ptr<_1ad6e325a_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I64* _4570_flags);
inline __jule_tuple_x_1ad8e446c_Package__jule_tuple_s_1dd356476_Log _1ad9e01d3_AnalyzePackage(jule::Slice<jule::Ptr<_1ad6e325a_AST>> _9523_files, jule::Trait _9547_importer, jule::I64 _9567_flags);
inline jule::Ptr<_1ad7ea84b_FnIns> _1ada9d45b_findBuiltinFunc(jule::Str* _2021_ident);
inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ada9d736_primTypeAlias(jule::Ptr<_1ad9b8596_TypeKind>* _5723_k);
inline jule::Ptr<_1ad933a83_Var> _1adaa20db_findBuiltinVar(jule::Str* _8520_ident);
inline jule::Ptr<_1ad9b77a4_TypeAlias> _1adaa242c_findBuiltinTypeAlias(jule::Str _13325_ident);
inline jule::Any _1adaa26b3_findBuiltinDef(jule::Str* _18820_ident);
inline jule::Any _1adaa297c_findBuiltinDefStdDebug(jule::Str* _20428_ident);
inline jule::Any _1adaa2c46_findBuiltinDefStdMem(jule::Str* _21726_ident);
inline jule::Any _1adaa3120_findBuiltinDefStdComptime(jule::Str* _23331_ident);
inline jule::Any _1adaa3362_findBuiltinDefStdJuleIntegrated(jule::Str* _25837_ident);
inline jule::Any _1adaa36d6_findPackageBuiltinDef(jule::Str* _27327_linkPath, jule::Str* _27343_ident);
inline jule::Ptr<_1ad985b90_Data> _1adaa3a5a_builtinCallerError(jule::Ptr<_1ad9878b7_eval>* _28828_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _28843_fc);
inline jule::Ptr<_1ad985b90_Data> _1adaa3e89_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _31926_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _31941_fc, jule::Ptr<_1ad985b90_Data>* );
inline jule::Ptr<_1ad985b90_Data> _1adaa43b8_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _34628_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _34643_fc, jule::Ptr<_1ad985b90_Data>* _34670_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa47e7_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _35826_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _35841_fc, jule::Ptr<_1ad985b90_Data>* _35868_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa4c26_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _42028_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _42043_fc, jule::Ptr<_1ad985b90_Data>* );
inline jule::Ptr<_1ad985b90_Data> _1adaa5386_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _44627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _44642_fc, jule::Ptr<_1ad985b90_Data>* _44669_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa56a5_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _49729_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _49744_fc, jule::Ptr<_1ad985b90_Data>* _49771_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa5b8e_callerCopySlice(jule::Ptr<_1ad985b90_Data>* _61725_dest, jule::Ptr<_1ad9878b7_eval>* _61743_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _61758_fc, jule::Ptr<_1ad985b90_Data>* _61785_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa60bd_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _65127_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _65142_fc, jule::Ptr<_1ad985b90_Data>* _65169_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa6442_callerLenSlice(jule::Ptr<_1ad985b90_Data>* _67624_expr, jule::Ptr<_1ad985b90_Data>* _67642_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa67b6_callerLenMap(jule::Ptr<_1ad985b90_Data>* _68422_expr, jule::Ptr<_1ad985b90_Data>* _68440_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa6b3a_callerLenArr(jule::Ptr<_1ad985b90_Data>* _69222_expr, jule::Ptr<_1ad985b90_Data>* _69240_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa6eae_callerLenStr(jule::Ptr<_1ad985b90_Data>* _69922_expr, jule::Ptr<_1ad985b90_Data>* _69940_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa7333_callerLenComptime(jule::Ptr<_1ad985b90_Data>* _71227_d, jule::I64 _71237_n);
inline jule::Ptr<_1ad985b90_Data> _1adaa7762_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _71926_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _71941_fc, jule::Ptr<_1ad985b90_Data>* _71968_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa7ad6_callerCapSlice(jule::Ptr<_1ad985b90_Data>* _75924_expr, jule::Ptr<_1ad985b90_Data>* _75942_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa8015_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _76726_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _76741_fc, jule::Ptr<_1ad985b90_Data>* _76768_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa84ee_callerDeleteMap(jule::Ptr<_1ad9878b7_eval>* _79025_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _79040_fc, jule::Ptr<_1ad985b90_Data>* _79067_expr, jule::Ptr<_1ad985b90_Data>* _79085_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa892d_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _81929_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _81944_fc, jule::Ptr<_1ad985b90_Data>* _81971_d);
inline jule::Ptr<_1ad985b90_Data> _1adaa8d5c_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _84240_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _84255_fc, jule::Ptr<_1ad985b90_Data>* );
inline jule::Ptr<_1ad985b90_Data> _1adaa928b_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _87841_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _87856_fc, jule::Ptr<_1ad985b90_Data>* );
inline jule::Ptr<_1ad985b90_Data> _1adaa990c_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _89838_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _89853_fc, jule::Ptr<_1ad985b90_Data>* );
inline jule::Ptr<_1ad985b90_Data> _1adaa9d3b_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _91038_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _91053_fc, jule::Ptr<_1ad985b90_Data>* );
inline jule::Ptr<_1ad985b90_Data> _1adaaa26a_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _92339_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _92354_fc, jule::Ptr<_1ad985b90_Data>* );
inline jule::Ptr<_1ad985b90_Data> _1adaaa699_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _93643_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _93658_fc, jule::Ptr<_1ad985b90_Data>* );
inline jule::Ptr<_1ad985b90_Data> _1adaaaac8_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _99635_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _99650_fc, jule::Ptr<_1ad985b90_Data>* );
inline jule::Ptr<_1ad985b90_Data> _1adaab007_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _102136_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _102151_fc, jule::Ptr<_1ad985b90_Data>* );
inline jule::Ptr<_1ad985b90_Data> _1adaab436_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _104633_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _104648_fc, jule::Ptr<_1ad985b90_Data>* );
inline jule::Ptr<_1ad985b90_Data> _1adaab865_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _106944_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _106959_fc, jule::Ptr<_1ad985b90_Data>* _106986_d);
inline jule::Ptr<_1ad985b90_Data> _1adaabc94_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _112034_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _112049_fc, jule::Ptr<_1ad985b90_Data>* _112076_d);
inline jule::Ptr<_1ad985b90_Data> _1adaac1c3_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _112936_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _112951_fc, jule::Ptr<_1ad985b90_Data>* _112978_d);
inline jule::Ptr<_1bb01b25c_FileInfo> _1bb0651eb_ParseFile(jule::Ptr<_1ad6d5527_Fileset> _2318_f);
inline __jule_tuple_x_1ad6e325a_AST__jule_tuple_s_1dd356476_Log _1bb0657c3_parseFileset(jule::Ptr<_1ad6d5527_Fileset> _5521_f);
inline jule::Ptr<_1ad7051d4_ScopeTree> _1bb066164_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1bb0664d8_isSt(jule::Ptr<_1ad6ceb70_Token> _149_current, jule::Ptr<_1ad6ceb70_Token> _1433_prev);
inline jule::Bool _1bb06685c_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _2026_tokens, jule::I64* _2052_i);
inline __jule_tuple_int__jule_tuple_bool _1bb066c25_nextStPos(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _3315_tokens, jule::I64 _3340_start);
inline __jule_tuple_sx_1ad6ceb70_Token__jule_tuple_bool _1bb067099_skipSt(jule::I64* _9516_i, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _9528_tokens);
inline jule::Slice<jule::Ptr<_1bb0673c9_stmt>> _1bb067781_splitStmts(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _11620_tokens);
inline jule::Bool _1bb080cc7_isTypeOp(jule::U64* _87114_id);
inline jule::Bool _1bb0810d5_isTypeRange(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _87821_tokens);
inline jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _1bb08139e_getBlockExpr(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _91122_tokens);
inline __jule_tuple_sx_1ad6ceb70_Token__jule_tuple_sx_1ad6ceb70_Token _1bb081767_splitDelim(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _94320_tokens, jule::U64 _94345_delim);
inline jule::I64 _1bb081a31_findLowestPrecOp(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _98222_tokens);
inline jule::Ptr<_1ad6ead12_IdentExpr> _1bb081cea_buildIdentExpr(jule::Ptr<_1ad6ceb70_Token>* _104724_token);
inline __jule_tuple_sx_1ad6ceb70_Token__jule_tuple_int _1bb0820b4_getRangeExprTokens(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _105528_tokens);
inline jule::Bool _1bb08248d_isAnonFnHead(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _107818_tokens);
inline jule::Bool _1bb08313c_checkAssignTokens(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _1623_tokens);
inline _1dd356476_Log _1bb08410a_makeErr(jule::I64 _1212_row, jule::I64 _1222_col, jule::Ptr<_1ad6d5527_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args);
inline jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _1bb084616_range(jule::I64* _3015_i, jule::U64 _3023_open, jule::U64 _3040_close, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _3063_tokens);
inline __jule_tuple_sx_1ad6ceb70_Token__jule_tuple_sx_1ad6ceb70_Token _1bb0848d0_rangeLast(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _6019_tokens);
inline __jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log _1bb084d86_parts(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _9815_tokens, jule::U64 _9840_id, jule::Bool _9855_exprMust);
inline jule::U64 _1bb08511c_getCloseOfBrace(jule::U64 _12820_left);
inline _1dd356476_Log _1bb08554b_compilerErr(jule::Ptr<_1ad6ceb70_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args);
inline void _1bb0858e2_pushSuggestion(_1dd356476_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args);
inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb09686a_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1adb42423_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1adb3c3eb_checkArch(jule::Str _2814_arg);
inline jule::Bool _1adb3c5c7_isPassFileAnnotation(jule::Str _5029_p);
inline void _1adb5c9c1_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1adb5cc46_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1adb5d032_initVars(jule::Slice<jule::Str>* _5518_vars, _1adb5c6a2_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1bb09a84c_readBuff(jule::Str _1713_path);
inline _1dd356476_Log _1bb09ac6a_flatCompilerErr(jule::Str _2820_text);
inline jule::Ptr<_1ad7e778d_Fn> _1adaacb41_RuntimeFindFn(jule::Ptr<_1ad8e1bea_ImportInfo>* _1823_runtime, jule::Str _1851_ident);
inline jule::Ptr<_1ad7159ec_Struct> _1adaad23a_RuntimeFindStruct(jule::Ptr<_1ad8e1bea_ImportInfo>* _3327_runtime, jule::Str _3355_ident);
inline void _1bb0a0687_pushPasses(jule::Ptr<_1ad8e446c_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes);
inline jule::Slice<jule::Str> _1bb0a0a50_getAllUniquePasses(jule::Ptr<_1ad8e446c_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>> _14053_uses);
inline _1adb5c6a2_CompileInfo _1bb0a0c5e_buildCompileInfo(void);
inline void _1bb0a1017_pushRuntimeToAST(jule::Ptr<_1ad6e325a_AST>* _17926_f);
inline void _1bb0a1776_IterPackages(jule::Ptr<_1bb09dcd4_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1ad8e446c_Package>*> _731_f);
inline void _1bb0a19da_IterFiles(jule::Ptr<_1ad8e446c_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1ad7eda91_SymTab>*> _1640_f);
inline void _1bb0a1d81_iterTraitInheritMethods(jule::Ptr<_1ad802ea2_Trait>* _2233_base, jule::Ptr<_1ad802ea2_Trait>* _2258_t, jule::Fn<void,jule::Ptr<_1ad7e778d_Fn>*> _2275_f);
inline void _1bb0a229e_iterTraitInheritMethods1(jule::Ptr<_1ad802ea2_Trait>* _3134_base, jule::Ptr<_1ad802ea2_Trait>* _3159_t, jule::Fn<void,jule::Ptr<_1ad7e778d_Fn>*> _3176_f);
inline void _1bb0a2557_IterTraitMethods(jule::Ptr<_1ad802ea2_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1ad7e778d_Fn>*> _3943_f);
inline jule::Bool _1bb0a4746_IsForwarded(jule::Ptr<_1ad8b136d_Scope>* _1217_s);
inline jule::Bool _1bb0a4922_IsExprComesFromBind(jule::Ptr<_1ad985b90_Data>* _2825_d);
inline jule::Bool _1bb0a4bdb_IsAny(jule::Ptr<_1ad9b8596_TypeKind>* _4015_t);
inline jule::Bool _1bb0a502c_IsClosure(jule::Ptr<_1ad7dd1bd_AnonFnExprModel>* _4915_m);
inline jule::Bool _1bb0a52b3_IsOpMethod(jule::Ptr<_1ad7e778d_Fn>* _5216_m);
inline jule::Bool _1bb0a5637_IsTraitMethod(jule::Ptr<_1ad718857_StructIns>* _6823_owner, jule::Ptr<_1ad7ea84b_FnIns>* _6849_f);
inline jule::Bool _1bb0a59ab_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p);
inline jule::Ptr<_1ad6e45d0_Directive> _1bb0a6847_FindDirective(jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1bb0a6c10_HasDirective(jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::Bool _1bb0a7084_ContainsTraitMethod(jule::Ptr<_1ad802ea2_Trait>* _2629_t, jule::Str* _2647_ident);
inline jule::I64 _1bb0a7749_FindTraitTypeOffsetS(jule::Ptr<_1ad802ea2_Trait> _3925_t, jule::Ptr<_1ad718857_StructIns> _3946_s);
inline jule::I64 _1bb0a7abd_FindTraitTypeOffset(jule::Ptr<_1ad802ea2_Trait> _6224_t, jule::Ptr<_1ad9b8596_TypeKind> _6245_k);
inline jule::Ptr<_1ad7ea84b_FnIns> _1bb0a7eec_FindOperator(jule::Ptr<_1ad718857_StructIns>* _7822_s, jule::U64 _7843_op, jule::Bool _7858_unary);
inline jule::Ptr<_1ad7ea84b_FnIns> _1bb0a8371_FindFnGenericInstance(jule::Ptr<_1ad7e778d_Fn>* _14731_f, jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _14745_generics);
inline jule::Ptr<_1ad718857_StructIns> _1bb0a8805_FindStructGenericInstance(jule::Ptr<_1ad7159ec_Struct>* _16335_s, jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _16353_generics);
inline jule::Bool _1c02c2740_isOrdered(jule::Ptr<_1ad933a83_Var>* _1418_t, jule::Slice<jule::Ptr<_1ad933a83_Var>> _1425_s);
inline jule::Bool _1c02c84b0_isOrdered(jule::Ptr<_1ad7159ec_Struct>* _1418_t, jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _1425_s);
inline void _1c02bed69_order(jule::Slice<jule::Ptr<_1ad933a83_Var>> _3717_s);
inline void _1c02c094c_order(jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _3717_s);
inline void _1bbedea15_EliminateDefines(jule::Ptr<_1bb09dcd4_IR>* _39126_ir);
inline void _1bbee38c6_eliminateDeadCodeOfScope(jule::Ptr<_1ad8b136d_Scope> _21833_s);
inline void _1bbee3b4b_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ad7e778d_Fn>>* _23033_funcs);
inline void _1bbee3d7c_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1ad7159ec_Struct>>* _23937_structs);
inline void _1bbee4135_eliminateFunctionsScopePackage(jule::Ptr<_1ad8e446c_Package>* _24740_pkg);
inline void _1bbee4333_eliminateScopePackage(jule::Ptr<_1ad8e446c_Package>* _25431_pkg);
inline void _1bbee4564_EliminateScopes(jule::Ptr<_1bb09dcd4_IR>* _25925_ir);
inline jule::Uintptr _1bbd92dd5_typeData(jule::Any* _914_m);
inline jule::Bool _1bbd93237_equalConst(jule::Ptr<_1ad778ec2_Const> _1315_l, jule::Ptr<_1ad778ec2_Const> _1336_r);
inline jule::Bool _1bbd935ab_equalCasting(jule::Ptr<_1ad7db9d5_CastingExprModel> _3217_l, jule::Ptr<_1ad7db9d5_CastingExprModel> _3245_r);
inline jule::Bool _1bbd93974_equalUnary(jule::Ptr<_1ad7da781_UnaryExprModel> _3915_l, jule::Ptr<_1ad7da781_UnaryExprModel> _3941_r);
inline jule::Bool _1bbd93ce8_equalIndexing(jule::Ptr<_1ad7dcc17_IndexingExprModel> _4618_l, jule::Ptr<_1ad7dcc17_IndexingExprModel> _4647_r);
inline jule::Bool _1bbd9416c_equalBinary(jule::Ptr<_1ad7da3a7_BinaryExprModel> _5116_l, jule::Ptr<_1ad7da3a7_BinaryExprModel> _5143_r);
inline jule::Bool _1bbd944e1_equalModels(jule::Any _6216_l, jule::Any _6236_r);
inline void _1bbd99d98_possibleNilRemove(jule::Ptr<_1bbd98db9_nils>* _7227_n, jule::Any _7237_m);
inline jule::Bool _1bbd9a261_isGuaranteedNonNilExpr(jule::Ptr<_1bbd98db9_nils>* _7832_n, jule::Any _7842_m);
inline jule::Bool _1bbd9a52a_isNilValidType(jule::Ptr<_1ad9b8596_TypeKind> _8623_t);
inline jule::Uintptr _1bbd9a86b_getNilVar(jule::Any _8814_m);
inline jule::Bool _1bbda1586_isConstantValidConditionalCase(jule::Ptr<_1ad8b178b_If>* _65936_i);
inline jule::Bool _1bbda1894_isUnreachableExpr(jule::Any* _66823_expr);
inline jule::Bool _1bbda1b5d_isConstantValidMatchCase(jule::Ptr<_1ad8b65c6_Case>* _68330_case);
inline jule::Bool _1bbda1e9e_isUnreachableConditionalCase(jule::Ptr<_1ad8b178b_If>* _69234_i);
inline jule::Bool _1bbda2235_isUnreachableMatchCase(jule::Ptr<_1ad8b65c6_Case>* _69628_case);
inline __jule_tuple_bool__jule_tuple_u64 _1bbda73e4_checkForBitShiftOpt(jule::Ptr<_1ad7d9dac_OperandExprModel>* _58125_l, jule::Ptr<_1ad7d9dac_OperandExprModel>* _58154_r);
inline jule::Bool _1bbda77ac_areSameLvalueExprModel(jule::Any* _59828_l, jule::Any* _59849_r);
inline void _1bbda9869_possibleDynamicRemove(jule::Ptr<_1bbda87d0_dynamic>* _7331_d, jule::Any _7344_m);
inline jule::Bool _1bbda9b77_isDynamicValidType(jule::Ptr<_1ad9b8596_TypeKind> _7927_t);
inline jule::Ptr<_1ad9b8596_TypeKind> _1bbdaa0a6_isTypeGuaranteedDynamicData(jule::Ptr<_1bbda87d0_dynamic>* _8137_dy, jule::Ptr<_1ad9b8596_TypeKind> _8155_t, jule::Any _8179_m);
inline jule::Uintptr _1bbdaa3e7_getDynamicVar(jule::Any _10618_m);
inline jule::Bool _1bbdadc58_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1bbdae121_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr);
inline jule::Bool _1bbdae495_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2);
inline void _1bbdae7c5_possibleBoundaryRemove(jule::Ptr<_1bbdacbe1_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1bbdaea8e_isBoundaryRiskyType(jule::Ptr<_1ad9b8596_TypeKind> _13628_t);
inline jule::Bool _1bbdaed58_isBoundaryValidType(jule::Ptr<_1ad9b8596_TypeKind> _14128_t);
inline jule::Uintptr _1bbdb0122_getBoundaryVar(jule::Any _14319_m);
inline void _1bbdb319c_PushOptLevel(jule::I64 _3217_level);
inline void _1bbee7b50_detectEnabled(void);
inline jule::U64 _1bc0c4116_unix(void);
inline jule::Bool _1bc0030cd_isCopyOptimizable(jule::Ptr<_1ad985b90_Data>* _115523_expr);
inline jule::Bool _1bc003496_isIterCopyOptimizable(jule::Ptr<_1ad985b90_Data>* _116627_expr, jule::Ptr<_1ad933a83_Var>* _116647_v);
inline jule::Bool _1bc0038c5_captureVarHandling(jule::Ptr<_1bc0cdd35_ObjectCoder>* _117328_oc, jule::Ptr<_1ad7dd1bd_AnonFnExprModel>* _117351_m, jule::Ptr<_1ad933a83_Var>* _117383_v);
inline jule::Str _1bc015b4b_decomposeCommonEsq(jule::U8 _190823_b);
inline jule::Str _1bc015e59_sbtoa(jule::U8 _193510_b);
inline void _1bc016245_cstrBytes(_1dd0b6912_Builder* _195519_s, jule::Str _195540_ctx);
inline void _1bc016575_cstrLit(_1dd0b6912_Builder* _196117_s, jule::Str _196138_ctx);
inline void _1bc01691b_ftoa(_1dd0b6912_Builder* _196714_s, jule::F64 _196735_f, jule::I64 _196743_bitsize);
inline void _1bc016c07_itoa(_1dd0b6912_Builder* _198514_s, jule::I64 _198535_x);
inline void _1bc016ee3_utoa(_1dd0b6912_Builder* _200214_s, jule::U64 _200235_x);
inline void _1bc017642_operatorOverloadingBinary(_1dd0b6912_Builder* _201635_buf, jule::Ptr<_1ad718857_StructIns>* _201663_s, jule::Str* _201685_l, jule::Str* _20173_r, jule::U64 _201711_op, jule::Str _201726_kind);
inline jule::Slice<jule::U8> _1bc0db67d_concatAllParts(jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _137619_parts);
inline jule::Bool _1bc0db98b_isHeadDecl(jule::Ptr<_1ad7e778d_Fn>* _139220_m);
inline jule::Bool _1bc0dbc55_defaultEq(jule::Ptr<_1ad718857_StructIns>* _140515_s);
inline jule::Bool _1bc0eab43_ableToInit(jule::Ptr<_1ad9b8596_TypeKind>* _44920_t);
inline jule::Bool _1bc0eae1d_shouldInitialized(jule::Ptr<_1ad9b8596_TypeKind>* _45627_t);
inline void _1dd46ea89_printErrorMessage(jule::Str _3022_msg);
inline void _1dd46ed0e_help(jule::Slice<jule::Str>* _3510_args);
inline void _1dd470040_version(jule::Slice<jule::Str>* _6313_args);
inline void _1dd47024e_toolDistos(void);
inline void _1dd4703b4_toolDistarch(void);
inline void _1dd4705b2_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1dd4707e3_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1dd470b34_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1dd470d76_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1dd47101e_showInfo(void);
void entry_point(void);
inline void _1bc167440_init(void);
inline jule::Ptr<_1dbd064aa_File> _1bc167709_openOutput(jule::Str* _3016_path);
inline void _1bc1678a2_clearObjects(void);
inline void _1bc167bb0_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd);
inline jule::Bool _1bc167e79_isCppSourceFile(jule::Str _8620_path);
inline void _1bc1681aa_pushCompCmdClang(_1dd0b6912_Builder* _9426_cmd);
inline void _1bc1683db_pushCompCmdGcc(_1dd0b6912_Builder* _12024_cmd);
inline __jule_tuple_str__jule_tuple_str _1bc168870_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1bb09dcd4_IR>* _14636_ir);
inline jule::Str _1bc168a07_getCompilePath(void);
inline void _1bc168c38_applyTargetIndependentOptimizations(jule::Ptr<_1bb09dcd4_IR>* _19245_ir);
inline void _1bc168dd1_checkCompilerFlag(void);
inline void _1bc1690e0_checkTargetArch(jule::Str _21420_arch);
inline void _1bc169321_checkTargetOs(jule::Str _22218_os);
inline void _1bc169552_checkTargetFlag(jule::Str* _23021_target);
inline void _1bc169783_checkOptFlag(jule::Str* _25318_opt);
inline void _1bc169b4b_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1bc169d16_checkFlags(jule::Slice<jule::Str>* _27916_args);
inline void _1bc16a025_setupSemaFlags(jule::I64* _32424_flags);
inline jule::Ptr<_1bb09dcd4_IR> _1bc16a2de_buildIr(jule::Slice<jule::Str>* _33013_args);
inline void _1bc16a520_compileCommand(jule::Slice<jule::Str>* _37024_args);


struct _1ad87d901_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1ad87cc85_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad985b90_Data>* _1426_d, jule::I64 _1436_i);
	void(*_1ad87d0e8_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad933a83_Var>* _1526_keyA, jule::Ptr<_1ad933a83_Var>* _1543_keyB);
	void(*_1ad87d516_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ad933a83_Var>* _1633_keyA, jule::Ptr<_1ad933a83_Var>* _1650_keyB);
	jule::I64(*_1ad87d79c_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1ad8ddbe7_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1ad8dca81_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1ad8dcc5c_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1ad8dd09d_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1ad8e1bea_ImportInfo>(*_1ad8dd3de_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1ad6e325a_AST__jule_tuple_s_1dd356476_Log(*_1ad8dd7da_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod);
	void(*_1ad8dda93_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad8e1bea_ImportInfo> _4128__0);
};

struct _1ad9b80e0_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1ad9b7b4a_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1ad9b7e8b_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other);
};

struct _1ad9d897e_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1ad8e1bea_ImportInfo>(*_1ad9d6c68_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _929_selector);
	jule::Ptr<_1ad933a83_Var>(*_1ad9d7164_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1ad9b77a4_TypeAlias>(*_1ad9d7560_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1ad7159ec_Struct>(*_1ad9d795b_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1ad7e778d_Fn>(*_1ad9d7d57_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1ad802ea2_Trait>(*_1ad9d8198_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1ad805658_Enum>(*_1ad9d84d9_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1ad806d63_TypeEnum>(*_1ad9d882a_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1bc160416_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1bc12e5b1_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1bc12e704_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1bc12e89c_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1bc1602c3_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad885c7c_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad888eb1_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad88bc3e_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8905a0_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad891e0e_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad89c6de_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8a0c86_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb09b254_Importer>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad718857_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7ea84b_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad802ea2_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad805658_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad806d63_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad87db21_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8844d9_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad88770c_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad88a930_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad88d746_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad89387d_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad899983_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad89e15d_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8a3074_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad9b8596_TypeKind>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad9c16ae_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad9c51da_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad9c5bad_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad9c67a2_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad9c7352_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad9c7ece_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad9c89a2_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc0dce98_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7eda91_SymTab>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b860b_scopeChecker>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8e1bea_ImportInfo>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8e446c_Package>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad90ed6c_sema>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0d47d20_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0d4b63c_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0d4ed49_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0d5359a_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c0d56ca7_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad933a83_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad9b77a4_TypeAlias>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7159ec_Struct>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e778d_Fn>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad712ac6_Field>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad778ec2_Const>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad804b0d_EnumItem>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e5cb9_Param>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b3dba_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b136d_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e3602_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad985b90_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e4614_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e237b_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e0d6e_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e1248_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e19eb_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e3228_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e2d4e_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e4911_FreeExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7dc387_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b1ea6_Conditional>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b22a3_InfIter>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7094a2_WhileKind>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b2759_WhileIter>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad709da9_RangeKind>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b31a5_RangeIter>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b353a_ContSt>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b452a_GotoSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b4904_Postfix>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b4daa_Assign>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6ead12_IdentExpr>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7dcc17_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b5361_MultiAssign>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b5a9d_Match>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b6cbe_FallSt>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b3914_BreakSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad8b7165_RetSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7051d4_ScopeTree>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad70802d_VarDecl>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad70bbd0_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e94e7_Expr>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad70b493_Conditional>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad708b77_Iter>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad70a65c_ContSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad702797_LabelSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad702b71_GotoSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad703b61_AssignSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad70c9a0_MatchCase>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad702e6d_FallSt>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad70a283_BreakSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad708407_RetSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e9dbb_UseExpr>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad711a92_Impl>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad710be5_StructDecl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad706d73_FnDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad711432_TraitDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad70e09a_EnumDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad710035_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e747e_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e65e3_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e6bdc_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e625d_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e7bcc_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e68e0_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e57bd_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6eb97d_VariadicExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7dc761_SliceExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6edc16_FieldExprPair>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad700322_KeyValPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6ea0db_TupleExpr>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e0995_TupleExprModel>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6ed221_FnCallExpr>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e4290_RuneExprModel>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e0698_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6ec60a_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e5a87_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6eb5a4_UnaryExpr>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e51b3_TypeDecl>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6ec231_NamespaceExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e5e61_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7de004_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7db9d5_CastingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad700a4d_SliceExpr>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7db155_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e02be_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7de587_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7dee28_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7dd971_MapExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7dd1bd_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6e97b1_RangeExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6ea482_LitExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6ea85b_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7014aa_IndexingExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad701b1a_SlicingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6ebd57_CastExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6ee541_StructLit>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6ee9e7_BraceLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad6ecab1_BinaryExpr>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7da781_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7da3a7_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7db452_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e1622_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e1ea2_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e2678_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e2975_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e38ee_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7e40a3_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd9506e_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd97857_StrRuneIter>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd96548_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd970a4_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd9747d_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd952e4_SwapExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd956bd_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd95eb5_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd96845_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd97b54_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd95a42_RefExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad7dacae_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd97e51_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bbd96bca_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1bda49c99_1bd9dd589(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad985b90_Data>* _1426_d, jule::I64 _1436_i) {
	_1ad886c7d_index(_self_.as<_1ad885c7c_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bda49c99_1bda0bd5a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad985b90_Data>* _1426_d, jule::I64 _1436_i) {
	_1ad889ea1_index(_self_.as<_1ad888eb1_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bda49c99_1bd9e48c0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad985b90_Data>* _1426_d, jule::I64 _1436_i) {
	_1ad88ccb7_index(_self_.as<_1ad88bc3e_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bda49c99_1bd9ea3cb(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad985b90_Data>* _1426_d, jule::I64 _1436_i) {
	_1ad891480_index(_self_.as<_1ad8905a0_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bda49c99_1bda08582(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad985b90_Data>* _1426_d, jule::I64 _1436_i) {
	_1ad892dee_index(_self_.as<_1ad891e0e_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bda49c99_1bda28c01(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad985b90_Data>* _1426_d, jule::I64 _1436_i) {
	_1ad89d6ce_index(_self_.as<_1ad89c6de_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bda49c99_1bda22090(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad985b90_Data>* _1426_d, jule::I64 _1436_i) {
	_1ad8a1d97_index(_self_.as<_1ad8a0c86_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bda4a33d_1bd9dd589(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad933a83_Var>* _1526_keyA, jule::Ptr<_1ad933a83_Var>* _1543_keyB) {
	_1ad88691a_ready(_self_.as<_1ad885c7c_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bda4a33d_1bda0bd5a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad933a83_Var>* _1526_keyA, jule::Ptr<_1ad933a83_Var>* _1543_keyB) {
	_1ad889b3d_ready(_self_.as<_1ad888eb1_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bda4a33d_1bd9e48c0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad933a83_Var>* _1526_keyA, jule::Ptr<_1ad933a83_Var>* _1543_keyB) {
	_1ad88c954_ready(_self_.as<_1ad88bc3e_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bda4a33d_1bd9ea3cb(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad933a83_Var>* _1526_keyA, jule::Ptr<_1ad933a83_Var>* _1543_keyB) {
	_1ad89111c_ready(_self_.as<_1ad8905a0_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bda4a33d_1bda08582(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad933a83_Var>* _1526_keyA, jule::Ptr<_1ad933a83_Var>* _1543_keyB) {
	_1ad892a8b_ready(_self_.as<_1ad891e0e_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bda4a33d_1bda28c01(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad933a83_Var>* _1526_keyA, jule::Ptr<_1ad933a83_Var>* _1543_keyB) {
	_1ad89d36b_ready(_self_.as<_1ad89c6de_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bda4a33d_1bda22090(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad933a83_Var>* _1526_keyA, jule::Ptr<_1ad933a83_Var>* _1543_keyB) {
	_1ad8a1a34_ready(_self_.as<_1ad8a0c86_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bda4aa14_1bd9dd589(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ad933a83_Var>* _1633_keyA, jule::Ptr<_1ad933a83_Var>* _1650_keyB) {
	_1ad88719b_step(_self_.as<_1ad885c7c_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bda4aa14_1bda0bd5a(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ad933a83_Var>* _1633_keyA, jule::Ptr<_1ad933a83_Var>* _1650_keyB) {
	_1ad88a3be_step(_self_.as<_1ad888eb1_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bda4aa14_1bd9e48c0(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ad933a83_Var>* _1633_keyA, jule::Ptr<_1ad933a83_Var>* _1650_keyB) {
	_1ad88d1d5_step(_self_.as<_1ad88bc3e_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bda4aa14_1bd9ea3cb(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ad933a83_Var>* _1633_keyA, jule::Ptr<_1ad933a83_Var>* _1650_keyB) {
	_1ad89189d_step(_self_.as<_1ad8905a0_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bda4aa14_1bda08582(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ad933a83_Var>* _1633_keyA, jule::Ptr<_1ad933a83_Var>* _1650_keyB) {
	_1ad89331c_step(_self_.as<_1ad891e0e_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bda4aa14_1bda28c01(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ad933a83_Var>* _1633_keyA, jule::Ptr<_1ad933a83_Var>* _1650_keyB) {
	_1ad89daec_step(_self_.as<_1ad89c6de_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bda4aa14_1bda22090(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1ad933a83_Var>* _1633_keyA, jule::Ptr<_1ad933a83_Var>* _1650_keyB) {
	_1ad8a22b5_step(_self_.as<_1ad8a0c86_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I64 __jule_trait_method_1bda4b1eb_1bd9dd589(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad887432_len(_self_.as<_1ad885c7c_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1bda4b1eb_1bda0bd5a(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad88a655_len(_self_.as<_1ad888eb1_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1bda4b1eb_1bd9e48c0(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad88d46b_len(_self_.as<_1ad88bc3e_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1bda4b1eb_1bd9ea3cb(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad891b34_len(_self_.as<_1ad8905a0_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1bda4b1eb_1bda08582(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad8935a3_len(_self_.as<_1ad891e0e_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1bda4b1eb_1bda28c01(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad89dd83_len(_self_.as<_1ad89c6de_comptimeFiles>().alloc);
}
inline jule::I64 __jule_trait_method_1bda4b1eb_1bda22090(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad8a254b_len(_self_.as<_1ad8a0c86_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1bda4b53c_1c024e205(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1bb09bd59_SetModPath(_self_.as<_1bb09b254_Importer>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1bda4b98d_1c024e205(jule::Ptr<jule::Uintptr> _self_) {
	return _1bb09c0e0_GetModPath(_self_.as<_1bb09b254_Importer>().alloc);
}
inline jule::Str __jule_trait_method_1bda4bd9a_1c024e205(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1bb09c431_ModById(_self_.as<_1bb09b254_Importer>().alloc, _2519_id);
}
inline jule::Ptr<_1ad8e1bea_ImportInfo> __jule_trait_method_1bda4c362_1c024e205(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1bb09c772_GetImport(_self_.as<_1bb09b254_Importer>().alloc, _3125_path);
}
inline __jule_tuple_sx_1ad6e325a_AST__jule_tuple_s_1dd356476_Log __jule_trait_method_1bda4c94a_1c024e205(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod) {
	return _1bb09cb6d_ImportPackage(_self_.as<_1bb09b254_Importer>().alloc, _3729_path, _3740_updateMod);
}
inline void __jule_trait_method_1bda4d30d_1c024e205(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad8e1bea_ImportInfo> _4128__0) {
	_1bb09ce26_Imported(_self_.as<_1bb09b254_Importer>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8c1329(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad718c0e_Str(_self_.as<_1ad718857_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8c069c(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad7eabc0_Str(_self_.as<_1ad7ea84b_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8d88b3(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad80339d_Str(_self_.as<_1ad802ea2_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8b264a(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad805a10_Str(_self_.as<_1ad805658_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8b9773(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad8071d7_Str(_self_.as<_1ad806d63_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bda06d99(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad883e23_Str(_self_.as<_1ad87db21_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd9e1856(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad884891_Str(_self_.as<_1ad8844d9_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd9dd589(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad886145_Str(_self_.as<_1ad885c7c_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bda10127(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad887ab4_Str(_self_.as<_1ad88770c_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bda0bd5a(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad889368_Str(_self_.as<_1ad888eb1_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd9e7b8c(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad88acd7_Str(_self_.as<_1ad88a930_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd9e48c0(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad88c206_Str(_self_.as<_1ad88bc3e_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bda03505(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad88daed_Str(_self_.as<_1ad88d746_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd9ea3cb(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad890847_Str(_self_.as<_1ad8905a0_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bda08582(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad8922b6_Str(_self_.as<_1ad891e0e_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8ea4da(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad893c35_Str(_self_.as<_1ad89387d_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bda13191(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad899d3a_Str(_self_.as<_1ad899983_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bda28c01(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad89ca96_Str(_self_.as<_1ad89c6de_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bda2535c(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad89e515_Str(_self_.as<_1ad89e15d_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bda22090(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad8a136e_Str(_self_.as<_1ad8a0c86_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bda18ce0(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad8a342b_Str(_self_.as<_1ad8a3074_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8a34d7(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad9b8992_Str(_self_.as<_1ad9b8596_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8a77e9(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad9c1a33_Str(_self_.as<_1ad9c16ae_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8ae108(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad9c5592_Str(_self_.as<_1ad9c51da_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8bdd1b(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad9c6175_Str(_self_.as<_1ad9c5bad_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd935e60(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad9c6b59_Str(_self_.as<_1ad9c67a2_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd9343e2(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad9c7709_Str(_self_.as<_1ad9c7352_Map>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8bc3be(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad9c8386_Str(_self_.as<_1ad9c7ece_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1bd8b08bd(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad9c8d59_Str(_self_.as<_1ad9c89a2_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1bda4d7e7_1c07576b9(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc0dd350_Str(_self_.as<_1bc0dce98_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8c1329(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad719050_Equal(_self_.as<_1ad718857_StructIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8c069c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad7eb011_Equal(_self_.as<_1ad7ea84b_FnIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8d88b3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad8036de_Equal(_self_.as<_1ad802ea2_Trait>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8b264a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad805d51_Equal(_self_.as<_1ad805658_Enum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8b9773(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad807528_Equal(_self_.as<_1ad806d63_TypeEnum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bda06d99(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad8841ba_Equal(_self_.as<_1ad87db21_comptimeRange>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd9e1856(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad884bd2_Equal(_self_.as<_1ad8844d9_comptimeStructField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd9dd589(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad886486_Equal(_self_.as<_1ad885c7c_comptimeStructFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bda10127(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad887e05_Equal(_self_.as<_1ad88770c_comptimeStatic>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bda0bd5a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad8896a9_Equal(_self_.as<_1ad888eb1_comptimeStatics>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd9e7b8c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad88b128_Equal(_self_.as<_1ad88a930_comptimeEnumField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd9e48c0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad88c547_Equal(_self_.as<_1ad88bc3e_comptimeEnumFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bda03505(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad88de3e_Equal(_self_.as<_1ad88d746_comptimeParam>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd9ea3cb(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad890b88_Equal(_self_.as<_1ad8905a0_comptimeParams>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bda08582(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad892607_Equal(_self_.as<_1ad891e0e_comptimeTypeInfos>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8ea4da(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad894076_Equal(_self_.as<_1ad89387d_comptimeTypeInfo>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bda13191(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad89a17b_Equal(_self_.as<_1ad899983_comptimeValue>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bda28c01(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad89cdd7_Equal(_self_.as<_1ad89c6de_comptimeFiles>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bda2535c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad89e856_Equal(_self_.as<_1ad89e15d_comptimeFile>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bda22090(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad8a16b0_Equal(_self_.as<_1ad8a0c86_comptimeDecls>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bda18ce0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad8a376c_Equal(_self_.as<_1ad8a3074_comptimeDecl>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8a34d7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad9b8cd3_Equal(_self_.as<_1ad9b8596_TypeKind>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8a77e9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad9c1d74_Equal(_self_.as<_1ad9c16ae_Prim>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8ae108(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad9c58d3_Equal(_self_.as<_1ad9c51da_Sptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8bdd1b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad9c64b6_Equal(_self_.as<_1ad9c5bad_Slc>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd935e60(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad9c6e9a_Equal(_self_.as<_1ad9c67a2_Tuple>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd9343e2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad9c7a4a_Equal(_self_.as<_1ad9c7352_Map>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8bc3be(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad9c86c7_Equal(_self_.as<_1ad9c7ece_Arr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1bd8b08bd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1ad9c919a_Equal(_self_.as<_1ad9c89a2_Ptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1bda4db6b_1c07576b9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	return _1bc0dd691_Equal(_self_.as<_1bc0dce98_customType>(), _3818_other);
}
inline jule::Ptr<_1ad8e1bea_ImportInfo> __jule_trait_method_1bda4e1dd_1bd8c3639(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _929_selector) {
	return _1ad7ee0ad_SelectPackage(_self_.as<_1ad7eda91_SymTab>().alloc, _929_selector);
}
inline jule::Ptr<_1ad8e1bea_ImportInfo> __jule_trait_method_1bda4e1dd_1bd997c80(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _929_selector) {
	return _1ad8b8ad4_SelectPackage(_self_.as<_1ad8b860b_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1ad8e1bea_ImportInfo> __jule_trait_method_1bda4e1dd_1bd8c4c67(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _929_selector) {
	return _1ad8e2217_SelectPackage(_self_.as<_1ad8e1bea_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1ad8e1bea_ImportInfo> __jule_trait_method_1bda4e1dd_1bd8c5a8c(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _929_selector) {
	return _1ad8e4945_SelectPackage(_self_.as<_1ad8e446c_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1ad8e1bea_ImportInfo> __jule_trait_method_1bda4e1dd_1bd8c2b44(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _929_selector) {
	return _1ad910345_SelectPackage(_self_.as<_1ad90ed6c_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1ad933a83_Var> __jule_trait_method_1bda50068_1bd8c3639(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ad7ee4a9_FindVar(_self_.as<_1ad7eda91_SymTab>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ad933a83_Var> __jule_trait_method_1bda50068_1bd997c80(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ad8b8ed0_FindVar(_self_.as<_1ad8b860b_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ad933a83_Var> __jule_trait_method_1bda50068_1bd8c4c67(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ad8e2613_FindVar(_self_.as<_1ad8e1bea_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ad933a83_Var> __jule_trait_method_1bda50068_1bd8c5a8c(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ad8e4d41_FindVar(_self_.as<_1ad8e446c_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ad933a83_Var> __jule_trait_method_1bda50068_1bd8c2b44(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ad910741_FindVar(_self_.as<_1ad90ed6c_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1ad9b77a4_TypeAlias> __jule_trait_method_1bda50640_1bd8c3639(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ad7ee8a5_FindTypeAlias(_self_.as<_1ad7eda91_SymTab>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ad9b77a4_TypeAlias> __jule_trait_method_1bda50640_1bd997c80(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ad8b93cb_FindTypeAlias(_self_.as<_1ad8b860b_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ad9b77a4_TypeAlias> __jule_trait_method_1bda50640_1bd8c4c67(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ad8e2a0e_FindTypeAlias(_self_.as<_1ad8e1bea_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ad9b77a4_TypeAlias> __jule_trait_method_1bda50640_1bd8c5a8c(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ad8e523c_FindTypeAlias(_self_.as<_1ad8e446c_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ad9b77a4_TypeAlias> __jule_trait_method_1bda50640_1bd8c2b44(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ad910b3c_FindTypeAlias(_self_.as<_1ad90ed6c_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ad7159ec_Struct> __jule_trait_method_1bda50c4a_1bd8c3639(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ad7eeca1_FindStruct(_self_.as<_1ad7eda91_SymTab>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ad7159ec_Struct> __jule_trait_method_1bda50c4a_1bd997c80(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ad8b97c7_FindStruct(_self_.as<_1ad8b860b_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ad7159ec_Struct> __jule_trait_method_1bda50c4a_1bd8c4c67(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ad8e2e0a_FindStruct(_self_.as<_1ad8e1bea_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ad7159ec_Struct> __jule_trait_method_1bda50c4a_1bd8c5a8c(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ad8e5638_FindStruct(_self_.as<_1ad8e446c_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ad7159ec_Struct> __jule_trait_method_1bda50c4a_1bd8c2b44(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ad911038_FindStruct(_self_.as<_1ad90ed6c_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ad7e778d_Fn> __jule_trait_method_1bda51355_1bd8c3639(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ad80019c_FindFn(_self_.as<_1ad7eda91_SymTab>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ad7e778d_Fn> __jule_trait_method_1bda51355_1bd997c80(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ad8b9bc3_FindFn(_self_.as<_1ad8b860b_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ad7e778d_Fn> __jule_trait_method_1bda51355_1bd8c4c67(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ad8e3306_FindFn(_self_.as<_1ad8e1bea_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ad7e778d_Fn> __jule_trait_method_1bda51355_1bd8c5a8c(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ad8e5a34_FindFn(_self_.as<_1ad8e446c_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ad7e778d_Fn> __jule_trait_method_1bda51355_1bd8c2b44(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ad911434_FindFn(_self_.as<_1ad90ed6c_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1ad802ea2_Trait> __jule_trait_method_1bda51960_1bd8c3639(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ad8004dd_FindTrait(_self_.as<_1ad7eda91_SymTab>().alloc, _2925_ident);
}
inline jule::Ptr<_1ad802ea2_Trait> __jule_trait_method_1bda51960_1bd997c80(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ad8ba014_FindTrait(_self_.as<_1ad8b860b_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1ad802ea2_Trait> __jule_trait_method_1bda51960_1bd8c4c67(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ad8e3647_FindTrait(_self_.as<_1ad8e1bea_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1ad802ea2_Trait> __jule_trait_method_1bda51960_1bd8c5a8c(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ad8e5d75_FindTrait(_self_.as<_1ad8e446c_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1ad802ea2_Trait> __jule_trait_method_1bda51960_1bd8c2b44(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ad911775_FindTrait(_self_.as<_1ad90ed6c_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1ad805658_Enum> __jule_trait_method_1bda51eb0_1bd8c3639(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ad80082e_FindEnum(_self_.as<_1ad7eda91_SymTab>().alloc, _3324_ident);
}
inline jule::Ptr<_1ad805658_Enum> __jule_trait_method_1bda51eb0_1bd997c80(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ad8ba355_FindEnum(_self_.as<_1ad8b860b_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1ad805658_Enum> __jule_trait_method_1bda51eb0_1bd8c4c67(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ad8e3988_FindEnum(_self_.as<_1ad8e1bea_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1ad805658_Enum> __jule_trait_method_1bda51eb0_1bd8c5a8c(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ad8e61b6_FindEnum(_self_.as<_1ad8e446c_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1ad805658_Enum> __jule_trait_method_1bda51eb0_1bd8c2b44(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ad911ab6_FindEnum(_self_.as<_1ad90ed6c_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1ad806d63_TypeEnum> __jule_trait_method_1bda52510_1bd8c3639(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ad800b70_FindTypeEnum(_self_.as<_1ad7eda91_SymTab>().alloc, _3728_ident);
}
inline jule::Ptr<_1ad806d63_TypeEnum> __jule_trait_method_1bda52510_1bd997c80(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ad8ba696_FindTypeEnum(_self_.as<_1ad8b860b_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1ad806d63_TypeEnum> __jule_trait_method_1bda52510_1bd8c4c67(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ad8e3cc9_FindTypeEnum(_self_.as<_1ad8e1bea_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1ad806d63_TypeEnum> __jule_trait_method_1bda52510_1bd8c5a8c(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ad8e6507_FindTypeEnum(_self_.as<_1ad8e446c_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1ad806d63_TypeEnum> __jule_trait_method_1bda52510_1bd8c2b44(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ad911e07_FindTypeEnum(_self_.as<_1ad90ed6c_sema>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1c0d58ccb_1c0d47d20(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d47b77_Name(_self_.as<_1c0d47d20_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c0d58ccb_1c0d4b63c(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d4b2b8_Name(_self_.as<_1c0d4b63c_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c0d58ccb_1c0d4ed49(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d4e9c5_Name(_self_.as<_1c0d4ed49_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c0d58ccb_1c0d5359a(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d53226_Name(_self_.as<_1c0d5359a_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c0d58ccb_1c0d56ca7(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d56933_Name(_self_.as<_1c0d56ca7_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c0d58db9_1c0d47d20(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d48392_Short(_self_.as<_1c0d47d20_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c0d58db9_1c0d4b63c(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d4bbae_Short(_self_.as<_1c0d4b63c_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c0d58db9_1c0d4ed49(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d503bb_Short(_self_.as<_1c0d4ed49_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c0d58db9_1c0d5359a(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d53b1c_Short(_self_.as<_1c0d5359a_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c0d58db9_1c0d56ca7(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d57329_Short(_self_.as<_1c0d56ca7_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c0d5a78e_1c0d47d20(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d4810b_What(_self_.as<_1c0d47d20_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c0d5a78e_1c0d4b63c(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d4b928_What(_self_.as<_1c0d4b63c_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c0d5a78e_1c0d4ed49(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d50135_What(_self_.as<_1c0d4ed49_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c0d5a78e_1c0d5359a(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d53886_What(_self_.as<_1c0d5359a_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c0d5a78e_1c0d56ca7(jule::Ptr<jule::Uintptr> _self_) {
	return _1c0d57093_What(_self_.as<_1c0d56ca7_Flag>().alloc);
}
inline void __jule_trait_method_1c0d5ab9b_1c0d47d20(jule::Ptr<jule::Uintptr> _self_) {
	_1c0d4824e_Reset(_self_.as<_1c0d47d20_Flag>().alloc);
}
inline void __jule_trait_method_1c0d5ab9b_1c0d4b63c(jule::Ptr<jule::Uintptr> _self_) {
	_1c0d4ba6b_Reset(_self_.as<_1c0d4b63c_Flag>().alloc);
}
inline void __jule_trait_method_1c0d5ab9b_1c0d4ed49(jule::Ptr<jule::Uintptr> _self_) {
	_1c0d50278_Reset(_self_.as<_1c0d4ed49_Flag>().alloc);
}
inline void __jule_trait_method_1c0d5ab9b_1c0d5359a(jule::Ptr<jule::Uintptr> _self_) {
	_1c0d539c9_Reset(_self_.as<_1c0d5359a_Flag>().alloc);
}
inline void __jule_trait_method_1c0d5ab9b_1c0d56ca7(jule::Ptr<jule::Uintptr> _self_) {
	_1c0d571d6_Reset(_self_.as<_1c0d56ca7_Flag>().alloc);
}


static _1ad87d901_comptimeRangeKindMptrData _1ad87d901_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1ad87cc85_index=__jule_trait_method_1bda49c99_1bd9dd589,
	._1ad87d0e8_ready=__jule_trait_method_1bda4a33d_1bd9dd589,
	._1ad87d516_step=__jule_trait_method_1bda4aa14_1bd9dd589,
	._1ad87d79c_len=__jule_trait_method_1bda4b1eb_1bd9dd589,
};
static _1ad87d901_comptimeRangeKindMptrData _1ad87d901_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1ad87cc85_index=__jule_trait_method_1bda49c99_1bda0bd5a,
	._1ad87d0e8_ready=__jule_trait_method_1bda4a33d_1bda0bd5a,
	._1ad87d516_step=__jule_trait_method_1bda4aa14_1bda0bd5a,
	._1ad87d79c_len=__jule_trait_method_1bda4b1eb_1bda0bd5a,
};
static _1ad87d901_comptimeRangeKindMptrData _1ad87d901_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1ad87cc85_index=__jule_trait_method_1bda49c99_1bd9e48c0,
	._1ad87d0e8_ready=__jule_trait_method_1bda4a33d_1bd9e48c0,
	._1ad87d516_step=__jule_trait_method_1bda4aa14_1bd9e48c0,
	._1ad87d79c_len=__jule_trait_method_1bda4b1eb_1bd9e48c0,
};
static _1ad87d901_comptimeRangeKindMptrData _1ad87d901_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1ad87cc85_index=__jule_trait_method_1bda49c99_1bd9ea3cb,
	._1ad87d0e8_ready=__jule_trait_method_1bda4a33d_1bd9ea3cb,
	._1ad87d516_step=__jule_trait_method_1bda4aa14_1bd9ea3cb,
	._1ad87d79c_len=__jule_trait_method_1bda4b1eb_1bd9ea3cb,
};
static _1ad87d901_comptimeRangeKindMptrData _1ad87d901_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1ad87cc85_index=__jule_trait_method_1bda49c99_1bda08582,
	._1ad87d0e8_ready=__jule_trait_method_1bda4a33d_1bda08582,
	._1ad87d516_step=__jule_trait_method_1bda4aa14_1bda08582,
	._1ad87d79c_len=__jule_trait_method_1bda4b1eb_1bda08582,
};
static _1ad87d901_comptimeRangeKindMptrData _1ad87d901_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1ad87cc85_index=__jule_trait_method_1bda49c99_1bda28c01,
	._1ad87d0e8_ready=__jule_trait_method_1bda4a33d_1bda28c01,
	._1ad87d516_step=__jule_trait_method_1bda4aa14_1bda28c01,
	._1ad87d79c_len=__jule_trait_method_1bda4b1eb_1bda28c01,
};
static _1ad87d901_comptimeRangeKindMptrData _1ad87d901_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1ad87cc85_index=__jule_trait_method_1bda49c99_1bda22090,
	._1ad87d0e8_ready=__jule_trait_method_1bda4a33d_1bda22090,
	._1ad87d516_step=__jule_trait_method_1bda4aa14_1bda22090,
	._1ad87d79c_len=__jule_trait_method_1bda4b1eb_1bda22090,
};
static _1ad8ddbe7_ImporterMptrData _1ad8ddbe7_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1ad8dca81_SetModPath=__jule_trait_method_1bda4b53c_1c024e205,
	._1ad8dcc5c_GetModPath=__jule_trait_method_1bda4b98d_1c024e205,
	._1ad8dd09d_ModById=__jule_trait_method_1bda4bd9a_1c024e205,
	._1ad8dd3de_GetImport=__jule_trait_method_1bda4c362_1c024e205,
	._1ad8dd7da_ImportPackage=__jule_trait_method_1bda4c94a_1c024e205,
	._1ad8dda93_Imported=__jule_trait_method_1bda4d30d_1c024e205,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8c1329,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8c1329,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8c069c,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8c069c,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8d88b3,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8d88b3,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8b264a,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8b264a,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8b9773,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8b9773,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bda06d99,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bda06d99,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd9e1856,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd9e1856,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd9dd589,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd9dd589,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bda10127,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bda10127,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bda0bd5a,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bda0bd5a,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd9e7b8c,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd9e7b8c,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd9e48c0,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd9e48c0,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bda03505,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bda03505,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd9ea3cb,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd9ea3cb,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bda08582,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bda08582,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8ea4da,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8ea4da,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bda13191,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bda13191,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bda28c01,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bda28c01,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bda2535c,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bda2535c,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bda22090,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bda22090,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bda18ce0,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bda18ce0,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8a34d7,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8a34d7,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8a77e9,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8a77e9,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8ae108,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8ae108,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8bdd1b,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8bdd1b,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd935e60,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd935e60,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd9343e2,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd9343e2,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8bc3be,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8bc3be,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1bd8b08bd,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1bd8b08bd,
};
static _1ad9b80e0_KindMptrData _1ad9b80e0_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1ad9b7b4a_Str=__jule_trait_method_1bda4d7e7_1c07576b9,
	._1ad9b7e8b_Equal=__jule_trait_method_1bda4db6b_1c07576b9,
};
static _1ad9d897e_LookupMptrData _1ad9d897e_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1ad9d6c68_SelectPackage=__jule_trait_method_1bda4e1dd_1bd8c3639,
	._1ad9d7164_FindVar=__jule_trait_method_1bda50068_1bd8c3639,
	._1ad9d7560_FindTypeAlias=__jule_trait_method_1bda50640_1bd8c3639,
	._1ad9d795b_FindStruct=__jule_trait_method_1bda50c4a_1bd8c3639,
	._1ad9d7d57_FindFn=__jule_trait_method_1bda51355_1bd8c3639,
	._1ad9d8198_FindTrait=__jule_trait_method_1bda51960_1bd8c3639,
	._1ad9d84d9_FindEnum=__jule_trait_method_1bda51eb0_1bd8c3639,
	._1ad9d882a_FindTypeEnum=__jule_trait_method_1bda52510_1bd8c3639,
};
static _1ad9d897e_LookupMptrData _1ad9d897e_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1ad9d6c68_SelectPackage=__jule_trait_method_1bda4e1dd_1bd997c80,
	._1ad9d7164_FindVar=__jule_trait_method_1bda50068_1bd997c80,
	._1ad9d7560_FindTypeAlias=__jule_trait_method_1bda50640_1bd997c80,
	._1ad9d795b_FindStruct=__jule_trait_method_1bda50c4a_1bd997c80,
	._1ad9d7d57_FindFn=__jule_trait_method_1bda51355_1bd997c80,
	._1ad9d8198_FindTrait=__jule_trait_method_1bda51960_1bd997c80,
	._1ad9d84d9_FindEnum=__jule_trait_method_1bda51eb0_1bd997c80,
	._1ad9d882a_FindTypeEnum=__jule_trait_method_1bda52510_1bd997c80,
};
static _1ad9d897e_LookupMptrData _1ad9d897e_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1ad9d6c68_SelectPackage=__jule_trait_method_1bda4e1dd_1bd8c4c67,
	._1ad9d7164_FindVar=__jule_trait_method_1bda50068_1bd8c4c67,
	._1ad9d7560_FindTypeAlias=__jule_trait_method_1bda50640_1bd8c4c67,
	._1ad9d795b_FindStruct=__jule_trait_method_1bda50c4a_1bd8c4c67,
	._1ad9d7d57_FindFn=__jule_trait_method_1bda51355_1bd8c4c67,
	._1ad9d8198_FindTrait=__jule_trait_method_1bda51960_1bd8c4c67,
	._1ad9d84d9_FindEnum=__jule_trait_method_1bda51eb0_1bd8c4c67,
	._1ad9d882a_FindTypeEnum=__jule_trait_method_1bda52510_1bd8c4c67,
};
static _1ad9d897e_LookupMptrData _1ad9d897e_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1ad9d6c68_SelectPackage=__jule_trait_method_1bda4e1dd_1bd8c5a8c,
	._1ad9d7164_FindVar=__jule_trait_method_1bda50068_1bd8c5a8c,
	._1ad9d7560_FindTypeAlias=__jule_trait_method_1bda50640_1bd8c5a8c,
	._1ad9d795b_FindStruct=__jule_trait_method_1bda50c4a_1bd8c5a8c,
	._1ad9d7d57_FindFn=__jule_trait_method_1bda51355_1bd8c5a8c,
	._1ad9d8198_FindTrait=__jule_trait_method_1bda51960_1bd8c5a8c,
	._1ad9d84d9_FindEnum=__jule_trait_method_1bda51eb0_1bd8c5a8c,
	._1ad9d882a_FindTypeEnum=__jule_trait_method_1bda52510_1bd8c5a8c,
};
static _1ad9d897e_LookupMptrData _1ad9d897e_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1ad9d6c68_SelectPackage=__jule_trait_method_1bda4e1dd_1bd8c2b44,
	._1ad9d7164_FindVar=__jule_trait_method_1bda50068_1bd8c2b44,
	._1ad9d7560_FindTypeAlias=__jule_trait_method_1bda50640_1bd8c2b44,
	._1ad9d795b_FindStruct=__jule_trait_method_1bda50c4a_1bd8c2b44,
	._1ad9d7d57_FindFn=__jule_trait_method_1bda51355_1bd8c2b44,
	._1ad9d8198_FindTrait=__jule_trait_method_1bda51960_1bd8c2b44,
	._1ad9d84d9_FindEnum=__jule_trait_method_1bda51eb0_1bd8c2b44,
	._1ad9d882a_FindTypeEnum=__jule_trait_method_1bda52510_1bd8c2b44,
};
static _1bc160416_CommonFlagMptrData _1bc160416_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1bc12e5b1_Name=__jule_trait_method_1c0d58ccb_1c0d47d20,
	._1bc12e704_Short=__jule_trait_method_1c0d58db9_1c0d47d20,
	._1bc12e89c_What=__jule_trait_method_1c0d5a78e_1c0d47d20,
	._1bc1602c3_Reset=__jule_trait_method_1c0d5ab9b_1c0d47d20,
};
static _1bc160416_CommonFlagMptrData _1bc160416_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1bc12e5b1_Name=__jule_trait_method_1c0d58ccb_1c0d4b63c,
	._1bc12e704_Short=__jule_trait_method_1c0d58db9_1c0d4b63c,
	._1bc12e89c_What=__jule_trait_method_1c0d5a78e_1c0d4b63c,
	._1bc1602c3_Reset=__jule_trait_method_1c0d5ab9b_1c0d4b63c,
};
static _1bc160416_CommonFlagMptrData _1bc160416_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1bc12e5b1_Name=__jule_trait_method_1c0d58ccb_1c0d4ed49,
	._1bc12e704_Short=__jule_trait_method_1c0d58db9_1c0d4ed49,
	._1bc12e89c_What=__jule_trait_method_1c0d5a78e_1c0d4ed49,
	._1bc1602c3_Reset=__jule_trait_method_1c0d5ab9b_1c0d4ed49,
};
static _1bc160416_CommonFlagMptrData _1bc160416_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1bc12e5b1_Name=__jule_trait_method_1c0d58ccb_1c0d5359a,
	._1bc12e704_Short=__jule_trait_method_1c0d58db9_1c0d5359a,
	._1bc12e89c_What=__jule_trait_method_1c0d5a78e_1c0d5359a,
	._1bc1602c3_Reset=__jule_trait_method_1c0d5ab9b_1c0d5359a,
};
static _1bc160416_CommonFlagMptrData _1bc160416_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1bc12e5b1_Name=__jule_trait_method_1c0d58ccb_1c0d56ca7,
	._1bc12e704_Short=__jule_trait_method_1c0d58db9_1c0d56ca7,
	._1bc12e89c_What=__jule_trait_method_1c0d5a78e_1c0d56ca7,
	._1bc1602c3_Reset=__jule_trait_method_1c0d5ab9b_1c0d56ca7,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1bd135253_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1bc360902_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1bc3633d8_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1bc3708e0_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1bc360ccb_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1bc355034_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1bc372d76_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1ad933a83_Var> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1ad9b77a4_TypeAlias> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1ad7159ec_Struct> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1ad7e778d_Fn> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1ad802ea2_Trait> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1ad805658_Enum> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1ad806d63_TypeEnum> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1ad712ac6_Field> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1ad778ec2_Const> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1ad804b0d_EnumItem> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1ad7e5cb9_Param> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1ad8b3dba_Label> &other) { return any.type == &__jule_any_type18 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1ad8b136d_Scope> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1ad7e3602_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1ad985b90_Data> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1ad7e4614_BackendEmitExprModel> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1ad7e237b_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1ad7e0d6e_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1ad7e1248_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1ad7e19eb_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1ad7e3228_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1ad7e2d4e_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1ad7e4911_FreeExprModel> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1ad7dc387_FnCallExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1ad8b1ea6_Conditional> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1ad8b22a3_InfIter> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1ad7094a2_WhileKind> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1ad8b2759_WhileIter> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1ad709da9_RangeKind> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1ad8b31a5_RangeIter> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1ad8b353a_ContSt> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1ad8b452a_GotoSt> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1ad8b4904_Postfix> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1ad8b4daa_Assign> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1ad6ead12_IdentExpr> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1ad7dcc17_IndexingExprModel> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1ad8b5361_MultiAssign> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1ad8b5a9d_Match> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1ad8b6cbe_FallSt> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1ad8b3914_BreakSt> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1ad8b7165_RetSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1ad7051d4_ScopeTree> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1ad70802d_VarDecl> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1ad70bbd0_TypeAliasDecl> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1ad6e94e7_Expr> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1ad70b493_Conditional> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1ad708b77_Iter> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1ad70a65c_ContSt> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1ad702797_LabelSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1ad702b71_GotoSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1ad703b61_AssignSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1ad70c9a0_MatchCase> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1ad702e6d_FallSt> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1ad70a283_BreakSt> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1ad708407_RetSt> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1ad6e9dbb_UseExpr> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1ad7ea84b_FnIns> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1ad718857_StructIns> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1ad711a92_Impl> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1ad710be5_StructDecl> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1ad706d73_FnDecl> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1ad711432_TraitDecl> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1ad70e09a_EnumDecl> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1ad710035_TypeEnumDecl> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1ad6e747e_ArrTypeDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1ad6e65e3_SlcTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1ad6e6bdc_PtrTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1ad6e625d_SptrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1ad6e7bcc_MapTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1ad6e68e0_TupleTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1ad6e57bd_IdentTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1ad6eb97d_VariadicExpr> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1ad7dc761_SliceExprModel> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1ad6edc16_FieldExprPair> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1ad700322_KeyValPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1ad6ea0db_TupleExpr> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1ad7e0995_TupleExprModel> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1ad6ed221_FnCallExpr> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1ad7e4290_RuneExprModel> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1ad9b8596_TypeKind> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1ad7e0698_ArrayExprModel> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1ad6ec60a_SubIdentExpr> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1ad6e5a87_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1ad6eb5a4_UnaryExpr> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1ad6e51b3_TypeDecl> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1ad6ec231_NamespaceExpr> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1ad6e5e61_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1ad7de004_SlicingExprModel> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1ad7db9d5_CastingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1ad700a4d_SliceExpr> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1ad7db155_StructLitExprModel> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1ad7e02be_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1ad7de587_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1ad7dee28_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1ad7dd971_MapExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1ad7dd1bd_AnonFnExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1ad6e97b1_RangeExpr> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1ad6ea482_LitExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1ad6ea85b_UnsafeExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1ad7014aa_IndexingExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1ad701b1a_SlicingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1ad6ebd57_CastExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1ad6ee541_StructLit> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1ad6ee9e7_BraceLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1ad6ecab1_BinaryExpr> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1ad7da781_UnaryExprModel> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1ad7da3a7_BinaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1ad7db452_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1ad7e1622_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1ad7e1ea2_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1ad7e2678_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1ad7e2975_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1ad7e38ee_SizeofExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1ad7e40a3_AlignofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1bbd9506e_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1bbd97857_StrRuneIter> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1bbd96548_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1bbd970a4_PushToSliceExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1bbd9747d_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1bbd952e4_SwapExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1bbd956bd_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1bbd95eb5_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1bbd96845_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1bbd97b54_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1bbd95a42_RefExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1ad7dacae_StructArgExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1bbd97e51_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1bbd96bca_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator46, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type136_to_str(void *alloc) noexcept { return _1bc368b19_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator170, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type137_to_str(void *alloc) noexcept { return _1bc373cbc_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type138_to_str(void *alloc) noexcept { return _1bc35a4e0_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1bc358224_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1bc36b05b_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1bc36d49d_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
inline jule::Bool __jule_anon1bdb42479(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e96e6_ParamIns> _25021_p1, jule::Ptr<_1ad7e96e6_ParamIns> _25036_p2);
struct __jule_anon_1bdbacd1e_ctx{
	jule::Ptr<_1ad8844d9_comptimeStructField> _self_;
};
static void __jule_anon_1bdbacd1e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbacd1e_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbacd1e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _6521_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _6536_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdbaec99_ctx{
	jule::Ptr<_1ad8844d9_comptimeStructField> _self_;
};
static void __jule_anon_1bdbaec99_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbaec99_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbaec99(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _7221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _7236_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdbc3807_ctx{
	jule::Ptr<_1ad88770c_comptimeStatic> _self_;
};
static void __jule_anon_1bdbc3807_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbc3807_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbc3807(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _17821_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _17836_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdbc5782_ctx{
	jule::Ptr<_1ad88770c_comptimeStatic> _self_;
};
static void __jule_anon_1bdbc5782_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbc5782_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbc5782(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _18521_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _18536_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdbd6ba0_ctx{
	jule::Ptr<_1ad88a930_comptimeEnumField> _self_;
};
static void __jule_anon_1bdbd6ba0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbd6ba0_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbd6ba0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _28321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _28336_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdbede3c_ctx{
	jule::Ptr<_1ad88d746_comptimeParam> _self_;
};
static void __jule_anon_1bdbede3c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdbede3c_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbede3c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _40221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _40236_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdc00db7_ctx{
	jule::Ptr<_1ad88d746_comptimeParam> _self_;
};
static void __jule_anon_1bdc00db7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc00db7_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc00db7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _40921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _40936_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdc02d42_ctx{
	jule::Ptr<_1ad88d746_comptimeParam> _self_;
};
static void __jule_anon_1bdc02d42_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc02d42_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc02d42(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _41621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _41636_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdc8c805_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdc8c805_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc8c805_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc8c805(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _97421_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _97436_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdc8e780_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdc8e780_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc8e780_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc8e780(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _98121_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _98136_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdc9170a_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdc9170a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc9170a_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc9170a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _98821_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _98836_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdc93685_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdc93685_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc93685_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc93685(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _99521_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _99536_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdc95610_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdc95610_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc95610_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc95610(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _100221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _100236_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdc9758a_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdc9758a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc9758a_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc9758a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _100921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _100936_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdc99515_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdc99515_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc99515_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc99515(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _101621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _101636_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdc9b490_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdc9b490_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc9b490_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc9b490(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _102321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _102336_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdc9d55d_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdc9d55d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdc9d55d_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc9d55d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _103021_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _103036_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdca04d8_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdca04d8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdca04d8_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdca04d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _103721_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _103736_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdca2463_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdca2463_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdca2463_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdca2463(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _104421_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _104436_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdca43dd_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdca43dd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdca43dd_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdca43dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _105121_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _105136_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdca6368_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdca6368_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdca6368_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdca6368(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _105821_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _105836_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdca82e3_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdca82e3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdca82e3_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdca82e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _106521_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _106536_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdcaa26d_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdcaa26d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdcaa26d_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcaa26d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _107221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _107236_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdcac1e8_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdcac1e8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdcac1e8_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcac1e8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _107921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _107936_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdcae173_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdcae173_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdcae173_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcae173(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _108621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _108636_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdcb10ed_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdcb10ed_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdcb10ed_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcb10ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _109321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _109336_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdcb3078_ctx{
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdcb3078_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdcb3078_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcb3078(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _110021_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _110036_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdce41b9_ctx{
	jule::Ptr<_1ad899983_comptimeValue> _self_;
};
static void __jule_anon_1bdce41b9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdce41b9_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdce41b9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _126221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _126236_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdce6144_ctx{
	jule::Ptr<_1ad899983_comptimeValue> _self_;
};
static void __jule_anon_1bdce6144_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdce6144_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdce6144(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _126921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _126936_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdce80be_ctx{
	jule::Ptr<_1ad899983_comptimeValue> _self_;
};
static void __jule_anon_1bdce80be_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdce80be_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdce80be(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _127621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _127636_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdcea049_ctx{
	jule::Ptr<_1ad899983_comptimeValue> _self_;
};
static void __jule_anon_1bdcea049_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdcea049_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcea049(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _128321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _128336_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdcebec4_ctx{
	jule::Ptr<_1ad899983_comptimeValue> _self_;
};
static void __jule_anon_1bdcebec4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdcebec4_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcebec4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _129021_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _129036_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdcede4e_ctx{
	jule::Ptr<_1ad899983_comptimeValue> _self_;
};
static void __jule_anon_1bdcede4e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdcede4e_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcede4e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _129721_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _129736_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd00dc9_ctx{
	jule::Ptr<_1ad899983_comptimeValue> _self_;
};
static void __jule_anon_1bdd00dc9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd00dc9_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd00dc9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _130421_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _130436_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd15ae2_ctx{
	jule::Ptr<_1ad89e15d_comptimeFile> _self_;
};
static void __jule_anon_1bdd15ae2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd15ae2_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd15ae2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _142921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _142936_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd17a6c_ctx{
	jule::Ptr<_1ad89e15d_comptimeFile> _self_;
};
static void __jule_anon_1bdd17a6c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd17a6c_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd17a6c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _143621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _143636_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd199e7_ctx{
	jule::Ptr<_1ad89e15d_comptimeFile> _self_;
};
static void __jule_anon_1bdd199e7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd199e7_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd199e7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _144321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _144336_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd7d8d5_ctx{
	jule::Ptr<_1ad8a3074_comptimeDecl> _self_;
};
static void __jule_anon_1bdd7d8d5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd7d8d5_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd7d8d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _194921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _194936_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd80860_ctx{
	jule::Ptr<_1ad8a3074_comptimeDecl> _self_;
};
static void __jule_anon_1bdd80860_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd80860_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd80860(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _195621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _195636_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd827da_ctx{
	jule::Ptr<_1ad8a3074_comptimeDecl> _self_;
};
static void __jule_anon_1bdd827da_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd827da_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd827da(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _196321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _196336_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd84765_ctx{
	jule::Ptr<_1ad8a3074_comptimeDecl> _self_;
};
static void __jule_anon_1bdd84765_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd84765_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd84765(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _197021_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _197036_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd866e0_ctx{
	jule::Ptr<_1ad8a3074_comptimeDecl> _self_;
};
static void __jule_anon_1bdd866e0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd866e0_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd866e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _197721_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _197736_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd8866a_ctx{
	jule::Ptr<_1ad8a3074_comptimeDecl> _self_;
};
static void __jule_anon_1bdd8866a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd8866a_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd8866a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _198421_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _198436_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd8a5e5_ctx{
	jule::Ptr<_1ad8a3074_comptimeDecl> _self_;
};
static void __jule_anon_1bdd8a5e5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd8a5e5_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd8a5e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _199121_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _199136_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd8c570_ctx{
	jule::Ptr<_1ad8a3074_comptimeDecl> _self_;
};
static void __jule_anon_1bdd8c570_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd8c570_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd8c570(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _199821_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _199836_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd8e63d_ctx{
	jule::Ptr<_1ad8a3074_comptimeDecl> _self_;
};
static void __jule_anon_1bdd8e63d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd8e63d_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd8e63d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _200521_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _200536_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd915b8_ctx{
	jule::Ptr<_1ad8a3074_comptimeDecl> _self_;
};
static void __jule_anon_1bdd915b8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd915b8_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd915b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _201221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _201236_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd93543_ctx{
	jule::Ptr<_1ad8a3074_comptimeDecl> _self_;
};
static void __jule_anon_1bdd93543_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd93543_ctx>().dealloc(); }
inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd93543(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _201921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _201936_fc, jule::Ptr<_1ad985b90_Data>* );
struct __jule_anon_1bdd9e818_ctx{
	jule::Ptr<_1ad8a9960_constraintChecker> _self_;
};
static void __jule_anon_1bdd9e818_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdd9e818_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bdd9e818(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad90ed6c_sema>* _6415_sema, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>* _6433_generics);
struct __jule_anon_1be1b3830_ctx{
	jule::Ptr<_1ad8e1bea_ImportInfo> *_48528_pkg;
};
static void __jule_anon_1be1b3830_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be1b3830_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1be1b3830(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e1bea_ImportInfo> _48635_spkg);
struct __jule_anon_1be2c4710_ctx{
	jule::Ptr<_1ad7ea84b_FnIns> _82647_f;
	jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> _82711_generics;
	jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> *_82663_ignored;
};
static void __jule_anon_1be2c4710_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be2c4710_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1be2c4710(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad90ed6c_sema>* _83342_sema);
struct __jule_anon_1be2dc6d4_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1ad90ed6c_sema>*,jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>*> _92946_algo;
	jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _9347_generics;
};
static void __jule_anon_1be2dc6d4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be2dc6d4_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1be2dc6d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad90ed6c_sema>* _93642_sema);
struct __jule_anon_1be2e1ebe_ctx{
	jule::Ptr<_1ad7ea84b_FnIns> _94837_f;
	jule::Ptr<_1ad90ed6c_sema> _self_;
};
static void __jule_anon_1be2e1ebe_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be2e1ebe_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1be2e1ebe(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad90ed6c_sema>* _95237_sema, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>* _95255_generics);
struct __jule_anon_1be85087e_ctx{
	jule::Ptr<_1ad6ec231_NamespaceExpr> _187133_s;
};
static void __jule_anon_1be85087e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be85087e_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1be85087e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e1bea_ImportInfo> _187243_imp);
inline jule::Str __jule_anon1beb75533(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def);
struct __jule_anon_1bec0e04a_ctx{
	jule::Ptr<_1ad6e5e61_NamespaceTypeDecl> _154034_ns;
};
static void __jule_anon_1bec0e04a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bec0e04a_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bec0e04a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e1bea_ImportInfo> _154143_imp);
struct __jule_anon_1c03935e1_ctx{
	jule::Ptr<_1bbedb627_ObjectDeadCode> _self_;
};
static void __jule_anon_1c03935e1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c03935e1_ctx>().dealloc(); }
inline void __jule_anon_1c03935e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _21031_file);
struct __jule_anon_1c03eb6c1_ctx{
	_1bbee4c29_exprDeadCode *_self_;
};
static void __jule_anon_1c03eb6c1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c03eb6c1_ctx>().dealloc(); }
inline void __jule_anon_1c03eb6c1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr);
struct __jule_anon_1c059d741_ctx{
	_1bbda31d1_exprOptimizer *_self_;
};
static void __jule_anon_1c059d741_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c059d741_ctx>().dealloc(); }
inline void __jule_anon_1c059d741(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _54947_m);
struct __jule_anon_1c077111c_ctx{
	jule::Ptr<_1bbee9ba7_scopeCoder> _self_;
	jule::Bool _1017_ref;
};
static void __jule_anon_1c077111c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c077111c_ctx>().dealloc(); }
inline void __jule_anon_1c077111c(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c0774b26_ctx{
	jule::Ptr<_1bbee9ba7_scopeCoder> _self_;
	jule::Ptr<_1ad8b31a5_RangeIter> *_9336_it;
};
static void __jule_anon_1c0774b26_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0774b26_ctx>().dealloc(); }
inline void __jule_anon_1c0774b26(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c079a069_ctx{
	jule::Ptr<_1bbee9ba7_scopeCoder> _self_;
};
static void __jule_anon_1c079a069_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c079a069_ctx>().dealloc(); }
inline void __jule_anon_1c079a069(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c079c555_ctx{
	jule::Ptr<_1bbee9ba7_scopeCoder> _self_;
};
static void __jule_anon_1c079c555_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c079c555_ctx>().dealloc(); }
inline void __jule_anon_1c079c555(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c07b6519_ctx{
	jule::Ptr<_1bbee9ba7_scopeCoder> _self_;
};
static void __jule_anon_1c07b6519_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c07b6519_ctx>().dealloc(); }
inline void __jule_anon_1c07b6519(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c08511ca_ctx{
	jule::Ptr<_1bbee9ba7_scopeCoder> _self_;
};
static void __jule_anon_1c08511ca_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c08511ca_ctx>().dealloc(); }
inline void __jule_anon_1c08511ca(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c085250b_ctx{
	jule::Ptr<_1bbee9ba7_scopeCoder> _self_;
	jule::Ptr<_1ad8b5a9d_Match> _74030_m;
};
static void __jule_anon_1c085250b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c085250b_ctx>().dealloc(); }
inline void __jule_anon_1c085250b(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c08c2dc8_ctx{
	jule::Ptr<_1bbee9ba7_scopeCoder> _self_;
	jule::Ptr<_1ad7dd1bd_AnonFnExprModel> _111034_m;
};
static void __jule_anon_1c08c2dc8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c08c2dc8_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c08c2dc8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad933a83_Var> _111667_v);
struct __jule_anon_1c0c630d1_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0c630d1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c630d1_ctx>().dealloc(); }
inline void __jule_anon_1c0c630d1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _85338_pkg);
struct __jule_anon_1c0c645aa_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0c645aa_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c645aa_ctx>().dealloc(); }
inline void __jule_anon_1c0c645aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn>* _86636_m);
struct __jule_anon_1c0c69c20_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0c69c20_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c69c20_ctx>().dealloc(); }
inline void __jule_anon_1c0c69c20(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _87938_pkg);
struct __jule_anon_1c0c7a3c3_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
	jule::Ptr<_1ad933a83_Var> _94624_v;
};
static void __jule_anon_1c0c7a3c3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c7a3c3_ctx>().dealloc(); }
inline void __jule_anon_1c0c7a3c3(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c0c7c4b3_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
	jule::Ptr<_1ad933a83_Var> _94624_v;
};
static void __jule_anon_1c0c7c4b3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c7c4b3_ctx>().dealloc(); }
inline void __jule_anon_1c0c7c4b3(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c0c7ebbe_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0c7ebbe_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c7ebbe_ctx>().dealloc(); }
inline void __jule_anon_1c0c7ebbe(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c0c80d68_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
	jule::Ptr<_1ad933a83_Var> _94624_v;
};
static void __jule_anon_1c0c80d68_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c80d68_ctx>().dealloc(); }
inline void __jule_anon_1c0c80d68(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c0c9e02e_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0c9e02e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c9e02e_ctx>().dealloc(); }
inline void __jule_anon_1c0c9e02e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _108938_pkg);
struct __jule_anon_1c0ca03a4_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
	jule::Ptr<_1ad718857_StructIns> _110355_s;
};
static void __jule_anon_1c0ca03a4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0ca03a4_ctx>().dealloc(); }
inline void __jule_anon_1c0ca03a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn>* _110436_m);
struct __jule_anon_1c0cacc30_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0cacc30_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0cacc30_ctx>().dealloc(); }
inline void __jule_anon_1c0cacc30(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _114138_pkg);
struct __jule_anon_1c0cbd35b_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0cbd35b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0cbd35b_ctx>().dealloc(); }
inline void __jule_anon_1c0cbd35b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _121338_pkg);
struct __jule_anon_1c0cbe835_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0cbe835_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0cbe835_ctx>().dealloc(); }
inline void __jule_anon_1c0cbe835(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _123631_file);
struct __jule_anon_1c0ccabc6_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0ccabc6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0ccabc6_ctx>().dealloc(); }
inline void __jule_anon_1c0ccabc6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _127538_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1c0d6d582(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1c0d761e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1bdba1681(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e1bea_ImportInfo> _203925_pkg);
struct __jule_anon_1c0c63ee4_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0c63ee4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c63ee4_ctx>().dealloc(); }
inline void __jule_anon_1c0c63ee4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _85432_file);
struct __jule_anon_1c0c6ab33_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0c6ab33_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c6ab33_ctx>().dealloc(); }
inline void __jule_anon_1c0c6ab33(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _88032_file);
struct __jule_anon_1c0c9ee31_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0c9ee31_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c9ee31_ctx>().dealloc(); }
inline void __jule_anon_1c0c9ee31(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _109032_file);
struct __jule_anon_1c0cadb43_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0cadb43_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0cadb43_ctx>().dealloc(); }
inline void __jule_anon_1c0cadb43(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _114232_file);
struct __jule_anon_1c0cbe26e_ctx{
	jule::Ptr<_1ad8e446c_Package> *_121338_pkg;
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
};
static void __jule_anon_1c0cbe26e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0cbe26e_ctx>().dealloc(); }
inline void __jule_anon_1c0cbe26e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _121432_file);
struct __jule_anon_1c0ca1e11_ctx{
	jule::Ptr<_1bc0cdd35_ObjectCoder> _self_;
	jule::Ptr<_1ad802ea2_Trait> _109117_t;
};
static void __jule_anon_1c0ca1e11_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0ca1e11_ctx>().dealloc(); }
inline void __jule_anon_1c0ca1e11(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn>* _109539_m);
jule::Array<jule::Array<jule::Str,2>,5> _1dd46e8ad_HelpMap;
jule::Str _1bc166cad_OutDir;
jule::Str _1bc166ecd_OutName;
jule::Str _1bc167286_Out;
jule::Uintptr _1db948493_STDIN;
jule::Uintptr _1db9487c3_STDOUT;
jule::Uintptr _1db948aae_STDERR;
jule::Array<jule::U8,256> _1dbaa7ba7_first;
jule::Array<_1dbaa825c_acceptRange,16> _1dbaa8603_acceptRanges;
jule::Array<jule::U8,32> _1dbc09534__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1dbc09ac8__DE_BRUIJN64_TAB;
jule::I64 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_1dd0a0247_RangeTable> _1dd037b91__L;
jule::Ptr<_1dd0a0247_RangeTable> _1dd038aa4__LU;
jule::Ptr<_1dd0a0247_RangeTable> _1dd03ea88_Letter;
jule::Ptr<_1dd0a0247_RangeTable> _1dd045d58_Upper;
jule::Slice<_1dd09e2e0_CaseRange> _1dd0983a5__CaseRanges;
jule::Array<jule::U8,256> _1dd098691__PROPERTIES;
jule::Array<jule::U16,128> _1dd09a473_asciiFold;
jule::Slice<_1dd09dce5_foldPair> _1dd09a75e_caseOrbit;
jule::Array<jule::Str,4> _1dd346a71_CppHeaderExts;
jule::Array<jule::Str,3> _1dd348765_CppExts;
jule::Array<jule::Str,1> _1dd348a40_ObjectiveCppExts;
jule::Str _1dd46550d_PathStdlib;
jule::Str _1dd46571c_PathExec;
jule::Str _1dd4659c5_PathWd;
jule::Str _1dd465cc2_PathApi;
jule::Str _1dd46607a_Os;
jule::Str _1dd466333_Arch;
jule::Str _1dd46ade8_Compiler;
jule::Str _1dd46c2e5_CompilerPath;
jule::Str _1dd46c504_CppStd;
jule::Bool _1dd46c735_Shadowing;
jule::Bool _1dd46c9dd_Transpilation;
jule::Bool _1dd46cc96_Test;
jule::Bool _1dd46d04e_RC;
jule::Bool _1dd46d417_Safety;
jule::Bool _1dd46d659_Production;
_1ab14596d_floatInfo _1ab145d14_f32info;
_1ab14596d_floatInfo _1ab146111_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1ab14da31_detailedPowsOfTen;
jule::Slice<jule::I64> _1ab15078b_powtab;
jule::Slice<jule::F64> _1ab15134c_f64pow10;
jule::Slice<jule::F32> _1ab15167c_f32pow10;
jule::Array<jule::U64,20> _1ab15487d_u64pow10;
jule::Slice<_1ab15861d_leftCheat> _1ab158a4c_leftCheats;
jule::Array<jule::I32,5> _1ad635e06_Spaces;
jule::Array<jule::U64,6> _1ad6361e2_UnaryOps;
jule::Array<jule::U64,18> _1ad6c8b47_BinOps;
jule::Array<jule::U64,2> _1ad6c9153_PostfixOps;
jule::Array<jule::U64,11> _1ad6c943e_AssignOps;
jule::Array<_1ad6d7529_kindPair,28> _1ad6d7958_keywords;
jule::Array<_1ad6d7529_kindPair,46> _1ad6d7c88_basicOps;
jule::I64 _1ad873110_BitSize;
jule::Str _1ad873363_SysInt;
jule::Str _1ad873572_SysUint;
jule::Slice<jule::Str> _1ad8a9124_builtinConstraints;
jule::Ptr<_1ad9b8596_TypeKind> _1ada9da44_primNil;
jule::Ptr<_1ad9b8596_TypeKind> _1ada9dd41_primVoid;
jule::Ptr<_1ad9b8596_TypeKind> _1ada9e0e9_primAny;
jule::Ptr<_1ad9b8596_TypeKind> _1ada9e3e6_primStr;
jule::Ptr<_1ad9b8596_TypeKind> _1ada9e69e_primBool;
jule::Ptr<_1ad9b8596_TypeKind> _1ada9e957_primUintptr;
jule::Ptr<_1ad9b8596_TypeKind> _1ada9ec10_primUint;
jule::Ptr<_1ad9b8596_TypeKind> _1adaa00c8_primInt;
jule::Ptr<_1ad9b8596_TypeKind> _1adaa031a_primI8;
jule::Ptr<_1ad9b8596_TypeKind> _1adaa05b2_primI16;
jule::Ptr<_1ad9b8596_TypeKind> _1adaa086a_primI32;
jule::Ptr<_1ad9b8596_TypeKind> _1adaa0b23_primI64;
jule::Ptr<_1ad9b8596_TypeKind> _1adaa0dcb_primU8;
jule::Ptr<_1ad9b8596_TypeKind> _1adaa1184_primU16;
jule::Ptr<_1ad9b8596_TypeKind> _1adaa143c_primU32;
jule::Ptr<_1ad9b8596_TypeKind> _1adaa1926_primU64;
jule::Ptr<_1ad9b8596_TypeKind> _1adaa1b68_primF32;
jule::Ptr<_1ad9b8596_TypeKind> _1adaa1d77_primF64;
jule::Ptr<_1bbdab409_data> _1bbdaaaac_emptyData;
jule::Bool _1bbdb0881_Copy;
jule::Bool _1bbdb0b7d_Deadcode;
jule::Bool _1bbdb0e36_Append;
jule::Bool _1bbdb1233_Math;
jule::Bool _1bbdb14db_Access;
jule::Bool _1bbdb1794_Inline;
jule::Bool _1bbdb1a4c_Ptr;
jule::Bool _1bbdb1e15_Cond;
jule::Bool _1bbdb2157_Str;
jule::Bool _1bbdb23ee_Slice;
jule::Bool _1bbdb26a7_Assign;
jule::Bool _1bbdb2960_Exceptional;
jule::Bool _1bbdb2c18_Iter;
jule::Bool _1bbdb2ec1_Dynamic;
jule::Bool _1bbee59a5_exprEnabled;
jule::Bool _1bbee5bb4_scopeEnabled;
jule::Array<jule::U64,12> _1bc0c0cb1_mdays;
jule::Str _1bbee9448_assignArgName;
jule::Ptr<_1ad9b8596_TypeKind> _1bc0cb75b_generalGCPtr;
jule::Slice<_1dd09e2e0_CaseRange> _1dd0980b9_CaseRanges;


inline jule::Bool _1dbaa825c_acceptRange_eq(_1dbaa825c_acceptRange *_self_, _1dbaa825c_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _1dbaebd3e_LittleEndian_eq(_1dbaebd3e_LittleEndian *_self_, _1dbaebd3e_LittleEndian _other_) { return true; }

inline jule::U32 static__1dbb126b2_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__1dbb130db_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _1dbb1671b_u128_eq(_1dbb1671b_u128 *_self_, _1dbb1671b_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1c064151a_group_eq(_1c064151a_group *_self_, _1c064151a_group _other_) {
	return 
		_1bc38ea41_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1c0641c57_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1c063e1c7__Map> static__1c063e78d_make(void) {
	return jule::new_ptr<_1c063e1c7__Map>(_1c063e1c7__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c064151a_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1c063e8e2_initData(_1c063e1c7__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _1dbc19412_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c064151a_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c064151a_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c065da32:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1dbc19621_newEmptyMetadata();
			}
			_iter_next_1c065da32:;
			++it;
			_1407_i++;
			goto _iter_begin_1c065da32;
		}
		_iter_end_1c065da32:;
	};
}



inline jule::U64 _1c063ea46_hash(_1c063e1c7__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1bc355034_toStr(_14616_k);;
	return _1dbb19b92_hash(_1db990188_StrBytes(_1473_bytes));;
}



inline void _1c063eb9a_rehash(_1c063e1c7__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1c063e8e2_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1c064151a_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1c064151a_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c064151a_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c064151a_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c066212e:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1dbc19621_newEmptyMetadata();
			}
			_iter_next_1c066212e:;
			++it;
			_1617_i++;
			goto _iter_begin_1c066212e;
		}
		_iter_end_1c066212e:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0661c88:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0663b14:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1c0663b14;
							};
							{
								(*(_1c064020b_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1c0663b14:;
						++it;
						_1678_s++;
						goto _iter_begin_1c0663b14;
					}
					_iter_end_1c0663b14:;
				};
			}
			_iter_next_1c0661c88:;
			++it;
			_1667_g++;
			goto _iter_begin_1c0661c88;
		}
		_iter_end_1c0661c88:;
	};
}



inline jule::I64 _1c063ecee_nextSize(_1c063e1c7__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1c063ee53_lookup(jule::Ptr<_1c063e1c7__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1dbc199ea_splitHash(_1c063ea46_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1dbc19ce7_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1dbc18499_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1dbc18a71_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1c066a302:;
			}
			_iter_end_1c066a302:;;
			_2018_matches=_1dbc187a7_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1c0667002:;
	}
	_iter_end_1c0667002:;;
}



inline jule::Bool _1c06400a7_get(jule::Ptr<_1c063e1c7__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1c063ee53_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1c064020b_set(_1c063e1c7__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1c063eb9a_rehash(_self_, _1c063ecee_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1dbc199ea_splitHash(_1c063ea46_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1dbc19ce7_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1dbc18499_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1dbc18a71_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1c0673140:;
			}
			_iter_end_1c0673140:;;
			_2488_matches=_1dbc187a7_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1dbc18a71_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1c06720d9:;
	}
	_iter_end_1c06720d9:;;
}



inline jule::Bool _1c0640360_del(jule::Ptr<_1c063e1c7__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1dbc199ea_splitHash(_1c063ea46_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1dbc19ce7_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1dbc18499_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1dbc18a71_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1dbc187a7_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1c067ad29:;
			}
			_iter_end_1c067ad29:;;
			_2838_matches=_1dbc187a7_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1c0679aa3:;
	}
	_iter_end_1c0679aa3:;;
}



inline void _1c06404b4_clear(jule::Ptr<_1c063e1c7__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c06825c2:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0683040:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1c0683040:;
						++it;
						_3298_j++;
						goto _iter_begin_1c0683040;
					}
					_iter_end_1c0683040:;
				};
			}
			_iter_next_1c06825c2:;
			++it;
			_3287_i++;
			goto _iter_begin_1c06825c2;
		}
		_iter_end_1c06825c2:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c067a158:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1c064151a_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c0685691:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1c0685691:;
							++it;
							_3389_j++;
							goto _iter_begin_1c0685691;
						}
						_iter_end_1c0685691:;
					};
				};
			}
			_iter_next_1c067a158:;
			++it;
			_3357_i++;
			goto _iter_begin_1c067a158;
		}
		_iter_end_1c067a158:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1c0640618_len(jule::Ptr<_1c063e1c7__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1c064076c_cap(_1c063e1c7__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1c064a953_mapIterator _1c06408c1_iterator(jule::Ptr<_1c063e1c7__Map> _self_) {
	_1c064a953_mapIterator _3607_iterator = _1c064a953_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c064151a_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1c064aed6_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1c0689bd4__Map> static__1c068a201_make(void) {
	return jule::new_ptr<_1c0689bd4__Map>(_1c0689bd4__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c068bcc4_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1c068a355_initData(_1c0689bd4__Map* _self_, jule::I64 _13524_cap) {
	jule::I64 _1363_groups = _1dbc19412_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c068bcc4_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c068bcc4_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1ad7ea84b_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad7ea84b_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _1363_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c06a7350:;
		if (it != expr_end) {
			jule::I64 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1dbc19621_newEmptyMetadata();
			}
			_iter_next_1c06a7350:;
			++it;
			_1407_i++;
			goto _iter_begin_1c06a7350;
		}
		_iter_end_1c06a7350:;
	};
}



inline jule::U64 _1c068a4a9_hash(_1c0689bd4__Map* _self_, jule::Ptr<_1ad7ea84b_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1be264837_toStr(_14616_k);;
	return _1dbb19b92_hash(_1db990188_StrBytes(_1473_bytes));;
}



inline void _1c068a60d_rehash(_1c0689bd4__Map* _self_, jule::I64 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1c068a355_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1c068bcc4_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1c068bcc4_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c068bcc4_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c068bcc4_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1ad7ea84b_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad7ea84b_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c06aa94c:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1dbc19621_newEmptyMetadata();
			}
			_iter_next_1c06aa94c:;
			++it;
			_1617_i++;
			goto _iter_begin_1c06aa94c;
		}
		_iter_end_1c06aa94c:;
	};
	(*(_self_))._field_limit=({ jule::I64 __jule_x = _15122_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c06aa5a6:;
		if (it != expr_end) {
			jule::I64 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c06ac432:;
					if (it != expr_end) {
						jule::I64 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1c06ac432;
							};
							{
								(*(_1c068ab6e_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1c06ac432:;
						++it;
						_1678_s++;
						goto _iter_begin_1c06ac432;
					}
					_iter_end_1c06ac432:;
				};
			}
			_iter_next_1c06aa5a6:;
			++it;
			_1667_g++;
			goto _iter_begin_1c06aa5a6;
		}
		_iter_end_1c06aa5a6:;
	};
}



inline jule::I64 _1c068a762_nextSize(_1c0689bd4__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1c068a8b6_lookup(jule::Ptr<_1c0689bd4__Map> _self_, jule::Ptr<_1ad7ea84b_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1dbc199ea_splitHash(_1c068a4a9_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1dbc19ce7_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1dbc18499_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1dbc18a71_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_keys[static_cast<jule::I64>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I64>(_1997_g)]._field_values[static_cast<jule::I64>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1c06b3b20:;
			}
			_iter_end_1c06b3b20:;;
			_2018_matches=_1dbc187a7_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1c06b0820:;
	}
	_iter_end_1c06b0820:;;
}



inline jule::Slice<jule::Uintptr> _1c068aa1a_get(jule::Ptr<_1c0689bd4__Map> _self_, jule::Ptr<_1ad7ea84b_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1c068a8b6_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1c068ab6e_set(_1c0689bd4__Map* _self_, jule::Ptr<_1ad7ea84b_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1c068a60d_rehash(_self_, _1c068a762_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1dbc199ea_splitHash(_1c068a4a9_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1dbc19ce7_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1dbc18499_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1dbc18a71_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1c06bb95d:;
			}
			_iter_end_1c06bb95d:;;
			_2488_matches=_1dbc187a7_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1dbc18a71_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_keys[static_cast<jule::I64>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I64>(_2467_g)]._field_values[static_cast<jule::I64>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I64>(_2467_g)][static_cast<jule::I64>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1c06ba907:;
	}
	_iter_end_1c06ba907:;;
}



inline jule::Bool _1c068acc3_del(jule::Ptr<_1c0689bd4__Map> _self_, jule::Ptr<_1ad7ea84b_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1dbc199ea_splitHash(_1c068a4a9_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1dbc19ce7_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1dbc18499_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1dbc18a71_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1dbc187a7_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)][static_cast<jule::I64>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Ptr<_1ad7ea84b_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_keys[static_cast<jule::I64>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I64>(_2817_g)]._field_values[static_cast<jule::I64>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1c06c4647:;
			}
			_iter_end_1c06c4647:;;
			_2838_matches=_1dbc187a7_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I64>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1c06c33c1:;
	}
	_iter_end_1c06c33c1:;;
}



inline void _1c068ae27_clear(jule::Ptr<_1c0689bd4__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c06cade0:;
		if (it != expr_end) {
			jule::I64 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c06cb85d:;
					if (it != expr_end) {
						jule::I64 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1c06cb85d:;
						++it;
						_3298_j++;
						goto _iter_begin_1c06cb85d;
					}
					_iter_end_1c06cb85d:;
				};
			}
			_iter_next_1c06cade0:;
			++it;
			_3287_i++;
			goto _iter_begin_1c06cade0;
		}
		_iter_end_1c06cade0:;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c06c3976:;
		if (it != expr_end) {
			jule::I64 _3357_i = it - expr->begin();
			{
				_1c068bcc4_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c06cdeae:;
						if (it != expr_end) {
							jule::I64 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1c06cdeae:;
							++it;
							_3389_j++;
							goto _iter_begin_1c06cdeae;
						}
						_iter_end_1c06cdeae:;
					};
				};
			}
			_iter_next_1c06c3976:;
			++it;
			_3357_i++;
			goto _iter_begin_1c06c3976;
		}
		_iter_end_1c06c3976:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1c068b07b_len(jule::Ptr<_1c0689bd4__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I64 _1c068b1d0_cap(_1c0689bd4__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1c069422c_mapIterator _1c068b334_iterator(jule::Ptr<_1c0689bd4__Map> _self_) {
	_1c069422c_mapIterator _3607_iterator = _1c069422c_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c068bcc4_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1c06947b0_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1c064aed6_init(_1c064a953_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1c064151a_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1c0640618_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_205e3dcd2_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1c064b13a_next(_1c064a953_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1c0653ac1;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1c0653ac1:;
			}
			_iter_end_1c0653ac1:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1c0652d56:;
	}
	_iter_end_1c0652d56:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1c06947b0_init(_1c069422c_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1c068bcc4_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1c068b07b_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_205e3dcd2_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1ad7ea84b_FnIns__jule_tuple_psuintptr _1c0694914_next(_1c069422c_mapIterator* _self_) {
	__jule_tuple_px_1ad7ea84b_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1c069c3de;
					};
					jule::Ptr<_1ad7ea84b_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1c069c3de:;
			}
			_iter_end_1c069c3de:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1c069b674:;
	}
	_iter_end_1c069b674:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}








inline jule::Bool _1dd09dce5_foldPair_eq(_1dd09dce5_foldPair *_self_, _1dd09dce5_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _1dd09e2e0_CaseRange_eq(_1dd09e2e0_CaseRange *_self_, _1dd09e2e0_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_1bc3dd100_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _1dd09e796_Range16_eq(_1dd09e796_Range16 *_self_, _1dd09e796_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _1dd09ecc4_Range32_eq(_1dd09ecc4_Range32 *_self_, _1dd09ecc4_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline _1dd0b6912_Builder static__1dd0b74d4_New(jule::I64 _1516_cap) {
	if ((_1516_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("strings: Builder.New: cap < 0", 29) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:4"));;
	};
	return _1dd0b6912_Builder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1516_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline void _1dd0c0b2a_Write(_1dd0b6912_Builder* _self_, jule::Slice<jule::U8> _2521_b) {
	((*(_self_))._field_buf).append(_2521_b);;
}



inline void _1dd0c0dd3_WriteStr(_1dd0b6912_Builder* _self_, jule::Str _3024_s) {
	((*(_self_))._field_buf).append(_3024_s);;
}



inline void _1dd0c118b_WriteByte(_1dd0b6912_Builder* _self_, jule::U8 _3525_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3525_b); };
}



inline jule::Str _1dd0c16ca_Str(_1dd0b6912_Builder* _self_) {
	jule::Str _507_s = _1db9906d8_StrFromBytes((*(_self_))._field_buf);;
	_1dd0c18c8_Clear(_self_);
	return _507_s;;
}



inline void _1dd0c18c8_Clear(_1dd0b6912_Builder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _1dd0c1b5e_Len(_1dd0b6912_Builder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1dd0c217b_Buf(_1dd0b6912_Builder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1dd0c2434_SetBuf(_1dd0b6912_Builder* _self_, jule::Slice<jule::U8> _7733_buf) {
	(*(_self_))._field_buf=_7733_buf;
}







inline jule::U8 _1dd0c3ea2_index(_1dd0c3a1d_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _1dd0c425a_append(_1dd0c3a1d_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1dd0c44e1_string(_1dd0c3a1d_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1db99041e_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _1dbd04750_DirEntry_eq(_1dbd04750_DirEntry *_self_, _1dbd04750_DirEntry _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		(_self_->_field_Stat == _self_->_field_Stat);
}






inline jule::Bool _1dbd049d6_Directory_eq(_1dbd049d6_Directory *_self_, _1dbd049d6_Directory _other_) { return true; }

inline jule::Exceptional<jule::Slice<jule::Ptr<_1dbd04750_DirEntry>>> static__1dd0c8171_Read(jule::Str _1517_path) {
	jule::Slice<jule::Ptr<_1dbd04750_DirEntry>> __jule_func_result;
	jule::Slice<jule::U8> _163_s = _1db93a0cd_StrToBytes(_1517_path);;
	DIR* _177_dir = _1db94a660_Opendir((&(_163_s[0LL])));;
	if ((_177_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1dbd04750_DirEntry>>>{.error=jule::Any(_1dbd02ad3_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _224_dirent = _1db94a83b_Readdir(_177_dir);;
			if ((_224_dirent == nullptr)) {
				goto _iter_end_1bd138c3a;
			};
			jule::Str _264_name = _1db939d47_BytePtrToStr(((jule::U8*)((*(_224_dirent)).d_name)));;
			jule::Ptr<_1dbd08545_Status> _278_stat = ({
				auto except = static__1dbd05322_Of(_1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = _264_name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_1dbd04750_DirEntry>>>{.error=except.error};
				} jule::Ptr<_1dbd08545_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_1dbd04750_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_1dbd04750_DirEntry>(_1dbd04750_DirEntry{._field_Name=_264_name, ._field_Stat=_278_stat})); };
		}
	_iter_next_1bd138c3a:;
	}
	_iter_end_1bd138c3a:;;
	_1db94aad3_Closedir(_177_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1dbd04750_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1dd0c83a2_Create(jule::Str _4019_path) {
	jule::Slice<jule::U8> _443_s = _1db93a0cd_StrToBytes(_4019_path);;
	if ((_1db94b4da_Mkdir((&(_443_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1dbd02ad3_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1dd0c85d3_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U8> _543_s = _1db93a0cd_StrToBytes(_5319_path);;
	if ((_1db94b7a4_Rmdir((&(_543_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1dbd02ad3_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _1dbd064aa_File_eq(_1dbd064aa_File *_self_, _1dbd064aa_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Exceptional<jule::Ptr<_1dbd064aa_File>> static__1dbd036a5_Open(jule::Str _2017_path, jule::I64 _2028_flag, jule::I64 _2041_mode) {
	jule::Slice<jule::U8> _213_s = _1db93a0cd_StrToBytes(_2017_path);;
	jule::I64 _223_handle = _1db949ce1_Open((&(_213_s[0LL])), _2028_flag, _2041_mode);;
	if ((_223_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1dbd064aa_File>>{.error=jule::Any(_1dbd02ad3_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_1dbd064aa_File>>{.result=static__1dbd0690b_New(static_cast<jule::Uintptr>(_223_handle))};;
}



inline jule::VoidExceptional static__1dbd038d6_Remove(jule::Str _3319_path) {
	jule::Slice<jule::U8> _343_s = _1db93a0cd_StrToBytes(_3319_path);;
	if ((_1db94ba6d_Unlink((&(_343_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1dbd02ad3_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1dbd03d6a_Write(_1dbd064aa_File* _self_, jule::Slice<jule::U8> _4821_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_4821_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_1dbaad9b0_handleRW(&(_4821_buf));
	__jule_func_result=_1db95cae5_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_4821_buf[0LL])), static_cast<jule::U64>(_4821_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_1dbd02ad3_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _1dbd041ab_Read(_1dbd064aa_File* _self_, jule::Slice<jule::U8> _6924_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_6924_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_1dbaad9b0_handleRW(&(_6924_buf));
	__jule_func_result=_1db95c364_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_6924_buf[0LL])), static_cast<jule::U64>(_6924_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_1dbd02ad3_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Ptr<_1dbd064aa_File> static__1dbd0690b_New(jule::Uintptr _4516_handle) {
	return jule::new_ptr<_1dbd064aa_File>(_1dbd064aa_File{._field_handle=_4516_handle});;
}



inline jule::Exceptional<jule::Ptr<_1dbd064aa_File>> static__1dbd06bc5_Create(jule::Str _5519_path) {
	return static__1dbd036a5_Open(_5519_path, static_cast<jule::I64>(1538LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1dbd06e8e_Read(jule::Str _6717_path) {
	jule::Ptr<_1dbd08545_Status> _683_s = ({
		auto except = static__1dbd05322_Of(_6717_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1dbd08545_Status>(nullptr);});
	});;
	if ((!(_1dbd08bd8_IsReg(_683_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _737_sz = static_cast<jule::I64>(_1dbd08e6e_Size(_683_s));;
	if ((_737_sz != static_cast<jule::I64>(_1dbd08e6e_Size(_683_s)))) {
		_737_sz=0LL;
	};
	if ((_737_sz < 512LLU)) {
		_737_sz=512LLU;
	};
	jule::Ptr<_1dbd064aa_File> _867_f = ({
		auto except = static__1dbd036a5_Open(_6717_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1dbd064aa_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _877_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_737_sz, _737_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _887_n = 0LL;;
	while ((_887_n < _737_sz)) {
		{
			jule::I64 _904_rn = ({
				auto except = _1dbd041ab_Read(_867_f.ptr(), _877_buf.slice(_887_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_904_rn == 0LL)) {
				goto _iter_end_1bd144d9a;
			};
			_887_n+=_904_rn;
		}
	_iter_next_1bd144d9a:;
	}
	_iter_end_1bd144d9a:;;
	({
		auto except = _1dbd07a72_Close(_867_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_877_buf.slice(0LL, _887_n)};;
}



inline jule::VoidExceptional static__1dbd07335_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm) {
	jule::Ptr<_1dbd064aa_File> _1067_f = ({
		auto except = static__1dbd036a5_Open(_10518_path, static_cast<jule::I64>(1537LL), _10543_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_1dbd064aa_File>(nullptr);});
	});;
	jule::I64 _1077_n = 0LL;;
	while ((_1077_n < _10529_data.len())) {
		{
			_1077_n+=({
				auto except = _1dbd03d6a_Write(_1067_f.ptr(), _10529_data.slice(_1077_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1bd14a2ac:;
	}
	_iter_end_1bd14a2ac:;;
	return _1dbd07a72_Close(_1067_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1dbd07a72_Close(_1dbd064aa_File* _self_) {
	if ((_1db95c73d_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1dbd02ad3_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _1dbd08545_Status_eq(_1dbd08545_Status *_self_, _1dbd08545_Status _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Exceptional<jule::Ptr<_1dbd08545_Status>> static__1dbd05322_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<jule::Ptr<_1dbd08545_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	struct stat _167_handle = (struct stat){};;
	jule::Slice<jule::U8> _173_s = _1db93a0cd_StrToBytes(_1215_path);;
	jule::I64 _183_code = _1db9498b2_Stat((&(_173_s[0LL])), (&(_167_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1dbd08545_Status>>{.error=jule::Any(_1dbd02ad3_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_1dbd08545_Status> _227_stat = jule::new_ptr<_1dbd08545_Status>(_1dbd08545_Status{._field_mode=0LL, ._field_size=0});;
	(*_227_stat.alloc)._field_size=_167_handle.st_size;
	if (((_167_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_167_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_1dbd08545_Status>>{.result=_227_stat};;
}



inline jule::Bool _1dbd08952_IsDir(_1dbd08545_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _1dbd08bd8_IsReg(_1dbd08545_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _1dbd08e6e_Size(_1dbd08545_Status* _self_) {
	return (*(_self_))._field_size;;
}








inline jule::Bool _1dd462bd1_cmdAttrs_eq(_1dd462bd1_cmdAttrs *_self_, _1dd462bd1_cmdAttrs _other_) {
	return 
		(_self_->_field_pid == _other_._field_pid);
}






inline jule::Bool _1dd356476_Log_eq(_1dd356476_Log *_self_, _1dd356476_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1ab14596d_floatInfo_eq(_1ab14596d_floatInfo *_self_, _1ab14596d_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1ab15861d_leftCheat_eq(_1ab15861d_leftCheat *_self_, _1ab15861d_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1ab159135_decimal_eq(_1ab159135_decimal *_self_, _1ab159135_decimal _other_) {
	return 
		_1bd438237_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1ab150aee_set(_1ab159135_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1bd62d284:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1bd62d41b:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1bd62d21d:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1bd62ed68:;
					{
						goto _iter_next_1bd62e5e8;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1bd62ee12:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1bd62e5e8;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1bd62ee78:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1bd62e5e8;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1bd62e5e8;
					}
				}
				_match_end_1bd62ec36:;
			};
			goto _iter_end_1bd62e5e8;
		}
	_iter_next_1bd62e5e8:;
	}
	_iter_end_1bd62e5e8:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1ab14b259_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1bd635c92;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1bd635c92:;
		}
		_iter_end_1bd635c92:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1ab150e40_floatBits(_1ab159135_decimal* _self_, _1ab14596d_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1bd6447d9;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1bd64383d;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1bd6447d9;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1ab15078b_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1ab15078b_powtab[(*(_self_))._field_dp];
			};
			_1ab1597c8_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1bd63b14e:;
	}
	_iter_end_1bd63b14e:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1ab15078b_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1ab15078b_powtab[(-((*(_self_))._field_dp))];
			};
			_1ab1597c8_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1bd63969c:;
	}
	_iter_end_1bd63969c:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1ab1597c8_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_1bd64383d;
	};
	_1ab1597c8_shift(_self_, static_cast<jule::I64>((jule::U64)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1ab15a378_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_1bd64383d;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1bd6447d9;
	_julec_label_1bd64383d:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((jule::U64)((jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1bd6447d9:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1ab159520_assign(_1ab159135_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1bd64705b:;
	}
	_iter_end_1bd64705b:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1bd6479c9:;
	}
	_iter_end_1bd6479c9:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1ab15a983_trim(_self_);
}



inline void _1ab1597c8_shift(_1ab159135_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1bd649954:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1bd6499ed:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1ab15b4cd_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1bd64a603:;
				}
				_iter_end_1bd64a603:;;
				_1ab15b4cd_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1bd649a64:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1ab15ac6e_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1bd64a526:;
				}
				_iter_end_1bd64a526:;;
				_1ab15ac6e_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1bd6497de:;
	};
}



inline void _1ab159a81_roundDown(_1ab159135_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1ab15a983_trim(_self_);
}



inline void _1ab159d39_roundUp(_1ab159135_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1bd64d9ad:;
	}
	_iter_end_1bd64d9ad:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1ab15a0e2_round(_1ab159135_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1ab15b852_shouldRoundUp(_self_, _23221_nd)) {
		_1ab159d39_roundUp(_self_, _23221_nd);
	} else {
		_1ab159a81_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1ab15a378_roundedInteger(_1ab159135_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1bd651917:;
	}
	_iter_end_1bd651917:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1bd653919:;
	}
	_iter_end_1bd653919:;;
	if (_1ab15b852_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}








inline jule::Bool _1dd49a07b_AnsiEscape_eq(_1dd49a07b_AnsiEscape *_self_, _1dd49a07b_AnsiEscape _other_) { return true; }

inline void static__1dd498ee2_Reset(void) {
	jule::out(_1bc355034_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__1dd49a268_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::out(_1bc355034_toStr(_1918_escape));
	jule::out(_1bc355034_toStr(_1931_text));
	static__1dd498ee2_Reset();
}








inline jule::Bool _1ab15e668_Logger_eq(_1ab15e668_Logger *_self_, _1ab15e668_Logger _other_) { return true; }

inline void static__1ab15e965_LogFlat(_1dd356476_Log* _1421_l) {
	jule::outln(_1bc355034_toStr((*(_1421_l))._field_Text));
}



inline void static__1ab15eb96_LogError(_1dd356476_Log* _1922_l) {
	jule::out(_1bc355034_toStr(jule::Str::lit("\033[31m", 5)));
	jule::out(_1bc355034_toStr(jule::Str::lit("error: ", 7)));
	jule::out(_1bc355034_toStr((*(_1922_l))._field_Text));
	static__1dd498ee2_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::out(_1bc355034_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::out(_1bc355034_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::out(_1bc355034_toStr(jule::Str::lit(":", 1)));
		jule::out(_1bc355034_toStr(_1ab15d6ab_Itoa((*(_1922_l))._field_Row)));
		jule::out(_1bc355034_toStr(jule::Str::lit(":", 1)));
		jule::out(_1bc355034_toStr(_1ab15d6ab_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1dd0aa791_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1dd0a931c_Replace(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1), -1LL);
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::out(_1bc355034_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1ab15d6ab_Itoa((*(_1922_l))._field_Row);;
		jule::out(_1bc355034_toStr(_434_row));
		jule::out(_1bc355034_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1bc355034_toStr(_388_line));
		jule::out(_1bc355034_toStr(jule::Str::lit("\n  ", 3)));
		jule::out(_1bc355034_toStr(_1dd0a3613_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::out(_1bc355034_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1bc355034_toStr(_1dd0a3613_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::out(_1bc355034_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::out(_1bc355034_toStr(jule::Str::lit("\n  ", 3)));
			jule::out(_1bc355034_toStr(_1dd0a3613_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::out(_1bc355034_toStr(jule::Str::lit(" | ", 3)));
			static__1dd49a268_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out(_1bc355034_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::outln(_1bc355034_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1ab15edc7_Log(_1dd356476_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1bd67681b:;
			{
				static__1ab15e965_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1bd676ad5:;
			{
				static__1ab15eb96_LogError(_6417_l);
			}
		}
		_match_end_1bd6769d6:;
	};
}



inline void static__1ab160108_PrintLogs(jule::Slice<_1dd356476_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd676ba1:;
		if (it != expr_end) {
			_1dd356476_Log *_7510_l = it;
			{
				static__1ab15edc7_Log(_7510_l);
			}
			_iter_next_1bd676ba1:;
			++it;
			goto _iter_begin_1bd676ba1;
		}
		_iter_end_1bd676ba1:;
	};
	jule::out(_1bc355034_toStr(jule::Str::lit("=== ", 4)));
	jule::out(_1bc355034_toStr(_1ab15d6ab_Itoa((*(_7423_logs)).len())));
	jule::outln(_1bc355034_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1ad6ceb70_Token_eq(_1ad6ceb70_Token *_self_, _1ad6ceb70_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1ad6d0027_Prec(_1ad6ceb70_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bd6d877e:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bd6d85c5:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bd6d863b:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1bd6d87e5:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1bd6d886c:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1bd6d80a8:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bd6d84e8:;
	};
}







inline jule::Ptr<_1ad6d5527_Fileset> static__1ad6d5989_New(jule::Str _1616_path) {
	return jule::new_ptr<_1ad6d5527_Fileset>(_1ad6d5527_Fileset{._field_Path=_1616_path, ._field_Data=jule::Slice<jule::U8>(nullptr), ._field_Tokens=jule::Slice<jule::Ptr<_1ad6ceb70_Token>>(nullptr)});;
}



inline void _1ad6d5c42_Fill(_1ad6d5527_Fileset* _self_, jule::Slice<jule::U8> _2324_data) {
	(*(_self_))._field_Data=_2324_data;
}



inline jule::Str _1ad6d5ec8_Dir(_1ad6d5527_Fileset* _self_) {
	return _1dd0c5e82_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1ad6d625e_Name(_1ad6d5527_Fileset* _self_) {
	return _1dd0c5aa8_Base((*(_self_))._field_Path);;
}



inline jule::Str _1ad6d6836_GetRow(_1ad6d5527_Fileset* _self_, jule::I64 _4418_row) {
	jule::I64 _457_n = 0LL;;
	jule::I64 _467_lineStart = 0LL;;
	jule::I64 _477_i = 0LL;;
	for (; (_477_i < (*(_self_))._field_Data.len()); (_477_i)++) {
		{
			if (((*(_self_))._field_Data[_477_i] != '\n')) {
				goto _iter_next_1bd6de037;
			};
			(_457_n)++;
			if ((_457_n == _4418_row)) {
				return __jule_bytesToStr((*(_self_))._field_Data.slice(_467_lineStart, _477_i));;
			};
			_467_lineStart=(_477_i + 1LL);
		}
	_iter_next_1bd6de037:;
	}
	_iter_end_1bd6de037:;;
	return jule::Str();;
}








inline jule::Bool _1ad6d7529_kindPair_eq(_1ad6d7529_kindPair *_self_, _1ad6d7529_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1ad6ddac4_pushErr(_1ad6dd50d_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44743_args) {
	{ jule::Slice<_1dd356476_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ad6d82c7_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44723_fmt, _44743_args)); };
}



inline void _1ad6de135_lex(_1ad6dd50d_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1ad6e1357_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1ad6ceb70_Token> _4628_token = _1ad6e2842_token(_self_);;
			if (((*(_4628_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1ad6ceb70_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4628_token); };
			};
		}
	_iter_next_1bd71c021:;
	}
	_iter_end_1bd71c021:;;
}



inline jule::Str _1ad6de476_id(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _47119_ln) {
	if (((*(_47119_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4753_r;
	jule::I64 _47510_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa8e3e_DecodeRune((*(_47119_ln)));
		_4753_r = __jule_assign_result.__jule_result_arg0;
		_47510_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4753_r != '_') && (!(_1ad6d339e_IsLetter(_4753_r))))) {
		return jule::Str();;
	};
	while ((_47510_i < (*(_47119_ln)).len())) {
		{
			jule::I32 _4814_pr;
			jule::I64 _4818_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa8e3e_DecodeRune((*(_47119_ln)).slice(_47510_i));
				_4814_pr = __jule_assign_result.__jule_result_arg0;
				_4818_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4814_pr != '_') && (!(_1ad6d3adb_IsDecimal(static_cast<jule::U8>(_4814_pr))))) && (!(_1ad6d339e_IsLetter(_4814_pr))))) {
				(*(_self_))._field_pos+=_47510_i;
				return __jule_bytesToStr((*(_47119_ln)).slice(0LL, _47510_i));;
			};
			_47510_i+=_4818_n;
		}
	_iter_next_1bd720596:;
	}
	_iter_end_1bd720596:;;
	(*(_self_))._field_pos+=(*(_47119_ln)).len();
	return __jule_bytesToStr((*(_47119_ln)));;
}



inline jule::Slice<jule::U8> _1ad6de70c_resume(_1ad6dd50d_lex* _self_) {
	jule::I64 _4967_i = (*(_self_))._field_pos;;
	for (; (_4967_i < (*((*(_self_))._field_file))._field_Data.len()); (_4967_i)++) {
		{
			jule::I32 _4984_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4967_i]);;
			if (_1ad6d2da4_IsSpace(_4984_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4984_r };
					
					if (_match_expr == '\n') {
						_case_begin_1bd72448a:;
						{
							_1ad6e1357_newLine(_self_);
						}
					}
					else {
						_case_begin_1bd723d19:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1bd724105:;
				};
				goto _iter_next_1bd722b81;
			};
			jule::I64 _5108_j = _4967_i;;
			for (; (_5108_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5108_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5108_j] == '\n')) {
						goto _iter_end_1bd7238c9;
					};
				}
			_iter_next_1bd7238c9:;
			}
			_iter_end_1bd7238c9:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4967_i, _5108_j);;
		}
	_iter_next_1bd722b81:;
	}
	_iter_end_1bd722b81:;;
	return nullptr;;
}



inline void _1ad6de9b5_lexLineComment(_1ad6dd50d_lex* _self_, jule::Ptr<_1ad6ceb70_Token>* _52135_token) {
	jule::I64 _5223_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5254_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5254_r == '\n') || (_5254_r == '\r'))) {
				goto _iter_end_1bd7269ed;
			};
		}
	_iter_next_1bd7269ed:;
	}
	_iter_end_1bd7269ed:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52135_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52135_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5223_start, (*(_self_))._field_pos));
	};
}



inline void _1ad6dec6d_lexRangeComment(_1ad6dd50d_lex* _self_, jule::Ptr<_1ad6ceb70_Token>* _53636_token) {
	jule::I64 _5373_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5404_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5404_r == '\r')) {
				goto _iter_next_1bd72a194;
			};
			if ((_5404_r == '\n')) {
				_1ad6e1357_newLine(_self_);
				goto _iter_next_1bd72a194;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5404_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53636_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53636_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5373_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1bd72a194:;
	}
	_iter_end_1bd72a194:;;
	_1ad6ddac4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1ad6e00ae_num(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _56420_txt) {
	jule::Str __jule_func_result;
	if (((*(_56420_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1ad6dbd25_hexNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bd731e7b;
	};
	__jule_func_result=_1ad6dbb49_octalNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bd731e7b;
	};
	__jule_func_result=_1ad6da3d9_binaryNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bd731e7b;
	};
	__jule_func_result=_1ad6da120_commonNum(_56420_txt);
	_julec_label_1bd731e7b:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1ad6e0400_escapeSeq(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _58626_txt) {
	jule::Str _5877_seq = jule::Str();;
	if (((*(_58626_txt)).len() < 2LL)) {
		goto _julec_label_1bd73aacd;
	};
	{
		auto &_match_expr{ (*(_58626_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1bd733b2b:;
			{
				(*(_self_))._field_pos+=2LL;
				return __jule_bytesToStr((*(_58626_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bd7339d8:;
			{
				_5877_seq=_1ad6dc441_bigUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1bd733a4e:;
			{
				_5877_seq=_1ad6dc70a_littleUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bd7336b9:;
			{
				_5877_seq=_1ad6dc9c4_hexByteEscape(_58626_txt);
			}
		}
		else {
			_case_begin_1bd732e8d:;
			{
				_5877_seq=_1ad6dcc8d_byteEscape(_58626_txt);
			}
		}
		_match_end_1bd733543:;
	};
	_julec_label_1bd73aacd:;
	if ((_5877_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1ad6ddac4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5877_seq.len();
	return _5877_seq;;
}



inline jule::Str _1ad6e07eb_getRune(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw) {
	if (((!(_61637_raw)) && ((*(_61624_txt))[0LL] == '\\'))) {
		return _1ad6e0400_escapeSeq(_self_, _61624_txt);;
	};
	jule::I32 _6203_r;
	jule::I64 _6206_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa8e3e_DecodeRune((*(_61624_txt)));
		_6203_r = __jule_assign_result.__jule_result_arg0;
		_6206_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6206_n;
	return __jule_strFromRune(_6203_r);;
}



inline jule::Str _1ad6e0b3c_lexRune(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _62524_txt) {
	_1dd0b6912_Builder _6267_run = static__1dd0b74d4_New(8LL);;
	_1dd0c118b_WriteByte(&_6267_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _6297_n = 0LL;;
	jule::I64 _6307_i = 1LL;;
	for (; (_6307_i < (*(_62524_txt)).len()); (_6307_i)++) {
		{
			if (((*(_62524_txt))[_6307_i] == '\r')) {
				goto _iter_next_1bd73e8d4;
			};
			if (((*(_62524_txt))[_6307_i] == '\n')) {
				_1ad6ddac4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1ad6e1357_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6424_part = (*(_62524_txt)).slice(_6307_i);;
			jule::Str _6434_r = _1ad6e07eb_getRune(_self_, &(_6424_part), false);;
			_1dd0c0dd3_WriteStr(&_6267_run, _6434_r);
			(*(_self_))._field_column+=_1dbaaac32_RuneCountStr(_6434_r);
			if (_6434_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1bd73e8d4;
			};
			if ((_6434_r.len() > 1LL)) {
				_6307_i+=(_6434_r.len() - 1LL);
			};
			(_6297_n)++;
		}
	_iter_next_1bd73e8d4:;
	}
	_iter_end_1bd73e8d4:;;
	if ((_6297_n == 0LL)) {
		_1ad6ddac4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6297_n > 1LL)) {
		_1ad6ddac4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _1dd0c16ca_Str(&_6267_run);;
}



inline jule::Str _1ad6e0dc3_lexStr(_1ad6dd50d_lex* _self_) {
	_1dd0b6912_Builder _6667_s = static__1dd0b74d4_New(16LL);;
	jule::U8 _6673_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6693_raw = (_6673_mark == '`');;
	_1dd0c118b_WriteByte(&_6667_s, _6673_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6744_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6744_ch == '\r')) {
				goto _iter_next_1bd745720;
			};
			if ((_6744_ch == '\n')) {
				_1ad6e1357_newLine(_self_);
				if ((!(_6693_raw))) {
					_1ad6ddac4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6868_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6874_r = _1ad6e07eb_getRune(_self_, &(_6868_part), _6693_raw);;
			_1dd0c0dd3_WriteStr(&_6667_s, _6874_r);
			(*(_self_))._field_column+=_1dbaaac32_RuneCountStr(_6874_r);
			if ((_6744_ch == _6673_mark)) {
				goto _iter_end_1bd745720;
			};
		}
	_iter_next_1bd745720:;
	}
	_iter_end_1bd745720:;;
	return _1dd0c16ca_Str(&_6667_s);;
}



inline void _1ad6e1357_newLine(_1ad6dd50d_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1ad6e18b8_isOp(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1ad6ceb70_Token>* _70758_t) {
	if ((!(_1ad6d8690_bytesHasPrefix(_70721_txt, _70734_kind)))) {
		return false;;
	};
	(*((*(_70758_t))))._field_Kind=_70734_kind;
	(*((*(_70758_t))))._field_Id=_70745_id;
	(*(_self_))._field_pos+=_70734_kind.len();
	return true;;
}



inline jule::Bool _1ad6e1cb4_lexBasicOps(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1ad6ceb70_Token>* _71745_tok) {
	{
		auto expr = &(_1ad6d7c88_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd74bdca:;
		if (it != expr_end) {
			_1ad6d7529_kindPair *_71810_pair = it;
			{
				if (_1ad6e18b8_isOp(_self_, &(_71727_txt), (*(_71810_pair))._field_kind, (*(_71810_pair))._field_id, _71745_tok)) {
					return true;;
				};
			}
			_iter_next_1bd74bdca:;
			++it;
			goto _iter_begin_1bd74bdca;
		}
		_iter_end_1bd74bdca:;
	};
	return false;;
}



inline jule::Bool _1ad6e21b0_lexId(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1ad6ceb70_Token>* _72640_t) {
	jule::Str _7273_lex = _1ad6de476_id(_self_, _72622_txt);;
	if ((_7273_lex).empty()) {
		return false;;
	};
	(*((*(_72640_t))))._field_Kind=_7273_lex;
	(*((*(_72640_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1ad6e25ab_lexNum(_1ad6dd50d_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1ad6ceb70_Token>* _73641_t) {
	jule::Str _7373_lex = _1ad6e00ae_num(_self_, _73623_txt);;
	if ((_7373_lex).empty()) {
		return false;;
	};
	(*((*(_73641_t))))._field_Kind=_7373_lex;
	(*((*(_73641_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1ad6ceb70_Token> _1ad6e2842_token(_1ad6dd50d_lex* _self_) {
	jule::Ptr<_1ad6ceb70_Token> _7487_t = jule::new_ptr<_1ad6ceb70_Token>(_1ad6ceb70_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7533_txt = _1ad6de70c_resume(_self_);;
	if ((_7533_txt == nullptr)) {
		return _7487_t;;
	};
	(*(_7487_t))._field_Column=(*(_self_))._field_column;
	(*_7487_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1ad6e25ab_lexNum(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1bd752b06:;
			{
				goto _match_end_1bd75282b;
			}
		}
		else if ((_7533_txt[0LL] == '\'')) {
			_case_begin_1bd752b6c:;
			{
				(*_7487_t.alloc)._field_Kind=_1ad6e0b3c_lexRune(_self_, &(_7533_txt));
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (((_7533_txt[0LL] == '\"') || (_7533_txt[0LL] == '`'))) {
			_case_begin_1bd752bd3:;
			{
				(*_7487_t.alloc)._field_Kind=_1ad6e0dc3_lexStr(_self_);
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (_1ad6d8690_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1bd752c49:;
			{
				_1ad6de9b5_lexLineComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1ad6d8690_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1bd752cb0:;
			{
				_1ad6dec6d_lexRangeComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1ad6e1cb4_lexBasicOps(_self_, _7533_txt, &(_7487_t))) {
			_case_begin_1bd752d26:;
			{
				goto _match_end_1bd75282b;
			}
		}
		else if (_1ad6e21b0_lexId(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1bd754245:;
			{
				{
					auto expr = &(_1ad6d7958_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd7580b2:;
					if (it != expr_end) {
						_1ad6d7529_kindPair *_78511_pair = it;
						{
							if (((*(_78511_pair))._field_kind == (*_7487_t.alloc)._field_Kind)) {
								(*_7487_t.alloc)._field_Id=(*(_78511_pair))._field_id;
								goto _iter_end_1bd7580b2;
							};
						}
						_iter_next_1bd7580b2:;
						++it;
						goto _iter_begin_1bd7580b2;
					}
					_iter_end_1bd7580b2:;
				};
			}
		}
		else {
			_case_begin_1bd752a90:;
			{
				jule::I32 _7924_r;
				jule::I64 _7927_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa8e3e_DecodeRune(_7533_txt);
					_7924_r = __jule_assign_result.__jule_result_arg0;
					_7927_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1ad6ddac4_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7924_r, &__jule_any_type1); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7927_sz;
				return _7487_t;;
			}
		}
		_match_end_1bd75282b:;
	};
	(*(_self_))._field_column+=_1dbaaac32_RuneCountStr((*_7487_t.alloc)._field_Kind);
	return _7487_t;;
}












inline jule::Bool _1ad6e41b2_Node_eq(_1ad6e41b2_Node *_self_, _1ad6e41b2_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1ad6e51b3_TypeDecl_eq(_1ad6e51b3_TypeDecl *_self_, _1ad6e51b3_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1ad6e5e61_NamespaceTypeDecl_eq(_1ad6e5e61_NamespaceTypeDecl *_self_, _1ad6e5e61_NamespaceTypeDecl _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1ad6e625d_SptrTypeDecl_eq(_1ad6e625d_SptrTypeDecl *_self_, _1ad6e625d_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1ad6e65e3_SlcTypeDecl_eq(_1ad6e65e3_SlcTypeDecl *_self_, _1ad6e65e3_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1ad6e6bdc_PtrTypeDecl_eq(_1ad6e6bdc_PtrTypeDecl *_self_, _1ad6e6bdc_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1ad6e7083_IsUnsafe(_1ad6e6bdc_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1ad6e747e_ArrTypeDecl_eq(_1ad6e747e_ArrTypeDecl *_self_, _1ad6e747e_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1ad6e7825_AutoSized(_1ad6e747e_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1ad6e7bcc_MapTypeDecl_eq(_1ad6e7bcc_MapTypeDecl *_self_, _1ad6e7bcc_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1ad6e94e7_Expr_eq(_1ad6e94e7_Expr *_self_, _1ad6e94e7_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1ad6e97b1_RangeExpr_eq(_1ad6e97b1_RangeExpr *_self_, _1ad6e97b1_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ad6e9dbb_UseExpr_eq(_1ad6e9dbb_UseExpr *_self_, _1ad6e9dbb_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ad6ea482_LitExpr_eq(_1ad6ea482_LitExpr *_self_, _1ad6ea482_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1ad6ea85b_UnsafeExpr_eq(_1ad6ea85b_UnsafeExpr *_self_, _1ad6ea85b_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ad6ead12_IdentExpr_eq(_1ad6ead12_IdentExpr *_self_, _1ad6ead12_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1ad6eb5a4_UnaryExpr_eq(_1ad6eb5a4_UnaryExpr *_self_, _1ad6eb5a4_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ad6eb97d_VariadicExpr_eq(_1ad6eb97d_VariadicExpr *_self_, _1ad6eb97d_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ad6ebd57_CastExpr_eq(_1ad6ebd57_CastExpr *_self_, _1ad6ebd57_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ad6ec231_NamespaceExpr_eq(_1ad6ec231_NamespaceExpr *_self_, _1ad6ec231_NamespaceExpr _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1ad6ec60a_SubIdentExpr_eq(_1ad6ec60a_SubIdentExpr *_self_, _1ad6ec60a_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1ad6ecab1_BinaryExpr_eq(_1ad6ecab1_BinaryExpr *_self_, _1ad6ecab1_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1ad6ed5c8_Unhandled(_1ad6ed221_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1ad6ed85e_Ignored(_1ad6ed221_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}








inline jule::Bool _1ad6edc16_FieldExprPair_eq(_1ad6edc16_FieldExprPair *_self_, _1ad6edc16_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1ad700322_KeyValPair_eq(_1ad700322_KeyValPair *_self_, _1ad700322_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1ad7014aa_IndexingExpr_eq(_1ad7014aa_IndexingExpr *_self_, _1ad7014aa_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1ad701b1a_SlicingExpr_eq(_1ad701b1a_SlicingExpr *_self_, _1ad701b1a_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1ad7023bd_GenericDecl_eq(_1ad7023bd_GenericDecl *_self_, _1ad7023bd_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1ad702797_LabelSt_eq(_1ad702797_LabelSt *_self_, _1ad702797_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1ad702b71_GotoSt_eq(_1ad702b71_GotoSt *_self_, _1ad702b71_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1ad702e6d_FallSt_eq(_1ad702e6d_FallSt *_self_, _1ad702e6d_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1ad7035cd_AssignLeft_eq(_1ad7035cd_AssignLeft *_self_, _1ad7035cd_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ad704a74_Stmt_eq(_1ad704a74_Stmt *_self_, _1ad704a74_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1ad705921_ParamDecl_eq(_1ad705921_ParamDecl *_self_, _1ad705921_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1ad705cc8_IsSelf(_1ad705921_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1ad707219_IsAnon(_1ad706d73_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1ad708407_RetSt_eq(_1ad708407_RetSt *_self_, _1ad708407_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ad708b77_Iter_eq(_1ad708b77_Iter *_self_, _1ad708b77_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1ad70901d_IsInf(_1ad708b77_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1ad7094a2_WhileKind_eq(_1ad7094a2_WhileKind *_self_, _1ad7094a2_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1ad709848_IsWhileNext(_1ad7094a2_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1ad709da9_RangeKind_eq(_1ad709da9_RangeKind *_self_, _1ad709da9_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1ad70a283_BreakSt_eq(_1ad70a283_BreakSt *_self_, _1ad70a283_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1ad70a65c_ContSt_eq(_1ad70a65c_ContSt *_self_, _1ad70a65c_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1ad70ab13_If_eq(_1ad70ab13_If *_self_, _1ad70ab13_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1ad70aedc_Else_eq(_1ad70aedc_Else *_self_, _1ad70aedc_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1ad70bbd0_TypeAliasDecl_eq(_1ad70bbd0_TypeAliasDecl *_self_, _1ad70bbd0_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1ad70d033_UseDecl_eq(_1ad70d033_UseDecl *_self_, _1ad70d033_UseDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1ad70d4d9_EnumItemDecl_eq(_1ad70d4d9_EnumItemDecl *_self_, _1ad70d4d9_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ad70e8c5_TypeEnumItemDecl_eq(_1ad70e8c5_TypeEnumItemDecl *_self_, _1ad70e8c5_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1ad7102ee_FieldDecl_eq(_1ad7102ee_FieldDecl *_self_, _1ad7102ee_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

















inline jule::Ptr<_1ad778ec2_Const> static__1ad7ce07c_NewI64(jule::I64 _1419_x) {
	return jule::new_ptr<_1ad778ec2_Const>(_1ad778ec2_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1419_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1ad778ec2_Const> static__1ad7ce258_NewU64(jule::U64 _1719_x) {
	return jule::new_ptr<_1ad778ec2_Const>(_1ad778ec2_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1719_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1ad778ec2_Const> static__1ad7ce522_NewBool(jule::Bool _2020_x) {
	return jule::new_ptr<_1ad778ec2_Const>(_1ad778ec2_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2020_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1ad778ec2_Const> static__1ad7ce7db_NewStr(jule::Str _2319_x) {
	return jule::new_ptr<_1ad778ec2_Const>(_1ad778ec2_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2319_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1ad778ec2_Const> static__1ad7ceaa5_NewF64(jule::F64 _2619_x) {
	return jule::new_ptr<_1ad778ec2_Const>(_1ad778ec2_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2619_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1ad778ec2_Const> static__1ad7cecb4_NewNil(void) {
	return jule::new_ptr<_1ad778ec2_Const>(_1ad778ec2_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1ad7d0424_ReadI64(_1ad778ec2_Const* _self_) {
	if ((!(_1ad7d2a20_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2);;
}



inline jule::U64 _1ad7d06aa_ReadU64(_1ad778ec2_Const* _self_) {
	if ((!(_1ad7d2ca6_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3);;
}



inline jule::Bool _1ad7d0941_ReadBool(_1ad778ec2_Const* _self_) {
	if ((!(_1ad7d303c_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1ad7d0bc7_ReadStr(_1ad778ec2_Const* _self_) {
	if ((!(_1ad7d32c3_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1ad7d0e5d_ReadF64(_1ad778ec2_Const* _self_) {
	if ((!(_1ad7d3559_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6);;
}



inline jule::I64 _1ad7d11e4_AsI64(_1ad778ec2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bd7b32a4:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bd7b3c00:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bd7b3c66:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1bd7b375a:;
			{
				return 0LL;;
			}
		}
		_match_end_1bd7b35b2:;
	};
}



inline jule::U64 _1ad7d147a_AsU64(_1ad778ec2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bd7b4849:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bd7b5570:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bd7b55d6:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1bd7b4d22:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bd7b4cab:;
	};
}



inline jule::F64 _1ad7d1711_AsF64(_1ad778ec2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bd7b70cc:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bd7b61a8:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bd7b6dbd:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1bd7b6670:;
			{
				return 0LL;;
			}
		}
		_match_end_1bd7b6609:;
	};
}



inline void _1ad7d19b9_SetI64(_1ad778ec2_Const* _self_, jule::I64 _13622_x) {
	(*(_self_))._field_data=jule::Any(_13622_x, &__jule_any_type2);
}



inline void _1ad7d1c72_SetU64(_1ad778ec2_Const* _self_, jule::U64 _13922_x) {
	(*(_self_))._field_data=jule::Any(_13922_x, &__jule_any_type3);
}



inline void _1ad7d202a_SetBool(_1ad778ec2_Const* _self_, jule::Bool _14223_x) {
	(*(_self_))._field_data=jule::Any(_14223_x, &__jule_any_type4);
}



inline void _1ad7d22d3_SetStr(_1ad778ec2_Const* _self_, jule::Str _14522_x) {
	(*(_self_))._field_data=jule::Any(_14522_x, &__jule_any_type5);
}



inline void _1ad7d258b_SetF64(_1ad778ec2_Const* _self_, jule::F64 _14822_x) {
	(*(_self_))._field_data=jule::Any(_14822_x, &__jule_any_type6);
}



inline jule::Bool _1ad7d2a20_IsI64(_1ad778ec2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bd7ba9c6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bd7bac07:;
			{
				return false;;
			}
		}
		_match_end_1bd7bab91:;
	};
}



inline jule::Bool _1ad7d2ca6_IsU64(_1ad778ec2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bd7bb565:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bd7bad39:;
			{
				return false;;
			}
		}
		_match_end_1bd7bacc3:;
	};
}



inline jule::Bool _1ad7d303c_IsBool(_1ad778ec2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bd7bb9a5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bd7bbe8e:;
			{
				return false;;
			}
		}
		_match_end_1bd7bbe28:;
	};
}



inline jule::Bool _1ad7d32c3_IsStr(_1ad778ec2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bd7bc434:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bd7bc91d:;
			{
				return false;;
			}
		}
		_match_end_1bd7bc8a7:;
	};
}



inline jule::Bool _1ad7d3559_IsF64(_1ad778ec2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bd7bcdb3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bd7bd39c:;
			{
				return false;;
			}
		}
		_match_end_1bd7bd336:;
	};
}



inline jule::Bool _1ad7d37e0_IsNil(_1ad778ec2_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1ad7d3e72_And(_1ad778ec2_Const* _self_, _1ad778ec2_Const _23615_x) {
	{
		
		if ((_1ad7d303c_IsBool(_self_) && _1ad7d303c_IsBool(&_23615_x))) {
			_case_begin_1bd7c2846:;
			{
				return (_1ad7d0941_ReadBool(_self_) && _1ad7d0941_ReadBool(&_23615_x));;
			}
		}
		else {
			_case_begin_1bd7c27d0:;
			{
				return false;;
			}
		}
		_match_end_1bd7c2390:;
	};
}



inline jule::Bool _1ad7d42b3_Or(_1ad778ec2_Const* _self_, _1ad778ec2_Const _24714_x) {
	{
		
		if ((_1ad7d303c_IsBool(_self_) && _1ad7d303c_IsBool(&_24714_x))) {
			_case_begin_1bd7c3b44:;
			{
				return (_1ad7d0941_ReadBool(_self_) || _1ad7d0941_ReadBool(&_24714_x));;
			}
		}
		else {
			_case_begin_1bd7c332a:;
			{
				return false;;
			}
		}
		_match_end_1bd7c323c:;
	};
}



inline jule::Bool _1ad7d4604_Eq(_1ad778ec2_Const* _self_, _1ad778ec2_Const _25814_x) {
	{
		
		if (_1ad7d37e0_IsNil(_self_)) {
			_case_begin_1bd7c4ea8:;
			{
				return _1ad7d37e0_IsNil(&_25814_x);;
			}
		}
		else if (_1ad7d303c_IsBool(_self_)) {
			_case_begin_1bd7c501e:;
			{
				return (_1ad7d303c_IsBool(&_25814_x) && (_1ad7d0941_ReadBool(_self_) == _1ad7d0941_ReadBool(&_25814_x)));;
			}
		}
		else if (_1ad7d32c3_IsStr(_self_)) {
			_case_begin_1bd7c5085:;
			{
				return (_1ad7d32c3_IsStr(&_25814_x) && (_1ad7d0bc7_ReadStr(_self_) == _1ad7d0bc7_ReadStr(&_25814_x)));;
			}
		}
		else if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7c510c:;
			{
				return (_1ad7d0424_ReadI64(_self_) == _1ad7d11e4_AsI64(&_25814_x));;
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7c5184:;
			{
				return (_1ad7d06aa_ReadU64(_self_) == _1ad7d147a_AsU64(&_25814_x));;
			}
		}
		else if (_1ad7d3559_IsF64(_self_)) {
			_case_begin_1bd7c532c:;
			{
				return (_1ad7d0e5d_ReadF64(_self_) == _1ad7d1711_AsF64(&_25814_x));;
			}
		}
		else {
			_case_begin_1bd7c4617:;
			{
				return false;;
			}
		}
		_match_end_1bd7c4529:;
	};
}



inline jule::Bool _1ad7d4945_Lt(_1ad778ec2_Const* _self_, _1ad778ec2_Const _28514_x) {
	{
		
		if (_1ad7d32c3_IsStr(_self_)) {
			_case_begin_1bd7c8bd2:;
			{
				return (_1ad7d32c3_IsStr(&_28514_x) && (_1ad7d0bc7_ReadStr(_self_) < _1ad7d0bc7_ReadStr(&_28514_x)));;
			}
		}
		else if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7c8c48:;
			{
				return (_1ad7d0424_ReadI64(_self_) < _1ad7d11e4_AsI64(&_28514_x));;
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7c8cae:;
			{
				return (_1ad7d06aa_ReadU64(_self_) < _1ad7d147a_AsU64(&_28514_x));;
			}
		}
		else if (_1ad7d3559_IsF64(_self_)) {
			_case_begin_1bd7c8d36:;
			{
				return (_1ad7d0e5d_ReadF64(_self_) < _1ad7d1711_AsF64(&_28514_x));;
			}
		}
		else {
			_case_begin_1bd7c596a:;
			{
				return false;;
			}
		}
		_match_end_1bd7c588d:;
	};
}



inline jule::Bool _1ad7d4c86_LtEq(_1ad778ec2_Const* _self_, _1ad778ec2_Const _30816_x) {
	{
		
		if (_1ad7d32c3_IsStr(_self_)) {
			_case_begin_1bd7cb8d8:;
			{
				return (_1ad7d32c3_IsStr(&_30816_x) && (_1ad7d0bc7_ReadStr(_self_) <= _1ad7d0bc7_ReadStr(&_30816_x)));;
			}
		}
		else if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7cb94e:;
			{
				return (_1ad7d0424_ReadI64(_self_) <= _1ad7d11e4_AsI64(&_30816_x));;
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7cb9b5:;
			{
				return (_1ad7d06aa_ReadU64(_self_) <= _1ad7d147a_AsU64(&_30816_x));;
			}
		}
		else if (_1ad7d3559_IsF64(_self_)) {
			_case_begin_1bd7cba3c:;
			{
				return (_1ad7d0e5d_ReadF64(_self_) <= _1ad7d1711_AsF64(&_30816_x));;
			}
		}
		else {
			_case_begin_1bd7c9595:;
			{
				return false;;
			}
		}
		_match_end_1bd7c94b8:;
	};
}



inline jule::Bool _1ad7d50c7_Gt(_1ad778ec2_Const* _self_, _1ad778ec2_Const _33114_x) {
	{
		
		if (_1ad7d32c3_IsStr(_self_)) {
			_case_begin_1bd7ce5de:;
			{
				return (_1ad7d32c3_IsStr(&_33114_x) && (_1ad7d0bc7_ReadStr(_self_) > _1ad7d0bc7_ReadStr(&_33114_x)));;
			}
		}
		else if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7ce655:;
			{
				return (_1ad7d0424_ReadI64(_self_) > _1ad7d11e4_AsI64(&_33114_x));;
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7ce6bb:;
			{
				return (_1ad7d06aa_ReadU64(_self_) > _1ad7d147a_AsU64(&_33114_x));;
			}
		}
		else if (_1ad7d3559_IsF64(_self_)) {
			_case_begin_1bd7ce743:;
			{
				return (_1ad7d0e5d_ReadF64(_self_) > _1ad7d1711_AsF64(&_33114_x));;
			}
		}
		else {
			_case_begin_1bd7cc29b:;
			{
				return false;;
			}
		}
		_match_end_1bd7cc1be:;
	};
}



inline jule::Bool _1ad7d5418_GtEq(_1ad778ec2_Const* _self_, _1ad778ec2_Const _35416_x) {
	{
		
		if (_1ad7d32c3_IsStr(_self_)) {
			_case_begin_1bd7d22e5:;
			{
				return (_1ad7d32c3_IsStr(&_35416_x) && (_1ad7d0bc7_ReadStr(_self_) >= _1ad7d0bc7_ReadStr(&_35416_x)));;
			}
		}
		else if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7d235b:;
			{
				return (_1ad7d0424_ReadI64(_self_) >= _1ad7d11e4_AsI64(&_35416_x));;
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7d23c2:;
			{
				return (_1ad7d06aa_ReadU64(_self_) >= _1ad7d147a_AsU64(&_35416_x));;
			}
		}
		else if (_1ad7d3559_IsF64(_self_)) {
			_case_begin_1bd7d2449:;
			{
				return (_1ad7d0e5d_ReadF64(_self_) >= _1ad7d1711_AsF64(&_35416_x));;
			}
		}
		else {
			_case_begin_1bd7ceea2:;
			{
				return false;;
			}
		}
		_match_end_1bd7cedc5:;
	};
}



inline jule::Bool _1ad7d5759_Add(_1ad778ec2_Const* _self_, _1ad778ec2_Const _37519_x) {
	{
		
		if (_1ad7d32c3_IsStr(_self_)) {
			_case_begin_1bd7d4eeb:;
			{
				if ((!(_1ad7d32c3_IsStr(&_37519_x)))) {
					return false;;
				};
				_1ad7d22d3_SetStr(_self_, (_1ad7d0bc7_ReadStr(_self_) + _1ad7d0bc7_ReadStr(&_37519_x)));
			}
		}
		else if (_1ad7d3559_IsF64(_self_)) {
			_case_begin_1bd7d5062:;
			{
				_1ad7d258b_SetF64(_self_, (_1ad7d0e5d_ReadF64(_self_) + _1ad7d1711_AsF64(&_37519_x)));
			}
		}
		else if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7d50c8:;
			{
				if (_1ad7d3559_IsF64(&_37519_x)) {
					_1ad7d258b_SetF64(_self_, (_1ad7d1711_AsF64(_self_) + _1ad7d0e5d_ReadF64(&_37519_x)));
				} else {
					_1ad7d19b9_SetI64(_self_, (_1ad7d0424_ReadI64(_self_) + _1ad7d11e4_AsI64(&_37519_x)));
				};
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7d5150:;
			{
				if (_1ad7d3559_IsF64(&_37519_x)) {
					_1ad7d258b_SetF64(_self_, (_1ad7d1711_AsF64(_self_) + _1ad7d0e5d_ReadF64(&_37519_x)));
				} else {
					_1ad7d1c72_SetU64(_self_, (jule::U64)(_1ad7d06aa_ReadU64(_self_) + _1ad7d147a_AsU64(&_37519_x)));
				};
			}
		}
		else {
			_case_begin_1bd7d2ba8:;
			{
				return false;;
			}
		}
		_match_end_1bd7d2acb:;
	};
	return true;;
}



inline jule::Bool _1ad7d5a9a_Sub(_1ad778ec2_Const* _self_, _1ad778ec2_Const _40419_x) {
	{
		
		if (_1ad7d3559_IsF64(_self_)) {
			_case_begin_1bd7d9d25:;
			{
				_1ad7d258b_SetF64(_self_, (_1ad7d0e5d_ReadF64(_self_) - _1ad7d1711_AsF64(&_40419_x)));
			}
		}
		else if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7d9d8b:;
			{
				if (_1ad7d3559_IsF64(&_40419_x)) {
					_1ad7d258b_SetF64(_self_, (_1ad7d1711_AsF64(_self_) - _1ad7d0e5d_ReadF64(&_40419_x)));
				} else {
					_1ad7d19b9_SetI64(_self_, (_1ad7d0424_ReadI64(_self_) - _1ad7d11e4_AsI64(&_40419_x)));
				};
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7d9e02:;
			{
				if (_1ad7d3559_IsF64(&_40419_x)) {
					_1ad7d258b_SetF64(_self_, (_1ad7d1711_AsF64(_self_) - _1ad7d0e5d_ReadF64(&_40419_x)));
				} else {
					_1ad7d1c72_SetU64(_self_, (jule::U64)(_1ad7d06aa_ReadU64(_self_) - _1ad7d147a_AsU64(&_40419_x)));
				};
			}
		}
		else {
			_case_begin_1bd7d9561:;
			{
				return false;;
			}
		}
		_match_end_1bd7d9462:;
	};
	return true;;
}



inline jule::Bool _1ad7d5ddb_Mul(_1ad778ec2_Const* _self_, _1ad778ec2_Const _42819_x) {
	{
		
		if (_1ad7d3559_IsF64(_self_)) {
			_case_begin_1bd7ddc3b:;
			{
				_1ad7d258b_SetF64(_self_, (_1ad7d0e5d_ReadF64(_self_) * _1ad7d1711_AsF64(&_42819_x)));
			}
		}
		else if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7ddca2:;
			{
				if (_1ad7d3559_IsF64(&_42819_x)) {
					_1ad7d258b_SetF64(_self_, (_1ad7d1711_AsF64(_self_) * _1ad7d0e5d_ReadF64(&_42819_x)));
				} else {
					_1ad7d19b9_SetI64(_self_, (_1ad7d0424_ReadI64(_self_) * _1ad7d11e4_AsI64(&_42819_x)));
				};
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7ddd18:;
			{
				if (_1ad7d3559_IsF64(&_42819_x)) {
					_1ad7d258b_SetF64(_self_, (_1ad7d1711_AsF64(_self_) * _1ad7d0e5d_ReadF64(&_42819_x)));
				} else {
					_1ad7d1c72_SetU64(_self_, (jule::U64)(_1ad7d06aa_ReadU64(_self_) * _1ad7d147a_AsU64(&_42819_x)));
				};
			}
		}
		else {
			_case_begin_1bd7dd312:;
			{
				return false;;
			}
		}
		_match_end_1bd7dd224:;
	};
	return true;;
}



inline jule::Bool _1ad7d622c_Div(_1ad778ec2_Const* _self_, _1ad778ec2_Const _45619_x) {
	{
		
		if (_1ad7d3559_IsF64(_self_)) {
			_case_begin_1bd7e2b41:;
			{
				jule::F64 _4594_l = _1ad7d1711_AsF64(&_45619_x);;
				if ((_4594_l == 0LL)) {
					return false;;
				};
				_1ad7d258b_SetF64(_self_, ({ jule::F64 __jule_x = _1ad7d0e5d_ReadF64(_self_); jule::F64 __jule_y = _4594_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7e2ba7:;
			{
				jule::F64 _4654_l = _1ad7d1711_AsF64(&_45619_x);;
				if ((_4654_l == 0LL)) {
					return false;;
				};
				_1ad7d258b_SetF64(_self_, ({ jule::F64 __jule_x = _1ad7d1711_AsF64(_self_); jule::F64 __jule_y = _4654_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7e2c1d:;
			{
				jule::F64 _4714_l = _1ad7d1711_AsF64(&_45619_x);;
				if ((_4714_l == 0LL)) {
					return false;;
				};
				_1ad7d258b_SetF64(_self_, ({ jule::F64 __jule_x = _1ad7d1711_AsF64(_self_); jule::F64 __jule_y = _4714_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1bd7e2217:;
			{
				return false;;
			}
		}
		_match_end_1bd7e2129:;
	};
	return true;;
}



inline jule::Bool _1ad7d656d_Mod(_1ad778ec2_Const* _self_, _1ad778ec2_Const _48519_x) {
	{
		
		if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7e6a24:;
			{
				jule::I64 _4884_l = _1ad7d11e4_AsI64(&_48519_x);;
				if ((_4884_l == 0LL)) {
					return false;;
				};
				_1ad7d19b9_SetI64(_self_, ({ jule::I64 __jule_x = _1ad7d0424_ReadI64(_self_); jule::I64 __jule_y = _4884_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7e6e31:;
			{
				jule::U64 _4944_l = _1ad7d147a_AsU64(&_48519_x);;
				if ((_4944_l == 0LLU)) {
					return false;;
				};
				_1ad7d1c72_SetU64(_self_, ({ jule::U64 __jule_x = _1ad7d06aa_ReadU64(_self_); jule::U64 __jule_y = _4944_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1bd7e699c:;
			{
				return false;;
			}
		}
		_match_end_1bd7e688c:;
	};
	return true;;
}



inline jule::Bool _1ad7d68ae_BitwiseAnd(_1ad778ec2_Const* _self_, _1ad778ec2_Const _50726_x) {
	{
		
		if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7e9890:;
			{
				_1ad7d19b9_SetI64(_self_, (_1ad7d0424_ReadI64(_self_) & _1ad7d11e4_AsI64(&_50726_x)));
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7e9c9c:;
			{
				_1ad7d1c72_SetU64(_self_, (_1ad7d06aa_ReadU64(_self_) & _1ad7d147a_AsU64(&_50726_x)));
			}
		}
		else {
			_case_begin_1bd7e9818:;
			{
				return false;;
			}
		}
		_match_end_1bd7e9708:;
	};
	return true;;
}



inline jule::Bool _1ad7d6c00_BitwiseOr(_1ad778ec2_Const* _self_, _1ad778ec2_Const _52125_x) {
	{
		
		if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7eb661:;
			{
				_1ad7d19b9_SetI64(_self_, (_1ad7d0424_ReadI64(_self_) | _1ad7d11e4_AsI64(&_52125_x)));
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7eba6d:;
			{
				_1ad7d1c72_SetU64(_self_, (_1ad7d06aa_ReadU64(_self_) | _1ad7d147a_AsU64(&_52125_x)));
			}
		}
		else {
			_case_begin_1bd7eb5d9:;
			{
				return false;;
			}
		}
		_match_end_1bd7eb4c9:;
	};
	return true;;
}



inline jule::Bool _1ad7d7041_Xor(_1ad778ec2_Const* _self_, _1ad778ec2_Const _53519_x) {
	{
		
		if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd7ed432:;
			{
				_1ad7d19b9_SetI64(_self_, (_1ad7d0424_ReadI64(_self_) ^ _1ad7d11e4_AsI64(&_53519_x)));
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd7ed83e:;
			{
				_1ad7d1c72_SetU64(_self_, (_1ad7d06aa_ReadU64(_self_) ^ _1ad7d147a_AsU64(&_53519_x)));
			}
		}
		else {
			_case_begin_1bd7ed3aa:;
			{
				return false;;
			}
		}
		_match_end_1bd7ed29a:;
	};
	return true;;
}



inline jule::Bool _1ad7d7382_Lshift(_1ad778ec2_Const* _self_, _1ad778ec2_Const _54922_x) {
	{
		
		if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd800203:;
			{
				jule::I64 _5524_l = _1ad7d11e4_AsI64(_self_);;
				if ((_5524_l < 0LL)) {
					jule::U64 _5545_r = _1ad7d147a_AsU64(&_54922_x);;
					_1ad7d19b9_SetI64(_self_, ({ jule::I64 __jule_x = _5524_l; jule::U64 __jule_y = _5545_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1ad7d7a36_lshiftUnsig(_self_, &(_54922_x));
				};
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd800610:;
			{
				_1ad7d7a36_lshiftUnsig(_self_, &(_54922_x));
			}
		}
		else {
			_case_begin_1bd80017b:;
			{
				return false;;
			}
		}
		_match_end_1bd80006b:;
	};
	return true;;
}



inline jule::Bool _1ad7d76c3_Rshift(_1ad778ec2_Const* _self_, _1ad778ec2_Const _56922_x) {
	{
		
		if (_1ad7d2a20_IsI64(_self_)) {
			_case_begin_1bd802788:;
			{
				jule::I64 _5724_l = _1ad7d11e4_AsI64(_self_);;
				if ((_5724_l < 0LL)) {
					jule::U64 _5745_r = _1ad7d147a_AsU64(&_56922_x);;
					_1ad7d19b9_SetI64(_self_, ({ jule::I64 __jule_x = _5724_l; jule::U64 __jule_y = _5745_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1ad7d7d66_rshiftUnsig(_self_, &(_56922_x));
				};
			}
		}
		else if (_1ad7d2ca6_IsU64(_self_)) {
			_case_begin_1bd802b95:;
			{
				_1ad7d7d66_rshiftUnsig(_self_, &(_56922_x));
			}
		}
		else {
			_case_begin_1bd802711:;
			{
				return false;;
			}
		}
		_match_end_1bd802612:;
	};
	return true;;
}








inline jule::Bool _1ad712ac6_Field_eq(_1ad712ac6_Field *_self_, _1ad712ac6_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1ad717ca7_FieldIns> _1ad712eb1_instance(jule::Ptr<_1ad712ac6_Field> _self_) {
	return jule::new_ptr<_1ad717ca7_FieldIns>(_1ad717ca7_FieldIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=_self_, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Default=jule::Ptr<_1ad985b90_Data>(nullptr)});;
}








inline jule::Bool _1ad714ad9_Operators_eq(_1ad714ad9_Operators *_self_, _1ad714ad9_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_1ad718857_StructIns> _1ad715e92_instance(jule::Ptr<_1ad7159ec_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1ad718857_StructIns> _997_ins = jule::new_ptr<_1ad718857_StructIns>(_1ad718857_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad717ca7_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad717ca7_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad933a83_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1ad7e778d_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1ad8d005c_new(), ._field_Operators=_1ad714ad9_Operators{._field_Eq=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Add=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Div=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb0aa2a:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _10615_s = *it;
			{
				(*(_997_ins))._field_Statics=jule::append((*_997_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ad933a83_Var>((*(_10615_s))); __jule_collection; }));
			}
			_iter_next_1bdb0aa2a:;
			++it;
			goto _iter_begin_1bdb0aa2a;
		}
		_iter_end_1bdb0aa2a:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb0b8d8:;
		if (it != expr_end) {
			jule::Ptr<_1ad712ac6_Field> _11015_f = *it;
			{
				jule::Ptr<_1ad717ca7_FieldIns> _1118_f2 = _1ad712eb1_instance(_11015_f);;
				(*(_1118_f2))._field_Owner=_997_ins;
				(*_997_ins.alloc)._field_Fields=jule::append((*_997_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad717ca7_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1118_f2; __jule_collection; }));
				if ((((!((*_11015_f.alloc)._field_Mutable)) && ((*((*_11015_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1ad9b9e7c_Mutable((*((*(_11015_f))._field_Kind))._field_Kind))) {
					(*_997_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1bdb0b8d8:;
			++it;
			goto _iter_begin_1bdb0b8d8;
		}
		_iter_end_1bdb0b8d8:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_997_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_997_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7e778d_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad7e778d_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bdb10c3e:;
			if (it != expr_end) {
				jule::Ptr<_1ad7e778d_Fn> _12316_f = *it;
				{
					jule::Ptr<_1ad7e778d_Fn> _1249_fins = jule::new_ptr<_1ad7e778d_Fn>((*(_12316_f)));;
					(*_1249_fins.alloc)._field_Instances=nullptr;
					(*_997_ins.alloc)._field_Methods=jule::append((*_997_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7e778d_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1249_fins; __jule_collection; }));
				}
				_iter_next_1bdb10c3e:;
				++it;
				goto _iter_begin_1bdb10c3e;
			}
			_iter_end_1bdb10c3e:;
		};
	};
	return _997_ins;;
}



inline jule::Ptr<_1ad718857_StructIns> _1ad7162a0_appendInstance(_1ad7159ec_Struct* _self_, jule::Ptr<_1ad718857_StructIns>* _13535_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb110e6:;
		if (it != expr_end) {
			jule::Ptr<_1ad718857_StructIns> _14115_ains = *it;
			{
				if (_1ad719506_Same(_14115_ains.ptr(), (*(_13535_ins)))) {
					return _14115_ains;;
				};
			}
			_iter_next_1bdb110e6:;
			++it;
			goto _iter_begin_1bdb110e6;
		}
		_iter_end_1bdb110e6:;
	};
	{ jule::Slice<jule::Ptr<_1ad718857_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13535_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ad71669b_FindMethod(_1ad7159ec_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb14638:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _15415_f = *it;
			{
				if ((((*(_15415_f))._field_Statically == _15338_statically) && ((*_15415_f.alloc)._field_Ident == _15326_ident))) {
					return _15415_f;;
				};
			}
			_iter_next_1bdb14638:;
			++it;
			goto _iter_begin_1bdb14638;
		}
		_iter_end_1bdb14638:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad933a83_Var> _1ad7169dc_FindStatic(_1ad7159ec_Struct* _self_, jule::Str _16426_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb15969:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _16515_v = *it;
			{
				if (((*(_16515_v))._field_Ident == _16426_ident)) {
					return _16515_v;;
				};
			}
			_iter_next_1bdb15969:;
			++it;
			goto _iter_begin_1bdb15969;
		}
		_iter_end_1bdb15969:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad712ac6_Field> _1ad716d2d_FindField(_1ad7159ec_Struct* _self_, jule::Str _17525_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb1696a:;
		if (it != expr_end) {
			jule::Ptr<_1ad712ac6_Field> _17615_f = *it;
			{
				if (((*(_17615_f))._field_Ident == _17525_ident)) {
					return _17615_f;;
				};
			}
			_iter_next_1bdb1696a:;
			++it;
			goto _iter_begin_1bdb1696a;
		}
		_iter_end_1bdb1696a:;
	};
	return nullptr;;
}



inline jule::Bool _1ad71716e_IsImplements(_1ad7159ec_Struct* _self_, jule::Ptr<_1ad802ea2_Trait> _18524_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb1795a:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> *_18610_it = it;
			{
				if ((_18524_t == (*(_18610_it)))) {
					return true;;
				};
			}
			_iter_next_1bdb1795a:;
			++it;
			goto _iter_begin_1bdb1795a;
		}
		_iter_end_1bdb1795a:;
	};
	return false;;
}



inline jule::Bool _1ad7174b0_IsUses(_1ad7159ec_Struct* _self_, jule::Ptr<_1ad7159ec_Struct> _19518_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb183d9:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> *_19610_u = it;
			{
				while ((_19518_s == (*(_19610_u)))) {
					{
						return true;;
					}
				_iter_next_1bdb18e12:;
				}
				_iter_end_1bdb18e12:;;
			}
			_iter_next_1bdb183d9:;
			++it;
			goto _iter_begin_1bdb183d9;
		}
		_iter_end_1bdb183d9:;
	};
	return false;;
}








inline jule::Bool _1ad717ca7_FieldIns_eq(_1ad717ca7_FieldIns *_self_, _1ad717ca7_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1ad718c0e_Str(_1ad718857_StructIns* _self_) {
	_1dd0b6912_Builder _2417_kind = static__1dd0b74d4_New(32LL);;
	_1dd0c0dd3_WriteStr(&_2417_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1dd0c118b_WriteByte(&_2417_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bdb1bb29:;
			if (it != expr_end) {
				jule::I64 _2458_i = it - expr->begin();
				jule::Ptr<_1ad9b6de1_InsGeneric> *_24511_g = it;
				{
					_1dd0c0dd3_WriteStr(&_2417_kind, _1ad9b8992_Str((*((*(_24511_g))))._field_Kind.ptr()));
					if ((_2458_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1dd0c118b_WriteByte(&_2417_kind, ',');
					};
				}
				_iter_next_1bdb1bb29:;
				++it;
				_2458_i++;
				goto _iter_begin_1bdb1bb29;
			}
			_iter_end_1bdb1bb29:;
		};
		_1dd0c118b_WriteByte(&_2417_kind, ']');
	};
	return _1dd0c16ca_Str(&_2417_kind);;
}



inline jule::Bool _1ad719050_Equal(jule::Ptr<_1ad718857_StructIns> _self_, jule::Ptr<_1ad9b8596_TypeKind> _25718_other) {
	jule::Ptr<_1ad718857_StructIns> _2583_s = _1ad9bc2c0_Struct(_25718_other.ptr());;
	if ((_2583_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2583_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2583_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2717_i = 0LL;;
	for (; (_2717_i < (*_self_.alloc)._field_Generics.len()); (_2717_i)++) {
		{
			if ((!(_1ad9b8cd3_Equal((*((*(_self_))._field_Generics[_2717_i]))._field_Kind, (*((*(_2583_s))._field_Generics[_2717_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1bdb20ec4:;
	}
	_iter_end_1bdb20ec4:;;
	return true;;
}



inline jule::Bool _1ad719506_Same(_1ad718857_StructIns* _self_, jule::Ptr<_1ad718857_StructIns> _28516_s) {
	if ((((*(_self_))._field_Decl != (*(_28516_s))._field_Decl) || ((*_28516_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb231e6:;
		if (it != expr_end) {
			jule::I64 _2897_i = it - expr->begin();
			jule::Ptr<_1ad9b6de1_InsGeneric> *_28910_g = it;
			{
				jule::Ptr<_1ad9b6de1_InsGeneric> _2904_g2 = (*(_28516_s))._field_Generics[_2897_i];;
				if ((((*((*((*(_28910_g))))._field_Kind))._field_BindIdent != (*(*(_2904_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1ad9b8cd3_Equal((*((*(_28910_g))))._field_Kind, (*(_2904_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1bdb231e6:;
			++it;
			_2897_i++;
			goto _iter_begin_1bdb231e6;
		}
		_iter_end_1bdb231e6:;
	};
	return true;;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ad719902_FindMethod(_1ad718857_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb264b3:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _30115_f = *it;
			{
				if ((((*(_30115_f))._field_Statically == _30038_statically) && ((*_30115_f.alloc)._field_Ident == _30026_ident))) {
					return _30115_f;;
				};
			}
			_iter_next_1bdb264b3:;
			++it;
			goto _iter_begin_1bdb264b3;
		}
		_iter_end_1bdb264b3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad717ca7_FieldIns> _1ad719c43_FindField(_1ad718857_StructIns* _self_, jule::Str _31125_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb277e4:;
		if (it != expr_end) {
			jule::Ptr<_1ad717ca7_FieldIns> _31215_f = *it;
			{
				if (((*((*(_31215_f))._field_Decl))._field_Ident == _31125_ident)) {
					return _31215_f;;
				};
			}
			_iter_next_1bdb277e4:;
			++it;
			goto _iter_begin_1bdb277e4;
		}
		_iter_end_1bdb277e4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad933a83_Var> _1ad71a084_FindStatic(_1ad718857_StructIns* _self_, jule::Str _32226_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb280a8:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _32315_v = *it;
			{
				if (((*(_32315_v))._field_Ident == _32226_ident)) {
					return _32315_v;;
				};
			}
			_iter_next_1bdb280a8:;
			++it;
			goto _iter_begin_1bdb280a8;
		}
		_iter_end_1bdb280a8:;
	};
	return nullptr;;
}








inline jule::Bool _1ad7d9dac_OperandExprModel_eq(_1ad7d9dac_OperandExprModel *_self_, _1ad7d9dac_OperandExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1ad7da3a7_BinaryExprModel_eq(_1ad7da3a7_BinaryExprModel *_self_, _1ad7da3a7_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1ad7da781_UnaryExprModel_eq(_1ad7da781_UnaryExprModel *_self_, _1ad7da781_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1ad7dacae_StructArgExprModel_eq(_1ad7dacae_StructArgExprModel *_self_, _1ad7dacae_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ad7db452_AllocStructLitExprModel_eq(_1ad7db452_AllocStructLitExprModel *_self_, _1ad7db452_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1ad7db9d5_CastingExprModel_eq(_1ad7db9d5_CastingExprModel *_self_, _1ad7db9d5_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_ExprKind == _self_->_field_ExprKind);
}














inline jule::Bool _1ad7dcc17_IndexingExprModel_eq(_1ad7dcc17_IndexingExprModel *_self_, _1ad7dcc17_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1ad7dd597_KeyValPairExprModel_eq(_1ad7dd597_KeyValPairExprModel *_self_, _1ad7dd597_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1ad7de004_SlicingExprModel_eq(_1ad7de004_SlicingExprModel *_self_, _1ad7de004_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1ad7de587_TraitSubIdentExprModel_eq(_1ad7de587_TraitSubIdentExprModel *_self_, _1ad7de587_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1ad7dee28_StructSubIdentExprModel_eq(_1ad7dee28_StructSubIdentExprModel *_self_, _1ad7dee28_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1ad7e02be_StructStaticIdentExprModel_eq(_1ad7e02be_StructStaticIdentExprModel *_self_, _1ad7e02be_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1ad7e0d6e_BuiltinOutCallExprModel_eq(_1ad7e0d6e_BuiltinOutCallExprModel *_self_, _1ad7e0d6e_BuiltinOutCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1ad7e1248_BuiltinOutlnCallExprModel_eq(_1ad7e1248_BuiltinOutlnCallExprModel *_self_, _1ad7e1248_BuiltinOutlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1ad7e1622_BuiltinNewCallExprModel_eq(_1ad7e1622_BuiltinNewCallExprModel *_self_, _1ad7e1622_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1ad7e19eb_BuiltinPanicCallExprModel_eq(_1ad7e19eb_BuiltinPanicCallExprModel *_self_, _1ad7e19eb_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ad7e1ea2_BuiltinMakeCallExprModel_eq(_1ad7e1ea2_BuiltinMakeCallExprModel *_self_, _1ad7e1ea2_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1ad7e237b_BuiltinAppendCallExprModel_eq(_1ad7e237b_BuiltinAppendCallExprModel *_self_, _1ad7e237b_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1ad7e2678_BuiltinLenCallExprModel_eq(_1ad7e2678_BuiltinLenCallExprModel *_self_, _1ad7e2678_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ad7e2975_BuiltinCapCallExprModel_eq(_1ad7e2975_BuiltinCapCallExprModel *_self_, _1ad7e2975_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ad7e2d4e_BuiltinDeleteCallExprModel_eq(_1ad7e2d4e_BuiltinDeleteCallExprModel *_self_, _1ad7e2d4e_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1ad7e3228_BuiltinCopyCallExprModel_eq(_1ad7e3228_BuiltinCopyCallExprModel *_self_, _1ad7e3228_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1ad7e3602_BuiltinErrorCallExprModel_eq(_1ad7e3602_BuiltinErrorCallExprModel *_self_, _1ad7e3602_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1ad7e38ee_SizeofExprModel_eq(_1ad7e38ee_SizeofExprModel *_self_, _1ad7e38ee_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ad7e40a3_AlignofExprModel_eq(_1ad7e40a3_AlignofExprModel *_self_, _1ad7e40a3_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ad7e4290_RuneExprModel_eq(_1ad7e4290_RuneExprModel *_self_, _1ad7e4290_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1ad7e4911_FreeExprModel_eq(_1ad7e4911_FreeExprModel *_self_, _1ad7e4911_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1ad7e5cb9_Param_eq(_1ad7e5cb9_Param *_self_, _1ad7e5cb9_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1ad7e96e6_ParamIns> _1ad7e6182_instance(jule::Ptr<_1ad7e5cb9_Param> _self_) {
	return jule::new_ptr<_1ad7e96e6_ParamIns>(_1ad7e96e6_ParamIns{._field_Decl=_self_, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr)});;
}



inline jule::Bool _1ad7e6418_IsSelf(_1ad7e5cb9_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1ad7e669e_IsRef(_1ad7e5cb9_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1ad7e7c44_IsVoid(_1ad7e778d_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1ad7e7eca_IsMethod(_1ad7e778d_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1ad7e5cb9_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1ad7e6418_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1ad7e8261_IsEntryPoint(_1ad7e778d_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1ad7e84e7_IsInit(_1ad7e778d_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1ad7e877d_IsAnon(_1ad7e778d_Fn* _self_) {
	return _1ad6d2821_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1ad7e8a14_AnyVar(_1ad7e778d_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1ad7ea84b_FnIns> _1ad7e8c9a_instanceForce(jule::Ptr<_1ad7e778d_Fn> _self_) {
	jule::Ptr<_1ad7ea84b_FnIns> _1107_ins = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::new_ptr<_1ad8b136d_Scope>(_1ad8b136d_Scope{._field_Parent=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1ad8d005c_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad7e96e6_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb31d70:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e5cb9_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad7e6182_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_1bdb31d70:;
			++it;
			goto _iter_begin_1bdb31d70;
		}
		_iter_end_1bdb31d70:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _1107_ins;;
}



inline jule::Ptr<_1ad7ea84b_FnIns> _1ad7e9031_instance(jule::Ptr<_1ad7e778d_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1ad7e8c9a_instanceForce(_self_);;
}



inline jule::Ptr<_1ad7ea84b_FnIns> _1ad7e933e_appendInstance(_1ad7e778d_Fn* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb36d31:;
		if (it != expr_end) {
			jule::Ptr<_1ad7ea84b_FnIns> _15415_ains = *it;
			{
				if (_1ad7ec3db_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_1bdb36d31:;
			++it;
			goto _iter_begin_1bdb36d31;
		}
		_iter_end_1bdb36d31:;
	};
	{ jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _1ad7e96e6_ParamIns_eq(_1ad7e96e6_ParamIns *_self_, _1ad7e96e6_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1ad7e9a8c_Str(_1ad7e96e6_ParamIns* _self_) {
	_1dd0b6912_Builder _1767_s = static__1dd0b74d4_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_1dd0c0dd3_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_1dd0c0dd3_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
	};
	if (_1ad7e6418_IsSelf((*(_self_))._field_Decl)) {
		if (_1ad7e669e_IsRef((*(_self_))._field_Decl)) {
			_1dd0c118b_WriteByte(&_1767_s, '&');
		};
		_1dd0c0dd3_WriteStr(&_1767_s, jule::Str::lit("self", 4));
		return _1dd0c16ca_Str(&_1767_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_1dd0c0dd3_WriteStr(&_1767_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1dd0c0dd3_WriteStr(&_1767_s, _1ad9b8992_Str((*(_self_))._field_Kind));
	};
	return _1dd0c16ca_Str(&_1767_s);;
}







inline jule::Str _1ad7eabc0_Str(_1ad7ea84b_FnIns* _self_) {
	;
	return _1ad7ec72c_GetKindStr(_self_, false);;
}



inline jule::Bool _1ad7eb011_Equal(jule::Ptr<_1ad7ea84b_FnIns> _self_, jule::Ptr<_1ad9b8596_TypeKind> _22918_other) {
	jule::Ptr<_1ad7ea84b_FnIns> _2303_f = _1ad9bc039_Fn(_22918_other.ptr());;
	if ((_2303_f == nullptr)) {
		return false;;
	};
	return _1ad7eb4a6_EqualFn(_self_, &(_2303_f));;
}



inline jule::Bool _1ad7eb4a6_EqualFn(jule::Ptr<_1ad7ea84b_FnIns> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _24021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1ad7e7c44_IsVoid((*(_self_))._field_Decl) != _1ad7e7c44_IsVoid((*((*(_24021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1ad7e96e6_ParamIns>,jule::Ptr<_1ad7e96e6_ParamIns>> _2503_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1ad7e96e6_ParamIns>,jule::Ptr<_1ad7e96e6_ParamIns>>((void*)__jule_anon1bdb42479, nullptr, nullptr);;
	if (((*((*(_24021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2827_i = 0LL;;
	for (; (_2827_i < (*_self_.alloc)._field_Params.len()); (_2827_i)++) {
		{
			if ((!(_2503_checkParams((*(_self_))._field_Params[_2827_i], (*((*(_24021_f))))._field_Params[_2827_i])))) {
				return false;;
			};
		}
	_iter_next_1bdb482d7:;
	}
	_iter_end_1bdb482d7:;;
	if ((!(_1ad7e7c44_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1ad9b8cd3_Equal((*_self_.alloc)._field_Result, (*((*(_24021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1ad7eb7e7_equalTrait(jule::Ptr<_1ad7ea84b_FnIns> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _29924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1ad7eb4a6_EqualFn(_self_, _29924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _1ad7eba7d_Types(_1ad7ea84b_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1bdb4de7a:;
			{
				return nullptr;;
			}
		}
		else if ((_1ad9bca73_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1bdb4dee1:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1bdb4da07:;
			{
				return (*(_1ad9bca73_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1bdb4d8e7:;
	};
}



inline jule::Bool _1ad7ebd14_IsBuiltin(_1ad7ea84b_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1ad7ec09a_IsAnon(_1ad7ea84b_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1ad7e877d_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1ad7ec3db_Same(_1ad7ea84b_FnIns* _self_, jule::Ptr<_1ad7ea84b_FnIns> _34216_f) {
	if ((((*(_self_))._field_Decl != (*(_34216_f))._field_Decl) || ((*_34216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb51b92:;
		if (it != expr_end) {
			jule::I64 _3477_i = it - expr->begin();
			jule::Ptr<_1ad9b6de1_InsGeneric> *_34710_g = it;
			{
				jule::Ptr<_1ad9b6de1_InsGeneric> _3484_g2 = (*(_34216_f))._field_Generics[_3477_i];;
				if ((((*((*((*(_34710_g))))._field_Kind))._field_BindIdent != (*(*(_3484_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1ad9b8cd3_Equal((*((*(_34710_g))))._field_Kind, (*(_3484_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1bdb51b92:;
			++it;
			_3477_i++;
			goto _iter_begin_1bdb51b92;
		}
		_iter_end_1bdb51b92:;
	};
	return true;;
}



inline jule::Str _1ad7ec72c_GetKindStr(_1ad7ea84b_FnIns* _self_, jule::Bool _35922_ident) {
	_1dd0b6912_Builder _3607_s = static__1dd0b74d4_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		_1dd0c0dd3_WriteStr(&_3607_s, jule::Str::lit("unsafe ", 7));
	};
	_1dd0c0dd3_WriteStr(&_3607_s, jule::Str::lit("fn", 2));
	if ((_35922_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1dd0c118b_WriteByte(&_3607_s, ' ');
		_1dd0c0dd3_WriteStr(&_3607_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_1dd0c118b_WriteByte(&_3607_s, '(');
	jule::I64 _3743_n = (*(_self_))._field_Params.len();;
	if ((_3743_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bdb57aaa:;
			if (it != expr_end) {
				jule::I64 _3768_i = it - expr->begin();
				jule::Ptr<_1ad7e96e6_ParamIns> *_37611_p = it;
				{
					_1dd0c0dd3_WriteStr(&_3607_s, _1ad7e9a8c_Str((*(_37611_p)).ptr()));
					if ((_3768_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1dd0c118b_WriteByte(&_3607_s, ',');
					};
				}
				_iter_next_1bdb57aaa:;
				++it;
				_3768_i++;
				goto _iter_begin_1bdb57aaa;
			}
			_iter_end_1bdb57aaa:;
		};
	};
	_1dd0c118b_WriteByte(&_3607_s, ')');
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		_1dd0c118b_WriteByte(&_3607_s, '!');
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1ad7e7c44_IsVoid((*(_self_))._field_Decl))))) {
		_1dd0c118b_WriteByte(&_3607_s, ':');
		_1dd0c0dd3_WriteStr(&_3607_s, _1ad9b8992_Str((*(_self_))._field_Result.ptr()));
	};
	return _1dd0c16ca_Str(&_3607_s);;
}







inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad7ee0ad_SelectPackage(_1ad7eda91_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb616b8:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1bdb616b8:;
			++it;
			goto _iter_begin_1bdb616b8;
		}
		_iter_end_1bdb616b8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad933a83_Var> _1ad7ee4a9_FindVar(_1ad7eda91_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1ad8015dd_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad7ee8a5_FindTypeAlias(_1ad7eda91_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1ad801a94_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1ad7159ec_Struct> _1ad7eeca1_FindStruct(_1ad7eda91_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb63445:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1bdb63445:;
			++it;
			goto _iter_begin_1bdb63445;
		}
		_iter_end_1bdb63445:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ad80019c_FindFn(_1ad7eda91_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb6515b:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1bdb6515b:;
			++it;
			goto _iter_begin_1bdb6515b;
		}
		_iter_end_1bdb6515b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad802ea2_Trait> _1ad8004dd_FindTrait(_1ad7eda91_SymTab* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb6647b:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1bdb6647b:;
			++it;
			goto _iter_begin_1bdb6647b;
		}
		_iter_end_1bdb6647b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad805658_Enum> _1ad80082e_FindEnum(_1ad7eda91_SymTab* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb6748d:;
		if (it != expr_end) {
			jule::Ptr<_1ad805658_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1bdb6748d:;
			++it;
			goto _iter_begin_1bdb6748d;
		}
		_iter_end_1bdb6748d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad806d63_TypeEnum> _1ad800b70_FindTypeEnum(_1ad7eda91_SymTab* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb6847d:;
		if (it != expr_end) {
			jule::Ptr<_1ad806d63_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1bdb6847d:;
			++it;
			goto _iter_begin_1bdb6847d;
		}
		_iter_end_1bdb6847d:;
	};
	return nullptr;;
}



inline jule::I64 _1ad801137_findVar1(_1ad7eda91_SymTab* _self_, jule::Ptr<_1ad933a83_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb6946d:;
		if (it != expr_end) {
			jule::I64 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1bdb6946d:;
			++it;
			_1097_i++;
			goto _iter_begin_1bdb6946d;
		}
		_iter_end_1bdb6946d:;
	};
	return -1LL;;
}



inline jule::Ptr<_1ad933a83_Var> _1ad8015dd_findVar(_1ad7eda91_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I64 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1ad933a83_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1bdb6b2d8:;
		}
		_iter_end_1bdb6b2d8:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bdb6c76d:;
			if (it != expr_end) {
				jule::Ptr<_1ad933a83_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1bdb6c76d:;
				++it;
				goto _iter_begin_1bdb6c76d;
			}
			_iter_end_1bdb6c76d:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad801a94_findTypeAlias(_1ad7eda91_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I64 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1ad9b77a4_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1bdb6e62c:;
		}
		_iter_end_1bdb6e62c:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bdb70ab2:;
			if (it != expr_end) {
				jule::Ptr<_1ad9b77a4_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1bdb70ab2:;
				++it;
				goto _iter_begin_1bdb70ab2;
			}
			_iter_end_1bdb70ab2:;
		};
	};
	return nullptr;;
}



inline jule::Any _1ad801e90_defByIdent(_1ad7eda91_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb71d27:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type7);;
				};
			}
			_iter_next_1bdb71d27:;
			++it;
			goto _iter_begin_1bdb71d27;
		}
		_iter_end_1bdb71d27:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb72a2b:;
		if (it != expr_end) {
			jule::Ptr<_1ad9b77a4_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type8);;
				};
			}
			_iter_next_1bdb72a2b:;
			++it;
			goto _iter_begin_1bdb72a2b;
		}
		_iter_end_1bdb72a2b:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb74148:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type9);;
				};
			}
			_iter_next_1bdb74148:;
			++it;
			goto _iter_begin_1bdb74148;
		}
		_iter_end_1bdb74148:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb759a7:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type10);;
				};
			}
			_iter_next_1bdb759a7:;
			++it;
			goto _iter_begin_1bdb759a7;
		}
		_iter_end_1bdb759a7:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb7cb57:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type11);;
				};
			}
			_iter_next_1bdb7cb57:;
			++it;
			goto _iter_begin_1bdb7cb57;
		}
		_iter_end_1bdb7cb57:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb7c948:;
		if (it != expr_end) {
			jule::Ptr<_1ad805658_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type12);;
				};
			}
			_iter_next_1bdb7c948:;
			++it;
			goto _iter_begin_1bdb7c948;
		}
		_iter_end_1bdb7c948:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb7c519:;
		if (it != expr_end) {
			jule::Ptr<_1ad806d63_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type13);;
				};
			}
			_iter_next_1bdb7c519:;
			++it;
			goto _iter_begin_1bdb7c519;
		}
		_iter_end_1bdb7c519:;
	};
	return nullptr;;
}



inline jule::Bool _1ad802446_isDuplicatedIdent(_1ad7eda91_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb85797:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bdb85797:;
			++it;
			goto _iter_begin_1bdb85797;
		}
		_iter_end_1bdb85797:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb881c3:;
		if (it != expr_end) {
			jule::Ptr<_1ad9b77a4_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bdb881c3:;
			++it;
			goto _iter_begin_1bdb881c3;
		}
		_iter_end_1bdb881c3:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb8d4e7:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bdb8d4e7:;
			++it;
			goto _iter_begin_1bdb8d4e7;
		}
		_iter_end_1bdb8d4e7:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb8e6c4:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bdb8e6c4:;
			++it;
			goto _iter_begin_1bdb8e6c4;
		}
		_iter_end_1bdb8e6c4:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb91b49:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1bdb91b49:;
			++it;
			goto _iter_begin_1bdb91b49;
		}
		_iter_end_1bdb91b49:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb91be3:;
		if (it != expr_end) {
			jule::Ptr<_1ad805658_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1bdb91be3:;
			++it;
			goto _iter_begin_1bdb91be3;
		}
		_iter_end_1bdb91be3:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb92be4:;
		if (it != expr_end) {
			jule::Ptr<_1ad806d63_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1bdb92be4:;
			++it;
			goto _iter_begin_1bdb92be4;
		}
		_iter_end_1bdb92be4:;
	};
	return false;;
}







inline jule::Str _1ad80339d_Str(_1ad802ea2_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ad8036de_Equal(jule::Ptr<_1ad802ea2_Trait> _self_, jule::Ptr<_1ad9b8596_TypeKind> _2518_other) {
	jule::Ptr<_1ad802ea2_Trait> _263_trt = _1ad9bc556_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ad803b84_FindMethod(_1ad802ea2_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb955cb:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1bdb955cb:;
			++it;
			goto _iter_begin_1bdb955cb;
		}
		_iter_end_1bdb955cb:;
	};
	return _1ad804316_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ad804316_findMethodInherit(_1ad802ea2_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb98799:;
		if (it != expr_end) {
			jule::Ptr<_1ad9c0ca7_TypeSymbol> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Kind == nullptr)) {
					goto _iter_next_1bdb98799;
				};
				jule::Ptr<_1ad802ea2_Trait> _608_t = _1ad9bc556_Trait((*_5615_i.alloc)._field_Kind.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1ad7e778d_Fn> _629_f2 = _1ad803b84_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1bdb98799:;
			++it;
			goto _iter_begin_1bdb98799;
		}
		_iter_end_1bdb98799:;
	};
	return nullptr;;
}








inline jule::Bool _1ad804b0d_EnumItem_eq(_1ad804b0d_EnumItem *_self_, _1ad804b0d_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1ad804ec6_AutoExpr(_1ad804b0d_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1ad805a10_Str(_1ad805658_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ad805d51_Equal(jule::Ptr<_1ad805658_Enum> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3818_other) {
	jule::Ptr<_1ad805658_Enum> _393_enm = _1ad9bb500_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1ad804b0d_EnumItem> _1ad806280_FindItem(_1ad805658_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb9c0a5:;
		if (it != expr_end) {
			jule::Ptr<_1ad804b0d_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1bdb9c0a5:;
			++it;
			goto _iter_begin_1bdb9c0a5;
		}
		_iter_end_1bdb9c0a5:;
	};
	return nullptr;;
}








inline jule::Bool _1ad80678b_TypeEnumItem_eq(_1ad80678b_TypeEnumItem *_self_, _1ad80678b_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}





inline jule::Str _1ad8071d7_Str(_1ad806d63_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1ad807528_Equal(jule::Ptr<_1ad806d63_TypeEnum> _self_, jule::Ptr<_1ad9b8596_TypeKind> _8018_other) {
	jule::Ptr<_1ad806d63_TypeEnum> _813_tenm = _1ad9bb786_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1ad80678b_TypeEnumItem> _1ad807957_FindItem(_1ad806d63_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb9e34e:;
		if (it != expr_end) {
			jule::Ptr<_1ad80678b_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1bdb9e34e:;
			++it;
			goto _iter_begin_1bdb9e34e;
		}
		_iter_end_1bdb9e34e:;
	};
	return nullptr;;
}








inline jule::Bool _1ad87db21_comptimeRange_eq(_1ad87db21_comptimeRange *_self_, _1ad87db21_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1ad883e23_Str(_1ad87db21_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1ad8841ba_Equal(jule::Ptr<_1ad87db21_comptimeRange> _self_, jule::Ptr<_1ad9b8596_TypeKind> _2718_other) {
	return false;;
}








inline jule::Bool _1ad8844d9_comptimeStructField_eq(_1ad8844d9_comptimeStructField *_self_, _1ad8844d9_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ad884891_Str(_1ad8844d9_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1ad884bd2_Equal(jule::Ptr<_1ad8844d9_comptimeStructField> _self_, jule::Ptr<_1ad9b8596_TypeKind> _3718_other) {
	return false;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8851dd__Decl(jule::Ptr<_1ad8844d9_comptimeStructField> _self_, jule::Ptr<_1ad9878b7_eval>* _4127_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type14)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8855d9__Type(jule::Ptr<_1ad8844d9_comptimeStructField> _self_, jule::Ptr<_1ad9878b7_eval>* _5327_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad88592a_subIdent(jule::Ptr<_1ad8844d9_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bdbaba98:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _648_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdbacd1e, jule::Ptr<__jule_anon_1bdbacd1e_ctx>::make(__jule_anon_1bdbacd1e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdbacd1e_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bdbabb31:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _718_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdbaec99, jule::Ptr<__jule_anon_1bdbaec99_ctx>::make(__jule_anon_1bdbaec99_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdbaec99_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1bdbab8cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdbab9dd:;
	};
}







inline jule::Str _1ad886145_Str(_1ad885c7c_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1ad886486_Equal(jule::Ptr<_1ad885c7c_comptimeStructFields> _self_, jule::Ptr<_1ad9b8596_TypeKind> _9018_other) {
	return false;;
}



inline void _1ad88691a_ready(_1ad885c7c_comptimeStructFields* _self_, jule::Ptr<_1ad933a83_Var>* _9426_keyA, jule::Ptr<_1ad933a83_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8844d9_comptimeStructField>(_1ad8844d9_comptimeStructField{._field_field=jule::Ptr<_1ad717ca7_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data6)})});
	};
}



inline void _1ad886c7d_index(_1ad885c7c_comptimeStructFields* _self_, jule::Ptr<_1ad985b90_Data>* _11526_d, jule::I64 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8844d9_comptimeStructField>(_1ad8844d9_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data6)});
}



inline void _1ad88719b_step(_1ad885c7c_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1ad933a83_Var>* _12633_keyA, jule::Ptr<_1ad933a83_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1ad7ce07c_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1ad9bd326_comptimeStructField((*((*((*(_12650_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I64 _1ad887432_len(_1ad885c7c_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ad88770c_comptimeStatic_eq(_1ad88770c_comptimeStatic *_self_, _1ad88770c_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ad887ab4_Str(_1ad88770c_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1ad887e05_Equal(jule::Ptr<_1ad88770c_comptimeStatic> _self_, jule::Ptr<_1ad9b8596_TypeKind> _15018_other) {
	return false;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad888411__Decl(jule::Ptr<_1ad88770c_comptimeStatic> _self_, jule::Ptr<_1ad9878b7_eval>* _15427_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type7)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad88880c__Type(jule::Ptr<_1ad88770c_comptimeStatic> _self_, jule::Ptr<_1ad9878b7_eval>* _16627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad888b4d_subIdent(jule::Ptr<_1ad88770c_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bdbc2581:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _1778_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdbc3807, jule::Ptr<__jule_anon_1bdbc3807_ctx>::make(__jule_anon_1bdbc3807_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdbc3807_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bdbc2619:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _1848_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdbc5782, jule::Ptr<__jule_anon_1bdbc5782_ctx>::make(__jule_anon_1bdbc5782_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdbc5782_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1bdbc23b6:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdbc24c6:;
	};
}







inline jule::Str _1ad889368_Str(_1ad888eb1_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1ad8896a9_Equal(jule::Ptr<_1ad888eb1_comptimeStatics> _self_, jule::Ptr<_1ad9b8596_TypeKind> _20318_other) {
	return false;;
}



inline void _1ad889b3d_ready(_1ad888eb1_comptimeStatics* _self_, jule::Ptr<_1ad933a83_Var>* _20726_keyA, jule::Ptr<_1ad933a83_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad88770c_comptimeStatic>(_1ad88770c_comptimeStatic{._field_field=jule::Ptr<_1ad933a83_Var>(nullptr)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data8)})});
	};
}



inline void _1ad889ea1_index(_1ad888eb1_comptimeStatics* _self_, jule::Ptr<_1ad985b90_Data>* _22826_d, jule::I64 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad88770c_comptimeStatic>(_1ad88770c_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data8)});
}



inline void _1ad88a3be_step(_1ad888eb1_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1ad933a83_Var>* _23933_keyA, jule::Ptr<_1ad933a83_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1ad7ce07c_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1ad9beb30_comptimeStatic((*((*((*(_23950_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I64 _1ad88a655_len(_1ad888eb1_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ad88a930_comptimeEnumField_eq(_1ad88a930_comptimeEnumField *_self_, _1ad88a930_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ad88acd7_Str(_1ad88a930_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1ad88b128_Equal(jule::Ptr<_1ad88a930_comptimeEnumField> _self_, jule::Ptr<_1ad9b8596_TypeKind> _26318_other) {
	return false;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad88b623__Decl(jule::Ptr<_1ad88a930_comptimeEnumField> _self_, jule::Ptr<_1ad9878b7_eval>* _26727_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type16)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad88b964_subIdent(jule::Ptr<_1ad88a930_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bdbd563d:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _2828_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdbd6ba0, jule::Ptr<__jule_anon_1bdbd6ba0_ctx>::make(__jule_anon_1bdbd6ba0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdbd6ba0_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1bdbd572b:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdbd2063:;
	};
}







inline jule::Str _1ad88c206_Str(_1ad88bc3e_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1ad88c547_Equal(jule::Ptr<_1ad88bc3e_comptimeEnumFields> _self_, jule::Ptr<_1ad9b8596_TypeKind> _30118_other) {
	return false;;
}



inline void _1ad88c954_ready(_1ad88bc3e_comptimeEnumFields* _self_, jule::Ptr<_1ad933a83_Var>* _30526_keyA, jule::Ptr<_1ad933a83_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad88a930_comptimeEnumField>(_1ad88a930_comptimeEnumField{._field_field=jule::Ptr<_1ad804b0d_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data10)})});
	};
}



inline void _1ad88ccb7_index(_1ad88bc3e_comptimeEnumFields* _self_, jule::Ptr<_1ad985b90_Data>* _32626_d, jule::I64 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad88a930_comptimeEnumField>(_1ad88a930_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data10)});
}



inline void _1ad88d1d5_step(_1ad88bc3e_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1ad933a83_Var>* _33733_keyA, jule::Ptr<_1ad933a83_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1ad7ce07c_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1ad9bd843_comptimeEnumField((*((*((*(_33750_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I64 _1ad88d46b_len(_1ad88bc3e_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ad88d746_comptimeParam_eq(_1ad88d746_comptimeParam *_self_, _1ad88d746_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1ad88daed_Str(_1ad88d746_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1ad88de3e_Equal(jule::Ptr<_1ad88d746_comptimeParam> _self_, jule::Ptr<_1ad9b8596_TypeKind> _36118_other) {
	return false;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad88e45b__Decl(jule::Ptr<_1ad88d746_comptimeParam> _self_, jule::Ptr<_1ad9878b7_eval>* _36527_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type17)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad88e857__Type(jule::Ptr<_1ad88d746_comptimeParam> _self_, jule::Ptr<_1ad9878b7_eval>* _37727_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad88ec53__Recv(jule::Ptr<_1ad88d746_comptimeParam> _self_, jule::Ptr<_1ad9878b7_eval>* _38527_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _3907_constant = static__1ad7ce522_NewBool(_1ad7e6418_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad890094_subIdent(jule::Ptr<_1ad88d746_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bdbecb1c:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _4018_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdbede3c, jule::Ptr<__jule_anon_1bdbede3c_ctx>::make(__jule_anon_1bdbede3c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdbede3c_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1bdbecbb6:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _4088_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdc00db7, jule::Ptr<__jule_anon_1bdc00db7_ctx>::make(__jule_anon_1bdc00db7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc00db7_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bdbecc3d:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _4158_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdc02d42, jule::Ptr<__jule_anon_1bdc02d42_ctx>::make(__jule_anon_1bdc02d42_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc02d42_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1bdbec80e:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdbeca2e:;
	};
}







inline jule::Str _1ad890847_Str(_1ad8905a0_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1ad890b88_Equal(jule::Ptr<_1ad8905a0_comptimeParams> _self_, jule::Ptr<_1ad9b8596_TypeKind> _43418_other) {
	return false;;
}



inline void _1ad89111c_ready(_1ad8905a0_comptimeParams* _self_, jule::Ptr<_1ad933a83_Var>* _43826_keyA, jule::Ptr<_1ad933a83_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad88d746_comptimeParam>(_1ad88d746_comptimeParam{._field_param=jule::Ptr<_1ad7e96e6_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data12)})});
	};
}



inline void _1ad891480_index(_1ad8905a0_comptimeParams* _self_, jule::Ptr<_1ad985b90_Data>* _45926_d, jule::I64 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad88d746_comptimeParam>(_1ad88d746_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data12)});
}



inline void _1ad89189d_step(_1ad8905a0_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1ad933a83_Var>* _47033_keyA, jule::Ptr<_1ad933a83_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1ad7ce07c_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1ad9bdd60_comptimeParam((*((*((*(_47050_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I64 _1ad891b34_len(_1ad8905a0_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1ad8922b6_Str(_1ad891e0e_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1ad892607_Equal(jule::Ptr<_1ad891e0e_comptimeTypeInfos> _self_, jule::Ptr<_1ad9b8596_TypeKind> _49418_other) {
	return false;;
}



inline void _1ad892a8b_ready(_1ad891e0e_comptimeTypeInfos* _self_, jule::Ptr<_1ad933a83_Var>* _49826_keyA, jule::Ptr<_1ad933a83_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad89387d_comptimeTypeInfo>(_1ad89387d_comptimeTypeInfo{._field_base=jule::Ptr<_1ad9b8596_TypeKind>(nullptr)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data15)})});
	};
}



inline void _1ad892dee_index(_1ad891e0e_comptimeTypeInfos* _self_, jule::Ptr<_1ad985b90_Data>* _51926_d, jule::I64 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data15)});
}



inline void _1ad89331c_step(_1ad891e0e_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1ad933a83_Var>* _52833_keyA, jule::Ptr<_1ad933a83_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1ad7ce07c_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data15);
	};
}



inline jule::I64 _1ad8935a3_len(_1ad891e0e_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1ad89387d_comptimeTypeInfo_eq(_1ad89387d_comptimeTypeInfo *_self_, _1ad89387d_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1ad893c35_Str(_1ad89387d_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1ad9b8992_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1ad894076_Equal(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9b8596_TypeKind> _55218_other) {
	return false;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8946b4__Decl(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _55627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1ad9bc2c0_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc19d48:;
			{
				_5617_decl=jule::Any((*(_1ad9bc2c0_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type9);
			}
		}
		else if ((_1ad9bc556_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc19dae:;
			{
				_5617_decl=jule::Any(_1ad9bc556_Trait((*(_self_))._field_base), &__jule_any_type11);
			}
		}
		else if ((_1ad9bb500_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc18880:;
			{
				_5617_decl=jule::Any(_1ad9bb500_Enum((*(_self_))._field_base), &__jule_any_type12);
			}
		}
		else if ((_1ad9bb786_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc188e6:;
			{
				_5617_decl=jule::Any(_1ad9bb786_TypeEnum((*(_self_))._field_base), &__jule_any_type13);
			}
		}
		else if ((_1ad9bc039_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc1895c:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _5728_f = _1ad9bc039_Fn((*(_self_))._field_base);;
				{
					
					if (_1ad7ebd14_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1bdc1edd6:;
						{
							_1ad987e4a_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1ad7ec09a_IsAnon(_5728_f.ptr())) {
						_case_begin_1bdc1ee80:;
						{
							_1ad987e4a_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1bdc1ed4d:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type10);
			}
		}
		else {
			_case_begin_1bdc18819:;
			{
				_1ad987e4a_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bdc186e8:;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad894ab0__Str(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _59322_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _5987_constant = static__1ad7ce7db_NewStr(_1ad9b8992_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e3e6_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad894eab__Kind(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _60627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad805658_Enum> _6117_enm = _1ad8e3988_FindEnum(_1ad8a7771_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1ad804b0d_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1ad9b9960_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1bdc28d02:;
			{
				_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1ad9bc2c0_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc28c14:;
			{
				_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1ad9bc556_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc289b1:;
			{
				_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1ad9bb269_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc28a27:;
			{
				if (_1ad9c951e_IsUnsafe(_1ad9bb269_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1ad9baed3_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc28a8d:;
			{
				_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1ad9bb500_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc28b04:;
			{
				_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1ad9bb786_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc29561:;
			{
				_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1ad9bc7dc_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc295c7:;
			{
				_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1ad9bbca3_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc2963d:;
			{
				_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1ad9bba1c_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc296a4:;
			{
				_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1ad9bc039_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc2972b:;
			{
				_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1ad9bca73_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc297a3:;
			{
				_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1ad9bac4c_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bdc2982a:;
			{
				jule::Ptr<_1ad9c16ae_Prim> _6434_prim = _1ad9bac4c_Prim((*(_self_))._field_base);;
				{
					
					if (_1ad9c4e10_IsAny(_6434_prim.ptr())) {
						_case_begin_1bdc36282:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1ad9c48e3_IsBool(_6434_prim.ptr())) {
						_case_begin_1bdc36194:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1ad9c4b79_IsStr(_6434_prim.ptr())) {
						_case_begin_1bdc35e74:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1ad9c3b23_IsF32(_6434_prim.ptr())) {
						_case_begin_1bdc35eda:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1ad9c3da9_IsF64(_6434_prim.ptr())) {
						_case_begin_1bdc36051:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1ad9c25a0_IsI8(_6434_prim.ptr())) {
						_case_begin_1bdc360b7:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1ad9c2836_IsI16(_6434_prim.ptr())) {
						_case_begin_1bdc369e1:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1ad9c2abc_IsI32(_6434_prim.ptr())) {
						_case_begin_1bdc36a68:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1ad9c2d53_IsI64(_6434_prim.ptr())) {
						_case_begin_1bdc36ae0:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1ad9c30d9_IsU8(_6434_prim.ptr())) {
						_case_begin_1bdc36b67:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1ad9c3370_IsU16(_6434_prim.ptr())) {
						_case_begin_1bdc36bde:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1ad9c3606_IsU32(_6434_prim.ptr())) {
						_case_begin_1bdc36c66:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1ad9c388c_IsU64(_6434_prim.ptr())) {
						_case_begin_1bdc36cdd:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1ad9c4140_IsInt(_6434_prim.ptr())) {
						_case_begin_1bdc36d65:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1ad9c43c6_IsUint(_6434_prim.ptr())) {
						_case_begin_1bdc36ddc:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1ad9c465c_IsUintptr(_6434_prim.ptr())) {
						_case_begin_1bdc36e64:;
						{
							_61211_item=_1ad806280_FindItem(_6117_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1bdc35ccb:;
						{
							__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for std::comptime: ", 52) + _1ad9b8992_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1bdc35c54:;
				};
			}
		}
		else {
			_case_begin_1bdc2884b:;
			{
				__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for std::comptime: ", 52) + _1ad9b8992_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1bdc28791:;
	};
	return _1ad9b4d56_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1ad98ae4d_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8953a7__Bits(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _68627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _6913_prim = _1ad9bac4c_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1ad987e4a_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _6963_n = _1ad874056_BitSizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1ad987e4a_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _7017_constant = static__1ad7ce07c_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa00c8_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8957a3__Elem(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _71027_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad9c89a2_Ptr> _7157_ptr = _1ad9bb269_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1ad9c951e_IsUnsafe(_7157_ptr)) {
			_1ad987e4a_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1ad9c51da_Sptr> _7237_sptr = _1ad9baed3_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1ad9c5bad_Slc> _7277_slice = _1ad9bbca3_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1ad9c7ece_Arr> _7317_array = _1ad9bba1c_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1ad805658_Enum> _7357_enm = _1ad9bb500_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1ad987e4a_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad895b9e__Size(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _74327_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad9c7ece_Arr> _7487_arr = _1ad9bba1c_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1ad987e4a_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _7537_constant = static__1ad7ce07c_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa00c8_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad89609a__Key(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _76226_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad9c7352_Map> _7677_m = _1ad9bc7dc_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1ad987e4a_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad896496__Value(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _77528_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad9c7352_Map> _7807_m = _1ad9bc7dc_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1ad987e4a_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad896892__Fields(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _78829_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad718857_StructIns> _7937_s = _1ad9bc2c0_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad885c7c_comptimeStructFields>(_1ad885c7c_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
	};
	jule::Ptr<_1ad805658_Enum> _8037_enm = _1ad9bb500_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad88bc3e_comptimeEnumFields>(_1ad88bc3e_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
	};
	_1ad987e4a_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad896c8d__Statics(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _81730_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad718857_StructIns> _8227_s = _1ad9bc2c0_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1ad987e4a_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad888eb1_comptimeStatics>(_1ad888eb1_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad897189__Binded(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _83629_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _8417_constant = static__1ad7ce522_NewBool(_1ad9b9443_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad897585__Ordered(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _84926_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _8547_constant = static__1ad7ce522_NewBool(_1ad9ba213_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad897981__Comparable(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _86229_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _8677_constant = static__1ad7ce522_NewBool(_1ad9b9be6_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad897d7c__Mutable(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _87526_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _8807_constant = static__1ad7ce522_NewBool(_1ad9b9e7c_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad898278__Types(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _88828_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad9c67a2_Tuple> _8937_tup = _1ad9bca73_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1ad987e4a_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad891e0e_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1ad891e0e_comptimeTypeInfos>(_1ad891e0e_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad89387d_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad89387d_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8937_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc79a78:;
		if (it != expr_end) {
			jule::Ptr<_1ad9b8596_TypeKind> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad89387d_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad90e6da_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1bdc79a78:;
			++it;
			goto _iter_begin_1bdc79a78;
		}
		_iter_end_1bdc79a78:;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad898674__CanNil(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _91129_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _9167_constant = static__1ad7ce522_NewBool(_1ad9ba499_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad898a70__GC(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _92425_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _9297_constant = static__1ad7ce522_NewBool(_1ad9ba730_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad898e6b__Result(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _93729_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _9427_f = _1ad9bc039_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1ad987e4a_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1ada9dd41_primVoid));;
	};
	return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad899367__Params(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Ptr<_1ad9878b7_eval>* _95329_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _9587_f = _1ad9bc039_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1ad987e4a_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8905a0_comptimeParams>(_1ad8905a0_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8996a8_subIdent(jule::Ptr<_1ad89387d_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bdc8ac43:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _9738_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdc8c805, jule::Ptr<__jule_anon_1bdc8c805_ctx>::make(__jule_anon_1bdc8c805_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc8c805_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1bdc8aca9:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _9808_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdc8e780, jule::Ptr<__jule_anon_1bdc8e780_ctx>::make(__jule_anon_1bdc8e780_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc8e780_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1bdc8ad20:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _9878_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdc9170a, jule::Ptr<__jule_anon_1bdc9170a_ctx>::make(__jule_anon_1bdc9170a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc9170a_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1bdc8aea7:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _9948_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdc93685, jule::Ptr<__jule_anon_1bdc93685_ctx>::make(__jule_anon_1bdc93685_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc93685_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1bdc8b02e:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10018_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdc95610, jule::Ptr<__jule_anon_1bdc95610_ctx>::make(__jule_anon_1bdc95610_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc95610_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1bdc8b0a6:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10088_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdc9758a, jule::Ptr<__jule_anon_1bdc9758a_ctx>::make(__jule_anon_1bdc9758a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc9758a_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1bdc8b12d:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10158_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdc99515, jule::Ptr<__jule_anon_1bdc99515_ctx>::make(__jule_anon_1bdc99515_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc99515_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bdc8b23d:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10228_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdc9b490, jule::Ptr<__jule_anon_1bdc9b490_ctx>::make(__jule_anon_1bdc9b490_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc9b490_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bdc8b2a4:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10298_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdc9d55d, jule::Ptr<__jule_anon_1bdc9d55d_ctx>::make(__jule_anon_1bdc9d55d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdc9d55d_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bdc8b31a:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10368_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdca04d8, jule::Ptr<__jule_anon_1bdca04d8_ctx>::make(__jule_anon_1bdca04d8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdca04d8_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1bdc8b381:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10438_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdca2463, jule::Ptr<__jule_anon_1bdca2463_ctx>::make(__jule_anon_1bdca2463_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdca2463_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bdc8b408:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10508_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdca43dd, jule::Ptr<__jule_anon_1bdca43dd_ctx>::make(__jule_anon_1bdca43dd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdca43dd_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1bdc8b480:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10578_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdca6368, jule::Ptr<__jule_anon_1bdca6368_ctx>::make(__jule_anon_1bdca6368_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdca6368_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1bdc8b507:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10648_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdca82e3, jule::Ptr<__jule_anon_1bdca82e3_ctx>::make(__jule_anon_1bdca82e3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdca82e3_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bdc8b57e:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10718_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdcaa26d, jule::Ptr<__jule_anon_1bdcaa26d_ctx>::make(__jule_anon_1bdcaa26d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdcaa26d_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1bdc8b606:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10788_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdcac1e8, jule::Ptr<__jule_anon_1bdcac1e8_ctx>::make(__jule_anon_1bdcac1e8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdcac1e8_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1bdc8b67d:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10858_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdcae173, jule::Ptr<__jule_anon_1bdcae173_ctx>::make(__jule_anon_1bdcae173_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdcae173_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1bdc8b705:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10928_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdcb10ed, jule::Ptr<__jule_anon_1bdcb10ed_ctx>::make(__jule_anon_1bdcb10ed_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdcb10ed_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1bdc8b77c:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10998_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdcb3078, jule::Ptr<__jule_anon_1bdcb3078_ctx>::make(__jule_anon_1bdcb3078_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdcb3078_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1bdc88702:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdc8aa23:;
	};
}








inline jule::Bool _1ad899983_comptimeValue_eq(_1ad899983_comptimeValue *_self_, _1ad899983_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1ad899d3a_Str(_1ad899983_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1ad89a17b_Equal(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9b8596_TypeKind> _111818_other) {
	return false;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad89a6dc__Unwrap(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _112229_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad89aad8__Type(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _113027_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad89aed4__Lvalue(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _113829_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _11437_constant = static__1ad7ce522_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad89b3d0__Mutable(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _115130_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _11567_constant = static__1ad7ce522_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad89b7cb__Const(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _116428_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _11697_constant = static__1ad7ce522_NewBool(_1ad9865ca_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad89bbc7__Field(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _117728_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad718857_StructIns> _11827_s = _1ad9bc2c0_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_11827_s == nullptr)) {
		_1ad987e4a_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_data))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad6e94e7_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1ad985b90_Data> _11887_d = _1ad9a672c_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ad9865ca_IsConst(_11887_d.ptr())))) {
		_1ad987e4a_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _11963_prim = _1ad9bac4c_Prim((*(_11887_d))._field_Kind);;
	if (((_11963_prim == nullptr) || (!(_1ad9c4b79_IsStr(_11963_prim.ptr()))))) {
		_1ad987e4a_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_11887_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1ad7d0bc7_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1ad717ca7_FieldIns> _12027_f = _1ad719c43_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1ad987e4a_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11827_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12013_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1ad985b90_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1ad99e417_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*_11877_arg.alloc)._field_Token), &(_12027_f));
	return _1ad8a7e36_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad89c0c3__Method(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Ptr<_1ad9878b7_eval>* _121229_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1ad718857_StructIns> _12187_s = static_cast<jule::Ptr<_1ad718857_StructIns>>(nullptr);;
	if ((_1ad9baed3_Sptr((*((*(_self_))._field_data))._field_Kind.ptr()) != nullptr)) {
		_12187_s=_1ad9bc2c0_Struct((*(_1ad9baed3_Sptr((*((*(_self_))._field_data))._field_Kind)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_1ad9bc2c0_Struct((*((*(_self_))._field_data))._field_Kind.ptr());
	};
	if ((_12187_s == nullptr)) {
		_1ad987e4a_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad6e94e7_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1ad985b90_Data> _12307_d = _1ad9a672c_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ad9865ca_IsConst(_12307_d.ptr())))) {
		_1ad987e4a_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _12383_prim = _1ad9bac4c_Prim((*(_12307_d))._field_Kind);;
	if (((_12383_prim == nullptr) || (!(_1ad9c4b79_IsStr(_12383_prim.ptr()))))) {
		_1ad987e4a_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_12307_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _1ad7d0bc7_ReadStr((*(_12307_d))._field_Constant.ptr());;
	;
	jule::Ptr<_1ad7e778d_Fn> _12457_m = _1ad719902_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_1ad987e4a_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_12187_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12433_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_1ad985b90_Data>((*(*(_self_))._field_data.alloc));
	if (_12177_ref) {
		_1ad9b540b_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_1ad99ea33_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*_12297_arg.alloc)._field_Token), &(_12457_m), _12177_ref);
	return _1ad8a7e36_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad89c414_subIdent(jule::Ptr<_1ad899983_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1bdce2c01:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _12618_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdce41b9, jule::Ptr<__jule_anon_1bdce41b9_ctx>::make(__jule_anon_1bdce41b9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdce41b9_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bdce2c67:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _12688_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdce6144, jule::Ptr<__jule_anon_1bdce6144_ctx>::make(__jule_anon_1bdce6144_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdce6144_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1bdce2ccd:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _12758_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdce80be, jule::Ptr<__jule_anon_1bdce80be_ctx>::make(__jule_anon_1bdce80be_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdce80be_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bdce2d55:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _12828_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdcea049, jule::Ptr<__jule_anon_1bdcea049_ctx>::make(__jule_anon_1bdcea049_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdcea049_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1bdce3042:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _12898_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdcebec4, jule::Ptr<__jule_anon_1bdcebec4_ctx>::make(__jule_anon_1bdcebec4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdcebec4_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1bdce30a8:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _12968_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdcede4e, jule::Ptr<__jule_anon_1bdcede4e_ctx>::make(__jule_anon_1bdcede4e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdcede4e_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1bdce311e:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _13038_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd00dc9, jule::Ptr<__jule_anon_1bdd00dc9_ctx>::make(__jule_anon_1bdd00dc9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd00dc9_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_1bdce26c3:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdce2aad:;
	};
}







inline jule::Str _1ad89ca96_Str(_1ad89c6de_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1ad89cdd7_Equal(jule::Ptr<_1ad89c6de_comptimeFiles> _self_, jule::Ptr<_1ad9b8596_TypeKind> _132218_other) {
	return false;;
}



inline void _1ad89d36b_ready(_1ad89c6de_comptimeFiles* _self_, jule::Ptr<_1ad933a83_Var>* _132626_keyA, jule::Ptr<_1ad933a83_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad89e15d_comptimeFile>(_1ad89e15d_comptimeFile{._field_file=jule::Ptr<_1ad7eda91_SymTab>(nullptr)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data18)})});
	};
}



inline void _1ad89d6ce_index(_1ad89c6de_comptimeFiles* _self_, jule::Ptr<_1ad985b90_Data>* _134726_d, jule::I64 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad89e15d_comptimeFile>(_1ad89e15d_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data18)});
}



inline void _1ad89daec_step(_1ad89c6de_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1ad933a83_Var>* _135833_keyA, jule::Ptr<_1ad933a83_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__1ad7ce07c_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1ad89e15d_comptimeFile>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I64 _1ad89dd83_len(_1ad89c6de_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1ad89e15d_comptimeFile_eq(_1ad89e15d_comptimeFile *_self_, _1ad89e15d_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1ad89e515_Str(_1ad89e15d_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1ad89e856_Equal(jule::Ptr<_1ad89e15d_comptimeFile> _self_, jule::Ptr<_1ad9b8596_TypeKind> _138218_other) {
	return false;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad89ed73__Path(jule::Ptr<_1ad89e15d_comptimeFile> _self_, jule::Ptr<_1ad9878b7_eval>* _138627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _13917_constant = static__1ad7ce7db_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e3e6_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a026e__Name(jule::Ptr<_1ad89e15d_comptimeFile> _self_, jule::Ptr<_1ad9878b7_eval>* _139927_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _14047_constant = static__1ad7ce7db_NewStr(_1ad6d625e_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e3e6_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a066a__Dir(jule::Ptr<_1ad89e15d_comptimeFile> _self_, jule::Ptr<_1ad9878b7_eval>* _141226_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad778ec2_Const> _14177_constant = static__1ad7ce7db_NewStr(_1ad6d5ec8_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e3e6_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a09ab_subIdent(jule::Ptr<_1ad89e15d_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1bdd147c2:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _14288_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd15ae2, jule::Ptr<__jule_anon_1bdd15ae2_ctx>::make(__jule_anon_1bdd15ae2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd15ae2_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bdd1486b:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _14358_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd17a6c, jule::Ptr<__jule_anon_1bdd17a6c_ctx>::make(__jule_anon_1bdd17a6c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd17a6c_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1bdd148e3:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _14428_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd199e7, jule::Ptr<__jule_anon_1bdd199e7_ctx>::make(__jule_anon_1bdd199e7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd199e7_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_1bdd144b4:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdd146d4:;
	};
}







inline jule::Str _1ad8a136e_Str(_1ad8a0c86_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1ad8a16b0_Equal(jule::Ptr<_1ad8a0c86_comptimeDecls> _self_, jule::Ptr<_1ad9b8596_TypeKind> _146118_other) {
	return false;;
}



inline void _1ad8a1a34_ready(_1ad8a0c86_comptimeDecls* _self_, jule::Ptr<_1ad933a83_Var>* _146526_keyA, jule::Ptr<_1ad933a83_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data20)})});
	};
}



inline void _1ad8a1d97_index(_1ad8a0c86_comptimeDecls* _self_, jule::Ptr<_1ad985b90_Data>* _148626_d, jule::I64 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data20)});
}



inline void _1ad8a22b5_step(_1ad8a0c86_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1ad933a83_Var>* _149533_keyA, jule::Ptr<_1ad933a83_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__1ad7ce07c_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1ad8a3074_comptimeDecl>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I64 _1ad8a254b_len(_1ad8a0c86_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1ad8a3074_comptimeDecl_eq(_1ad8a3074_comptimeDecl *_self_, _1ad8a3074_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1ad8a342b_Str(_1ad8a3074_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1ad8a376c_Equal(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9b8596_TypeKind> _153418_other) {
	return false;;
}



inline jule::Str _1ad8a3bbd_declAsStr(_1ad8a3074_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bdd24ae0:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bdd24590:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bdd2499c:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bdd24a24:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bdd24c99:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bdd24d21:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bdd25096:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bdd2510c:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bdd25173:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bdd251d9:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1bdd24936:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_1bdd246c2:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a40b9__Name(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _156527_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bdd297c6:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad7159ec_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bdd29b7d:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad7e778d_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bdd29be4:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad805658_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bdd29c6b:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad806d63_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bdd29ce3:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad802ea2_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bdd29d6a:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad712ac6_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bdd2a222:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad9b77a4_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bdd2a288:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad933a83_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bdd2a2ee:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad804b0d_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bdd2a365:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad7e5cb9_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1bdd29b17:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_1bdd29aa1:;
	};
	jule::Ptr<_1ad778ec2_Const> _15957_constant = static__1ad7ce7db_NewStr(_15707_name);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e3e6_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a44b5__Public(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _160329_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1bdd33ba9:;
			{
				_1ad987e4a_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8a3bbd_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bdd34050:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad7159ec_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bdd340b6:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad7e778d_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bdd3412c:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad805658_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bdd341a4:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad806d63_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bdd3422b:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad802ea2_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bdd342a3:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad712ac6_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bdd34605:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad9b77a4_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bdd3467c:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad933a83_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1bdd33ed9:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_1bdd33e73:;
	};
	jule::Ptr<_1ad778ec2_Const> _16337_constant = static__1ad7ce522_NewBool(_16087_public);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a48b1__Binded(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _164129_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1bdd3d686:;
			{
				_1ad987e4a_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8a3bbd_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bdd3d367:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad7159ec_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bdd3d3cd:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad7e778d_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bdd3d444:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad9b77a4_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bdd3d4aa:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad933a83_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1bdd3d301:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_1bdd3d28a:;
	};
	jule::Ptr<_1ad778ec2_Const> _16677_constant = static__1ad7ce522_NewBool(_16467_binded);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a4cac__Exceptional(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _167534_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bdd43b53:;
			{
				goto _match_end_1bdd44ed9;
			}
		}
		else {
			_case_begin_1bdd45050:;
			{
				_1ad987e4a_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8a3bbd_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bdd44ed9:;
	};
	jule::Ptr<_1ad7e778d_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_1ad7e778d_Fn>(&__jule_any_type10);;
	jule::Ptr<_1ad778ec2_Const> _16887_constant = static__1ad7ce522_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a51a8__Mutable(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _169630_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16) {
			_case_begin_1bdd4a044:;
			{
				_1ad987e4a_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8a3bbd_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bdd49c25:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad7e5cb9_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bdd49c8b:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad712ac6_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bdd49d02:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad933a83_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1bdd49bae:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_1bdd49b48:;
	};
	jule::Ptr<_1ad778ec2_Const> _17217_constant = static__1ad7ce522_NewBool(_17017_mutable);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a55a4__Variadic(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _172931_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7) {
			_case_begin_1bdd51886:;
			{
				_1ad987e4a_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8a3bbd_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bdd51567:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad7e5cb9_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1bdd51501:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_1bdd5148a:;
	};
	jule::Ptr<_1ad778ec2_Const> _17527_constant = static__1ad7ce522_NewBool(_17347_variadic);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a59a0__Reference(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _176032_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14) {
			_case_begin_1bdd570d9:;
			{
				_1ad987e4a_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8a3bbd_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bdd56cba:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad933a83_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bdd56d31:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ad7e5cb9_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1bdd56c54:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_1bdd56bdd:;
	};
	jule::Ptr<_1ad778ec2_Const> _17847_constant = static__1ad7ce522_NewBool(_17657_ref);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a5d9b__Params(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _179229_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1bdd5b4b7:;
			{
				_1ad987e4a_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8a3bbd_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bdd5ccb0:;
			{
				jule::Ptr<_1ad7e778d_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1ad7e778d_Fn>();;
				jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad8a3074_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdd612e1:;
					if (it != expr_end) {
						jule::I64 _18129_i = it - expr->begin();
						jule::Ptr<_1ad7e5cb9_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type17)});
						}
						_iter_next_1bdd612e1:;
						++it;
						_18129_i++;
						goto _iter_begin_1bdd612e1;
					}
					_iter_end_1bdd612e1:;
				};
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8a0c86_comptimeDecls>(_1ad8a0c86_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bdd5c8b4:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_1bdd5c84d:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a6297__Fields(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _182729_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10) {
			_case_begin_1bdd64d0b:;
			{
				_1ad987e4a_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8a3bbd_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bdd649dc:;
			{
				jule::Ptr<_1ad805658_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1ad805658_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad8a3074_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdd6800c:;
					if (it != expr_end) {
						jule::I64 _18479_i = it - expr->begin();
						jule::Ptr<_1ad804b0d_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type16)});
						}
						_iter_next_1bdd6800c:;
						++it;
						_18479_i++;
						goto _iter_begin_1bdd6800c;
					}
					_iter_end_1bdd6800c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bdd64a53:;
			{
				jule::Ptr<_1ad7159ec_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1ad7159ec_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad8a3074_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdd69e21:;
					if (it != expr_end) {
						jule::I64 _18539_i = it - expr->begin();
						jule::Ptr<_1ad712ac6_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type14)});
						}
						_iter_next_1bdd69e21:;
						++it;
						_18539_i++;
						goto _iter_begin_1bdd69e21;
					}
					_iter_end_1bdd69e21:;
				};
			}
		}
		else {
			_case_begin_1bdd64976:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_1bdd64910:;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8a0c86_comptimeDecls>(_1ad8a0c86_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a6693__Statics(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _186830_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1bdd6d9a2:;
			{
				_1ad987e4a_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8a3bbd_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bdd6d683:;
			{
				jule::Ptr<_1ad7159ec_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1ad7159ec_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad8a3074_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdd71c91:;
					if (it != expr_end) {
						jule::I64 _18899_i = it - expr->begin();
						jule::Ptr<_1ad933a83_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type7)});
						}
						_iter_next_1bdd71c91:;
						++it;
						_18899_i++;
						goto _iter_begin_1bdd71c91;
					}
					_iter_end_1bdd71c91:;
				};
			}
		}
		else {
			_case_begin_1bdd6d61c:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_1bdd6d5a6:;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8a0c86_comptimeDecls>(_1ad8a0c86_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a6a8e__Methods(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Ptr<_1ad9878b7_eval>* _190430_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1bdd75822:;
			{
				_1ad987e4a_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8a3bbd_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bdd75503:;
			{
				jule::Ptr<_1ad802ea2_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1ad802ea2_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad8a3074_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdd78a23:;
					if (it != expr_end) {
						jule::I64 _19249_i = it - expr->begin();
						jule::Ptr<_1ad7e778d_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type10)});
						}
						_iter_next_1bdd78a23:;
						++it;
						_19249_i++;
						goto _iter_begin_1bdd78a23;
					}
					_iter_end_1bdd78a23:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bdd75569:;
			{
				jule::Ptr<_1ad7159ec_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1ad7159ec_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8a3074_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad8a3074_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdd7a937:;
					if (it != expr_end) {
						jule::I64 _19309_i = it - expr->begin();
						jule::Ptr<_1ad7e778d_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_1ad8a3074_comptimeDecl>(_1ad8a3074_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type10)});
						}
						_iter_next_1bdd7a937:;
						++it;
						_19309_i++;
						goto _iter_begin_1bdd7a937;
					}
					_iter_end_1bdd7a937:;
				};
			}
		}
		else {
			_case_begin_1bdd7548c:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_1bdd75426:;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad8a0c86_comptimeDecls>(_1ad8a0c86_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a6dd0_subIdent(jule::Ptr<_1ad8a3074_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bdd7c1ec:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _19488_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd7d8d5, jule::Ptr<__jule_anon_1bdd7d8d5_ctx>::make(__jule_anon_1bdd7d8d5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd7d8d5_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1bdd7c263:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _19558_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd80860, jule::Ptr<__jule_anon_1bdd80860_ctx>::make(__jule_anon_1bdd80860_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd80860_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bdd7c2da:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _19628_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd827da, jule::Ptr<__jule_anon_1bdd827da_ctx>::make(__jule_anon_1bdd827da_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd827da_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1bdd7c362:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _19698_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd84765, jule::Ptr<__jule_anon_1bdd84765_ctx>::make(__jule_anon_1bdd84765_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd84765_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bdd7c51b:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _19768_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd866e0, jule::Ptr<__jule_anon_1bdd866e0_ctx>::make(__jule_anon_1bdd866e0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd866e0_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1bdd7c582:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _19838_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd8866a, jule::Ptr<__jule_anon_1bdd8866a_ctx>::make(__jule_anon_1bdd8866a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd8866a_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1bdd7c609:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _19908_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd8a5e5, jule::Ptr<__jule_anon_1bdd8a5e5_ctx>::make(__jule_anon_1bdd8a5e5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd8a5e5_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bdd7c681:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _19978_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd8c570, jule::Ptr<__jule_anon_1bdd8c570_ctx>::make(__jule_anon_1bdd8c570_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd8c570_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bdd7c7a2:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _20048_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd8e63d, jule::Ptr<__jule_anon_1bdd8e63d_ctx>::make(__jule_anon_1bdd8e63d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd8e63d_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bdd7c818:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _20118_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd915b8, jule::Ptr<__jule_anon_1bdd915b8_ctx>::make(__jule_anon_1bdd915b8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd915b8_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1bdd7c87e:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _20188_method = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>((void*)__jule_anon_1bdd93543, jule::Ptr<__jule_anon_1bdd93543_ctx>::make(__jule_anon_1bdd93543_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd93543_ctx_handler), ._field_reloaded=false});;
				return _1ad8a7562_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_1bdd7799a:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdd7beaa:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1ad90ed6c_sema>*,jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>*> _1ad8a9d8e_readyFn(jule::Ptr<_1ad8a9960_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1ad90ed6c_sema>*,jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>*>((void*)__jule_anon_1bdd9e818, jule::Ptr<__jule_anon_1bdd9e818_ctx>::make(__jule_anon_1bdd9e818_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdd9e818_ctx_handler);;
}



inline jule::Bool _1ad8aa125_readyFi(jule::Ptr<_1ad8a9960_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1ad91d4da_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1ad8a9d8e_readyFn(_self_)));;
}



inline jule::Bool _1ad8aa3ab_readySi(jule::Ptr<_1ad8a9960_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1ad8a9d8e_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1ad8aa642_ready(jule::Ptr<_1ad8a9960_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1ad8aa125_readyFi(_self_);;
	};
	return _1ad8aa3ab_readySi(_self_);;
}



inline jule::Bool _1ad8aa8c8_check(jule::Ptr<_1ad8a9960_constraintChecker> _self_) {
	if ((!(_1ad8aa642_ready(_self_)))) {
		return false;;
	};
	_julec_label_1bddb041c:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bddb08c3:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1ad9b6de1_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1bddb08c3;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bddb1ad3:;
					if (it != expr_end) {
						jule::Ptr<_1ad9b8596_TypeKind> _12416_c2 = *it;
						{
							jule::Ptr<_1ad9c16ae_Prim> _1259_prim = _1ad9bac4c_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1ad9c2319_IsConstraint(_1259_prim))) {
								if (_1ad8ab126_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Kind))) {
									goto _iter_next_1bddb08c3;
								};
								goto _iter_next_1bddb1ad3;
							};
							if (_1ad9b8cd3_Equal(_12416_c2, (*_12015_g.alloc)._field_Kind)) {
								goto _iter_next_1bddb08c3;
							};
						}
						_iter_next_1bddb1ad3:;
						++it;
						goto _iter_begin_1bddb1ad3;
					}
					_iter_end_1bddb1ad3:;
				};
				_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*_12015_g.alloc)._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1ad8aac5d_toStrConstraints(_12015_g), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
			_iter_next_1bddb08c3:;
			++it;
			_1208_i++;
			goto _iter_begin_1bddb08c3;
		}
		_iter_end_1bddb08c3:;
	};
	return true;;
}







inline jule::Bool _1ad8ac15a_IsTraitImpl(_1ad8abc5e_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1ad8ac3e1_IsStructImpl(_1ad8abc5e_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _1ad8b178b_If_eq(_1ad8b178b_If *_self_, _1ad8b178b_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1ad8b1a88_Else_eq(_1ad8b1a88_Else *_self_, _1ad8b1a88_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1ad8b22a3_InfIter_eq(_1ad8b22a3_InfIter *_self_, _1ad8b22a3_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1ad8b2759_WhileIter_eq(_1ad8b2759_WhileIter *_self_, _1ad8b2759_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1ad8b2b00_IsWhileNext(_1ad8b2759_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1ad8b31a5_RangeIter_eq(_1ad8b31a5_RangeIter *_self_, _1ad8b31a5_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1ad8b353a_ContSt_eq(_1ad8b353a_ContSt *_self_, _1ad8b353a_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1ad8b3914_BreakSt_eq(_1ad8b3914_BreakSt *_self_, _1ad8b3914_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1ad8b3dba_Label_eq(_1ad8b3dba_Label *_self_, _1ad8b3dba_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1ad8b452a_GotoSt_eq(_1ad8b452a_GotoSt *_self_, _1ad8b452a_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1ad8b4904_Postfix_eq(_1ad8b4904_Postfix *_self_, _1ad8b4904_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1ad8b4daa_Assign_eq(_1ad8b4daa_Assign *_self_, _1ad8b4daa_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1ad8b6cbe_FallSt_eq(_1ad8b6cbe_FallSt *_self_, _1ad8b6cbe_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1ad8b7165_RetSt_eq(_1ad8b7165_RetSt *_self_, _1ad8b7165_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ad8b761b_scopeLabel_eq(_1ad8b761b_scopeLabel *_self_, _1ad8b761b_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1ad8b860b_scopeChecker_eq(_1ad8b860b_scopeChecker *_self_, _1ad8b860b_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8b8ad4_SelectPackage(_1ad8b860b_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _34829_selector) {
	return _1ad910345_SelectPackage((*(_self_))._field_s.ptr(), _34829_selector);;
}



inline jule::Ptr<_1ad933a83_Var> _1ad8b8ed0_FindVar(_1ad8b860b_scopeChecker* _self_, jule::Str _35923_ident, jule::Bool _35935_binded) {
	if ((!(_35935_binded))) {
		jule::Ptr<_1ad933a83_Var> _3618_v = _1ad8bc346_findVar(_self_, _35923_ident);;
		if ((_3618_v != nullptr)) {
			return _3618_v;;
		};
	};
	return _1ad910741_FindVar((*(_self_))._field_s.ptr(), _35923_ident, _35935_binded);;
}



inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad8b93cb_FindTypeAlias(_1ad8b860b_scopeChecker* _self_, jule::Str _37629_ident, jule::Bool _37641_binded) {
	;
	jule::Ptr<_1ad9b77a4_TypeAlias> _3797_ta = _1ad801a94_findTypeAlias((*(_self_))._field_table.ptr(), &(_37629_ident), _37641_binded, true);;
	if ((_3797_ta != nullptr)) {
		return _3797_ta;;
	};
	jule::Ptr<_1ad8b860b_scopeChecker> _3847_parent = (*(_self_))._field_parent;;
	while ((_3847_parent != nullptr)) {
		{
			_3797_ta=_1ad801a94_findTypeAlias((*(_3847_parent))._field_table, &(_37629_ident), _37641_binded, true);
			if ((_3797_ta != nullptr)) {
				return _3797_ta;;
			};
			_3847_parent=(*_3847_parent.alloc)._field_parent;
		}
	_iter_next_1bde0e614:;
	}
	_iter_end_1bde0e614:;;
	return _1ad910b3c_FindTypeAlias((*(_self_))._field_s.ptr(), _37629_ident, _37641_binded);;
}



inline jule::Ptr<_1ad7159ec_Struct> _1ad8b97c7_FindStruct(_1ad8b860b_scopeChecker* _self_, jule::Str _40126_ident, jule::Bool _40138_binded) {
	return _1ad911038_FindStruct((*(_self_))._field_s.ptr(), _40126_ident, _40138_binded);;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ad8b9bc3_FindFn(_1ad8b860b_scopeChecker* _self_, jule::Str _41022_ident, jule::Bool _41034_binded) {
	return _1ad911434_FindFn((*(_self_))._field_s.ptr(), _41022_ident, _41034_binded);;
}



inline jule::Ptr<_1ad802ea2_Trait> _1ad8ba014_FindTrait(_1ad8b860b_scopeChecker* _self_, jule::Str _41925_ident) {
	return _1ad911775_FindTrait((*(_self_))._field_s.ptr(), _41925_ident);;
}



inline jule::Ptr<_1ad805658_Enum> _1ad8ba355_FindEnum(_1ad8b860b_scopeChecker* _self_, jule::Str _42824_ident) {
	return _1ad911ab6_FindEnum((*(_self_))._field_s.ptr(), _42824_ident);;
}



inline jule::Ptr<_1ad806d63_TypeEnum> _1ad8ba696_FindTypeEnum(_1ad8b860b_scopeChecker* _self_, jule::Str _43728_ident) {
	return _1ad911e07_FindTypeEnum((*(_self_))._field_s.ptr(), _43728_ident);;
}



inline jule::Bool _1ad8ba9e8_isUnsafe(jule::Ptr<_1ad8b860b_scopeChecker> _self_) {
	jule::Ptr<_1ad8b860b_scopeChecker> _4457_scope = _self_;;
	_julec_label_1bde148d3:;
	if ((*((*(_4457_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_4457_scope.alloc)._field_parent != nullptr)) {
		_4457_scope=(*_4457_scope.alloc)._field_parent;
		goto _julec_label_1bde148d3;
	};
	return false;;
}



inline jule::Bool _1ad8bac7e_isRoot(_1ad8b860b_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1ad8bae7c_stop(_1ad8b860b_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1ad8bb213_stopped(_1ad8b860b_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1ad8bb499_isDeferred(jule::Ptr<_1ad8b860b_scopeChecker> _self_) {
	jule::Ptr<_1ad8b860b_scopeChecker> _4787_scope = _self_;;
	_julec_label_1bde174a7:;
	if ((*((*(_4787_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_4787_scope.alloc)._field_parent != nullptr)) {
		_4787_scope=(*_4787_scope.alloc)._field_parent;
		goto _julec_label_1bde174a7;
	};
	return false;;
}



inline void _1ad8bb752_pushCaptured(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad933a83_Var>* _49934_v) {
	jule::Ptr<_1ad8b860b_scopeChecker> _5007_sc = _self_;;
	for (;;) {
		{
			if (((*(_5007_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5007_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bde19ad6:;
					if (it != expr_end) {
						jule::Ptr<_1ad933a83_Var> _50312_cv = *it;
						{
							if ((_50312_cv == (*(_49934_v)))) {
								goto _julec_label_1bde1aa2c;
							};
						}
						_iter_next_1bde19ad6:;
						++it;
						goto _iter_begin_1bde19ad6;
					}
					_iter_end_1bde19ad6:;
				};
				(*(*(_5007_sc))._field_captured.alloc)=jule::append((*(*(_5007_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_49934_v)); __jule_collection; }));
				_julec_label_1bde1aa2c:;
			};
			if (((*_5007_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1bde18d7c;
			};
			_5007_sc=(*_5007_sc.alloc)._field_parent;
			if ((!(_1ad9b5ebc_isVarCaptured(_5007_sc, _5007_sc, (*(_49934_v)))))) {
				goto _iter_end_1bde18d7c;
			};
		}
	_iter_next_1bde18d7c:;
	}
	_iter_end_1bde18d7c:;;
}



inline jule::Ptr<_1ad8b860b_scopeChecker> _1ad8bb9d8_getRoot(jule::Ptr<_1ad8b860b_scopeChecker> _self_) {
	jule::Ptr<_1ad8b860b_scopeChecker> _5247_root = _self_;;
	while ((((*(_5247_root))._field_parent != nullptr) && ((*_5247_root.alloc)._field_owner == nullptr))) {
		{
			_5247_root=(*_5247_root.alloc)._field_parent;
		}
	_iter_next_1bde1bb0a:;
	}
	_iter_end_1bde1bb0a:;;
	return _5247_root;;
}



inline jule::Ptr<_1ad8b860b_scopeChecker> _1ad8bbc6e_getHardRoot(jule::Ptr<_1ad8b860b_scopeChecker> _self_) {
	jule::Ptr<_1ad8b860b_scopeChecker> _5347_root = _self_;;
	while (((*(_5347_root))._field_parent != nullptr)) {
		{
			_5347_root=(*_5347_root.alloc)._field_parent;
		}
	_iter_next_1bde1cd92:;
	}
	_iter_end_1bde1cd92:;;
	return _5347_root;;
}



inline jule::Ptr<_1ad8ced70_ReferenceStack> _1ad8bc005_getOwnerRefers(jule::Ptr<_1ad8b860b_scopeChecker> _self_) {
	return (*((*(_1ad8bbc6e_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1ad933a83_Var> _1ad8bc346_findVar(_1ad8b860b_scopeChecker* _self_, jule::Str _54623_ident) {
	;
	;
	jule::Ptr<_1ad933a83_Var> _5497_v = _1ad8015dd_findVar((*(_self_))._field_table.ptr(), &(_54623_ident), false, true);;
	if ((_5497_v != nullptr)) {
		return _5497_v;;
	};
	jule::Ptr<_1ad8b860b_scopeChecker> _5537_parent = (*(_self_))._field_parent;;
	while ((_5537_parent != nullptr)) {
		{
			_5497_v=_1ad8015dd_findVar((*(_5537_parent))._field_table, &(_54623_ident), false, true);
			if ((_5497_v != nullptr)) {
				return _5497_v;;
			};
			_5537_parent=(*_5537_parent.alloc)._field_parent;
		}
	_iter_next_1bde2577e:;
	}
	_iter_end_1bde2577e:;;
	return nullptr;;
}



inline jule::Ptr<_1ad8b3dba_Label> _1ad8bc687_findLabel(_1ad8b860b_scopeChecker* _self_, jule::Str* _56726_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde277b4:;
		if (it != expr_end) {
			jule::Any _56815_st = *it;
			{
				{
					auto &_match_expr{ _56815_st };
					
					if (_match_expr.type == &__jule_any_type18) {
						_case_begin_1bde280ab:;
						{
							jule::Ptr<_1ad8b3dba_Label> _5719_label = _56815_st.unsafe_cast_ptr<_1ad8b3dba_Label>();;
							if (((*(_5719_label))._field_Ident == (*(_56726_ident)))) {
								return _5719_label;;
							};
						}
					}
					_match_end_1bde28045:;
				};
			}
			_iter_next_1bde277b4:;
			++it;
			goto _iter_begin_1bde277b4;
		}
		_iter_end_1bde277b4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad8b761b_scopeLabel> _1ad8bc9c8_findLabelScope(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Str* _58332_ident) {
	jule::Ptr<_1ad8b761b_scopeLabel> _5847_label = _1ad8bcd19_findLabelAll(_self_.ptr(), _58332_ident);;
	if (((_5847_label != nullptr) && ((*((*_5847_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _5847_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad8b761b_scopeLabel> _1ad8bcd19_findLabelAll(_1ad8b860b_scopeChecker* _self_, jule::Str* _59429_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde2d4bd:;
		if (it != expr_end) {
			jule::Ptr<_1ad8b761b_scopeLabel> _59515_lbl = *it;
			{
				if (((*((*(_59515_lbl))._field_node))._field_Ident == (*(_59429_ident)))) {
					return _59515_lbl;;
				};
			}
			_iter_next_1bde2d4bd:;
			++it;
			goto _iter_begin_1bde2d4bd;
		}
		_iter_end_1bde2d4bd:;
	};
	return nullptr;;
}



inline jule::Bool _1ad8bd215_isDuplicatedIdent(_1ad8b860b_scopeChecker* _self_, jule::Uintptr _60633_itself, jule::Str* _60651_ident) {
	jule::Ptr<_1ad933a83_Var> _6073_v = _1ad8b8ed0_FindVar(_self_, (*(_60651_ident)), false);;
	if (((_6073_v != nullptr) && (static_cast<jule::Uintptr>(_6073_v) != _60633_itself))) {
		if (((*_6073_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6073_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1ad912314_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1ad9b77a4_TypeAlias> _6153_ta = _1ad8b93cb_FindTypeAlias(_self_, (*(_60651_ident)), false);;
	if (((_6153_ta != nullptr) && (static_cast<jule::Uintptr>(_6153_ta) != _60633_itself))) {
		if (((*_6153_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6153_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1ad912314_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1ad8bd4bd_checkVarDecl(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70802d_VarDecl> _62633_decl) {
	jule::Ptr<_1ad933a83_Var> _6277_v = _1ad8d5040_buildVar(_62633_decl);;
	(*(_6277_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6277_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6277_v, &__jule_any_type7); __jule_collection; }));
	});;
	if (_1ad8bd215_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6277_v), &((*_6277_v.alloc)._field_Ident))) {
		_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*_6277_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6277_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1ad8bae7c_stop(_self_);
		return;;
	};
	_1ad9261c4_checkVarDecl((*(_self_))._field_s, &(_6277_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));
	if (((!(_1ad934226_IsTypeInferred(_6277_v))) && (((*_6277_v.alloc)._field_Kind == nullptr) || ((*((*_6277_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1ad929969_evalVarValue((*(_self_))._field_s, &(_6277_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));
	if (((!(_1ad933e90_IsInitialized(_6277_v))) || ((*((*_6277_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1ad8c4738_removeInteriorMutRisk(_self_, &((*(*(_6277_v))._field_Value.alloc)._field_Data));
	_1ad929606_checkVarValue((*(_self_))._field_s, &(_6277_v));
}



inline void _1ad8bd776_checkTypeAlias(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad9b77a4_TypeAlias>* _65736_ta) {
	if (_1ad8bd215_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_65736_ta))), &((*((*(_65736_ta))))._field_Ident))) {
		_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_65736_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_65736_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1ad8bae7c_stop(_self_);
		return;;
	};
	_1ad920256_checkTypeAliasDecl((*(_self_))._field_s, _65736_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_65736_ta)); __jule_collection; }));
	if (((*((*((*(_65736_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1ad8bae7c_stop(_self_);
	};
}



inline void _1ad8bda2e_checkTypeAliasDecl(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70bbd0_TypeAliasDecl> _67339_decl) {
	jule::Ptr<_1ad9b77a4_TypeAlias> _6747_ta = _1ad8d1b1e_buildTypeAlias(_67339_decl);;
	_1ad8bd776_checkTypeAlias(_self_, &(_6747_ta));
}



inline jule::Ptr<_1ad8b136d_Scope> _1ad8bdcb5_getChild(_1ad8b860b_scopeChecker* _self_) {
	return jule::new_ptr<_1ad8b136d_Scope>(_1ad8b136d_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1ad8be1d3_checkChildSsc(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7051d4_ScopeTree>* _68435_tree, jule::Ptr<_1ad8b136d_Scope>* _68463_s, jule::Ptr<_1ad8b860b_scopeChecker>* _68479_ssc) {
	(*((*(_68463_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_68463_s))))._field_ChildIndex=(*((*(_68479_ssc))))._field_childIndex;
	(*((*(_68479_ssc))))._field_parent=_self_;
	_1ad8ca783_check((*(_68479_ssc)), _68435_tree, _68463_s);
}



inline jule::Ptr<_1ad8b136d_Scope> _1ad8be5ce_checkChildSc(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7051d4_ScopeTree>* _69134_tree, jule::Ptr<_1ad8b860b_scopeChecker>* _69162_ssc) {
	jule::Ptr<_1ad8b136d_Scope> _6927_s = _1ad8bdcb5_getChild(_self_.ptr());;
	_1ad8be1d3_checkChildSsc(_self_, _69134_tree, &(_6927_s), _69162_ssc);
	return _6927_s;;
}



inline jule::Ptr<_1ad8b136d_Scope> _1ad8be920_checkChild(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7051d4_ScopeTree>* _69732_tree) {
	jule::Ptr<_1ad8b860b_scopeChecker> _6987_ssc = _1ad8caa19_newChildChecker(_self_);;
	return _1ad8be5ce_checkChildSc(_self_, _69732_tree, &(_6987_ssc));;
}



inline void _1ad8bebc8_checkAnonScope(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7051d4_ScopeTree> _70235_tree) {
	jule::Ptr<_1ad8b136d_Scope> _7037_s = _1ad8be920_checkChild(_self_, &(_70235_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7037_s, &__jule_any_type19); __jule_collection; }));
}



inline void _1ad8c003b_processErrorCall(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7e3602_BuiltinErrorCallExprModel>* _70738_m, jule::Ptr<_1ad6ceb70_Token> _70769_err) {
	if (_1ad8bb499_isDeferred(_self_)) {
		_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), _70769_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad8b860b_scopeChecker> _7127_root = _1ad8bb9d8_getRoot(_self_);;
	if ((!((*((*((*(_7127_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1ad912c71_pushErr((*(_self_))._field_s, _70769_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_70738_m))))._field_Func=(*_7127_root.alloc)._field_owner;
}



inline void _1ad8c02e4_checkExpr(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad6e94e7_Expr> _72030_expr) {
	jule::Ptr<_1ad9878b7_eval> _7217_eval = _1ad919b46_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));;
	(*(_7217_eval))._field_ignored=true;
	jule::Ptr<_1ad985b90_Data> _7237_d = _1ad9a672c_evalExpr(_7217_eval, _72030_expr);;
	if (((_7237_d == nullptr) || ((*(_7237_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7237_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bde4eab6:;
			{
				jule::Ptr<_1ad7e3602_BuiltinErrorCallExprModel> _7328_m = (*(_7237_d))._field_Model.unsafe_cast_ptr<_1ad7e3602_BuiltinErrorCallExprModel>();;
				_1ad8c003b_processErrorCall(_self_, &(_7328_m), (*(_72030_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7237_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30) {
			_case_begin_1bde501d2:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7237_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else {
			_case_begin_1bde5016b:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s, (*(_72030_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bde50105:;
	};
}



inline jule::Ptr<_1ad8b178b_If> _1ad8c0635_checkIf(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70ab13_If> _75028_i) {
	jule::Ptr<_1ad8b136d_Scope> _7517_s = _1ad8be920_checkChild(_self_, &((*(_75028_i))._field_Scope));;
	jule::Ptr<_1ad985b90_Data> _7537_d = _1ad9a672c_evalExpr(_1ad919b46_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)), (*_75028_i.alloc)._field_Expr);;
	if ((_7537_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _7587_prim = _1ad9bac4c_Prim((*(_7537_d))._field_Kind.ptr());;
	if (((_7587_prim == nullptr) || (!(_1ad9c48e3_IsBool(_7587_prim.ptr()))))) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*((*_75028_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ad8b178b_If>(_1ad8b178b_If{._field_Expr=(*(_7537_d))._field_Model, ._field_Scope=_7517_s});;
}



inline jule::Ptr<_1ad8b1a88_Else> _1ad8c0976_checkElse(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70aedc_Else> _77030_e) {
	return jule::new_ptr<_1ad8b1a88_Else>(_1ad8b1a88_Else{._field_Scope=_1ad8be920_checkChild(_self_, &((*(_77030_e))._field_Scope))});;
}



inline void _1ad8c0c2e_checkConditional(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70b493_Conditional> _77637_conditional) {
	jule::Ptr<_1ad8b1ea6_Conditional> _7777_c = jule::new_ptr<_1ad8b1ea6_Conditional>(_1ad8b1ea6_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1ad8b178b_If>>(nullptr), ._field_Default=jule::Ptr<_1ad8b1a88_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7777_c, &__jule_any_type31); __jule_collection; }));
	(*_7777_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8b178b_If>>::alloc(0LL, ((*(_77637_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad8b178b_If>(nullptr); __jule_collection; });
	(*_7777_c.alloc)._field_Elifs=jule::append((*_7777_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8b178b_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad8c0635_checkIf(_self_, (*_77637_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_77637_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde76329:;
		if (it != expr_end) {
			jule::Ptr<_1ad70ab13_If> _78315_elif = *it;
			{
				(*_7777_c.alloc)._field_Elifs=jule::append((*_7777_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8b178b_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad8c0635_checkIf(_self_, _78315_elif); __jule_collection; }));
			}
			_iter_next_1bde76329:;
			++it;
			goto _iter_begin_1bde76329;
		}
		_iter_end_1bde76329:;
	};
	if (((*_77637_conditional.alloc)._field_Default != nullptr)) {
		(*_7777_c.alloc)._field_Default=_1ad8c0976_checkElse(_self_, (*_77637_conditional.alloc)._field_Default);
	};
}



inline void _1ad8c1207_checkIterScopeSsc(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Uintptr _79234_it, jule::Ptr<_1ad7051d4_ScopeTree> _79251_tree, jule::Ptr<_1ad8b136d_Scope>* _79279_s, jule::Ptr<_1ad8b860b_scopeChecker> _79294_ssc) {
	(*(_79294_ssc))._field_it=_79234_it;
	_1ad8be1d3_checkChildSsc(_self_, &(_79251_tree), _79279_s, &(_79294_ssc));
}



inline jule::Ptr<_1ad8b136d_Scope> _1ad8c16ad_checkIterScopeSc(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Uintptr _79733_it, jule::Ptr<_1ad7051d4_ScopeTree> _79750_tree, jule::Ptr<_1ad8b860b_scopeChecker> _79777_ssc) {
	jule::Ptr<_1ad8b136d_Scope> _7987_scope = _1ad8bdcb5_getChild(_self_.ptr());;
	_1ad8c1207_checkIterScopeSsc(_self_, _79733_it, _79750_tree, &(_7987_scope), _79777_ssc);
	return _7987_scope;;
}



inline jule::Ptr<_1ad8b136d_Scope> _1ad8c1aa9_checkIterScope(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Uintptr _80331_it, jule::Ptr<_1ad7051d4_ScopeTree>* _80349_tree) {
	jule::Ptr<_1ad8b860b_scopeChecker> _8047_ssc = _1ad8caa19_newChildChecker(_self_);;
	return _1ad8c16ad_checkIterScopeSc(_self_, _80331_it, (*(_80349_tree)), _8047_ssc);;
}



inline void _1ad8c1d62_checkInfIter(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708b77_Iter>* _80834_it) {
	jule::Ptr<_1ad8b22a3_InfIter> _8097_kind = jule::new_ptr<_1ad8b22a3_InfIter>(_1ad8b22a3_InfIter{._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8097_kind, &__jule_any_type32); __jule_collection; }));
	(*_8097_kind.alloc)._field_Scope=_1ad8c1aa9_checkIterScope(_self_, static_cast<jule::Uintptr>(_8097_kind), &((*((*(_80834_it))))._field_Scope));
}



inline void _1ad8c211a_checkWhileIter(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708b77_Iter>* _81436_it) {
	jule::Ptr<_1ad7094a2_WhileKind> _8157_wh = (*((*(_81436_it))))._field_Kind.cast_ptr<_1ad7094a2_WhileKind>(&__jule_any_type33);;
	if ((((*(_8157_wh))._field_Expr == nullptr) && ((*_8157_wh.alloc)._field_Next == nullptr))) {
		_1ad8c1d62_checkInfIter(_self_, _81436_it);
		return;;
	};
	jule::Ptr<_1ad8b2759_WhileIter> _8217_kind = jule::new_ptr<_1ad8b2759_WhileIter>(_1ad8b2759_WhileIter{._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8217_kind, &__jule_any_type34); __jule_collection; }));
	(*_8217_kind.alloc)._field_Scope=_1ad8c1aa9_checkIterScope(_self_, static_cast<jule::Uintptr>(_8217_kind), &((*((*(_81436_it))))._field_Scope));
	if (((*_8157_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1ad985b90_Data> _8268_d = _1ad9a672c_evalExpr(_1ad919b46_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)), (*_8157_wh.alloc)._field_Expr);;
		if ((_8268_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1ad9c16ae_Prim> _8314_prim = _1ad9bac4c_Prim((*(_8268_d))._field_Kind.ptr());;
		if ((_8314_prim == nullptr)) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_81436_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1ad9c48e3_IsBool(_8314_prim.ptr())))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_81436_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8217_kind.alloc)._field_Expr=(*(_8268_d))._field_Model;
	};
	if (_1ad709848_IsWhileNext(_8157_wh)) {
		if ((!(_1ad8b0988_isValidAstStForNextSt(&((*_8157_wh.alloc)._field_Next))))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*_8157_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _8514_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1ad8c93b9_checkNode(_self_, &((*_8157_wh.alloc)._field_Next));
		if ((_8514_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8549_st = (*((*(_self_))._field_scope))._field_Stmts[_8514_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8514_n);;
			if ((!(_1ad8b0bca_isValidStForNextSt(&(_8549_st))))) {
				_1ad912c71_pushErr((*(_self_))._field_s, (*_8157_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8217_kind.alloc)._field_Next=_8549_st;
		};
	};
}



inline void _1ad8c2538_checkComptimeRangeIter(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708b77_Iter>* _86444_it, jule::Ptr<_1ad8b31a5_RangeIter>* _86465_kind, jule::Ptr<_1ad985b90_Data>* _86488_d) {
	if (((*((*(_86465_kind))))._field_KeyA != nullptr)) {
		if (((!(_1ad912314_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ad8bd215_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_86465_kind))))._field_KeyB != nullptr)) {
		if (((!(_1ad912314_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1ad8bd215_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1ad709da9_RangeKind> _8787_rang = (*((*(_86444_it))))._field_Kind.cast_ptr<_1ad709da9_RangeKind>(&__jule_any_type35);;
	_1ad8cb08b_makeComptimeRange(_86488_d);
	if ((*((*(_86488_d))))._field_Decl) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_8787_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_86488_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1ad980492_rangeChecker _8857_rc = _1ad980492_rangeChecker{._field_sc=_self_, ._field_rang=_8787_rang, ._field_Kind=(*(_86465_kind)), ._field_d=(*(_86488_d))};;
	jule::Bool _8913_ok = _1ad9824d8_check(&_8857_rc);;
	if ((!(_8913_ok))) {
		return;;
	};
	jule::Ptr<_1ad87db21_comptimeRange> _8967_comptime = _1ad9be0e6_comptimeRange((*((*(_86488_d))))._field_Kind);;
	((_1ad87d901_comptimeRangeKindMptrData*)(*(_8967_comptime))._field_kind.safe_type())->_1ad87d0e8_ready((*(_8967_comptime))._field_kind.data, &((*((*(_86465_kind))))._field_KeyA), &((*((*(_86465_kind))))._field_KeyB));
	jule::I64 _8987_i = 0LL;;
	jule::I64 _8993_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_8987_i < ((_1ad87d901_comptimeRangeKindMptrData*)(*_8967_comptime.alloc)._field_kind.safe_type())->_1ad87d79c_len((*_8967_comptime.alloc)._field_kind.data)); (_8987_i)++) {
		{
			jule::Ptr<_1ad8b860b_scopeChecker> _9018_ssc = _1ad8caa19_newChildChecker(_self_);;
			jule::Ptr<_1ad8b136d_Scope> _9028_scope = _1ad8bdcb5_getChild(_self_);;
			if (((*((*(_86465_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_86465_kind))))._field_KeyA.alloc)._field_Scope=_9028_scope;
				(*((*(_9018_ssc))._field_table))._field_Vars=jule::append((*(*(_9018_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_86465_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_86465_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_86465_kind))))._field_KeyB.alloc)._field_Scope=_9028_scope;
				(*(*(_9018_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9018_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_86465_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1ad87d901_comptimeRangeKindMptrData*)(*_8967_comptime.alloc)._field_kind.safe_type())->_1ad87d516_step((*_8967_comptime.alloc)._field_kind.data, _8987_i, &((*((*(_86465_kind))))._field_KeyA), &((*((*(_86465_kind))))._field_KeyB));
			_1ad8be1d3_checkChildSsc(_self_, &((*((*(_86444_it))))._field_Scope), &(_9028_scope), &(_9018_ssc));
			if ((_8993_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1bde9e198;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9028_scope, &__jule_any_type19); __jule_collection; }));
		}
	_iter_next_1bde9e198:;
	}
	_iter_end_1bde9e198:;;
}



inline void _1ad8c27e1_checkRangeIter(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708b77_Iter>* _92136_it) {
	jule::Ptr<_1ad709da9_RangeKind> _9227_rang = (*((*(_92136_it))))._field_Kind.cast_ptr<_1ad709da9_RangeKind>(&__jule_any_type35);;
	jule::Ptr<_1ad985b90_Data> _9247_d = _1ad9a63db_evalExpr1(_1ad919b46_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)), (*(_9227_rang))._field_Expr);;
	if ((_9247_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1ad8b31a5_RangeIter> _9297_kind = jule::new_ptr<_1ad8b31a5_RangeIter>(_1ad8b31a5_RangeIter{._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Expr=_9247_d, ._field_KeyA=jule::Ptr<_1ad933a83_Var>(nullptr), ._field_KeyB=jule::Ptr<_1ad933a83_Var>(nullptr)});;
	if ((*((*(_92136_it))))._field_Comptime) {
		_1ad8c2538_checkComptimeRangeIter(_self_, _92136_it, &(_9297_kind), &(_9247_d));
		return;;
	};
	if (_1ad9bcd09_comptime((*(_9247_d))._field_Kind.ptr())) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*((*_9227_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1ad980492_rangeChecker _9437_rc = _1ad980492_rangeChecker{._field_sc=_self_, ._field_rang=_9227_rang, ._field_Kind=_9297_kind, ._field_d=_9247_d};;
	jule::Bool _9493_ok = _1ad9824d8_check(&_9437_rc);;
	if ((!(_9493_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9297_kind, &__jule_any_type36); __jule_collection; }));
	jule::Ptr<_1ad8b860b_scopeChecker> _9567_ssc = _1ad8caa19_newChildChecker(_self_);;
	jule::Ptr<_1ad8b136d_Scope> _9577_scope = _1ad8bdcb5_getChild(_self_);;
	if (((*(_9297_kind))._field_KeyA != nullptr)) {
		if (((!(_1ad912314_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1ad8bd215_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9297_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*(*(_9297_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9297_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9297_kind))._field_KeyA.alloc)._field_Scope=_9577_scope;
		(*((*(_9567_ssc))._field_table))._field_Vars=jule::append((*(*(_9567_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9297_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_9297_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1ad912314_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1ad8bd215_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9297_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*(*(_9297_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9297_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9297_kind))._field_KeyB.alloc)._field_Scope=_9577_scope;
		(*(*(_9567_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9567_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9297_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1ad8c1207_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9297_kind), (*((*(_92136_it))))._field_Scope, &(_9577_scope), _9567_ssc);
	(*_9297_kind.alloc)._field_Scope=_9577_scope;
}



inline void _1ad8c2a99_checkIter(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708b77_Iter> _98130_it) {
	if (_1ad70901d_IsInf(_98130_it.ptr())) {
		if ((*_98130_it.alloc)._field_Comptime) {
			_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*_98130_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1ad8c1d62_checkInfIter(_self_, &(_98130_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_98130_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bdeba291:;
			{
				if ((*_98130_it.alloc)._field_Comptime) {
					_1ad912c71_pushErr((*(_self_))._field_s, (*_98130_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1ad8c211a_checkWhileIter(_self_, &(_98130_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bdebb45c:;
			{
				_1ad8c27e1_checkRangeIter(_self_, &(_98130_it));
			}
		}
		else {
			_case_begin_1bdebb3e6:;
			{
				jule::outln(_1bc355034_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1bdebb380:;
	};
}



inline jule::Bool _1ad8c2dda_checkValidContLabel(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Uintptr _100536_it) {
	jule::Ptr<_1ad8b860b_scopeChecker> _10067_scope = _self_;;
	_julec_label_1bdec0e78:;
	if (((*(_10067_scope))._field_it == _100536_it)) {
		return true;;
	};
	if (((*_10067_scope.alloc)._field_parent != nullptr)) {
		_10067_scope=(*_10067_scope.alloc)._field_parent;
		goto _julec_label_1bdec0e78;
	};
	return false;;
}



inline jule::Bool _1ad8c322b_checkValidBreakLabel(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Uintptr _102137_ptr) {
	jule::Ptr<_1ad8b860b_scopeChecker> _10227_scope = _self_;;
	_julec_label_1bdec592d:;
	if (((*(_10227_scope))._field_it == _102137_ptr)) {
		return true;;
	};
	if (((*_10227_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _10304_mtch = static_cast<jule::Uintptr>((*(((_1ad8b65c6_Case*)((*_10227_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10304_mtch == _102137_ptr)) {
			return true;;
		};
	};
	if (((*_10227_scope.alloc)._field_parent != nullptr)) {
		_10227_scope=(*_10227_scope.alloc)._field_parent;
		goto _julec_label_1bdec592d;
	};
	return false;;
}



inline jule::Ptr<_1ad8b353a_ContSt> _1ad8c356c_checkContValidScope(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70a65c_ContSt> _104436_c) {
	if (_1ad8bb499_isDeferred(_self_)) {
		_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*(_104436_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_104436_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1ad8b353a_ContSt>(_1ad8b353a_ContSt{._field_It=0});;
	};
	jule::Ptr<_1ad8b860b_scopeChecker> _10547_scope = _self_;;
	_julec_label_1bdec81c2:;
	{
		
		if (((((*_10547_scope.alloc)._field_it == 0LLU) && ((*_10547_scope.alloc)._field_parent != nullptr)) && ((*_10547_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1bdec9d72:;
			{
				_10547_scope=(*_10547_scope.alloc)._field_parent;
				goto _julec_label_1bdec81c2;
			}
		}
		else if (((*_10547_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1bdec9e0a:;
			{
				return jule::new_ptr<_1ad8b353a_ContSt>(_1ad8b353a_ContSt{._field_It=(*_10547_scope.alloc)._field_it});;
			}
		}
		_match_end_1bdec9cc8:;
	};
	_1ad912c71_pushErr((*(_self_))._field_s, (*_104436_c.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ad8c3825_checkCont(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70a65c_ContSt> _106826_c) {
	jule::Ptr<_1ad8b353a_ContSt> _10697_cont = _1ad8c356c_checkContValidScope(_self_, _106826_c);;
	if ((_10697_cont == nullptr)) {
		return;;
	};
	if (((*(_106826_c))._field_Label != nullptr)) {
		jule::Ptr<_1ad8b761b_scopeLabel> _10758_label = _1ad8ae514_findLabelParent(&((*(*(_106826_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_10758_label == nullptr)) {
			_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		(*(_10758_label))._field_used=true;
		if ((((*((*(_10758_label))._field_node))._field_Index + 1LL) >= (*((*(*(_10758_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		jule::I64 _10884_i = ((*(*(_10758_label))._field_node.alloc)._field_Index + 1LL);;
		if ((_10884_i >= (*(*((*(_10758_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _10929_st = (*(*((*(_10758_label))._field_node))._field_Scope.alloc)._field_Stmts[_10884_i];;
			{
				auto &_match_expr{ _10929_st };
				
				if (_match_expr.type == &__jule_any_type32) {
					_case_begin_1bded6ab5:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1ad8b22a3_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1bded572e:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1ad8b31a5_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type34) {
					_case_begin_1bded591b:;
					{
						(*(_10697_cont))._field_It=static_cast<jule::Uintptr>(_10929_st.unsafe_cast_ptr<_1ad8b2759_WhileIter>());
					}
				}
				else {
					_case_begin_1bded58a5:;
					{
						_1ad912c71_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					}
				}
				_match_end_1bded583e:;
			};
		};
	};
	if (((*(_10697_cont))._field_It != 0LLU)) {
		if ((!(_1ad8c2dda_checkValidContLabel(_self_, (*(_10697_cont))._field_It)))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*_106826_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_106826_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10697_cont, &__jule_any_type37); __jule_collection; }));
}



inline void _1ad8c3acd_checkLabel(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad702797_LabelSt> _111531_l) {
	if ((_1ad8bc687_findLabel(_self_.ptr(), &((*(_111531_l))._field_Ident)) != nullptr)) {
		_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*_111531_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_111531_l.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ad8b3dba_Label> _11217_label = jule::new_ptr<_1ad8b3dba_Label>(_1ad8b3dba_Label{._field_Ident=(*_111531_l.alloc)._field_Ident, ._field_Scope=(*_self_.alloc)._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11217_label, &__jule_any_type18); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8b761b_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ad8b761b_scopeLabel>(_1ad8b761b_scopeLabel{._field_token=(*_111531_l.alloc)._field_Token, ._field_node=_11217_label, ._field_used=false}); __jule_collection; }));
}



inline void _1ad8c3d86_pushGoto(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad702b71_GotoSt> _113429_gt) {
	jule::Ptr<_1ad8b452a_GotoSt> _11357_st = jule::new_ptr<_1ad8b452a_GotoSt>(_1ad8b452a_GotoSt{._field_Ident=(*((*_113429_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_113429_gt))._field_Label, ._field_Label=jule::Ptr<_1ad8b3dba_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11357_st, &__jule_any_type38); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8b452a_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11357_st; __jule_collection; }));
}



inline void _1ad8c413e_checkPostfix(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad703b61_AssignSt> _114533_a) {
	if (((*(_114533_a))._field_Left.len() > 1LL)) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad6e94e7_Expr> _11517_expr = (*((*(_114533_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1ad985b90_Data> _11527_d = _1ad9a672c_evalExpr(_1ad919b46_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)), _11517_expr);;
	if ((_11527_d == nullptr)) {
		return;;
	};
	_1ad8b05ae_checkAssign(&((*_self_.alloc)._field_s), &(_11527_d), nullptr, (*_114533_a.alloc)._field_Setter);
	if ((_1ad9bb269_Ptr((*(_11527_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad9c89a2_Ptr> _11608_ptr = _1ad9bb269_Ptr((*(_11527_d))._field_Kind);;
		if (_1ad9c951e_IsUnsafe(_11608_ptr.ptr())) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_114533_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_11527_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1ad9bac4c_Prim((*(_11527_d))._field_Kind.ptr()) == nullptr) || (!(_1ad87c69c_IsNum((*(_1ad9bac4c_Prim((*(_11527_d))._field_Kind)))._field_Kind))))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*_114533_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_114533_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_11527_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ad8b4904_Postfix>(_1ad8b4904_Postfix{._field_Expr=(*(_11527_d))._field_Model, ._field_Op=(*((*_114533_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type39); __jule_collection; }));
}



inline jule::Bool _1ad8c4480_isNewAssignIdent(_1ad8b860b_scopeChecker* _self_, jule::Str _117832_ident) {
	if ((_1ad6d2557_IsIgnoreIdent(_117832_ident) || (_117832_ident).empty())) {
		return false;;
	};
	return (_1ad801e90_defByIdent((*(_self_))._field_table.ptr(), &(_117832_ident), false) == nullptr);;
}



inline void _1ad8c4738_removeInteriorMutRisk(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad985b90_Data>* _119143_d) {
	jule::Ptr<_1ad718857_StructIns> _11923_s = _1ad9bc2c0_Struct((*((*(_119143_d))))._field_Kind.ptr());;
	if ((_11923_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1ad8b860b_scopeChecker> _11963_root = _1ad8bbc6e_getHardRoot(_self_);;
	if (((*((*(_11963_root))._field_owner))._field_Owner != _11923_s)) {
		return;;
	};
	(*((*(_119143_d))))._field_Mutable=true;
}



inline jule::Bool _1ad8c4bde_checkStructureAssignOp(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad718857_StructIns>* _120544_s, jule::Ptr<_1ad703b61_AssignSt>* _120564_a, jule::Ptr<_1ad985b90_Data>* _120588_r) {
	jule::Ptr<_1ad7ea84b_FnIns> _120811_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_120564_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1be0075ca:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1be007278:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1be0072de:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1be007355:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1be0073bb:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1be007432:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1be007498:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1be008c4c:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1be008cb3:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1be008d29:;
			{
				_120811_overload=(*((*(_120544_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1be006a80:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_120564_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_120564_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad718c0e_Str((*(_120544_s)).ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1be007201:;
	};
	if ((_120811_overload == nullptr)) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_120564_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_120564_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad718c0e_Str((*(_120544_s)).ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1ad7e96e6_ParamIns> _12407_p = (*(_120811_overload))._field_Params[1LL];;
	return _1ad91a262_checkAssignType((*(_self_))._field_s, (*((*(_12407_p))._field_Decl))._field_Reference, &((*_12407_p.alloc)._field_Kind), _120588_r, (*((*(_120564_a))))._field_Setter, _1ad8bc005_getOwnerRefers(_self_));;
}



inline void _1ad8c4e97_checkSingleAssign(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad703b61_AssignSt>* _124439_a) {
	jule::Ptr<_1ad985b90_Data> _124511_l = nullptr;;
	if ((!(_1ad6d2557_IsIgnoreIdent((*((*((*(_124439_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1ad6e94e7_Expr> _12488_expr = (*((*((*(_124439_a))))._field_Left[0LL]))._field_Expr;;
		_124511_l=_1ad9a672c_evalExpr(_1ad919b46_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)), _12488_expr);
		if ((_124511_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1ad9878b7_eval> _12557_eval = static_cast<jule::Ptr<_1ad9878b7_eval>>(nullptr);;
	if ((_124511_l != nullptr)) {
		_12557_eval=_1ad919805_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1), (*(_124511_l))._field_Kind);
	} else {
		_12557_eval=_1ad919b46_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));
	};
	(*(_12557_eval))._field_unsafety=_1ad8ba9e8_isUnsafe(_self_);
	jule::Ptr<_1ad985b90_Data> _12627_r = _1ad9a672c_evalExpr(_12557_eval, (*((*(_124439_a))))._field_Right);;
	if ((_12627_r == nullptr)) {
		return;;
	};
	_1ad8c4738_removeInteriorMutRisk(_self_, &(_12627_r));
	if ((_124511_l == nullptr)) {
		if (_1ad9b9960_Void((*(_12627_r))._field_Kind.ptr())) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*((*((*(_124439_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_124439_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_124439_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12627_r, &__jule_any_type21); __jule_collection; }));
		return;;
	};
	if ((!(_1ad8b05ae_checkAssign(&((*_self_.alloc)._field_s), &(_124511_l), _12627_r, (*((*(_124439_a))))._field_Setter)))) {
		return;;
	};
	if ((_1ad9bca73_Tup((*(_12627_r))._field_Kind) != nullptr)) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_124439_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad7d9dac_OperandExprModel> _12897_lm = jule::new_ptr<_1ad7d9dac_OperandExprModel>(_1ad7d9dac_OperandExprModel{._field_Kind=(*(_124511_l))._field_Kind, ._field_Model=(*(_124511_l))._field_Model});;
	jule::Ptr<_1ad7d9dac_OperandExprModel> _12937_rm = jule::new_ptr<_1ad7d9dac_OperandExprModel>(_1ad7d9dac_OperandExprModel{._field_Kind=(*(_12627_r))._field_Kind, ._field_Model=(*(_12627_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ad8b4daa_Assign>(_1ad8b4daa_Assign{._field_Left=_12897_lm, ._field_Right=_12937_rm, ._field_Op=(*((*(_124439_a))))._field_Setter}), &__jule_any_type40); __jule_collection; }));
	if (((*(*((*(_124439_a))))._field_Setter.alloc)._field_Id == static_cast<jule::U64>(71LLU))) {
		_1ad974046_assignTypeChecker _13008_checker = _1ad974046_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_124511_l))._field_Kind, ._field_d=_12627_r, ._field_errorToken=(*((*(_124439_a))))._field_Setter, ._field_refers=_1ad8bc005_getOwnerRefers(_self_)};;
		if (_1ad975047_check(&_13008_checker)) {
			(*(_12937_rm))._field_Model=(*(_12627_r))._field_Model;
			(*(_12897_lm))._field_Model=(*(_124511_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1ad718857_StructIns> _13137_strct = _1ad9bc2c0_Struct((*(_124511_l))._field_Kind);;
	if ((_13137_strct != nullptr)) {
		_1ad8c4bde_checkStructureAssignOp(_self_, &(_13137_strct), _124439_a, &(_12627_r));
		return;;
	};
	jule::U64 _13183_id = (*(*((*(_124439_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_124439_a))))._field_Setter.alloc)._field_Id=_1ad8cad5a_removeEqFromOp((*(*((*(_124439_a))))._field_Setter.alloc)._field_Id);
	_1ad9a8b4c_binaryEval _13207_solver = static__1ad9a95a9_new(_12557_eval, (*((*(_124439_a))))._field_Setter);;
	({
		jule::Ptr<_1ad985b90_Data> ___jule_assign_arg = _124511_l;
		jule::Ptr<_1ad985b90_Data> _1___jule_assign_arg = _12627_r;
		_13207_solver._field_l = ___jule_assign_arg;
		_13207_solver._field_r = _1___jule_assign_arg;
	});
	_1ad9ad789_evalOp(&_13207_solver);
	(*(*((*(_124439_a))))._field_Setter.alloc)._field_Id=_13183_id;
}



inline void _1ad8c55d5_processEndPartOfMultiAssign(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad8b5361_MultiAssign>* _132649_st, jule::Ptr<_1ad703b61_AssignSt>* _132672_a, jule::Ptr<_1ad7035cd_AssignLeft>* _13278_lexpr, jule::Ptr<_1ad985b90_Data>* _132738_l, jule::Ptr<_1ad985b90_Data>* _132753_r, jule::Bool _132763_strict) {
	if (((!((*((*(_13278_lexpr))))._field_Reference)) && _1ad6d2557_IsIgnoreIdent((*((*(_13278_lexpr))))._field_Ident))) {
		if (_1ad9b9960_Void((*((*(_132753_r))))._field_Kind.ptr())) {
			_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_132672_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1ad985b90_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_132672_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13278_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1be029179:;
				{
					if ((!(_1ad8c4480_isNewAssignIdent(_self_, (*((*(_13278_lexpr))))._field_Ident)))) {
						goto _julec_label_1be034a03;
					};
				}
			}
			else {
				_case_begin_1be029113:;
				{
					if (((*((*(_13278_lexpr))))._field_Mutable || (*((*(_13278_lexpr))))._field_Reference)) {
						_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1be034a03;
				}
			}
			_match_end_1be02909c:;
		};
		if (_1ad8bd215_isDuplicatedIdent(_self_, 0LLU, &((*((*(_13278_lexpr))))._field_Ident))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13278_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1ad8bae7c_stop(_self_);
			return;;
		};
		if (_1ad6d2557_IsIgnoreIdent((*((*(_13278_lexpr))))._field_Ident)) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ad933a83_Var> _13598_v = jule::new_ptr<_1ad933a83_Var>(_1ad933a83_Var{._field_Scope=(*_self_.alloc)._field_scope, ._field_Token=(*((*(_13278_lexpr))))._field_Token, ._field_Ident=(*((*(_13278_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13278_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13278_lexpr))))._field_Reference, ._field_Kind=jule::Ptr<_1ad9c0ca7_TypeSymbol>(nullptr), ._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=(*((*(_132672_a))))._field_Right, ._field_Data=(*(_132753_r))}), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr)});;
		_1ad929606_checkVarValue((*(_self_))._field_s, &(_13598_v));
		{ jule::Slice<jule::Ptr<_1ad985b90_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=(*((*_13598_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_13598_v.alloc)._field_Mutable, ._field_Reference=(*_13598_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13598_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13598_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1ad933a83_Var>> &__jule_push_dest = (*((*(_132649_st))))._field_Decls; __jule_push_dest.push(_13598_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13598_v; __jule_collection; }));
		return;;
	};
	_julec_label_1be034a03:;
	if (((*((*(_13278_lexpr))))._field_Mutable || (*((*(_13278_lexpr))))._field_Reference)) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_13278_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13278_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1ad8b05ae_checkAssign(&((*_self_.alloc)._field_s), _132738_l, (*(_132753_r)), (*((*(_13278_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _13947_reference = false;;
	if (_1ad91e9e7_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_132738_l))))._field_Mutable, _13947_reference, &((*((*(_132738_l))))._field_Kind), _132753_r, &((*((*(_13278_lexpr))))._field_Token))) {
		_13947_reference=_132763_strict;
		_1ad91a262_checkAssignType((*(_self_))._field_s, _13947_reference, &((*((*(_132738_l))))._field_Kind), _132753_r, (*((*(_13278_lexpr))))._field_Token, _1ad8bc005_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1ad985b90_Data>> &__jule_push_dest = (*((*(_132649_st))))._field_Left; __jule_push_dest.push((*(_132738_l))); };
}



inline void _1ad8c588d_checkMultiAssign(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad703b61_AssignSt>* _140238_a) {
	if ((((*((*((*(_140238_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU)) && ((*(*((*(_140238_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad985b90_Data> _14077_rd = _1ad9a672c_evalExpr(_1ad919b46_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)), (*((*(_140238_a))))._field_Right);;
	if ((_14077_rd == nullptr)) {
		return;;
	};
	jule::Bool _14117_strict = false;;
	jule::Slice<jule::Ptr<_1ad985b90_Data>> _14127_right = _1ad8ae855_getDatasFromTupleData(&(_14077_rd));;
	if ((_14127_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14127_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1be03ee09:;
				{
					jule::Ptr<_1ad7dcc17_IndexingExprModel> _14169_iem = (*(_14127_right[0LL]))._field_Model.unsafe_cast_ptr<_1ad7dcc17_IndexingExprModel>();;
					if ((_1ad9bc7dc_Map((*((*(_14169_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_14117_strict=true;
						_14127_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad985b90_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=(*(_1ad9bc7dc_Map((*((*(_14169_iem))._field_Expr))._field_Kind)))._field_Val, ._field_Mutable=(*(_14127_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)}); (*it++) = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1be03ed4e:;
		};
	};
	{
		
		if (((*((*(_140238_a))))._field_Left.len() > _14127_right.len())) {
			_case_begin_1be042b76:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_140238_a))))._field_Left.len() < _14127_right.len())) {
			_case_begin_1be042bed:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_140238_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1be03eea3:;
	};
	jule::Ptr<_1ad8b5361_MultiAssign> _14367_st = jule::new_ptr<_1ad8b5361_MultiAssign>(_1ad8b5361_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1ad985b90_Data>>(nullptr), ._field_Right=(*(_14077_rd))._field_Model});;
	{
		auto expr = &((*((*(_140238_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be04795b:;
		if (it != expr_end) {
			jule::I64 _14397_i = it - expr->begin();
			{
				jule::Ptr<_1ad7035cd_AssignLeft> _14408_lexpr = (*((*(_140238_a))))._field_Left[_14397_i];;
				jule::Ptr<_1ad985b90_Data> _144112_l = nullptr;;
				if ((!(_1ad6d2557_IsIgnoreIdent((*(_14408_lexpr))._field_Ident)))) {
					if ((!((*((*(_140238_a))))._field_Declarative))) {
						goto _julec_label_1be0491ee;
					};
					if (((*_14408_lexpr.alloc)._field_Mutable && (*_14408_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1be04c004;
					};
					{
						auto &_match_expr{ (*((*(_14408_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type41) {
							_case_begin_1be04a40e:;
							{
								if (_1ad8c4480_isNewAssignIdent(_self_, (*_14408_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1be04c004;
								};
							}
						}
						_match_end_1be04a387:;
					};
					_julec_label_1be0491ee:;
					_144112_l=_1ad9a672c_evalExpr(_1ad919b46_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)), (*_14408_lexpr.alloc)._field_Expr);
					if ((_144112_l == nullptr)) {
						goto _iter_next_1be04795b;
					};
					_julec_label_1be04c004:;
				};
				jule::Ptr<_1ad985b90_Data> _14628_r = _14127_right[_14397_i];;
				_1ad8c4738_removeInteriorMutRisk(_self_, &(_14628_r));
				_1ad8c55d5_processEndPartOfMultiAssign(_self_, &(_14367_st), _140238_a, &(_14408_lexpr), &(_144112_l), &(_14628_r), _14117_strict);
			}
			_iter_next_1be04795b:;
			++it;
			_14397_i++;
			goto _iter_begin_1be04795b;
		}
		_iter_end_1be04795b:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14367_st, &__jule_any_type43); __jule_collection; }));
}



inline void _1ad8c5b46_checkAssignSt(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad703b61_AssignSt> _146934_a) {
	{
		
		if (_1ad6d49bb_IsPostfixOp((*((*(_146934_a))._field_Setter))._field_Id)) {
			_case_begin_1be04dda2:;
			{
				_1ad8c413e_checkPostfix(_self_, _146934_a);
			}
		}
		else if (((*(_146934_a))._field_Left.len() == 1LL)) {
			_case_begin_1be04da50:;
			{
				_1ad8c4e97_checkSingleAssign(_self_, &(_146934_a));
			}
		}
		else {
			_case_begin_1be04d9d9:;
			{
				_1ad8c588d_checkMultiAssign(_self_, &(_146934_a));
			}
		}
		_match_end_1be04d8eb:;
	};
}



inline jule::Ptr<_1ad8b136d_Scope> _1ad8c6042_checkCaseScope(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad8b65c6_Case>* _148032_c, jule::Ptr<_1ad7051d4_ScopeTree>* _148047_tree) {
	jule::Ptr<_1ad8b860b_scopeChecker> _14817_ssc = _1ad8caa19_newChildChecker(_self_);;
	(*(_14817_ssc))._field_cse=static_cast<jule::Uintptr>((*(_148032_c)));
	return _1ad8be5ce_checkChildSc(_self_, _148047_tree, &(_14817_ssc));;
}



inline jule::Ptr<_1ad8b65c6_Case> _1ad8c65a3_checkCase(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad8b5a9d_Match> _148630_m, jule::I64 _148641_i, jule::Ptr<_1ad70c186_Case> _148653_c, jule::Ptr<_1ad985b90_Data> _148672_expr) {
	jule::Ptr<_1ad8b65c6_Case> _14877_case = (*(_148630_m))._field_Cases[_148641_i];;
	(*(_14877_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad985b90_Data>>::alloc(0LL, (*(_148653_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad985b90_Data>(nullptr); __jule_collection; });
	jule::Bool _14897_constMatched = false;;
	jule::Ptr<_1ad9878b7_eval> _14907_eval = _1ad919b46_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));;
	{
		auto expr = &((*_148653_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be054649:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e94e7_Expr> _149115_e = *it;
			{
				jule::Ptr<_1ad985b90_Data> _14928_d = _1ad9a5918_evalExprKind(_14907_eval, (*(_149115_e))._field_Kind);;
				if ((_14928_d == nullptr)) {
					goto _iter_next_1be054649;
				};
				if ((*_148630_m.alloc)._field_TypeMatch) {
					(*_14877_case.alloc)._field_Exprs=jule::append((*_14877_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad985b90_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14928_d; __jule_collection; }));
					if ((_1ad8cb993_countMatchType(&(_148630_m), &((*(_14928_d))._field_Kind)) > 1LL)) {
						_1ad912c71_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_14928_d))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
					};
					if ((*_148630_m.alloc)._field_Comptime) {
						_14897_constMatched=(_14897_constMatched || _1ad9b8cd3_Equal((*(_148672_expr))._field_Kind, (*(_14928_d))._field_Kind));
					} else {
						if ((_1ad9bb786_TypeEnum((*(_148672_expr))._field_Kind) != nullptr)) {
							_1ad91abbe_checkTypeCompatibility((*(_self_))._field_s, &((*(_148672_expr))._field_Kind), &((*(_14928_d))._field_Kind), &((*_149115_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1ad802ea2_Trait> _15117_trt = _1ad9bc556_Trait((*(_148672_expr))._field_Kind);;
							if ((_15117_trt != nullptr)) {
								_1ad91abbe_checkTypeCompatibility((*(_self_))._field_s, &((*(_148672_expr))._field_Kind), &((*(_14928_d))._field_Kind), &((*_149115_e.alloc)._field_Token));
							};
						};
					};
					_1ad9b2260_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_14928_d))._field_Kind), &((*((*_148630_m.alloc)._field_Expr))._field_Kind), &((*_149115_e.alloc)._field_Token), _1ad8bc005_getOwnerRefers(_self_));
					goto _iter_next_1be054649;
				};
				if ((*(_14928_d))._field_Decl) {
					_1ad912c71_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1be054649;
				};
				if ((*_148630_m.alloc)._field_Comptime) {
					if (((!(_1ad9865ca_IsConst(_14928_d.ptr()))) && (_1ad9be613_comptimeTypeInfo((*(_14928_d))._field_Kind) == nullptr))) {
						_1ad912c71_pushErr((*(_self_))._field_s, (*_149115_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1be054649;
					};
					if ((!(_14897_constMatched))) {
						if (_1ad9865ca_IsConst(_14928_d.ptr())) {
							_14897_constMatched=(_1ad9865ca_IsConst(_148672_expr.ptr()) && _1ad7d4604_Eq((*(_14928_d))._field_Constant.ptr(), (*((*(_148672_expr))._field_Constant))));
						} else {
							jule::Ptr<_1ad89387d_comptimeTypeInfo> _15377_exprCti = _1ad9be613_comptimeTypeInfo((*(_148672_expr))._field_Kind);;
							_14897_constMatched=((_15377_exprCti != nullptr) && _1ad9b8cd3_Equal((*(_1ad9be613_comptimeTypeInfo((*(_14928_d))._field_Kind)))._field_base, (*_15377_exprCti.alloc)._field_base));
						};
					};
				};
				(*_14877_case.alloc)._field_Exprs=jule::append((*_14877_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad985b90_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14928_d; __jule_collection; }));
				if ((((!((*_148630_m.alloc)._field_Comptime)) || (_1ad9be613_comptimeTypeInfo((*(_148672_expr))._field_Kind) == nullptr)) || (_1ad9be613_comptimeTypeInfo((*(_14928_d))._field_Kind) == nullptr))) {
					_1ad974046_assignTypeChecker _15479_checker = _1ad974046_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_148672_expr))._field_Kind, ._field_d=_14928_d, ._field_errorToken=(*_149115_e.alloc)._field_Token, ._field_refers=_1ad8bc005_getOwnerRefers(_self_)};;
					_1ad975047_check(&_15479_checker);
				};
			}
			_iter_next_1be054649:;
			++it;
			goto _iter_begin_1be054649;
		}
		_iter_end_1be054649:;
	};
	if (((!((*_148630_m.alloc)._field_Comptime)) || _14897_constMatched)) {
		(*_14877_case.alloc)._field_Scope=_1ad8c6042_checkCaseScope(_self_, &(_14877_case), &((*_148653_c.alloc)._field_Scope));
	};
	return _14877_case;;
}



inline void _1ad8c69c1_checkCases(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70c9a0_MatchCase>* _156332_m, jule::Ptr<_1ad8b5a9d_Match> _156356_rm, jule::Ptr<_1ad985b90_Data> _156372_expr) {
	(*(_156356_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8b65c6_Case>>::alloc(0LL, (*((*(_156332_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad8b65c6_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_156332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be068471:;
		if (it != expr_end) {
			jule::I64 _15657_i = it - expr->begin();
			{
				jule::Ptr<_1ad8b65c6_Case> _15668_case = jule::new_ptr<_1ad8b65c6_Case>(_1ad8b65c6_Case{._field_Owner=_156356_rm, ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1ad985b90_Data>>(nullptr), ._field_Next=jule::Ptr<_1ad8b65c6_Case>(nullptr)});;
				if ((_15657_i > 0LL)) {
					(*((*_156356_rm.alloc)._field_Cases[(_15657_i - 1LL)]))._field_Next=_15668_case;
				};
				(*_156356_rm.alloc)._field_Cases=jule::append((*_156356_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8b65c6_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15668_case; __jule_collection; }));
			}
			_iter_next_1be068471:;
			++it;
			_15657_i++;
			goto _iter_begin_1be068471;
		}
		_iter_end_1be068471:;
	};
	if ((((*_156356_rm.alloc)._field_Default != nullptr) && ((*((*(_156332_m))))._field_Cases.len() > 0LL))) {
		(*((*_156356_rm.alloc)._field_Cases[((*_156356_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_156356_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_156332_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be06b9b3:;
		if (it != expr_end) {
			jule::I64 _15798_i = it - expr->begin();
			jule::Ptr<_1ad70c186_Case> _157915_c = *it;
			{
				_1ad8c65a3_checkCase(_self_, _156356_rm, _15798_i, _157915_c, _156372_expr);
			}
			_iter_next_1be06b9b3:;
			++it;
			_15798_i++;
			goto _iter_begin_1be06b9b3;
		}
		_iter_end_1be06b9b3:;
	};
}



inline jule::Ptr<_1ad8b65c6_Case> _1ad8c6dbc_checkDefault(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad8b5a9d_Match> _158433_m, jule::Ptr<_1ad70aedc_Else> _158448_d) {
	jule::Ptr<_1ad8b65c6_Case> _15857_def = jule::new_ptr<_1ad8b65c6_Case>(_1ad8b65c6_Case{._field_Owner=_158433_m, ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1ad985b90_Data>>(nullptr), ._field_Next=jule::Ptr<_1ad8b65c6_Case>(nullptr)});;
	(*(_15857_def))._field_Scope=_1ad8c6042_checkCaseScope(_self_, &(_15857_def), &((*(_158448_d))._field_Scope));
	return _15857_def;;
}



inline void _1ad8c7230_checkComptimePanic(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad6ceb70_Token> _159239_callToken, jule::Ptr<_1ad8b136d_Scope>* _159266_s) {
	if (((*((*(_159266_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _15963_stmt = (*((*(_159266_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _15963_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1be0701ae:;
			{
				jule::Ptr<_1ad985b90_Data> _15994_d = _15963_stmt.unsafe_cast_ptr<_1ad985b90_Data>();;
				{
					auto &_match_expr{ (*(_15994_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type26) {
						_case_begin_1be07118d:;
						{
							jule::Ptr<_1ad7e19eb_BuiltinPanicCallExprModel> _16029_m = (*(_15994_d))._field_Model.unsafe_cast_ptr<_1ad7e19eb_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16029_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_1be072359:;
									{
										jule::Ptr<_1ad778ec2_Const> _16056_c = (*(_16029_m))._field_Expr.unsafe_cast_ptr<_1ad778ec2_Const>();;
										if ((!(_1ad7d32c3_IsStr(_16056_c.ptr())))) {
											goto _match_end_1be0722d2;
										};
										if ((_159239_callToken == nullptr)) {
											jule::Ptr<_1ad8b860b_scopeChecker> _161011_root = _1ad8bbc6e_getHardRoot(_self_);;
											if (((*(_161011_root))._field_calledFrom == nullptr)) {
												_159239_callToken=(*(_16029_m))._field_Token;
											} else {
												_159239_callToken=(*(_161011_root))._field_calledFrom;
											};
										};
										_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), _159239_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad7d0bc7_ReadStr(_16056_c), &__jule_any_type5); __jule_collection; }));
										_1ad8bae7c_stop(_self_);
									}
								}
								_match_end_1be0722d2:;
							};
						}
					}
					_match_end_1be071127:;
				};
			}
		}
		_match_end_1be06e6ec:;
	};
}



inline void _1ad8c7593_processConstMatch(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad8b5a9d_Match>* _162439_tm, jule::Ptr<_1ad70c9a0_MatchCase>* _162456_m) {
	{
		auto expr = &((*((*(_162439_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be0727aa:;
		if (it != expr_end) {
			jule::I64 _16258_i = it - expr->begin();
			jule::Ptr<_1ad8b65c6_Case> _162515_c = *it;
			{
				if (((*(_162515_c))._field_Scope != nullptr)) {
					jule::Ptr<_1ad6ceb70_Token> _162713_token = nullptr;;
					if (((!((*((*(_162439_tm))))._field_TypeMatch)) && ((*(*(_162515_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_162713_token=(*((*((*((*(_162456_m))))._field_Cases[_16258_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1ad8c7230_checkComptimePanic(_self_, _162713_token, &((*_162515_c.alloc)._field_Scope));
					(*((*(_162439_tm))))._field_Default=_162515_c;
					(*((*(_162439_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1be0727aa:;
			++it;
			_16258_i++;
			goto _iter_begin_1be0727aa;
		}
		_iter_end_1be0727aa:;
	};
	if (((*((*(_162456_m))))._field_Default != nullptr)) {
		(*((*(_162439_tm))))._field_Cases=nullptr;
		(*((*(_162439_tm))))._field_Default=_1ad8c6dbc_checkDefault(_self_, (*(_162439_tm)), (*((*(_162456_m))))._field_Default);
		if (((*((*(_162439_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1ad6ceb70_Token> _164113_token = nullptr;;
			if ((!((*((*(_162439_tm))))._field_TypeMatch))) {
				_164113_token=(*((*((*((*(_162456_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1ad8c7230_checkComptimePanic(_self_, _164113_token, &((*(*((*(_162439_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_162439_tm))))._field_Cases=nullptr;
	};
}



inline void _1ad8c784b_checkTypeMatch(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70c9a0_MatchCase>* _165336_m) {
	jule::Ptr<_1ad985b90_Data> _16547_d = _1ad9a5c59_eval1(_1ad919b46_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)), (*((*(_165336_m))))._field_Expr);;
	if ((_16547_d == nullptr)) {
		return;;
	};
	if ((*((*(_165336_m))))._field_Comptime) {
		jule::Ptr<_1ad89387d_comptimeTypeInfo> _16608_cti = _1ad9be613_comptimeTypeInfo((*(_16547_d))._field_Kind.ptr());;
		if ((_16608_cti == nullptr)) {
			if ((!((*(_16547_d))._field_Decl))) {
				_1ad912c71_pushErr((*(_self_))._field_s, (*((*((*(_165336_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_16547_d))._field_Kind=(*(_16608_cti))._field_base;
		};
	} else if (((*(_16547_d))._field_Decl || (!(((((_1ad9bac4c_Prim((*(_16547_d))._field_Kind.ptr()) != nullptr) && _1ad9c4e10_IsAny(_1ad9bac4c_Prim((*(_16547_d))._field_Kind).ptr())) || (_1ad9bc556_Trait((*(_16547_d))._field_Kind) != nullptr)) || (_1ad9bb786_TypeEnum((*(_16547_d))._field_Kind) != nullptr)))))) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*((*((*(_165336_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad8b5a9d_Match> _16747_tm = jule::new_ptr<_1ad8b5a9d_Match>(_1ad8b5a9d_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16547_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_165336_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1ad8b65c6_Case>>(nullptr), ._field_Default=jule::Ptr<_1ad8b65c6_Case>(nullptr)});;
	if (((!((*(_16747_tm))._field_Comptime)) && ((*((*(_165336_m))))._field_Default != nullptr))) {
		(*_16747_tm.alloc)._field_Default=_1ad8c6dbc_checkDefault(_self_, _16747_tm, (*((*(_165336_m))))._field_Default);
	};
	_1ad8c69c1_checkCases(_self_, _165336_m, _16747_tm, _16547_d);
	if ((*_16747_tm.alloc)._field_Comptime) {
		_1ad8c7593_processConstMatch(_self_, &(_16747_tm), _165336_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16747_tm, &__jule_any_type44); __jule_collection; }));
}



inline void _1ad8c7b04_checkCommonMatch(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70c9a0_MatchCase>* _169638_m) {
	jule::Ptr<_1ad985b90_Data> _169711_d = nullptr;;
	if (((*((*(_169638_m))))._field_Expr == nullptr)) {
		_169711_d=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ad7ce522_NewBool(true)});
		(*(_169711_d))._field_Model=jule::Any((*_169711_d.alloc)._field_Constant, &__jule_any_type15);
	} else {
		_169711_d=_1ad9a63db_evalExpr1(_1ad919b46_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)), (*((*(_169638_m))))._field_Expr);
		if ((_169711_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_169638_m))))._field_Comptime) {
		if ((!(_1ad8cb355_canComptimeMatch(&(_169711_d))))) {
			_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169638_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1ad9bcd09_comptime((*(_169711_d))._field_Kind.ptr())) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_169638_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad8b5a9d_Match> _17237_mc = jule::new_ptr<_1ad8b5a9d_Match>(_1ad8b5a9d_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_169711_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_169638_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1ad8b65c6_Case>>(nullptr), ._field_Default=jule::Ptr<_1ad8b65c6_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17237_mc, &__jule_any_type44); __jule_collection; }));
	if (((!((*(_17237_mc))._field_Comptime)) && ((*((*(_169638_m))))._field_Default != nullptr))) {
		(*_17237_mc.alloc)._field_Default=_1ad8c6dbc_checkDefault(_self_, _17237_mc, (*((*(_169638_m))))._field_Default);
	};
	_1ad8c69c1_checkCases(_self_, _169638_m, _17237_mc, _169711_d);
	if ((*_17237_mc.alloc)._field_Comptime) {
		_1ad8c7593_processConstMatch(_self_, &(_17237_mc), _169638_m);
	};
}



inline void _1ad8c7dac_checkMatch(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70c9a0_MatchCase> _174731_m) {
	if ((*(_174731_m))._field_TypeMatch) {
		_1ad8c784b_checkTypeMatch(_self_, &(_174731_m));
		return;;
	};
	_1ad8c7b04_checkCommonMatch(_self_, &(_174731_m));
}



inline void _1ad8c8165_checkFall(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad702e6d_FallSt> _175526_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1ad8bb499_isDeferred(_self_))) {
		_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*(_175526_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1ad8b65c6_Case* _17637_case = ((_1ad8b65c6_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_17637_case))._field_Owner))._field_Comptime) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*_175526_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17637_case))._field_Next == nullptr)) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*_175526_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ad8b6cbe_FallSt>(_1ad8b6cbe_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17637_case))._field_Next)}), &__jule_any_type45); __jule_collection; }));
}



inline jule::Ptr<_1ad8b3914_BreakSt> _1ad8c84a6_checkBreakWithLabel(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70a283_BreakSt> _177836_b) {
	jule::Ptr<_1ad8b3914_BreakSt> _17797_brk = _1ad8c87e7_checkPlainBreak(_self_, _177836_b);;
	if ((_17797_brk == nullptr)) {
		return nullptr;;
	};
	(*(_17797_brk))._field_It=0LLU;
	(*(_17797_brk))._field_Mtch=0LLU;
	jule::Ptr<_1ad8b761b_scopeLabel> _17897_label = _1ad8ae514_findLabelParent(&((*((*(_177836_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_17897_label == nullptr)) {
		_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*(_17897_label))._field_used=true;
	if ((((*((*(_17897_label))._field_node))._field_Index + 1LL) >= (*((*(*(_17897_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _18023_i = ((*(*(_17897_label))._field_node.alloc)._field_Index + 1LL);;
	if ((_18023_i >= (*(*((*(_17897_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	} else {
		jule::Any _18068_st = (*(*((*(_17897_label))._field_node))._field_Scope.alloc)._field_Stmts[_18023_i];;
		{
			auto &_match_expr{ _18068_st };
			
			if (_match_expr.type == &__jule_any_type32) {
				_case_begin_1be0ae990:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1ad8b22a3_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1be0ad609:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1ad8b31a5_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type34) {
				_case_begin_1be0ad7e6:;
				{
					(*(_17797_brk))._field_It=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1ad8b2759_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1be0ad85c:;
				{
					(*(_17797_brk))._field_Mtch=static_cast<jule::Uintptr>(_18068_st.unsafe_cast_ptr<_1ad8b5a9d_Match>());
				}
			}
			else {
				_case_begin_1be0ad780:;
				{
					_1ad912c71_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				}
			}
			_match_end_1be0ad719:;
		};
	};
	if (((*(_17797_brk))._field_It != 0LLU)) {
		if ((!(_1ad8c322b_checkValidBreakLabel(_self_, (*(_17797_brk))._field_It)))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	if (((*(_17797_brk))._field_Mtch != 0LLU)) {
		if ((!(_1ad8c322b_checkValidBreakLabel(_self_, (*(_17797_brk))._field_Mtch)))) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*_177836_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_177836_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return _17797_brk;;
}



inline jule::Ptr<_1ad8b3914_BreakSt> _1ad8c87e7_checkPlainBreak(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70a283_BreakSt> _183632_b) {
	if (_1ad8bb499_isDeferred(_self_)) {
		_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183632_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad8b860b_scopeChecker> _18427_scope = _self_;;
	_julec_label_1be0b605c:;
	{
		
		if ((((((*_18427_scope.alloc)._field_it == 0LLU) && ((*_18427_scope.alloc)._field_cse == 0LLU)) && ((*_18427_scope.alloc)._field_parent != nullptr)) && ((*_18427_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1be0b7239:;
			{
				_18427_scope=(*_18427_scope.alloc)._field_parent;
				goto _julec_label_1be0b605c;
			}
		}
		else if (((*_18427_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1be0b72c2:;
			{
				return jule::new_ptr<_1ad8b3914_BreakSt>(_1ad8b3914_BreakSt{._field_It=(*_18427_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18427_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1be0b7338:;
			{
				return jule::new_ptr<_1ad8b3914_BreakSt>(_1ad8b3914_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1ad8b65c6_Case*)((*_18427_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1be0b713a:;
	};
	_1ad912c71_pushErr((*(_self_))._field_s, (*_183632_b.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ad8c8aa0_checkBreak(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad70a283_BreakSt> _185827_b) {
	if (((*(_185827_b))._field_Label != nullptr)) {
		jule::Ptr<_1ad8b3914_BreakSt> _18608_brk = _1ad8c84a6_checkBreakWithLabel(_self_, _185827_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18608_brk, &__jule_any_type46); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ad8b3914_BreakSt> _18657_brk = _1ad8c87e7_checkPlainBreak(_self_, _185827_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18657_brk, &__jule_any_type46); __jule_collection; }));
}



inline void _1ad8c8d58_checkRet(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad708407_RetSt> _186929_r) {
	if (_1ad8bb499_isDeferred(_self_)) {
		_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*(_186929_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad8b7165_RetSt> _18747_rt = jule::new_ptr<_1ad8b7165_RetSt>(_1ad8b7165_RetSt{._field_Func=(*(_1ad8bb9d8_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18747_rt, &__jule_any_type47); __jule_collection; }));
	jule::Ptr<_1ad982c03_retTypeChecker> _18797_rtc = jule::new_ptr<_1ad982c03_retTypeChecker>(_1ad982c03_retTypeChecker{._field_sc=_self_, ._field_f=(*(_18747_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>(nullptr), ._field_errorToken=(*_186929_r.alloc)._field_Token, ._field_model=jule::Any(nullptr)});;
	jule::Bool _18843_ok = _1ad983be3_check(_18797_rtc.ptr(), &((*_186929_r.alloc)._field_Expr));;
	if ((!(_18843_ok))) {
		return;;
	};
	if (((*_186929_r.alloc)._field_Expr != nullptr)) {
		(*_18747_rt.alloc)._field_Expr=(*_18797_rtc.alloc)._field_model;
	};
}



inline void _1ad8c9111_checkUseExpr(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad6e9dbb_UseExpr> _189429_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189429_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1ad8bb499_isDeferred(_self_)) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*_189429_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*_189429_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1ad8c93b9_checkNode(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Any* _191031_node) {
	{
		auto &_match_expr{ (*(_191031_node)) };
		
		if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1be0cc925:;
			{
				_1ad8bebc8_checkAnonScope(_self_, (*(_191031_node)).cast_ptr<_1ad7051d4_ScopeTree>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1be0ccc88:;
			{
				_1ad8bd4bd_checkVarDecl(_self_, (*(_191031_node)).cast_ptr<_1ad70802d_VarDecl>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1be0cccee:;
			{
				_1ad8bda2e_checkTypeAliasDecl(_self_, (*(_191031_node)).cast_ptr<_1ad70bbd0_TypeAliasDecl>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1be0ccd65:;
			{
				_1ad8c02e4_checkExpr(_self_, (*(_191031_node)).cast_ptr<_1ad6e94e7_Expr>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1be0cd1a6:;
			{
				_1ad8c0c2e_checkConditional(_self_, (*(_191031_node)).cast_ptr<_1ad70b493_Conditional>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1be0cd21c:;
			{
				_1ad8c2a99_checkIter(_self_, (*(_191031_node)).cast_ptr<_1ad708b77_Iter>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1be0cd283:;
			{
				_1ad8c3825_checkCont(_self_, (*(_191031_node)).cast_ptr<_1ad70a65c_ContSt>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1be0cd2e9:;
			{
				_1ad8c3acd_checkLabel(_self_, (*(_191031_node)).cast_ptr<_1ad702797_LabelSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1be0cd360:;
			{
				_1ad8c3d86_pushGoto(_self_, (*(_191031_node)).cast_ptr<_1ad702b71_GotoSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1be0cd3c6:;
			{
				_1ad8c5b46_checkAssignSt(_self_, (*(_191031_node)).cast_ptr<_1ad703b61_AssignSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1be0cd44d:;
			{
				_1ad8c7dac_checkMatch(_self_, (*(_191031_node)).cast_ptr<_1ad70c9a0_MatchCase>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1be0cd4c5:;
			{
				_1ad8c8165_checkFall(_self_, (*(_191031_node)).cast_ptr<_1ad702e6d_FallSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1be0cd54c:;
			{
				_1ad8c8aa0_checkBreak(_self_, (*(_191031_node)).cast_ptr<_1ad70a283_BreakSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1be0cd5c4:;
			{
				_1ad8c8d58_checkRet(_self_, (*(_191031_node)).cast_ptr<_1ad708407_RetSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1be0cd64b:;
			{
				_1ad8c9111_checkUseExpr(_self_, (*(_191031_node)).cast_ptr<_1ad6e9dbb_UseExpr>(&__jule_any_type62));
			}
		}
		else {
			_case_begin_1be0ccb01:;
			{
				jule::outln(_1bc355034_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1be0cca8a:;
	};
}



inline void _1ad8c95b7_checkResult(jule::Ptr<_1ad8b860b_scopeChecker> _self_) {
	_1ad704a74_Stmt _19487_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19487_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1be109a1d:;
			{
				jule::Ptr<_1ad6e9dbb_UseExpr> _19518_ue = _19487_stmt._field_Data.unsafe_cast_ptr<_1ad6e9dbb_UseExpr>();;
				jule::Ptr<_1ad985b90_Data> _19528_d = _1ad9a672c_evalExpr(_1ad919b46_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)), (*(_19518_ue))._field_Expr);;
				if ((_19528_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19528_d, &__jule_any_type21); __jule_collection; }));
				jule::Ptr<_1ad982c03_retTypeChecker> _19578_rtc = jule::new_ptr<_1ad982c03_retTypeChecker>(_1ad982c03_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_types=_1ad7eba7d_Types((*_self_.alloc)._field_result.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>(nullptr), ._field_errorToken=(*((*_19518_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr)});;
				_1ad983be3_check(_19578_rtc.ptr(), &((*_19518_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1be10bd3e:;
			{
				jule::Ptr<_1ad6e94e7_Expr> _19648_expr = _19487_stmt._field_Data.unsafe_cast_ptr<_1ad6e94e7_Expr>();;
				jule::Ptr<_1ad985b90_Data> _19658_d = _1ad9a672c_evalExpr(_1ad919b46_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)), _19648_expr);;
				if ((_19658_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19658_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1be1128b1:;
						{
							jule::Ptr<_1ad7e3602_BuiltinErrorCallExprModel> _19719_m = (*(_19658_d))._field_Model.unsafe_cast_ptr<_1ad7e3602_BuiltinErrorCallExprModel>();;
							_1ad8c003b_processErrorCall(_self_, &(_19719_m), (*(_19648_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19658_d, &__jule_any_type21); __jule_collection; }));
						}
					}
					else {
						_case_begin_1be112a8c:;
						{
							return;;
						}
					}
					_match_end_1be112a26:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type54 || _match_expr.type == &__jule_any_type61) {
			_case_begin_1be10b459:;
			{
				_1ad8c93b9_checkNode(_self_, &(_19487_stmt._field_Data));
			}
		}
		else {
			_case_begin_1be10b3e3:;
			{
				_1ad8c93b9_checkNode(_self_, &(_19487_stmt._field_Data));
				return;;
			}
		}
		_match_end_1be10b37c:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1ad8c97b5_checkTree(jule::Ptr<_1ad8b860b_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _19937_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_19937_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _19937_n); ((*_self_.alloc)._field_i)++) {
		{
			_1ad704a74_Stmt _20018_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1ad8c93b9_checkNode(_self_, &(_20018_stmt._field_Data));
			if (_1ad8bb213_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1be11670b:;
	}
	_iter_end_1be11670b:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1ad8c95b7_checkResult(_self_);
	};
}



inline void _1ad8c9b28_checkGoto(_1ad8b860b_scopeChecker* _self_, jule::Ptr<_1ad8b452a_GotoSt>* _201230_gt, jule::Ptr<_1ad8b761b_scopeLabel>* _201248_label) {
	jule::I64 _20137_n = 0LL;;
	if (((*((*(_201230_gt))))._field_Scope == (*((*((*(_201248_label))))._field_node))._field_Scope)) {
		if (((*((*(_201230_gt))))._field_Index > (*(*((*(_201248_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20137_n=(*((*(_201230_gt))))._field_Index;
	} else if (((*((*((*(_201230_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_201248_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1ad8b136d_Scope> _20268_gtsc = (*((*(_201230_gt))))._field_Scope;;
		while ((((*_20268_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_201248_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20268_gtsc=(*_20268_gtsc.alloc)._field_Parent;
			}
		_iter_next_1be11bb62:;
		}
		_iter_end_1be11bb62:;;
		if (((*_20268_gtsc.alloc)._field_StmtIndex > (*(*((*(_201248_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20137_n=(*_20268_gtsc.alloc)._field_StmtIndex;
	} else {
		_20137_n=0LL;
	};
	jule::Ptr<_1ad8b136d_Scope> _20487_s = (*((*((*(_201248_label))))._field_node))._field_Scope;;
	jule::I64 _20497_i = ((*(*((*(_201248_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20497_i >= _20137_n); (_20497_i)--) {
				{
					jule::Any _20529_stmt = (*(_20487_s))._field_Stmts[_20497_i];;
					if (_1ad8cb61e_stmtIsDef(&(_20529_stmt))) {
						_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_201230_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_201230_gt))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1be12066b:;
			}
			_iter_end_1be12066b:;;
			if (((*_20487_s.alloc)._field_ChildIndex > (*((*((*(_201230_gt))))._field_Scope))._field_ChildIndex)) {
				_20487_s=(*_20487_s.alloc)._field_Parent;
				_20497_i=((*_20487_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1be1202e7;
			};
			goto _iter_end_1be1202e7;
		}
	_iter_next_1be1202e7:;
	}
	_iter_end_1be1202e7:;;
}



inline void _1ad8c9d26_checkGotos(_1ad8b860b_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be12332d:;
		if (it != expr_end) {
			jule::Ptr<_1ad8b452a_GotoSt> _207015_gt = *it;
			{
				jule::Ptr<_1ad8b761b_scopeLabel> _20718_label = _1ad8bcd19_findLabelAll(_self_, &((*(_207015_gt))._field_Ident));;
				if ((_20718_label == nullptr)) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*_207015_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_207015_gt.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					goto _iter_next_1be12332d;
				};
				(*_207015_gt.alloc)._field_Label=(*(_20718_label))._field_node;
				(*(_20718_label))._field_used=true;
				_1ad8c9b28_checkGoto(_self_, &(_207015_gt), &(_20718_label));
			}
			_iter_next_1be12332d:;
			++it;
			goto _iter_begin_1be12332d;
		}
		_iter_end_1be12332d:;
	};
}



inline void _1ad8ca024_checkLabels(_1ad8b860b_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be125e13:;
		if (it != expr_end) {
			jule::Ptr<_1ad8b761b_scopeLabel> _208310_l = *it;
			{
				if ((!((*(_208310_l))._field_used))) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*_208310_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_208310_l.alloc)._field_node))._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1be125e13:;
			++it;
			goto _iter_begin_1be125e13;
		}
		_iter_end_1be125e13:;
	};
}



inline void _1ad8ca222_checkVars(_1ad8b860b_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be127bb2:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _209110_v = *it;
			{
				if (((((!((*(_209110_v))._field_Used)) && (!((*_209110_v.alloc)._field_Constant))) && (!(_1ad6d2557_IsIgnoreIdent((*_209110_v.alloc)._field_Ident)))) && (!(_1ad6d2821_IsAnonIdent((*_209110_v.alloc)._field_Ident))))) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*_209110_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209110_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1be127bb2:;
			++it;
			goto _iter_begin_1be127bb2;
		}
		_iter_end_1be127bb2:;
	};
}



inline void _1ad8ca420_checkAliases(_1ad8b860b_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be12a4bc:;
		if (it != expr_end) {
			jule::Ptr<_1ad9b77a4_TypeAlias> _209910_a = *it;
			{
				if ((((!((*(_209910_a))._field_Used)) && (!(_1ad6d2557_IsIgnoreIdent((*_209910_a.alloc)._field_Ident)))) && (!(_1ad6d2821_IsAnonIdent((*_209910_a.alloc)._field_Ident))))) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*_209910_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209910_a.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1be12a4bc:;
			++it;
			goto _iter_begin_1be12a4bc;
		}
		_iter_end_1be12a4bc:;
	};
}



inline void _1ad8ca783_check(jule::Ptr<_1ad8b860b_scopeChecker> _self_, jule::Ptr<_1ad7051d4_ScopeTree>* _210727_tree, jule::Ptr<_1ad8b136d_Scope>* _210755_s) {
	(*((*(_210755_s))))._field_Deferred=(*((*(_210727_tree))))._field_Deferred;
	(*((*(_210755_s))))._field_Unsafety=(*((*(_210727_tree))))._field_Unsafety;
	jule::I64 _21113_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_210727_tree));
	(*_self_.alloc)._field_scope=(*(_210755_s));
	_1ad8c97b5_checkTree(_self_);
	if ((_21113_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1ad8ca222_checkVars(_self_);
		_1ad8ca420_checkAliases(_self_);
		if (_1ad8bac7e_isRoot(_self_)) {
			_1ad8c9d26_checkGotos(_self_);
			_1ad8ca024_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1ad8b860b_scopeChecker> _1ad8caa19_newChildChecker(jule::Ptr<_1ad8b860b_scopeChecker> _self_) {
	jule::Ptr<_1ad8b860b_scopeChecker> _21317_base = _1ad8adcc7_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21317_base))._field_parent=_self_;
	(*_21317_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21317_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21317_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21317_base;;
}








inline jule::Bool _1ad8cc499_directiveChecker_eq(_1ad8cc499_directiveChecker *_self_, _1ad8cc499_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1ad8cc8d9_checkCdef(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1be13473a:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ad7e778d_Fn>()))._field_Binded) {
					goto _match_end_1be133591;
				};
				goto _case_begin_1be133607;
			}
		}
		else {
			_case_begin_1be133607:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be133591:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ad8ccb92_checkTypedef(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be13793b:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ad7159ec_Struct>()))._field_Binded) {
					goto _match_end_1be136792;
				};
				goto _case_begin_1be136808;
			}
		}
		else {
			_case_begin_1be136808:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be136792:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ad8cce4a_checkNamespace(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be13ab3c:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1ad7159ec_Struct>()))._field_Binded))) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1be139762:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1ad7e778d_Fn>()))._field_Binded))) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be139a70:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1ad933a83_Var>()))._field_Binded))) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1be139a09:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be139993:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad6ceb70_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ad912c71_pushErr((*(_self_))._field_s, _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be1461a8:;
			{
				if ((_1ad9b0192_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1ad6e45d0_Directive> _919_typedef = jule::new_ptr<_1ad6e45d0_Directive>(_1ad6e45d0_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1ad6ceb70_Token>>(nullptr)});;
					(*((*(_919_typedef))._field_Tag))._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1be146142:;
	};
}



inline void _1ad8cd203_checkDeprecated(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be1498b5:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ad7159ec_Struct>()))._field_Binded) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1be148584:;
			{
				jule::Ptr<_1ad7e778d_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1ad7e778d_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1ad7e8261_IsEntryPoint(_1078_f)) || _1ad7e84e7_IsInit(_1078_f))) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be1487e8:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ad933a83_Var>()))._field_Binded) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1be148782:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be14871b:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad6ceb70_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ad912c71_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1263_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ad912c71_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*_1263_arg.alloc)._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1ad8cd4ab_checkTest(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1be156581:;
			{
				jule::Ptr<_1ad7e778d_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1ad7e778d_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1ad7e84e7_IsInit(_1444_f)))) && (!(_1ad7e8261_IsEntryPoint(_1444_f))))) {
					goto _match_end_1be1553d7;
				};
				if (_1ad7e7eca_IsMethod(_1444_f)) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1be1553d7;
				};
				goto _case_begin_1be15544d;
			}
		}
		else {
			_case_begin_1be15544d:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be1553d7:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ad8cd764_checkExport(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1be15b2cd:;
			{
				jule::Ptr<_1ad7e778d_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1ad7e778d_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1ad7e84e7_IsInit(_1654_f)) || _1ad7e8261_IsEntryPoint(_1654_f)) || _1ad7e7eca_IsMethod(_1654_f)) || ((*_1654_f.alloc)._field_Generics.len() > 0LL))) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be159e03:;
			{
				jule::Ptr<_1ad933a83_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1ad933a83_Var>();;
				if (((*(_1714_v))._field_Binded || (*_1714_v.alloc)._field_Constant)) {
					_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1be15a19a:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return;;
			}
		}
		_match_end_1be15a134:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad6ceb70_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ad912c71_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1873_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ad912c71_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*_1873_arg.alloc)._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1ad8cda1c_checkDirective(_1ad8cc499_directiveChecker* _self_, jule::Ptr<_1ad6e45d0_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1be1683d9:;
			{
				_1ad8cc8d9_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1be167284:;
			{
				_1ad8ccb92_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1be1672ea:;
			{
				_1ad8cce4a_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1be167361:;
			{
				_1ad8cd203_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1be1673c7:;
			{
				_1ad8cd4ab_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1be16743d:;
			{
				_1ad8cd764_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1be1674a4:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1be16278a:;
			{
				_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be1671a7:;
	};
}



inline void _1ad8cdc1a_check(_1ad8cc499_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be16b123:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e45d0_Directive> _22315_d = *it;
			{
				_1ad8cda1c_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1be16b123:;
			++it;
			goto _iter_begin_1be16b123;
		}
		_iter_end_1be16b123:;
	};
}







inline jule::Ptr<_1ad8ced70_ReferenceStack> static__1ad8d005c_new(void) {
	return jule::new_ptr<_1ad8ced70_ReferenceStack>(_1ad8ced70_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I64 _1ad8d03e2_Len(_1ad8ced70_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1ad8d0733_At(_1ad8ced70_ReferenceStack* _self_, jule::I64 _4218_i) {
	return (*(_self_))._field_buffer[_4218_i];;
}



inline void _1ad8d09db_Push(_1ad8ced70_ReferenceStack* _self_, jule::Any _4724_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_4724_ref); };
}



inline jule::Bool _1be6d7936_Exist(_1ad8ced70_ReferenceStack* _self_, jule::Ptr<_1ad7ea84b_FnIns> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6d8c9a:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type63) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1be6d8c9a:;
			++it;
			goto _iter_begin_1be6d8c9a;
		}
		_iter_end_1be6d8c9a:;
	};
	return false;;
}

inline jule::Bool _1be6ee387_Exist(_1ad8ced70_ReferenceStack* _self_, jule::Ptr<_1ad933a83_Var> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7006a7:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type7) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1be7006a7:;
			++it;
			goto _iter_begin_1be7006a7;
		}
		_iter_end_1be7006a7:;
	};
	return false;;
}

inline jule::Bool _1be7d9d46_Exist(_1ad8ced70_ReferenceStack* _self_, jule::Ptr<_1ad718857_StructIns> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7db1aa:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type64) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1be7db1aa:;
			++it;
			goto _iter_begin_1be7db1aa;
		}
		_iter_end_1be7db1aa:;
	};
	return false;;
}

inline jule::Bool _1beb73168_Exist(_1ad8ced70_ReferenceStack* _self_, jule::Ptr<_1ad802ea2_Trait> _5220_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb74477:;
		if (it != expr_end) {
			jule::Any *_5310_ref = it;
			{
				if ((jule::Any(_5220_t, &__jule_any_type11) == (*(_5310_ref)))) {
					return true;;
				};
			}
			_iter_next_1beb74477:;
			++it;
			goto _iter_begin_1beb74477;
		}
		_iter_end_1beb74477:;
	};
	return false;;
}








inline jule::Bool _1ad8d11d4_Pass_eq(_1ad8d11d4_Pass *_self_, _1ad8d11d4_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1ad8d6690_pushErr(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad6ceb70_Token>* _30624_token, jule::Str _30646_fmt, jule::Slice<jule::Any> _30666_args) {
	{ jule::Slice<_1dd356476_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ad90cc5a_compilerErr(_30624_token, true, _30646_fmt, _30666_args)); };
}



inline void _1ad8d6e21_pushSuggestion(_1ad8d5b89_symBuilder* _self_, jule::Str _31530_fmt, jule::Slice<jule::Any> _31550_args) {
	{
		_1ad90dd7c_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _31530_fmt, _31550_args);
	};
}



inline jule::Bool _1ad8d731c_checkCppUseDeclPath(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad70d033_UseDecl>* _31936_decl, jule::Str* _31958_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3203_ext = _1dd0c5525_Ext((*(_31958_path)));;
	if (((!(_1dd349106_IsValidHeaderExt(_3203_ext))) && (!(_1dd3493c0_IsValidCppExt(_3203_ext))))) {
		_1ad8d6690_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3203_ext, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1dbd08545_Status> _3273_info = ({
		auto except = static__1dbd05322_Of((*(_31958_path)));
		(except.ok()) ? (except.result) : ({{
			_1ad8d6690_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_31936_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_1dbd08545_Status>(nullptr);});
	});;
	if (_1dbd08952_IsDir(_3273_info.ptr())) {
		_1ad8d6690_pushErr(_self_, &((*((*(_31936_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_31936_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8d762a_buildCppHeaderImport(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad70d033_UseDecl>* _33941_decl) {
	jule::Str _3407_path = (*((*((*(_33941_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if ((!(_1dd348d2b_IsStdHeaderPath(_3407_path)))) {
		_3407_path=_1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1ad6d5ec8_Dir((*((*((*(_33941_decl))))._field_Token))._field_File.ptr()); (*it++) = _3407_path; __jule_collection; }));
		jule::Bool _3448_ok = _1ad8d731c_checkCppUseDeclPath(_self_, _33941_decl, &(_3407_path));;
		if ((!(_3448_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1dd0c57de_Abs(_3407_path);
			_3407_path = __jule_assign_result.__jule_result_arg0;
			_3448_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3448_ok))) {
			_1ad8d6690_pushErr(_self_, &((*((*(_33941_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1ad8e1bea_ImportInfo>(_1ad8e1bea_ImportInfo{._field_Decl=(*(_33941_decl)), ._field_Path=_3407_path, ._field_LinkPath=(*(*((*(_33941_decl))))._field_Path.alloc)._field_Kind, ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Str _1ad8d7a26_checkAbsPath(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Str _36933_filepath, jule::Ptr<_1ad70d033_UseDecl>* _36953_decl) {
	jule::Str _3703_modPath = ((_1ad8ddbe7_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ad8dcc5c_GetModPath((*(_self_))._field_importer.data);;
	if ((_3703_modPath.len() == 0LL)) {
		_1ad8d6690_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1ad8d6e21_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	_36933_filepath=_1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _3703_modPath; (*it++) = _36933_filepath; __jule_collection; }));
	jule::Bool _37813_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1dd0c57de_Abs(_36933_filepath);
		_36933_filepath = __jule_assign_result.__jule_result_arg0;
		_37813_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_37813_ok))) {
		_1ad8d6690_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_36953_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	jule::Ptr<_1dbd08545_Status> _3853_info = ({
		auto except = static__1dbd05322_Of(_36933_filepath);
		(except.ok()) ? (except.result) : ({{
			_1ad8d6690_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_36953_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} jule::Ptr<_1dbd08545_Status>(nullptr);});
	});;
	if ((!(_1dbd08952_IsDir(_3853_info.ptr())))) {
		_1ad8d6690_pushErr(_self_, &((*((*(_36953_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_36953_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _36933_filepath;;
}



inline jule::Str _1ad8d7e22_checkStdAbsPath(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Str _39836_filepath, jule::Ptr<_1ad70d033_UseDecl>* _39856_decl) {
	(_39836_filepath).mut_slice(4LL);;
	_39836_filepath=_1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1dd46550d_PathStdlib; (*it++) = _39836_filepath; __jule_collection; }));
	jule::Bool _40113_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1dd0c57de_Abs(_39836_filepath);
		_39836_filepath = __jule_assign_result.__jule_result_arg0;
		_40113_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_40113_ok))) {
		_1ad8d6690_pushErr(_self_.ptr(), &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39856_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	jule::Ptr<_1dbd08545_Status> _4083_info = ({
		auto except = static__1dbd05322_Of(_39836_filepath);
		(except.ok()) ? (except.result) : ({{
			_1ad8d6690_pushErr(_self_, &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39856_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} jule::Ptr<_1dbd08545_Status>(nullptr);});
	});;
	if ((!(_1dbd08952_IsDir(_4083_info.ptr())))) {
		_1ad8d6690_pushErr(_self_, &((*((*(_39856_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39856_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _39836_filepath;;
}



inline __jule_tuple_bool__jule_tuple_str _1ad8d8263_checkImpPath(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad70d033_UseDecl>* _42134_decl) {
	__jule_tuple_bool__jule_tuple_str __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	jule::Str _4223_path = (*((*((*(_42134_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if (_1dd0a3cea_HasSuffix(_4223_path, jule::Str::lit("/", 1))) {
		_1ad8d6690_pushErr(_self_.ptr(), &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	jule::Slice<jule::Str> _4273_parts = _1dd0a7abd_Split(_4223_path, jule::Str::lit("/", 1), -1LL);;
	if ((_4273_parts.len() == 0LL)) {
		_1ad8d6690_pushErr(_self_, &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=_4273_parts[0LL].equal("std", 3);
	{
		auto expr = &(_4273_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be1a7ec8:;
		if (it != expr_end) {
			jule::Str *_43310_part = it;
			{
				if ((((*(_43310_part))).empty() || _1ad6d2557_IsIgnoreIdent((*(_43310_part))))) {
					_1ad8d6690_pushErr(_self_, &((*((*(_42134_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42134_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg1=_1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = __jule_func_result.__jule_result_arg1; (*it++) = (*(_43310_part)); __jule_collection; }));
			}
			_iter_next_1be1a7ec8:;
			++it;
			goto _iter_begin_1be1a7ec8;
		}
		_iter_end_1be1a7ec8:;
	};
	if (__jule_func_result.__jule_result_arg0) {
		__jule_func_result.__jule_result_arg1=_1ad8d7e22_checkStdAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42134_decl);
	} else {
		__jule_func_result.__jule_result_arg1=_1ad8d7a26_checkAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42134_decl);
	};
	return __jule_func_result;;
}



inline void _1ad8d851b_assignAlias(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _45133_imp) {
	jule::I64 _4527_i = _1dd0a4d95_FindLast((*((*(_45133_imp))))._field_LinkPath, jule::Str::lit("/", 1));;
	(_4527_i)++;
	jule::Str _4543_path = (*((*(_45133_imp))))._field_LinkPath.slice(_4527_i);;
	(*((*(_45133_imp))))._field_Alias=_4543_path;
}



inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8d885c_buildImport(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad70d033_UseDecl>* _45833_decl) {
	if ((*((*(_45833_decl))))._field_Binded) {
		return _1ad8d762a_buildCppHeaderImport(_self_.ptr(), _45833_decl);;
	};
	jule::Bool _4623_std;
	jule::Str _4628_filepath;
	({
		__jule_tuple_bool__jule_tuple_str __jule_assign_result = _1ad8d8263_checkImpPath(_self_, _45833_decl);
		_4623_std = __jule_assign_result.__jule_result_arg0;
		_4628_filepath = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4628_filepath).empty()) {
		return nullptr;;
	};
	jule::Ptr<_1ad8e1bea_ImportInfo> _4677_imp = jule::new_ptr<_1ad8e1bea_ImportInfo>(_1ad8e1bea_ImportInfo{._field_Decl=(*(_45833_decl)), ._field_Path=_4628_filepath, ._field_LinkPath=(*((*((*(_45833_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_45833_decl))))._field_Path.alloc)._field_Kind.len() - 1LL)), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=false, ._field_Std=_4623_std, ._field_Package=jule::new_ptr<_1ad8e446c_Package>(_1ad8e446c_Package{._field_Files=nullptr}), ._field_ModId=0});;
	if (((*((*(_45833_decl))))._field_Alias != nullptr)) {
		(*(_4677_imp))._field_Alias=(*(*((*(_45833_decl))))._field_Alias.alloc)._field_Kind;
	} else {
		_1ad8d851b_assignAlias(_self_, &(_4677_imp));
	};
	return _4677_imp;;
}



inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8d8b9d_findUseDecl(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _48528_pkg) {
	return _1ad7ee0ad_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>>((void*)__jule_anon_1be1b3830, jule::Ptr<__jule_anon_1be1b3830_ctx>::make(__jule_anon_1be1b3830_ctx{._48528_pkg=_48528_pkg}).as<jule::Uintptr>(), __jule_anon_1be1b3830_ctx_handler));;
}



inline jule::Bool _1ad8d8ede_checkDuplicateUseDecl(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _49342_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad8e1bea_ImportInfo> _4947_lpkg = _1ad8d8b9d_findUseDecl(_self_, _49342_pkg);;
	if ((_4947_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1ad8d6690_pushErr(_self_, &((*((*((*(_49342_pkg))))._field_Decl))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49342_pkg))))._field_LinkPath, &__jule_any_type5); __jule_collection; }));
	_1ad8d6e21_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Str _1ad8d9330_getAsLinkPath(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Str _50334_path) {
	_1dd0b6912_Builder _5047_sb = static__1dd0b74d4_New(_50334_path.len());;
	if (_1dd0a3976_HasPrefix(_50334_path, _1dd46550d_PathStdlib)) {
		(_50334_path).mut_slice(_1dd46550d_PathStdlib.len());;
		_1dd0c0dd3_WriteStr(&_5047_sb, jule::Str::lit("\"std", 4));
		_1dd0c0dd3_WriteStr(&_5047_sb, _1dd0a931c_Replace(_50334_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1), -1LL));
		_1dd0c118b_WriteByte(&_5047_sb, '\"');
		return _1dd0c16ca_Str(&_5047_sb);;
	};
	jule::Str _5133_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1dd0c57de_Abs(((_1ad8ddbe7_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ad8dcc5c_GetModPath((*(_self_))._field_importer.data));
		_5133_root = __jule_assign_result.__jule_result_arg0;
	});
	(_50334_path).mut_slice(_5133_root.len());;
	if ((_50334_path[0LL] == 47LLU)) {
		(_50334_path).mut_slice(1LL);;
	};
	_1dd0c118b_WriteByte(&_5047_sb, '\"');
	_1dd0c0dd3_WriteStr(&_5047_sb, _1dd0a931c_Replace(_50334_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1), -1LL));
	_1dd0c118b_WriteByte(&_5047_sb, '\"');
	return _1dd0c16ca_Str(&_5047_sb);;
}



inline void _1ad8d974d_pushCycleError(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad8d5b89_symBuilder>* _52432_sb, jule::Str _52449_path, _1dd0b6912_Builder* _52465_message) {
	;
	jule::Str _5263_refersTo = _1dd3568d8_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8d9330_getAsLinkPath(_self_, _1ad6d5ec8_Dir((*((*((*(_52432_sb))))._field_table))._field_File.ptr())), &__jule_any_type5); (*it++) = jule::Any(_1ad8d9330_getAsLinkPath(_self_, _52449_path), &__jule_any_type5); __jule_collection; }));;
	jule::Str _5303_m = _1dd0c16ca_Str(_52465_message);;
	_1dd0c0dd3_WriteStr(_52465_message, _1dd0a3613_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1dd0c0dd3_WriteStr(_52465_message, _5263_refersTo);
	_1dd0c118b_WriteByte(_52465_message, '\n');
	_1dd0c0dd3_WriteStr(_52465_message, _5303_m);
}



inline void _1ad8d9b6b_pushCrossCycleError(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad8d5b89_symBuilder>* _53737_target, jule::Ptr<_1ad8e1bea_ImportInfo>* _53759_imp, jule::Ptr<_1ad6ceb70_Token>* _53778_errorToken) {
	_1dd0b6912_Builder _5387_message = static__1dd0b74d4_New(32LL);;
	_1ad8d974d_pushCycleError(_self_, &(_self_), (*((*(_53759_imp))))._field_Path, &(_5387_message));
	jule::Ptr<_1ad8d5b89_symBuilder> _5427_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1ad8d5b89_symBuilder> _5437_old = _self_;;
	while (((*(_5427_owner))._field_owner != nullptr)) {
		{
			_1ad8d974d_pushCycleError(_self_, &((*_5437_old.alloc)._field_owner), _1ad6d5ec8_Dir((*((*_5437_old.alloc)._field_table))._field_File.ptr()), &(_5387_message));
			if (((*_5427_owner.alloc)._field_owner == (*(_53737_target)))) {
				_1ad8d974d_pushCycleError(_self_, _53737_target, _1ad6d5ec8_Dir((*((*(_5427_owner))._field_table))._field_File), &(_5387_message));
				goto _iter_end_1be1be62c;
			};
			_5437_old=_5427_owner;
			_5427_owner=(*_5427_owner.alloc)._field_owner;
		}
	_iter_next_1be1be62c:;
	}
	_iter_end_1be1be62c:;;
	_1ad8d6690_pushErr(_self_, _53778_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1dd0c16ca_Str(&_5387_message), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1ad8da067_checkImportCycles(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad8e1bea_ImportInfo> _56034_imp, jule::Ptr<_1ad70d033_UseDecl>* _56053_decl) {
	if (((*(_56034_imp))._field_Path == _1ad6d5ec8_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1ad8d6690_pushErr(_self_, &((*((*(_56053_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8d9330_getAsLinkPath(_self_, (*_56034_imp.alloc)._field_Path), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ad8d5b89_symBuilder> _5707_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1be1c3dc3:;
	if ((_1ad6d5ec8_Dir((*((*(_5707_owner))._field_table))._field_File) == (*_56034_imp.alloc)._field_Path)) {
		_1ad8d9b6b_pushCrossCycleError(_self_, &(_5707_owner), &(_56034_imp), &((*((*(_56053_decl))))._field_Token));
		return false;;
	};
	if (((*(_5707_owner))._field_owner != nullptr)) {
		_5707_owner=(*_5707_owner.alloc)._field_owner;
		goto _julec_label_1be1c3dc3;
	};
	return true;;
}



inline void _1ad8da485_checkPackageAccessibility(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad70d033_UseDecl>* _59142_decl, jule::Str* _59164_mod, jule::Str* _59175_path) {
	if ((((_1ad8ddbe7_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ad8dcc5c_GetModPath((*(_self_))._field_importer.data) == (*(_59164_mod)))) {
		return;;
	};
	;
	jule::I64 _5963_i = _1dd0a45e2_Find((*(_59175_path)), jule::Str::lit("internal", 8));;
	if ((_5963_i == -1LL)) {
		return;;
	};
	if ((_5963_i == 0LL)) {
		if (((((*(_59175_path)).len() - 8LL) == 0LL) || _1dd0a3976_HasPrefix((*(_59175_path)), jule::Str::lit("internal/", 9)))) {
			_1ad8d6690_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((*(_59175_path)).slice((_5963_i - 1LL)).equal("/internal", 9)) {
		_1ad8d6690_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _6143_n = ((_5963_i + 8LL) + 1LL);;
	if (((_6143_n < (*(_59175_path)).len()) && (*(_59175_path)).slice((_5963_i - 1LL), _6143_n).equal("/internal/", 10))) {
		_1ad8d6690_pushErr(_self_, &((*((*(_59142_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Bool _1ad8da881_importPackage(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _62135_imp, jule::Ptr<_1ad70d033_UseDecl>* _62158_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62135_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad8e1bea_ImportInfo> _6267_port = ((_1ad8ddbe7_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ad8dd3de_GetImport((*(_self_))._field_importer.data, (*((*(_62135_imp))))._field_Path);;
	if ((_6267_port != nullptr)) {
		(*((*(_62135_imp))))._field_Package=(*_6267_port.alloc)._field_Package;
		(*((*(_62135_imp))))._field_Duplicate=true;
		jule::Str _6314_oldMod = ((_1ad8ddbe7_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ad8dcc5c_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1ad8ddbe7_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ad8dca81_SetModPath((*_self_.alloc)._field_importer.data, ((_1ad8ddbe7_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ad8dd09d_ModById((*_self_.alloc)._field_importer.data, (*((*(_62135_imp))))._field_ModId));
		_1ad8da485_checkPackageAccessibility(_self_, _62158_decl, &(_6314_oldMod), &((*_6267_port.alloc)._field_Path));
		((_1ad8ddbe7_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ad8dca81_SetModPath((*_self_.alloc)._field_importer.data, _6314_oldMod);
	} else {
		if ((!(_1ad8da067_checkImportCycles(_self_, (*(_62135_imp)), _62158_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6404_oldMod = ((_1ad8ddbe7_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ad8dcc5c_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1ad8ddbe7_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ad8dca81_SetModPath((*_self_.alloc)._field_importer.data, _6404_oldMod);
		});;
		if ((*((*(_62135_imp))))._field_Std) {
			((_1ad8ddbe7_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ad8dca81_SetModPath((*_self_.alloc)._field_importer.data, _1dd46550d_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1ad6e325a_AST>> _6458_asts;
		jule::Slice<_1dd356476_Log> _64518_errors;
		({
			__jule_tuple_sx_1ad6e325a_AST__jule_tuple_s_1dd356476_Log __jule_assign_result = ((_1ad8ddbe7_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ad8dd7da_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62135_imp))))._field_Path, (!((*((*(_62135_imp))))._field_Std)));
			_6458_asts = __jule_assign_result.__jule_result_arg0;
			_64518_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64518_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64518_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1ad8da485_checkPackageAccessibility(_self_, _62158_decl, &(_6404_oldMod), &((*((*(_62135_imp))))._field_Path));
		{
			auto expr = &(_6458_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be1dab87:;
			if (it != expr_end) {
				jule::Ptr<_1ad6e325a_AST> _65316_ast = *it;
				{
					jule::Ptr<_1ad7eda91_SymTab> _6549_table = static_cast<jule::Ptr<_1ad7eda91_SymTab>>(nullptr);;
					({
						__jule_tuple_x_1ad7eda91_SymTab__jule_tuple_s_1dd356476_Log __jule_assign_result = _1ad9d9661_buildSymbols(&(_65316_ast), &((*_self_.alloc)._field_importer), _self_);
						_6549_table = __jule_assign_result.__jule_result_arg0;
						_64518_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64518_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64518_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62135_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62135_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6549_table; __jule_collection; }));
				}
				_iter_next_1be1dab87:;
				++it;
				goto _iter_begin_1be1dab87;
			}
			_iter_end_1be1dab87:;
		};
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8dabc2_importUseDecl(jule::Ptr<_1ad8d5b89_symBuilder> _self_, jule::Ptr<_1ad70d033_UseDecl>* _66735_decl) {
	jule::Ptr<_1ad8e1bea_ImportInfo> _6687_imp = _1ad8d885c_buildImport(_self_, _66735_decl);;
	if ((_6687_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6737_ok = _1ad8d8ede_checkDuplicateUseDecl(_self_, &(_6687_imp));;
	if ((!(_6737_ok))) {
		return nullptr;;
	};
	_6737_ok=_1ad8da881_importPackage(_self_, &(_6687_imp), _66735_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6687_imp; __jule_collection; }));
	if (_6737_ok) {
		((_1ad8ddbe7_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ad8dda93_Imported((*_self_.alloc)._field_importer.data, _6687_imp);
		return _6687_imp;;
	};
	return nullptr;;
}



inline void _1ad8dadc0_importUseDecls(jule::Ptr<_1ad8d5b89_symBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be1e1583:;
		if (it != expr_end) {
			jule::Ptr<_1ad70d033_UseDecl> _68715_decl = *it;
			{
				_1ad8dabc2_importUseDecl(_self_, &(_68715_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1be1e1583;
				};
			}
			_iter_next_1be1e1583:;
			++it;
			goto _iter_begin_1be1e1583;
		}
		_iter_end_1be1e1583:;
	};
}



inline void _1ad8db178_appendNode(_1ad8d5b89_symBuilder* _self_, _1ad6e41b2_Node* _69631_node) {
	{
		auto &_match_expr{ (*(_69631_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1be1e30bd:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8abc5e_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad8d55c3_buildImpl((*(_69631_node))._field_Data.cast_ptr<_1ad711a92_Impl>(&__jule_any_type65)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1be1e1ac2:;
			{
				jule::Ptr<_1ad9b77a4_TypeAlias> _7018_ta = _1ad8d1b1e_buildTypeAlias((*(_69631_node))._field_Data.cast_ptr<_1ad70bbd0_TypeAliasDecl>(&__jule_any_type50));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7018_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1be1e2b28:;
			{
				jule::Ptr<_1ad7159ec_Struct> _7048_srct = _1ad8d24b0_buildStruct((*(_69631_node))._field_Data.cast_ptr<_1ad710be5_StructDecl>(&__jule_any_type66));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7159ec_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7048_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1be1e2b8e:;
			{
				jule::Ptr<_1ad7e778d_Fn> _7078_f = _1ad8d315e_buildFunc((*(_69631_node))._field_Data.cast_ptr<_1ad706d73_FnDecl>(&__jule_any_type67));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7e778d_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7078_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1be1e2c05:;
			{
				jule::Ptr<_1ad802ea2_Trait> _7108_t = _1ad8d39ab_buildTrait((*(_69631_node))._field_Data.cast_ptr<_1ad711432_TraitDecl>(&__jule_any_type68));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad802ea2_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7108_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1be1e2c6b:;
			{
				jule::Ptr<_1ad933a83_Var> _7138_v = _1ad8d5040_buildVar((*(_69631_node))._field_Data.cast_ptr<_1ad70802d_VarDecl>(&__jule_any_type49));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7138_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1be1e2cd2:;
			{
				jule::Ptr<_1ad805658_Enum> _7168_e = _1ad8d4539_buildEnum((*(_69631_node))._field_Data.cast_ptr<_1ad70e09a_EnumDecl>(&__jule_any_type69));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad805658_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7168_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1be1e35a7:;
			{
				jule::Ptr<_1ad806d63_TypeEnum> _7198_e = _1ad8d4c76_buildTypeEnum((*(_69631_node))._field_Data.cast_ptr<_1ad710035_TypeEnumDecl>(&__jule_any_type70));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad806d63_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7198_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1be1e2a18:;
			{
				_1ad8d6690_pushErr(_self_, &((*(_69631_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be1e29a2:;
	};
}



inline void _1ad8db376_appendNodes(_1ad8d5b89_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be20ba32:;
		if (it != expr_end) {
			_1ad6e41b2_Node _72715_node = *it;
			{
				_1ad8db178_appendNode(_self_, &(_72715_node));
			}
			_iter_next_1be20ba32:;
			++it;
			goto _iter_begin_1be20ba32;
		}
		_iter_end_1be20ba32:;
	};
}



inline void _1ad8db62e_pushDirectivePass(_1ad8d5b89_symBuilder* _self_, jule::Ptr<_1ad6e45d0_Directive>* _73238_d) {
	if (((*((*(_73238_d))))._field_Args.len() == 0LL)) {
		_1ad8d6690_pushErr(_self_, &((*((*(_73238_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73238_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1ad6ceb70_Token> _7374_arg = (*((*(_73238_d))))._field_Args[1LL];;
		_1ad8d6690_pushErr(_self_, &(_7374_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73238_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad6ceb70_Token> _7413_arg = (*((*(_73238_d))))._field_Args[0LL];;
	if (((*(_7413_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1ad8d6690_pushErr(_self_, &(_7413_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7413_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ad8d6690_pushErr(_self_, &(_7413_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1ad8d11d4_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad8d11d4_Pass{._field_Token=(*((*(_73238_d))))._field_Tag, ._field_Text=(*_7413_arg.alloc)._field_Kind.slice(1LL, ((*_7413_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1ad8db82c_appendTopDirectives(_1ad8d5b89_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be213d9c:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e45d0_Directive> _75915_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75915_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1be21580a:;
						{
							_1ad8db62e_pushDirectivePass(_self_, &(_75915_d));
						}
					}
					_match_end_1be21572d:;
				};
			}
			_iter_next_1be213d9c:;
			++it;
			goto _iter_begin_1be213d9c;
		}
		_iter_end_1be213d9c:;
	};
}



inline void _1ad8dba2a_build(jule::Ptr<_1ad8d5b89_symBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1ad7eda91_SymTab>(_1ad7eda91_SymTab{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1ad8d11d4_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1ad7159ec_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1ad7e778d_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1ad802ea2_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1ad805658_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1ad806d63_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1ad8abc5e_Impl>>(nullptr)});
	_1ad8db82c_appendTopDirectives(_self_);
	_1ad8dadc0_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1ad8db376_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}








inline jule::Bool _1ad8e1bea_ImportInfo_eq(_1ad8e1bea_ImportInfo *_self_, _1ad8e1bea_ImportInfo _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_LinkPath == _self_->_field_LinkPath) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Duplicate == _self_->_field_Duplicate) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Std == _self_->_field_Std) &&
		(_self_->_field_Package == _self_->_field_Package) &&
		(_self_->_field_ModId == _self_->_field_ModId);
}

inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8e2217_SelectPackage(_1ad8e1bea_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1ad933a83_Var> _1ad8e2613_FindVar(_1ad8e1bea_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1ad8e4192_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ad8de4ab_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad8e2a0e_FindTypeAlias(_1ad8e1bea_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1ad8e4192_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ad8de8da_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1ad7159ec_Struct> _1ad8e2e0a_FindStruct(_1ad8e1bea_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1ad8e4192_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ad8ded91_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ad8e3306_FindFn(_1ad8e1bea_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1ad8e4192_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ad8e028c_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1ad802ea2_Trait> _1ad8e3647_FindTrait(_1ad8e1bea_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1ad8e4192_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ad8e0611_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1ad805658_Enum> _1ad8e3988_FindEnum(_1ad8e1bea_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1ad8e4192_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ad8e0985_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1ad806d63_TypeEnum> _1ad8e3cc9_FindTypeEnum(_1ad8e1bea_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1ad8e4192_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ad8e0e19_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1ad8e4192_isLookupable(_1ad8e1bea_ImportInfo* _self_) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	return true;;
}







inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8e4945_SelectPackage(_1ad8e446c_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1ad933a83_Var> _1ad8e4d41_FindVar(_1ad8e446c_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded) {
	return _1ad8de4ab_findVarInPackage(&((*(_self_))._field_Files), &(_28723_ident), _28735_binded);;
}



inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad8e523c_FindTypeAlias(_1ad8e446c_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded) {
	return _1ad8de8da_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_29329_ident), _29341_binded);;
}



inline jule::Ptr<_1ad7159ec_Struct> _1ad8e5638_FindStruct(_1ad8e446c_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded) {
	return _1ad8ded91_findStructInPackage(&((*(_self_))._field_Files), &(_29926_ident), _29938_binded);;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ad8e5a34_FindFn(_1ad8e446c_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded) {
	return _1ad8e028c_findFnInPackage(&((*(_self_))._field_Files), &(_30522_ident), _30534_binded);;
}



inline jule::Ptr<_1ad802ea2_Trait> _1ad8e5d75_FindTrait(_1ad8e446c_Package* _self_, jule::Str _31125_ident) {
	return _1ad8e0611_findTraitInPackage(&((*(_self_))._field_Files), &(_31125_ident));;
}



inline jule::Ptr<_1ad805658_Enum> _1ad8e61b6_FindEnum(_1ad8e446c_Package* _self_, jule::Str _31724_ident) {
	return _1ad8e0985_findEnumInPackage(&((*(_self_))._field_Files), &(_31724_ident));;
}



inline jule::Ptr<_1ad806d63_TypeEnum> _1ad8e6507_FindTypeEnum(_1ad8e446c_Package* _self_, jule::Str _32328_ident) {
	return _1ad8e0e19_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_32328_ident));;
}







inline jule::Ptr<_1ad89387d_comptimeTypeInfo> _1ad90e6da_pushComptimeTypeInfo(_1ad90e245_commonSemaMeta* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _21241_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be268bb0:;
		if (it != expr_end) {
			jule::Ptr<_1ad89387d_comptimeTypeInfo> _21315_t2 = *it;
			{
				if ((((*((*(_21315_t2))._field_base))._field_BindIdent == (*((*(_21241_t))))._field_BindIdent) && _1ad9b8cd3_Equal((*(_21315_t2))._field_base, (*(_21241_t))))) {
					return _21315_t2;;
				};
			}
			_iter_next_1be268bb0:;
			++it;
			goto _iter_begin_1be268bb0;
		}
		_iter_end_1be268bb0:;
	};
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _2187_t1 = jule::new_ptr<_1ad89387d_comptimeTypeInfo>(_1ad89387d_comptimeTypeInfo{._field_base=(*(_21241_t))});;
	{ jule::Slice<jule::Ptr<_1ad89387d_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2187_t1); };
	return _2187_t1;;
}







inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad910345_SelectPackage(_1ad90ed6c_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>> _24129_selector) {
	return _1ad7ee0ad_SelectPackage((*(_self_))._field_file.ptr(), _24129_selector);;
}



inline jule::Ptr<_1ad933a83_Var> _1ad910741_FindVar(_1ad90ed6c_sema* _self_, jule::Str _25123_ident, jule::Bool _25135_binded) {
	jule::Ptr<_1ad933a83_Var> _2537_v = _1ad8de4ab_findVarInPackage(&((*(_self_))._field_files), &(_25123_ident), _25135_binded);;
	if ((_2537_v != nullptr)) {
		return _2537_v;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad910b3c_FindTypeAlias(_1ad90ed6c_sema* _self_, jule::Str _26629_ident, jule::Bool _26641_binded) {
	jule::Ptr<_1ad9b77a4_TypeAlias> _2687_ta = _1ad8de8da_findTypeAliasInPackage(&((*(_self_))._field_files), &(_26629_ident), _26641_binded);;
	if ((_2687_ta != nullptr)) {
		return _2687_ta;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad7159ec_Struct> _1ad911038_FindStruct(_1ad90ed6c_sema* _self_, jule::Str _28126_ident, jule::Bool _28138_binded) {
	jule::Ptr<_1ad7159ec_Struct> _2837_s = _1ad8ded91_findStructInPackage(&((*(_self_))._field_files), &(_28126_ident), _28138_binded);;
	if ((_2837_s != nullptr)) {
		return _2837_s;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ad911434_FindFn(_1ad90ed6c_sema* _self_, jule::Str _29622_ident, jule::Bool _29634_binded) {
	jule::Ptr<_1ad7e778d_Fn> _2987_f = _1ad8e028c_findFnInPackage(&((*(_self_))._field_files), &(_29622_ident), _29634_binded);;
	if ((_2987_f != nullptr)) {
		return _2987_f;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad802ea2_Trait> _1ad911775_FindTrait(_1ad90ed6c_sema* _self_, jule::Str _31125_ident) {
	jule::Ptr<_1ad802ea2_Trait> _3137_t = _1ad8e0611_findTraitInPackage(&((*(_self_))._field_files), &(_31125_ident));;
	if ((_3137_t != nullptr)) {
		return _3137_t;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad805658_Enum> _1ad911ab6_FindEnum(_1ad90ed6c_sema* _self_, jule::Str _32624_ident) {
	jule::Ptr<_1ad805658_Enum> _3287_e = _1ad8e0985_findEnumInPackage(&((*(_self_))._field_files), &(_32624_ident));;
	if ((_3287_e != nullptr)) {
		return _3287_e;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad806d63_TypeEnum> _1ad911e07_FindTypeEnum(_1ad90ed6c_sema* _self_, jule::Str _34128_ident) {
	jule::Ptr<_1ad806d63_TypeEnum> _3437_e = _1ad8e0e19_findTypeEnumInPackage(&((*(_self_))._field_files), &(_34128_ident));;
	if ((_3437_e != nullptr)) {
		return _3437_e;;
	};
	return nullptr;;
}



inline jule::Bool _1ad912314_isFlag(_1ad90ed6c_sema* _self_, jule::I64 _35318_flags) {
	return (((*(_self_))._field_flags & _35318_flags) == _35318_flags);;
}



inline jule::Ptr<_1ad7eda91_SymTab> _1ad91259a_getCurrentFile(_1ad90ed6c_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1ad912853_setCurrentFile(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7eda91_SymTab> _35634_f) {
	(*(_self_))._field_file=_35634_f;
}



inline void _1ad912c71_pushErr(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad6ceb70_Token> _35823_token, jule::Str _35845_fmt, jule::Slice<jule::Any> _35865_args) {
	{ jule::Slice<_1dd356476_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ad90cc5a_compilerErr(&(_35823_token), true, _35845_fmt, _35865_args)); };
}



inline void _1ad9130d4_pushSuggestion(_1ad90ed6c_sema* _self_, jule::Str _36330_fmt, jule::Slice<jule::Any> _36350_args) {
	{
		_1ad90dd7c_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _36330_fmt, _36350_args);
	};
}



inline jule::Bool _1ad9134d0_isAccessibleDefine(_1ad90ed6c_sema* _self_, jule::Bool _36930_public, jule::Ptr<_1ad6ceb70_Token> _36944_token) {
	if ((_36930_public || ((*(_36944_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _3743_selfDir = _1ad6d5ec8_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _3753_tokenDir = _1ad6d5ec8_Dir((*_36944_token.alloc)._field_File.ptr());;
	if ((_3743_selfDir == _3753_tokenDir)) {
		return true;;
	};
	if ((_1ad8e6947_isStdPackage(&(_3753_tokenDir), jule::Str::lit("runtime", 7)) && _1ad8e6947_isStdPackage(&(_3743_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1ad913986_isDuplicatedIdent(_1ad90ed6c_sema* _self_, jule::Uintptr _39229_itself, jule::Str* _39247_ident, jule::Bool _39259_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be27b321:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> *_39310_f = it;
			{
				if (_1ad802446_isDuplicatedIdent((*(_39310_f)).ptr(), _39229_itself, _39247_ident, _39259_binded)) {
					return true;;
				};
			}
			_iter_next_1be27b321:;
			++it;
			goto _iter_begin_1be27b321;
		}
		_iter_end_1be27b321:;
	};
	return false;;
}



inline void _1ad913ce9_checkDirectives(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _40137_d, jule::Any _40163_o) {
	_1ad8cc499_directiveChecker _4027_dc = _1ad8cc499_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>>)(_40137_d)), ._field_o=_40163_o};;
	_1ad8cdc1a_check(&_4027_dc);
}



inline jule::Bool _1ad9142a0_checkGenericQuantity(_1ad90ed6c_sema* _self_, jule::I64 _41036_required, jule::I64 _41051_given, jule::Ptr<_1ad6ceb70_Token> _41063_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_41036_required == 0LL) && (_41051_given > 0LL))) {
			_case_begin_1be27e005:;
			{
				_1ad912c71_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_41036_required > 0LL) && (_41051_given == 0LL))) {
			_case_begin_1be27e07c:;
			{
				_1ad912c71_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41036_required < _41051_given)) {
			_case_begin_1be27e104:;
			{
				_1ad912c71_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41036_required > _41051_given)) {
			_case_begin_1be27e17b:;
			{
				_1ad912c71_pushErr(_self_, _41063_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be27de39:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1be27dd5c:;
	};
}



inline jule::Bool _1ad9152d4_isUseAliasDuplication(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _46838_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2845c1:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _46915_imp2 = *it;
			{
				if ((_46915_imp2 == (*(_46838_imp)))) {
					goto _iter_end_1be2845c1;
				};
				if (((*(_46915_imp2))._field_Alias == (*((*(_46838_imp))))._field_Alias)) {
					return true;;
				};
			}
			_iter_next_1be2845c1:;
			++it;
			goto _iter_begin_1be2845c1;
		}
		_iter_end_1be2845c1:;
	};
	return false;;
}



inline jule::Bool _1ad915625_checkAutoAlias(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _48035_imp) {
	if ((*((*(_48035_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
		return true;;
	};
	jule::Bool _4853_valid = _1ad9324dd_isValidImpAlias((*((*(_48035_imp))))._field_Alias);;
	if (_4853_valid) {
		if (_1ad9152d4_isUseAliasDuplication(_self_, _48035_imp)) {
			_1ad912c71_pushErr(_self_, (*((*((*(_48035_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_48035_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48035_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	} else {
		_1ad912c71_pushErr(_self_, (*((*((*(_48035_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("import path is not suitable for auto-aliasing: @", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48035_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*((*(_48035_imp))))._field_Decl))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _4853_valid;;
}



inline jule::Bool _1ad915966_checkImport(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad8e1bea_ImportInfo>* _49832_imp) {
	if ((*((*(_49832_imp))))._field_Binded) {
		return true;;
	};
	if (((*((*((*(_49832_imp))))._field_Decl))._field_Alias != nullptr)) {
		if (_1ad6d2557_IsIgnoreIdent((*((*(_49832_imp))))._field_Alias)) {
			_1ad912c71_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1ad9152d4_isUseAliasDuplication(_self_, _49832_imp)) {
			_1ad912c71_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49832_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
		if ((*((*(_49832_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
			_1ad912c71_pushErr(_self_, (*(*((*(_49832_imp))))._field_Decl.alloc)._field_Alias, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use \"std/unsafe\"", 16), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else if ((!(_1ad915625_checkAutoAlias(_self_, _49832_imp)))) {
		return false;;
	};
	if (((*((*((*(_49832_imp))))._field_Package))._field_Files.len() == 0LL)) {
		return true;;
	};
	if ((!((*((*(_49832_imp))))._field_Duplicate))) {
		jule::Ptr<_1ad90ed6c_sema> _5258_sema = jule::new_ptr<_1ad90ed6c_sema>(_1ad90ed6c_sema{._field_errors=jule::Slice<_1dd356476_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>(nullptr), ._field_file=jule::Ptr<_1ad7eda91_SymTab>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1ad92eba0_check(_5258_sema, &((*(*((*(_49832_imp))))._field_Package.alloc)._field_Files));
		if (((*_5258_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_5258_sema.alloc)._field_errors);;
			(*_5258_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return true;;
}



inline void _1ad915b64_checkImports(_1ad90ed6c_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be292dc6:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _54015_file = *it;
			{
				_1ad912853_setCurrentFile(_self_, _54015_file);
				{
					auto expr = &((*(_54015_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be293c1d:;
					if (it != expr_end) {
						jule::Ptr<_1ad8e1bea_ImportInfo> _54216_imp = *it;
						{
							jule::Bool _5435_ok = _1ad915966_checkImport(_self_, &(_54216_imp));;
							if ((!(_5435_ok))) {
								return;;
							};
						}
						_iter_next_1be293c1d:;
						++it;
						goto _iter_begin_1be293c1d;
					}
					_iter_end_1be293c1d:;
				};
			}
			_iter_next_1be292dc6:;
			++it;
			goto _iter_begin_1be292dc6;
		}
		_iter_end_1be292dc6:;
	};
}



inline void _1ad915d62_implFileImpls(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be29415d:;
		if (it != expr_end) {
			jule::Ptr<_1ad8abc5e_Impl> _55315_imp = *it;
			{
				_1ad925d61_implImpl(_self_, &(_55315_imp));
			}
			_iter_next_1be29415d:;
			++it;
			goto _iter_begin_1be29415d;
		}
		_iter_end_1be29415d:;
	};
}



inline void _1ad916060_implImpls(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be295a88:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _55915_file = *it;
			{
				_1ad912853_setCurrentFile(_self_.ptr(), _55915_file);
				_1ad915d62_implFileImpls(_self_);
			}
			_iter_next_1be295a88:;
			++it;
			goto _iter_begin_1be295a88;
		}
		_iter_end_1be295a88:;
	};
}



inline void _1ad91625d_checkEnums(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be296b44:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _56615_file = *it;
			{
				_1ad912853_setCurrentFile(_self_.ptr(), _56615_file);
				{
					
					if ((!(_1ad92229c_checkEnumDecls(_self_)))) {
						_case_begin_1be297293:;
					}
					else if ((!(_1ad922533_checkTypeEnumDecls(_self_)))) {
						_case_begin_1be29786a:;
					}
					_match_end_1be29778d:;
				};
			}
			_iter_next_1be296b44:;
			++it;
			goto _iter_begin_1be296b44;
		}
		_iter_end_1be296b44:;
	};
}



inline void _1ad91645b_checkFileInherits(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2986e5:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> _57615_t = *it;
			{
				jule::Bool _5774_ok = _1ad923de7__checkTraitDeclInherits(_self_, &(_57615_t));;
				if ((!(_5774_ok))) {
					return;;
				};
			}
			_iter_next_1be2986e5:;
			++it;
			goto _iter_begin_1be2986e5;
		}
		_iter_end_1be2986e5:;
	};
}



inline void _1ad916659_checkInherits(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be298c89:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _58515_file = *it;
			{
				_1ad912853_setCurrentFile(_self_.ptr(), _58515_file);
				_1ad91645b_checkFileInherits(_self_);
			}
			_iter_next_1be298c89:;
			++it;
			goto _iter_begin_1be298c89;
		}
		_iter_end_1be298c89:;
	};
}



inline _1ad9ca993_typeChecker _1ad916b10_typeChecker(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Trait _59132_l, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _59147_generics, jule::Ptr<_1ad9c99a3_referencer> _5927_referencer) {
	_1ad9ca993_typeChecker _5937_tc = _1ad9ca993_typeChecker{._field_s=_self_, ._field_rootLookup=_59132_l, ._field_lookup=_59132_l, ._field_referencer=_5927_referencer, ._field_refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_59147_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ad9b77a4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _59132_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)) {
			_case_begin_1be29b94b:;
			{
				jule::Ptr<_1ad8b860b_scopeChecker> _6028_hard = _1ad8bbc6e_getHardRoot(_59132_l.cast_ptr<_1ad8b860b_scopeChecker>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));;
				_5937_tc._field_refers=(*((*(_6028_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1be29b8d5:;
	};
	if (((_5927_referencer != nullptr) && ((*_5927_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_5927_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1be29d2bb:;
				{
					_5937_tc._field_ownerAlias=(*(_5927_referencer))._field_owner.unsafe_cast_ptr<_1ad9b77a4_TypeAlias>();
				}
			}
			_match_end_1be29d255:;
		};
	};
	return _5937_tc;;
}



inline jule::Ptr<_1ad9b8596_TypeKind> _1ad917171_buildTypeWithRefers(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _61841_t, jule::Trait _61864_l, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _6197_generics, jule::Ptr<_1ad9c99a3_referencer> _61935_referencer) {
	return ({ auto _wrap_copy = _1ad916b10_typeChecker(_self_, _61864_l, _6197_generics, _61935_referencer); _1ad9d357d_checkDecl(&_wrap_copy, _61841_t); });;
}



inline jule::Bool _1ad9176d2_checkTypeWithRefers(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9c0ca7_TypeSymbol>* _62541_t, jule::Trait _62561_l, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _6267_generics, jule::Ptr<_1ad9c99a3_referencer> _62635_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1ad9c115e_checked((*(_62541_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_62541_t))))._field_Kind=_1ad917171_buildTypeWithRefers(_self_, &((*((*(_62541_t))))._field_Decl), _62561_l, _6267_generics, _62635_referencer);
	__jule_func_result = _1ad9c115e_checked((*(_62541_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1ad8a9960_constraintChecker> _1ad917968_constraintChecker(jule::Ptr<_1ad90ed6c_sema> _self_) {
	return jule::new_ptr<_1ad8a9960_constraintChecker>(_1ad8a9960_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_si=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_et=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1ad917d64_checkType(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9c0ca7_TypeSymbol>* _64031_t, jule::Trait _64051_l) {
	return _1ad9176d2_checkTypeWithRefers(_self_, _64031_t, _64051_l, nullptr, nullptr);;
}



inline jule::Ptr<_1ad9b8596_TypeKind> _1ad91831a_checkTypeRefers(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _64537_t, jule::Trait _64560_l, jule::Ptr<_1ad8ced70_ReferenceStack> _64575_refers) {
	jule::Ptr<_1ad9ca993_typeChecker> _6467_tc = jule::new_ptr<_1ad9ca993_typeChecker>(_1ad9ca993_typeChecker{._field_s=_self_, ._field_rootLookup=_64560_l, ._field_lookup=_64560_l, ._field_referencer=jule::Ptr<_1ad9c99a3_referencer>(nullptr), ._field_refers=_64575_refers, ._field_errorToken=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ad9b77a4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ad9d357d_checkDecl(_6467_tc.ptr(), _64537_t);;
}



inline jule::Ptr<_1ad9b8596_TypeKind> _1ad9187c1_buildTypeWithGenerics(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _65743_t, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _6587_generics, jule::Ptr<_1ad8ced70_ReferenceStack> _65835_refers) {
	jule::Ptr<_1ad9ca993_typeChecker> _6597_tc = jule::new_ptr<_1ad9ca993_typeChecker>(_1ad9ca993_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1ad9c99a3_referencer>(nullptr), ._field_refers=_65835_refers, ._field_errorToken=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_6587_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ad9b77a4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ad9d357d_checkDecl(_6597_tc.ptr(), _65743_t);;
}



inline jule::Ptr<_1ad9b8596_TypeKind> _1ad918e53_selectType(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _67532_t) {
	jule::Ptr<_1ad9ca993_typeChecker> _6767_tc = jule::new_ptr<_1ad9ca993_typeChecker>(_1ad9ca993_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1ad9c99a3_referencer>(nullptr), ._field_refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1ad9b77a4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ad9d357d_checkDecl(_6767_tc.ptr(), _67532_t);;
}



inline jule::Ptr<_1ad9878b7_eval> _1ad919409_evalpd(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Trait _68727_l, jule::Ptr<_1ad9b8596_TypeKind> _68742_p, jule::Ptr<_1ad933a83_Var> _68760_owner) {
	jule::Ptr<_1ad9878b7_eval> _6887_e = jule::new_ptr<_1ad9878b7_eval>(_1ad9878b7_eval{._field_s=_self_, ._field_lookup=_68727_l, ._field_prefix=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_unsafety=false, ._field_immutable=false, ._field_ignored=false, ._field_disBuiltin=false, ._field_owner=_68760_owner, ._field_field=jule::Ptr<_1ad717ca7_FieldIns>(nullptr), ._field_arg=false});;
	{
		auto &_match_expr{ _68727_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)) {
			_case_begin_1be2a8b34:;
			{
				(*(_6887_e))._field_unsafety=_1ad8ba9e8_isUnsafe(_68727_l.cast_ptr<_1ad8b860b_scopeChecker>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));
			}
		}
		_match_end_1be2a8abd:;
	};
	(*_6887_e.alloc)._field_prefix=_68742_p;
	return _6887_e;;
}



inline jule::Ptr<_1ad9878b7_eval> _1ad919805_evalp(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Trait _70226_l, jule::Ptr<_1ad9b8596_TypeKind> _70241_p) {
	return _1ad919409_evalpd(_self_, _70226_l, _70241_p, nullptr);;
}



inline jule::Ptr<_1ad9878b7_eval> _1ad919b46_eval(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Trait _70725_l) {
	return _1ad919805_evalp(_self_, _70725_l, nullptr);;
}



inline jule::Bool _1ad91a262_checkAssignType(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Bool _71132_destIsRef, jule::Ptr<_1ad9b8596_TypeKind>* _71154_dest, jule::Ptr<_1ad985b90_Data>* _7128_d, jule::Ptr<_1ad6ceb70_Token> _71222_errorToken, jule::Ptr<_1ad8ced70_ReferenceStack> _71253_refers) {
	if ((*((*(_7128_d))))._field_Decl) {
		_1ad912c71_pushErr(_self_.ptr(), _71222_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_71132_destIsRef) {
		if ((!(_1ad9b8cd3_Equal((*(_71154_dest)), (*((*(_7128_d))))._field_Kind)))) {
			_1ad912c71_pushErr(_self_, _71222_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_71154_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_7128_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1ad974046_assignTypeChecker> _7238_atc = jule::new_ptr<_1ad974046_assignTypeChecker>(_1ad974046_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_71154_dest)), ._field_d=(*(_7128_d)), ._field_errorToken=_71222_errorToken, ._field_refers=_71253_refers});;
		jule::Bool _7304_ok = _1ad975047_check(_7238_atc.ptr());;
		if ((!(_7304_ok))) {
			return false;;
		};
	};
	if (((!(_1ad9865ca_IsConst((*(_7128_d)).ptr()))) || (_1ad9bac4c_Prim((*(_71154_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _7407_kind = (*(_1ad9bac4c_Prim((*(_71154_dest)).ptr())))._field_Kind;;
	{
		
		if (_1ad87b9ed_IsSigInt(_7407_kind)) {
			_case_begin_1be2b1b81:;
			{
				_1ad7d19b9_SetI64((*((*(_7128_d))))._field_Constant.ptr(), _1ad7d11e4_AsI64((*((*(_7128_d))))._field_Constant));
			}
		}
		else if (_1ad87bd0b_IsUnsigInt(_7407_kind)) {
			_case_begin_1be2b1c19:;
			{
				_1ad7d1c72_SetU64((*((*(_7128_d))))._field_Constant.ptr(), _1ad7d147a_AsU64((*((*(_7128_d))))._field_Constant));
			}
		}
		else if (_1ad87c416_IsFloat(_7407_kind)) {
			_case_begin_1be2b1c80:;
			{
				_1ad7d258b_SetF64((*((*(_7128_d))))._field_Constant.ptr(), _1ad7d1711_AsF64((*((*(_7128_d))))._field_Constant));
			}
		}
		_match_end_1be2b1ac6:;
	};
	return true;;
}



inline jule::Bool _1ad91a718__checkTypeCompatibility(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _75445_dest, jule::Ptr<_1ad9b8596_TypeKind>* _75467_src, jule::Ptr<_1ad6ceb70_Token> _7557_errorToken) {
	if (((*(_75467_src)) == nullptr)) {
		return false;;
	};
	if ((_1ad9bca73_Tup((*(_75467_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1ad9721ba_typeCompatibilityChecker _7637_tcc = _1ad9721ba_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_75445_dest)), ._field_src=(*(_75467_src)), ._field_errorToken=_7557_errorToken};;
	return _1ad9738b4_check(&_7637_tcc);;
}



inline jule::Bool _1ad91abbe_checkTypeCompatibility(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _77244_dest, jule::Ptr<_1ad9b8596_TypeKind>* _7738_src, jule::Ptr<_1ad6ceb70_Token>* _77329_errorToken) {
	if (_1ad91a718__checkTypeCompatibility(_self_, _77244_dest, _7738_src, (*(_77329_errorToken)))) {
		return true;;
	};
	_1ad912c71_pushErr(_self_, (*(_77329_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_77244_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_7738_src)).ptr()), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline void _1ad91b0dc_pushCompatiblityError(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _78142_dest, jule::Ptr<_1ad985b90_Data>* _78164_src, jule::Ptr<_1ad6ceb70_Token>* _7828_errorToken) {
	if ((*((*(_78164_src))))._field_untyped) {
		{
			
			if (_1ad7d2a20_IsI64((*((*(_78164_src))))._field_Constant.ptr())) {
				_case_begin_1be2b90a6:;
				{
					_1ad912c71_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1ad7d2ca6_IsU64((*((*(_78164_src))))._field_Constant.ptr())) {
				_case_begin_1be2b9150:;
				{
					_1ad912c71_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1ad7d3559_IsF64((*((*(_78164_src))))._field_Constant.ptr())) {
				_case_begin_1be2b91b6:;
				{
					_1ad912c71_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			_match_end_1be2b8e74:;
		};
	};
	_1ad912c71_pushErr(_self_, (*(_7828_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_78142_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_78164_src))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1ad91b593_checkTypeCompatibility1(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _79945_dest, jule::Ptr<_1ad985b90_Data>* _79967_src, jule::Ptr<_1ad6ceb70_Token>* _8008_errorToken) {
	if (_1ad91a718__checkTypeCompatibility(_self_, _79945_dest, &((*((*(_79967_src))))._field_Kind), (*(_8008_errorToken)))) {
		return true;;
	};
	_1ad91b0dc_pushCompatiblityError(_self_, _79945_dest, _79967_src, _8008_errorToken);
	return false;;
}



inline jule::Ptr<_1ad9b8596_TypeKind> _1ad91ba49_buildNonGenericTypeKind(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _81445_ast, jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>* _8158_generics, jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>* _81544_ignored) {
	jule::Ptr<_1ad9ca993_typeChecker> _8167_tc = jule::new_ptr<_1ad9ca993_typeChecker>(_1ad9ca993_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1ad9c99a3_referencer>(nullptr), ._field_refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_ignoreGenerics=(*(_8158_generics)), ._field_ignoredGenerics=_81544_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ad9b77a4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1ad9d357d_checkDecl(_8167_tc.ptr(), _81445_ast);;
}



inline jule::Bool _1ad91be45_buildFnNonGenericTypeKinds(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns> _82647_f, jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>* _82663_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> _82711_generics = nullptr;;
	if (_1ad7e7eca_IsMethod((*(_82647_f))._field_Decl.ptr())) {
		_82711_generics=jule::append((*(*(_82647_f))._field_Decl.alloc)._field_Generics,(*((*(*(_82647_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_82711_generics=(*((*(_82647_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1ad91d0de_basicFnEnvironment(_self_, &(_82647_f), jule::__new_closure<jule::Bool,jule::Ptr<_1ad90ed6c_sema>*>((void*)__jule_anon_1be2c4710, jule::Ptr<__jule_anon_1be2c4710_ctx>::make(__jule_anon_1be2c4710_ctx{._82647_f=_82647_f,._82711_generics=_82711_generics,._82663_ignored=_82663_ignored}).as<jule::Uintptr>(), __jule_anon_1be2c4710_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1ad7ea84b_FnIns> _1ad91c286_getTraitCheckFnKind(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _84941_f) {
	if (((*((*(_84941_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_84941_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _8537_ins = _1ad7e8c9a_instanceForce((*(_84941_f)));;
	jule::Ptr<_1ad9ca993_typeChecker> _8557_tc = jule::new_ptr<_1ad9ca993_typeChecker>(_1ad9ca993_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1ad9c99a3_referencer>(nullptr), ._field_refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ad9b77a4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_8537_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2cab12:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e96e6_ParamIns> _86015_p = *it;
			{
				if ((!(_1ad7e6418_IsSelf((*(_86015_p))._field_Decl.ptr())))) {
					(*_86015_p.alloc)._field_Kind=_1ad9d357d_checkDecl(_8557_tc.ptr(), &((*((*(*(_86015_p))._field_Decl.alloc)._field_Kind))._field_Decl));
					if (((*_86015_p.alloc)._field_Kind == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1be2cab12:;
			++it;
			goto _iter_begin_1be2cab12;
		}
		_iter_end_1be2cab12:;
	};
	if ((!(_1ad7e7c44_IsVoid((*(_84941_f)).ptr())))) {
		(*_8537_ins.alloc)._field_Result=_1ad9d357d_checkDecl(_8557_tc, &((*((*((*((*(_84941_f))))._field_Result))._field_Kind))._field_Decl));
		if (((*_8537_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _8537_ins;;
}



inline jule::Bool _1ad91c73c_checkConstraintsFn(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _87840_f, jule::Ptr<_1ad6ceb70_Token>* _87856_et, jule::Ptr<_1ad7ea84b_FnIns> _87879_exist) {
	jule::Ptr<_1ad8a9960_constraintChecker> _8797_cc = _1ad917968_constraintChecker(_self_);;
	(*(_8797_cc))._field_et=(*(_87856_et));
	(*_8797_cc.alloc)._field_fi=(*(_87840_f));
	if ((_87879_exist != nullptr)) {
		{
			auto expr = &((*_87879_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be2d0c7c:;
			if (it != expr_end) {
				jule::I64 _8839_i = it - expr->begin();
				jule::Ptr<_1ad9b6de1_InsGeneric> _88316_g = *it;
				{
					(*((*((*(_87840_f))))._field_Generics[_8839_i]))._field_Constraint=(*(_88316_g))._field_Constraint;
				}
				_iter_next_1be2d0c7c:;
				++it;
				_8839_i++;
				goto _iter_begin_1be2d0c7c;
			}
			_iter_end_1be2d0c7c:;
		};
	} else {
		(*_8797_cc.alloc)._field_uniq=true;
	};
	return _1ad8aa8c8_check(_8797_cc);;
}



inline jule::Bool _1ad91cbe3_checkConstraintsStruct(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _89244_s, jule::Ptr<_1ad6ceb70_Token>* _89264_et, jule::Ptr<_1ad718857_StructIns> _89287_exist) {
	jule::Ptr<_1ad8a9960_constraintChecker> _8937_cc = _1ad917968_constraintChecker(_self_);;
	(*(_8937_cc))._field_et=(*(_89264_et));
	(*_8937_cc.alloc)._field_si=(*(_89244_s));
	if ((_89287_exist != nullptr)) {
		{
			auto expr = &((*_89287_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be2d3e4a:;
			if (it != expr_end) {
				jule::I64 _8979_i = it - expr->begin();
				jule::Ptr<_1ad9b6de1_InsGeneric> _89716_g = *it;
				{
					(*((*((*(_89244_s))))._field_Generics[_8979_i]))._field_Constraint=(*(_89716_g))._field_Constraint;
				}
				_iter_next_1be2d3e4a:;
				++it;
				_8979_i++;
				goto _iter_begin_1be2d3e4a;
			}
			_iter_end_1be2d3e4a:;
		};
	} else {
		(*_8937_cc.alloc)._field_uniq=true;
	};
	return _1ad8aa8c8_check(_8937_cc);;
}



inline jule::Bool _1ad91d0de_basicFnEnvironment(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _90940_f, jule::Fn<jule::Bool,jule::Ptr<_1ad90ed6c_sema>*> _90951_algo) {
	jule::Ptr<_1ad90ed6c_sema> _9107_sema = (*((*((*(_90940_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1ad7eda91_SymTab> _9117_old = _1ad91259a_getCurrentFile(_9107_sema.ptr());;
	jule::Ptr<_1ad7eda91_SymTab> _9127_file = _1ad90d9d6_findFile(&((*_9107_sema.alloc)._field_files), &((*((*(*((*(_90940_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_9127_file != nullptr)) {
		_1ad912853_setCurrentFile(_9107_sema, _9127_file);
	};
	jule::Bool _9173_ok = _90951_algo(&(_9107_sema));;
	if ((_9107_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*_9107_sema.alloc)._field_errors);
		(*_9107_sema.alloc)._field_errors=nullptr;
	};
	_1ad912853_setCurrentFile(_9107_sema, _9117_old);
	return _9173_ok;;
}



inline jule::Bool _1ad91d4da_fnEnvironment(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _92935_f, jule::Fn<jule::Bool,jule::Ptr<_1ad90ed6c_sema>*,jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>*> _92946_algo) {
	jule::I64 _9307_size = (*((*(_92935_f))))._field_Generics.len();;
	if ((((*((*(_92935_f))))._field_Decl != nullptr) && ((*(*((*(_92935_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_9307_size+=(*(*((*((*(_92935_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _9347_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>::alloc(0LL, _9307_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad9b77a4_TypeAlias>(nullptr); __jule_collection; });;
	_1ad90d662_appendGenericTypeAliases(&(_9347_generics), _92935_f);
	return _1ad91d0de_basicFnEnvironment(_self_, _92935_f, jule::__new_closure<jule::Bool,jule::Ptr<_1ad90ed6c_sema>*>((void*)__jule_anon_1be2dc6d4, jule::Ptr<__jule_anon_1be2dc6d4_ctx>::make(__jule_anon_1be2dc6d4_ctx{._92946_algo=_92946_algo,._9347_generics=_9347_generics}).as<jule::Uintptr>(), __jule_anon_1be2dc6d4_ctx_handler));;
}



inline void _1ad91d793_checkFnParamKind(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e96e6_ParamIns>* _94138_p) {
	(*((*((*(_94138_p))))._field_Kind))._field_Variadic=(*((*((*(_94138_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_94138_p))))._field_Decl.alloc)._field_Reference && (!(_1ad9d54a3_isValidForRef(&((*((*(_94138_p))))._field_Kind)))))) {
		_1ad912c71_pushErr(_self_.ptr(), (*(*((*(_94138_p))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_94138_p))))._field_Kind), &__jule_any_type5); __jule_collection; }));
	};
}



inline jule::Bool _1ad91dad4_reloadFnInsTypes(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns> _94837_f) {
	if ((_1ad7ebd14_IsBuiltin(_94837_f.ptr()) || _1ad7ec09a_IsAnon(_94837_f))) {
		return true;;
	};
	return _1ad91d4da_fnEnvironment(_self_, &(_94837_f), jule::__new_closure<jule::Bool,jule::Ptr<_1ad90ed6c_sema>*,jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>*>((void*)__jule_anon_1be2e1ebe, jule::Ptr<__jule_anon_1be2e1ebe_ctx>::make(__jule_anon_1be2e1ebe_ctx{._94837_f=_94837_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1be2e1ebe_ctx_handler));;
}



inline jule::Bool _1ad91e08a_checkRefValidityForInitExpr(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Bool _98844_leftMut, jule::Ptr<_1ad985b90_Data>* _98864_d, jule::Ptr<_1ad6ceb70_Token>* _98879_errorToken) {
	if ((!(_1ad90c72c_isValidModelForRef(&((*((*(_98864_d))))._field_Model))))) {
		_1ad912c71_pushErr(_self_.ptr(), (*(_98879_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_98844_leftMut && (!((*((*(_98864_d))))._field_Mutable)))) {
		_1ad912c71_pushErr(_self_, (*(_98879_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1ad91e3cb_isMutRiskyStruct(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad718857_StructIns>* _100529_s) {
	{
		auto expr = &((*((*(_100529_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2ec0a6:;
		if (it != expr_end) {
			jule::Ptr<_1ad717ca7_FieldIns> *_100610_f = it;
			{
				if ((((*((*((*(_100610_f))))._field_Decl))._field_Mutable && _1ad9b9e7c_Mutable((*(*(_100610_f)).alloc)._field_Kind.ptr())) && _1ad9134d0_isAccessibleDefine(_self_, (*(*((*(_100610_f))))._field_Decl.alloc)._field_Public, (*(*((*(_100610_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1be2ec0a6:;
			++it;
			goto _iter_begin_1be2ec0a6;
		}
		_iter_end_1be2ec0a6:;
	};
	return false;;
}



inline jule::Bool _1ad91e9e7_checkValidityForInitExpr(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Bool _103241_leftMut, jule::Bool _103256_leftRef, jule::Ptr<_1ad9b8596_TypeKind>* _10334_leftKind, jule::Ptr<_1ad985b90_Data>* _103330_d, jule::Ptr<_1ad6ceb70_Token>* _103345_errorToken) {
	if ((_103241_leftMut && (!((*((*(_103330_d))))._field_Mutable)))) {
		if ((_1ad9b9e7c_Mutable((*((*(_103330_d))))._field_Kind.ptr()) || (*(*((*(_103330_d))))._field_Kind.alloc)._field_Variadic)) {
			_1ad912c71_pushErr(_self_.ptr(), (*(_103345_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_103330_d))))._field_Kind), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1ad718857_StructIns> _10414_s = _1ad9bc2c0_Struct((*((*(_103330_d))))._field_Kind);;
		if (((_10414_s != nullptr) && _1ad91e3cb_isMutRiskyStruct(_self_, &(_10414_s)))) {
			_1ad912c71_pushErr(_self_, (*(_103345_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_103330_d))))._field_Kind), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	};
	if (_103256_leftRef) {
		if ((!(_1ad91e08a_checkRefValidityForInitExpr(_self_, _103241_leftMut, _103330_d, _103345_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1ad974046_assignTypeChecker> _10527_atc = jule::new_ptr<_1ad974046_assignTypeChecker>(_1ad974046_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_d=(*(_103330_d)), ._field_errorToken=(*(_103345_errorToken)), ._field_refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr)});;
	return _1ad974794_checkValidity(_10527_atc.ptr());;
}



inline jule::Bool _1ad91ede3_checkTypeAliasDeclKind(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b77a4_TypeAlias>* _106044_ta, jule::Trait _106064_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad7eda91_SymTab> _10617_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ad912853_setCurrentFile(_self_, _10617_old);
	});;
	if (((*((*(_106044_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1ad7eda91_SymTab> _10668_file = _1ad90d9d6_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_106044_ta))))._field_Token.alloc)._field_File));;
		if ((_10668_file != nullptr)) {
			_1ad912853_setCurrentFile(_self_, _10668_file);
		};
	};
	__jule_func_result=_1ad9176d2_checkTypeWithRefers(_self_, &((*((*(_106044_ta))))._field_Kind), _106064_l, nullptr, jule::new_ptr<_1ad9c99a3_referencer>(_1ad9c99a3_referencer{._field_ident=(*((*(_106044_ta))))._field_Ident, ._field_owner=jule::Any((*(_106044_ta)), &__jule_any_type8), ._field_refs=(&((*((*(_106044_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1ad9bba1c_Arr((*((*((*(_106044_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1ad9bba1c_Arr((*((*((*(_106044_ta))))._field_Kind))._field_Kind)))._field_Auto)) {
		_1ad912c71_pushErr(_self_, (*((*(*((*(_106044_ta))))._field_Kind.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1ad920256_checkTypeAliasDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b77a4_TypeAlias>* _108340_ta, jule::Trait _108360_l) {
	if (_1ad6d2557_IsIgnoreIdent((*((*(_108340_ta))))._field_Ident)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_108340_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_1ad91ede3_checkTypeAliasDeclKind(_self_, _108340_ta, _108360_l);
}



inline void _1ad92050e_checkTypeAliasDeclDup(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9b77a4_TypeAlias>* _109143_ta) {
	if (_1ad6d2557_IsIgnoreIdent((*((*(_109143_ta))))._field_Ident)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_109143_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1ad913986_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_109143_ta))), &((*((*(_109143_ta))))._field_Ident), (*((*(_109143_ta))))._field_Binded)) {
		_1ad912c71_pushErr(_self_, (*((*(_109143_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_109143_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1ad91ede3_checkTypeAliasDeclKind(_self_, _109143_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));
}



inline jule::Bool _1ad920795_checkTypeAliasDecls(jule::Ptr<_1ad90ed6c_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be310a37:;
		if (it != expr_end) {
			jule::Ptr<_1ad9b77a4_TypeAlias> _110415_ta = *it;
			{
				_1ad92050e_checkTypeAliasDeclDup(_self_, &(_110415_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be310a37:;
			++it;
			goto _iter_begin_1be310a37;
		}
		_iter_end_1be310a37:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1be33e912_checkEnumItemsDup(_1ad90ed6c_sema* _self_, jule::Slice<jule::Ptr<_1ad804b0d_EnumItem>> _111536_items) {
	{
		auto expr = &(_111536_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be340d20:;
		if (it != expr_end) {
			jule::Ptr<_1ad804b0d_EnumItem> *_111610_item = it;
			{
				if (((*((*(_111610_item))))._field_Ident).empty()) {
					goto _iter_next_1be340d20;
				} else if (_1ad6d2557_IsIgnoreIdent((*((*(_111610_item))))._field_Ident)) {
					_1ad912c71_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111536_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be346d9d:;
						if (it != expr_end) {
							jule::Ptr<_1ad804b0d_EnumItem> *_112212_citem = it;
							{
								if (((*(_111610_item)) == (*(_112212_citem)))) {
									goto _iter_end_1be346d9d;
								} else if (((*((*(_111610_item))))._field_Ident == (*((*(_112212_citem))))._field_Ident)) {
									_1ad912c71_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111610_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1be346d9d;
								};
							}
							_iter_next_1be346d9d:;
							++it;
							goto _iter_begin_1be346d9d;
						}
						_iter_end_1be346d9d:;
					};
				};
			}
			_iter_next_1be340d20:;
			++it;
			goto _iter_begin_1be340d20;
		}
		_iter_end_1be340d20:;
	};
}

inline void _1be3527b0_checkEnumItemsDup(_1ad90ed6c_sema* _self_, jule::Slice<jule::Ptr<_1ad80678b_TypeEnumItem>> _111536_items) {
	{
		auto expr = &(_111536_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be353b79:;
		if (it != expr_end) {
			jule::Ptr<_1ad80678b_TypeEnumItem> *_111610_item = it;
			{
				if (((*((*(_111610_item))))._field_Ident).empty()) {
					goto _iter_next_1be353b79;
				} else if (_1ad6d2557_IsIgnoreIdent((*((*(_111610_item))))._field_Ident)) {
					_1ad912c71_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111536_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be354d9a:;
						if (it != expr_end) {
							jule::Ptr<_1ad80678b_TypeEnumItem> *_112212_citem = it;
							{
								if (((*(_111610_item)) == (*(_112212_citem)))) {
									goto _iter_end_1be354d9a;
								} else if (((*((*(_111610_item))))._field_Ident == (*((*(_112212_citem))))._field_Ident)) {
									_1ad912c71_pushErr(_self_, (*(*(_111610_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111610_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1be354d9a;
								};
							}
							_iter_next_1be354d9a:;
							++it;
							goto _iter_begin_1be354d9a;
						}
						_iter_end_1be354d9a:;
					};
				};
			}
			_iter_next_1be353b79:;
			++it;
			goto _iter_begin_1be353b79;
		}
		_iter_end_1be353b79:;
	};
}



inline void _1ad920d06_checkEnumItemsStr(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad805658_Enum>* _113539_e) {
	jule::Ptr<_1ad9878b7_eval> _11367_eval = _1ad919b46_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));;
	{
		auto expr = &((*((*(_113539_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3127c5:;
		if (it != expr_end) {
			jule::Ptr<_1ad804b0d_EnumItem> _113715_item = *it;
			{
				if (_1ad804ec6_AutoExpr(_113715_item.ptr())) {
					(*_113715_item.alloc)._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ad7ce7db_NewStr((*_113715_item.alloc)._field_Ident)})});
					(*((*((*_113715_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_113715_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
				} else {
					jule::Ptr<_1ad985b90_Data> _11469_d = _1ad9a672c_evalExpr(_11367_eval, (*((*(_113715_item))._field_Value))._field_Expr);;
					if ((_11469_d == nullptr)) {
						goto _iter_next_1be3127c5;
					};
					if ((!(_1ad9865ca_IsConst(_11469_d.ptr())))) {
						_1ad912c71_pushErr(_self_, (*((*(*(_113715_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1ad8ced70_ReferenceStack> _11559_refers = static_cast<jule::Ptr<_1ad8ced70_ReferenceStack>>(nullptr);;
					_1ad91a262_checkAssignType(_self_, false, &((*((*((*(_113539_e))))._field_Kind))._field_Kind), &(_11469_d), (*_113715_item.alloc)._field_Token, _11559_refers);
					(*(*(_113715_item))._field_Value.alloc)._field_Data=_11469_d;
				};
			}
			_iter_next_1be3127c5:;
			++it;
			goto _iter_begin_1be3127c5;
		}
		_iter_end_1be3127c5:;
	};
}



inline void _1be31d8e1_checkEnumItemInt(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9878b7_eval>* _116243_eval, jule::Ptr<_1ad805658_Enum>* _116261_e, jule::Ptr<_1ad9c16ae_Prim>* _116272_prim, jule::Ptr<_1ad804b0d_EnumItem>* _116290_item, jule::U64* _1162112_n) {
	if (_1ad804ec6_AutoExpr((*(_116290_item)).ptr())) {
		(*((*(_116290_item))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		{
			
{
				_case_begin_1be320ccd:;
				{
					(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Constant=static__1ad7ce258_NewU64((*(_1162112_n)));
				}
			}
			_match_end_1be321691:;
		};
		(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116290_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1ad985b90_Data> _11778_d = _1ad9a672c_evalExpr((*(_116243_eval)), (*((*((*(_116290_item))))._field_Value))._field_Expr);;
		if ((_11778_d == nullptr)) {
			return;;
		};
		if ((!(_1ad9865ca_IsConst(_11778_d.ptr())))) {
			_1ad912c71_pushErr(_self_.ptr(), (*((*(*((*(_116290_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ad8ced70_ReferenceStack> _11848_refers = static_cast<jule::Ptr<_1ad8ced70_ReferenceStack>>(nullptr);;
		_1ad91a262_checkAssignType(_self_, false, &((*((*((*(_116261_e))))._field_Kind))._field_Kind), &(_11778_d), (*((*(_116290_item))))._field_Token, _11848_refers);
		(*(*((*(_116290_item))))._field_Value.alloc)._field_Data=_11778_d;
		{
			
{
				_case_begin_1be32583d:;
				{
					(*(_1162112_n))=_1ad7d06aa_ReadU64((*((*(*((*(_116290_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1be326b6e:;
		};
	};
}

inline void _1be32e44b_checkEnumItemInt(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9878b7_eval>* _116243_eval, jule::Ptr<_1ad805658_Enum>* _116261_e, jule::Ptr<_1ad9c16ae_Prim>* _116272_prim, jule::Ptr<_1ad804b0d_EnumItem>* _116290_item, jule::I64* _1162112_n) {
	if (_1ad804ec6_AutoExpr((*(_116290_item)).ptr())) {
		(*((*(_116290_item))))._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})});
		{
			
{
				_case_begin_1be33221d:;
				{
					(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Constant=static__1ad7ce07c_NewI64((*(_1162112_n)));
				}
			}
			_match_end_1be3321a7:;
		};
		(*((*((*((*(_116290_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116290_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1ad985b90_Data> _11778_d = _1ad9a672c_evalExpr((*(_116243_eval)), (*((*((*(_116290_item))))._field_Value))._field_Expr);;
		if ((_11778_d == nullptr)) {
			return;;
		};
		if ((!(_1ad9865ca_IsConst(_11778_d.ptr())))) {
			_1ad912c71_pushErr(_self_.ptr(), (*((*(*((*(_116290_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ad8ced70_ReferenceStack> _11848_refers = static_cast<jule::Ptr<_1ad8ced70_ReferenceStack>>(nullptr);;
		_1ad91a262_checkAssignType(_self_, false, &((*((*((*(_116261_e))))._field_Kind))._field_Kind), &(_11778_d), (*((*(_116290_item))))._field_Token, _11848_refers);
		(*(*((*(_116290_item))))._field_Value.alloc)._field_Data=_11778_d;
		{
			
{
				_case_begin_1be337894:;
				{
					(*(_1162112_n))=_1ad7d0424_ReadI64((*((*(*((*(_116290_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1be33781c:;
		};
	};
}



inline void _1be319a74_checkEnumItemsInt1(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9c16ae_Prim>* _119841_prim, jule::Ptr<_1ad805658_Enum>* _119859_e) {
	jule::U64 _11997_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1be31b757:;
			{
				_11997_max=_1ad87a304_MaxU(_1ad9c1a33_Str((*(_119841_prim)).ptr()));
			}
		}
		_match_end_1be31b8bc:;
	};
	jule::Ptr<_1ad9878b7_eval> _12097_eval = _1ad919b46_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));;
	jule::U64 _12107_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1ad804b0d_EnumItem> _12117_first = (*((*(_119859_e))))._field_Items[0LL];;
	_1be31d8e1_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_12117_first), &(_12107_n));
	if (((*((*(_12117_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1be31b081:;
				{
					_12107_n=_1ad7d147a_AsU64((*(*((*(_12117_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1be327444:;
		};
	};
	{
		auto expr = (*((*(_119859_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1be3233c9:;
		if (it != expr_end) {
			jule::Ptr<_1ad804b0d_EnumItem> _122315_item = *it;
			{
				if (((_1ad804ec6_AutoExpr(_122315_item.ptr()) && (_12107_n > 0LLU)) && ((jule::U64)(_11997_max - _12107_n) <= 0LLU))) {
					_1ad912c71_pushErr(_self_, (*_122315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1be3233c9;
				};
				(_12107_n)++;
				_1be31d8e1_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_122315_item), &(_12107_n));
			}
			_iter_next_1be3233c9:;
			++it;
			goto _iter_begin_1be3233c9;
		}
		_iter_end_1be3233c9:;
	};
}

inline void _1be319d60_checkEnumItemsInt1(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad9c16ae_Prim>* _119841_prim, jule::Ptr<_1ad805658_Enum>* _119859_e) {
	jule::I64 _11997_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1be32c306:;
			{
				_11997_max=_1ad87a03a_MaxI(_1ad9c1a33_Str((*(_119841_prim)).ptr()));
			}
		}
		_match_end_1be32c290:;
	};
	jule::Ptr<_1ad9878b7_eval> _12097_eval = _1ad919b46_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));;
	jule::I64 _12107_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1ad804b0d_EnumItem> _12117_first = (*((*(_119859_e))))._field_Items[0LL];;
	_1be32e44b_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_12117_first), &(_12107_n));
	if (((*((*(_12117_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1be32ed0e:;
				{
					_12107_n=_1ad7d11e4_AsI64((*(*((*(_12117_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1be334d47:;
		};
	};
	{
		auto expr = (*((*(_119859_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1be339588:;
		if (it != expr_end) {
			jule::Ptr<_1ad804b0d_EnumItem> _122315_item = *it;
			{
				if (((_1ad804ec6_AutoExpr(_122315_item.ptr()) && (_12107_n > 0LL)) && ((_11997_max - _12107_n) <= 0LL))) {
					_1ad912c71_pushErr(_self_, (*_122315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1be339588;
				};
				(_12107_n)++;
				_1be32e44b_checkEnumItemInt(_self_, &(_12097_eval), _119859_e, _119841_prim, &(_122315_item), &(_12107_n));
			}
			_iter_next_1be339588:;
			++it;
			goto _iter_begin_1be339588;
		}
		_iter_end_1be339588:;
	};
}



inline void _1ad9219a5_checkEnumItemsInt(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad805658_Enum>* _123339_e) {
	jule::Ptr<_1ad9c16ae_Prim> _12343_prim = _1ad9bac4c_Prim((*((*((*(_123339_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1ad87b9ed_IsSigInt((*(_12343_prim))._field_Kind)) {
			_case_begin_1be329248:;
			{
				_1be319d60_checkEnumItemsInt1(_self_, &(_12343_prim), _123339_e);
			}
		}
		else {
			_case_begin_1be3192c1:;
			{
				_1be319a74_checkEnumItemsInt1(_self_, &(_12343_prim), _123339_e);
			}
		}
		_match_end_1be319249:;
	};
}



inline void _1ad921c5d_checkEnumDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad805658_Enum>* _124335_e) {
	if (_1ad6d2557_IsIgnoreIdent((*((*(_124335_e))))._field_Ident)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ad913986_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_124335_e))), &((*((*(_124335_e))))._field_Ident), false)) {
		_1ad912c71_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124335_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_124335_e))))._field_Items.len() == 0LL)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124335_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1be33e912_checkEnumItemsDup(_self_, (*((*(_124335_e))))._field_Items);
	if (((*((*(_124335_e))))._field_Kind != nullptr)) {
		if ((!(_1ad917d64_checkType(_self_, &((*((*(_124335_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4))))) {
			return;;
		};
	} else {
		(*((*(_124335_e))))._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	jule::Ptr<_1ad9c16ae_Prim> _12677_t = _1ad9bac4c_Prim((*((*((*(_124335_e))))._field_Kind))._field_Kind.ptr());;
	if ((_12677_t == nullptr)) {
		_1ad912c71_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1ad9c4b79_IsStr(_12677_t.ptr())) {
			_case_begin_1be34be6e:;
			{
				_1ad920d06_checkEnumItemsStr(_self_, _124335_e);
			}
		}
		else if (_1ad87c0c5_IsInt(_1ad9c1a33_Str(_12677_t.ptr()))) {
			_case_begin_1be34bb50:;
			{
				_1ad9219a5_checkEnumItemsInt(_self_, _124335_e);
			}
		}
		else {
			_case_begin_1be34bad9:;
			{
				_1ad912c71_pushErr(_self_, (*((*(_124335_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be34b0b1:;
	};
}



inline void _1ad922016_checkTypeEnumDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad806d63_TypeEnum>* _128439_e) {
	if (_1ad6d2557_IsIgnoreIdent((*((*(_128439_e))))._field_Ident)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ad913986_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_128439_e))), &((*((*(_128439_e))))._field_Ident), false)) {
		_1ad912c71_pushErr(_self_, (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128439_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_128439_e))))._field_Items.len() == 0LL)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_128439_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128439_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1be3527b0_checkEnumItemsDup(_self_, (*((*(_128439_e))))._field_Items);
	{
		auto expr = &((*((*(_128439_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be35320b:;
		if (it != expr_end) {
			jule::Ptr<_1ad80678b_TypeEnumItem> _129815_item = *it;
			{
				if (((*(_129815_item))._field_Kind == nullptr)) {
					_1ad912c71_pushErr(_self_, (*_129815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1be35320b;
				};
				jule::Bool _13034_ok = _1ad917d64_checkType(_self_, &((*_129815_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));;
				if ((!(_13034_ok))) {
					goto _iter_next_1be35320b;
				};
				jule::Ptr<_1ad9c16ae_Prim> _13074_p = _1ad9bac4c_Prim((*((*_129815_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_13074_p != nullptr) && _1ad9c4e10_IsAny(_13074_p))) {
					_1ad912c71_pushErr(_self_, (*_129815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1be35320b:;
			++it;
			goto _iter_begin_1be35320b;
		}
		_iter_end_1be35320b:;
	};
	if (((*((*(_128439_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1ad80678b_TypeEnumItem> _13138_item = (*((*(_128439_e))))._field_Items[0LL];;
		_1ad9b8596_TypeKind _13144_tk = _1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_128439_e)), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data4)};;
		if ((((*((*(_13138_item))._field_Kind))._field_Kind != nullptr) && _1ad9b8cd3_Equal((*((*(_13138_item))._field_Kind))._field_Kind, ((jule::Ptr<_1ad9b8596_TypeKind>)((&(_13144_tk))))))) {
			_1ad912c71_pushErr(_self_, (*_13138_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad8071d7_Str((*(_128439_e)).ptr()), &__jule_any_type5); __jule_collection; }));
		};
	};
}



inline jule::Bool _1ad92229c_checkEnumDecls(jule::Ptr<_1ad90ed6c_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be35e228:;
		if (it != expr_end) {
			jule::Ptr<_1ad805658_Enum> _132515_e = *it;
			{
				_1ad921c5d_checkEnumDecl(_self_, &(_132515_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be35e228:;
			++it;
			goto _iter_begin_1be35e228;
		}
		_iter_end_1be35e228:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ad922533_checkTypeEnumDecls(jule::Ptr<_1ad90ed6c_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be360900:;
		if (it != expr_end) {
			jule::Ptr<_1ad806d63_TypeEnum> _133715_e = *it;
			{
				_1ad922016_checkTypeEnumDecl(_self_, &(_133715_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be360900:;
			++it;
			goto _iter_begin_1be360900;
		}
		_iter_end_1be360900:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ad922874_checkDeclGenerics(_1ad90ed6c_sema* _self_, jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>* _134734_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _134734_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be360ea5:;
		if (it != expr_end) {
			jule::I64 _13497_i = it - expr->begin();
			jule::Ptr<_1ad7023bd_GenericDecl> *_134910_g = it;
			{
				if (_1ad6d2557_IsIgnoreIdent((*((*(_134910_g))))._field_Ident)) {
					_1ad912c71_pushErr(_self_, (*(*(_134910_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1be360ea5;
				};
				_julec_label_1be362e1e:;
				{
					auto expr = _134734_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be363914:;
					if (it != expr_end) {
						jule::I64 _13588_j = it - expr->begin();
						jule::Ptr<_1ad7023bd_GenericDecl> *_135811_ct = it;
						{
							{
								
								if ((_13588_j >= _13497_i)) {
									_case_begin_1be3644d6:;
									{
										goto _iter_end_1be363914;
									}
								}
								else if (((*(*(_134910_g)).alloc)._field_Ident == (*((*(_135811_ct))))._field_Ident)) {
									_case_begin_1be36456e:;
									{
										_1ad912c71_pushErr(_self_, (*(*(_134910_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_134910_g)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1be363914;
									}
								}
								_match_end_1be3643d7:;
							};
						}
						_iter_next_1be363914:;
						++it;
						_13588_j++;
						goto _iter_begin_1be363914;
					}
					_iter_end_1be363914:;
				};
			}
			_iter_next_1be360ea5:;
			++it;
			_13497_i++;
			goto _iter_begin_1be360ea5;
		}
		_iter_end_1be360ea5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ad922bb5_checkFnDeclParamsDup(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7e778d_Fn>* _137437_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1be3642e9:;
	{
		auto expr = &((*((*(_137437_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3652d9:;
		if (it != expr_end) {
			jule::I64 _13777_i = it - expr->begin();
			jule::Ptr<_1ad7e5cb9_Param> *_137710_p = it;
			{
				{
					auto expr = &((*((*(_137437_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be367286:;
					if (it != expr_end) {
						jule::Ptr<_1ad7023bd_GenericDecl> *_137911_g = it;
						{
							if (((*((*(_137710_p))))._field_Ident == (*((*(_137911_g))))._field_Ident)) {
								__jule_func_result=false;
								_1ad912c71_pushErr(_self_, (*(*(_137710_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137710_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1be3652d9;
							};
						}
						_iter_next_1be367286:;
						++it;
						goto _iter_begin_1be367286;
					}
					_iter_end_1be367286:;
				};
				_julec_label_1be369299:;
				{
					auto expr = &((*((*(_137437_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be36775e:;
					if (it != expr_end) {
						jule::I64 _13898_j = it - expr->begin();
						jule::Ptr<_1ad7e5cb9_Param> *_138911_jp = it;
						{
							{
								
								if ((_13898_j >= _13777_i)) {
									_case_begin_1be369d5a:;
									{
										goto _iter_end_1be36775e;
									}
								}
								else if (_1ad6d2557_IsIgnoreIdent((*(*(_137710_p)).alloc)._field_Ident) || _1ad6d2557_IsIgnoreIdent((*((*(_138911_jp))))._field_Ident) || _1ad6d2821_IsAnonIdent((*(*(_137710_p)).alloc)._field_Ident) || _1ad6d2821_IsAnonIdent((*(*(_138911_jp)).alloc)._field_Ident)) {
									_case_begin_1be369de3:;
									{
										goto _iter_end_1be36775e;
									}
								}
								else if (((*(*(_137710_p)).alloc)._field_Ident == (*((*(_138911_jp))))._field_Ident)) {
									_case_begin_1be369e59:;
									{
										__jule_func_result=false;
										_1ad912c71_pushErr(_self_, (*(*(_137710_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137710_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1be3652d9;
									}
								}
								_match_end_1be369c17:;
							};
						}
						_iter_next_1be36775e:;
						++it;
						_13898_j++;
						goto _iter_begin_1be36775e;
					}
					_iter_end_1be36775e:;
				};
			}
			_iter_next_1be3652d9:;
			++it;
			_13777_i++;
			goto _iter_begin_1be3652d9;
		}
		_iter_end_1be3652d9:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ad923006_checkFnDeclResultDup(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7e778d_Fn>* _141137_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1ad7e7c44_IsVoid((*(_141137_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_141137_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be36d3d0:;
		if (it != expr_end) {
			jule::I64 _14187_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> *_141810_v = it;
			{
				if ((_1ad6d2557_IsIgnoreIdent((*((*(_141810_v))))._field_Kind) || _1ad6d2821_IsAnonIdent((*(*(_141810_v)).alloc)._field_Kind))) {
					goto _iter_next_1be36d3d0;
				};
				{
					auto expr = &((*((*(_141137_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be36e9b9:;
					if (it != expr_end) {
						jule::Ptr<_1ad7023bd_GenericDecl> *_142311_g = it;
						{
							if (((*(*(_141810_v)).alloc)._field_Kind == (*((*(_142311_g))))._field_Ident)) {
								goto _julec_label_1be37105e;
							};
						}
						_iter_next_1be36e9b9:;
						++it;
						goto _iter_begin_1be36e9b9;
					}
					_iter_end_1be36e9b9:;
				};
				{
					auto expr = &((*((*(_141137_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be36edb5:;
					if (it != expr_end) {
						jule::Ptr<_1ad7e5cb9_Param> *_142911_p = it;
						{
							if (((*(*(_141810_v)).alloc)._field_Kind == (*((*(_142911_p))))._field_Ident)) {
								goto _julec_label_1be37105e;
							};
						}
						_iter_next_1be36edb5:;
						++it;
						goto _iter_begin_1be36edb5;
					}
					_iter_end_1be36edb5:;
				};
				_julec_label_1be371537:;
				{
					auto expr = &((*((*((*(_141137_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be371933:;
					if (it != expr_end) {
						jule::I64 _14378_j = it - expr->begin();
						jule::Ptr<_1ad6ceb70_Token> *_143711_jv = it;
						{
							{
								
								if ((_14378_j >= _14187_i)) {
									_case_begin_1be3724c2:;
									{
										goto _iter_end_1be371933;
									}
								}
								else if (((*((*(_143711_jv))))._field_Kind == (*(*(_141810_v)).alloc)._field_Kind)) {
									_case_begin_1be37255a:;
									{
										goto _julec_label_1be37105e;
									}
								}
								_match_end_1be3723b2:;
							};
						}
						_iter_next_1be371933:;
						++it;
						_14378_j++;
						goto _iter_begin_1be371933;
					}
					_iter_end_1be371933:;
				};
				goto _iter_next_1be36d3d0;
				_julec_label_1be37105e:;
				_1ad912c71_pushErr(_self_, (*(_141810_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_141810_v)).alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1be36d3d0:;
			++it;
			_14187_i++;
			goto _iter_begin_1be36d3d0;
		}
		_iter_end_1be36d3d0:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ad923347_checkFnVariadicParam(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _145642_f) {
	if (((*((*(_145642_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1ad7e5cb9_Param> _14607_param = (*((*(_145642_f))))._field_Params[((*((*(_145642_f))))._field_Params.len() - 1LL)];;
	if (((*(_14607_param))._field_Variadic && (*_14607_param.alloc)._field_Reference)) {
		_1ad912c71_pushErr(_self_.ptr(), (*_14607_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1ad923600_checkFnDeclPrototype(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _146942_f) {
	if (((*((*(_146942_f))))._field_Exceptional && (*((*(_146942_f))))._field_Binded)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_146942_f))))._field_Exceptional) {
		if (_1ad7e8261_IsEntryPoint((*(_146942_f)).ptr())) {
			_1ad912c71_pushErr(_self_, (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1ad7e84e7_IsInit((*(_146942_f)).ptr())) {
			_1ad912c71_pushErr(_self_, (*((*(_146942_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1ad922874_checkDeclGenerics(_self_, &((*((*(_146942_f))))._field_Generics))))) {
			_case_begin_1be37930e:;
		}
		else if ((!(_1ad922bb5_checkFnDeclParamsDup(_self_, _146942_f)))) {
			_case_begin_1be379375:;
		}
		else if ((!(_1ad923006_checkFnDeclResultDup(_self_, _146942_f)))) {
			_case_begin_1be3793db:;
		}
		else if ((!(_1ad923347_checkFnVariadicParam(_self_, _146942_f)))) {
			_case_begin_1be379452:;
		}
		_match_end_1be3775a4:;
	};
}



inline jule::Bool _1ad923aa6_catchTraitInheritCycle(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad802ea2_Trait> _149139_t1, jule::Ptr<_1ad802ea2_Trait> _149155_t2, _1dd0b6912_Builder* _149172_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_149155_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be37b9e8:;
		if (it != expr_end) {
			jule::Ptr<_1ad9c0ca7_TypeSymbol> _149315_i = *it;
			{
				if (((*(_149315_i))._field_Kind == nullptr)) {
					goto _iter_next_1be37b9e8;
				};
				jule::Ptr<_1ad802ea2_Trait> _14978_t3 = _1ad9bc556_Trait((*_149315_i.alloc)._field_Kind.ptr());;
				if ((_149139_t1 == _14978_t3)) {
					_1ad928836_pushCycleError(_self_.ptr(), &((*(_149155_t2))._field_Ident), &((*(_14978_t3))._field_Ident), _149172_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1ad923aa6_catchTraitInheritCycle(_self_, _149139_t1, _14978_t3, _149172_message)))) {
					_1ad928836_pushCycleError(_self_, &((*_149155_t2.alloc)._field_Ident), &((*_14978_t3.alloc)._field_Ident), _149172_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be37b9e8:;
			++it;
			goto _iter_begin_1be37b9e8;
		}
		_iter_end_1be37b9e8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ad923de7__checkTraitDeclInherits(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad802ea2_Trait>* _151045_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_151045_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3802b0:;
		if (it != expr_end) {
			jule::I64 _15128_i = it - expr->begin();
			jule::Ptr<_1ad9c0ca7_TypeSymbol> _151215_it = *it;
			{
				if ((!(_1ad917d64_checkType(_self_, &(_151215_it), jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4))))) {
					__jule_func_result=false;
					goto _iter_next_1be3802b0;
				};
				jule::Ptr<_1ad802ea2_Trait> _15178_t2 = _1ad9bc556_Trait((*(_151215_it))._field_Kind.ptr());;
				if ((_15178_t2 == nullptr)) {
					_1ad912c71_pushErr(_self_, (*((*_151215_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151045_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_151215_it))._field_Kind), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1be3802b0;
				};
				{
					auto expr = &((*((*(_151045_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be38213b:;
					if (it != expr_end) {
						jule::I64 _15238_j = it - expr->begin();
						jule::Ptr<_1ad9c0ca7_TypeSymbol> _152311_it2 = *it;
						{
							if ((_15238_j >= _15128_i)) {
								goto _iter_end_1be38213b;
							};
							if ((((*(_152311_it2))._field_Kind != nullptr) && _1ad9b8cd3_Equal((*(_151215_it))._field_Kind, (*_152311_it2.alloc)._field_Kind))) {
								_1ad912c71_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_15178_t2))._field_Ident, &__jule_any_type5); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1be38213b;
							};
						}
						_iter_next_1be38213b:;
						++it;
						_15238_j++;
						goto _iter_begin_1be38213b;
					}
					_iter_end_1be38213b:;
				};
				if (((*(_151045_t)) == _15178_t2)) {
					_1ad912c71_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151045_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_1dd0b6912_Builder _15379_message = static__1dd0b74d4_New(64LL);;
					__jule_func_result=(__jule_func_result && _1ad923aa6_catchTraitInheritCycle(_self_, (*(_151045_t)), _15178_t2, &(_15379_message)));
					if ((_1dd0c1b5e_Len(&_15379_message) > 0LL)) {
						jule::Str _154010_errMsg = _1dd0c16ca_Str(&_15379_message);;
						_1dd0c18c8_Clear(&_15379_message);
						_1ad928836_pushCycleError(_self_, &((*((*(_151045_t))))._field_Ident), &((*(_15178_t2))._field_Ident), &(_15379_message));
						_154010_errMsg+=_1dd0c16ca_Str(&_15379_message);
						_1ad912c71_pushErr(_self_, (*(*(_151215_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_154010_errMsg, &__jule_any_type5); __jule_collection; }));
					};
				};
			}
			_iter_next_1be3802b0:;
			++it;
			_15128_i++;
			goto _iter_begin_1be3802b0;
		}
		_iter_end_1be3802b0:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ad9241a0_checkTraitDeclInherits(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad802ea2_Trait>* _155144_t) {
	{
		auto expr = &((*((*(_155144_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be380ab8:;
		if (it != expr_end) {
			jule::I64 _15528_i = it - expr->begin();
			jule::Ptr<_1ad9c0ca7_TypeSymbol> _155215_it = *it;
			{
				jule::Ptr<_1ad802ea2_Trait> _15538_t1 = _1ad9bc556_Trait((*(_155215_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_155144_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be38bb7e:;
					if (it != expr_end) {
						jule::I64 _15549_j = it - expr->begin();
						jule::Ptr<_1ad9c0ca7_TypeSymbol> _155416_it2 = *it;
						{
							if ((_15549_j == _15528_i)) {
								goto _iter_next_1be38bb7e;
							};
							jule::Ptr<_1ad802ea2_Trait> _15589_t2 = _1ad9bc556_Trait((*(_155416_it2))._field_Kind);;
							{
								auto expr = &((*(_15538_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1be38d422:;
								if (it != expr_end) {
									jule::Ptr<_1ad7e778d_Fn> _155917_t1m = *it;
									{
										jule::Ptr<_1ad7e778d_Fn> _156010_t2m = _1ad803b84_FindMethod(_15589_t2.ptr(), (*(_155917_t1m))._field_Ident);;
										if ((_156010_t2m == nullptr)) {
											goto _iter_next_1be38d422;
										};
										jule::Ptr<_1ad7ea84b_FnIns> _15646_t1f = _1ad91c286_getTraitCheckFnKind(_self_, &(_155917_t1m));;
										jule::Ptr<_1ad7ea84b_FnIns> _15656_t2f = _1ad91c286_getTraitCheckFnKind(_self_, &(_156010_t2m));;
										if ((!(_1ad7eb7e7_equalTrait(_15646_t1f, &(_15656_t2f))))) {
											_1ad912c71_pushErr(_self_, (*((*_155215_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_155144_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_15589_t2.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1ad7ec72c_GetKindStr(_15646_t1f, true), &__jule_any_type5); (*it++) = jule::Any(_1ad7ec72c_GetKindStr(_15656_t2f.ptr(), true), &__jule_any_type5); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1be38d422:;
									++it;
									goto _iter_begin_1be38d422;
								}
								_iter_end_1be38d422:;
							};
						}
						_iter_next_1be38bb7e:;
						++it;
						_15549_j++;
						goto _iter_begin_1be38bb7e;
					}
					_iter_end_1be38bb7e:;
				};
			}
			_iter_next_1be380ab8:;
			++it;
			_15528_i++;
			goto _iter_begin_1be380ab8;
		}
		_iter_end_1be380ab8:;
	};
}



inline void _1ad924458_checkTraitDeclMethod(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _157642_f) {
	if (_1ad6d2557_IsIgnoreIdent((*((*(_157642_f))))._field_Ident)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_157642_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ad6d2821_IsAnonIdent((*((*(_157642_f))))._field_Ident)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_157642_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_157642_f))))._field_sema=_self_;
	_1ad923600_checkFnDeclPrototype(_self_, _157642_f);
	jule::Ptr<_1ad7ea84b_FnIns> _15847_ins = _1ad7e9031_instance((*(_157642_f)));;
	_1ad91dad4_reloadFnInsTypes(_self_, _15847_ins);
	(*(_15847_ins))._field_reloaded=true;
	_1ad7e933e_appendInstance((*(_157642_f)).ptr(), &(_15847_ins));
}



inline void _1ad924711_checkTraitDeclMethods(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad802ea2_Trait>* _159043_t) {
	{
		auto expr = &((*((*(_159043_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be395a89:;
		if (it != expr_end) {
			jule::I64 _15918_i = it - expr->begin();
			jule::Ptr<_1ad7e778d_Fn> _159115_f = *it;
			{
				_1ad924458_checkTraitDeclMethod(_self_, &(_159115_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1ad804316_findMethodInherit((*(_159043_t)).ptr(), &((*(_159115_f))._field_Ident)) != nullptr)) {
					_1ad912c71_pushErr(_self_, (*_159115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1be395a89;
				};
				_julec_label_1be398916:;
				{
					auto expr = &((*((*(_159043_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be398d45:;
					if (it != expr_end) {
						jule::I64 _16078_j = it - expr->begin();
						jule::Ptr<_1ad7e778d_Fn> _160711_jf = *it;
						{
							{
								
								if ((_16078_j >= _15918_i)) {
									_case_begin_1be3998d4:;
									{
										goto _iter_end_1be398d45;
									}
								}
								else if (((*_159115_f.alloc)._field_Ident == (*(_160711_jf))._field_Ident)) {
									_case_begin_1be39996c:;
									{
										_1ad912c71_pushErr(_self_, (*_159115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1be398d45;
									}
								}
								_match_end_1be3997c4:;
							};
						}
						_iter_next_1be398d45:;
						++it;
						_16078_j++;
						goto _iter_begin_1be398d45;
					}
					_iter_end_1be398d45:;
				};
			}
			_iter_next_1be395a89:;
			++it;
			_15918_i++;
			goto _iter_begin_1be395a89;
		}
		_iter_end_1be395a89:;
	};
}



inline void _1ad9249b9_checkTraitDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad802ea2_Trait>* _162636_t) {
	if (_1ad6d2557_IsIgnoreIdent((*((*(_162636_t))))._field_Ident)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_162636_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ad913986_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_162636_t))), &((*((*(_162636_t))))._field_Ident), false)) {
		_1ad912c71_pushErr(_self_, (*((*(_162636_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_162636_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1ad9241a0_checkTraitDeclInherits(_self_, _162636_t);
	_1ad924711_checkTraitDeclMethods(_self_, _162636_t);
}



inline jule::Bool _1ad924c50_checkTraitDecls(jule::Ptr<_1ad90ed6c_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be39eb92:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> _164015_t = *it;
			{
				_1ad9249b9_checkTraitDecl(_self_, &(_164015_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be39eb92:;
			++it;
			goto _iter_begin_1be39eb92;
		}
		_iter_end_1be39eb92:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ad92514b_checkTraitImplMethods(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad802ea2_Trait>* _165042_base, jule::Ptr<_1ad8abc5e_Impl>* _165057_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165057_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3a1677:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> *_165210_f = it;
			{
				if ((_1ad803b84_FindMethod((*(_165042_base)).ptr(), (*((*(_165210_f))))._field_Ident) == nullptr)) {
					_1ad912c71_pushErr(_self_, (*(*(_165210_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165042_base))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_165210_f)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1be3a1677:;
			++it;
			goto _iter_begin_1be3a1677;
		}
		_iter_end_1be3a1677:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ad925547_implToStruct(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _166134_dest, jule::Ptr<_1ad8abc5e_Impl>* _166154_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_166154_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3a3ee8:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _166515_f = *it;
			{
				if (((_1ad71669b_FindMethod((*(_166134_dest)).ptr(), (*(_166515_f))._field_Ident, (*_166515_f.alloc)._field_Statically) != nullptr) || (_1ad716d2d_FindField((*(_166134_dest)).ptr(), (*_166515_f.alloc)._field_Ident) != nullptr))) {
					_1ad912c71_pushErr(_self_.ptr(), (*_166515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166134_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_166515_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1be3a3ee8;
				};
				if ((((*((*(_166134_dest))))._field_Generics.len() > 0LL) && ((*_166515_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_166515_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be3a7084:;
						if (it != expr_end) {
							jule::Ptr<_1ad7023bd_GenericDecl> _167312_fg = *it;
							{
								{
									auto expr = &((*((*(_166134_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1be3a79e1:;
									if (it != expr_end) {
										jule::Ptr<_1ad7023bd_GenericDecl> _167413_dg = *it;
										{
											if (((*(_167312_fg))._field_Ident == (*(_167413_dg))._field_Ident)) {
												_1ad912c71_pushErr(_self_, (*_167312_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1be3a79e1:;
										++it;
										goto _iter_begin_1be3a79e1;
									}
									_iter_end_1be3a79e1:;
								};
							}
							_iter_next_1be3a7084:;
							++it;
							goto _iter_begin_1be3a7084;
						}
						_iter_end_1be3a7084:;
					};
				};
				_1ad913ce9_checkDirectives(_self_, &((*_166515_f.alloc)._field_Directives), jule::Any(_166515_f, &__jule_any_type10));
				(*_166515_f.alloc)._field_sema=_self_;
				(*_166515_f.alloc)._field_Owner=(*(_166134_dest));
				{ jule::Slice<jule::Ptr<_1ad7e778d_Fn>> &__jule_push_dest = (*((*(_166134_dest))))._field_Methods; __jule_push_dest.push(_166515_f); };
			}
			_iter_next_1be3a3ee8:;
			++it;
			goto _iter_begin_1be3a3ee8;
		}
		_iter_end_1be3a3ee8:;
	};
	{
		auto expr = &((*((*(_166154_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3a43d3:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _169015_v = *it;
			{
				;
				if (((_1ad71669b_FindMethod((*(_166134_dest)).ptr(), (*(_169015_v))._field_Ident, true) != nullptr) || (_1ad7169dc_FindStatic((*(_166134_dest)).ptr(), (*_169015_v.alloc)._field_Ident) != nullptr))) {
					_1ad912c71_pushErr(_self_, (*_169015_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166134_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_169015_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1be3a43d3;
				};
				{ jule::Slice<jule::Ptr<_1ad933a83_Var>> &__jule_push_dest = (*((*(_166134_dest))))._field_Statics; __jule_push_dest.push(_169015_v); };
			}
			_iter_next_1be3a43d3:;
			++it;
			goto _iter_begin_1be3a43d3;
		}
		_iter_end_1be3a43d3:;
	};
	return __jule_func_result;;
}



inline void _1ad925800_implTrait(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad8abc5e_Impl>* _170331_decl) {
	jule::Ptr<_1ad9b8596_TypeKind> _17047_base_t = _1ad918e53_selectType(_self_, &((*((*(_170331_decl))))._field_Base));;
	if ((_17047_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1ad802ea2_Trait> _17087_base = _1ad9bc556_Trait(_17047_base_t.ptr());;
	if ((_17087_base == nullptr)) {
		_1ad912c71_pushErr(_self_, (*((*((*(_170331_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str(_17047_base_t.ptr()), &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad9b8596_TypeKind> _17157_destT = _1ad918e53_selectType(_self_, &((*((*(_170331_decl))))._field_Dest));;
	if ((_17157_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ad718857_StructIns> _17197_destS = _1ad9bc2c0_Struct(_17157_destT.ptr());;
	if ((_17197_destS == nullptr)) {
		_1ad912c71_pushErr(_self_, (*((*((*(_170331_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str(_17157_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad7159ec_Struct> _17267_dest = (*(_17197_destS))._field_Decl;;
	if ((_1ad6d5ec8_Dir((*((*(_17267_dest))._field_Token))._field_File.ptr()) != _1ad6d5ec8_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ad912c71_pushErr(_self_, (*(*((*(_170331_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1ad9319d7_pushImplemented(_17087_base, &(_17267_dest));
	_1ad931cc3_pushImplements(&(_17267_dest), _17087_base);
	if (((*((*(_170331_decl))))._field_Statics.len() > 0LL)) {
		_1ad912c71_pushErr(_self_, (*((*((*(_170331_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1ad92514b_checkTraitImplMethods(_self_, &(_17087_base), _170331_decl)))) {
			_case_begin_1be3b7979:;
		}
		else if ((!(_1ad925547_implToStruct(_self_, &(_17267_dest), _170331_decl)))) {
			_case_begin_1be3b79e0:;
		}
		_match_end_1be3b69bc:;
	};
}



inline void _1ad925aa8_implStruct(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad8abc5e_Impl>* _174632_decl) {
	jule::Ptr<_1ad9b8596_TypeKind> _17477_destT = _1ad918e53_selectType(_self_, &((*((*(_174632_decl))))._field_Dest));;
	if ((_17477_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ad718857_StructIns> _17517_destS = _1ad9bc2c0_Struct(_17477_destT.ptr());;
	if ((_17517_destS == nullptr)) {
		_1ad912c71_pushErr(_self_, (*((*((*(_174632_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str(_17477_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad7159ec_Struct> _17587_dest = (*(_17517_destS))._field_Decl;;
	if ((_1ad6d5ec8_Dir((*((*(_17587_dest))._field_Token))._field_File.ptr()) != _1ad6d5ec8_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ad912c71_pushErr(_self_, (*(*((*(_174632_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1ad925547_implToStruct(_self_, &(_17587_dest), _174632_decl)))) {
			_case_begin_1be3bd7e8:;
		}
		_match_end_1be3bbdac:;
	};
}



inline void _1ad925d61_implImpl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad8abc5e_Impl>* _177030_decl) {
	{
		
		if (_1ad8ac15a_IsTraitImpl((*(_177030_decl)).ptr())) {
			_case_begin_1be3be387:;
			{
				_1ad925800_implTrait(_self_, _177030_decl);
			}
		}
		else if (_1ad8ac3e1_IsStructImpl((*(_177030_decl)).ptr())) {
			_case_begin_1be3be431:;
			{
				_1ad925aa8_implStruct(_self_, _177030_decl);
			}
		}
		_match_end_1be3be266:;
	};
}



inline void _1ad9261c4_checkVarDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad933a83_Var>* _178134_decl, jule::Trait _178150_l) {
	if (_1ad6d2557_IsIgnoreIdent((*((*(_178134_decl))))._field_Ident)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1ad934226_IsTypeInferred((*(_178134_decl)).ptr())) {
		if ((!(_1ad933e90_IsInitialized((*(_178134_decl)).ptr())))) {
			_1ad912c71_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1ad8ced70_ReferenceStack> _17918_refers = static_cast<jule::Ptr<_1ad8ced70_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _178150_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4)) {
				_case_begin_1be3c3556:;
				{
					_17918_refers=(*((*(_178134_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)) {
				_case_begin_1be3c3a2e:;
				{
					_17918_refers=_1ad8bc005_getOwnerRefers(_178150_l.cast_ptr<_1ad8b860b_scopeChecker>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));
				}
			}
			else {
				_case_begin_1be3c3644:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:1798:5"));;
				}
			}
			_match_end_1be3c35cd:;
		};
		(*((*((*(_178134_decl))))._field_Kind))._field_Kind=_1ad91831a_checkTypeRefers(_self_, &((*(*((*(_178134_decl))))._field_Kind.alloc)._field_Decl), _178150_l, _17918_refers);
	};
	if ((*((*(_178134_decl))))._field_Reference) {
		if ((*((*(_178134_decl))))._field_Constant) {
			_1ad912c71_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Statically) {
			_1ad912c71_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1ad933e90_IsInitialized((*(_178134_decl)).ptr())))) {
		if ((*((*(_178134_decl))))._field_Constant) {
			_1ad912c71_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Statically) {
			_1ad912c71_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178134_decl))))._field_Reference) {
			_1ad912c71_pushErr(_self_, (*((*(_178134_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1ad92647c_checkGlobalVarDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad933a83_Var>* _182740_decl) {
	if (_1ad913986_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_182740_decl))), &((*((*(_182740_decl))))._field_Ident), (*((*(_182740_decl))))._field_Binded)) {
		_1ad912c71_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_182740_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_182740_decl))))._field_Binded && (*((*(_182740_decl))))._field_Constant)) {
		_1ad912c71_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_182740_decl))))._field_Binded)) && (!((*((*(_182740_decl))))._field_Constant))) && (!((*((*(_182740_decl))))._field_Statically)))) {
		_1ad912c71_pushErr(_self_, (*((*(_182740_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1ad913ce9_checkDirectives(_self_, &((*((*(_182740_decl))))._field_Directives), jule::Any((*(_182740_decl)), &__jule_any_type7));
	_1ad9261c4_checkVarDecl(_self_, _182740_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));
}



inline jule::Bool _1ad926713_checkGlobalDecls(jule::Ptr<_1ad90ed6c_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3d070b:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _184515_decl = *it;
			{
				_1ad92647c_checkGlobalVarDecl(_self_, &(_184515_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be3d070b:;
			++it;
			goto _iter_begin_1be3d070b;
		}
		_iter_end_1be3d070b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ad926b0e_checkStructTraitImpl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _185542_strct, jule::Ptr<_1ad802ea2_Trait>* _185563_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_185563_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3d20e2:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _185615_tf = *it;
			{
				jule::Bool _18578_exist = false;;
				jule::Ptr<_1ad7e778d_Fn> _18588_sf = _1ad71669b_FindMethod((*(_185542_strct)).ptr(), (*(_185615_tf))._field_Ident, (*_185615_tf.alloc)._field_Statically);;
				jule::Ptr<_1ad7ea84b_FnIns> _18594_tfK = _1ad91c286_getTraitCheckFnKind(_self_, &(_185615_tf));;
				if ((_18588_sf != nullptr)) {
					jule::Ptr<_1ad7ea84b_FnIns> _18619_sfK = _1ad91c286_getTraitCheckFnKind(_self_, &(_18588_sf));;
					if ((_18619_sfK != nullptr)) {
						_18578_exist=_1ad7eb7e7_equalTrait(_18594_tfK, &(_18619_sfK));
					};
				};
				if (_18578_exist) {
					jule::Ptr<_1ad6e45d0_Directive> _18675_d = _1ad9b0192_findDirective(&((*_18588_sf.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_18675_d != nullptr)) {
						_1ad912c71_pushErr(_self_, (*_18675_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1ad912c71_pushErr(_self_, (*((*(_185542_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185563_trt))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1ad7ec72c_GetKindStr(_18594_tfK, true), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1be3d20e2:;
			++it;
			goto _iter_begin_1be3d20e2;
		}
		_iter_end_1be3d20e2:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ad926e50_checkStructImpls(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _188138_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188138_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3d8505:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> _188315_trt = *it;
			{
				__jule_func_result=(_1ad926b0e_checkStructTraitImpl(_self_, _188138_s, &(_188315_trt)) && __jule_func_result);
			}
			_iter_next_1be3d8505:;
			++it;
			goto _iter_begin_1be3d8505;
		}
		_iter_end_1be3d8505:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ad927291_checkStructFields(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _188939_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188939_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3d999b:;
		if (it != expr_end) {
			jule::Ptr<_1ad712ac6_Field> _189115_f = *it;
			{
				(*(_189115_f))._field_Owner=(*(_188939_st));
				{
					auto expr = &((*((*(_188939_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be3da6c2:;
					if (it != expr_end) {
						jule::Ptr<_1ad712ac6_Field> _189311_cf = *it;
						{
							if ((_189115_f == _189311_cf)) {
								goto _iter_end_1be3da6c2;
							} else if (((*_189115_f.alloc)._field_Ident == (*(_189311_cf))._field_Ident)) {
								_1ad912c71_pushErr(_self_.ptr(), (*_189115_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_189115_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1be3da6c2:;
						++it;
						goto _iter_begin_1be3da6c2;
					}
					_iter_end_1be3da6c2:;
				};
			}
			_iter_next_1be3d999b:;
			++it;
			goto _iter_begin_1be3d999b;
		}
		_iter_end_1be3d999b:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ad927549_checkStructDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _190637_s) {
	if (_1ad6d2557_IsIgnoreIdent((*((*(_190637_s))))._field_Ident)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_190637_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ad913986_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_190637_s))), &((*((*(_190637_s))))._field_Ident), (*((*(_190637_s))))._field_Binded)) {
		_1ad912c71_pushErr(_self_, (*((*(_190637_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_190637_s))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1ad913ce9_checkDirectives(_self_, &((*((*(_190637_s))))._field_Directives), jule::Any((*(_190637_s)), &__jule_any_type9));
	{
		
		if ((!(_1ad922874_checkDeclGenerics(_self_, &((*((*(_190637_s))))._field_Generics))))) {
			_case_begin_1be3e0aa1:;
		}
		else if ((!(_1ad927291_checkStructFields(_self_, _190637_s)))) {
			_case_begin_1be3e0b17:;
		}
		else if ((!(_1ad926e50_checkStructImpls(_self_, _190637_s)))) {
			_case_begin_1be3e0b7d:;
		}
		else if ((!(_1ad928182_checkFuncDeclsBy(_self_, &((*((*(_190637_s))))._field_Methods))))) {
			_case_begin_1be3e0be4:;
		}
		_match_end_1be3e096e:;
	};
}



inline jule::Bool _1ad9277d0_checkStructDecls(jule::Ptr<_1ad90ed6c_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3e3048:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _192615_s = *it;
			{
				_1ad927549_checkStructDecl(_self_, &(_192615_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be3e3048:;
			++it;
			goto _iter_begin_1be3e3048;
		}
		_iter_end_1be3e3048:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ad927a88_checkAnonFuncDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _193639_f) {
	(*((*(_193639_f))))._field_sema=_self_;
	_1ad923600_checkFnDeclPrototype(_self_, _193639_f);
}



inline void _1ad927d41_checkFuncDecl(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _194135_f) {
	if (_1ad6d2557_IsIgnoreIdent((*((*(_194135_f))))._field_Ident)) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1ad7e877d_IsAnon((*(_194135_f)).ptr())) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1ad913ce9_checkDirectives(_self_, &((*((*(_194135_f))))._field_Directives), jule::Any((*(_194135_f)), &__jule_any_type10));
	_1ad927a88_checkAnonFuncDecl(_self_, _194135_f);
	if ((((*((*(_194135_f))))._field_Owner == nullptr) && _1ad913986_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_194135_f))), &((*((*(_194135_f))))._field_Ident), (*((*(_194135_f))))._field_Binded))) {
		if ((*((*(_194135_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1ad7e778d_Fn> _19535_init = _1ad911434_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_19535_init != nullptr)) {
				return;;
			};
		};
		_1ad912c71_pushErr(_self_, (*((*(_194135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_194135_f))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ad928182_checkFuncDeclsBy(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Slice<jule::Ptr<_1ad7e778d_Fn>>* _196338_funcs) {
	{
		auto expr = _196338_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3ea957:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _196415_f = *it;
			{
				_1ad927d41_checkFuncDecl(_self_, &(_196415_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1be3ea957:;
			++it;
			goto _iter_begin_1be3ea957;
		}
		_iter_end_1be3ea957:;
	};
	return true;;
}



inline jule::Bool _1ad928418_checkFuncDecls(jule::Ptr<_1ad90ed6c_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ad928182_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1ad928836_pushCycleError(_1ad90ed6c_sema* _self_, jule::Str* _197927_st1, jule::Str* _197938_st2, _1dd0b6912_Builder* _197953_message) {
	;
	jule::Str _19813_refersTo = _1dd3568d8_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_197927_st1)), &__jule_any_type5); (*it++) = jule::Any((*(_197938_st2)), &__jule_any_type5); __jule_collection; }));;
	jule::Str _19823_m = _1dd0c16ca_Str(_197953_message);;
	_1dd0c0dd3_WriteStr(_197953_message, _1dd0a3613_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1dd0c0dd3_WriteStr(_197953_message, _19813_refersTo);
	_1dd0c118b_WriteByte(_197953_message, '\n');
	_1dd0c0dd3_WriteStr(_197953_message, _19823_m);
}



inline void _1ad928eda_checkPackageDecls(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be40273e:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _200615_f = *it;
			{
				_1ad912853_setCurrentFile(_self_.ptr(), _200615_f);
				if ((!(_1ad920795_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1be40273e:;
			++it;
			goto _iter_begin_1be40273e;
		}
		_iter_end_1be40273e:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be402bc3:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _201315_f = *it;
			{
				_1ad912853_setCurrentFile(_self_, _201315_f);
				if ((!(_1ad924c50_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1be402bc3:;
			++it;
			goto _iter_begin_1be402bc3;
		}
		_iter_end_1be402bc3:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be403bd5:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _202015_f = *it;
			{
				_1ad912853_setCurrentFile(_self_, _202015_f);
				if ((!(_1ad926713_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1be403bd5:;
			++it;
			goto _iter_begin_1be403bd5;
		}
		_iter_end_1be403bd5:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be404c3b:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _202715_f = *it;
			{
				_1ad912853_setCurrentFile(_self_, _202715_f);
				{
					
					if ((!(_1ad928418_checkFuncDecls(_self_)))) {
						_case_begin_1be40638b:;
					}
					else if ((!(_1ad9277d0_checkStructDecls(_self_)))) {
						_case_begin_1be406435:;
					}
					else {
						_case_begin_1be405cd6:;
						{
							goto _iter_next_1be404c3b;
						}
					}
					_match_end_1be4062e2:;
				};
				return;;
			}
			_iter_next_1be404c3b:;
			++it;
			goto _iter_begin_1be404c3b;
		}
		_iter_end_1be404c3b:;
	};
}



inline void _1ad92934d_checkDataForTypeInference(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad985b90_Data>* _203942_d, jule::Ptr<_1ad6ceb70_Token>* _203953_errToken) {
	{
		
		if (_1ad9860ad_IsNil((*(_203942_d)).ptr())) {
			_case_begin_1be407535:;
			{
				_1ad912c71_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1ad986344_IsVoid((*(_203942_d)).ptr())) {
			_case_begin_1be4075ce:;
			{
				_1ad912c71_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_203942_d))))._field_Kind))._field_Variadic) {
			_case_begin_1be407645:;
			{
				_1ad912c71_pushErr(_self_, (*(_203953_errToken)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be407403:;
	};
}



inline void _1ad929606_checkVarValue(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad933a83_Var>* _205135_v) {
	if (_1ad934226_IsTypeInferred((*(_205135_v)).ptr())) {
		(*((*(_205135_v))))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=(*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Kind});
		_1ad92934d_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1ad91e9e7_checkValidityForInitExpr(_self_, (*((*(_205135_v))))._field_Mutable, (*((*(_205135_v))))._field_Reference, &((*((*((*(_205135_v))))._field_Kind))._field_Kind), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205135_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1ad9c7ece_Arr> _20648_arr = _1ad9bba1c_Arr((*((*((*(_205135_v))))._field_Kind))._field_Kind.ptr());;
		if ((_20648_arr != nullptr)) {
			if ((*_20648_arr.alloc)._field_Auto) {
				jule::Ptr<_1ad9c7ece_Arr> _20676_dataArr = _1ad9bba1c_Arr((*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_20676_dataArr != nullptr)) {
					(*_20648_arr.alloc)._field_N=(*_20676_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1ad91a262_checkAssignType(_self_, (*((*(_205135_v))))._field_Reference, &((*(*((*(_205135_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_205135_v))))._field_Refers)) {
			_1ad91e9e7_checkValidityForInitExpr(_self_, (*((*(_205135_v))))._field_Mutable, (*((*(_205135_v))))._field_Reference, &((*(*((*(_205135_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_205135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205135_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_205135_v))))._field_Reference && (!(_1ad9d54a3_isValidForRef(&((*((*((*(_205135_v))))._field_Kind))._field_Kind)))))) {
		_1ad912c71_pushErr(_self_.ptr(), (*((*(_205135_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(*((*(_205135_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
	};
	if ((*((*(_205135_v))))._field_Constant) {
		if (((!(_1ad9865ca_IsConst((*((*((*(_205135_v))))._field_Value))._field_Data.ptr()))) && (!(_1ad9bcd09_comptime((*(*((*((*(_205135_v))))._field_Value))._field_Data.alloc)._field_Kind.ptr()))))) {
			_1ad912c71_pushErr(_self_, (*((*(*((*(_205135_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_205135_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_205135_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1ad9bca73_Tup((*((*((*(_205135_v))))._field_Kind))._field_Kind) != nullptr)) {
		(*(*((*(_205135_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1ad929969_evalVarValue(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad933a83_Var>* _210434_decl, jule::Trait _210450_l) {
	if ((!(_1ad933e90_IsInitialized((*(_210434_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1ad9878b7_eval> _21097_eval = static_cast<jule::Ptr<_1ad9878b7_eval>>(nullptr);;
	if (((*((*(_210434_decl))))._field_Kind != nullptr)) {
		_21097_eval=_1ad919409_evalpd(_self_, _210450_l, (*(*((*(_210434_decl))))._field_Kind.alloc)._field_Kind, (*(_210434_decl)));
	} else {
		_21097_eval=_1ad919409_evalpd(_self_, _210450_l, nullptr, (*(_210434_decl)));
	};
	(*(_21097_eval))._field_immutable=(!((*((*(_210434_decl))))._field_Mutable));
	(*((*((*(_210434_decl))))._field_Value))._field_Data=_1ad9a672c_evalExpr(_21097_eval, (*(*((*(_210434_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1ad929ccc_checkVar(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad933a83_Var>* _212130_decl, jule::Trait _212146_l) {
	_1ad929969_evalVarValue(_self_, _212130_decl, _212146_l);
	if (((*((*((*(_212130_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1ad929606_checkVarValue(_self_, _212130_decl);
}



inline void _1ad929eca_checkGlobals(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be41e98c:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _213115_decl = *it;
			{
				if ((*(_213115_decl))._field_Binded) {
					goto _iter_next_1be41e98c;
				};
				if (((_1ad933e90_IsInitialized(_213115_decl) && ((*((*_213115_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1ad934226_IsTypeInferred(_213115_decl) && ((*((*_213115_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1ad929ccc_checkVar(_self_, &(_213115_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));
				};
			}
			_iter_next_1be41e98c:;
			++it;
			goto _iter_begin_1be41e98c;
		}
		_iter_end_1be41e98c:;
	};
}



inline jule::Ptr<_1ad7ea84b_FnIns> _1ad92a3c6_readyToCheckFn(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _214536_s, jule::Ptr<_1ad7e778d_Fn>* _214556_f) {
	jule::Ptr<_1ad7ea84b_FnIns> _21467_ins = _1ad7e9031_instance((*(_214556_f)));;
	if (((*((*(_214556_f))))._field_Instances.len() != 0LL)) {
		return _21467_ins;;
	};
	(*(_21467_ins))._field_Owner=(*(_214536_s));
	_1ad7e933e_appendInstance((*(_214556_f)).ptr(), &(_21467_ins));
	(*_21467_ins.alloc)._field_reloaded=true;
	if (_1ad91dad4_reloadFnInsTypes(_self_, _21467_ins)) {
		return _21467_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ad92a7c2_checkGenericFn(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _216136_f, jule::Ptr<_1ad6ceb70_Token>* _216152_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1ad91dad4_reloadFnInsTypes(_self_, (*(_216136_f)));
	(*((*(_216136_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _21677_existInstance = _1ad7e933e_appendInstance((*((*(_216136_f))))._field_Decl.ptr(), _216136_f);;
	if ((!(_1ad91c73c_checkConstraintsFn(_self_, _216136_f, _216152_et, _21677_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_21677_existInstance != nullptr)) {
		(*(_216136_f))=_21677_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1ad92d330_checkFnInsCaller(_self_, _216136_f, (*(_216152_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1ad92ab35_checkTypeMethod(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _218437_s, jule::Ptr<_1ad7e778d_Fn>* _218457_f) {
	if (((*((*(_218457_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _21897_ins = (*((*(_218457_f))))._field_Instances[0LL];;
	if (((*((*(_21897_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1ad92d5d8_checkFnIns(_self_, &(_21897_ins));
}



inline jule::Ptr<_1ad7ea84b_FnIns> _1ad92b0db_checkStructInsOp(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _219738_s, jule::Ptr<_1ad7e778d_Fn>* _219758_f, jule::Fn<jule::Bool,jule::Ptr<_1ad7e778d_Fn>> _219766_p) {
	if (((((*(_219758_f)) == nullptr) || ((*((*(_219758_f))))._field_Generics.len() > 0LL)) || (!(_219766_p((*(_219758_f))))))) {
		return nullptr;;
	};
	return (*((*(_219758_f))))._field_Instances[0LL];;
}



inline jule::Bool _1ad92b4d7_checkStructEnv(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _220736_s, jule::Ptr<_1ad6ceb70_Token> _220755_errorToken) {
	jule::Bool __jule_func_result = false;
	_1ad9ca993_typeChecker _22087_tc = _1ad9ca993_typeChecker{._field_s=(*((*((*(_220736_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4), ._field_lookup=jule::Trait((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4), ._field_referencer=jule::new_ptr<_1ad9c99a3_referencer>(_1ad9c99a3_referencer{._field_ident=(*(*((*(_220736_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_220736_s))))._field_Decl, &__jule_any_type9), ._field_refs=nullptr}), ._field_refers=(*((*(_220736_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ad9b77a4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_220736_s))))._field_Generics.len() > 0LL)) {
		_22087_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>::alloc(0LL, (*((*(_220736_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad9b77a4_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_220736_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be42e639:;
			if (it != expr_end) {
				jule::I64 _22219_i = it - expr->begin();
				jule::Ptr<_1ad9b6de1_InsGeneric> _222116_g = *it;
				{
					jule::Ptr<_1ad7023bd_GenericDecl> _22229_decl = (*(*((*(_220736_s))))._field_Decl.alloc)._field_Generics[_22219_i];;
					{ jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> &__jule_push_dest = _22087_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1ad9b77a4_TypeAlias>(_1ad9b77a4_TypeAlias{._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_22229_decl.alloc)._field_Token, ._field_Ident=(*(_22229_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=(*(_222116_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1be42e639:;
				++it;
				_22219_i++;
				goto _iter_begin_1be42e639;
			}
			_iter_end_1be42e639:;
		};
	};
	jule::Ptr<_1ad7eda91_SymTab> _22317_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ad912853_setCurrentFile(_self_, _22317_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_220736_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1ad7eda91_SymTab> _22358_file = _1ad90d9d6_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_220736_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_22358_file != nullptr)) {
			_1ad912853_setCurrentFile(_self_, _22358_file);
		};
	};
	if (((*((*(_220736_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1ad8a9960_constraintChecker> _22428_cc = _1ad917968_constraintChecker(_self_);;
		(*(_22428_cc))._field_et=_220755_errorToken;
		(*_22428_cc.alloc)._field_si=(*(_220736_s));
		(*_22428_cc.alloc)._field_genericsA=_22087_tc._field_useGenerics;
		(*_22428_cc.alloc)._field_uniq=true;
		if ((!(_1ad8aa8c8_check(_22428_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_220736_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _22558_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_22087_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_220736_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be438115:;
			if (it != expr_end) {
				jule::Ptr<_1ad933a83_Var> _225716_v = *it;
				{
					_1ad9261c4_checkVarDecl(_self_, &(_225716_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));
					_1ad929ccc_checkVar(_self_, &(_225716_v), jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _22558_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1be438115:;
				++it;
				goto _iter_begin_1be438115;
			}
			_iter_end_1be438115:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_22087_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1ad9878b7_eval> _22687_eval = _1ad919b46_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));;
	(*((*(_220736_s))))._field_Comparable=(!((*(*((*(_220736_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_220736_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be43baca:;
		if (it != expr_end) {
			jule::Ptr<_1ad717ca7_FieldIns> _227015_f = *it;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _22718_kind = _1ad9d357d_checkDecl(&_22087_tc, &((*((*((*(_227015_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_22718_kind != nullptr) && __jule_func_result);
				if ((_22718_kind == nullptr)) {
					if (((_self_ != (*(*((*(_220736_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_220736_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_220736_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1be43baca;
				};
				(*_227015_f.alloc)._field_Kind=_22718_kind;
				(*((*(_220736_s))))._field_Mutable=((*((*(_220736_s))))._field_Mutable || ((!((*(*(_227015_f))._field_Decl.alloc)._field_Mutable)) && _1ad9b9e7c_Mutable((*(_227015_f))._field_Kind)));
				(*((*(_220736_s))))._field_Comparable=((*((*(_220736_s))))._field_Comparable && _1ad9b9be6_Comparable((*(_227015_f))._field_Kind));
				if (((*(*(_227015_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1be43baca;
				};
				(*(_22687_eval))._field_prefix=(*_227015_f.alloc)._field_Kind;
				(*_22687_eval.alloc)._field_field=_227015_f;
				(*_227015_f.alloc)._field_Default=_1ad9a672c_evalExpr(_22687_eval, (*(*(_227015_f))._field_Decl.alloc)._field_Default);
				if (((*_227015_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1be43baca;
				};
				;
				_1ad91a262_checkAssignType(_self_, false, &((*_227015_f.alloc)._field_Kind), &((*_227015_f.alloc)._field_Default), (*((*(*(_227015_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_220736_s))))._field_Refers);
			}
			_iter_next_1be43baca:;
			++it;
			goto _iter_begin_1be43baca;
		}
		_iter_end_1be43baca:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ad92b8d3_precheckStructIns(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _230439_s, jule::Ptr<_1ad6ceb70_Token> _230458_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1ad92b4d7_checkStructEnv(_self_, _230439_s, _230458_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_230439_s))))._field_Comparable && ((*((*(_230439_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1ad7e778d_Fn> _23158_decl = _1ab307aca_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_230439_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be447971:;
			if (it != expr_end) {
				jule::Ptr<_1ad717ca7_FieldIns> _231616_field = *it;
				{
					jule::Ptr<_1ad9c7ece_Arr> _23179_arr = _1ad9bba1c_Arr((*(_231616_field))._field_Kind.ptr());;
					if ((_23179_arr == nullptr)) {
						goto _iter_next_1be447971;
					};
					jule::Ptr<_1ad7ea84b_FnIns> _23219_f = _1ad7e8c9a_instanceForce(_23158_decl);;
					(*(_23219_f))._field_Generics=jule::append((*_23219_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ad9b6de1_InsGeneric>(_1ad9b6de1_InsGeneric{._field_Kind=(*(_23179_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad92a7c2_checkGenericFn(_self_, &(_23219_f), &((*((*_231616_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/sema.jule:2325:6"));;
					};
					_1ad8d09db_Push((*((*(_230439_s))))._field_Refers.ptr(), jule::Any(_23219_f, &__jule_any_type63));
				}
				_iter_next_1be447971:;
				++it;
				goto _iter_begin_1be447971;
			}
			_iter_end_1be447971:;
		};
	};
	{
		auto expr = &((*((*(_230439_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be44b9ca:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _233115_f = *it;
			{
				if (((*(_233115_f))._field_Generics.len() == 0LL)) {
					if ((_1ad92a3c6_readyToCheckFn(_self_, _230439_s, &(_233115_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1be44b9ca:;
			++it;
			goto _iter_begin_1be44b9ca;
		}
		_iter_end_1be44b9ca:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ad92bb8b_checkStructIns(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns>* _234136_s) {
	{
		auto expr = &((*((*(_234136_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be44d49e:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _234215_f = *it;
			{
				_1ad92ab35_checkTypeMethod(_self_, _234136_s, &(_234215_f));
			}
			_iter_next_1be44d49e:;
			++it;
			goto _iter_begin_1be44d49e;
		}
		_iter_end_1be44d49e:;
	};
}



inline void _1ad92be44_checkTypeStruct(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _234737_s) {
	if ((*((*(_234737_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_234737_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_234737_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be44eea6:;
		if (it != expr_end) {
			jule::Ptr<_1ad718857_StructIns> _236015_ins = *it;
			{
				_1ad92bb8b_checkStructIns(_self_, &(_236015_ins));
			}
			_iter_next_1be44eea6:;
			++it;
			goto _iter_begin_1be44eea6;
		}
		_iter_end_1be44eea6:;
	};
}



inline void _1ad92c142_checkStructTypes(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be450e52:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _236615_s = *it;
			{
				_1ad92be44_checkTypeStruct(_self_, &(_236615_s));
			}
			_iter_next_1be450e52:;
			++it;
			goto _iter_begin_1be450e52;
		}
		_iter_end_1be450e52:;
	};
}



inline void _1ad92c3ea_checkStructInsOperators(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad718857_StructIns> _237144_s) {
	{
		auto expr = &((*(_237144_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be451ddc:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _237215_m = *it;
			{
				{
					auto &_match_expr{ (*(_237215_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1be45256e:;
						{
							(*(_237144_s))._field_Operators._field_Eq=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad935964_Eq);
							(*_237144_s.alloc)._field_Comparable=((*_237144_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1be452b68:;
						{
							(*(_237144_s))._field_Operators._field_Gt=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad935c2d_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1be452bce:;
						{
							(*(_237144_s))._field_Operators._field_GtEq=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad935ee7_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1be452c45:;
						{
							(*(_237144_s))._field_Operators._field_Lt=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad9362b1_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1be452cab:;
						{
							(*(_237144_s))._field_Operators._field_LtEq=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad93657a_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1be452d33:;
						{
							(*(_237144_s))._field_Operators._field_Shl=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad936bb8_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1be452daa:;
						{
							(*(_237144_s))._field_Operators._field_Shr=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad936e82_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1be452e32:;
						{
							(*(_237144_s))._field_Operators._field_Add=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad93724b_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1be452ea9:;
						{
							(*(_237144_s))._field_Operators._field_Sub=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad937515_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1be453031:;
						{
							(*(_237144_s))._field_Operators._field_Div=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad9377ce_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1be4530a8:;
						{
							(*(_237144_s))._field_Operators._field_Mul=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad937a98_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1be453130:;
						{
							(*(_237144_s))._field_Operators._field_Mod=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad937d62_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1be4531a7:;
						{
							(*(_237144_s))._field_Operators._field_BitAnd=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad93812b_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1be45322e:;
						{
							(*(_237144_s))._field_Operators._field_BitOr=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad9383e5_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1be4532a6:;
						{
							(*(_237144_s))._field_Operators._field_BitXor=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad9386ae_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1be45332d:;
						{
							(*(_237144_s))._field_Operators._field_Neg=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad938cec_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1be4533a5:;
						{
							(*(_237144_s))._field_Operators._field_Pos=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad9390b6_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1be45342c:;
						{
							(*(_237144_s))._field_Operators._field_BitNot=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad939380_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1be4534a4:;
						{
							(*(_237144_s))._field_Operators._field_AddAssign=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad9399bd_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1be45352b:;
						{
							(*(_237144_s))._field_Operators._field_SubAssign=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad939c87_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1be4535a3:;
						{
							(*(_237144_s))._field_Operators._field_DivAssign=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad93a051_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1be45362a:;
						{
							(*(_237144_s))._field_Operators._field_MulAssign=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad93a31a_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1be4536a2:;
						{
							(*(_237144_s))._field_Operators._field_ModAssign=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad93a5d4_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1be453729:;
						{
							(*(_237144_s))._field_Operators._field_ShlAssign=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad93a89d_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1be4537a1:;
						{
							(*(_237144_s))._field_Operators._field_ShrAssign=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad93ab67_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1be453828:;
						{
							(*(_237144_s))._field_Operators._field_BitOrAssign=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad93ae31_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1be4538a0:;
						{
							(*(_237144_s))._field_Operators._field_BitAndAssign=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad93b1ea_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1be453927:;
						{
							(*(_237144_s))._field_Operators._field_BitXorAssign=_1ad92b0db_checkStructInsOp(_self_, &(_237144_s), &(_237215_m), static__1ad93b4b4_BitXorAssign);
						}
					}
					_match_end_1be452849:;
				};
			}
			_iter_next_1be451ddc:;
			++it;
			goto _iter_begin_1be451ddc;
		}
		_iter_end_1be451ddc:;
	};
}



inline void _1ad92c6a3_precheckStructType(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7159ec_Struct>* _243540_s) {
	if ((*((*(_243540_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243540_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_243540_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ad718857_StructIns> _24468_ins = _1ad715e92_instance((*(_243540_s)));;
		(*(_24468_ins))._field_Checked=true;
		_1ad7162a0_appendInstance((*(_243540_s)).ptr(), &(_24468_ins));
		_1ad92b8d3_precheckStructIns(_self_, &(_24468_ins), nullptr);
	};
	_1ad92c3ea_checkStructInsOperators(_self_, (*((*(_243540_s))))._field_Instances[0LL]);
}



inline void _1ad92c8a1_precheckStructTypes(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be469a5e:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _245615_s = *it;
			{
				_1ad92c6a3_precheckStructType(_self_, &(_245615_s));
			}
			_iter_next_1be469a5e:;
			++it;
			goto _iter_begin_1be469a5e;
		}
		_iter_end_1be469a5e:;
	};
}



inline void _1ad92cb59_checkRets(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _246130_f) {
	if (_1ad7e7c44_IsVoid((*((*(_246130_f))))._field_Decl.ptr())) {
		return;;
	};
	_1ad93009b_missingRetChecker _24653_mrc = static__1ad930497_new();;
	jule::Bool _24663_ok = _1ad931674_check(&_24653_mrc, (*((*(_246130_f))))._field_Scope);;
	if ((!(_24663_ok))) {
		_1ad912c71_pushErr(_self_, (*(*((*(_246130_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1ad92cebc_checkFnInsSc(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _247233_f, jule::Ptr<_1ad8b860b_scopeChecker>* _247249_sc) {
	_1ad90d046_appendRetVars(&((*((*((*(_247249_sc))))._field_table))._field_Vars), _247233_f);
	_1ad90d376_appendParamVars(&((*(*((*(_247249_sc))))._field_table.alloc)._field_Vars), _247233_f);
	_1ad90d662_appendGenericTypeAliases(&((*(*((*(_247249_sc))))._field_table.alloc)._field_TypeAliases), _247233_f);
	_1ad8ca783_check((*(_247249_sc)), &((*((*((*(_247233_f))))._field_Decl))._field_Scope), &((*((*(_247233_f))))._field_Scope));
	if ((!(_1ad8bb213_stopped((*(_247249_sc)).ptr())))) {
		_1ad92cb59_checkRets(_self_, _247233_f);
	};
}



inline void _1ad92d330_checkFnInsCaller(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _248538_f, jule::Ptr<_1ad6ceb70_Token> _248553_caller) {
	if ((*((*((*(_248538_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1ad7eda91_SymTab> _24907_old = (*((*(*((*(_248538_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1ad912853_setCurrentFile((*((*((*(_248538_f))))._field_Decl))._field_sema, _24907_old);
	});;
	jule::Ptr<_1ad7eda91_SymTab> _24927_file = _1ad90d9d6_findFile(&((*(*((*((*(_248538_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_248538_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_24927_file != nullptr)) {
		_1ad912853_setCurrentFile((*((*((*(_248538_f))))._field_Decl))._field_sema, _24927_file);
	};
	jule::Ptr<_1ad8b860b_scopeChecker> _24977_sc = _1ad8ae190_newScopeChecker(&((*(*((*(_248538_f))))._field_Decl.alloc)._field_sema), (*(_248538_f)));;
	(*(_24977_sc))._field_calledFrom=_248553_caller;
	_1ad92cebc_checkFnInsSc(_self_.ptr(), _248538_f, &(_24977_sc));
	if (((*(*((*(_248538_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_248538_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_248538_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1ad92d5d8_checkFnIns(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _250732_f) {
	_1ad92d330_checkFnInsCaller(_self_, _250732_f, nullptr);
}



inline void _1ad92d891_checkFunc(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _251131_f) {
	if ((*((*(_251131_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_251131_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_251131_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be478199:;
		if (it != expr_end) {
			jule::Ptr<_1ad7ea84b_FnIns> _252115_ins = *it;
			{
				_1ad92d5d8_checkFnIns(_self_, &(_252115_ins));
			}
			_iter_next_1be478199:;
			++it;
			goto _iter_begin_1be478199;
		}
		_iter_end_1be478199:;
	};
}



inline void _1ad92db49_checkTestFn(_1ad90ed6c_sema* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _252632_f) {
	if ((*((*((*(_252632_f))))._field_Decl))._field_Public) {
		_1ad912c71_pushErr(_self_, (*(*((*(_252632_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_252632_f))))._field_Decl.alloc)._field_Unsafety || (!(_1ad7e7c44_IsVoid((*((*(_252632_f))))._field_Decl)))) || ((*(*((*(_252632_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_252632_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_252632_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_252632_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1ad912c71_pushErr(_self_, (*(*((*(_252632_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad9c51da_Sptr> _25447_sptr = _1ad9baed3_Sptr((*((*((*(_252632_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_25447_sptr == nullptr)) {
		_1ad912c71_pushErr(_self_, (*(*((*(_252632_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad718857_StructIns> _25513_s = _1ad9bc2c0_Struct((*(_25447_sptr))._field_Elem.ptr());;
	if (((_25513_s == nullptr) || (!(_1ad8e6947_isStdPackage(&((*((*((*((*(_25513_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1ad912c71_pushErr(_self_, (*(*((*(_252632_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ad9130d4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ad92de02_precheckFunc(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Ptr<_1ad7e778d_Fn>* _255934_f) {
	if ((*((*(_255934_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_255934_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_255934_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ad7ea84b_FnIns> _25708_ins = _1ad7e8c9a_instanceForce((*(_255934_f)));;
		{ jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>> &__jule_push_dest = (*((*(_255934_f))))._field_Instances; __jule_push_dest.push(_25708_ins); };
		jule::Bool _25724_ok = _1ad91dad4_reloadFnInsTypes(_self_, _25708_ins);;
		(*(_25708_ins))._field_reloaded=true;
		if ((_25724_ok && _1ad9d4b12_hasDirective(&((*((*(_255934_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1ad92db49_checkTestFn(_self_, &(_25708_ins));
		};
	};
}



inline void _1ad92e100_precheckFuncs(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be486dde:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> _258315_decl = *it;
			{
				{
					auto expr = &((*(_258315_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be48784b:;
					if (it != expr_end) {
						jule::Ptr<_1ad7e778d_Fn> _258416_m = *it;
						{
							_1ad92de02_precheckFunc(_self_, &(_258416_m));
						}
						_iter_next_1be48784b:;
						++it;
						goto _iter_begin_1be48784b;
					}
					_iter_end_1be48784b:;
				};
			}
			_iter_next_1be486dde:;
			++it;
			goto _iter_begin_1be486dde;
		}
		_iter_end_1be486dde:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be487be2:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _258815_decl = *it;
			{
				_1ad92de02_precheckFunc(_self_, &(_258815_decl));
			}
			_iter_next_1be487be2:;
			++it;
			goto _iter_begin_1be487be2;
		}
		_iter_end_1be487be2:;
	};
}



inline void _1ad92e2ed_checkFuncs(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be489133:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _259515_decl = *it;
			{
				_1ad92d891_checkFunc(_self_, &(_259515_decl));
			}
			_iter_next_1be489133:;
			++it;
			goto _iter_begin_1be489133;
		}
		_iter_end_1be489133:;
	};
}



inline void _1ad92e4eb_checkPackageTypes(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be489e25:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _260315_f = *it;
			{
				_1ad912853_setCurrentFile(_self_.ptr(), _260315_f);
				_1ad929eca_checkGlobals(_self_);
				_1ad92e100_precheckFuncs(_self_);
				_1ad92c8a1_precheckStructTypes(_self_);
			}
			_iter_next_1be489e25:;
			++it;
			goto _iter_begin_1be489e25;
		}
		_iter_end_1be489e25:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be48b9a4:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _261415_f = *it;
			{
				_1ad912853_setCurrentFile(_self_, _261415_f);
				_1ad92e2ed_checkFuncs(_self_);
				_1ad92c142_checkStructTypes(_self_);
			}
			_iter_next_1be48b9a4:;
			++it;
			goto _iter_begin_1be48b9a4;
		}
		_iter_end_1be48b9a4:;
	};
}



inline void _1ad92e6e9_setFileSemaFields(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be48d07c:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _262215_f = *it;
			{
				(*(_262215_f))._field_sema=_self_;
			}
			_iter_next_1be48d07c:;
			++it;
			goto _iter_begin_1be48d07c;
		}
		_iter_end_1be48d07c:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be48dbe8:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _262515_st = *it;
			{
				(*(_262515_st))._field_sema=_self_;
			}
			_iter_next_1be48dbe8:;
			++it;
			goto _iter_begin_1be48dbe8;
		}
		_iter_end_1be48dbe8:;
	};
}



inline void _1ad92e8e7_setSemaFields(jule::Ptr<_1ad90ed6c_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be48e8b9:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _263115_file = *it;
			{
				_1ad912853_setCurrentFile(_self_.ptr(), _263115_file);
				_1ad92e6e9_setFileSemaFields(_self_);
			}
			_iter_next_1be48e8b9:;
			++it;
			goto _iter_begin_1be48e8b9;
		}
		_iter_end_1be48e8b9:;
	};
}



inline void _1ad92eba0_check(jule::Ptr<_1ad90ed6c_sema> _self_, jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _263727_files) {
	(*(_self_))._field_files=(*(_263727_files));
	_1ad92e8e7_setSemaFields(_self_);
	_1ad915b64_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ad916659_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ad916060_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ad91625d_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ad928eda_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ad92e4eb_checkPackageTypes(_self_);
}







inline _1ad93009b_missingRetChecker static__1ad930497_new(void) {
	return _1ad93009b_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1ad9307a5_checkConditional(_1ad93009b_missingRetChecker* _self_, jule::Ptr<_1ad8b1ea6_Conditional> _268532_c) {
	{
		auto expr = &((*(_268532_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be495051:;
		if (it != expr_end) {
			jule::Ptr<_1ad8b178b_If> _268615_elif = *it;
			{
				if ((_268615_elif == nullptr)) {
					return false;;
				};
				if ((!(_1ad931333_checkScope(_self_, (*(_268615_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1be495051:;
			++it;
			goto _iter_begin_1be495051;
		}
		_iter_end_1be495051:;
	};
	return (((*_268532_c.alloc)._field_Default != nullptr) && _1ad931333_checkScope(_self_, (*(*(_268532_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1ad930ae6_checkMatch(_1ad93009b_missingRetChecker* _self_, jule::Ptr<_1ad8b5a9d_Match> _269726_m) {
	{
		auto expr = &((*(_269726_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be49711e:;
		if (it != expr_end) {
			jule::Ptr<_1ad8b65c6_Case> _269815_c = *it;
			{
				if ((_269815_c == nullptr)) {
					return false;;
				};
				jule::I64 _27024_n = (*(_self_))._field_breaked.len();;
				jule::Bool _27034_ok = _1ad931333_checkScope(_self_, (*(_269815_c))._field_Scope);;
				{
					
					if ((_27024_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1be498ae3:;
						{
							return false;;
						}
					}
					else if ((!(_27034_ok))) {
						_case_begin_1be498b7b:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1be498be2;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1be498be2:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_269815_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1be49711e;
						}
					}
					_match_end_1be498a7c:;
				};
			}
			_iter_next_1be49711e:;
			++it;
			goto _iter_begin_1be49711e;
		}
		_iter_end_1be49711e:;
	};
	return (((*_269726_m.alloc)._field_Default != nullptr) && _1ad931333_checkScope(_self_, (*(*(_269726_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1ad930ee2_checkInfIter(_1ad93009b_missingRetChecker* _self_, jule::Uintptr _272324_it, jule::Ptr<_1ad8b136d_Scope>* _272342_s) {
	jule::I64 _27243_n = (*(_self_))._field_breaked.len();;
	if (_1ad931333_checkScope(_self_, (*(_272342_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _27243_n);;
		return true;;
	};
	if ((_27243_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_27243_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1be4a238d:;
			if (it != expr_end) {
				jule::Uintptr _273011_addr = *it;
				{
					if ((_272324_it == _273011_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _27243_n);;
						return false;;
					};
				}
				_iter_next_1be4a238d:;
				++it;
				goto _iter_begin_1be4a238d;
			}
			_iter_end_1be4a238d:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _27243_n);;
	};
	return true;;
}



inline jule::Bool _1ad931333_checkScope(_1ad93009b_missingRetChecker* _self_, jule::Ptr<_1ad8b136d_Scope> _274126_s) {
	if ((_274126_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_274126_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be4a39bb:;
		if (it != expr_end) {
			jule::Any _274515_st = *it;
			{
				{
					auto &_match_expr{ _274515_st };
					
					if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1be4a468c:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1be4a446c:;
						{
							jule::Uintptr _27515_addr = (*(_274515_st.unsafe_cast_ptr<_1ad8b3914_BreakSt>()))._field_It;;
							if ((_27515_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_27515_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1be4a4725:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type32) {
						_case_begin_1be4a479c:;
						{
							jule::Ptr<_1ad8b22a3_InfIter> _27599_ii = _274515_st.unsafe_cast_ptr<_1ad8b22a3_InfIter>();;
							if (_1ad930ee2_checkInfIter(_self_, static_cast<jule::Uintptr>(_27599_ii), &((*(_27599_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1be4a4824:;
						{
							jule::Ptr<_1ad8b2759_WhileIter> _27649_wn = _274515_st.unsafe_cast_ptr<_1ad8b2759_WhileIter>();;
							if ((_1ad8b2b00_IsWhileNext(_27649_wn.ptr()) && ((*_27649_wn.alloc)._field_Expr == nullptr))) {
								if (_1ad930ee2_checkInfIter(_self_, static_cast<jule::Uintptr>(_27649_wn), &((*_27649_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1be4a489b:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1be4a4923:;
						{
							if (_1ad931333_checkScope(_self_, _274515_st.cast_ptr<_1ad8b136d_Scope>(&__jule_any_type19))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1be4a499a:;
						{
							{
								auto &_match_expr{ (*(_274515_st.cast_ptr<_1ad985b90_Data>(&__jule_any_type21)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type20) {
									_case_begin_1be4aa7d6:;
									{
										return true;;
									}
								}
								_match_end_1be4aa73c:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1be4a4a22:;
						{
							if (_1ad9307a5_checkConditional(_self_, _274515_st.cast_ptr<_1ad8b1ea6_Conditional>(&__jule_any_type31))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type44) {
						_case_begin_1be4a4a99:;
						{
							if (_1ad930ae6_checkMatch(_self_, _274515_st.cast_ptr<_1ad8b5a9d_Match>(&__jule_any_type44))) {
								return true;;
							};
						}
					}
					_match_end_1be4a44e4:;
				};
			}
			_iter_next_1be4a39bb:;
			++it;
			goto _iter_begin_1be4a39bb;
		}
		_iter_end_1be4a39bb:;
	};
	return false;;
}



inline jule::Bool _1ad931674_check(_1ad93009b_missingRetChecker* _self_, jule::Ptr<_1ad8b136d_Scope> _279621_s) {
	return _1ad931333_checkScope(_self_, _279621_s);;
}







inline jule::Bool _1ad933e90_IsInitialized(_1ad933a83_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1ad934226_IsTypeInferred(_1ad933a83_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1ad9344ac_untypedConstant(_1ad933a83_Var* _self_) {
	return (_1ad934226_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__1ad93505c_Dispose(jule::Ptr<_1ad7e778d_Fn> _1020_f) {
	return ((((((((((_1020_f != nullptr) && ((*_1020_f.alloc)._field_Owner != nullptr)) && (*(_1020_f))._field_Ident.equal("Dispose", 7)) && (!((*_1020_f.alloc)._field_Statically))) && (!((*_1020_f.alloc)._field_Unsafety))) && _1ad7e7c44_IsVoid(_1020_f)) && ((*_1020_f.alloc)._field_Generics.len() == 0LL)) && ((*_1020_f.alloc)._field_Params.len() == 1LL)) && (*((*(_1020_f))._field_Params[0LL]))._field_Mutable) && (!(_1ad7e669e_IsRef((*(_1020_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1ad935326_Str(jule::Ptr<_1ad7e778d_Fn> _2416_f) {
	if (((((((((((_2416_f == nullptr) || ((*(_2416_f))._field_Owner == nullptr)) || (!(*(_2416_f))._field_Ident.equal("Str", 3))) || (*(_2416_f))._field_Statically) || (*(_2416_f))._field_Unsafety) || _1ad7e7c44_IsVoid(_2416_f.ptr())) || ((*(_2416_f))._field_Generics.len() != 0LL)) || ((*(_2416_f))._field_Params.len() != 1LL)) || (*((*(_2416_f))._field_Params[0LL]))._field_Mutable) || _1ad7e669e_IsRef((*(_2416_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _387_ins = (*(_2416_f))._field_Instances[0LL];;
	jule::Ptr<_1ad9c16ae_Prim> _393_prim = _1ad9bac4c_Prim((*(_387_ins))._field_Result.ptr());;
	if ((_393_prim == nullptr)) {
		return false;;
	};
	return _1ad9c4b79_IsStr(_393_prim.ptr());;
}



inline jule::Bool static__1ad93569a_logical(jule::Ptr<_1ad7e778d_Fn>* _4621_f, jule::Str _4629_ident) {
	if (((((((((((((((*(_4621_f)) == nullptr) || ((*((*(_4621_f))))._field_Ident != _4629_ident)) || ((*((*(_4621_f))))._field_Owner == nullptr)) || ((*((*(_4621_f))))._field_Instances.len() == 0LL)) || (*((*(_4621_f))))._field_Statically) || (*((*(_4621_f))))._field_Unsafety) || _1ad7e7c44_IsVoid((*(_4621_f)).ptr())) || ((*((*(_4621_f))))._field_Generics.len() != 0LL)) || ((*((*(_4621_f))))._field_Params.len() != 2LL)) || (*((*((*(_4621_f))))._field_Params[0LL]))._field_Mutable) || _1ad7e669e_IsRef((*((*(_4621_f))))._field_Params[0LL].ptr())) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _637_ins = (*((*(_4621_f))))._field_Instances[0LL];;
	jule::Ptr<_1ad9c16ae_Prim> _643_prim = _1ad9bac4c_Prim((*(_637_ins))._field_Result.ptr());;
	if (((_643_prim == nullptr) || (!(_1ad9c48e3_IsBool(_643_prim.ptr()))))) {
		return false;;
	};
	return ((*_637_ins.alloc)._field_Owner == _1ad9bc2c0_Struct((*((*_637_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1ad935964_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _7215_f) {
	return static__1ad93569a_logical(&(_7215_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1ad935c2d_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _7715_f) {
	return static__1ad93569a_logical(&(_7715_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1ad935ee7_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _8217_f) {
	return static__1ad93569a_logical(&(_8217_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1ad9362b1_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _8715_f) {
	return static__1ad93569a_logical(&(_8715_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1ad93657a_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _9217_f) {
	return static__1ad93569a_logical(&(_9217_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1ad9368ee_result(jule::Ptr<_1ad7e778d_Fn>* _9620_f, jule::Str _9628_ident) {
	if (((((((((((((((*(_9620_f)) == nullptr) || ((*((*(_9620_f))))._field_Ident != _9628_ident)) || ((*((*(_9620_f))))._field_Owner == nullptr)) || ((*((*(_9620_f))))._field_Instances.len() == 0LL)) || (*((*(_9620_f))))._field_Statically) || (*((*(_9620_f))))._field_Unsafety) || _1ad7e7c44_IsVoid((*(_9620_f)).ptr())) || ((*((*(_9620_f))))._field_Generics.len() != 0LL)) || ((*((*(_9620_f))))._field_Params.len() != 2LL)) || (*((*((*(_9620_f))))._field_Params[0LL]))._field_Mutable) || _1ad7e669e_IsRef((*((*(_9620_f))))._field_Params[0LL].ptr())) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _1137_ins = (*((*(_9620_f))))._field_Instances[0LL];;
	return (_1ad9bc2c0_Struct((*(_1137_ins))._field_Result.ptr()) == (*_1137_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1ad936bb8_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _11816_f) {
	return static__1ad9368ee_result(&(_11816_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1ad936e82_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _12316_f) {
	return static__1ad9368ee_result(&(_12316_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1ad93724b_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _12816_f) {
	return static__1ad9368ee_result(&(_12816_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1ad937515_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _13316_f) {
	return static__1ad9368ee_result(&(_13316_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1ad9377ce_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _13816_f) {
	return static__1ad9368ee_result(&(_13816_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1ad937a98_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _14316_f) {
	return static__1ad9368ee_result(&(_14316_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1ad937d62_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _14816_f) {
	return static__1ad9368ee_result(&(_14816_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1ad93812b_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _15319_f) {
	return static__1ad9368ee_result(&(_15319_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1ad9383e5_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _15818_f) {
	return static__1ad9368ee_result(&(_15818_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1ad9386ae_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _16319_f) {
	return static__1ad9368ee_result(&(_16319_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1ad938a33_unary(jule::Ptr<_1ad7e778d_Fn>* _16719_f, jule::Str _16727_ident) {
	if (((((((((((((*(_16719_f)) == nullptr) || ((*((*(_16719_f))))._field_Ident != _16727_ident)) || ((*((*(_16719_f))))._field_Owner == nullptr)) || ((*((*(_16719_f))))._field_Instances.len() == 0LL)) || (*((*(_16719_f))))._field_Statically) || (*((*(_16719_f))))._field_Unsafety) || _1ad7e7c44_IsVoid((*(_16719_f)).ptr())) || ((*((*(_16719_f))))._field_Generics.len() != 0LL)) || ((*((*(_16719_f))))._field_Params.len() != 1LL)) || (*((*((*(_16719_f))))._field_Params[0LL]))._field_Mutable) || _1ad7e669e_IsRef((*((*(_16719_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _1827_ins = (*((*(_16719_f))))._field_Instances[0LL];;
	return (_1ad9bc2c0_Struct((*(_1827_ins))._field_Result.ptr()) == (*_1827_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1ad938cec_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _18716_f) {
	return static__1ad938a33_unary(&(_18716_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1ad9390b6_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _19216_f) {
	return static__1ad938a33_unary(&(_19216_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1ad939380_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _19719_f) {
	return static__1ad938a33_unary(&(_19719_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1ad939704_assign(jule::Ptr<_1ad7e778d_Fn>* _20120_f, jule::Str _20128_ident) {
	if (((((((((((((((*(_20120_f)) == nullptr) || ((*((*(_20120_f))))._field_Ident != _20128_ident)) || ((*((*(_20120_f))))._field_Owner == nullptr)) || ((*((*(_20120_f))))._field_Instances.len() == 0LL)) || (*((*(_20120_f))))._field_Statically) || (*((*(_20120_f))))._field_Unsafety) || (!(_1ad7e7c44_IsVoid((*(_20120_f)).ptr())))) || ((*((*(_20120_f))))._field_Generics.len() != 0LL)) || ((*((*(_20120_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20120_f))))._field_Params[0LL]))._field_Mutable))) || _1ad7e669e_IsRef((*((*(_20120_f))))._field_Params[0LL].ptr())) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1ad9399bd_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _22122_f) {
	return static__1ad939704_assign(&(_22122_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1ad939c87_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _22622_f) {
	return static__1ad939704_assign(&(_22622_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1ad93a051_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _23122_f) {
	return static__1ad939704_assign(&(_23122_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1ad93a31a_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _23622_f) {
	return static__1ad939704_assign(&(_23622_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1ad93a5d4_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _24122_f) {
	return static__1ad939704_assign(&(_24122_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1ad93a89d_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _24622_f) {
	return static__1ad939704_assign(&(_24622_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1ad93ab67_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _25122_f) {
	return static__1ad939704_assign(&(_25122_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1ad93ae31_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _25624_f) {
	return static__1ad939704_assign(&(_25624_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1ad93b1ea_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _26125_f) {
	return static__1ad939704_assign(&(_26125_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1ad93b4b4_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn> _26625_f) {
	return static__1ad939704_assign(&(_26625_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _1ad9721ba_typeCompatibilityChecker_eq(_1ad9721ba_typeCompatibilityChecker *_self_, _1ad9721ba_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1ad9726e8_pushErr(_1ad9721ba_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args) {
	_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _10723_fmt, _10743_args);
}



inline jule::Bool _1ad97297e_checkTrait(_1ad9721ba_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ad9b96c9_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad802ea2_Trait> _1157_trt = _1ad9bc556_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1167_ref = false;;
	{
		
		if ((_1ad9baed3_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1be4ec075:;
			{
				_1167_ref=true;
				(*(_self_))._field_src=(*(_1ad9baed3_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1ad9bc2c0_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1be4ec11e;
			}
		}
		else if ((_1ad9bc2c0_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1be4ec11e:;
			{
				jule::Ptr<_1ad718857_StructIns> _1264_s = _1ad9bc2c0_Struct((*(_self_))._field_src);;
				if ((!(_1ad71716e_IsImplements((*(_1264_s))._field_Decl.ptr(), _1157_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1167_ref)) && _1ad970c57_traitHasReferenceReceiver(&(_1157_trt)))) {
					_1ad9726e8_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bc556_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1be4ec196:;
			{
				jule::Ptr<_1ad802ea2_Trait> _1368_base = _1ad9bc556_Trait((*(_self_))._field_src);;
				if ((_1157_trt == _1368_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1be502256:;
				{
					auto expr = &((*(_1368_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be5024dc:;
					if (it != expr_end) {
						jule::Ptr<_1ad7159ec_Struct> _14111_s1 = *it;
						{
							{
								auto expr = &((*(_1157_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1be502de4:;
								if (it != expr_end) {
									jule::Ptr<_1ad7159ec_Struct> _14212_s2 = *it;
									{
										if ((_14111_s1 == _14212_s2)) {
											goto _iter_next_1be5024dc;
										};
									}
									_iter_next_1be502de4:;
									++it;
									goto _iter_begin_1be502de4;
								}
								_iter_end_1be502de4:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1be5024dc:;
						++it;
						goto _iter_begin_1be5024dc;
					}
					_iter_end_1be5024dc:;
				};
				{
					auto expr = &((*_1157_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be5032ce:;
					if (it != expr_end) {
						jule::Ptr<_1ad7e778d_Fn> _14916_m1 = *it;
						{
							jule::Ptr<_1ad7e778d_Fn> _1509_m2 = _1ad803b84_FindMethod(_1368_base, (*(_14916_m1))._field_Ident);;
							if ((_1509_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1ad7ea84b_FnIns> _1545_m1k = _1ad91c286_getTraitCheckFnKind((*(_self_))._field_s, &(_14916_m1));;
							jule::Ptr<_1ad7ea84b_FnIns> _1555_m2k = _1ad91c286_getTraitCheckFnKind((*(_self_))._field_s, &(_1509_m2));;
							if ((!(_1ad7eb7e7_equalTrait(_1545_m1k, &(_1555_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1be5032ce:;
						++it;
						goto _iter_begin_1be5032ce;
					}
					_iter_end_1be5032ce:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be4ebedc:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1be4ebe65:;
	};
}



inline jule::Bool _1ad972c15_checkPtr(_1ad9721ba_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ad9b96c9_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad9c89a2_Ptr> _1707_dest = _1ad9bb269_Ptr((*(_self_))._field_dest.ptr());;
	if (_1ad9c951e_IsUnsafe(_1707_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1ad9b8cd3_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ad972e9b_checkPrim(_1ad9721ba_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1ad9c16ae_Prim> _1794_prim = _1ad9bac4c_Prim((*(_self_))._field_dest);;
		if (((_1794_prim != nullptr) && _1ad9c4e10_IsAny(_1794_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1ad9b8cd3_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1ad973397_typeEnum(_1ad9721ba_typeCompatibilityChecker* _self_, jule::Ptr<_1ad806d63_TypeEnum>* _18725_e, jule::Ptr<_1ad9b8596_TypeKind>* _18744_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_18725_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be50979c:;
		if (it != expr_end) {
			jule::Ptr<_1ad80678b_TypeEnumItem> _18815_item = *it;
			{
				if (_1ad9b8cd3_Equal((*((*(_18815_item))._field_Kind))._field_Kind, (*(_18744_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1ad806d63_TypeEnum> _1928_ke = _1ad9bb786_TypeEnum((*((*(_18815_item))._field_Kind))._field_Kind);;
				if ((_1928_ke == nullptr)) {
					goto _iter_next_1be50979c;
				};
				if (_1ad973397_typeEnum(_self_, &(_1928_ke), _18744_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1be50979c:;
			++it;
			goto _iter_begin_1be50979c;
		}
		_iter_end_1be50979c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ad97362d_checkTypeEnum(_1ad9721ba_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1ad9b8cd3_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad806d63_TypeEnum> _2077_e = _1ad9bb786_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1ad973397_typeEnum(_self_, &(_2077_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1ad9738b4_check(_1ad9721ba_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1ad9bb269_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1ad972c15_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1ad9ba499_NilCompatible((*(_self_))._field_dest)) {
		if (_1ad9b96c9_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1ad9bac4c_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1be5100aa:;
			{
				__jule_func_result = _1ad972e9b_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bb786_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1be510143:;
			{
				__jule_func_result = _1ad97362d_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bc556_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1be50ea38:;
			{
				__jule_func_result = _1ad97297e_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be50e670:;
			{
				__jule_func_result = _1ad9b8cd3_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1be50dbe1:;
	};
}








inline jule::Bool _1ad974046_assignTypeChecker_eq(_1ad974046_assignTypeChecker *_self_, _1ad974046_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1ad97450d_pushErr(_1ad974046_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args) {
	_1ad912c71_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _24423_fmt, _24443_args);
}



inline jule::Bool _1ad974794_checkValidity(_1ad974046_assignTypeChecker* _self_) {
	jule::Bool _2497_valid = true;;
	{
		
		if ((_1ad9bc039_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be512c7d:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _2524_f = _1ad9bc039_Fn((*((*(_self_))._field_d))._field_Kind);;
				{
					
					if (_1ad7ebd14_IsBuiltin(_2524_f.ptr())) {
						_case_begin_1be5145ed:;
						{
							_1ad97450d_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((*((*(_2524_f))._field_Decl))._field_Binded) {
						_case_begin_1be514697:;
						{
							_1ad97450d_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if (((!((*((*(_2524_f))._field_Decl))._field_Statically)) && _1ad7e7eca_IsMethod((*(_2524_f))._field_Decl))) {
						_case_begin_1be51470d:;
						{
							_1ad97450d_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((((*((*(_2524_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2524_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1be514774:;
						{
							_1ad97450d_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1ad9130d4_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					_match_end_1be514510:;
				};
			}
		}
		else if ((_1ad9bca73_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be512d27:;
			{
				_1ad97450d_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2497_valid=false;
			}
		}
		_match_end_1be512be5:;
	};
	return _2497_valid;;
}



inline jule::Bool _1ad974a2a_checkConst(_1ad974046_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1ad9bac4c_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2813_kind = (*(_1ad9bac4c_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1ad87c416_IsFloat(_2813_kind)) {
			_case_begin_1be51aeb7:;
			{
				if ((!(_1ad971120_floatAssignable(&(_2813_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else if (_1ad87c0c5_IsInt(_2813_kind)) {
			_case_begin_1be51b050:;
			{
				if ((!(_1ad971bd1_intAssignable(_2813_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else {
			_case_begin_1be51ae51:;
			{
				return false;;
			}
		}
		_match_end_1be51ad1e:;
	};
	return true;;
}



inline jule::Bool _1ad974cb1_checkCompatibility(_1ad974046_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1be51d2d8:;
			{
				return false;;
			}
		}
		else if ((!(_1ad974794_checkValidity(_self_)))) {
			_case_begin_1be51d360:;
			{
				return false;;
			}
		}
		else if (_1ad974a2a_checkConst(_self_)) {
			_case_begin_1be51d3c6:;
			{
				return true;;
			}
		}
		else if ((_1ad9bb500_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be51d43c:;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _3108_dkind = (*(_self_))._field_dest;;
				if ((_1ad9bb500_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3108_dkind=(*((*(_1ad9bb500_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1ad9c16ae_Prim> _3144_prim = _1ad9bac4c_Prim((*(_self_))._field_dest);;
				if (((_3144_prim == nullptr) || _1ad9c4e10_IsAny(_3144_prim.ptr()))) {
					goto _match_end_1be51c5d4;
				};
				jule::Ptr<_1ad9b8596_TypeKind> _3198_dest = (*(*(_1ad9bb500_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind.alloc)._field_Kind;;
				return _1ad91abbe_checkTypeCompatibility((*(_self_))._field_s, &(_3198_dest), &(_3108_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1be51c5d4:;
	};
	return _1ad91b593_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1ad975047_check(_1ad974046_assignTypeChecker* _self_) {
	jule::Bool _3263_ok = _1ad974cb1_checkCompatibility(_self_);;
	if ((_3263_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1ad9d6394_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3263_ok;;
}







inline jule::Bool _1be53ce73_annotateConstraintElem(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1be53e628:;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _34912_elem = nullptr;;
				{
					
{
						_case_begin_1be542692:;
						{
							_34912_elem=(*(_1ad9bba1c_Arr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1be5425c6:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ad6e747e_ArrTypeDecl>()))._field_Elem;
				return _1ad977159_annotateConstraint(_self_, &(_34912_elem));;
			}
		}
		_match_end_1be53e5a1:;
	};
	return false;;
}

inline jule::Bool _1be53d21a_annotateConstraintElem(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1be545a4c:;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _34912_elem = nullptr;;
				{
					
{
						_case_begin_1be548e4b:;
						{
							_34912_elem=(*(_1ad9bbca3_Slc((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1be5489ea:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ad6e65e3_SlcTypeDecl>()))._field_Elem;
				return _1ad977159_annotateConstraint(_self_, &(_34912_elem));;
			}
		}
		_match_end_1be5459c5:;
	};
	return false;;
}

inline jule::Bool _1be545046_annotateConstraintElem(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1be54be71:;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _34912_elem = nullptr;;
				{
					
{
						_case_begin_1be550084:;
						{
							_34912_elem=(*(_1ad9bb269_Ptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1be54ee1e:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ad6e6bdc_PtrTypeDecl>()))._field_Elem;
				return _1ad977159_annotateConstraint(_self_, &(_34912_elem));;
			}
		}
		_match_end_1be54bde9:;
	};
	return false;;
}

inline jule::Bool _1be549127_annotateConstraintElem(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1be553076:;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _34912_elem = nullptr;;
				{
					
{
						_case_begin_1be556200:;
						{
							_34912_elem=(*(_1ad9baed3_Sptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1be556024:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ad6e625d_SptrTypeDecl>()))._field_Elem;
				return _1ad977159_annotateConstraint(_self_, &(_34912_elem));;
			}
		}
		_match_end_1be552eee:;
	};
	return false;;
}



inline jule::Bool _1ad976345_annotateConstraintMap(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _36642_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1be52592d:;
			{
				jule::Ptr<_1ad9c7352_Map> _3698_m = _1ad9bc7dc_Map((*(_36642_k)).ptr());;
				jule::Ptr<_1ad6e7bcc_MapTypeDecl> _3708_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ad6e7bcc_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3708_m2))._field_Key;
				if ((!(_1ad977159_annotateConstraint(_self_, &((*(_3698_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3708_m2.alloc)._field_Val;
				__jule_func_result = _1ad977159_annotateConstraint(_self_, &((*_3698_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1be5258a6:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ad976686_annotateConstraintTup(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _38142_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1be52b291:;
			{
				jule::Ptr<_1ad6e68e0_TupleTypeDecl> _3848_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ad6e68e0_TupleTypeDecl>();;
				jule::Ptr<_1ad9c67a2_Tuple> _3858_tup2 = _1ad9bca73_Tup((*(_38142_k)).ptr());;
				{
					auto expr = &((*(_3858_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be52dd10:;
					if (it != expr_end) {
						jule::Ptr<_1ad9b8596_TypeKind> _38616_t2 = *it;
						{
							{
								auto expr = &((*(_3848_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1be530e55:;
								if (it != expr_end) {
									jule::Ptr<_1ad6e51b3_TypeDecl> _38717_t = *it;
									{
										(*(_self_))._field_c=_38717_t;
										if (_1ad977159_annotateConstraint(_self_, &(_38616_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1be530e55:;
									++it;
									goto _iter_begin_1be530e55;
								}
								_iter_end_1be530e55:;
							};
						}
						_iter_next_1be52dd10:;
						++it;
						goto _iter_begin_1be52dd10;
					}
					_iter_end_1be52dd10:;
				};
			}
		}
		_match_end_1be52b219:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ad9769c7_annotateConstraintFn(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _39841_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1be531450:;
			{
				jule::Ptr<_1ad706d73_FnDecl> _4018_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ad706d73_FnDecl>();;
				jule::Ptr<_1ad7ea84b_FnIns> _4028_f = _1ad9bc039_Fn((*(_39841_k)).ptr());;
				{
					auto expr = &((*(_4028_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be533441:;
					if (it != expr_end) {
						jule::I64 _4039_i = it - expr->begin();
						jule::Ptr<_1ad7e96e6_ParamIns> _40316_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4018_pf))._field_Params[_4039_i]))._field_Kind;
							if (_1ad977159_annotateConstraint(_self_, &((*(_40316_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1be533441:;
						++it;
						_4039_i++;
						goto _iter_begin_1be533441;
					}
					_iter_end_1be533441:;
				};
				if (((*_4018_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4018_pf))._field_Result.alloc)._field_Kind;
					if (_1ad977159_annotateConstraint(_self_, &((*_4028_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1be5313c8:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ad976d18_annotateConstraintIdent(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _41944_k) {
	jule::Ptr<_1ad6e57bd_IdentTypeDecl> _4207_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1ad6e57bd_IdentTypeDecl>(&__jule_any_type77);;
	jule::Ptr<_1ad718857_StructIns> _4217_s = _1ad9bc2c0_Struct((*(_41944_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be536dd4:;
		if (it != expr_end) {
			jule::I64 _4227_i = it - expr->begin();
			jule::Ptr<_1ad7023bd_GenericDecl> _42210_g = *it;
			{
				if (((*(_42210_g))._field_Ident == (*(_4207_ident))._field_Ident)) {
					jule::Ptr<_1ad9b6de1_InsGeneric> _4249_fg = (*((*(_self_))._field_f))._field_Generics[_4227_i];;
					if ((_4249_fg != nullptr)) {
						return false;;
					};
					_1ad9774bc_pushGeneric(_self_, _41944_k, _4227_i);
					return true;;
				};
				if ((_4217_s == nullptr)) {
					goto _iter_next_1be536dd4;
				};
				jule::Ptr<_1ad6e51b3_TypeDecl> _4348_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4207_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be539975:;
					if (it != expr_end) {
						jule::Ptr<_1ad6e51b3_TypeDecl> _43516_ig = *it;
						{
							(*(_self_))._field_c=_43516_ig;
							{
								auto expr = &((*(_4217_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1be53a58b:;
								if (it != expr_end) {
									jule::Ptr<_1ad9b6de1_InsGeneric> _43717_sg = *it;
									{
										if (_1ad977159_annotateConstraint(_self_, &((*(_43717_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1be53a58b:;
									++it;
									goto _iter_begin_1be53a58b;
								}
								_iter_end_1be53a58b:;
							};
						}
						_iter_next_1be539975:;
						++it;
						goto _iter_begin_1be539975;
					}
					_iter_end_1be539975:;
				};
				(*(_self_))._field_c=_4348_c;
			}
			_iter_next_1be536dd4:;
			++it;
			_4227_i++;
			goto _iter_begin_1be536dd4;
		}
		_iter_end_1be536dd4:;
	};
	return false;;
}



inline jule::Bool _1ad977159_annotateConstraint(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _44839_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1be53a9dc:;
			{
				return _1ad976d18_annotateConstraintIdent(_self_, _44839_k);;
			}
		}
		_match_end_1be53a976:;
	};
	{
		
		if ((_1ad9bba1c_Arr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be53b8ab:;
			{
				return _1be53ce73_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1ad9bbca3_Slc((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be53b922:;
			{
				return _1be53d21a_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1ad9bb269_Ptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be53b988:;
			{
				return _1be545046_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1ad9baed3_Sptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be53b9ee:;
			{
				return _1be549127_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1ad9bc7dc_Map((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be53ba65:;
			{
				return _1ad976345_annotateConstraintMap(_self_, _44839_k);;
			}
		}
		else if ((_1ad9bc039_Fn((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be53bec7:;
			{
				return _1ad9769c7_annotateConstraintFn(_self_, _44839_k);;
			}
		}
		else if ((_1ad9bca73_Tup((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be53c04e:;
			{
				return _1ad976686_annotateConstraintTup(_self_, _44839_k);;
			}
		}
		else {
			_case_begin_1be53b7ac:;
			{
				return false;;
			}
		}
		_match_end_1be53b746:;
	};
}



inline void _1ad9774bc_pushGeneric(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _47332_k, jule::I64 _47346_i) {
	(*((*(_self_))._field_f))._field_Generics[_47346_i]=jule::new_ptr<_1ad9b6de1_InsGeneric>(_1ad9b6de1_InsGeneric{._field_Kind=(*(_47332_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr)});
	jule::Ptr<_1ad7023bd_GenericDecl> _4757_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_47346_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be55890b:;
		if (it != expr_end) {
			jule::Ptr<_1ad9b8596_TypeKind> _47615_ignored = *it;
			{
				if (((*(_4757_gd))._field_Ident == _1ad9b8992_Str(_47615_ignored.ptr()))) {
					(*_47615_ignored.alloc)._field_Kind=(*((*(_47332_k))))._field_Kind;
				};
			}
			_iter_next_1be55890b:;
			++it;
			goto _iter_begin_1be55890b;
		}
		_iter_end_1be55890b:;
	};
	if ((((*_4757_gd.alloc)._field_Constraint == nullptr) || ((*((*_4757_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4757_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1ad977159_annotateConstraint(_self_, _47332_k);
}



inline jule::Bool _1ad97780d_annotatePrim(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _48840_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ad979832_annotateAny(_self_, _48840_k);
	return __jule_func_result;;
}



inline jule::Bool _1ad977b4e_annotateArr(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _49239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad9c7ece_Arr> _4937_parr = _1ad9bba1c_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_4937_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad9c7ece_Arr> _4977_arr = _1ad9bba1c_Arr((*(_49239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_4937_parr))._field_Elem));
	__jule_func_result = _1ad979b73_annotateKind(_self_, &((*(_4977_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ad977e90_annotateSlc(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _50239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad9c5bad_Slc> _5037_pslc = _1ad9bbca3_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5037_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad9c5bad_Slc> _5077_slc = _1ad9bbca3_Slc((*(_50239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5037_pslc))._field_Elem));
	__jule_func_result = _1ad979b73_annotateKind(_self_, &((*(_5077_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ad97838b_checkMapKey(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _51238_k, jule::Ptr<_1ad9b8596_TypeKind>* _51258_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad9b8596_TypeKind>* _5137_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_51238_k;
	__jule_func_result=_1ad979b73_annotateKind(_self_, _51258_ck);
	(*(_self_))._field_k=_5137_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ad9786cc_annotateMap(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _52039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad9c7352_Map> _5217_pmap = _1ad9bc7dc_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5217_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad9c7352_Map> _5257_m = _1ad9bc7dc_Map((*(_52039_k)).ptr());;
	__jule_func_result = (_1ad97838b_checkMapKey(_self_, (&((*(_5217_pmap))._field_Key)), &((*(_5257_m))._field_Key)) && _1ad97838b_checkMapKey(_self_, (&((*(_5217_pmap))._field_Val)), &((*_5257_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1ad978a1d_annotateFn(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _53038_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad7ea84b_FnIns> _5317_pf = _1ad9bc039_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5317_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _5357_f = _1ad9bc039_Fn((*(_53038_k)).ptr());;
	{
		
		if (((*(_5317_pf))._field_Params.len() != (*(_5357_f))._field_Params.len())) {
			_case_begin_1be5672bb:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1ad7e7c44_IsVoid((*(_5317_pf))._field_Decl.ptr()) != _1ad7e7c44_IsVoid((*(_5357_f))._field_Decl))) {
			_case_begin_1be567354:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1be567222:;
	};
	__jule_func_result=true;
	jule::Ptr<_1ad9b8596_TypeKind>* _5447_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5357_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5691e1:;
		if (it != expr_end) {
			jule::I64 _5458_i = it - expr->begin();
			jule::Ptr<_1ad7e96e6_ParamIns> _54515_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5317_pf))._field_Params[_5458_i]))._field_Kind));
				__jule_func_result=(_1ad979b73_annotateKind(_self_, &((*(_54515_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1be5691e1:;
			++it;
			_5458_i++;
			goto _iter_begin_1be5691e1;
		}
		_iter_end_1be5691e1:;
	};
	if ((!(_1ad7e7c44_IsVoid((*(_5317_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5317_pf))._field_Result));
		__jule_func_result=(_1ad979b73_annotateKind(_self_, &((*_5357_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5447_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ad978d5e_annotatePtr(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _55939_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad9c89a2_Ptr> _5607_pptr = _1ad9bb269_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5607_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad9c89a2_Ptr> _5647_ptr = _1ad9bb269_Ptr((*(_55939_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5607_pptr))._field_Elem));
	__jule_func_result = _1ad979b73_annotateKind(_self_, &((*(_5647_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ad9791a0_annotateSptr(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _56940_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad9c51da_Sptr> _5707_ssptr = _1ad9baed3_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5707_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad9c51da_Sptr> _5747_sptr = _1ad9baed3_Sptr((*(_56940_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5707_ssptr))._field_Elem));
	__jule_func_result = _1ad979b73_annotateKind(_self_, &((*(_5747_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1ad9794e1_annotateStruct(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _57942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad718857_StructIns> _5807_s = _1ad9bc2c0_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5807_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad718857_StructIns> _5847_s2 = _1ad9bc2c0_Struct((*(_57942_k)).ptr());;
	if (((*(_5807_s))._field_Generics.len() != (*(_5847_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5807_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5731b7:;
		if (it != expr_end) {
			jule::I64 _5888_i = it - expr->begin();
			jule::Ptr<_1ad9b6de1_InsGeneric> _58815_g = *it;
			{
				jule::Ptr<_1ad9b6de1_InsGeneric> _5898_g2 = (*(_5847_s2))._field_Generics[_5888_i];;
				if (_1ad9b8cd3_Equal((*(_58815_g))._field_Kind, (*(_5898_g2))._field_Kind)) {
					goto _iter_next_1be5731b7;
				};
				(*(_self_))._field_k=(&((*_58815_g.alloc)._field_Kind));
				if ((!(_1ad979b73_annotateKind(_self_, &((*_5898_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be5731b7:;
			++it;
			_5888_i++;
			goto _iter_begin_1be5731b7;
		}
		_iter_end_1be5731b7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ad979832_annotateAny(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _60139_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6023_kind = _1ad9b8992_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be576781:;
		if (it != expr_end) {
			jule::I64 _6037_i = it - expr->begin();
			jule::Ptr<_1ad7023bd_GenericDecl> _60310_g = *it;
			{
				if ((_6023_kind != (*(_60310_g))._field_Ident)) {
					goto _iter_next_1be576781;
				};
				jule::Ptr<_1ad9b6de1_InsGeneric> _6074_t = (*((*(_self_))._field_f))._field_Generics[_6037_i];;
				{
					
					if ((_6074_t == nullptr) || ((*(_6074_t))._field_Kind == nullptr)) {
						_case_begin_1be5780ce:;
						{
							_1ad9774bc_pushGeneric(_self_, _60139_k, _6037_i);
						}
					}
					else if ((!(_1ad9b8cd3_Equal((*(_6074_t))._field_Kind, (*(_60139_k)))))) {
						_case_begin_1be578178:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1be577e8b:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_60139_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1be576781:;
			++it;
			_6037_i++;
			goto _iter_begin_1be576781;
		}
		_iter_end_1be576781:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ad979b73_annotateKind(_1ad97591b_dynamicTypeAnnotation* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _62240_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1ad979832_annotateAny(_self_, _62240_k)) {
			_case_begin_1be57a71e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bac4c_Prim((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be57a785:;
			{
				__jule_func_result = _1ad97780d_annotatePrim(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bba1c_Arr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be57a7eb:;
			{
				__jule_func_result = _1ad977b4e_annotateArr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bbca3_Slc((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be57a873:;
			{
				__jule_func_result = _1ad977e90_annotateSlc(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bc7dc_Map((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be57aa2c:;
			{
				__jule_func_result = _1ad9786cc_annotateMap(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bc039_Fn((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be57aa93:;
			{
				__jule_func_result = _1ad978a1d_annotateFn(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bb269_Ptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be57ab09:;
			{
				__jule_func_result = _1ad978d5e_annotatePtr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ad9baed3_Sptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be57ab70:;
			{
				__jule_func_result = _1ad9791a0_annotateSptr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bc2c0_Struct((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be57abe7:;
			{
				__jule_func_result = _1ad9794e1_annotateStruct(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be57a5ed:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1be57a17a:;
	};
}



inline jule::Bool _1ad979e09_annotate(_1ad97591b_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1ad979b73_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}







inline void _1ad97ad1c_pushErrToken(_1ad97a778_fnCallArgChecker* _self_, jule::Ptr<_1ad6ceb70_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args) {
	_1ad912c71_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _66728_token, _66750_fmt, _66770_args);
}



inline void _1ad97b180_pushErr(_1ad97a778_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args) {
	_1ad97ad1c_pushErrToken(_self_, (*(_self_))._field_errorToken, _67123_fmt, _67143_args);
}



inline jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>> _1ad97b416_getParams(_1ad97a778_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1ad7e6418_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1ad97b757_checkCounts(_1ad97a778_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>* _68428_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6857_n = (*(_68428_params)).len();;
	if (((_6857_n > 0LL) && _1ad7e6418_IsSelf((*((*(_68428_params))[0LL]))._field_Decl.ptr()))) {
		(_6857_n)--;
	};
	jule::I64 _6907_diff = (_6857_n - (*(_self_))._field_args.len());;
	jule::Str _6917_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_6907_diff == 0LL)) {
			_case_begin_1be587660:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6857_n > 0LL) && (*(*((*(_68428_params))[(_6857_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1be58730d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6907_diff < 0LL) || (_6907_diff > (*(_68428_params)).len()))) {
			_case_begin_1be587374:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1be587297:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1be587220:;
	};
	_1dd0b6912_Builder _7027_err = static__1dd0b74d4_New(32LL);;
	_1dd0c0dd3_WriteStr(&_7027_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_1dd0c0dd3_WriteStr(&_7027_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _68428_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be586c14:;
		if (it != expr_end) {
			jule::I64 _7057_i = it - expr->begin();
			jule::Ptr<_1ad7e96e6_ParamIns> *_70510_p = it;
			{
				_1dd0c0dd3_WriteStr(&_7027_err, _1ad9b8992_Str((*((*(_70510_p))))._field_Kind.ptr()));
				if ((((*(_68428_params)).len() - _7057_i) > 1LL)) {
					_1dd0c0dd3_WriteStr(&_7027_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1be586c14:;
			++it;
			_7057_i++;
			goto _iter_begin_1be586c14;
		}
		_iter_end_1be586c14:;
	};
	_1dd0c118b_WriteByte(&_7027_err, ')');
	_1ad97b180_pushErr(_self_, _6917_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1dd0c16ca_Str(&_7027_err), &__jule_any_type5); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ad97bc0d_checkArg(_1ad97a778_fnCallArgChecker* _self_, jule::Ptr<_1ad7e96e6_ParamIns>* _71629_p, jule::Ptr<_1ad985b90_Data>* _71648_arg, jule::Ptr<_1ad6ceb70_Token>* _71665_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1ad7ecb28_parameterUsesGenerics(_71629_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_71629_p))))._field_Decl))._field_Variadic)) && _1ad984364_isGoodValueToInfer(_71648_arg));
		if (__jule_func_result) {
			_1ad97591b_dynamicTypeAnnotation _7219_dta = _1ad97591b_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_71629_p)), ._field_a=(*(_71648_arg)), ._field_errorToken=(*(_71665_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1ad979e09_annotate(&_7219_dta);
		};
		if ((!(__jule_func_result))) {
			_1ad97ad1c_pushErrToken(_self_, (*(_71665_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1ad91e9e7_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Kind), _71648_arg, _71665_errorToken)) {
		__jule_func_result = _1ad91a262_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Kind), _71648_arg, (*(_71665_errorToken)), _1ad98ae4d_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1ad97c109_push(_1ad97a778_fnCallArgChecker* _self_, jule::Ptr<_1ad7e96e6_ParamIns>* _74525_p, jule::Ptr<_1ad6e94e7_Expr> _74543_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad9b8596_TypeKind> _7467_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7473_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_74525_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_74525_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_74525_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1ad985b90_Data> _7557_d = _1ad9a672c_evalExpr((*(_self_))._field_e, _74543_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7467_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7473_oldImmut;
	if ((_7557_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ad97bc0d_checkArg(_self_, _74525_p, &(_7557_d), &((*(_74543_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7557_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1ad97c505_pushVariadic(_1ad97a778_fnCallArgChecker* _self_, jule::Ptr<_1ad7e96e6_ParamIns>* _76933_p, jule::I64 _76951_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7717_variadiced = false;;
	jule::Bool _7723_more = ((_76951_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1ad7dc761_SliceExprModel> _7737_model = jule::new_ptr<_1ad7dc761_SliceExprModel>(_1ad7dc761_SliceExprModel{._field_ElemKind=(*((*(_76933_p))))._field_Kind, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1ad9b8596_TypeKind> _7777_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1ad9b8596_TypeKind> _7847_oldKind = (*((*(_76933_p))))._field_Kind;;
	(*((*(_76933_p))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>((*(*((*(_76933_p))))._field_Kind.alloc));
	(*(*((*(_76933_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_76933_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_76933_p))))._field_Kind=_7847_oldKind;
	});;
	for (; (_76951_i < (*(_self_))._field_args.len()); (_76951_i)++) {
		{
			jule::Ptr<_1ad6e94e7_Expr> _7938_arg = (*(_self_))._field_args[_76951_i];;
			{
				auto &_match_expr{ (*(_7938_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type78) {
					_case_begin_1be59c8a6:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad9c5bad_Slc>(_1ad9c5bad_Slc{._field_Elem=(*((*(_76933_p))))._field_Kind}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1be59cba3:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_76933_p))))._field_Kind;
					}
				}
				_match_end_1be59cb3c:;
			};
			jule::Ptr<_1ad985b90_Data> _8068_d = _1ad9a609a_eval((*(_self_))._field_e, _7938_arg);;
			if ((_8068_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1be59bd39;
			};
			if ((*((*(_8068_d))._field_Kind))._field_Variadic) {
				_7717_variadiced=true;
				(*(*((*(_76933_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1ad97bc0d_checkArg(_self_, _76933_p, &(_8068_d), &((*(_7938_arg))._field_Token)));
				(*(*((*(_76933_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8068_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type79) {
						_case_begin_1be5a1190:;
						{
							_7737_model=(*(_8068_d))._field_Model.unsafe_cast_ptr<_1ad7dc761_SliceExprModel>();
							(*(_7737_model))._field_ElemKind=(*((*(_76933_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1be5a43d5:;
						{
							_7737_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8068_d))._field_Model); };
						}
					}
					_match_end_1be5a436e:;
				};
				(_76951_i)++;
				goto _iter_end_1be59bd39;
			};
			__jule_func_result=(__jule_func_result && _1ad97bc0d_checkArg(_self_, _76933_p, &(_8068_d), &((*_7938_arg.alloc)._field_Token)));
			(*(_7737_model))._field_Elems=jule::append((*_7737_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8068_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1be59bd39:;
	}
	_iter_end_1be59bd39:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7777_old;
	if ((_7717_variadiced && _7723_more)) {
		_1ad97ad1c_pushErrToken(_self_, (*((*(_self_))._field_args[_76951_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7737_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7737_model, &__jule_any_type79)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ad97c846_checkArgs(_1ad97a778_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>* _85030_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8513_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _8557_i = 0LL;;
	if ((((*(_85030_params)).len() > 0LL) && _1ad7e6418_IsSelf((*((*(_85030_params))[0LL]))._field_Decl.ptr()))) {
		(_8557_i)++;
	};
	_julec_label_1be5ac61e:;
	while ((_8557_i < (*(_85030_params)).len())) {
		{
			jule::Ptr<_1ad7e96e6_ParamIns> _8628_p = (*(_85030_params))[_8557_i];;
			{
				
				if ((*(*(_8628_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1be5ae0c1:;
					{
						__jule_func_result=(_1ad97c505_pushVariadic(_self_, &(_8628_p), _8557_i) && __jule_func_result);
						goto _iter_end_1be5ac8b6;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8557_i)) {
					_case_begin_1be5ae1ae:;
					{
						__jule_func_result=false;
						goto _iter_end_1be5ac8b6;
					}
				}
				else {
					_case_begin_1be5adc08:;
					{
						__jule_func_result=(_1ad97c109_push(_self_, &(_8628_p), (*(_self_))._field_args[_8557_i]) && __jule_func_result);
					}
				}
				_match_end_1be5adb81:;
			};
			(_8557_i)++;
		}
	_iter_next_1be5ac8b6:;
	}
	_iter_end_1be5ac8b6:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8513_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ad97cacc_checkDynamicTypeAnnotation(_1ad97a778_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5b0e08:;
		if (it != expr_end) {
			jule::Ptr<_1ad9b6de1_InsGeneric> _88210_g = *it;
			{
				if ((_88210_g == nullptr)) {
					_1ad97b180_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be5b0e08:;
			++it;
			goto _iter_begin_1be5b0e08;
		}
		_iter_end_1be5b0e08:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ad97cd63_check(_1ad97a778_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>> _8927_params = _1ad97b416_getParams(_self_);;
	__jule_func_result=_1ad97b757_checkCounts(_self_, &(_8927_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1ad97c846_checkArgs(_self_, &(_8927_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1ad97cacc_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1ad97dc43_pushErr(_1ad97d6b0_structLitChecker* _self_, jule::Ptr<_1ad6ceb70_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args) {
	_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), _93023_token, _93045_fmt, _93065_args);
}



inline void _1ad97e0a6_pushSuggestion(_1ad97d6b0_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args) {
	_1ad9882ad_pushSuggestion((*(_self_))._field_e.ptr(), _93530_fmt, _93550_args);
}



inline void _1ad97e4c4_pushMatch(_1ad97d6b0_structLitChecker* _self_, jule::Ptr<_1ad717ca7_FieldIns>* _93930_f, jule::Ptr<_1ad985b90_Data>* _93949_d, jule::Ptr<_1ad6ceb70_Token>* _93964_errorToken) {
	;
	jule::Bool _9453_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_93930_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1ad91e9e7_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9453_mutable, false, &((*((*(_93930_f))))._field_Kind), _93949_d, _93964_errorToken)) {
		_1ad91a262_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_93930_f))))._field_Kind), _93949_d, (*(_93964_errorToken)), _1ad98ae4d_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1ad7dacae_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1ad7dacae_StructArgExprModel>(_1ad7dacae_StructArgExprModel{._field_Token=(*(_93964_errorToken)), ._field_Field=(*(_93930_f)), ._field_Expr=(*(_93949_d))})); };
}



inline void _1ad97e837_checkPair(_1ad97d6b0_structLitChecker* _self_, jule::Ptr<_1ad6edc16_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>* _95862_exprs) {
	jule::Ptr<_1ad717ca7_FieldIns> _9607_f = _1ad719c43_FindField((*(_self_))._field_s.ptr(), (*((*((*(_95830_pair))))._field_Field))._field_Kind);;
	if ((_9607_f == nullptr)) {
		_1ad97dc43_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((!(_1ad9134d0_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9607_f))._field_Decl))._field_Public, (*(*(_9607_f))._field_Decl.alloc)._field_Token)))) {
		_1ad97dc43_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1ad97e0a6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1be5bc3a9:;
	{
		auto expr = _95862_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5bd377:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e94e7_Expr> _97215_expr = *it;
			{
				{
					auto &_match_expr{ (*(_97215_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1be5bdd6c:;
						{
							jule::Ptr<_1ad6edc16_FieldExprPair> _9759_dpair = (*(_97215_expr))._field_Kind.unsafe_cast_ptr<_1ad6edc16_FieldExprPair>();;
							{
								
								if (((*(_95830_pair)) == _9759_dpair)) {
									_case_begin_1be5c204b:;
									{
										goto _iter_end_1be5bd377;
									}
								}
								else if (((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind == (*(*(_9759_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1be5c20e5:;
									{
										_1ad97dc43_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
										goto _iter_end_1be5bd377;
									}
								}
								_match_end_1be5c1ed5:;
							};
						}
					}
					_match_end_1be5bdce5:;
				};
			}
			_iter_next_1be5bd377:;
			++it;
			goto _iter_begin_1be5bd377;
		}
		_iter_end_1be5bd377:;
	};
	jule::Ptr<_1ad9b8596_TypeKind> _9867_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9867_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9607_f))._field_Kind;
	jule::Ptr<_1ad985b90_Data> _9907_d = _1ad9a672c_evalExpr((*(_self_))._field_e, (*((*(_95830_pair))))._field_Expr);;
	if ((_9907_d == nullptr)) {
		return;;
	};
	_1ad97e4c4_pushMatch(_self_, &(_9607_f), &(_9907_d), &((*((*(_95830_pair))))._field_Field));
}



inline jule::Bool _1ad97eb78_readyExprs(_1ad97d6b0_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>* _99731_exprs) {
	jule::Bool _9987_ok = true;;
	{
		auto expr = _99731_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5c6a45:;
		if (it != expr_end) {
			jule::I64 _9998_i = it - expr->begin();
			jule::Ptr<_1ad6e94e7_Expr> _99915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_99915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1be5c7738:;
						{
							jule::Ptr<_1ad700322_KeyValPair> _10029_pair = (*(_99915_expr))._field_Kind.unsafe_cast_ptr<_1ad700322_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10029_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type41) {
									_case_begin_1be5ca7a2:;
									{
										goto _match_end_1be5c9d23;
									}
								}
								else {
									_case_begin_1be5c9d89:;
									{
										_1ad97dc43_pushErr(_self_, (*(_10029_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_9987_ok=false;
										goto _iter_next_1be5c6a45;
									}
								}
								_match_end_1be5c9d23:;
							};
							(*((*(_99731_exprs))[_9998_i]))._field_Kind=jule::Any(jule::new_ptr<_1ad6edc16_FieldExprPair>(_1ad6edc16_FieldExprPair{._field_Field=(*((*(_10029_pair))._field_Key))._field_Token, ._field_Expr=(*_10029_pair.alloc)._field_Val}), &__jule_any_type80);
						}
					}
					_match_end_1be5c76b1:;
				};
			}
			_iter_next_1be5c6a45:;
			++it;
			_9998_i++;
			goto _iter_begin_1be5c6a45;
		}
		_iter_end_1be5c6a45:;
	};
	return _9987_ok;;
}



inline void _1ad97ee31_check(_1ad97d6b0_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>* _102126_exprs) {
	if (((*(_102126_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1ad97eb78_readyExprs(_self_, _102126_exprs)))) {
		return;;
	};
	jule::Bool _10287_paired = false;;
	{
		auto expr = _102126_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5cd92b:;
		if (it != expr_end) {
			jule::I64 _10298_i = it - expr->begin();
			jule::Ptr<_1ad6e94e7_Expr> _102915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_102915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1be5d47de:;
						{
							jule::Ptr<_1ad6edc16_FieldExprPair> _10329_pair = (*(_102915_expr))._field_Kind.unsafe_cast_ptr<_1ad6edc16_FieldExprPair>();;
							if (((_10298_i > 0LL) && (!(_10287_paired)))) {
								_1ad97dc43_pushErr(_self_, (*(_10329_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10287_paired=true;
							_1ad97e837_checkPair(_self_, &(_10329_pair), _102126_exprs);
						}
					}
					else {
						_case_begin_1be5cead6:;
						{
							if (_10287_paired) {
								_1ad97dc43_pushErr(_self_, (*(_102915_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10298_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1ad97dc43_pushErr(_self_, (*_102915_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1be5cd92b;
							};
							jule::Ptr<_1ad717ca7_FieldIns> _10479_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10298_i];;
							if ((!(_1ad9134d0_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10479_field))._field_Decl))._field_Public, (*(*(_10479_field))._field_Decl.alloc)._field_Token)))) {
								_1ad97dc43_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1ad97e0a6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1ad9b8596_TypeKind> _10559_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10559_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10479_field.alloc)._field_Kind;
							jule::Ptr<_1ad985b90_Data> _10599_d = _1ad9a672c_evalExpr((*(_self_))._field_e, _102915_expr);;
							if ((_10599_d == nullptr)) {
								goto _iter_next_1be5cd92b;
							};
							_1ad97e4c4_pushMatch(_self_, &(_10479_field), &(_10599_d), &((*_102915_expr.alloc)._field_Token));
						}
					}
					_match_end_1be5cea70:;
				};
			}
			_iter_next_1be5cd92b:;
			++it;
			_10298_i++;
			goto _iter_begin_1be5cd92b;
		}
		_iter_end_1be5cd92b:;
	};
	if ((!(_10287_paired))) {
		jule::I64 _10704_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10718_diff = (_10704_n - (*(_102126_exprs)).len());;
		{
			
			if ((_10718_diff <= 0LL)) {
				_case_begin_1be5d8408:;
				{
					return;;
				}
			}
			_match_end_1be5d82d7:;
		};
		_1dd0b6912_Builder _10778_idents = static__1dd0b74d4_New(32LL);;
		for (; (_10718_diff > 0LL); (_10718_diff)--) {
			{
				_1dd0c0dd3_WriteStr(&_10778_idents, jule::Str::lit(", ", 2));
				_1dd0c0dd3_WriteStr(&_10778_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10704_n - _10718_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1be5d8b56:;
		}
		_iter_end_1be5d8b56:;;
		_1ad97dc43_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_1dd0c217b_Buf(&_10778_idents).slice(2LL)), &__jule_any_type5); __jule_collection; }));
	};
}








inline jule::Bool _1ad980492_rangeChecker_eq(_1ad980492_rangeChecker *_self_, _1ad980492_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1ad933a83_Var> _1ad9809ae_buildVar(_1ad980492_rangeChecker* _self_, jule::Ptr<_1ad70802d_VarDecl>* _109725_decl) {
	jule::Ptr<_1ad933a83_Var> _10987_v = _1ad8d5040_buildVar((*(_109725_decl)));;
	return _10987_v;;
}



inline void _1ad980bac_setSizeKey(_1ad980492_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ad6d2557_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1ad9809ae_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
}



inline void _1ad9810ca_checkRangeExprValidity(_1ad980492_rangeChecker* _self_, jule::Ptr<_1ad985b90_Data>* _111643_d, jule::Ptr<_1ad933a83_Var>* _111654_key, jule::Ptr<_1ad9b8596_TypeKind>* _111670_k) {
	jule::Bool _11177__mut = (*((*(_111654_key))))._field_Mutable;;
	if ((_11177__mut && (!(_1ad9b9e7c_Mutable((*(_111670_k)).ptr()))))) {
		_11177__mut=false;
	};
	_1ad91e9e7_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11177__mut, (*((*(_111654_key))))._field_Reference, &((*((*((*(_111654_key))))._field_Kind))._field_Kind), _111643_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1ad9812c8_checkSlice(_1ad980492_rangeChecker* _self_) {
	_1ad980bac_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ad6d2557_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ad9c5bad_Slc> _11357_slc = _1ad9bbca3_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ad9809ae_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=(*(_11357_slc))._field_Elem});
	_1ad9810ca_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11357_slc.alloc)._field_Elem));
}



inline void _1ad9814c6_checkArray(_1ad980492_rangeChecker* _self_) {
	_1ad980bac_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ad6d2557_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ad9c7ece_Arr> _11487_arr = _1ad9bba1c_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ad9809ae_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=(*(_11487_arr))._field_Elem});
	_1ad9810ca_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11487_arr.alloc)._field_Elem));
}



inline void _1ad9816c4_checkMapKeyA(_1ad980492_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1ad6d2557_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ad9c7352_Map> _11607_m = _1ad9bc7dc_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1ad9809ae_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=(*(_11607_m))._field_Key});
	jule::Ptr<_1ad985b90_Data> _11647_d = jule::new_ptr<_1ad985b90_Data>((*(*(_self_))._field_d.alloc));;
	(*_11647_d.alloc)._field_Kind=(*_11607_m.alloc)._field_Key;
	_1ad9810ca_checkRangeExprValidity(_self_, &(_11647_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11607_m.alloc)._field_Key));
}



inline void _1ad9818c2_checkMapKeyB(_1ad980492_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ad6d2557_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1ad9c7352_Map> _11757_m = _1ad9bc7dc_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1ad9809ae_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=(*(_11757_m))._field_Val});
	jule::Ptr<_1ad985b90_Data> _11797_d = jule::new_ptr<_1ad985b90_Data>((*(*(_self_))._field_d.alloc));;
	(*_11797_d.alloc)._field_Kind=(*_11757_m.alloc)._field_Val;
	_1ad9810ca_checkRangeExprValidity(_self_, &(_11797_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11757_m.alloc)._field_Val));
}



inline void _1ad981ac0_checkMap(_1ad980492_rangeChecker* _self_) {
	_1ad9816c4_checkMapKeyA(_self_);
	_1ad9818c2_checkMapKeyB(_self_);
}



inline void _1ad981cbd_checkStr(_1ad980492_rangeChecker* _self_) {
	_1ad980bac_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1ad6d2557_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ad9809ae_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_Kind;
}



inline void _1ad981ebb_checkComptime(_1ad980492_rangeChecker* _self_) {
	_1ad980bac_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1ad912c71_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1ad912c71_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1ad6d2557_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1ad9809ae_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1ad982252_checkComptimeRange(_1ad980492_rangeChecker* _self_) {
	jule::Ptr<_1ad87db21_comptimeRange> _12147_range = _1ad9be0e6_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_12147_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data6)) {
			_case_begin_1be6102a9:;
			{
				_1ad981ebb_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1be6105b7:;
			{
				_1ad912c71_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1be610551:;
	};
}



inline jule::Bool _1ad9824d8_check(_1ad980492_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1be61393e:;
		}
		else if ((_1ad9bbca3_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be6122de:;
			{
				_1ad9812c8_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1ad9bba1c_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be612355:;
			{
				_1ad9814c6_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1ad9bc7dc_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be6128b6:;
			{
				_1ad981ac0_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1ad9be0e6_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be61292c:;
			{
				return _1ad982252_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1be612256:;
			{
				jule::Ptr<_1ad9c16ae_Prim> _12474_prim = _1ad9bac4c_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_12474_prim != nullptr) && _1ad9c4b79_IsStr(_12474_prim))) {
					_1ad981cbd_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1be612168:;
	};
	_1ad912c71_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1ad983165_prepareTypes(_1ad982c03_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1ad7eba7d_Types((*(_self_))._field_f);
	};
}



inline void _1ad98341d_prepareExprs(_1ad982c03_retTypeChecker* _self_, jule::Ptr<_1ad6e94e7_Expr>* _127533_e) {
	if (((*(_127533_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_127533_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1be619d0d:;
			{
				(*(_self_))._field_exprs=(*((*((*(_127533_e))))._field_Kind.unsafe_cast_ptr<_1ad6ea0db_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1be61968c:;
			{
				{ jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_127533_e))); };
			}
		}
		_match_end_1be619208:;
	};
}



inline void _1ad98361b_checkExprs(_1ad982c03_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ad985b90_Data>> _12917_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad985b90_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad985b90_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1ad9878b7_eval> _12927_eval = _1ad919b46_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be61c4b4:;
		if (it != expr_end) {
			jule::I64 _12938_i = it - expr->begin();
			jule::Ptr<_1ad6e94e7_Expr> _129315_expr = *it;
			{
				if ((_12938_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1be61c4b4;
				};
				jule::Ptr<_1ad9b8596_TypeKind> _12988_t = (*(_self_))._field_types[_12938_i];;
				(*(_12927_eval))._field_prefix=_12988_t;
				jule::Ptr<_1ad985b90_Data> _13018_d = _1ad9a672c_evalExpr(_12927_eval, _129315_expr);;
				if ((_13018_d == nullptr)) {
					goto _iter_next_1be61c4b4;
				};
				{ jule::Slice<jule::Ptr<_1ad985b90_Data>> &__jule_push_dest = _12917_datas; __jule_push_dest.push(_13018_d); };
				if (((!((*(_13018_d))._field_Mutable)) && _1ad9b9e7c_Mutable((*(_13018_d))._field_Kind.ptr()))) {
					_1ad912c71_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1ad974046_assignTypeChecker _13138_ac = _1ad974046_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_12988_t, ._field_d=_13018_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_1ad8bbc6e_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1ad975047_check(&_13138_ac);
			}
			_iter_next_1be61c4b4:;
			++it;
			_12938_i++;
			goto _iter_begin_1be61c4b4;
		}
		_iter_end_1be61c4b4:;
	};
	if ((_12917_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1ad7e0995_TupleExprModel>(_1ad7e0995_TupleExprModel{._field_Datas=_12917_datas}), &__jule_any_type83);
	} else if ((_12917_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_12917_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1ad9838a2_tryFuncMultiRetForward(_1ad982c03_retTypeChecker* _self_) {
	jule::Ptr<_1ad9878b7_eval> _13357_eval = _1ad919b46_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));;
	jule::Ptr<_1ad985b90_Data> _13367_d = _1ad9a672c_evalExpr(_13357_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13367_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ad9c67a2_Tuple> _13427_tup = _1ad9bca73_Tup((*(_13367_d))._field_Kind.ptr());;
	if ((_13427_tup == nullptr)) {
		return false;;
	};
	if (((*(_13427_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1be62857a;
	};
	(*(_self_))._field_model=(*(_13367_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6266aa:;
		if (it != expr_end) {
			jule::I64 _13507_i = it - expr->begin();
			{
				jule::Ptr<_1ad9b8596_TypeKind> _13518_t1 = (*(_self_))._field_types[_13507_i];;
				jule::Ptr<_1ad9b8596_TypeKind> _13528_t2 = (*(_13427_tup))._field_Types[_13507_i];;
				if ((!(_1ad91a718__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13518_t1), &(_13528_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1be62857a;
				};
			}
			_iter_next_1be6266aa:;
			++it;
			_13507_i++;
			goto _iter_begin_1be6266aa;
		}
		_iter_end_1be6266aa:;
	};
	return true;;
	_julec_label_1be62857a:;
	_1dd0b6912_Builder _13597_wanted = static__1dd0b74d4_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6288aa:;
		if (it != expr_end) {
			jule::I64 _13607_i = it - expr->begin();
			jule::Ptr<_1ad9b8596_TypeKind> _136010_t = *it;
			{
				_1dd0c0dd3_WriteStr(&_13597_wanted, _1ad9b8992_Str(_136010_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13607_i) > 1LL)) {
					_1dd0c0dd3_WriteStr(&_13597_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1be6288aa:;
			++it;
			_13607_i++;
			goto _iter_begin_1be6288aa;
		}
		_iter_end_1be6288aa:;
	};
	_1dd0b6912_Builder _13667_given = static__1dd0b74d4_New(32LL);;
	{
		auto expr = &((*(_13427_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be62a945:;
		if (it != expr_end) {
			jule::I64 _13677_i = it - expr->begin();
			jule::Ptr<_1ad9b8596_TypeKind> _136710_t = *it;
			{
				_1dd0c0dd3_WriteStr(&_13667_given, _1ad9b8992_Str(_136710_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13677_i) > 1LL)) {
					_1dd0c0dd3_WriteStr(&_13667_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1be62a945:;
			++it;
			_13677_i++;
			goto _iter_begin_1be62a945;
		}
		_iter_end_1be62a945:;
	};
	_1ad912c71_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1dd0c16ca_Str(&_13597_wanted), &__jule_any_type5); (*it++) = jule::Any(_1dd0c16ca_Str(&_13667_given), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline jule::Bool _1ad983be3_check(_1ad982c03_retTypeChecker* _self_, jule::Ptr<_1ad6e94e7_Expr>* _137726_e) {
	_1ad983165_prepareTypes(_self_);
	_1ad98341d_prepareExprs(_self_, _137726_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1be62dc01:;
			{
				if ((!(_1ad7e8a14_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1ad912c71_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1ad7e7c44_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1be62dc67:;
			{
				_1ad912c71_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1be62dccd:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1be633750:;
						{
							if (_1ad9838a2_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1be633695:;
				};
				_1ad912c71_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1be62dd44:;
			{
				_1ad912c71_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1be62ddaa:;
			{
				_1ad912c71_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be62dad0:;
	};
	_1ad98361b_checkExprs(_self_);
	return true;;
}








inline jule::Bool _1ad985b90_Data_eq(_1ad985b90_Data *_self_, _1ad985b90_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1ad9860ad_IsNil(_1ad985b90_Data* _self_) {
	return _1ad9b96c9_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ad986344_IsVoid(_1ad985b90_Data* _self_) {
	return _1ad9b9960_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1ad9865ca_IsConst(_1ad985b90_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1ad98691b_GoodOperand(_1ad985b90_Data* _self_, jule::Ptr<_1ad985b90_Data>* _6128_other) {
	if ((_1ad9bb786_TypeEnum((*((*(_6128_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1ad9bac4c_Prim((*((*(_6128_other))))._field_Kind) == nullptr) || (!(_1ad9c4e10_IsAny(_1ad9bac4c_Prim((*((*(_6128_other))))._field_Kind).ptr())))) && (_1ad9bc556_Trait((*((*(_6128_other))))._field_Kind) == nullptr)) && (!(_1ad9b96c9_IsNil((*(_self_))._field_Kind))));;
}








inline jule::Bool _1ad986d17_Value_eq(_1ad986d17_Value *_self_, _1ad986d17_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1ad9878b7_eval_eq(_1ad9878b7_eval *_self_, _1ad9878b7_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_immutable == _self_->_field_immutable) &&
		(_self_->_field_ignored == _self_->_field_ignored) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		(_self_->_field_arg == _self_->_field_arg);
}

inline void _1ad987e4a_pushErr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _9223_token, jule::Str _9245_fmt, jule::Slice<jule::Any> _9265_args) {
	_1ad912c71_pushErr((*(_self_))._field_s.ptr(), _9223_token, _9245_fmt, _9265_args);
}



inline void _1ad9882ad_pushSuggestion(_1ad9878b7_eval* _self_, jule::Str _9730_fmt, jule::Slice<jule::Any> _9750_args) {
	_1ad9130d4_pushSuggestion((*(_self_))._field_s.ptr(), _9730_fmt, _9750_args);
}



inline void _1ad9884ab_allowBuiltin(_1ad9878b7_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ad9886a9_disallowBuiltin(_1ad9878b7_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1ad988940_isUnsafe(_1ad9878b7_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1ad988bc6_isGlobal(_1ad9878b7_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4)) {
			_case_begin_1be692814:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1be692c21:;
			{
				return false;;
			}
		}
		_match_end_1be692baa:;
	};
}



inline jule::Bool _1ad988ed4_applyNumericPrefix(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _12439_d) {
	if ((((((*(_12439_d)) == nullptr) || (!(_1ad9865ca_IsConst((*(_12439_d)).ptr())))) || (_1ad9bac4c_Prim((*((*(_12439_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _1313_prim = _1ad9bac4c_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1313_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1ad87c416_IsFloat(_1ad9c1a33_Str(_1313_prim.ptr()))) {
			_case_begin_1be695383:;
			{
				(*((*(_12439_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>((*((*(_self_))._field_prefix)));
				_1ad7d258b_SetF64((*((*(_12439_d))))._field_Constant.ptr(), _1ad7d1711_AsF64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		else if (_1ad87b9ed_IsSigInt(_1ad9c1a33_Str(_1313_prim.ptr()))) {
			_case_begin_1be6953e9:;
			{
				if ((!(_1ad971494_sigAssignable(_1ad9c1a33_Str(_1313_prim.ptr()), _12439_d)))) {
					return false;;
				};
				(*((*(_12439_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>((*((*(_self_))._field_prefix)));
				_1ad7d19b9_SetI64((*((*(_12439_d))))._field_Constant.ptr(), _1ad7d11e4_AsI64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		else if (_1ad87bd0b_IsUnsigInt(_1ad9c1a33_Str(_1313_prim.ptr()))) {
			_case_begin_1be695460:;
			{
				if ((!(_1ad97185c_unsigAssignable(_1ad9c1a33_Str(_1313_prim.ptr()), _12439_d)))) {
					return false;;
				};
				(*((*(_12439_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>((*((*(_self_))._field_prefix)));
				_1ad7d1c72_SetU64((*((*(_12439_d))))._field_Constant.ptr(), _1ad7d147a_AsU64((*((*(_12439_d))))._field_Constant));
				(*(*((*(_12439_d))))._field_Constant.alloc)._field_Kind=(*(_1313_prim))._field_Kind;
			}
		}
		_match_end_1be695295:;
	};
	return true;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad989325_litStr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr>* _15919_l) {
	jule::Str _1607_s = jule::Str();;
	if (_1ad6d105b_IsRawStr((*((*(_15919_l))))._field_Value)) {
		_1607_s=_1ad96e816_ToRawStr((*((*(_15919_l))))._field_Value);
	} else {
		_1607_s=_1ad96eb57_ToStr((*((*(_15919_l))))._field_Value);
	};
	jule::Ptr<_1ad778ec2_Const> _1667_constant = static__1ad7ce7db_NewStr(_1607_s);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e3e6_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1667_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1667_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad989666_litRune(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr>* _17620_l) {
	jule::I32 _1773_r = _1ad954c19_ToRune((*((*(_17620_l))))._field_Value);;
	jule::Ptr<_1ad985b90_Data> _1787_data = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ad7ce07c_NewI64(static_cast<jule::I64>(_1773_r))});;
	if ((_1773_r <= 255LL)) {
		(*(_1787_data))._field_Kind=_1adaa0dcb_primU8;
	} else {
		(*(_1787_data))._field_Kind=_1adaa086a_primI32;
	};
	(*(_1787_data))._field_Model=jule::Any(jule::new_ptr<_1ad7e4290_RuneExprModel>(_1ad7e4290_RuneExprModel{._field_Code=_1773_r}), &__jule_any_type85);
	(*_1787_data.alloc)._field_Mutable=true;
	(*_1787_data.alloc)._field_IsRune=true;
	(*_1787_data.alloc)._field_untyped=true;
	return _1787_data;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9899a7_litFloat(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr>* _19521_l) {
	jule::F64 _1963_f = ({
		auto except = _1ab15376c_ParseFloat((*((*(_19521_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1ad778ec2_Const> _1977_constant = static__1ad7ceaa5_NewF64(_1963_f);;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa1d77_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1977_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1977_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad989ce8_litInt(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr>* _20723_l) {
	;
	jule::Str _2107_lit = (*((*(_20723_l))))._field_Value;;
	jule::I64 _2117_base = 0LL;;
	{
		
		if (_1dd0a3976_HasPrefix(_2107_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1be6a77c4:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=16LLU;
			}
		}
		else if (_1dd0a3976_HasPrefix(_2107_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1be6a78b2:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=2LLU;
			}
		}
		else if (_1dd0a3976_HasPrefix(_2107_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1be6a7472:;
			{
				(_2107_lit).mut_slice(2LL);;
				_2117_base=8LLU;
			}
		}
		else if (((_2107_lit[0LL] == '0') && (_2107_lit.len() > 1LL))) {
			_case_begin_1be6a74d8:;
			{
				(_2107_lit).mut_slice(1LL);;
				_2117_base=8LLU;
			}
		}
		else {
			_case_begin_1be6a740b:;
			{
				_2117_base=10LLU;
			}
		}
		_match_end_1be6a7384:;
	};
	jule::Ptr<_1ad985b90_Data> _2317_d = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
	jule::Bool _2337_ok = true;;
	jule::I64 _2343_sig = ({
		auto except = _1ab14c0b2_ParseInt(_2107_lit, _2117_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2337_ok=false;

			0LL;
		});
	});;
	if (_2337_ok) {
		(*_2317_d.alloc)._field_Constant=static__1ad7ce07c_NewI64(_2343_sig);
		(*_2317_d.alloc)._field_Kind=_1adaa00c8_primInt;
	} else {
		jule::U64 _2424_unsig = ({
			auto except = _1ab14bb0b_ParseUint(_2107_lit, _2117_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1ad987e4a_pushErr(_self_, (*((*(_20723_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2317_d.alloc)._field_Constant=static__1ad7ce258_NewU64(_2424_unsig);
		(*_2317_d.alloc)._field_Kind=_1ada9ec10_primUint;
	};
	(*_2317_d.alloc)._field_Model=jule::Any((*_2317_d.alloc)._field_Constant, &__jule_any_type15);
	(*_2317_d.alloc)._field_untyped=true;
	if ((!(_1ad988ed4_applyNumericPrefix(_self_, &(_2317_d))))) {
		_1ad9b078b_fitBitsize(&(_2317_d));
	};
	return _2317_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad98a139_litNum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr>* _26223_l) {
	{
		
		if (_1ad6d1c0a_IsFloat((*((*(_26223_l))))._field_Value)) {
			_case_begin_1be6ae941:;
			{
				return _1ad9899a7_litFloat(_self_, _26223_l);;
			}
		}
		else {
			_case_begin_1be6ae8ca:;
			{
				return _1ad989ce8_litInt(_self_, _26223_l);;
			}
		}
		_match_end_1be6ae7ba:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad98a47a_evalLit(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ea482_LitExpr> _27123_lit) {
	{
		
		if (_1ad6d0cc5_IsStr((*(_27123_lit))._field_Value)) {
			_case_begin_1be6b0b62:;
			{
				return _1ad989325_litStr(_self_, &(_27123_lit));;
			}
		}
		else if (_1ad6d1325_IsRune((*(_27123_lit))._field_Value)) {
			_case_begin_1be6b0bc8:;
			{
				return _1ad989666_litRune(_self_, &(_27123_lit));;
			}
		}
		else if (_1ad6d1ec4_IsNum((*(_27123_lit))._field_Value)) {
			_case_begin_1be6b0c3e:;
			{
				return _1ad98a139_litNum(_self_, &(_27123_lit));;
			}
		}
		else {
			_case_begin_1be6b0557:;
			{
				return nullptr;;
			}
		}
		_match_end_1be6b0447:;
	};
}



inline jule::Any _1ad98a7bb_findBuiltins(_1ad9878b7_eval* _self_, jule::Str* _28429_ident) {
	if (_1ad90c078_IsPub((*(_28429_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data2)) {
				_case_begin_1be6b2ec7:;
				{
					jule::Any _2889_def = _1ad9b055a_findBuiltinsImport(_28429_ident, (*(_self_))._field_lookup.cast_ptr<_1ad8e1bea_ImportInfo>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data2));;
					if ((_2889_def != nullptr)) {
						return _2889_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4)) {
				_case_begin_1be6b2c1e:;
				{
					jule::Any _2939_def = _1ad9b12b4_findBuiltinsSema(_28429_ident, (*(_self_))._field_lookup.cast_ptr<_1ad90ed6c_sema>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));;
					if ((_2939_def != nullptr)) {
						return _2939_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)) {
				_case_begin_1be6b303d:;
				{
					jule::Any _2989_def = _1ad9b12b4_findBuiltinsSema(_28429_ident, (*((*(_self_))._field_lookup.cast_ptr<_1ad8b860b_scopeChecker>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)))._field_s);;
					if ((_2989_def != nullptr)) {
						return _2989_def;;
					};
				}
			}
			_match_end_1be6b2e1c:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1adaa26b3_findBuiltinDef(_28429_ident);;
}



inline jule::Any _1ad98abb7_getDef(_1ad9878b7_eval* _self_, jule::Str* _31123_ident, jule::Bool _31135_binded) {
	jule::Ptr<_1ad933a83_Var> _3167_v = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d7164_FindVar((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3167_v != nullptr)) {
		return jule::Any(_3167_v, &__jule_any_type7);;
	};
	jule::Ptr<_1ad9b77a4_TypeAlias> _3217_ta = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d7560_FindTypeAlias((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3217_ta != nullptr)) {
		return jule::Any(_3217_ta, &__jule_any_type8);;
	};
	if ((!(_31135_binded))) {
		jule::Ptr<_1ad805658_Enum> _3278_enm = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d84d9_FindEnum((*(_self_))._field_lookup.data, (*(_31123_ident)));;
		if ((_3278_enm != nullptr)) {
			return jule::Any(_3278_enm, &__jule_any_type12);;
		};
		jule::Ptr<_1ad806d63_TypeEnum> _3328_tenm = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d882a_FindTypeEnum((*(_self_))._field_lookup.data, (*(_31123_ident)));;
		if ((_3328_tenm != nullptr)) {
			return jule::Any(_3328_tenm, &__jule_any_type13);;
		};
	};
	jule::Ptr<_1ad7e778d_Fn> _3387_f = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d7d57_FindFn((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3387_f != nullptr)) {
		return jule::Any(_3387_f, &__jule_any_type10);;
	};
	jule::Ptr<_1ad7159ec_Struct> _3437_s = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d795b_FindStruct((*(_self_))._field_lookup.data, (*(_31123_ident)), _31135_binded);;
	if ((_3437_s != nullptr)) {
		return jule::Any(_3437_s, &__jule_any_type9);;
	};
	return _1ad98a7bb_findBuiltins(_self_, _31123_ident);;
}



inline jule::Ptr<_1ad8ced70_ReferenceStack> _1ad98ae4d_getOwnerRefers(_1ad9878b7_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)) {
			_case_begin_1be6bc4ed:;
			{
				return _1ad8bc005_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1ad8b860b_scopeChecker>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));;
			}
		}
		else {
			_case_begin_1be6bad8c:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1be6bad26:;
	};
	return nullptr;;
}



inline void _1be6d548e_pushReference(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _36937_ref) {
	jule::Ptr<_1ad8ced70_ReferenceStack> _3707_refers = _1ad98ae4d_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1be6d7936_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1ad8d09db_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type63));
	};
}

inline void _1be6ec044_pushReference(_1ad9878b7_eval* _self_, jule::Ptr<_1ad933a83_Var>* _36937_ref) {
	jule::Ptr<_1ad8ced70_ReferenceStack> _3707_refers = _1ad98ae4d_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1be6ee387_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1ad8d09db_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type7));
	};
}

inline void _1be7d787c_pushReference(_1ad9878b7_eval* _self_, jule::Ptr<_1ad718857_StructIns>* _36937_ref) {
	jule::Ptr<_1ad8ced70_ReferenceStack> _3707_refers = _1ad98ae4d_getOwnerRefers(_self_);;
	if (((_3707_refers != nullptr) && (!(_1be7d9d46_Exist(_3707_refers, (*(_36937_ref))))))) {
		_1ad8d09db_Push(_3707_refers, jule::Any((*(_36937_ref)), &__jule_any_type64));
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad98b547__evalEnum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad805658_Enum> _37625_enm) {
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_37625_enm, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad98b943_evalEnum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad805658_Enum> _38528_enm, jule::Ptr<_1ad6ceb70_Token> _38540_errorToken) {
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_38528_enm))._field_Public, (*_38528_enm.alloc)._field_Token)))) {
		_1ad987e4a_pushErr(_self_, _38540_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_38528_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ad98b547__evalEnum(_self_, _38528_enm);;
}



inline jule::Ptr<_1ad985b90_Data> _1ad98bc84__evalTypeEnum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad806d63_TypeEnum> _39429_enm) {
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_39429_enm, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad98c180_evalTypeEnum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad806d63_TypeEnum> _40332_enm, jule::Ptr<_1ad6ceb70_Token> _40348_errorToken) {
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_40332_enm))._field_Public, (*_40332_enm.alloc)._field_Token)))) {
		_1ad987e4a_pushErr(_self_, _40348_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_40332_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ad98bc84__evalTypeEnum(_self_, _40332_enm);;
}



inline jule::Ptr<_1ad985b90_Data> _1ad98c4c1__evalStruct(_1ad9878b7_eval* _self_, jule::Ptr<_1ad718857_StructIns> _41227_s) {
	jule::Ptr<_1ad985b90_Data> _4137_d = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_41227_s, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_41227_s, &__jule_any_type64), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
	if ((((*(_41227_s))._field_Decl != nullptr) && (*(*(_41227_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4137_d))._field_Kind))._field_BindIdent=(*(*(_41227_s))._field_Decl.alloc)._field_Ident;
	};
	return _4137_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad98c8bc_evalStruct(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7159ec_Struct> _42630_s, jule::Ptr<_1ad6ceb70_Token> _42646_errorToken) {
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42630_s))._field_Public, (*_42630_s.alloc)._field_Token)))) {
		_1ad987e4a_pushErr(_self_, _42646_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_42630_s.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ad98d071_checkDeprecated(_self_, &((*_42630_s.alloc)._field_Directives), _42646_errorToken);
	jule::Ptr<_1ad718857_StructIns> _4357_ins = _1ad715e92_instance(_42630_s);;
	if (((*_42630_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1ad718857_StructIns> _4428_exist = _1ad7162a0_appendInstance(_42630_s, &(_4357_ins));;
		if ((_4428_exist != nullptr)) {
			_4357_ins=_4428_exist;
		} else {
			if ((!(_1ad92b8d3_precheckStructIns((*(_self_))._field_s, &(_4357_ins), _42646_errorToken)))) {
				return nullptr;;
			};
		};
	};
	return _1ad98c4c1__evalStruct(_self_, _4357_ins);;
}



inline jule::Ptr<_1ad985b90_Data> _1ad98cc0d_evalFnIns(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7ea84b_FnIns> _45525_f) {
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45525_f, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45525_f, &__jule_any_type63), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline void _1ad98d071_checkDeprecated(_1ad9878b7_eval* _self_, jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _46436_directives, jule::Ptr<_1ad6ceb70_Token> _46467_tok) {
	if (_1ad988940_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1ad6e45d0_Directive> _4693_d = _1ad9b0192_findDirective(_46436_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_4693_d != nullptr)) {
		if (((*_4693_d.alloc)._field_Args.len() == 0LL)) {
			_1ad987e4a_pushErr(_self_, _46467_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type5); __jule_collection; }));
		} else {
			_1ad987e4a_pushErr(_self_, _46467_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4693_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
		_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad98d46c_evalFn(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7e778d_Fn> _48026_f, jule::Ptr<_1ad6ceb70_Token> _48034_errorToken) {
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_48026_f))._field_Public, (*_48026_f.alloc)._field_Token)))) {
		_1ad987e4a_pushErr(_self_, _48034_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_48026_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ad98d071_checkDeprecated(_self_, &((*_48026_f.alloc)._field_Directives), _48034_errorToken);
	jule::Ptr<_1ad7ea84b_FnIns> _4897_ins = _1ad7e9031_instance(_48026_f);;
	if (((*_48026_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1ad7ea84b_FnIns> _4968_exist = _1ad7e933e_appendInstance(_48026_f, &(_4897_ins));;
		if ((_4968_exist != nullptr)) {
			_4897_ins=_4968_exist;
		};
	};
	_1be6d548e_pushReference(_self_, &(_4897_ins));
	return _1ad98cc0d_evalFnIns(_self_, _4897_ins);;
}



inline void _1ad98d88a_pushIllegalCycleError(_1ad9878b7_eval* _self_, jule::Ptr<_1ad933a83_Var>* _50538_v1, jule::Ptr<_1ad933a83_Var>* _50549_v2, _1dd0b6912_Builder* _50564_message) {
	;
	jule::Str _5073_refersTo = _1dd3568d8_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50538_v1))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_50549_v2))))._field_Ident, &__jule_any_type5); __jule_collection; }));;
	jule::Slice<jule::U8> _5083_buf = _1dd0c217b_Buf(_50564_message);;
	_1dd0c0dd3_WriteStr(_50564_message, _1dd0a3613_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1dd0c0dd3_WriteStr(_50564_message, _5073_refersTo);
	_1dd0c118b_WriteByte(_50564_message, '\n');
	_1dd0c0b2a_Write(_50564_message, _5083_buf);
}



inline jule::Bool _1ad98dc86_checkCrossCycle(_1ad9878b7_eval* _self_, jule::Ptr<_1ad933a83_Var>* _51532_v, _1dd0b6912_Builder* _51546_message) {
	{
		auto expr = &((*((*(_51532_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6dbd03:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> *_51610_d = it;
			{
				if (((*(_51610_d)) == (*(_self_))._field_owner)) {
					_1ad98d88a_pushIllegalCycleError(_self_, _51532_v, _51610_d, _51546_message);
					return false;;
				};
				if ((!(_1ad98dc86_checkCrossCycle(_self_, _51610_d, _51546_message)))) {
					_1ad98d88a_pushIllegalCycleError(_self_, _51532_v, _51610_d, _51546_message);
					return false;;
				};
			}
			_iter_next_1be6dbd03:;
			++it;
			goto _iter_begin_1be6dbd03;
		}
		_iter_end_1be6dbd03:;
	};
	return true;;
}



inline jule::Bool _1ad98e182_checkIllegalCycles(_1ad9878b7_eval* _self_, jule::Ptr<_1ad933a83_Var>* _53239_v, jule::Ptr<_1ad6ceb70_Token> _53248_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53239_v)))) {
		_1ad987e4a_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1dd0b6912_Builder _5457_message = static__1dd0b74d4_New(32LL);;
	if ((!(_1ad98dc86_checkCrossCycle(_self_, _53239_v, &(_5457_message))))) {
		jule::Str _5488_errMsg = _1dd0c16ca_Str(&_5457_message);;
		_1dd0c18c8_Clear(&_5457_message);
		_1ad98d88a_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53239_v, &(_5457_message));
		_5488_errMsg+=_1dd0c16ca_Str(&_5457_message);
		_1ad987e4a_pushErr(_self_, _53248_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5488_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1ad933a83_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_53239_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad98e57d_evalVar(_1ad9878b7_eval* _self_, jule::Ptr<_1ad933a83_Var> _56027_v, jule::Ptr<_1ad6ceb70_Token> _56036_errorToken) {
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56027_v))._field_Public, (*_56027_v.alloc)._field_Token)))) {
		_1ad987e4a_pushErr(_self_, _56036_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56027_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ad98d071_checkDeprecated(_self_, &((*_56027_v.alloc)._field_Directives), _56036_errorToken);
	if (((*_56027_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1be7046cd;
	};
	(*_56027_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4)) {
			_case_begin_1be6e5a87:;
			{
				jule::Bool _5794_ok = _1ad98e182_checkIllegalCycles(_self_, &(_56027_v), _56036_errorToken);;
				if ((!(_5794_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)) {
			_case_begin_1be6e513b:;
			{
				jule::Ptr<_1ad8b860b_scopeChecker> _5848_s = (*(_self_))._field_lookup.cast_ptr<_1ad8b860b_scopeChecker>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1);;
				jule::Ptr<_1ad8b860b_scopeChecker> _5858_root = _1ad8bb9d8_getRoot(_5848_s);;
				if ((((((*_56027_v.alloc)._field_Scope != nullptr) && (!((*_56027_v.alloc)._field_Constant))) && ((*(_5858_root))._field_captured != nullptr)) && _1ad9b5ebc_isVarCaptured(_5858_root, _5848_s, _56027_v))) {
					_1ad8bb752_pushCaptured(_5858_root, &(_56027_v));
				};
				if (((!((*_56027_v.alloc)._field_Reference)) || _1ad988940_isUnsafe(_self_))) {
					goto _match_end_1be6e59ee;
				};
				while ((((*_5848_s.alloc)._field_owner == nullptr) && ((*_5848_s.alloc)._field_parent != nullptr))) {
					{
						_5848_s=(*_5848_s.alloc)._field_parent;
					}
				_iter_next_1be6e9607:;
				}
				_iter_end_1be6e9607:;;
				if (((((*_5848_s.alloc)._field_owner != nullptr) && (*((*_5848_s.alloc)._field_owner))._field_Anon) && ((*_56027_v.alloc)._field_Scope != (*((*_5848_s.alloc)._field_owner))._field_Scope))) {
					_1ad987e4a_pushErr(_self_, _56036_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56027_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		_match_end_1be6e59ee:;
	};
	if (((*_56027_v.alloc)._field_Scope == nullptr)) {
		_1be6ec044_pushReference(_self_, &(_56027_v));
	};
	if (((((!((*_56027_v.alloc)._field_Binded)) && (*_56027_v.alloc)._field_Constant) && ((*_56027_v.alloc)._field_Scope == nullptr)) && (((*_56027_v.alloc)._field_Value == nullptr) || ((*((*_56027_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1ad7eda91_SymTab> _6138_varfile = _1ad8de038_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_56027_v));;
		jule::Ptr<_1ad7eda91_SymTab> _6148_file = _1ad91259a_getCurrentFile((*(_self_))._field_s);;
		_1ad912853_setCurrentFile((*(_self_))._field_s, _6138_varfile);
		_1ad929ccc_checkVar((*(_self_))._field_s, &(_56027_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4));
		_1ad912853_setCurrentFile((*(_self_))._field_s, _6148_file);
		if ((((*_56027_v.alloc)._field_Value == nullptr) || ((*((*_56027_v.alloc)._field_Value))._field_Data == nullptr))) {
			return nullptr;;
		};
	};
	if ((((*_56027_v.alloc)._field_Kind == nullptr) || ((*((*_56027_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_56027_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		jule::Ptr<_1ad7eda91_SymTab> _6438_varfile = _1ad8de038_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_56027_v));;
		jule::Ptr<_1ad7eda91_SymTab> _6448_file = _1ad91259a_getCurrentFile((*(_self_))._field_s);;
		_1ad912853_setCurrentFile((*(_self_))._field_s, _6438_varfile);
		_1ad929ccc_checkVar((*(_self_))._field_s, &(_56027_v), (*(_self_))._field_lookup);
		_1ad912853_setCurrentFile((*(_self_))._field_s, _6448_file);
		if ((((*_56027_v.alloc)._field_Kind == nullptr) || ((*((*_56027_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1be7046cd:;
	jule::Ptr<_1ad985b90_Data> _6597_d = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=(*((*_56027_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_56027_v.alloc)._field_Mutable, ._field_Reference=(*_56027_v.alloc)._field_Reference, ._field_Lvalue=(!((*_56027_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_56027_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
	if ((((!((*_56027_v.alloc)._field_Binded)) && _1ad933e90_IsInitialized(_56027_v)) && ((*((*_56027_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_6597_d))._field_IsRune=(*((*((*_56027_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_56027_v.alloc)._field_Constant && ((*((*((*_56027_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_6597_d.alloc)._field_Constant=jule::new_ptr<_1ad778ec2_Const>((*(*((*((*(_56027_v))._field_Value))._field_Data))._field_Constant.alloc));
		(*_6597_d.alloc)._field_Model=jule::Any((*_6597_d.alloc)._field_Constant, &__jule_any_type15);
		if (_1ad9344ac_untypedConstant(_56027_v)) {
			_1ad988ed4_applyNumericPrefix(_self_, &(_6597_d));
			(*_6597_d.alloc)._field_untyped=true;
		};
	};
	return _6597_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad98e979_evalTypeAlias(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b77a4_TypeAlias> _68333_ta, jule::Ptr<_1ad6ceb70_Token> _68349_errorToken) {
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_68333_ta))._field_Public, (*_68333_ta.alloc)._field_Token)))) {
		_1ad987e4a_pushErr(_self_, _68349_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_68333_ta.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_68333_ta.alloc)._field_Used=true;
	jule::Trait _6927_kind = (*((*((*_68333_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1ad985b90_Data> _69311_d = nullptr;;
	{
		auto &_match_expr{ _6927_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)) {
			_case_begin_1be712b1a:;
			{
				_69311_d=_1ad98c4c1__evalStruct(_self_, _6927_kind.cast_ptr<_1ad718857_StructIns>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data3)) {
			_case_begin_1be7158dc:;
			{
				_69311_d=_1ad98b547__evalEnum(_self_, _6927_kind.cast_ptr<_1ad805658_Enum>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data4)) {
			_case_begin_1be715d71:;
			{
				_69311_d=_1ad98bc84__evalTypeEnum(_self_, _6927_kind.cast_ptr<_1ad806d63_TypeEnum>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1be711520:;
			{
				_69311_d=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_68333_ta))._field_Kind))._field_Kind.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});
				if ((*_68333_ta.alloc)._field_Binded) {
					(*((*(_69311_d))._field_Kind))._field_BindIdent=(*_68333_ta.alloc)._field_Ident;
				} else {
					(*((*(_69311_d))._field_Kind))._field_BindIdent=(*(*((*(_68333_ta))._field_Kind))._field_Kind.alloc)._field_BindIdent;
				};
				(*(_69311_d))._field_Model=jule::Any((*_69311_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		_match_end_1be711399:;
	};
	(*((*(_69311_d))._field_Kind))._field_Generic=(*_68333_ta.alloc)._field_Generic;
	return _69311_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad98ed75_evalDef(_1ad9878b7_eval* _self_, jule::Any* _72228_def, jule::Ptr<_1ad6ceb70_Token> _72242_ident) {
	{
		auto &_match_expr{ (*(_72228_def)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be719528:;
			{
				return _1ad98e57d_evalVar(_self_, (*(_72228_def)).cast_ptr<_1ad933a83_Var>(&__jule_any_type7), _72242_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1be7192e7:;
			{
				return _1ad98b943_evalEnum(_self_, (*(_72228_def)).cast_ptr<_1ad805658_Enum>(&__jule_any_type12), _72242_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1be71958e:;
			{
				return _1ad98c180_evalTypeEnum(_self_, (*(_72228_def)).cast_ptr<_1ad806d63_TypeEnum>(&__jule_any_type13), _72242_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be719605:;
			{
				return _1ad98c8bc_evalStruct(_self_, (*(_72228_def)).cast_ptr<_1ad7159ec_Struct>(&__jule_any_type9), _72242_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1be71966b:;
			{
				jule::Ptr<_1ad7e778d_Fn> _7338_f = (*(_72228_def)).cast_ptr<_1ad7e778d_Fn>(&__jule_any_type10);;
				if ((!(*(_7338_f))._field_Ident.equal("init", 4))) {
					return _1ad98d46c_evalFn(_self_, _7338_f, _72242_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1be7196e3:;
			{
				return _1ad98cc0d_evalFnIns(_self_, (*(_72228_def)).cast_ptr<_1ad7ea84b_FnIns>(&__jule_any_type63));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be71976a:;
			{
				return _1ad98e979_evalTypeAlias(_self_, (*(_72228_def)).cast_ptr<_1ad9b77a4_TypeAlias>(&__jule_any_type8), _72242_ident);;
			}
		}
		_match_end_1be719429:;
	};
	_1ad987e4a_pushErr(_self_, _72242_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_72242_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9901b6_evalIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ead12_IdentExpr> _74629_ident) {
	jule::Any _7477_def = _1ad98abb7_getDef(_self_, &((*(_74629_ident))._field_Ident), (*_74629_ident.alloc)._field_Binded);;
	return _1ad98ed75_evalDef(_self_, &(_7477_def), (*_74629_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1ad985b90_Data> _1ad990507_evalUnary(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6eb5a4_UnaryExpr> _75130_u) {
	_1ad9a6bb1_unaryEval _7527_unary = static__1ad9a7134_new(_self_);;
	return _1ad9a8564_eval(&_7527_unary, _75130_u);;
}



inline jule::Ptr<_1ad985b90_Data> _1ad990848_evalVariadic(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6eb97d_VariadicExpr> _75633_v) {
	if (((*(_75633_v))._field_Expr == nullptr)) {
		_1ad987e4a_pushErr(_self_.ptr(), (*_75633_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad9b8596_TypeKind> _7627_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7627_prefix;
	});;
	jule::Ptr<_1ad985b90_Data> _7667_d = _1ad9a672c_evalExpr(_self_, (*_75633_v.alloc)._field_Expr);;
	if ((_7667_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ad9ba9b6_Variadicable((*(_7667_d))._field_Kind.ptr())))) {
		_1ad987e4a_pushErr(_self_, (*_75633_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_7667_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1ad9b5a8d_makeVariadic(&(_7667_d), (*(_1ad9bbca3_Slc((*(_7667_d))._field_Kind)))._field_Elem);
	return _7667_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad990b89_evalUnsafe(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ea85b_UnsafeExpr> _77831_u) {
	jule::Bool _7793_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1ad985b90_Data> _7817_d = _1ad9a672c_evalExpr(_self_, (*(_77831_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7793_unsafety;
	return _7817_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad990eca_evalArr(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad700a4d_SliceExpr> _78628_s) {
	jule::Ptr<_1ad9c7ece_Arr> _7887_pt = _1ad9bba1c_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1ad9c7ece_Arr> _7907_arr = jule::new_ptr<_1ad9c7ece_Arr>(_1ad9c7ece_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7887_pt))._field_Elem});;
	jule::Bool _7967_filled = false;;
	if (((*(_78628_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_78628_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type78) {
				_case_begin_1be729934:;
				{
					if (((*((*((*(_78628_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1ad6eb97d_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1be729879;
					};
					if ((*_7887_pt.alloc)._field_Auto) {
						_1ad987e4a_pushErr(_self_, (*_78628_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7967_filled=true;
					((*(_78628_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1be729879:;
		};
	};
	(*(_7907_arr))._field_N=(*_78628_s.alloc)._field_Exprs.len();
	if ((!((*_7887_pt.alloc)._field_Auto))) {
		if (((*_7907_arr.alloc)._field_N > (*_7887_pt.alloc)._field_N)) {
			_1ad987e4a_pushErr(_self_, (*_78628_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_7907_arr.alloc)._field_N < (*_7887_pt.alloc)._field_N)) {
			(*_7907_arr.alloc)._field_N=(*_7887_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1ad7e0698_ArrayExprModel> _8257_model = jule::new_ptr<_1ad7e0698_ArrayExprModel>(_1ad7e0698_ArrayExprModel{._field_Kind=_7907_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_7967_filled) {
		(*(_8257_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8257_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_78628_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1ad9b8596_TypeKind> _8347_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7907_arr.alloc)._field_Elem;
	{
		auto expr = &((*_78628_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be73192a:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e94e7_Expr> _83615_elem = *it;
			{
				jule::Ptr<_1ad985b90_Data> _8378_d = _1ad9a672c_evalExpr(_self_, _83615_elem);;
				if ((_8378_d == nullptr)) {
					goto _iter_next_1be73192a;
				};
				;
				if (_1ad91e9e7_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_7907_arr.alloc)._field_Elem), &(_8378_d), &((*(_83615_elem))._field_Token))) {
					_1ad91a262_checkAssignType((*(_self_))._field_s, false, &((*_7907_arr.alloc)._field_Elem), &(_8378_d), (*_83615_elem.alloc)._field_Token, _1ad98ae4d_getOwnerRefers(_self_));
				};
				(*(_8257_model))._field_Elems=jule::append((*_8257_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8378_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1be73192a:;
			++it;
			goto _iter_begin_1be73192a;
		}
		_iter_end_1be73192a:;
	};
	(*_self_.alloc)._field_prefix=_8347_prefix;
	if (_7967_filled) {
		(*_8257_model.alloc)._field_Elems=jule::append((*_8257_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_7907_arr, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8257_model, &__jule_any_type87), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad991481_evalExpSlc(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad700a4d_SliceExpr> _86331_s, jule::Ptr<_1ad9b8596_TypeKind> _86355_t, jule::Any _86373_first) {
	jule::Ptr<_1ad9c5bad_Slc> _8647_slc = jule::new_ptr<_1ad9c5bad_Slc>(_1ad9c5bad_Slc{._field_Elem=_86355_t});;
	jule::I64 _8687_i = 0LL;;
	jule::Ptr<_1ad7dc761_SliceExprModel> _8697_model = jule::new_ptr<_1ad7dc761_SliceExprModel>(_1ad7dc761_SliceExprModel{._field_ElemKind=_86355_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_86331_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_86373_first != nullptr)) {
		(*(_8697_model))._field_Elems=jule::append((*_8697_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _86373_first; __jule_collection; }));
		_8687_i=1LL;
	};
	jule::Ptr<_1ad9b8596_TypeKind> _8787_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8647_slc))._field_Elem;
	{
		auto expr = (*_86331_s.alloc)._field_Exprs.slice(_8687_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1be73c639:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e94e7_Expr> _88015_elem = *it;
			{
				jule::Ptr<_1ad985b90_Data> _8818_d = _1ad9a672c_evalExpr(_self_, _88015_elem);;
				if ((_8818_d != nullptr)) {
					;
					if (_1ad91e9e7_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8647_slc.alloc)._field_Elem), &(_8818_d), &((*(_88015_elem))._field_Token))) {
						_1ad91a262_checkAssignType((*(_self_))._field_s, false, &((*_8647_slc.alloc)._field_Elem), &(_8818_d), (*_88015_elem.alloc)._field_Token, _1ad98ae4d_getOwnerRefers(_self_));
					};
					(*_8697_model.alloc)._field_Elems=jule::append((*_8697_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8818_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1be73c639:;
			++it;
			goto _iter_begin_1be73c639;
		}
		_iter_end_1be73c639:;
	};
	(*_self_.alloc)._field_prefix=_8787_prefix;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8647_slc, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8697_model, &__jule_any_type79), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9917c2_evalSliceExpr(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad700a4d_SliceExpr> _90134_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1ad9bba1c_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1be742375:;
				{
					return _1ad990eca_evalArr(_self_, _90134_s);;
				}
			}
			else if ((_1ad9bbca3_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1be74241e:;
				{
					jule::Ptr<_1ad9c5bad_Slc> _9079_pt = _1ad9bbca3_Slc((*(_self_))._field_prefix);;
					return _1ad991481_evalExpSlc(_self_, _90134_s, (*(_9079_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1be7422ba:;
		};
	};
	jule::Ptr<_1ad9b8596_TypeKind> _9127_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_90134_s))._field_Exprs.len() == 0LL)) {
		_1ad987e4a_pushErr(_self_, (*_90134_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad6e94e7_Expr> _9207_firstExpr = (*_90134_s.alloc)._field_Exprs[0LL];;
	jule::Ptr<_1ad985b90_Data> _9217_firstElem = _1ad9a672c_evalExpr(_self_, _9207_firstExpr);;
	if ((_9217_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1ad91e9e7_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_9217_firstElem))._field_Kind), &(_9217_firstElem), &((*(_9207_firstExpr))._field_Token));
	jule::Ptr<_1ad985b90_Data> _9317_d = _1ad991481_evalExpSlc(_self_, _90134_s, (*(_9217_firstElem))._field_Kind, (*(_9217_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_9127_prefix;
	return _9317_d;;
}



inline jule::Bool _1ad991bbd_checkIntegerIndexingByData(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _93747_d, jule::Ptr<_1ad6ceb70_Token> _93761_token) {
	jule::Str _9383_errKey = _1ad9b3470_checkDataForIntegerIndexing(&((*(_self_))._field_s), _93747_d, &(_93761_token), _1ad98ae4d_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9383_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1be74a4d2:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1be74a1b3:;
			{
				_1ad987e4a_pushErr(_self_, _93761_token, _9383_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_93747_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1be749a0e:;
			{
				_1ad987e4a_pushErr(_self_, _93761_token, _9383_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1be74a14c:;
	};
	return false;;
}



inline void _1ad9920db_indexingPtr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _95032_d, jule::Ptr<_1ad985b90_Data>* _95047_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _95066_i) {
	_1ad991bbd_checkIntegerIndexingByData(_self_, _95047_index, (*((*(_95066_i))))._field_Token);
	(*((*(_95032_d))))._field_Lvalue=true;
	jule::Ptr<_1ad9c89a2_Ptr> _9547_ptr = _1ad9bb269_Ptr((*((*(_95032_d))))._field_Kind.ptr());;
	{
		
		if (_1ad9c951e_IsUnsafe(_9547_ptr.ptr())) {
			_case_begin_1be74d3a3:;
			{
				_1ad987e4a_pushErr(_self_, (*((*(_95066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1ad988940_isUnsafe(_self_)))) {
			_case_begin_1be74d43b:;
			{
				_1ad987e4a_pushErr(_self_, (*((*(_95066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be74d309:;
	};
	(*((*(_95032_d))))._field_Kind=(*(_9547_ptr))._field_Elem;
}



inline void _1ad992509_indexingArr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _96632_d, jule::Ptr<_1ad985b90_Data>* _96647_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _96666_i) {
	jule::Ptr<_1ad9c7ece_Arr> _9677_arr = _1ad9bba1c_Arr((*((*(_96632_d))))._field_Kind.ptr());;
	(*((*(_96632_d))))._field_Kind=(*(_9677_arr))._field_Elem;
	_1ad991bbd_checkIntegerIndexingByData(_self_, _96647_index, (*((*(_96666_i))))._field_Token);
	(*((*(_96632_d))))._field_Lvalue=true;
	if ((_1ad9865ca_IsConst((*(_96647_index)).ptr()) && (_1ad7d1711_AsF64((*((*(_96647_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9677_arr.alloc)._field_N)))) {
		_1ad987e4a_pushErr(_self_, (*((*(_96666_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1ad992927_indexingSlc(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _97632_d, jule::Ptr<_1ad985b90_Data>* _97647_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _97666_i) {
	jule::Ptr<_1ad9c5bad_Slc> _9777_slc = _1ad9bbca3_Slc((*((*(_97632_d))))._field_Kind.ptr());;
	(*((*(_97632_d))))._field_Kind=(*(_9777_slc))._field_Elem;
	_1ad991bbd_checkIntegerIndexingByData(_self_, _97647_index, (*((*(_97666_i))))._field_Token);
	(*((*(_97632_d))))._field_Lvalue=true;
	if ((!(_1ad9865ca_IsConst((*(_97647_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_97632_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1be755ac5:;
			{
				jule::Ptr<_1ad7dc761_SliceExprModel> _9888_m = (*((*(_97632_d))))._field_Model.unsafe_cast_ptr<_1ad7dc761_SliceExprModel>();;
				jule::F64 _9894_indx = _1ad7d1711_AsF64((*((*(_97647_index))))._field_Constant.ptr());;
				if ((_9894_indx >= static_cast<jule::F64>((*(_9888_m))._field_Elems.len()))) {
					_1ad987e4a_pushErr(_self_, (*((*(_97666_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_97632_d))))._field_Model=(*(_9888_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_9894_indx))];
					(*((*(_97632_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1be755a5e:;
	};
}



inline void _1ad992d45_indexingMap(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _99932_d, jule::Ptr<_1ad985b90_Data>* _99947_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _99966_i) {
	(*((*(_99932_d))))._field_Lvalue=true;
	if (((*(_99947_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1ad9c7352_Map> _10047_m = _1ad9bc7dc_Map((*((*(_99932_d))))._field_Kind.ptr());;
	_1ad974046_assignTypeChecker _10057_atc = _1ad974046_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_10047_m))._field_Key, ._field_d=(*(_99947_index)), ._field_errorToken=(*((*(_99966_i))))._field_Token, ._field_refers=_1ad98ae4d_getOwnerRefers(_self_)};;
	_1ad975047_check(&_10057_atc);
	(*((*(_99932_d))))._field_Kind=(*_10047_m.alloc)._field_Val;
}



inline void _1ad993263_indexingStr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _101632_d, jule::Ptr<_1ad985b90_Data>* _101647_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _101666_i) {
	(*((*(_101632_d))))._field_Kind=_1adaa0dcb_primU8;
	(*((*(_101632_d))))._field_Mutable=false;
	(*((*(_101632_d))))._field_Lvalue=true;
	if (((*(_101647_index)) == nullptr)) {
		return;;
	};
	_1ad991bbd_checkIntegerIndexingByData(_self_, _101647_index, (*((*(_101666_i))))._field_Token);
	if ((!(_1ad9865ca_IsConst((*(_101647_index)).ptr())))) {
		(*((*(_101632_d))))._field_Constant=nullptr;
		(*((*(_101632_d))))._field_untyped=false;
		return;;
	};
	if (_1ad9865ca_IsConst((*(_101632_d)).ptr())) {
		jule::I64 _10344_j = _1ad7d11e4_AsI64((*((*(_101647_index))))._field_Constant.ptr());;
		jule::Str _10354_s = _1ad7d0bc7_ReadStr((*((*(_101632_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10344_j) >= _10354_s.len())) {
			_1ad987e4a_pushErr(_self_, (*((*(_101666_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1ad7d1c72_SetU64((*((*(_101632_d))))._field_Constant, static_cast<jule::U64>(_10354_s[_10344_j]));
		};
	};
}



inline void _1ad993681_comptimeRange(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _104434_d, jule::Ptr<_1ad985b90_Data>* _104449_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _104468_i) {
	if (((*(_104449_index)) == nullptr)) {
		(*(_104434_d))=nullptr;
		return;;
	};
	if ((!(_1ad991bbd_checkIntegerIndexingByData(_self_, _104449_index, (*((*((*(_104468_i))))._field_Index))._field_Token)))) {
		(*(_104434_d))=nullptr;
		return;;
	};
	if ((!(_1ad9865ca_IsConst((*(_104449_index)).ptr())))) {
		(*(_104434_d))=nullptr;
		_1ad987e4a_pushErr(_self_, (*(*((*(_104468_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _10593_j = static_cast<jule::I64>(_1ad7d11e4_AsI64((*((*(_104449_index))))._field_Constant.ptr()));;
	jule::Ptr<_1ad87db21_comptimeRange> _10607_ci = _1ad9be0e6_comptimeRange((*((*(_104434_d))))._field_Kind.ptr());;
	if ((_10593_j >= ((_1ad87d901_comptimeRangeKindMptrData*)(*(_10607_ci))._field_kind.safe_type())->_1ad87d79c_len((*(_10607_ci))._field_kind.data))) {
		(*(_104434_d))=nullptr;
		_1ad987e4a_pushErr(_self_, (*(*((*(_104468_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1ad87d901_comptimeRangeKindMptrData*)(*_10607_ci.alloc)._field_kind.safe_type())->_1ad87cc85_index((*_10607_ci.alloc)._field_kind.data, _104434_d, _10593_j);
}



inline void _1ad993a9e_toIndexing(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _106931_d, jule::Ptr<_1ad985b90_Data>* _106946_index, jule::Ptr<_1ad7014aa_IndexingExpr>* _106965_i) {
	{
		
		if ((_1ad9bb269_Ptr((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be76c2c3:;
			{
				_1ad9920db_indexingPtr(_self_, _106931_d, _106946_index, _106965_i);
				return;;
			}
		}
		else if ((_1ad9bba1c_Arr((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be76c36c:;
			{
				_1ad992509_indexingArr(_self_, _106931_d, _106946_index, _106965_i);
				return;;
			}
		}
		else if ((_1ad9bbca3_Slc((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be76c3d3:;
			{
				_1ad992927_indexingSlc(_self_, _106931_d, _106946_index, _106965_i);
				return;;
			}
		}
		else if ((_1ad9bc7dc_Map((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be76c449:;
			{
				_1ad992d45_indexingMap(_self_, _106931_d, _106946_index, _106965_i);
				return;;
			}
		}
		else if ((_1ad9bac4c_Prim((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be76c4b0:;
			{
				jule::Ptr<_1ad9c16ae_Prim> _10844_prim = _1ad9bac4c_Prim((*((*(_106931_d))))._field_Kind);;
				{
					
					if (_1ad9c4b79_IsStr(_10844_prim.ptr())) {
						_case_begin_1be7717c2:;
						{
							_1ad993263_indexingStr(_self_, _106931_d, _106946_index, _106965_i);
							return;;
						}
					}
					_match_end_1be771717:;
				};
			}
		}
		else if ((_1ad9be0e6_comptimeRange((*((*(_106931_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be76c537:;
			{
				_1ad993681_comptimeRange(_self_, _106931_d, _106946_index, _106965_i);
				return;;
			}
		}
		_match_end_1be76c15d:;
	};
	_1ad987e4a_pushErr(_self_, (*((*(_106965_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_106931_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1ad994055_pushGenericsFromExprSubIdent(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _109750_sexpr, jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>* _10988_generics, jule::Ptr<_1ad6e94e7_Expr>* _109841_expr) {
	jule::Ptr<_1ad6e5a87_SubIdentTypeDecl> _10997_t = jule::new_ptr<_1ad6e5a87_SubIdentTypeDecl>(_1ad6e5a87_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1ad6e57bd_IdentTypeDecl>>(nullptr)});;
	if ((!(_1ad9b44e8_pushSubIdentFromExpr(jule::Any((*(_109750_sexpr)), &__jule_any_type88), &(_10997_t))))) {
		_1ad987e4a_pushErr(_self_.ptr(), (*((*(_109841_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> &__jule_push_dest = (*(_10988_generics)); __jule_push_dest.push(jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Kind=jule::Any(_10997_t, &__jule_any_type89)})); };
	return true;;
}



inline jule::Bool _1ad994451_pushGenericsFromData(jule::Ptr<_1ad9878b7_eval> _self_, jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>* _110842_generics, jule::Ptr<_1ad6e94e7_Expr>* _110875_expr) {
	{
		auto &_match_expr{ (*((*(_110875_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1be778345:;
			{
				jule::Ptr<_1ad6eb5a4_UnaryExpr> _11118_u = (*((*(_110875_expr))))._field_Kind.unsafe_cast_ptr<_1ad6eb5a4_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_11118_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1be77c3c1:;
						{
							jule::Ptr<_1ad6e6bdc_PtrTypeDecl> _11149_kind = jule::new_ptr<_1ad6e6bdc_PtrTypeDecl>(_1ad6e6bdc_PtrTypeDecl{._field_Elem=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> _11159__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr); __jule_collection; });;
							_1ad994451_pushGenericsFromData(_self_, &(_11159__generics), &((*(_11118_u))._field_Expr));
							(*_11149_kind.alloc)._field_Elem=_11159__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> &__jule_push_dest = (*(_110842_generics)); __jule_push_dest.push(jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=(*((*(_110875_expr))))._field_Token, ._field_Kind=jule::Any(_11149_kind, &__jule_any_type73)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1be77e1e7:;
						{
							jule::Ptr<_1ad6e625d_SptrTypeDecl> _11239_kind = jule::new_ptr<_1ad6e625d_SptrTypeDecl>(_1ad6e625d_SptrTypeDecl{._field_Elem=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> _11249__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr); __jule_collection; });;
							_1ad994451_pushGenericsFromData(_self_, &(_11249__generics), &((*(_11118_u))._field_Expr));
							(*_11239_kind.alloc)._field_Elem=_11249__generics[0LL];
							{ jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> &__jule_push_dest = (*(_110842_generics)); __jule_push_dest.push(jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=(*((*(_110875_expr))))._field_Token, ._field_Kind=jule::Any(_11239_kind, &__jule_any_type74)})); };
						}
					}
					else {
						_case_begin_1be77c6e0:;
						{
							_1ad987e4a_pushErr(_self_.ptr(), (*(_11118_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1be77bc61:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1be778246:;
			{
				{ jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> &__jule_push_dest = (*(_110842_generics)); __jule_push_dest.push((*((*(_110875_expr))))._field_Kind.cast_ptr<_1ad6e51b3_TypeDecl>(&__jule_any_type91)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1be7782ac:;
			{
				jule::Ptr<_1ad6ec60a_SubIdentExpr> _11388_sexpr = (*((*(_110875_expr))))._field_Kind.unsafe_cast_ptr<_1ad6ec60a_SubIdentExpr>();;
				return _1ad994055_pushGenericsFromExprSubIdent(_self_, &(_11388_sexpr), _110842_generics, _110875_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1be7796ba:;
			{
				jule::Ptr<_1ad6ead12_IdentExpr> _11418_ident = (*((*(_110875_expr))))._field_Kind.unsafe_cast_ptr<_1ad6ead12_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> &__jule_push_dest = (*(_110842_generics)); __jule_push_dest.push(jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1ad6e57bd_IdentTypeDecl>(_1ad6e57bd_IdentTypeDecl{._field_Token=(*_11418_ident.alloc)._field_Token, ._field_Ident=(*_11418_ident.alloc)._field_Ident, ._field_Binded=(*(_11418_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>(nullptr)}), &__jule_any_type77)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1be779731:;
			{
				{
					auto expr = &((*((*((*(_110875_expr))))._field_Kind.unsafe_cast_ptr<_1ad6ea0db_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be788355:;
					if (it != expr_end) {
						jule::Ptr<_1ad6e94e7_Expr> _115016_texpr = *it;
						{
							if ((!(_1ad994451_pushGenericsFromData(_self_, _110842_generics, &(_115016_texpr))))) {
								return false;;
							};
						}
						_iter_next_1be788355:;
						++it;
						goto _iter_begin_1be788355;
					}
					_iter_end_1be788355:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1be7757c6:;
			{
				jule::Ptr<_1ad6ec231_NamespaceExpr> _11568_ns = (*((*(_110875_expr))))._field_Kind.unsafe_cast_ptr<_1ad6ec231_NamespaceExpr>();;
				jule::Ptr<_1ad6e57bd_IdentTypeDecl> _11578_decl = jule::new_ptr<_1ad6e57bd_IdentTypeDecl>(_1ad6e57bd_IdentTypeDecl{._field_Token=(*(_11568_ns))._field_Ident, ._field_Ident=(*((*_11568_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> &__jule_push_dest = (*(_110842_generics)); __jule_push_dest.push(jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=(*(_11578_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ad6e5e61_NamespaceTypeDecl>(_1ad6e5e61_NamespaceTypeDecl{._field_Namespace=(*_11568_ns.alloc)._field_Namespace, ._field_Kind=jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=(*_11578_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11578_decl, &__jule_any_type77)})}), &__jule_any_type93)})); };
			}
		}
		else {
			_case_begin_1be7781d0:;
			{
				_1ad987e4a_pushErr(_self_.ptr(), (*((*(_110875_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1be778136:;
	};
	return true;;
}



inline void _1ad9947b4_evalIdentDeclFromIndexing(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad985b90_Data>* _117847_d, jule::Ptr<_1ad7014aa_IndexingExpr>* _117862_i) {
	jule::Ptr<_1ad718857_StructIns> _11797_s = _1ad9bc2c0_Struct((*((*(_117847_d))))._field_Kind.ptr());;
	if ((_11797_s == nullptr)) {
		_1ad987e4a_pushErr(_self_.ptr(), (*((*((*(_117862_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_117847_d))))._field_Kind), &__jule_any_type5); __jule_collection; }));
		(*(_117847_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ad6e57bd_IdentTypeDecl> _118611_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_117862_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1be795274:;
			{
				jule::Ptr<_1ad6ead12_IdentExpr> _11898_expr = (*((*((*(_117862_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1ad6ead12_IdentExpr>();;
				_118611_decl=jule::new_ptr<_1ad6e57bd_IdentTypeDecl>(_1ad6e57bd_IdentTypeDecl{._field_Token=(*_11898_expr.alloc)._field_Token, ._field_Ident=(*_11898_expr.alloc)._field_Ident, ._field_Binded=(*(_11898_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1be79686e:;
			{
				jule::Ptr<_1ad6ec231_NamespaceExpr> _11968_expr = (*((*((*(_117862_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1ad6ec231_NamespaceExpr>();;
				_118611_decl=jule::new_ptr<_1ad6e57bd_IdentTypeDecl>(_1ad6e57bd_IdentTypeDecl{._field_Token=(*(_11968_expr))._field_Ident, ._field_Ident=(*((*_11968_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1be7958b2:;
			{
				_1ad987e4a_pushErr(_self_, (*((*(_117862_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_117847_d))=nullptr;
				return;;
			}
		}
		_match_end_1be79584b:;
	};
	if ((!(_1ad994451_pushGenericsFromData(_self_, &((*(_118611_decl))._field_Generics), &((*((*(_117862_i))))._field_Index))))) {
		(*(_117847_d))=nullptr;
		return;;
	};
	_11797_s=({ auto _wrap_copy = _1ad99b2b0_typeChecker(_self_); _1ad9ced2c_fromStruct(&_wrap_copy, &(_118611_decl), &((*(_11797_s))._field_Decl)); });
	if ((_11797_s == nullptr)) {
		(*(_117847_d))=nullptr;
		return;;
	};
	(*(*((*(_117847_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_11797_s, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1ad994c6a_checkGenericFn(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _122136_f, jule::Ptr<_1ad6ceb70_Token>* _122152_et, jule::Any* _122176_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ad7ea84b_FnIns> _12227_old = (*(_122136_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad92a7c2_checkGenericFn((*(_self_))._field_s, _122136_f, _122152_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1ad9b4174_updateModelToGenericIns(_122176_model, _122136_f);
		_1be79d4e1_updateRefer(_1ad98ae4d_getOwnerRefers(_self_), &(_12227_old), _122136_f);
	};
	return __jule_func_result;;
}



inline void _1ad9950cd_evalFnGenericFromIndexing(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad985b90_Data>* _123747_d, jule::Ptr<_1ad7014aa_IndexingExpr>* _123762_i) {
	jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> _12387_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1ad994451_pushGenericsFromData(_self_, &(_12387_generics), &((*((*(_123762_i))))._field_Index))))) {
		(*(_123747_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _12447_f = _1ad9bc039_Fn((*((*(_123747_d))))._field_Kind.ptr());;
	jule::I64 _12457_genericsLen = 0LL;;
	if (((*(_12447_f))._field_Decl != nullptr)) {
		_12457_genericsLen=(*(*(_12447_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1ad9142a0_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12457_genericsLen, _12387_generics.len(), (*((*((*(_123762_i))))._field_Expr))._field_Token)))) {
		(*(_123747_d))=nullptr;
		return;;
	};
	(*_12447_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>::alloc(0LL, (*(*(_12447_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad9b6de1_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12387_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7a4151:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e51b3_TypeDecl> _125615_g = *it;
			{
				jule::Ptr<_1ad985b90_Data> _12578_k = _1ad99b601_evalType(_self_, _125615_g);;
				if ((_12578_k == nullptr)) {
					(*(_123747_d))=nullptr;
					return;;
				};
				(*_12447_f.alloc)._field_Generics=jule::append((*_12447_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ad9b6de1_InsGeneric>(_1ad9b6de1_InsGeneric{._field_Kind=(*(_12578_k))._field_Kind, ._field_Constraint=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1be7a4151:;
			++it;
			goto _iter_begin_1be7a4151;
		}
		_iter_end_1be7a4151:;
	};
	if (_1ad7ebd14_IsBuiltin(_12447_f)) {
		return;;
	};
	jule::Bool _12693_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad994c6a_checkGenericFn(_self_, &(_12447_f), &((*(*((*(_123762_i))))._field_Expr.alloc)._field_Token), &((*((*(_123747_d))))._field_Model));
		_12693_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12693_ok) {
		(*(*((*(_123747_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12447_f, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1);
	} else {
		(*(_123747_d))=nullptr;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad99541e_evalIndexing(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad7014aa_IndexingExpr> _127733_i) {
	jule::Ptr<_1ad9b8596_TypeKind> _12787_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12787_prefix;
	});;
	jule::Ptr<_1ad985b90_Data> _12827_d = _1ad9a5918_evalExprKind(_self_, (*((*(_127733_i))._field_Expr))._field_Kind);;
	if ((_12827_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12827_d))._field_Decl) {
		_1ad9947b4_evalIdentDeclFromIndexing(_self_, &(_12827_d), &(_127733_i));
		return _12827_d;;
	};
	if ((_1ad9bc039_Fn((*(_12827_d))._field_Kind.ptr()) != nullptr)) {
		_1ad9950cd_evalFnGenericFromIndexing(_self_, &(_12827_d), &(_127733_i));
		return _12827_d;;
	};
	_1ad985b90_Data _12987_oldData = (*(_12827_d));;
	jule::Ptr<_1ad985b90_Data> _13007_index = _1ad9a672c_evalExpr(_self_, (*_127733_i.alloc)._field_Index);;
	if ((_13007_index == nullptr)) {
		return nullptr;;
	};
	_1ad8cb08b_makeComptimeRange(&(_12827_d));
	(*(_12827_d))._field_Decl=false;
	_1ad993a9e_toIndexing(_self_, &(_12827_d), &(_13007_index), &(_127733_i));
	if ((_12827_d == nullptr)) {
		return nullptr;;
	};
	if (_1ad9865ca_IsConst(_12827_d.ptr())) {
		(*(_12827_d))._field_Decl=false;
		(*(_12827_d))._field_Model=jule::Any((*(_12827_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_12827_d))._field_Decl) {
		(*(_12827_d))._field_Decl=false;
	} else {
		(*(_12827_d))._field_Model=jule::Any(jule::new_ptr<_1ad7dcc17_IndexingExprModel>(_1ad7dcc17_IndexingExprModel{._field_Token=(*_127733_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1ad985b90_Data>(_12987_oldData), ._field_Index=_13007_index}), &__jule_any_type42);
	};
	return _12827_d;;
}



inline __jule_tuple_x_1ad985b90_Data__jule_tuple_x_1ad985b90_Data _1ad995760_evalSlicingExprs(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad701b1a_SlicingExpr>* _133738_s) {
	__jule_tuple_x_1ad985b90_Data__jule_tuple_x_1ad985b90_Data __jule_func_result;
	jule::Ptr<_1ad9b8596_TypeKind> _13387_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13387_prefix;
	});;
	jule::Ptr<_1ad985b90_Data> _134211_l = nullptr;;
	jule::Ptr<_1ad985b90_Data> _134311_r = nullptr;;
	if (((*((*(_133738_s))))._field_Start != nullptr)) {
		_134211_l=_1ad9a672c_evalExpr(_self_, (*((*(_133738_s))))._field_Start);
		if ((_134211_l != nullptr)) {
			_1ad991bbd_checkIntegerIndexingByData(_self_, &(_134211_l), (*((*(_133738_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_134211_l=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1adaa00c8_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ad7ce07c_NewI64(0LL)});
		(*((*(_134211_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_134211_l.alloc)._field_Model=jule::Any((*_134211_l.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*((*(_133738_s))))._field_To != nullptr)) {
		_134311_r=_1ad9a672c_evalExpr(_self_, (*((*(_133738_s))))._field_To);
		if ((_134311_r != nullptr)) {
			_1ad991bbd_checkIntegerIndexingByData(_self_, &(_134311_r), (*((*(_133738_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _134211_l;
	__jule_func_result.__jule_result_arg1 = _134311_r;
	return __jule_func_result;;
}



inline void _1ad995a18_slicingArr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _137327_d) {
	jule::Ptr<_1ad9b8596_TypeKind> _13747_elemType = (*(_1ad9bba1c_Arr((*((*(_137327_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_137327_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad9c5bad_Slc>(_1ad9c5bad_Slc{._field_Elem=_13747_elemType}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data24)});
	(*((*(_137327_d))))._field_Lvalue=false;
	(*((*(_137327_d))))._field_Mutable=((*((*(_137327_d))))._field_Mutable || (!(_1ad9b9e7c_Mutable(_13747_elemType.ptr()))));
}



inline void _1ad995e36_slicingStr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _138827_d, jule::Ptr<_1ad985b90_Data>* _138838_l, jule::Ptr<_1ad985b90_Data>* _138849_r) {
	(*((*(_138827_d))))._field_Lvalue=false;
	(*((*(_138827_d))))._field_Mutable=true;
	if ((!(_1ad9865ca_IsConst((*(_138827_d)).ptr())))) {
		return;;
	};
	if ((((*(_138838_l)) == nullptr) || ((*(_138849_r)) == nullptr))) {
		(*((*(_138827_d))))._field_Constant=nullptr;
		(*((*(_138827_d))))._field_untyped=false;
		return;;
	};
	if ((_1ad9865ca_IsConst((*(_138838_l)).ptr()) && _1ad9865ca_IsConst((*(_138849_r)).ptr()))) {
		jule::I64 _14024_left = _1ad7d11e4_AsI64((*((*(_138838_l))))._field_Constant.ptr());;
		if ((_14024_left < 0LL)) {
			return;;
		};
		jule::Str _14074_s = _1ad7d0bc7_ReadStr((*((*(_138827_d))))._field_Constant);;
		jule::I64 _14088_right = static_cast<jule::I64>(0LL);;
		if (((*(_138849_r)) == nullptr)) {
			_14088_right=static_cast<jule::I64>(_14074_s.len());
		} else {
			_14088_right=_1ad7d11e4_AsI64((*((*(_138849_r))))._field_Constant);
		};
		if ((_14024_left > _14088_right)) {
			return;;
		};
		_1ad7d22d3_SetStr((*((*(_138827_d))))._field_Constant, _14074_s.slice(_14024_left, _14088_right));
		(*((*(_138827_d))))._field_Decl=true;
	} else {
		(*((*(_138827_d))))._field_Constant=nullptr;
		(*((*(_138827_d))))._field_untyped=false;
	};
}



inline void _1ad99640e_checkSlicing(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _142633_d, jule::Ptr<_1ad985b90_Data>* _142644_l, jule::Ptr<_1ad985b90_Data>* _142655_r, jule::Ptr<_1ad701b1a_SlicingExpr>* _142666_s) {
	{
		
		if ((_1ad9bba1c_Arr((*((*(_142633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be7c0e09:;
			{
				_1ad995a18_slicingArr(_self_, _142633_d);
				return;;
			}
		}
		else if ((_1ad9bbca3_Slc((*((*(_142633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be7c0ea3:;
			{
				return;;
			}
		}
		else if ((_1ad9bac4c_Prim((*((*(_142633_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be7c1019:;
			{
				jule::Ptr<_1ad9c16ae_Prim> _14344_prim = _1ad9bac4c_Prim((*((*(_142633_d))))._field_Kind);;
				{
					
					if (_1ad9c4b79_IsStr(_14344_prim.ptr())) {
						_case_begin_1be7c37e1:;
						{
							_1ad995e36_slicingStr(_self_, _142633_d, _142644_l, _142655_r);
							return;;
						}
					}
					_match_end_1be7c3736:;
				};
			}
		}
		_match_end_1be7c0cc7:;
	};
	_1ad987e4a_pushErr(_self_, (*((*(_142666_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_142633_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Ptr<_1ad985b90_Data> _1ad996750_evalSlicing(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad701b1a_SlicingExpr> _144532_s) {
	jule::Ptr<_1ad985b90_Data> _14467_d = _1ad9a672c_evalExpr(_self_, (*(_144532_s))._field_Expr);;
	if ((_14467_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad985b90_Data> _14517_l;
	jule::Ptr<_1ad985b90_Data> _145114_r;
	({
		__jule_tuple_x_1ad985b90_Data__jule_tuple_x_1ad985b90_Data __jule_assign_result = _1ad995760_evalSlicingExprs(_self_, &(_144532_s));
		_14517_l = __jule_assign_result.__jule_result_arg0;
		_145114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14517_l == nullptr)) {
		return _14467_d;;
	};
	(*(_14467_d))._field_Decl=false;
	_1ad99640e_checkSlicing(_self_, &(_14467_d), &(_14517_l), &(_145114_r), &(_144532_s));
	if (_1ad9865ca_IsConst(_14467_d.ptr())) {
		(*(_14467_d))._field_Decl=false;
		(*(_14467_d))._field_Model=jule::Any((*(_14467_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_14467_d))._field_Decl) {
		(*(_14467_d))._field_Decl=false;
	} else {
		jule::Ptr<_1ad7de004_SlicingExprModel> _14698_model = jule::new_ptr<_1ad7de004_SlicingExprModel>(_1ad7de004_SlicingExprModel{._field_Token=(*_144532_s.alloc)._field_Token, ._field_Expr=(*(_14467_d))._field_Model, ._field_Left=(*(_14517_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_145114_r != nullptr)) {
			(*(_14698_model))._field_Right=(*_145114_r.alloc)._field_Model;
		};
		(*(_14467_d))._field_Model=jule::Any(_14698_model, &__jule_any_type94);
	};
	return _14467_d;;
}



inline void _1ad996b6d_castPtr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _148227_t, jule::Ptr<_1ad985b90_Data> _148245_d, jule::Ptr<_1ad6ceb70_Token> _148255_errorToken) {
	(*(_148245_d))._field_Constant=nullptr;
	(*_148245_d.alloc)._field_untyped=false;
	jule::Ptr<_1ad9c51da_Sptr> _14853_sptr = _1ad9baed3_Sptr((*_148245_d.alloc)._field_Kind.ptr());;
	if ((_14853_sptr != nullptr)) {
		if ((!(_1ad9b8cd3_Equal((*(_1ad9bb269_Ptr(_148227_t.ptr())))._field_Elem, (*_14853_sptr.alloc)._field_Elem)))) {
			_1ad987e4a_pushErr(_self_, _148255_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_148245_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_148227_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1ad988940_isUnsafe(_self_)))) {
		_1ad987e4a_pushErr(_self_, _148255_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _14983_prim = _1ad9bac4c_Prim((*(_148245_d))._field_Kind);;
	if (((_1ad9bb269_Ptr((*(_148245_d))._field_Kind) == nullptr) && ((_14983_prim == nullptr) || (!(_1ad87c0c5_IsInt(_1ad9c1a33_Str(_14983_prim.ptr()))))))) {
		_1ad987e4a_pushErr(_self_, _148255_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_148245_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_148227_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1ad99708b_castStruct(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _150430_t, jule::Ptr<_1ad985b90_Data> _150448_d, jule::Ptr<_1ad6ceb70_Token> _150458_errorToken) {
	(*(_150448_d))._field_Constant=nullptr;
	(*_150448_d.alloc)._field_untyped=false;
	jule::Ptr<_1ad802ea2_Trait> _15077_tr = _1ad9bc556_Trait((*_150448_d.alloc)._field_Kind.ptr());;
	if ((_15077_tr == nullptr)) {
		_1ad987e4a_pushErr(_self_, _150458_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_150448_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_150430_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ad718857_StructIns> _15137_s = _1ad9bc2c0_Struct(_150430_t);;
	_1be7d787c_pushReference(_self_, &(_15137_s));
	if ((!(_1ad71716e_IsImplements((*(_15137_s))._field_Decl.ptr(), _15077_tr)))) {
		_1ad987e4a_pushErr(_self_, _150458_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_150448_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_150430_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1ad9974a9_castRef(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _152127_t, jule::Ptr<_1ad985b90_Data> _152145_d, jule::Ptr<_1ad6ceb70_Token> _152155_errorToken) {
	(*(_152145_d))._field_Constant=nullptr;
	(*_152145_d.alloc)._field_untyped=false;
	jule::Ptr<_1ad9c51da_Sptr> _15247_sptr = _1ad9baed3_Sptr(_152127_t.ptr());;
	jule::Ptr<_1ad9c89a2_Ptr> _15267_ptr = _1ad9bb269_Ptr((*_152145_d.alloc)._field_Kind.ptr());;
	if (((_15267_ptr != nullptr) && _1ad9b8cd3_Equal((*(_15247_sptr))._field_Elem, (*_15267_ptr.alloc)._field_Elem))) {
		if ((!(_1ad988940_isUnsafe(_self_)))) {
			_1ad987e4a_pushErr(_self_, _152155_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1ad9bc2c0_Struct((*(_15247_sptr))._field_Elem) != nullptr)) {
		_1ad99708b_castStruct(_self_, (*_15247_sptr.alloc)._field_Elem, _152145_d, _152155_errorToken);
		return;;
	};
	_1ad987e4a_pushErr(_self_, _152155_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_152145_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_152127_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1ad9978c7_castSlc(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _154427_t, jule::Ptr<_1ad985b90_Data> _154445_d, jule::Ptr<_1ad6ceb70_Token> _154455_errorToken) {
	jule::Ptr<_1ad778ec2_Const> _15453_c = (*(_154445_d))._field_Constant;;
	(*_154445_d.alloc)._field_Constant=nullptr;
	(*_154445_d.alloc)._field_untyped=false;
	if ((_1ad9bb500_Enum((*_154445_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1ad9bac4c_Prim((*((*(_1ad9bb500_Enum((*(_154445_d))._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1ad9c4b79_IsStr(_1ad9bac4c_Prim((*((*(_1ad9bb500_Enum((*(_154445_d))._field_Kind.ptr())))._field_Kind))._field_Kind).ptr()))))) {
			_1ad987e4a_pushErr(_self_, _154455_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_154445_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_154427_t.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else if (((_1ad9bac4c_Prim((*_154445_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1ad9c4b79_IsStr(_1ad9bac4c_Prim((*(_154445_d))._field_Kind).ptr()))))) {
		_1ad987e4a_pushErr(_self_, _154455_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_154445_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_154427_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_154427_t=(*(_1ad9bbca3_Slc(_154427_t.ptr())))._field_Elem;
	jule::Ptr<_1ad9c16ae_Prim> _15603_prim = _1ad9bac4c_Prim(_154427_t);;
	if (((_15603_prim == nullptr) || ((!(_1ad9c30d9_IsU8(_15603_prim.ptr()))) && (!(_1ad9c2abc_IsI32(_15603_prim.ptr())))))) {
		_1ad987e4a_pushErr(_self_, _154455_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*_154445_d.alloc)._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_154427_t), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((_15453_c != nullptr)) {
		{
			
			if (_1ad9c30d9_IsU8(_15603_prim.ptr())) {
				_case_begin_1be7ebe35:;
				{
					jule::Str _15705_s = _1ad7d0bc7_ReadStr(_15453_c);;
					jule::Ptr<_1ad7dc761_SliceExprModel> _15719_model = jule::new_ptr<_1ad7dc761_SliceExprModel>(_1ad7dc761_SliceExprModel{._field_ElemKind=_154427_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15705_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15705_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be7ed7c7:;
						if (it != expr_end) {
							jule::U8 *_157512_b = it;
							{
								jule::Ptr<_1ad778ec2_Const> _157610_bc = static__1ad7ce258_NewU64(static_cast<jule::U64>((*(_157512_b))));;
								(*(_157610_bc))._field_Kind=(*(_15603_prim))._field_Kind;
								(*(_15719_model))._field_Elems=jule::append((*_15719_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_157610_bc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1be7ed7c7:;
							++it;
							goto _iter_begin_1be7ed7c7;
						}
						_iter_end_1be7ed7c7:;
					};
					(*_154445_d.alloc)._field_Model=jule::Any(_15719_model, &__jule_any_type79);
					(*_154445_d.alloc)._field_Decl=true;
				}
			}
			else if (_1ad9c2abc_IsI32(_15603_prim.ptr())) {
				_case_begin_1be7ebece:;
				{
					jule::Slice<jule::I32> _15835_runes = __jule_strToRunes(_1ad7d0bc7_ReadStr(_15453_c));;
					jule::Ptr<_1ad7dc761_SliceExprModel> _15849_model = jule::new_ptr<_1ad7dc761_SliceExprModel>(_1ad7dc761_SliceExprModel{._field_ElemKind=_154427_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15835_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15835_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be801c09:;
						if (it != expr_end) {
							jule::I32 *_158812_r = it;
							{
								jule::Ptr<_1ad778ec2_Const> _158910_rc = static__1ad7ce07c_NewI64(static_cast<jule::I64>((*(_158812_r))));;
								(*(_158910_rc))._field_Kind=(*(_15603_prim))._field_Kind;
								(*(_15849_model))._field_Elems=jule::append((*_15849_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_158910_rc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1be801c09:;
							++it;
							goto _iter_begin_1be801c09;
						}
						_iter_end_1be801c09:;
					};
					(*_154445_d.alloc)._field_Model=jule::Any(_15849_model, &__jule_any_type79);
					(*_154445_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1be7ebd47:;
		};
	};
}



inline void _1ad997c3a_castStr(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data> _159927_d, jule::Ptr<_1ad6ceb70_Token> _159937_errorToken) {
	if ((_1ad9bb500_Enum((*(_159927_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad805658_Enum> _16018_e = _1ad9bb500_Enum((*(_159927_d))._field_Kind);;
		if (((_1ad9bac4c_Prim((*((*(_16018_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1ad9c4b79_IsStr(_1ad9bac4c_Prim((*((*(_16018_e))._field_Kind))._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ad778ec2_Const> _16073_c = (*_159927_d.alloc)._field_Constant;;
	(*_159927_d.alloc)._field_Constant=nullptr;
	(*_159927_d.alloc)._field_untyped=false;
	if ((_1ad9bac4c_Prim((*(_159927_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1ad9c16ae_Prim> _16114_prim = _1ad9bac4c_Prim((*(_159927_d))._field_Kind);;
		if (((!(_1ad9c30d9_IsU8(_16114_prim.ptr()))) && (!(_1ad9c2abc_IsI32(_16114_prim))))) {
			_1ad987e4a_pushErr(_self_, _159937_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_159927_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
			return;;
		};
		if ((_16073_c != nullptr)) {
			{
				
				if (_1ad9c30d9_IsU8(_16114_prim)) {
					_case_begin_1be80986b:;
					{
						(*_159927_d.alloc)._field_Constant=static__1ad7ce7db_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1ad7d147a_AsU64(_16073_c))));
						(*_159927_d.alloc)._field_Model=jule::Any((*_159927_d.alloc)._field_Constant, &__jule_any_type15);
						(*_159927_d.alloc)._field_Decl=true;
					}
				}
				else if (_1ad9c2abc_IsI32(_16114_prim)) {
					_case_begin_1be809915:;
					{
						(*_159927_d.alloc)._field_Constant=static__1ad7ce7db_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1ad7d11e4_AsI64(_16073_c))));
						(*_159927_d.alloc)._field_Model=jule::Any((*_159927_d.alloc)._field_Constant, &__jule_any_type15);
						(*_159927_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1be80975b:;
			};
		};
		return;;
	};
	jule::Ptr<_1ad9c5bad_Slc> _16327_s = _1ad9bbca3_Slc((*(_159927_d))._field_Kind);;
	if ((_16327_s == nullptr)) {
		_1ad987e4a_pushErr(_self_, _159937_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_159927_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ad9b8596_TypeKind> _16387_t = (*(_16327_s))._field_Elem;;
	jule::Ptr<_1ad9c16ae_Prim> _16393_prim = _1ad9bac4c_Prim(_16387_t.ptr());;
	if (((_16393_prim == nullptr) || ((!(_1ad9c30d9_IsU8(_16393_prim.ptr()))) && (!(_1ad9c2abc_IsI32(_16393_prim.ptr())))))) {
		_1ad987e4a_pushErr(_self_, _159937_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_159927_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return;;
	};
}



inline void _1ad998158_castInt(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _164627_t, jule::Ptr<_1ad985b90_Data> _164645_d, jule::Ptr<_1ad6ceb70_Token> _164655_errorToken) {
	if (_1ad9865ca_IsConst(_164645_d.ptr())) {
		jule::Ptr<_1ad9c16ae_Prim> _16484_prim = _1ad9bac4c_Prim(_164627_t.ptr());;
		{
			
			if (_1ad87b9ed_IsSigInt((*(_16484_prim))._field_Kind)) {
				_case_begin_1be8130a0:;
				{
					_1ad7d19b9_SetI64((*_164645_d.alloc)._field_Constant.ptr(), _1ad7d11e4_AsI64((*(_164645_d))._field_Constant));
				}
			}
			else if (_1ad87bd0b_IsUnsigInt((*(_16484_prim))._field_Kind)) {
				_case_begin_1be813149:;
				{
					_1ad7d1c72_SetU64((*_164645_d.alloc)._field_Constant.ptr(), _1ad7d147a_AsU64((*(_164645_d))._field_Constant));
				}
			}
			_match_end_1be813017:;
		};
	} else {
		(*(_164645_d))._field_Constant=nullptr;
		(*_164645_d.alloc)._field_untyped=false;
	};
	if ((_1ad9bb500_Enum((*(_164645_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad805658_Enum> _16614_e = _1ad9bb500_Enum((*(_164645_d))._field_Kind);;
		if (_1ad87c69c_IsNum(_1ad9b8992_Str((*((*(_16614_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1ad9baed3_Sptr((*(_164645_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1ad9c16ae_Prim> _16684_prim = _1ad9bac4c_Prim(_164627_t.ptr());;
		if ((!(_1ad9c465c_IsUintptr(_16684_prim.ptr())))) {
			_1ad987e4a_pushErr(_self_, _164655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_164645_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_164627_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((_1ad9bb269_Ptr((*(_164645_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1ad9c16ae_Prim> _16754_prim = _1ad9bac4c_Prim(_164627_t);;
		if (_1ad9c465c_IsUintptr(_16754_prim.ptr())) {
		} else if ((!(_1ad988940_isUnsafe(_self_)))) {
			_1ad987e4a_pushErr(_self_, _164655_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _16843_prim = _1ad9bac4c_Prim((*(_164645_d))._field_Kind);;
	if (((_16843_prim != nullptr) && _1ad87c69c_IsNum(_1ad9c1a33_Str(_16843_prim)))) {
		return;;
	};
	_1ad987e4a_pushErr(_self_, _164655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_164645_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_164627_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1ad998576_castNum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _169227_t, jule::Ptr<_1ad985b90_Data> _169245_d, jule::Ptr<_1ad6ceb70_Token> _169255_errorToken) {
	if (_1ad9865ca_IsConst(_169245_d.ptr())) {
		jule::Ptr<_1ad9c16ae_Prim> _16944_prim = _1ad9bac4c_Prim(_169227_t.ptr());;
		{
			
			if (_1ad87c416_IsFloat((*(_16944_prim))._field_Kind)) {
				_case_begin_1be81e4a7:;
				{
					_1ad7d258b_SetF64((*_169245_d.alloc)._field_Constant.ptr(), _1ad7d1711_AsF64((*(_169245_d))._field_Constant));
				}
			}
			else if (_1ad87b9ed_IsSigInt((*(_16944_prim))._field_Kind)) {
				_case_begin_1be81e551:;
				{
					_1ad7d19b9_SetI64((*_169245_d.alloc)._field_Constant.ptr(), _1ad7d11e4_AsI64((*(_169245_d))._field_Constant));
				}
			}
			else if (_1ad87bd0b_IsUnsigInt((*(_16944_prim))._field_Kind)) {
				_case_begin_1be81e5b7:;
				{
					_1ad7d1c72_SetU64((*_169245_d.alloc)._field_Constant.ptr(), _1ad7d147a_AsU64((*(_169245_d))._field_Constant));
				}
			}
			_match_end_1be81e3ca:;
		};
	} else {
		(*(_169245_d))._field_Constant=nullptr;
		(*_169245_d.alloc)._field_untyped=false;
	};
	if ((_1ad9bb500_Enum((*(_169245_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad805658_Enum> _17094_e = _1ad9bb500_Enum((*(_169245_d))._field_Kind);;
		if (_1ad87c69c_IsNum(_1ad9b8992_Str((*((*(_17094_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ad9c16ae_Prim> _17153_prim = _1ad9bac4c_Prim((*(_169245_d))._field_Kind);;
	if (((_17153_prim != nullptr) && _1ad87c69c_IsNum(_1ad9c1a33_Str(_17153_prim)))) {
		return;;
	};
	_1ad987e4a_pushErr(_self_, _169255_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_169245_d))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_169227_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1ad998994_castPrim(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _172328_t, jule::Ptr<_1ad985b90_Data> _172346_d, jule::Ptr<_1ad6ceb70_Token> _172356_errorToken) {
	jule::Ptr<_1ad9c16ae_Prim> _17243_prim = _1ad9bac4c_Prim(_172328_t.ptr());;
	{
		
		if (_1ad9c4e10_IsAny(_17243_prim.ptr())) {
			_case_begin_1be8279cc:;
			{
				__jule_panic_s(jule::Str::lit("sema: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1727:4"));;
			}
		}
		else if (_1ad9c4b79_IsStr(_17243_prim.ptr())) {
			_case_begin_1be82767a:;
			{
				_1ad997c3a_castStr(_self_, _172346_d, _172356_errorToken);
			}
		}
		else if (_1ad87c0c5_IsInt(_1ad9c1a33_Str(_17243_prim.ptr()))) {
			_case_begin_1be8276e1:;
			{
				_1ad998158_castInt(_self_, _172328_t, _172346_d, _172356_errorToken);
			}
		}
		else if (_1ad87c69c_IsNum(_1ad9c1a33_Str(_17243_prim.ptr()))) {
			_case_begin_1be827757:;
			{
				_1ad998576_castNum(_self_, _172328_t, _172346_d, _172356_errorToken);
			}
		}
		else {
			_case_begin_1be827614:;
			{
				_1ad987e4a_pushErr(_self_, _172356_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str(_172328_t), &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be82758c:;
	};
}



inline void _1ad998d07_castConstant(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _173933_t, jule::Ptr<_1ad985b90_Data>* _173952_d) {
	if ((((*(_173952_d)) == nullptr) || (!(_1ad9865ca_IsConst((*(_173952_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _17433_prim = _1ad9bac4c_Prim((*(_173933_t)).ptr());;
	_1ad9b3e98_castConstByType(&((*(_17433_prim))._field_Kind), _173952_d);
	(*((*(_173952_d))))._field_Model=jule::Any((*((*(_173952_d))))._field_Constant, &__jule_any_type15);
}



inline void _1ad999225_castTypeEnum(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _174833_t, jule::Ptr<_1ad985b90_Data>* _174852_d, jule::Ptr<_1ad6ceb70_Token>* _174867_errorToken) {
	jule::I64 _17493_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ad91abbe_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_174852_d))))._field_Kind), _174833_t, _174867_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17493_n);;
		_1ad987e4a_pushErr(_self_, (*(_174867_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_174852_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_174833_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_174852_d))))._field_Constant=nullptr;
	(*((*(_174852_d))))._field_untyped=false;
}



inline void _1ad999643_castTypeEnumT(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _175834_t, jule::Ptr<_1ad985b90_Data>* _175853_d, jule::Ptr<_1ad6ceb70_Token>* _175868_errorToken) {
	jule::I64 _17593_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ad91abbe_checkTypeCompatibility((*(_self_))._field_s, _175834_t, &((*((*(_175853_d))))._field_Kind), _175868_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17593_n);;
		_1ad987e4a_pushErr(_self_, (*(_175868_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_175853_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_175834_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_175853_d))))._field_Constant=nullptr;
	(*((*(_175853_d))))._field_untyped=false;
}



inline jule::Ptr<_1ad985b90_Data> _1ad999ae9_evalCastByTypeNData(_1ad9878b7_eval* _self_, jule::Ptr<_1ad9b8596_TypeKind> _176839_t, jule::Ptr<_1ad985b90_Data> _176857_d, jule::Ptr<_1ad6ceb70_Token> _176871_errorToken) {
	if (((_176857_d != nullptr) && (*_176857_d.alloc)._field_Decl)) {
		_1ad987e4a_pushErr(_self_, _176871_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1ad9860ad_IsNil(_176857_d)) {
			_case_begin_1be835501:;
			{
				if ((!(_1ad9ba499_NilCompatible(_176839_t.ptr())))) {
					_1ad987e4a_pushErr(_self_, _176871_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_176839_t), &__jule_any_type5); __jule_collection; }));
				};
				(*_176857_d.alloc)._field_Constant=nullptr;
				(*_176857_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1ad9bac4c_Prim((*_176857_d.alloc)._field_Kind.ptr()) != nullptr) && _1ad9c4e10_IsAny(_1ad9bac4c_Prim((*(_176857_d))._field_Kind).ptr()))) {
			_case_begin_1be83528c:;
			{
				if ((_1ad9bb500_Enum(_176839_t.ptr()) != nullptr)) {
					_1ad987e4a_pushErr(_self_, _176871_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
					_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("try cast to type of enum fields instead of enum", 47)), jule::Slice<jule::Any>());
				} else if ((_1ad9bb786_TypeEnum(_176839_t.ptr()) != nullptr)) {
					_1ad987e4a_pushErr(_self_, _176871_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
				};
				(*_176857_d.alloc)._field_Constant=nullptr;
				(*_176857_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1ad9bac4c_Prim(_176839_t.ptr()) != nullptr) && _1ad9c4e10_IsAny(_1ad9bac4c_Prim(_176839_t).ptr()))) {
			_case_begin_1be835303:;
			{
				(*_176857_d.alloc)._field_Constant=nullptr;
				(*_176857_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1ad9bb786_TypeEnum((*_176857_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be835369:;
			{
				_1ad999225_castTypeEnum(_self_, &(_176839_t), &(_176857_d), &(_176871_errorToken));
			}
		}
		else if ((_1ad9bb786_TypeEnum(_176839_t.ptr()) != nullptr)) {
			_case_begin_1be8353d0:;
			{
				_1ad999643_castTypeEnumT(_self_, &(_176839_t), &(_176857_d), &(_176871_errorToken));
			}
		}
		else if ((_1ad9bb269_Ptr(_176839_t.ptr()) != nullptr)) {
			_case_begin_1be8361c2:;
			{
				_1ad996b6d_castPtr(_self_, _176839_t, _176857_d, _176871_errorToken);
			}
		}
		else if ((_1ad9baed3_Sptr(_176839_t.ptr()) != nullptr)) {
			_case_begin_1be836238:;
			{
				_1ad9974a9_castRef(_self_, _176839_t, _176857_d, _176871_errorToken);
			}
		}
		else if ((_1ad9bbca3_Slc(_176839_t.ptr()) != nullptr)) {
			_case_begin_1be83629e:;
			{
				_1ad9978c7_castSlc(_self_, _176839_t, _176857_d, _176871_errorToken);
			}
		}
		else if ((_1ad9bc2c0_Struct(_176839_t.ptr()) != nullptr)) {
			_case_begin_1be836315:;
			{
				_1ad99708b_castStruct(_self_, _176839_t, _176857_d, _176871_errorToken);
			}
		}
		else if ((_1ad9bac4c_Prim(_176839_t.ptr()) != nullptr)) {
			_case_begin_1be83637b:;
			{
				_1ad998994_castPrim(_self_, _176839_t, _176857_d, _176871_errorToken);
				_1ad998d07_castConstant(_self_, &(_176839_t), &(_176857_d));
			}
		}
		else {
			_case_begin_1be83515a:;
			{
				_1ad987e4a_pushErr(_self_, _176871_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str(_176839_t.ptr()), &__jule_any_type5); __jule_collection; }));
				_176857_d=nullptr;
			}
		}
		_match_end_1be8350d3:;
	};
	if ((_176857_d == nullptr)) {
		return nullptr;;
	};
	(*_176857_d.alloc)._field_Mutable=((*_176857_d.alloc)._field_Mutable || (!(_1ad9b9e7c_Mutable((*_176857_d.alloc)._field_Kind.ptr()))));
	if (((!((*_176857_d.alloc)._field_Decl)) && ((_1ad9bb500_Enum((*(_176857_d))._field_Kind) == nullptr) || (!(_1ad9b8cd3_Equal((*((*(_1ad9bb500_Enum((*(_176857_d))._field_Kind)))._field_Kind))._field_Kind, _176839_t)))))) {
		_1ad9b2c77_applyCastKind(&((*(_self_))._field_s), &(_176857_d), &(_176839_t), &(_176871_errorToken), _1ad98ae4d_getOwnerRefers(_self_));
		(*((*_176857_d.alloc)._field_Model.cast_ptr<_1ad7db9d5_CastingExprModel>(&__jule_any_type95)))._field_Token=_176871_errorToken;
	} else {
		(*_176857_d.alloc)._field_Kind=_176839_t;
	};
	(*_176857_d.alloc)._field_Decl=false;
	(*_176857_d.alloc)._field_Lvalue=false;
	(*_176857_d.alloc)._field_untyped=false;
	if (_1ad9865ca_IsConst(_176857_d)) {
		(*((*_176857_d.alloc)._field_Constant))._field_Kind=(*(_1ad9bac4c_Prim(_176839_t.ptr())))._field_Kind;
	};
	return _176857_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad99a0a0_evalCastT(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _184531_t, jule::Ptr<_1ad6e94e7_Expr>* _184550_e, jule::Ptr<_1ad6ceb70_Token>* _184570_et) {
	jule::Ptr<_1ad9b8596_TypeKind> _18467_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18467_prefix;
	});;
	if ((_1ad9bbca3_Slc((*(_184531_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_184550_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1be847ee7:;
				{
					(*_self_.alloc)._field_prefix=(*(_184531_t));
				}
			}
			_match_end_1be847e70:;
		};
	};
	jule::Ptr<_1ad985b90_Data> _18557_d = _1ad9a672c_evalExpr(_self_, (*(_184550_e)));;
	if (((_18557_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18557_d;;
	};
	return _1ad999ae9_evalCastByTypeNData(_self_, (*(_184531_t)), _18557_d, (*(_184570_et)));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad99a3e1_evalCast(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ebd57_CastExpr> _186229_c) {
	jule::Ptr<_1ad9c0ca7_TypeSymbol> _18637_t = _1ad8d1547_buildType((*(_186229_c))._field_Kind);;
	jule::Bool _18643_ok = _1ad917d64_checkType((*(_self_))._field_s, &(_18637_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18643_ok))) {
		return nullptr;;
	};
	return _1ad99a0a0_evalCastT(_self_, &((*(_18637_t))._field_Kind), &((*_186229_c.alloc)._field_Expr), &((*((*_186229_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad99a732_evalNamespace(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ec231_NamespaceExpr> _187133_s) {
	jule::Ptr<_1ad8e1bea_ImportInfo> _18727_imp = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d6c68_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>>((void*)__jule_anon_1be85087e, jule::Ptr<__jule_anon_1be85087e_ctx>::make(__jule_anon_1be85087e_ctx{._187133_s=_187133_s}).as<jule::Uintptr>(), __jule_anon_1be85087e_ctx_handler));;
	if ((_18727_imp == nullptr)) {
		_1ad987e4a_pushErr(_self_, (*_187133_s.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_187133_s))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _18817_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18727_imp, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data2);
	;
	_1ad9886a9_disallowBuiltin(_self_);
	jule::Any _18867_def = _1ad98abb7_getDef(_self_, &((*((*_187133_s.alloc)._field_Ident))._field_Kind), false);;
	_1ad9884ab_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18817_lookup;
	jule::Ptr<_1ad985b90_Data> _18897_d = _1ad98ed75_evalDef(_self_, &(_18867_def), (*_187133_s.alloc)._field_Ident);;
	return _18897_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad99abd8_evalStructLitExplicit(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad718857_StructIns> _189342_s, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _18947_exprs, jule::Ptr<_1ad6ceb70_Token> _189432_errorToken) {
	jule::Bool _18953_ok = _1ad9142a0_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_189342_s))._field_Decl))._field_Generics.len(), (*_189342_s.alloc)._field_Generics.len(), _189432_errorToken);;
	if ((!(_18953_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_189342_s.alloc)._field_Decl))) {
		_1ad987e4a_pushErr(_self_, _189432_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_189342_s))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	_1be7d787c_pushReference(_self_, &(_189342_s));
	_1ad98d071_checkDeprecated(_self_, &((*(*(_189342_s))._field_Decl.alloc)._field_Directives), _189432_errorToken);
	_1ad97d6b0_structLitChecker _19087_slc = _1ad97d6b0_structLitChecker{._field_e=_self_, ._field_errorToken=_189432_errorToken, ._field_s=_189342_s, ._field_args=jule::Slice<jule::Ptr<_1ad7dacae_StructArgExprModel>>(nullptr)};;
	_1ad97ee31_check(&_19087_slc, &(_18947_exprs));
	jule::Ptr<_1ad985b90_Data> _19157_d = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_189342_s, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1ad7db155_StructLitExprModel>(_1ad7db155_StructLitExprModel{._field_Strct=_189342_s, ._field_Args=_19087_slc._field_args}), &__jule_any_type97), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
	if ((*(*(_189342_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_19157_d))._field_Kind))._field_BindIdent=(*(*(_189342_s))._field_Decl.alloc)._field_Ident;
	};
	return _19157_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad99b029_evalStructLit(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ee541_StructLit> _193134_lit) {
	jule::Ptr<_1ad9c0ca7_TypeSymbol> _19327_t = _1ad8d1547_buildType((*(_193134_lit))._field_Kind);;
	jule::Bool _19333_ok = _1ad917d64_checkType((*(_self_))._field_s, &(_19327_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19333_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ad718857_StructIns> _19387_s = _1ad9bc2c0_Struct((*(_19327_t))._field_Kind.ptr());;
	if ((_19387_s == nullptr)) {
		if ((_1ad9baed3_Sptr((*(_19327_t))._field_Kind) != nullptr)) {
			_19387_s=_1ad9bc2c0_Struct((*(_1ad9baed3_Sptr((*(_19327_t))._field_Kind)))._field_Elem.ptr());
			if ((_19387_s != nullptr)) {
				goto _julec_label_1be861906;
			};
		};
		_1ad987e4a_pushErr(_self_, (*((*_193134_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1be861906:;
	jule::Ptr<_1ad985b90_Data> _19517_d = _1ad99abd8_evalStructLitExplicit(_self_, _19387_s, (*_193134_lit.alloc)._field_Exprs, (*(*(_193134_lit))._field_Kind.alloc)._field_Token);;
	if ((_1ad9baed3_Sptr((*(_19327_t))._field_Kind) != nullptr)) {
		jule::Ptr<_1ad7db155_StructLitExprModel> _19538_model = (*(_19517_d))._field_Model.cast_ptr<_1ad7db155_StructLitExprModel>(&__jule_any_type97);;
		_1ad9b0abb_makeStructLitAlloc(&(_19517_d), &(_19538_model));
	};
	return _19517_d;;
}



inline _1ad9ca993_typeChecker _1ad99b2b0_typeChecker(_1ad9878b7_eval* _self_) {
	return _1ad916b10_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1ad985b90_Data> _1ad99b601_evalType(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6e51b3_TypeDecl> _196328_t) {
	jule::Ptr<_1ad9c0ca7_TypeSymbol> _19647_tk = _1ad8d1547_buildType(_196328_t);;
	jule::Bool _19653_ok = _1ad917d64_checkType((*(_self_))._field_s, &(_19647_tk), (*(_self_))._field_lookup);;
	if ((!(_19653_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=(*(_19647_tk))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19647_tk.alloc)._field_Kind, &__jule_any_type86), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline void _1ad99b964_callTypeFn(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ed221_FnCallExpr>* _197632_fc, jule::Ptr<_1ad985b90_Data>* _197659_d) {
	if (((*((*(_197632_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr(_self_.ptr(), (*((*(_197632_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
	} else if (((*((*(_197632_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr(_self_.ptr(), (*((*((*(_197632_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_197659_d))))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
	} else if ((*((*(_197632_fc))))._field_IsCo) {
		_1ad987e4a_pushErr(_self_.ptr(), (*((*(_197632_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_197659_d))=nullptr;
		return;;
	} else if (((*((*(_197632_fc))))._field_Exception != nullptr)) {
		_1ad987e4a_pushErr(_self_.ptr(), (*((*(_197632_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_197659_d))=nullptr;
		return;;
	};
	if (((*((*(_197632_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1ad6e94e7_Expr> _19928_arg = (*((*(_197632_fc))))._field_Args[0LL];;
		(*(_197659_d))=_1ad99a0a0_evalCastT(_self_, &((*((*(_197659_d))))._field_Kind), &(_19928_arg), &((*(_19928_arg))._field_Token));
		return;;
	};
	if (((*(_197659_d)) != nullptr)) {
		(*((*(_197659_d))))._field_Decl=false;
	};
}



inline void _1ad99bcc7_callBuiltinFn(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ed221_FnCallExpr>* _200235_fc, jule::Ptr<_1ad985b90_Data>* _200262_d) {
	if ((!(_1ad6ed5c8_Unhandled((*(_200235_fc)).ptr())))) {
		_1ad987e4a_pushErr(_self_.ptr(), (*((*(_200235_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_200262_d))=(*(_1ad9bc039_Fn((*((*(_200262_d))))._field_Kind.ptr())))._field_caller(&(_self_), _200235_fc, _200262_d);
	if (((*(_200262_d)) == nullptr)) {
		return;;
	};
	(*((*(_200262_d))))._field_Mutable=true;
}



inline void _1ad99c13a_checkFnOfConcurrentCall(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _201440_f, jule::Ptr<_1ad6ceb70_Token> _201451_errorToken) {
	if (_1ad988940_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_201440_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be870959:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e96e6_ParamIns> *_201810_p = it;
			{
				if (_1ad7e6418_IsSelf((*((*(_201810_p))))._field_Decl.ptr())) {
					if ((!(_1ad7e669e_IsRef((*((*(_201810_p))))._field_Decl)))) {
						_1ad987e4a_pushErr(_self_, _201451_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_201810_p))))._field_Decl.alloc)._field_Reference) {
					_1ad987e4a_pushErr(_self_, _201451_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1be870959:;
			++it;
			goto _iter_begin_1be870959;
		}
		_iter_end_1be870959:;
	};
}



inline void _1ad99c558_processExceptionalHandler(_1ad9878b7_eval* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _203346_f, jule::Ptr<_1ad6ed221_FnCallExpr>* _203362_fc, jule::Ptr<_1ad985b90_Data>* _203389_d) {
	jule::Bool _20343_resultNeeded = ((!(_1ad7e7c44_IsVoid((*((*(_203346_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1ad8b860b_scopeChecker> _203511_csc = nullptr;;
	jule::Ptr<_1ad8b136d_Scope> _203611_ch = nullptr;;
	jule::Ptr<_1ad7dc387_FnCallExprModel> _20387_model = (*((*(_203389_d))))._field_Model.cast_ptr<_1ad7dc387_FnCallExprModel>(&__jule_any_type30);;
	jule::Ptr<_1ad8b860b_scopeChecker> _20427_sc = (*(_self_))._field_lookup.cast_ptr<_1ad8b860b_scopeChecker>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1);;
	_203511_csc=_1ad8caa19_newChildChecker(_20427_sc);
	if (_20343_resultNeeded) {
		(*(_203511_csc))._field_result=(*(_203346_f));
	};
	_203611_ch=_1ad8bdcb5_getChild(_20427_sc);
	(*((*((*(_203362_fc))))._field_Exception))._field_Parent=(*_20427_sc.alloc)._field_tree;
	(*((*_203511_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_203511_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad9b0e40_buildErrorVar(&(_203611_ch), _203362_fc); __jule_collection; }));
	_1ad8be1d3_checkChildSsc(_20427_sc, &((*((*(_203362_fc))))._field_Exception), &(_203611_ch), &(_203511_csc));
	(*(_20387_model))._field_Assigned=_20343_resultNeeded;
	(*_20387_model.alloc)._field_Except=_203611_ch;
	if ((_20343_resultNeeded && ((*_203511_csc.alloc)._field_result != nullptr))) {
		_1ad987e4a_pushErr(_self_, (*((*(_203362_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1ad99c8bb_callFn(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ed221_FnCallExpr>* _206028_fc, jule::Ptr<_1ad985b90_Data>* _206055_d) {
	jule::Ptr<_1ad7ea84b_FnIns> _20617_f = _1ad9bc039_Fn((*((*(_206055_d))))._field_Kind.ptr());;
	if (_1ad7ebd14_IsBuiltin(_20617_f.ptr())) {
		_1ad99bcc7_callBuiltinFn(_self_, _206028_fc, _206055_d);
		return;;
	};
	if (((!(_1ad7e7eca_IsMethod((*_20617_f.alloc)._field_Decl.ptr()))) && _1ad9d4b12_hasDirective(&((*(*(_20617_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1ad987e4a_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_206055_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_206055_d))))._field_Mutable)) && _1ad7e7eca_IsMethod((*(_20617_f))._field_Decl)) && (!((*(*(_20617_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20617_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1ad987e4a_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1ad7db155_StructLitExprModel> _20815_lit = _1ad9b5120_isLitBased(&((*((*(_206055_d))))._field_Model));;
			if ((_20815_lit == nullptr)) {
				_1ad987e4a_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1ad97d1c6_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_20815_lit));
			};
		};
	} else if (((!(_1ad988940_isUnsafe(_self_))) && (*(*(_20617_f))._field_Decl.alloc)._field_Unsafety)) {
		_1ad987e4a_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _20937_dynamicAnnotation = ((((*(*(_20617_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_20617_f.alloc)._field_Generics.len() == 0LL)) && ((*_20617_f.alloc)._field_Params.len() > 0LL));;
	if (_20937_dynamicAnnotation) {
		(*_20617_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>::alloc((*(*(_20617_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20617_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad9b6de1_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20617_f.alloc)._field_Generics.len() != (*(*(_20617_f))._field_Decl.alloc)._field_Generics.len())) {
		_1ad9142a0_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_20617_f))._field_Decl.alloc)._field_Generics.len(), (*_20617_f.alloc)._field_Generics.len(), (*((*(_206028_fc))))._field_Token);
		(*(_206055_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ad90ed6c_sema> _21027_old = (*_self_.alloc)._field_s;;
	if (((*(*(_20617_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20617_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_21027_old != (*_self_.alloc)._field_s)) {
			(*(_21027_old))._field_errors=jule::append((*_21027_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_21027_old;
	});;
	_1ad97a778_fnCallArgChecker _21157_fcac = _1ad97a778_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_206028_fc))))._field_Args, ._field_errorToken=(*((*(_206028_fc))))._field_Token, ._field_f=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_dynamicAnnotation=_20937_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr)};;
	if ((!(_20937_dynamicAnnotation))) {
		if ((!((*_20617_f.alloc)._field_reloaded))) {
			jule::Bool _21245_ok = _1ad91dad4_reloadFnInsTypes((*(_self_))._field_s, _20617_f);;
			(*_20617_f.alloc)._field_reloaded=true;
			if ((!(_21245_ok))) {
				(*(_206055_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1ad7ea84b_FnIns> _21318_existInstance = _1ad7e933e_appendInstance((*(_20617_f))._field_Decl, &(_20617_f));;
		if ((_21318_existInstance != nullptr)) {
			_20617_f=_21318_existInstance;
		};
	} else if ((!(_1ad91be45_buildFnNonGenericTypeKinds((*(_self_))._field_s, _20617_f, &(_21157_fcac._field_ignored))))) {
		(*(_206055_d))=nullptr;
		return;;
	};
	_21157_fcac._field_f=_20617_f;
	jule::Bool _21427_ok = false;;
	if (((*(*(_20617_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_21027_old, (*_self_.alloc)._field_s);
		_21427_ok=_1ad97cd63_check(&_21157_fcac);
		std::swap(_21027_old, (*_self_.alloc)._field_s);
	} else {
		_21427_ok=_1ad97cd63_check(&_21157_fcac);
	};
	if (_20937_dynamicAnnotation) {
		if ((!(_21427_ok))) {
			(*(_206055_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad994c6a_checkGenericFn(_self_, &(_20617_f), &((*((*(_206028_fc))))._field_Token), &((*((*(_206055_d))))._field_Model));
			_21427_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21427_ok))) {
			(*(_206055_d))=nullptr;
			return;;
		};
	};
	jule::Any _21637_callModel = (*((*(_206055_d))))._field_Model;;
	if (_1ad7e7c44_IsVoid((*(_20617_f))._field_Decl)) {
		(*(_206055_d))=_1ad9b2e86_buildVoidData();
	} else {
		(*((*(_206055_d))))._field_Kind=(*_20617_f.alloc)._field_Result;
		(*((*(_206055_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1ad7dc387_FnCallExprModel> _21727_model = jule::new_ptr<_1ad7dc387_FnCallExprModel>(_1ad7dc387_FnCallExprModel{._field_Token=(*((*(_206028_fc))))._field_Token, ._field_Func=_20617_f, ._field_IsCo=(*((*(_206028_fc))))._field_IsCo, ._field_Expr=_21637_callModel, ._field_Args=_21157_fcac._field_argModels, ._field_Except=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_206055_d))))._field_Model=jule::Any(_21727_model, &__jule_any_type30);
	(*((*(_206055_d))))._field_Mutable=true;
	if ((*(*(_20617_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_206028_fc))))._field_IsCo) {
			_1ad912c71_pushErr((*(_self_))._field_s, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1ad9130d4_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1ad6ed5c8_Unhandled((*(_206028_fc)).ptr())) {
				_case_begin_1be8963b9:;
				{
					_1ad987e4a_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1ad6ed85e_Ignored((*(_206028_fc)).ptr())) {
				_case_begin_1be89609a:;
				{
					goto _match_end_1be8949a0;
				}
			}
			else {
				_case_begin_1be894a49:;
				{
					_1ad99c558_processExceptionalHandler(_self_, &(_20617_f), _206028_fc, _206055_d);
				}
			}
			_match_end_1be8949a0:;
		};
	} else if ((!(_1ad6ed5c8_Unhandled((*(_206028_fc)).ptr())))) {
		_1ad987e4a_pushErr(_self_, (*((*(_206028_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_206028_fc))))._field_IsCo) {
		(*((*(_21727_model))._field_Func))._field_AsAnon=true;
		(*(*(_21727_model))._field_Func.alloc)._field_CalledCo=true;
		_1ad99c13a_checkFnOfConcurrentCall(_self_, &((*_21727_model.alloc)._field_Func), (*((*(_206028_fc))))._field_Token);
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad99cc0c_evalFnCall(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ed221_FnCallExpr> _220931_fc) {
	jule::Ptr<_1ad9b8596_TypeKind> _22107_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_22107_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_220931_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1be89b875:;
			{
				if (((*((*((*(_220931_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1adaa3a5a_builtinCallerError(&(_self_), &(_220931_fc));;
				};
			}
		}
		_match_end_1be89b7ed:;
	};
	jule::Ptr<_1ad985b90_Data> _22237_d = _1ad9a5918_evalExprKind(_self_, (*(*(_220931_fc))._field_Expr.alloc)._field_Kind);;
	if ((_22237_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22237_d))._field_Decl) {
		_1ad99b964_callTypeFn(_self_, &(_220931_fc), &(_22237_d));
		return _22237_d;;
	};
	if ((_1ad9bc039_Fn((*(_22237_d))._field_Kind.ptr()) == nullptr)) {
		_1ad987e4a_pushErr(_self_, (*_220931_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ad99c8bb_callFn(_self_, &(_220931_fc), &(_22237_d));
	return _22237_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad99d108_evalEnumStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad805658_Enum> _224234_enm, jule::Ptr<_1ad6ceb70_Token> _224250_ident) {
	jule::Ptr<_1ad804b0d_EnumItem> _22437_item = _1ad806280_FindItem(_224234_enm.ptr(), (*(_224250_ident))._field_Kind);;
	if ((_22437_item == nullptr)) {
		_1ad987e4a_pushErr(_self_, _224250_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_224234_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_224250_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _1ad9b4d56_evalEnumStatic(&((*(_self_))._field_s), &(_224234_enm), &(_22437_item), &(_224250_ident), _1ad98ae4d_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad99d504_evalTypeEnumStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad806d63_TypeEnum> _225038_enm, jule::Ptr<_1ad6ceb70_Token> _225054_ident) {
	jule::Ptr<_1ad80678b_TypeEnumItem> _22517_item = _1ad807957_FindItem(_225038_enm.ptr(), (*(_225054_ident))._field_Kind);;
	if ((_22517_item == nullptr)) {
		_1ad987e4a_pushErr(_self_, _225054_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_225038_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_225054_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1ad9bb500_Enum((*((*(_22517_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be8a5681:;
			{
				return _1ad98b547__evalEnum(_self_, _1ad9bb500_Enum((*((*(_22517_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1ad9bb786_TypeEnum((*((*(_22517_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be8a3805:;
			{
				return _1ad98bc84__evalTypeEnum(_self_, _1ad9bb786_TypeEnum((*((*(_22517_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1ad9bc2c0_Struct((*((*(_22517_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be8a386b:;
			{
				return _1ad98c4c1__evalStruct(_self_, _1ad9bc2c0_Struct((*((*(_22517_item))._field_Kind))._field_Kind));;
			}
		}
		else {
			_case_begin_1be8a378e:;
			{
				jule::Ptr<_1ad985b90_Data> _22648_d = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=(*((*(_22517_item))._field_Kind))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
				(*(_22648_d))._field_Model=jule::Any((*_22648_d.alloc)._field_Kind, &__jule_any_type86);
				return _22648_d;;
			}
		}
		_match_end_1be8a3959:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad99d900_evalStructStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad718857_StructIns> _227336_s, jule::Ptr<_1ad6ceb70_Token> _227351_ident) {
	jule::Ptr<_1ad985b90_Data> _22747_d = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
	;
	jule::Ptr<_1ad7e778d_Fn> _22787_method = _1ad719902_FindMethod(_227336_s.ptr(), (*(_227351_ident))._field_Kind, true);;
	if ((_22787_method != nullptr)) {
		if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22787_method.alloc)._field_Public, (*_22787_method.alloc)._field_Token)))) {
			_1ad987e4a_pushErr(_self_, _227351_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_227351_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ad7ea84b_FnIns> _22858_ins = _1ad7e9031_instance(_22787_method);;
		(*(_22858_ins))._field_Owner=_227336_s;
		_1be6d548e_pushReference(_self_, &(_22858_ins));
		(*_22747_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ad7e02be_StructStaticIdentExprModel>(_1ad7e02be_StructStaticIdentExprModel{._field_Structure=_227336_s, ._field_Expr=(*_22747_d.alloc)._field_Model, ._field_Method=_22858_ins}), &__jule_any_type98);
		(*_22747_d.alloc)._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_22858_ins, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1)});
		return _22747_d;;
	};
	jule::Ptr<_1ad933a83_Var> _22997_sttc = _1ad71a084_FindStatic(_227336_s, (*_227351_ident.alloc)._field_Kind);;
	if ((_22997_sttc != nullptr)) {
		return _1ad98e57d_evalVar(_self_, _22997_sttc, _227351_ident);;
	};
	_1ad987e4a_pushErr(_self_, _227351_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_227336_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_227351_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad99dda6_evalTraitSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data> _230837_d, jule::Ptr<_1ad802ea2_Trait> _230851_trt, jule::Ptr<_1ad6ceb70_Token> _230868_ident) {
	jule::Ptr<_1ad7e778d_Fn> _23097_f = _1ad803b84_FindMethod(_230851_trt.ptr(), (*(_230868_ident))._field_Kind);;
	if ((_23097_f == nullptr)) {
		_1ad987e4a_pushErr(_self_, _230868_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_230851_trt.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_230868_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad7e9031_instance(_23097_f), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1)}), ._field_Mutable=(*(_230837_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1ad7de587_TraitSubIdentExprModel>(_1ad7de587_TraitSubIdentExprModel{._field_Token=_230868_ident, ._field_Expr=(*_230837_d.alloc)._field_Model, ._field_Method=_23097_f, ._field_Trt=_230851_trt}), &__jule_any_type99), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad99e417_evalStructSubIdentField(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _233044_d, jule::Ptr<_1ad718857_StructIns>* _233059_s, jule::Ptr<_1ad6ceb70_Token>* _233079_tok, jule::Ptr<_1ad717ca7_FieldIns>* _2330104_f) {
	jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _23317_model = jule::new_ptr<_1ad7dee28_StructSubIdentExprModel>(_1ad7dee28_StructSubIdentExprModel{._field_Token=(*(_233079_tok)), ._field_Expr=jule::new_ptr<_1ad985b90_Data>((*((*(_233044_d))))), ._field_Method=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Field=(*(_2330104_f)), ._field_Owner=(*(_233059_s))});;
	(*((*(_233044_d))))._field_Model=jule::Any(_23317_model, &__jule_any_type100);
	(*((*(_233044_d))))._field_Kind=(*((*(_2330104_f))))._field_Kind;
	(*((*(_233044_d))))._field_Lvalue=true;
	if (((*((*((*(_2330104_f))))._field_Decl))._field_Mutable && (!((*((*(_233044_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)) {
				_case_begin_1be8b9ed1:;
				{
					jule::Ptr<_1ad8b860b_scopeChecker> _23465_scope = _1ad8bbc6e_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1ad8b860b_scopeChecker>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1));;
					(*((*(_233044_d))))._field_Mutable=(((*(_23465_scope))._field_owner != nullptr) && ((*(*(_23465_scope))._field_owner.alloc)._field_Owner == (*(_233059_s))));
				}
			}
			_match_end_1be8b9e6a:;
		};
	};
	return (*(_233044_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad99ea33_evalStructSubIdentMethod(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _235545_d, jule::Ptr<_1ad718857_StructIns>* _235560_s, jule::Ptr<_1ad6ceb70_Token>* _235580_tok, jule::Ptr<_1ad7e778d_Fn>* _2355105_m, jule::Bool _2355113_ref) {
	if ((_1ad7e669e_IsRef((*((*(_2355105_m))))._field_Params[0LL].ptr()) && (!(_2355113_ref)))) {
		_1ad987e4a_pushErr(_self_, (*(_235580_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1ad98d071_checkDeprecated(_self_, &((*((*(_2355105_m))))._field_Directives), (*(_235580_tok)));
	jule::Ptr<_1ad7ea84b_FnIns> _23627_ins = _1ad7e9031_instance((*(_2355105_m)));;
	(*(_23627_ins))._field_Owner=(*(_235560_s));
	_1be6d548e_pushReference(_self_, &(_23627_ins));
	jule::Ptr<_1ad985b90_Data> _23657_model = jule::new_ptr<_1ad985b90_Data>((*((*(_235545_d)))));;
	(*((*(_235545_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7dee28_StructSubIdentExprModel>(_1ad7dee28_StructSubIdentExprModel{._field_Token=(*(_235580_tok)), ._field_Expr=_23657_model, ._field_Method=_23627_ins, ._field_Field=jule::Ptr<_1ad717ca7_FieldIns>(nullptr), ._field_Owner=(*(_235560_s))}), &__jule_any_type100);
	(*((*(_235545_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23627_ins, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1)});
	return (*(_235545_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a0094_evalStructSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data> _237638_d, jule::Ptr<_1ad718857_StructIns> _237652_s, jule::Ptr<_1ad6ec60a_SubIdentExpr> _237671_si, jule::Bool _237695_ref) {
	jule::Ptr<_1ad717ca7_FieldIns> _23777_f = _1ad719c43_FindField(_237652_s.ptr(), (*((*(_237671_si))._field_Ident))._field_Kind);;
	if ((_23777_f != nullptr)) {
		if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23777_f.alloc)._field_Decl))._field_Public, (*(*(_23777_f))._field_Decl.alloc)._field_Token)))) {
			_1ad987e4a_pushErr(_self_, (*_237671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23777_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _1ad99e417_evalStructSubIdentField(_self_, &(_237638_d), &(_237652_s), &((*_237671_si.alloc)._field_Ident), &(_23777_f));;
	};
	;
	jule::Ptr<_1ad7e778d_Fn> _23877_m = _1ad719902_FindMethod(_237652_s, (*(*(_237671_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_23877_m == nullptr)) {
		_1ad987e4a_pushErr(_self_, (*_237671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_237652_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_237671_si))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s, (*(_23877_m))._field_Public, (*(_23877_m))._field_Token)))) {
		_1ad987e4a_pushErr(_self_, (*_237671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_23877_m))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ad9882ad_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1ad99ea33_evalStructSubIdentMethod(_self_, &(_237638_d), &(_237652_s), &((*_237671_si.alloc)._field_Ident), &(_23877_m), _237695_ref);;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a03d5_evalIntTypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _240033_ident) {
	;
	{
		auto &_match_expr{ (*(_240033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be8d036a:;
			{
				jule::Ptr<_1ad778ec2_Const> _24048_c = static__1ad7ce07c_NewI64(_1ad87a03a_MaxI(jule::Str::lit("int", 3)));;
				(*(_24048_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa00c8_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24048_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24048_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1be8d0e81:;
			{
				jule::Ptr<_1ad778ec2_Const> _24138_c = static__1ad7ce07c_NewI64(static_cast<jule::I64>(_1ad87a645_Min(jule::Str::lit("int", 3))));;
				(*(_24138_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa00c8_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24138_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24138_c});;
			}
		}
		else {
			_case_begin_1be8cec3d:;
			{
				_1ad987e4a_pushErr(_self_, _240033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type5); (*it++) = jule::Any((*(_240033_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be8cee91:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a0726_evalUintTypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _242734_ident) {
	;
	{
		auto &_match_expr{ (*(_242734_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be8d44d4:;
			{
				jule::Ptr<_1ad778ec2_Const> _24318_c = static__1ad7ce258_NewU64(_1ad87a304_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24318_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1ada9ec10_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24318_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24318_c});;
			}
		}
		else {
			_case_begin_1be8d3dc9:;
			{
				_1ad987e4a_pushErr(_self_, _242734_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type5); (*it++) = jule::Any((*(_242734_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be8d410a:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a0a67_evalI8TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _244532_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_244532_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be8d7927:;
			{
				jule::Ptr<_1ad778ec2_Const> _24518_c = static__1ad7ce07c_NewI64(127LL);;
				(*(_24518_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa031a_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24518_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24518_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1be8d853d:;
			{
				jule::Ptr<_1ad778ec2_Const> _24608_c = static__1ad7ce07c_NewI64(-128LL);;
				(*(_24608_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa031a_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24608_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24608_c});;
			}
		}
		else {
			_case_begin_1be8d710d:;
			{
				_1ad987e4a_pushErr(_self_, _244532_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_244532_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be8d755e:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a0da8_evalI16TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _247433_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_247433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be8dc07a:;
			{
				jule::Ptr<_1ad778ec2_Const> _24808_c = static__1ad7ce07c_NewI64(32767LL);;
				(*(_24808_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa05b2_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24808_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24808_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1be8dcb91:;
			{
				jule::Ptr<_1ad778ec2_Const> _24898_c = static__1ad7ce07c_NewI64(-32768LL);;
				(*(_24898_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa05b2_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24898_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24898_c});;
			}
		}
		else {
			_case_begin_1be8db761:;
			{
				_1ad987e4a_pushErr(_self_, _247433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_247433_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be8dbbb2:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a11e9_evalI32TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _250333_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_250333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be8e16cd:;
			{
				jule::Ptr<_1ad778ec2_Const> _25098_c = static__1ad7ce07c_NewI64(2147483647LL);;
				(*(_25098_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa086a_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25098_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25098_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1be8e22e4:;
			{
				jule::Ptr<_1ad778ec2_Const> _25188_c = static__1ad7ce07c_NewI64(-2147483648LL);;
				(*(_25188_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa086a_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25188_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25188_c});;
			}
		}
		else {
			_case_begin_1be8e0db4:;
			{
				_1ad987e4a_pushErr(_self_, _250333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_250333_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be8e1315:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a153a_evalI64TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _253233_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_253233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be8e5d31:;
			{
				jule::Ptr<_1ad778ec2_Const> _25388_c = static__1ad7ce07c_NewI64(jule::MAX_I64);;
				(*(_25388_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa0b23_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25388_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25388_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1be8e6947:;
			{
				jule::Ptr<_1ad778ec2_Const> _25478_c = static__1ad7ce07c_NewI64(jule::MIN_I64);;
				(*(_25478_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa0b23_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25478_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25478_c});;
			}
		}
		else {
			_case_begin_1be8e5517:;
			{
				_1ad987e4a_pushErr(_self_, _253233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_253233_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be8e5968:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a187b_evalU8TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _256132_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_256132_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be8ea0ee:;
			{
				jule::Ptr<_1ad778ec2_Const> _25668_c = static__1ad7ce258_NewU64(255LLU);;
				(*(_25668_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa0dcb_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25668_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25668_c});;
			}
		}
		else {
			_case_begin_1be8e9582:;
			{
				_1ad987e4a_pushErr(_self_, _256132_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_256132_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be8e9b8c:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a1bbc_evalU16TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _258033_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_258033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be8ed0ad:;
			{
				jule::Ptr<_1ad778ec2_Const> _25858_c = static__1ad7ce258_NewU64(65535LLU);;
				(*(_25858_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa1184_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25858_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25858_c});;
			}
		}
		else {
			_case_begin_1be8ec541:;
			{
				_1ad987e4a_pushErr(_self_, _258033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_258033_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be8ecb4b:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a200d_evalU32TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _259933_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_259933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be90106c:;
			{
				jule::Ptr<_1ad778ec2_Const> _26048_c = static__1ad7ce258_NewU64(4294967295LLU);;
				(*(_26048_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa143c_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26048_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26048_c});;
			}
		}
		else {
			_case_begin_1be900500:;
			{
				_1ad987e4a_pushErr(_self_, _259933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_259933_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be900b0a:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a234e_evalU64TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _261833_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_261833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be90402b:;
			{
				jule::Ptr<_1ad778ec2_Const> _26238_c = static__1ad7ce258_NewU64(jule::MAX_U64);;
				(*(_26238_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa1926_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26238_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26238_c});;
			}
		}
		else {
			_case_begin_1be9034ae:;
			{
				_1ad987e4a_pushErr(_self_, _261833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_261833_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be903ab9:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a2690_evalF32TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _263733_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_263733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be9076b1:;
			{
				jule::Ptr<_1ad778ec2_Const> _26448_c = static__1ad7ceaa5_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26448_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa1b68_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26448_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26448_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1be9082c7:;
			{
				jule::Ptr<_1ad778ec2_Const> _26538_c = static__1ad7ceaa5_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_26538_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa1b68_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26538_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26538_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1be90833d:;
			{
				jule::Ptr<_1ad778ec2_Const> _26628_c = static__1ad7ceaa5_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26628_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa1b68_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26628_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26628_c});;
			}
		}
		else {
			_case_begin_1be906e52:;
			{
				_1ad987e4a_pushErr(_self_, _263733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_263733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be9072d7:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a29d1_evalF64TypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad6ceb70_Token> _267633_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_267633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1be90d2ee:;
			{
				jule::Ptr<_1ad778ec2_Const> _26838_c = static__1ad7ceaa5_NewF64(jule::MAX_F64);;
				(*(_26838_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa1d77_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26838_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26838_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1be90de15:;
			{
				jule::Ptr<_1ad778ec2_Const> _26928_c = static__1ad7ceaa5_NewF64(jule::MIN_F64);;
				(*(_26928_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa1d77_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26928_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26928_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1be90de7b:;
			{
				jule::Ptr<_1ad778ec2_Const> _27018_c = static__1ad7ceaa5_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_27018_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=true, ._field_Kind=_1adaa1d77_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27018_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27018_c});;
			}
		}
		else {
			_case_begin_1be90ca90:;
			{
				_1ad987e4a_pushErr(_self_, _267633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_267633_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be90ce25:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a2dcc_evalPrimStatic(_1ad9878b7_eval* _self_, jule::Str _271530_kind, jule::Ptr<_1ad6ceb70_Token> _271541_ident) {
	{
		auto &_match_expr{ _271530_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1be912cb5:;
			{
				return _1ad9a03d5_evalIntTypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1be913876:;
			{
				return _1ad9a0726_evalUintTypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1be9138dc:;
			{
				return _1ad9a0a67_evalI8TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1be912974:;
			{
				return _1ad9a0da8_evalI16TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1be9129da:;
			{
				return _1ad9a11e9_evalI32TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1be912a51:;
			{
				return _1ad9a153a_evalI64TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1be912ab7:;
			{
				return _1ad9a187b_evalU8TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1be9139ca:;
			{
				return _1ad9a1bbc_evalU16TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1be913a41:;
			{
				return _1ad9a200d_evalU32TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1be913aa7:;
			{
				return _1ad9a234e_evalU64TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1be913b1d:;
			{
				return _1ad9a2690_evalF32TypeStatic(_self_, _271541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1be913b84:;
			{
				return _1ad9a29d1_evalF64TypeStatic(_self_, _271541_ident);;
			}
		}
		else {
			_case_begin_1be90e157:;
			{
				_1ad987e4a_pushErr(_self_, _271541_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_271530_kind, &__jule_any_type5); (*it++) = jule::Any((*(_271541_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be90e1ce:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a32c8_evalTypeStatic(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data> _274734_d, jule::Ptr<_1ad6ec60a_SubIdentExpr> _274748_si) {
	{
		
		if ((_1ad9bac4c_Prim((*(_274734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be918b01:;
			{
				return _1ad9a2dcc_evalPrimStatic(_self_, _1ad9c1a33_Str(_1ad9bac4c_Prim((*(_274734_d))._field_Kind).ptr()), (*(_274748_si))._field_Ident);;
			}
		}
		else if ((_1ad9bb500_Enum((*(_274734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be919a8b:;
			{
				return _1ad99d108_evalEnumStatic(_self_, _1ad9bb500_Enum((*(_274734_d))._field_Kind), (*(_274748_si))._field_Ident);;
			}
		}
		else if ((_1ad9bb786_TypeEnum((*(_274734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be919b02:;
			{
				return _1ad99d504_evalTypeEnumStatic(_self_, _1ad9bb786_TypeEnum((*(_274734_d))._field_Kind), (*(_274748_si))._field_Ident);;
			}
		}
		else if ((_1ad9bc2c0_Struct((*(_274734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be91878d:;
			{
				return _1ad99d900_evalStructStatic(_self_, _1ad9bc2c0_Struct((*(_274734_d))._field_Kind), (*(_274748_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1be918727:;
			{
				_1ad987e4a_pushErr(_self_, (*(_274748_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_274734_d))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be91866c:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1be921972_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad89387d_comptimeTypeInfo>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1ad985b90_Data> _27647_cd = _1ad8996a8_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1ad987e4a_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1ad985b90_Data> _1be92623a_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad8844d9_comptimeStructField>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1ad985b90_Data> _27647_cd = _1ad88592a_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1ad987e4a_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1ad985b90_Data> _1be92a9ae_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad88a930_comptimeEnumField>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1ad985b90_Data> _27647_cd = _1ad88b964_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1ad987e4a_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1ad985b90_Data> _1be930277_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad88d746_comptimeParam>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1ad985b90_Data> _27647_cd = _1ad890094_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1ad987e4a_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1ad985b90_Data> _1be934b3e_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad88770c_comptimeStatic>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1ad985b90_Data> _27647_cd = _1ad888b4d_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1ad987e4a_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1ad985b90_Data> _1be9393b3_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad899983_comptimeValue>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1ad985b90_Data> _27647_cd = _1ad89c414_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1ad987e4a_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1ad985b90_Data> _1be93db37_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad89e15d_comptimeFile>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1ad985b90_Data> _27647_cd = _1ad8a09ab_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1ad987e4a_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}

inline jule::Ptr<_1ad985b90_Data> _1be943444_comptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad8a3074_comptimeDecl>* _276354_ct, jule::Ptr<_1ad985b90_Data>* _276374_d, jule::Ptr<_1ad6ec60a_SubIdentExpr>* _276385_si) {
	jule::Ptr<_1ad985b90_Data> _27647_cd = _1ad8a6dd0_subIdent((*(_276354_ct)), &((*((*((*(_276385_si))))._field_Ident))._field_Kind));;
	if ((_27647_cd == nullptr)) {
		_1ad987e4a_pushErr(_self_, (*((*(_276385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_276374_d))))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_276385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27647_cd;;
}



inline __jule_tuple_x_1ad985b90_Data__jule_tuple_bool _1ad9a3b7a_tryComptimeObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data>* _277143_d, jule::Ptr<_1ad6ec60a_SubIdentExpr> _277157_si) {
	__jule_tuple_x_1ad985b90_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1ad9be613_comptimeTypeInfo((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be91ed7c:;
			{
				jule::Ptr<_1ad89387d_comptimeTypeInfo> _27748_ct = _1ad9be613_comptimeTypeInfo((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1be921972_comptimeObjSubIdent(_self_, &(_27748_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bd326_comptimeStructField((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be91e8b5:;
			{
				jule::Ptr<_1ad8844d9_comptimeStructField> _27778_ct = _1ad9bd326_comptimeStructField((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1be92623a_comptimeObjSubIdent(_self_, &(_27778_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bd843_comptimeEnumField((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be91e93c:;
			{
				jule::Ptr<_1ad88a930_comptimeEnumField> _27808_ct = _1ad9bd843_comptimeEnumField((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1be92a9ae_comptimeObjSubIdent(_self_, &(_27808_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bdd60_comptimeParam((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be91e9b4:;
			{
				jule::Ptr<_1ad88d746_comptimeParam> _27838_ct = _1ad9bdd60_comptimeParam((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1be930277_comptimeObjSubIdent(_self_, &(_27838_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ad9beb30_comptimeStatic((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be91ea3b:;
			{
				jule::Ptr<_1ad88770c_comptimeStatic> _27868_ct = _1ad9beb30_comptimeStatic((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1be934b3e_comptimeObjSubIdent(_self_, &(_27868_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ad9bedb6_comptimeValue((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be91eab3:;
			{
				jule::Ptr<_1ad899983_comptimeValue> _27898_ct = _1ad9bedb6_comptimeValue((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1be9393b3_comptimeObjSubIdent(_self_, &(_27898_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ad9c0669_comptimeFile((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be9200e1:;
			{
				jule::Ptr<_1ad89e15d_comptimeFile> _27928_ct = _1ad9c0669_comptimeFile((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1be93db37_comptimeObjSubIdent(_self_, &(_27928_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1ad9c014c_comptimeDecl((*((*(_277143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be920157:;
			{
				jule::Ptr<_1ad8a3074_comptimeDecl> _27958_ct = _1ad9c014c_comptimeDecl((*((*(_277143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1be943444_comptimeObjSubIdent(_self_, &(_27958_ct), _277143_d, &(_277157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be91e84e:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1be91e794:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a4076_evalObjSubIdent(_1ad9878b7_eval* _self_, jule::Ptr<_1ad985b90_Data> _280235_d, jule::Ptr<_1ad6ec60a_SubIdentExpr> _280249_si) {
	if (_1ad6d2557_IsIgnoreIdent((*((*(_280249_si))._field_Ident))._field_Kind)) {
		_1ad987e4a_pushErr(_self_, (*_280249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1ad985b90_Data> _28098_compData;
		jule::Bool _280918_ok;
		({
			__jule_tuple_x_1ad985b90_Data__jule_tuple_bool __jule_assign_result = _1ad9a3b7a_tryComptimeObjSubIdent(_self_, &(_280235_d), _280249_si);
			_28098_compData = __jule_assign_result.__jule_result_arg0;
			_280918_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_280918_ok) {
			return _28098_compData;;
		};
	};
	jule::Ptr<_1ad9b8596_TypeKind> _28157_kind = (*(_280235_d))._field_Kind;;
	{
		
		if ((_1ad9bb269_Ptr((*_280235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be948779:;
			{
				jule::Ptr<_1ad9c89a2_Ptr> _28184_ptr = _1ad9bb269_Ptr((*(_280235_d))._field_Kind);;
				if (_1ad9c951e_IsUnsafe(_28184_ptr.ptr())) {
					goto _match_end_1be948702;
				};
				if ((!(_1ad988940_isUnsafe(_self_)))) {
					_1ad987e4a_pushErr(_self_, (*_280249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28157_kind=(*(_1ad9bb269_Ptr((*(_280235_d))._field_Kind)))._field_Elem;
				_1ad9b540b_makeImplicitDeref(&(_280235_d), (*_280249_si.alloc)._field_Ident);
			}
		}
		else if ((_1ad9baed3_Sptr((*_280235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be948823:;
			{
				_28157_kind=(*(_1ad9baed3_Sptr((*(_280235_d))._field_Kind)))._field_Elem;
				_1ad9b540b_makeImplicitDeref(&(_280235_d), (*_280249_si.alloc)._field_Ident);
			}
		}
		_match_end_1be948702:;
	};
	{
		
		if ((_1ad9bc556_Trait((*_280235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be948cda:;
			{
				return _1ad99dda6_evalTraitSubIdent(_self_, _280235_d, _1ad9bc556_Trait((*(_280235_d))._field_Kind), (*_280249_si.alloc)._field_Ident);;
			}
		}
		else if ((_1ad9bc2c0_Struct(_28157_kind.ptr()) != nullptr)) {
			_case_begin_1be94c10c:;
			{
				jule::Ptr<_1ad718857_StructIns> _28364_s = _1ad9bc2c0_Struct(_28157_kind);;
				if (_1ad9b1957_isInstancedStruct(_28364_s)) {
					jule::Bool _28389_usedReferenceElem = (_1ad9baed3_Sptr((*_280235_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1ad9a0094_evalStructSubIdent(_self_, _280235_d, _1ad9bc2c0_Struct(_28157_kind), _280249_si, _28389_usedReferenceElem);;
				};
			}
		}
		_match_end_1be94c096:;
	};
	_1ad987e4a_pushErr(_self_, (*_280249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*_280235_d.alloc)._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a43b7_evalSubIdent(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ec60a_SubIdentExpr> _284633_si) {
	jule::Ptr<_1ad9b8596_TypeKind> _28477_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28477_prefix;
	});;
	jule::Ptr<_1ad985b90_Data> _28507_d = _1ad9a5918_evalExprKind(_self_, (*((*(_284633_si))._field_Expr))._field_Kind);;
	if ((_28507_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28507_d))._field_Decl) {
		return _1ad9a32c8_evalTypeStatic(_self_, _28507_d, _284633_si);;
	};
	return _1ad9a4076_evalObjSubIdent(_self_, _28507_d, _284633_si);;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a4708_evalTuple(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ea0db_TupleExpr> _286030_tup) {
	jule::Ptr<_1ad9c67a2_Tuple> _28617_tupT = jule::new_ptr<_1ad9c67a2_Tuple>(_1ad9c67a2_Tuple{._field_Types=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr)});;
	(*_28617_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(0LL, (*(_286030_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad9b8596_TypeKind>(nullptr); __jule_collection; });
	jule::Ptr<_1ad7e0995_TupleExprModel> _28647_model = jule::new_ptr<_1ad7e0995_TupleExprModel>(_1ad7e0995_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad985b90_Data>>::alloc(0LL, (*_286030_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad985b90_Data>(nullptr); __jule_collection; })});;
	jule::Bool _28687_ok = true;;
	{
		auto expr = &((*_286030_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be956eb3:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e94e7_Expr> _286915_expr = *it;
			{
				jule::Ptr<_1ad985b90_Data> _28708_d = _1ad9a672c_evalExpr(_self_, _286915_expr);;
				if ((_28708_d == nullptr)) {
					_28687_ok=false;
					goto _iter_next_1be956eb3;
				};
				(*_28617_tupT.alloc)._field_Types=jule::append((*_28617_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_28708_d))._field_Kind; __jule_collection; }));
				(*(_28647_model))._field_Datas=jule::append((*_28647_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad985b90_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28708_d; __jule_collection; }));
			}
			_iter_next_1be956eb3:;
			++it;
			goto _iter_begin_1be956eb3;
		}
		_iter_end_1be956eb3:;
	};
	if ((!(_28687_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_28617_tupT, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28647_model, &__jule_any_type83), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a4b04_evalMap(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad9c7352_Map> _288928_m, jule::Ptr<_1ad6ee9e7_BraceLit> _288941_lit) {
	jule::Ptr<_1ad7dd971_MapExprModel> _28907_model = jule::new_ptr<_1ad7dd971_MapExprModel>(_1ad7dd971_MapExprModel{._field_Kind=_288928_m, ._field_Entries=jule::Slice<jule::Ptr<_1ad7dd597_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_288941_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be95a802:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e94e7_Expr> _289415_expr = *it;
			{
				{
					auto &_match_expr{ (*(_289415_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1be95ae1d:;
						{
							goto _match_end_1be95b209;
						}
					}
					else {
						_case_begin_1be95b270:;
						{
							_1ad987e4a_pushErr(_self_.ptr(), (*(_288941_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1be95b209:;
				};
				jule::Ptr<_1ad700322_KeyValPair> _29048_pair = (*(_289415_expr))._field_Kind.cast_ptr<_1ad700322_KeyValPair>(&__jule_any_type81);;
				jule::Ptr<_1ad985b90_Data> _29068_key = _1ad9a672c_evalExpr(_self_, (*(_29048_pair))._field_Key);;
				if ((_29068_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1ad985b90_Data> _29118_val = _1ad9a672c_evalExpr(_self_, (*_29048_pair.alloc)._field_Val);;
				if ((_29118_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1ad91e9e7_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_288928_m))._field_Key), &(_29068_key), &((*((*_29048_pair.alloc)._field_Key))._field_Token))) {
					_1ad91a262_checkAssignType((*(_self_))._field_s, false, &((*_288928_m.alloc)._field_Key), &(_29068_key), (*(*(_29048_pair))._field_Key.alloc)._field_Token, _1ad98ae4d_getOwnerRefers(_self_));
				};
				if (_1ad91e9e7_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_288928_m.alloc)._field_Val), &(_29118_val), &((*((*_29048_pair.alloc)._field_Val))._field_Token))) {
					_1ad91a262_checkAssignType((*(_self_))._field_s, false, &((*_288928_m.alloc)._field_Val), &(_29118_val), (*(*(_29048_pair))._field_Val.alloc)._field_Token, _1ad98ae4d_getOwnerRefers(_self_));
				};
				(*(_28907_model))._field_Entries=jule::append((*_28907_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7dd597_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ad7dd597_KeyValPairExprModel>(_1ad7dd597_KeyValPairExprModel{._field_Key=(*(_29068_key))._field_Model, ._field_Val=(*(_29118_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1be95a802:;
			++it;
			goto _iter_begin_1be95a802;
		}
		_iter_end_1be95a802:;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_288928_m, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28907_model, &__jule_any_type101), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a4e45_evalBraceLit(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ee9e7_BraceLit> _293733_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1be967bb6:;
			{
				_1ad987e4a_pushErr(_self_, (*(_293733_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ad9bc7dc_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1be967ac8:;
			{
				return _1ad9a4b04_evalMap(_self_, _1ad9bc7dc_Map((*(_self_))._field_prefix), _293733_lit);;
			}
		}
		else if ((_1ad9bc2c0_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1be967b3e:;
			{
				return _1ad99abd8_evalStructLitExplicit(_self_, _1ad9bc2c0_Struct((*(_self_))._field_prefix), (*(_293733_lit))._field_Exprs, (*_293733_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1be965521:;
			{
				_1ad987e4a_pushErr(_self_.ptr(), (*(_293733_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be9644a9:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a5286_evalAnonFunc(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad706d73_FnDecl> _295233_decl) {
	_1ad9ca993_typeChecker _29537_tc = _1ad9ca993_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1ad9c99a3_referencer>(nullptr), ._field_refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ad9b77a4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1ad7ea84b_FnIns> _29587_ins = _1ad9d2aaa_buildFunc(&_29537_tc, _295233_decl);;
	if ((_29587_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29587_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _29637_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad933a83_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)) {
			_case_begin_1be96d56d:;
			{
				jule::Ptr<_1ad8b860b_scopeChecker> _29668_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1ad8b860b_scopeChecker>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1);;
				jule::Ptr<_1ad8b860b_scopeChecker> _29678_scc = _1ad8caa19_newChildChecker(_29668_sc);;
				(*(_29678_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ad8b761b_scopeLabel>>>(nullptr);
				(*_29678_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ad8b452a_GotoSt>>>(nullptr);
				(*_29678_scc.alloc)._field_owner=_29587_ins;
				(*_29678_scc.alloc)._field_childIndex=0LL;
				(*_29678_scc.alloc)._field_it=0LLU;
				(*_29678_scc.alloc)._field_cse=0LLU;
				(*_29678_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1ad933a83_Var>>>)((&(_29637_captured))));
				_1ad92cebc_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29587_ins), &(_29678_scc));
			}
		}
		else {
			_case_begin_1be96e151:;
			{
				_1ad92d5d8_checkFnIns((*_self_.alloc)._field_s, &(_29587_ins));
			}
		}
		_match_end_1be96e0da:;
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29587_ins, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1ad7dd1bd_AnonFnExprModel>(_1ad7dd1bd_AnonFnExprModel{._field_Captured=_29637_captured, ._field_Func=_29587_ins, ._field_Global=_1ad988bc6_isGlobal(_self_)}), &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a55c7_evalBinary(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6ecab1_BinaryExpr> _299031_op) {
	_1ad9a8b4c_binaryEval _29917_bs = static__1ad9a9235_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1ad9c16ae_Prim> _29944_prim = _1ad9bac4c_Prim((*(_self_))._field_prefix);;
		if (((_29944_prim == nullptr) || (!(_1ad87c69c_IsNum(_1ad9c1a33_Str(_29944_prim.ptr())))))) {
			jule::Ptr<_1ad9b8596_TypeKind> _29969_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29969_prefix;
			});;
			return _1ad9aec96_eval(&_29917_bs, &(_299031_op));;
		};
	};
	return _1ad9aec96_eval(&_29917_bs, &(_299031_op));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a5918_evalExprKind(jule::Ptr<_1ad9878b7_eval> _self_, jule::Any _300533_kind) {
	{
		auto &_match_expr{ _300533_kind };
		
		if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1be97a1b2:;
			{
				jule::Ptr<_1ad6e97b1_RangeExpr> _30088_e = _300533_kind.unsafe_cast_ptr<_1ad6e97b1_RangeExpr>();;
				return _1ad9a5918_evalExprKind(_self_, (*((*(_30088_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1be97a4e2:;
			{
				return _1ad98a47a_evalLit(_self_.ptr(), _300533_kind.cast_ptr<_1ad6ea482_LitExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1be97a558:;
			{
				return _1ad9901b6_evalIdent(_self_.ptr(), _300533_kind.cast_ptr<_1ad6ead12_IdentExpr>(&__jule_any_type41));;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1be97a5be:;
			{
				return _1ad990507_evalUnary(_self_, _300533_kind.cast_ptr<_1ad6eb5a4_UnaryExpr>(&__jule_any_type90));;
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1be97a635:;
			{
				return _1ad990848_evalVariadic(_self_, _300533_kind.cast_ptr<_1ad6eb97d_VariadicExpr>(&__jule_any_type78));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1be97a69b:;
			{
				return _1ad990b89_evalUnsafe(_self_, _300533_kind.cast_ptr<_1ad6ea85b_UnsafeExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1be97a712:;
			{
				return _1ad9917c2_evalSliceExpr(_self_, _300533_kind.cast_ptr<_1ad700a4d_SliceExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1be97ab0d:;
			{
				return _1ad99541e_evalIndexing(_self_, _300533_kind.cast_ptr<_1ad7014aa_IndexingExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1be97ab74:;
			{
				return _1ad996750_evalSlicing(_self_, _300533_kind.cast_ptr<_1ad701b1a_SlicingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1be97abda:;
			{
				return _1ad99a3e1_evalCast(_self_, _300533_kind.cast_ptr<_1ad6ebd57_CastExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1be97ac51:;
			{
				return _1ad99a732_evalNamespace(_self_.ptr(), _300533_kind.cast_ptr<_1ad6ec231_NamespaceExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1be97acc8:;
			{
				return _1ad99b029_evalStructLit(_self_, _300533_kind.cast_ptr<_1ad6ee541_StructLit>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1be97ad50:;
			{
				return _1ad99b601_evalType(_self_.ptr(), _300533_kind.cast_ptr<_1ad6e51b3_TypeDecl>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1be97adc7:;
			{
				return _1ad99cc0c_evalFnCall(_self_, _300533_kind.cast_ptr<_1ad6ed221_FnCallExpr>(&__jule_any_type84));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1be97ae4e:;
			{
				return _1ad9a43b7_evalSubIdent(_self_, _300533_kind.cast_ptr<_1ad6ec60a_SubIdentExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1be97aec6:;
			{
				return _1ad9a4708_evalTuple(_self_, _300533_kind.cast_ptr<_1ad6ea0db_TupleExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1be97b04d:;
			{
				return _1ad9a4e45_evalBraceLit(_self_, _300533_kind.cast_ptr<_1ad6ee9e7_BraceLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1be97b0c5:;
			{
				return _1ad9a5286_evalAnonFunc(_self_, _300533_kind.cast_ptr<_1ad706d73_FnDecl>(&__jule_any_type67));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1be97b14c:;
			{
				return _1ad9a55c7_evalBinary(_self_, _300533_kind.cast_ptr<_1ad6ecab1_BinaryExpr>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1be97a47b:;
			{
				return nullptr;;
			}
		}
		_match_end_1be97a415:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a5c59_eval1(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6e94e7_Expr> _305326_expr) {
	jule::Ptr<_1ad985b90_Data> _30547_d = _1ad9a5918_evalExprKind(_self_, (*(_305326_expr))._field_Kind);;
	if (((_30547_d == nullptr) || ((*(_30547_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1ad9bc039_Fn((*(_30547_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be9a1073:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _30628_f = _1ad9bc039_Fn((*(_30547_d))._field_Kind.ptr());;
				if (_1ad7ebd14_IsBuiltin(_30628_f.ptr())) {
					_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*_305326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1be99de83;
				};
				jule::I64 _30674_required = (*((*_30628_f.alloc)._field_Decl))._field_Generics.len();;
				jule::I64 _30684_given = (*_30628_f.alloc)._field_Generics.len();;
				if ((!(_1ad9142a0_checkGenericQuantity((*(_self_))._field_s, _30674_required, _30684_given, (*_305326_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_30628_f))._field_Decl.alloc)._field_Statically)) && _1ad7e7eca_IsMethod((*(_30628_f))._field_Decl))) {
					_1ad912c71_pushErr((*(_self_))._field_s, (*_305326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1ad9b0192_findDirective(&((*(*(_30628_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1ad912c71_pushErr((*(_self_))._field_s, (*_305326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_30628_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				} else {
					(*_30628_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_30547_d))._field_Decl) {
			_case_begin_1be9a10d9:;
			{
				jule::Ptr<_1ad718857_StructIns> _30818_s = _1ad9bc2c0_Struct((*(_30547_d))._field_Kind.ptr());;
				if ((_30818_s == nullptr)) {
					goto _match_end_1be99de83;
				};
				jule::I64 _30854_required = (*((*(_30818_s))._field_Decl))._field_Generics.len();;
				jule::I64 _30864_given = (*(_30818_s))._field_Generics.len();;
				if ((!(_1ad9142a0_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _30854_required, _30864_given, (*_305326_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1be99de83:;
	};
	return _30547_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a609a_eval(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6e94e7_Expr> _309825_expr) {
	jule::Ptr<_1ad985b90_Data> _30997_d = _1ad9a5c59_eval1(_self_, _309825_expr);;
	if ((_30997_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1ad9bcd09_comptime((*(_30997_d))._field_Kind.ptr()))) {
		_1ad912c71_pushErr((*_self_.alloc)._field_s.ptr(), (*(_309825_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30997_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a63db_evalExpr1(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6e94e7_Expr> _311330_expr) {
	jule::Ptr<_1ad985b90_Data> _31147_d = _1ad9a5c59_eval1(_self_, _311330_expr);;
	{
		
		if ((_31147_d == nullptr)) {
			_case_begin_1be9ae1e6:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31147_d))._field_Decl) {
			_case_begin_1be9ae290:;
			{
				_1ad987e4a_pushErr(_self_, (*(_311330_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1be9ae16e:;
			{
				return _31147_d;;
			}
		}
		_match_end_1be9ae0e7:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a672c_evalExpr(jule::Ptr<_1ad9878b7_eval> _self_, jule::Ptr<_1ad6e94e7_Expr> _312929_expr) {
	jule::Ptr<_1ad985b90_Data> _31307_d = _1ad9a609a_eval(_self_, _312929_expr);;
	{
		
		if ((_31307_d == nullptr)) {
			_case_begin_1be9b125e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31307_d))._field_Decl) {
			_case_begin_1be9b1308:;
			{
				_1ad987e4a_pushErr(_self_, (*(_312929_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1be9b11d7:;
			{
				return _31307_d;;
			}
		}
		_match_end_1be9b1160:;
	};
}








inline jule::Bool _1ad9a6bb1_unaryEval_eq(_1ad9a6bb1_unaryEval *_self_, _1ad9a6bb1_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1ad9a6bb1_unaryEval static__1ad9a7134_new(jule::Ptr<_1ad9878b7_eval> _315020_e) {
	return _1ad9a6bb1_unaryEval{._field_e=_315020_e, ._field_d=jule::Ptr<_1ad985b90_Data>(nullptr), ._field_u=jule::Ptr<_1ad6eb5a4_UnaryExpr>(nullptr)};;
}



inline void _1ad9a7332_minus(_1ad9a6bb1_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1be9b30eb:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ad9bac4c_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be9b34d6:;
			{
				if ((!(_1ad87c69c_IsNum(_1ad9b8992_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ad9bc2c0_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be9b2cbb:;
			{
				if (((*(_1ad9bc2c0_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1be9b2c55:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1be9b2b67:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ad9865ca_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1ad7d3559_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1be9b78b4:;
				{
					_1ad7d258b_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1ad7d0e5d_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1ad7d2a20_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1be9b79a2:;
				{
					_1ad7d19b9_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1ad7d0424_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1ad7d2ca6_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1be9b7562:;
				{
					_1ad7d19b9_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1ad7d11e4_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1be9b74da:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unary.minus, this panic call should be unreachable", 88) + jule::Str("\nlocation: std/jule/sema/eval.jule:3188:5"));;
				}
			}
			_match_end_1be9b740d:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ad7da781_UnaryExprModel>(_1ad7da781_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad985b90_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ad9a7530_plus(_1ad9a6bb1_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1be9bcde7:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ad9bac4c_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be9bd2d2:;
			{
				if ((!(_1ad87c69c_IsNum(_1ad9b8992_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ad9bc2c0_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be9bca95:;
			{
				if (((*(_1ad9bc2c0_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1be9bca2e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1be9bc91e:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ad9865ca_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1ad7d3559_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1be9c26b0:;
				{
					_1ad7d258b_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1ad7d0e5d_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1ad7d2a20_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1be9c279d:;
				{
					_1ad7d19b9_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1ad7d0424_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1ad7d2ca6_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1be9c235d:;
				{
					_1ad7d19b9_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1ad7d11e4_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1be9c22d6:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unary.plus, this panic call should be unreachable", 87) + jule::Str("\nlocation: std/jule/sema/eval.jule:3233:5"));;
				}
			}
			_match_end_1be9c2209:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ad7da781_UnaryExprModel>(_1ad7da781_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad985b90_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ad9a772d_caret(_1ad9a6bb1_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1be9c7be3:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1ad9bac4c_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be9c80cd:;
			{
				if ((!(_1ad87c0c5_IsInt(_1ad9b8992_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1ad9bc2c0_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be9c7891:;
			{
				if (((*(_1ad9bc2c0_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1be9c782a:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1be9c771a:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ad9865ca_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1ad7d2a20_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1be9cc49a:;
				{
					_1ad7d19b9_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1ad7d0424_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1ad7d2ca6_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1be9cc588:;
				{
					_1ad7d1c72_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1ad7d06aa_ReadU64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1be9cc0d2:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unary.caret, this panic call should be unreachable", 88) + jule::Str("\nlocation: std/jule/sema/eval.jule:3276:5"));;
				}
			}
			_match_end_1be9cc005:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ad7da781_UnaryExprModel>(_1ad7da781_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad985b90_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ad9a792b_excl(_1ad9a6bb1_unaryEval* _self_) {
	jule::Ptr<_1ad9c16ae_Prim> _32903_t = _1ad9bac4c_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32903_t == nullptr) || (!(_1ad9c48e3_IsBool(_32903_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1ad9865ca_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1ad7d303c_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1be9d3649:;
				{
					_1ad7d202a_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1ad7d0941_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1be9d3281:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unary.excl, this panic call should be unreachable", 87) + jule::Str("\nlocation: std/jule/sema/eval.jule:3304:5"));;
				}
			}
			_match_end_1be9d31a4:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ad7da781_UnaryExprModel>(_1ad7da781_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad985b90_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1ad9a7b29_star(_1ad9a6bb1_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1ad7da781_UnaryExprModel>(_1ad7da781_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad985b90_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
	{
		
		if ((_1ad9bb269_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be9d6e99:;
			{
				if ((!(_1ad988940_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1ad987e4a_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ad9c89a2_Ptr> _33298_t = _1ad9bb269_Ptr((*((*(_self_))._field_d))._field_Kind);;
				if (_1ad9c951e_IsUnsafe(_33298_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_33298_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1ad9baed3_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1be9d7021:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1ad9baed3_Sptr((*((*(_self_))._field_d))._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1be9d6ae2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1be9d5ad0:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1ad9a7d27_amper(_1ad9a6bb1_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1be9e0722:;
			{
				jule::Ptr<_1ad7db155_StructLitExprModel> _33518_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1ad7db155_StructLitExprModel>();;
				_1ad9b0abb_makeStructLitAlloc(&((*(_self_))._field_d), &(_33518_lit));
			}
		}
		else {
			_case_begin_1be9dcb81:;
			{
				{
					
					if (_1ad9d4dcb_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1be9dd577:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad9c89a2_Ptr>(_1ad9c89a2_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1ad7da781_UnaryExprModel>(_1ad7da781_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad985b90_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
						}
					}
					else {
						_case_begin_1be9dc774:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1be9dd126:;
				};
			}
		}
		_match_end_1be9dcb1a:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1ad9a8025_typeDecl(_1ad9a6bb1_unaryEval* _self_) {
	_1ad9ca993_typeChecker _33767_tc = _1ad9ca993_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1ad9c99a3_referencer>(nullptr), ._field_refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1ad9b77a4_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1be9e425e:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d12c3_buildPtrFromType(&_33767_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1be9e3e1d:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d0b41_buildSptrFromType(&_33767_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type86);
			}
		}
		else {
			_case_begin_1be9e3857:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1be9e3d96:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1ad9a8223_evalData(_1ad9a6bb1_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1be9e9a6c:;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _34018_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1ad9a609a_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34018_prefix;
			}
		}
		else {
			_case_begin_1be9e3e84:;
			{
				(*(_self_))._field_d=_1ad9a609a_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1be9e964e:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a8564_eval(_1ad9a6bb1_unaryEval* _self_, jule::Ptr<_1ad6eb5a4_UnaryExpr> _341024_u) {
	(*(_self_))._field_u=_341024_u;
	_1ad9a8223_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1ad9a8025_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1ad9b8596_TypeKind> _34213_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1be9ee236:;
			{
				_1ad9a7332_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1be9ee29c:;
			{
				_1ad9a7530_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1be9ee313:;
			{
				_1ad9a772d_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1be9ee379:;
			{
				_1ad9a792b_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1be9ee3e0:;
			{
				_1ad9a7b29_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1be9ee456:;
			{
				_1ad9a7d27_amper(_self_);
			}
		}
		else {
			_case_begin_1be9edbe7:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1be9ee1ae:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1be9ee962:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str(_34213_kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1ad9865ca_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1be9ec8b6:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type15);
			}
		}
		_match_end_1bea01447:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1ad9a8b4c_binaryEval_eq(_1ad9a8b4c_binaryEval *_self_, _1ad9a8b4c_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1ad9a8b4c_binaryEval static__1ad9a9235_newPlain(jule::Ptr<_1ad9878b7_eval> _345825_e) {
	return _1ad9a8b4c_binaryEval{._field_e=_345825_e, ._field_l=jule::Ptr<_1ad985b90_Data>(nullptr), ._field_r=jule::Ptr<_1ad985b90_Data>(nullptr), ._field_op=jule::Ptr<_1ad6ceb70_Token>(nullptr)};;
}



inline _1ad9a8b4c_binaryEval static__1ad9a95a9_new(jule::Ptr<_1ad9878b7_eval> _346420_e, jule::Ptr<_1ad6ceb70_Token> _346434_op) {
	return _1ad9a8b4c_binaryEval{._field_e=_346420_e, ._field_l=jule::Ptr<_1ad985b90_Data>(nullptr), ._field_r=jule::Ptr<_1ad985b90_Data>(nullptr), ._field_op=_346434_op};;
}



inline jule::Bool _1ad9a9840_checkTypeCompatibility(_1ad9a8b4c_binaryEval* _self_) {
	return _1ad91b593_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1ad9a9ac6_checkStructCommonOperatorCompatibility(_1ad9a8b4c_binaryEval* _self_) {
	jule::Ptr<_1ad7ea84b_FnIns> _347811_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1bea06c66:;
			{
				_347811_overload=(*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bea06914:;
			{
				_347811_overload=(*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bea0697a:;
			{
				_347811_overload=(*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bea069e1:;
			{
				_347811_overload=(*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bea06a57:;
			{
				_347811_overload=(*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bea06abd:;
			{
				_347811_overload=(*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bea06b34:;
			{
				_347811_overload=(*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bea08372:;
			{
				_347811_overload=(*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1bea083d8:;
			{
				_347811_overload=(*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bea0844e:;
			{
				_347811_overload=(*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1bea064a2:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1bea0688c:;
	};
	if ((_347811_overload == nullptr)) {
		_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1ad7e96e6_ParamIns> _35107_p = (*(_347811_overload))._field_Params[1LL];;
	return _1ad91a262_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_35107_p))._field_Decl))._field_Reference, &((*_35107_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op, _1ad98ae4d_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9a9d5c_evalComptimeTypeInfo(_1ad9a8b4c_binaryEval* _self_) {
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _35157_r = _1ad9be613_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_35157_r == nullptr)) {
		_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad89387d_comptimeTypeInfo> _35207_l = _1ad9be613_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1bea176e4:;
			{
				jule::Ptr<_1ad778ec2_Const> _35238_constant = static__1ad7ce522_NewBool(_1ad9b8cd3_Equal((*(_35207_l))._field_base, (*(_35157_r))._field_base));;
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35238_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35238_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bea18b8a:;
			{
				jule::Ptr<_1ad778ec2_Const> _35308_constant = static__1ad7ce522_NewBool((!(_1ad9b8cd3_Equal((*(_35207_l))._field_base, (*(_35157_r))._field_base))));;
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35308_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35308_constant});;
			}
		}
		else {
			_case_begin_1bea15505:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea1731a:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9aa0e3_evalNil(_1ad9a8b4c_binaryEval* _self_) {
	if ((!(_1ad9ba499_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bea1d73e:;
			{
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bea1ba28:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea1d365:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9aa379_evalEnum(_1ad9a8b4c_binaryEval* _self_) {
	jule::Ptr<_1ad805658_Enum> _35617_enm = _1ad9bb500_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bea20b70:;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _35658_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1ad9bb500_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
					_35658_rkind=(*((*(_1ad9bb500_Enum((*((*(_self_))._field_r))._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1ad91abbe_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_35617_enm))._field_Kind.alloc)._field_Kind), &(_35658_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		_match_end_1bea20ae8:;
	};
	if (((_1ad9bb500_Enum((*((*(_self_))._field_r))._field_Kind) == nullptr) || (_35617_enm != _1ad9bb500_Enum((*((*(_self_))._field_r))._field_Kind)))) {
		_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_35617_enm))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bea267be:;
			{
				if ((!(_1ad87c69c_IsNum(_1ad9b8992_Str((*(*(_35617_enm))._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35617_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1bea27913:;
			{
				jule::Ptr<_1ad804b0d_EnumItem> _35954_first = (*_35617_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1ad7d2a20_IsI64((*((*((*(_35954_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1bea31158:;
						{
							if ((_1ad7d0424_ReadI64((*((*((*(_35954_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1bea33534;
							};
							goto _julec_label_1bea34546;
						}
					}
					else if (_1ad7d2ca6_IsU64((*((*((*(_35954_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1bea31246:;
						{
							if ((_1ad7d06aa_ReadU64((*((*((*(_35954_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1bea33534;
							};
							goto _julec_label_1bea34546;
						}
					}
					else {
						_case_begin_1bea30c90:;
						{
							__jule_panic_s(jule::Str::lit("sema: unimplemented enum type, this panic call should be unreachable", 68) + jule::Str("\nlocation: std/jule/sema/eval.jule:3608:5"));;
						}
					}
					_match_end_1bea30c18:;
				};
				_julec_label_1bea34546:;
				_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_35617_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1ad9882ad_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1bea33534:;
				goto _case_begin_1bea27979;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bea27979:;
			{
				if (((_1ad9bac4c_Prim((*(*(_35617_enm))._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1ad87c0c5_IsInt(_1ad9c1a33_Str(_1ad9bac4c_Prim((*((*(_35617_enm))._field_Kind))._field_Kind).ptr())))))) {
					_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35617_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bea20bd6:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35617_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea26417:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9aa610_evalTypeEnum(_1ad9a8b4c_binaryEval* _self_) {
	jule::Ptr<_1ad806d63_TypeEnum> _36287_enm = _1ad9bb786_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1ad9a9840_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bea39804:;
			{
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bea38b33:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad8071d7_Str(_36287_enm.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea39392:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9aa896_evalSptr(_1ad9a8b4c_binaryEval* _self_) {
	if ((!(_1ad9a9840_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bea3bd23:;
			{
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bea3ac23:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea3b949:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9aab2c_evalPtr(_1ad9a8b4c_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bea3e1ee:;
			{
				if ((!(_1ad9a9840_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1bea40662:;
			{
				if ((_1ad9bb269_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1ad9c951e_IsUnsafe(_1ad9bb269_Ptr((*((*(_self_))._field_l))._field_Kind).ptr())) {
					_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
				};
				if ((!(_1ad9b1c54_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bea3d781:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea3d6a4:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9aadb3_evalArr(_1ad9a8b4c_binaryEval* _self_) {
	if ((!(_1ad9a9840_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bea472e5:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1ad7ea84b_FnIns> _37059_f = _1ad7e8c9a_instanceForce(_1ab307aca_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37059_f))._field_Generics=jule::append((*_37059_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ad9b6de1_InsGeneric>(_1ad9b6de1_InsGeneric{._field_Kind=(*(_1ad9bba1c_Arr((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr)}); __jule_collection; }));
					jule::Bool _37075_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad92a7c2_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37059_f), &((*(_self_))._field_op));
						_37075_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37075_ok))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/eval.jule:3709:6"));;
					};
					_1be6d548e_pushReference((*(_self_))._field_e, &(_37059_f));
				};
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bea41388:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea46e1b:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9ab149_evalStruct(_1ad9a8b4c_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1bea48b98:;
			{
				if (((*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1bea48c31:;
			{
				if (((*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1bea4d2a7:;
			{
				if (((*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bea4d31d:;
			{
				if (((*(_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bea4d384:;
			{
				if ((!(_1ad9a9840_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		_match_end_1bea48abb:;
	};
	if ((!(_1ad9a9ac6_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9ab3d0_evalTrait(_1ad9a8b4c_binaryEval* _self_) {
	if ((!(_1ad9a9840_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bea598e0:;
			{
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bea58c96:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea59516:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9ab666_evalAny(_1ad9a8b4c_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1bea5bcbb:;
			{
				_1ad9d6394_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op), _1ad98ae4d_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bea5b34d:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea5b271:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9ab8ec_evalBool(_1ad9a8b4c_binaryEval* _self_) {
	if ((!(_1ad9a9840_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1bea5ee56:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bea5d0ca:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea5ea7c:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9abb83_evalStr(_1ad9a8b4c_binaryEval* _self_) {
	jule::Str _38217_rk = _1ad9b8992_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_38217_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_38217_rk, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1bea641e1:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bea64103:;
			{
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bea62bb2:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea63c4b:;
	};
}



inline void _1ad9abd81_setTypeToGreater(_1ad9a8b4c_binaryEval* _self_) {
	jule::Ptr<_1ad9c16ae_Prim> _38463_lp = _1ad9bac4c_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1ad9c16ae_Prim> _38473_rp = _1ad9bac4c_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38473_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38463_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38463_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1ad9ac139_checkModData(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _386333_d) {
	if ((!(_1ad9865ca_IsConst((*(_386333_d)).ptr())))) {
		if (((_1ad9bac4c_Prim((*((*(_386333_d))))._field_Kind.ptr()) == nullptr) || (!(_1ad87c0c5_IsInt((*(_1ad9bac4c_Prim((*((*(_386333_d))))._field_Kind)))._field_Kind))))) {
			_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1ad971494_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _386333_d)) {
			_case_begin_1bea7073b:;
			{
				_1ad7d19b9_SetI64((*((*(_386333_d))))._field_Constant.ptr(), _1ad7d11e4_AsI64((*((*(_386333_d))))._field_Constant));
			}
		}
		else if (_1ad97185c_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _386333_d)) {
			_case_begin_1bea7041c:;
			{
				_1ad7d1c72_SetU64((*((*(_386333_d))))._field_Constant.ptr(), _1ad7d147a_AsU64((*((*(_386333_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1bea703a6:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bea70340:;
	};
}



inline void _1ad9ac337_mod(_1ad9a8b4c_binaryEval* _self_) {
	_1ad9ac139_checkModData(_self_, &((*(_self_))._field_l));
	_1ad9ac139_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1ad9ac733_numbersAreCompatibile(_1ad9a8b4c_binaryEval* _self_, jule::Str* _388534_lk, jule::Str* _388544_rk) {
	if ((!(_1ad87c69c_IsNum((*(_388544_rk)))))) {
		return false;;
	};
	if ((_1ad9865ca_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_388534_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1ad9865ca_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1ad971120_floatAssignable(_388534_lk, &((*(_self_))._field_r));;
		};
		return ((*(_388544_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_388534_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1ad9865ca_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1ad971120_floatAssignable(_388534_lk, &((*(_self_))._field_r));;
		};
		return ((*(_388544_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_1ad9865ca_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1ad971bd1_intAssignable((*(_388534_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_388534_lk)) == (*(_388544_rk)));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9ac9b9_shift(_1ad9a8b4c_binaryEval* _self_) {
	jule::Ptr<_1ad9c16ae_Prim> _39133_lk = _1ad9bac4c_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((_39133_lk == nullptr)) {
		_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _39183_rk = _1ad9bac4c_Prim((*((*(_self_))._field_r))._field_Kind);;
	if ((_39183_rk == nullptr)) {
		_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1ad87c69c_IsNum((*(_39133_lk))._field_Kind))) || (!(_1ad87c69c_IsNum((*(_39183_rk))._field_Kind))))) {
		_1ad91b0dc_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1ad87c0c5_IsInt((*(_39133_lk))._field_Kind)))) {
		if (((!(_1ad9865ca_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39133_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39183_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1ad971bd1_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1ad7d19b9_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1ad7d11e4_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1adaa0b23_primI64;
		} else if (_1ad971bd1_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1ad7d1c72_SetU64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1ad7d147a_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1adaa1926_primU64;
		};
	};
	if ((!(_1ad87c0c5_IsInt((*(_39183_rk))._field_Kind)))) {
		if (((!(_1ad9865ca_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39133_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39183_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1ad971bd1_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1ad7d19b9_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1ad7d11e4_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1adaa0b23_primI64;
		} else if (_1ad971bd1_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1ad7d1c72_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), _1ad7d147a_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1adaa1926_primU64;
		};
	};
	if ((!(_1ad9b157d_isOkForShifting(&((*(_self_))._field_r))))) {
		_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9acc50_evalFloat(_1ad9a8b4c_binaryEval* _self_) {
	jule::Str _39683_lk = (*(_1ad9bac4c_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39693_rk = (*(_1ad9bac4c_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1ad9ac733_numbersAreCompatibile(_self_, &(_39683_lk), &(_39693_rk))))) {
		_1ad91b0dc_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bea8b735:;
			{
				_1ad9abd81_setTypeToGreater(_self_);
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		_match_end_1bea8b6ad:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bea8d209:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:3993:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1bea8e0a6:;
			{
				_1ad9abd81_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bea8e11c:;
			{
				_1ad9abd81_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bea8c67b:;
			{
				if ((!(_1ad87c0c5_IsInt(_39693_rk)))) {
					_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_39683_lk, &__jule_any_type5); (*it++) = jule::Any(_39693_rk, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1ad9ac337_mod(_self_);
				_1ad9abd81_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1bea8b823:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea8c615:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9aced6_evalInt(_1ad9a8b4c_binaryEval* _self_) {
	jule::Str _40173_lk = (*(_1ad9bac4c_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40183_rk = (*(_1ad9bac4c_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1ad9ac733_numbersAreCompatibile(_self_, &(_40173_lk), &(_40183_rk))))) {
		_1ad91b0dc_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1bea94e47:;
			{
				return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9e69e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
			}
		}
		_match_end_1bea94dc0:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1bea9672e:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4042:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1bea975cb:;
			{
				_1ad9abd81_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1bea97642:;
			{
				_1ad9abd81_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1bea95d27:;
			{
				_1ad9ac337_mod(_self_);
				_1ad9abd81_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bea95035:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bea962bc:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9ad26c_evalPrim(_1ad9a8b4c_binaryEval* _self_) {
	jule::Ptr<_1ad9c16ae_Prim> _40653_prim = _1ad9bac4c_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1ad9c48e3_IsBool(_40653_prim.ptr())) {
			_case_begin_1bea9a8ed:;
			{
				return _1ad9ab8ec_evalBool(_self_);;
			}
		}
		else if (_1ad9c4b79_IsStr(_40653_prim.ptr())) {
			_case_begin_1bea9a997:;
			{
				return _1ad9abb83_evalStr(_self_);;
			}
		}
		_match_end_1bea9a865:;
	};
	if ((_1ad9bac4c_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9c1a33_Str(_40653_prim.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1ad87c416_IsFloat((*_40653_prim.alloc)._field_Kind)) {
			_case_begin_1bea9d725:;
			{
				return _1ad9acc50_evalFloat(_self_);;
			}
		}
		else if (_1ad87c0c5_IsInt((*_40653_prim.alloc)._field_Kind)) {
			_case_begin_1bea9d7ad:;
			{
				return _1ad9aced6_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1bea9d6ae:;
			{
				return nullptr;;
			}
		}
		_match_end_1bea9badb:;
	};
}



inline jule::Bool _1ad9ad503_checkSpecialCases(_1ad9a8b4c_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _40903_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));;
	if ((!(_40903_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1ad9b9be6_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1ad9b96c9_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1ad9b9be6_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1ad9b96c9_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9ad789_evalOp(_1ad9a8b4c_binaryEval* _self_) {
	jule::Bool _41053_ok = _1ad9ad503_checkSpecialCases(_self_);;
	if ((!(_41053_ok))) {
		return nullptr;;
	};
	if ((_1ad9bc2c0_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
		return _1ad9ab149_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(57LLU)))) {
		return _1ad9ac9b9_shift(_self_);;
	};
	{
		
		if (_1ad9b9960_Void((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1beaa7894:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1ad9be613_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1beaa7a4d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1beaa790a;
			}
		}
		else if ((_1ad9be613_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1beaa790a:;
			{
				return _1ad9a9d5c_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1ad9bac4c_Prim((*((*(_self_))._field_r))._field_Kind) != nullptr) && _1ad9c4e10_IsAny(_1ad9bac4c_Prim((*((*(_self_))._field_r))._field_Kind).ptr()))) {
			_case_begin_1beaa7971:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1beaa8ee4;
			}
		}
		else if (_1ad9b96c9_IsNil((*((*(_self_))._field_r))._field_Kind)) {
			_case_begin_1beaa8ee4:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1beaa905a;
			}
		}
		else if (_1ad9b96c9_IsNil((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1beaa905a:;
			{
				return _1ad9aa0e3_evalNil(_self_);;
			}
		}
		else if (((_1ad9bac4c_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr) && _1ad9c4e10_IsAny(_1ad9bac4c_Prim((*((*(_self_))._field_l))._field_Kind).ptr()))) {
			_case_begin_1beaa9159:;
			{
				return _1ad9ab666_evalAny(_self_);;
			}
		}
		else if ((_1ad9bb786_TypeEnum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1beaa91c0:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1beaa9236;
			}
		}
		else if ((_1ad9bb786_TypeEnum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1beaa9236:;
			{
				return _1ad9aa610_evalTypeEnum(_self_);;
			}
		}
		else if ((_1ad9bb500_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1beaa929c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1beaa9313;
			}
		}
		else if ((_1ad9bb500_Enum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1beaa9313:;
			{
				return _1ad9aa379_evalEnum(_self_);;
			}
		}
		else if ((_1ad9baed3_Sptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1beaa9379:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1beaa93e0;
			}
		}
		else if ((_1ad9baed3_Sptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1beaa93e0:;
			{
				return _1ad9aa896_evalSptr(_self_);;
			}
		}
		else if ((_1ad9bb269_Ptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1beaa9456:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1beaa94bc;
			}
		}
		else if ((_1ad9bb269_Ptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1beaa94bc:;
			{
				return _1ad9aab2c_evalPtr(_self_);;
			}
		}
		else if ((_1ad9bba1c_Arr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1beaa9533:;
			{
				return _1ad9aadb3_evalArr(_self_);;
			}
		}
		else if ((_1ad9bc556_Trait((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1beaa95ee:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1beaa9665;
			}
		}
		else if ((_1ad9bc556_Trait((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1beaa9665:;
			{
				return _1ad9ab3d0_evalTrait(_self_);;
			}
		}
		else if ((_1ad9bac4c_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1beaa96cb:;
			{
				return _1ad9ad26c_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1beaa76b8:;
			{
				_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1beaa6c5b:;
	};
}



inline void _1ad9ada42_evalConst(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _417530_d) {
	{
		
		if (((*(_417530_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1beabb226:;
			{
				return;;
			}
		}
		else if ((!(_1ad9865ca_IsConst((*(_self_))._field_l.ptr()))) || (!(_1ad9865ca_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1beabb7cb:;
			{
				(*((*(_417530_d))))._field_Constant=nullptr;
				(*((*(_417530_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1beabb116:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1beabb8a8:;
			{
				(*((*(_417530_d))))._field_Constant=static__1ad7ce522_NewBool(_1ad7d4604_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1beabdd0b:;
			{
				(*((*(_417530_d))))._field_Constant=static__1ad7ce522_NewBool((!(_1ad7d4604_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1beabdd72:;
			{
				(*((*(_417530_d))))._field_Constant=static__1ad7ce522_NewBool(_1ad7d42b3_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1beabddd8:;
			{
				(*((*(_417530_d))))._field_Constant=static__1ad7ce522_NewBool(_1ad7d3e72_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1beabde4e:;
			{
				(*((*(_417530_d))))._field_Constant=static__1ad7ce522_NewBool(_1ad7d50c7_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1beabdec6:;
			{
				(*((*(_417530_d))))._field_Constant=static__1ad7ce522_NewBool(_1ad7d4945_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1beabe04d:;
			{
				(*((*(_417530_d))))._field_Constant=static__1ad7ce522_NewBool(_1ad7d5418_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1beabe0c5:;
			{
				(*((*(_417530_d))))._field_Constant=static__1ad7ce522_NewBool(_1ad7d4c86_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1beabe14c:;
			{
				_1ad7d5759_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1beabe1c4:;
			{
				_1ad7d5a9a_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1beabe24b:;
			{
				_1ad7d5ddb_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1beabe2c3:;
			{
				jule::Bool _42154_ok = _1ad7d622c_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42154_ok)) && (_1ad7d1711_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1ad9c16ae_Prim> _42208_prim = _1ad9bac4c_Prim((*((*(_417530_d))))._field_Kind.ptr());;
				{
					
					if (_1ad87b9ed_IsSigInt((*(_42208_prim))._field_Kind)) {
						_case_begin_1bead03d3:;
						{
							_1ad7d19b9_SetI64((*((*(_417530_d))))._field_Constant, _1ad7d11e4_AsI64((*((*(_417530_d))))._field_Constant));
						}
					}
					else if (_1ad87bd0b_IsUnsigInt((*(_42208_prim))._field_Kind)) {
						_case_begin_1bead047c:;
						{
							_1ad7d1c72_SetU64((*((*(_417530_d))))._field_Constant, _1ad7d147a_AsU64((*((*(_417530_d))))._field_Constant));
						}
					}
					_match_end_1bead035b:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1beabe34a:;
			{
				jule::Bool _42284_ok = _1ad7d656d_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42284_ok)) && (_1ad7d1711_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1beabe3c2:;
			{
				_1ad7d6c00_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1beabe449:;
			{
				_1ad7d68ae_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1beabe4c1:;
			{
				_1ad7d7041_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1beabe548:;
			{
				_1ad7d7382_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1beabe5c0:;
			{
				_1ad7d76c3_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_417530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1beabd0e6:;
	};
	(*((*(_417530_d))))._field_Model=jule::Any((*((*(_417530_d))))._field_Constant, &__jule_any_type15);
	_1ad9b397b_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _417530_d, _1ad9bb500_Enum((*((*(_417530_d))))._field_Kind.ptr()), &((*(_self_))._field_op), _1ad98ae4d_getOwnerRefers((*(_self_))._field_e));
}



inline void _1ad9adcea_checkData(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _425330_d) {
	jule::Ptr<_1ad7ea84b_FnIns> _42543_f = _1ad9bc039_Fn((*((*(_425330_d))))._field_Kind.ptr());;
	if ((((_42543_f != nullptr) && ((*_42543_f.alloc)._field_Decl != nullptr)) && _1ad7e7eca_IsMethod((*(_42543_f))._field_Decl))) {
		_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1ad9adee8_checkDatas(_1ad9a8b4c_binaryEval* _self_) {
	_1ad9adcea_checkData(_self_, &((*(_self_))._field_l));
	_1ad9adcea_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1ad9ae2a1_setModel(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _426529_d) {
	if (_1ad9865ca_IsConst((*(_426529_d)).ptr())) {
		if (((_1ad9865ca_IsConst((*(_self_))._field_l.ptr()) && _1ad9865ca_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1ad985b90_Data> _42767_l;
	jule::Ptr<_1ad985b90_Data> _427614_r;
	({
		jule::Ptr<_1ad985b90_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1ad985b90_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_42767_l = ___jule_assign_arg;
		_427614_r = _1___jule_assign_arg;
	});
	if ((!(_1ad98691b_GoodOperand(_42767_l, &(_427614_r))))) {
		std::swap(_42767_l, _427614_r);
	};
	(*((*(_426529_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7da3a7_BinaryExprModel>(_1ad7da3a7_BinaryExprModel{._field_Left=jule::new_ptr<_1ad7d9dac_OperandExprModel>(_1ad7d9dac_OperandExprModel{._field_Kind=(*_42767_l.alloc)._field_Kind, ._field_Model=(*_42767_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1ad7d9dac_OperandExprModel>(_1ad7d9dac_OperandExprModel{._field_Kind=(*_427614_r.alloc)._field_Kind, ._field_Model=(*_427614_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type113);
}



inline void _1ad9ae559_postEval(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _429429_d) {
	(*((*(_429429_d))))._field_Lvalue=false;
	_1ad9ae2a1_setModel(_self_, _429429_d);
}



inline jule::Ptr<_1ad985b90_Data> _1ad9ae955_solveExplicit(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad985b90_Data>* _429934_l, jule::Ptr<_1ad985b90_Data>* _429949_r) {
	({
		jule::Ptr<_1ad985b90_Data> ___jule_assign_arg = (*(_429934_l));
		jule::Ptr<_1ad985b90_Data> _1___jule_assign_arg = (*(_429949_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ad9adee8_checkDatas(_self_);
	jule::Ptr<_1ad985b90_Data> _43047_d = _1ad9ad789_evalOp(_self_);;
	({
		jule::Ptr<_1ad985b90_Data> ___jule_assign_arg = (*(_429934_l));
		jule::Ptr<_1ad985b90_Data> _1___jule_assign_arg = (*(_429949_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1ad9ada42_evalConst(_self_, &(_43047_d));
	if ((_43047_d != nullptr)) {
		(*_43047_d.alloc)._field_Mutable=true;
		_1ad9ae559_postEval(_self_, &(_43047_d));
	};
	return _43047_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1ad9aec96_eval(_1ad9a8b4c_binaryEval* _self_, jule::Ptr<_1ad6ecab1_BinaryExpr>* _431925_op) {
	if (((*((*((*(_431925_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1ad987e4a_pushErr((*(_self_))._field_e.ptr(), (*((*(_431925_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1ad9882ad_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad985b90_Data> _43267_l = _1ad9a63db_evalExpr1((*(_self_))._field_e, (*((*(_431925_op))))._field_Left);;
	if (((_43267_l == nullptr) || ((*(_43267_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1ad9b8596_TypeKind> _43317_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43267_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43317_prefix;
	});;
	jule::Ptr<_1ad985b90_Data> _43347_r = _1ad9a63db_evalExpr1((*(_self_))._field_e, (*((*(_431925_op))))._field_Right);;
	if (((_43347_r == nullptr) || ((*(_43347_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_431925_op))))._field_Op;
	jule::Ptr<_1ad985b90_Data> _43417_d = _1ad9ae955_solveExplicit(_self_, &(_43267_l), &(_43347_r));;
	if ((((_43417_d != nullptr) && (*(_43267_l))._field_IsRune) && (*(_43347_r))._field_IsRune)) {
		(*_43417_d.alloc)._field_IsRune=true;
	};
	return _43417_d;;
}
















inline jule::Bool _1ad9b8596_TypeKind_eq(_1ad9b8596_TypeKind *_self_, _1ad9b8596_TypeKind _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1ad9b8992_Str(_1ad9b8596_TypeKind* _self_) {
	if (_1ad9b96c9_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1dd0b6912_Builder _567_kind = static__1dd0b74d4_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1dd0c0dd3_WriteStr(&_567_kind, jule::Str::lit("...", 3));
	};
	if (_1ad9b9443_Binded(_self_)) {
		_1dd0c0dd3_WriteStr(&_567_kind, jule::Str::lit("cpp.", 4));
		_1dd0c0dd3_WriteStr(&_567_kind, (*(_self_))._field_BindIdent);
	} else {
		_1dd0c0dd3_WriteStr(&_567_kind, ((_1ad9b80e0_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1ad9b7b4a_Str((*(_self_))._field_Kind.data));
	};
	return _1dd0c16ca_Str(&_567_kind);;
}



inline jule::Bool _1ad9b8cd3_Equal(jule::Ptr<_1ad9b8596_TypeKind> _self_, jule::Ptr<_1ad9b8596_TypeKind> _7218_other) {
	if (_1ad9b96c9_IsNil(_self_.ptr())) {
		return _1ad9b96c9_IsNil(_7218_other.ptr());;
	};
	if (_1ad9b9443_Binded(_self_)) {
		return (_1ad9b9443_Binded(_7218_other) && ((*_self_.alloc)._field_BindIdent == (*_7218_other.alloc)._field_BindIdent));;
	};
	return ((_1ad9b80e0_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1ad9b7e8b_Equal((*_self_.alloc)._field_Kind.data, _7218_other);;
}



inline jule::Bool _1ad9b9443_Binded(_1ad9b8596_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1ad9b96c9_IsNil(_1ad9b8596_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1ad9b9960_Void(_1ad9b8596_TypeKind* _self_) {
	jule::Ptr<_1ad9c16ae_Prim> _923_prim = _1ad9bac4c_Prim(_self_);;
	return ((_923_prim != nullptr) && (*(_923_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1ad9b9be6_Comparable(_1ad9b8596_TypeKind* _self_) {
	{
		_1ad9b8596_TypeKind* _998__self = _self_;;
		if ((_1ad9bc2c0_Struct(_998__self) != nullptr)) {
			return (*(_1ad9bc2c0_Struct(_998__self)))._field_Comparable;;
		};
		if ((_1ad9bba1c_Arr(_998__self) != nullptr)) {
			return _1ad9b9be6_Comparable((*(_1ad9bba1c_Arr(_998__self)))._field_Elem.ptr());;
		};
		return (((_1ad9bc7dc_Map(_998__self) == nullptr) && (_1ad9bbca3_Slc(_998__self) == nullptr)) && (_1ad9bc039_Fn(_998__self) == nullptr));;
	};
}



inline jule::Bool _1ad9b9e7c_Mutable(_1ad9b8596_TypeKind* _self_) {
	{
		_1ad9b8596_TypeKind* _1138__self = _self_;;
		if ((_1ad9bc2c0_Struct(_1138__self) != nullptr)) {
			return (*(_1ad9bc2c0_Struct(_1138__self)))._field_Mutable;;
		};
		if ((_1ad9bc556_Trait(_1138__self) != nullptr)) {
			return true;;
		};
		if ((_1ad9bac4c_Prim(_1138__self) != nullptr)) {
			jule::Ptr<_1ad9c16ae_Prim> _1215_p = _1ad9bac4c_Prim(_1138__self);;
			return _1ad9c4e10_IsAny(_1215_p.ptr());;
		};
		if ((_1ad9bba1c_Arr(_1138__self) != nullptr)) {
			return _1ad9b9e7c_Mutable((*(_1ad9bba1c_Arr(_1138__self)))._field_Elem.ptr());;
		};
		return (((_1ad9bbca3_Slc(_1138__self) != nullptr) || (_1ad9bb269_Ptr(_1138__self) != nullptr)) || (_1ad9baed3_Sptr(_1138__self) != nullptr));;
	};
}



inline jule::Bool _1ad9ba213_Ordered(_1ad9b8596_TypeKind* _self_) {
	{
		_1ad9b8596_TypeKind* _1368__self = _self_;;
		jule::Ptr<_1ad9c16ae_Prim> _1374_prim = _1ad9bac4c_Prim(_1368__self);;
		if ((_1374_prim != nullptr)) {
			return (_1ad87c69c_IsNum((*_1374_prim.alloc)._field_Kind) || _1ad9c4b79_IsStr(_1374_prim));;
		};
		if ((_1ad9bb269_Ptr(_1368__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1ad718857_StructIns> _1444_s = _1ad9bc2c0_Struct(_1368__self);;
		if ((_1444_s != nullptr)) {
			return (((((*_1444_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1444_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1ad805658_Enum> _1514_enm = _1ad9bb500_Enum(_1368__self);;
		if ((_1514_enm != nullptr)) {
			return _1ad87c69c_IsNum(_1ad9b8992_Str((*((*_1514_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1ad9ba499_NilCompatible(_1ad9b8596_TypeKind* _self_) {
	{
		_1ad9b8596_TypeKind* _1628__self = _self_;;
		jule::Ptr<_1ad9c16ae_Prim> _1644_prim = _1ad9bac4c_Prim(_1628__self);;
		if (((_1644_prim != nullptr) && _1ad9c4e10_IsAny(_1644_prim))) {
			return true;;
		};
		return (((((((_1ad9b96c9_IsNil(_1628__self) || (_1ad9bc039_Fn(_1628__self) != nullptr)) || (_1ad9baed3_Sptr(_1628__self) != nullptr)) || (_1ad9bb269_Ptr(_1628__self) != nullptr)) || (_1ad9bc556_Trait(_1628__self) != nullptr)) || (_1ad9bbca3_Slc(_1628__self) != nullptr)) || (_1ad9bc7dc_Map(_1628__self) != nullptr)) || (_1ad9bb786_TypeEnum(_1628__self) != nullptr));;
	};
}



inline jule::Bool _1ad9ba730_GC(_1ad9b8596_TypeKind* _self_) {
	{
		_1ad9b8596_TypeKind* _1838__self = _self_;;
		jule::Ptr<_1ad9c16ae_Prim> _1844_prim = _1ad9bac4c_Prim(_1838__self);;
		if ((_1844_prim != nullptr)) {
			return (_1ad9c4e10_IsAny(_1844_prim) || _1ad9c4b79_IsStr(_1844_prim));;
		};
		return ((((_1ad9baed3_Sptr(_1838__self) != nullptr) || (_1ad9bbca3_Slc(_1838__self) != nullptr)) || (_1ad9bc556_Trait(_1838__self) != nullptr)) || (_1ad9bb786_TypeEnum(_1838__self) != nullptr));;
	};
}



inline jule::Bool _1ad9ba9b6_Variadicable(_1ad9b8596_TypeKind* _self_) {
	{
		_1ad9b8596_TypeKind* _1968__self = _self_;;
		return (_1ad9bbca3_Slc(_1968__self) != nullptr);;
	};
}



inline jule::Ptr<_1ad9c16ae_Prim> _1ad9bac4c_Prim(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)) {
			_case_begin_1beb184d7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad9c16ae_Prim>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1beb2c9b3:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb2c94c:;
	};
}



inline jule::Ptr<_1ad9c51da_Sptr> _1ad9baed3_Sptr(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data23)) {
			_case_begin_1beb2d651:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad9c51da_Sptr>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1beb2d8a4:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb2d83d:;
	};
}



inline jule::Ptr<_1ad9c89a2_Ptr> _1ad9bb269_Ptr(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data28)) {
			_case_begin_1beb2e3aa:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad9c89a2_Ptr>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1beb2e60d:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb2e597:;
	};
}



inline jule::Ptr<_1ad805658_Enum> _1ad9bb500_Enum(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data3)) {
			_case_begin_1beb30114:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad805658_Enum>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1beb30367:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb30301:;
	};
}



inline jule::Ptr<_1ad806d63_TypeEnum> _1ad9bb786_TypeEnum(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data4)) {
			_case_begin_1beb30d6d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad806d63_TypeEnum>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1beb310c1:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb3105a:;
	};
}



inline jule::Ptr<_1ad9c7ece_Arr> _1ad9bba1c_Arr(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data27)) {
			_case_begin_1beb31ac7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad9c7ece_Arr>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1beb31d2a:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb31cb4:;
	};
}



inline jule::Ptr<_1ad9c5bad_Slc> _1ad9bbca3_Slc(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data24)) {
			_case_begin_1beb32831:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad9c5bad_Slc>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1beb32a84:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb32a1d:;
	};
}



inline jule::Ptr<_1ad7ea84b_FnIns> _1ad9bc039_Fn(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1)) {
			_case_begin_1beb3358a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad7ea84b_FnIns>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1beb337dd:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb33777:;
	};
}



inline jule::Ptr<_1ad718857_StructIns> _1ad9bc2c0_Struct(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)) {
			_case_begin_1beb342e4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad718857_StructIns>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1beb34547:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb344d1:;
	};
}



inline jule::Ptr<_1ad802ea2_Trait> _1ad9bc556_Trait(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data2)) {
			_case_begin_1beb3504d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad802ea2_Trait>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1beb352a1:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb3523a:;
	};
}



inline jule::Ptr<_1ad9c7352_Map> _1ad9bc7dc_Map(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data26)) {
			_case_begin_1beb35ca7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad9c7352_Map>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1beb3600a:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb35e94:;
	};
}



inline jule::Ptr<_1ad9c67a2_Tuple> _1ad9bca73_Tup(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data25)) {
			_case_begin_1beb36a11:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad9c67a2_Tuple>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1beb36c64:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb36bed:;
	};
}



inline jule::Bool _1ad9bcd09_comptime(_1ad9b8596_TypeKind* _self_) {
	return (((((((((((((((_1ad9be37c_comptimeTypeInfos(_self_) != nullptr) || (_1ad9be613_comptimeTypeInfo(_self_) != nullptr)) || (_1ad9bd090_comptimeStructFields(_self_) != nullptr)) || (_1ad9bd326_comptimeStructField(_self_) != nullptr)) || (_1ad9bd5ac_comptimeEnumFields(_self_) != nullptr)) || (_1ad9bd843_comptimeEnumField(_self_) != nullptr)) || (_1ad9be899_comptimeStatics(_self_) != nullptr)) || (_1ad9beb30_comptimeStatic(_self_) != nullptr)) || (_1ad9bdac9_comptimeParams(_self_) != nullptr)) || (_1ad9bdd60_comptimeParam(_self_) != nullptr)) || (_1ad9bedb6_comptimeValue(_self_) != nullptr)) || (_1ad9c0900_comptimeFiles(_self_) != nullptr)) || (_1ad9c0669_comptimeFile(_self_) != nullptr)) || (_1ad9c014c_comptimeDecl(_self_) != nullptr)) || (_1ad9c03d3_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1ad885c7c_comptimeStructFields> _1ad9bd090_comptimeStructFields(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data7)) {
			_case_begin_1beb37957:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad885c7c_comptimeStructFields>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1beb3ba27:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb3b9b1:;
	};
}



inline jule::Ptr<_1ad8844d9_comptimeStructField> _1ad9bd326_comptimeStructField(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data6)) {
			_case_begin_1beb3c176:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad8844d9_comptimeStructField>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1beb3c3c9:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb3c363:;
	};
}



inline jule::Ptr<_1ad88bc3e_comptimeEnumFields> _1ad9bd5ac_comptimeEnumFields(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data11)) {
			_case_begin_1beb3cdd0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad88bc3e_comptimeEnumFields>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1beb3d133:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb3d0bc:;
	};
}



inline jule::Ptr<_1ad88a930_comptimeEnumField> _1ad9bd843_comptimeEnumField(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data10)) {
			_case_begin_1beb3db39:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad88a930_comptimeEnumField>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1beb3dd8c:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb3dd26:;
	};
}



inline jule::Ptr<_1ad8905a0_comptimeParams> _1ad9bdac9_comptimeParams(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data13)) {
			_case_begin_1beb3e893:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad8905a0_comptimeParams>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1beb3eae6:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb3ea80:;
	};
}



inline jule::Ptr<_1ad88d746_comptimeParam> _1ad9bdd60_comptimeParam(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data12)) {
			_case_begin_1beb405ec:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad88d746_comptimeParam>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1beb40850:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb407d9:;
	};
}



inline jule::Ptr<_1ad87db21_comptimeRange> _1ad9be0e6_comptimeRange(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data5)) {
			_case_begin_1beb41356:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad87db21_comptimeRange>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1beb415a9:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb41543:;
	};
}



inline jule::Ptr<_1ad891e0e_comptimeTypeInfos> _1ad9be37c_comptimeTypeInfos(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data14)) {
			_case_begin_1beb420b0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad891e0e_comptimeTypeInfos>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1beb42313:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb4229c:;
	};
}



inline jule::Ptr<_1ad89387d_comptimeTypeInfo> _1ad9be613_comptimeTypeInfo(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data15)) {
			_case_begin_1beb42d19:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad89387d_comptimeTypeInfo>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1beb4306c:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb43006:;
	};
}



inline jule::Ptr<_1ad888eb1_comptimeStatics> _1ad9be899_comptimeStatics(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data9)) {
			_case_begin_1beb43a73:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad888eb1_comptimeStatics>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1beb43cc6:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb43c60:;
	};
}



inline jule::Ptr<_1ad88770c_comptimeStatic> _1ad9beb30_comptimeStatic(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data8)) {
			_case_begin_1beb447cc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad88770c_comptimeStatic>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1beb44a30:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb449b9:;
	};
}



inline jule::Ptr<_1ad899983_comptimeValue> _1ad9bedb6_comptimeValue(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data16)) {
			_case_begin_1beb45536:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad899983_comptimeValue>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1beb45789:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb45723:;
	};
}



inline jule::Ptr<_1ad8a3074_comptimeDecl> _1ad9c014c_comptimeDecl(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data20)) {
			_case_begin_1beb46290:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad8a3074_comptimeDecl>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1beb464e3:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb4647c:;
	};
}



inline jule::Ptr<_1ad8a0c86_comptimeDecls> _1ad9c03d3_comptimeDecls(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data19)) {
			_case_begin_1beb46ee9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad8a0c86_comptimeDecls>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1beb4724c:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb471d6:;
	};
}



inline jule::Ptr<_1ad89e15d_comptimeFile> _1ad9c0669_comptimeFile(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data18)) {
			_case_begin_1beb47c53:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad89e15d_comptimeFile>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1beb47ea6:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb47e40:;
	};
}



inline jule::Ptr<_1ad89c6de_comptimeFiles> _1ad9c0900_comptimeFiles(_1ad9b8596_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data17)) {
			_case_begin_1beb489ac:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ad89c6de_comptimeFiles>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1beb48c10:;
			{
				return nullptr;;
			}
		}
		_match_end_1beb48b99:;
	};
}








inline jule::Bool _1ad9c0ca7_TypeSymbol_eq(_1ad9c0ca7_TypeSymbol *_self_, _1ad9c0ca7_TypeSymbol _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Bool _1ad9c115e_checked(_1ad9c0ca7_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}








inline jule::Bool _1ad9c16ae_Prim_eq(_1ad9c16ae_Prim *_self_, _1ad9c16ae_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1ad9c1a33_Str(_1ad9c16ae_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1ad9c1d74_Equal(jule::Ptr<_1ad9c16ae_Prim> _self_, jule::Ptr<_1ad9b8596_TypeKind> _51418_other) {
	jule::Ptr<_1ad9c16ae_Prim> _5153_prim = _1ad9bac4c_Prim(_51418_other.ptr());;
	if ((_5153_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5153_prim))._field_Kind);;
}



inline jule::Bool _1ad9c2319_IsConstraint(_1ad9c16ae_Prim* _self_) {
	return ((((!(_1ad9c4b79_IsStr(_self_))) && (!(_1ad9c4e10_IsAny(_self_)))) && (!(_1ad9c48e3_IsBool(_self_)))) && (!(_1ad87c69c_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1ad9c25a0_IsI8(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1ad9c2836_IsI16(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1ad9c2abc_IsI32(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1ad9c2d53_IsI64(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1ad9c30d9_IsU8(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1ad9c3370_IsU16(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1ad9c3606_IsU32(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1ad9c388c_IsU64(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1ad9c3b23_IsF32(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1ad9c3da9_IsF64(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1ad9c4140_IsInt(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1ad9c43c6_IsUint(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1ad9c465c_IsUintptr(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1ad9c48e3_IsBool(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1ad9c4b79_IsStr(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1ad9c4e10_IsAny(_1ad9c16ae_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1ad9c51da_Sptr_eq(_1ad9c51da_Sptr *_self_, _1ad9c51da_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1ad9c5592_Str(_1ad9c51da_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1ad9b8992_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ad9c58d3_Equal(jule::Ptr<_1ad9c51da_Sptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _59118_other) {
	jule::Ptr<_1ad9c51da_Sptr> _5923_sptr = _1ad9baed3_Sptr(_59118_other.ptr());;
	if ((_5923_sptr == nullptr)) {
		return false;;
	};
	return _1ad9b8cd3_Equal((*(_self_))._field_Elem, (*(_5923_sptr))._field_Elem);;
}








inline jule::Bool _1ad9c5bad_Slc_eq(_1ad9c5bad_Slc *_self_, _1ad9c5bad_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1ad9c6175_Str(_1ad9c5bad_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1ad9b8992_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ad9c64b6_Equal(jule::Ptr<_1ad9c5bad_Slc> _self_, jule::Ptr<_1ad9b8596_TypeKind> _61018_other) {
	jule::Ptr<_1ad9c5bad_Slc> _6113_slc = _1ad9bbca3_Slc(_61018_other.ptr());;
	if ((_6113_slc == nullptr)) {
		return false;;
	};
	return _1ad9b8cd3_Equal((*(_self_))._field_Elem, (*(_6113_slc))._field_Elem);;
}







inline jule::Str _1ad9c6b59_Str(_1ad9c67a2_Tuple* _self_) {
	_1dd0b6912_Builder _6277_s = static__1dd0b74d4_New(16LL);;
	_1dd0c118b_WriteByte(&_6277_s, '(');
	_1dd0c0dd3_WriteStr(&_6277_s, _1ad9b8992_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1beb59eda:;
		if (it != expr_end) {
			jule::Ptr<_1ad9b8596_TypeKind> *_63010_t = it;
			{
				_1dd0c118b_WriteByte(&_6277_s, ',');
				_1dd0c0dd3_WriteStr(&_6277_s, _1ad9b8992_Str((*(_63010_t)).ptr()));
			}
			_iter_next_1beb59eda:;
			++it;
			goto _iter_begin_1beb59eda;
		}
		_iter_end_1beb59eda:;
	};
	_1dd0c118b_WriteByte(&_6277_s, ')');
	return _1dd0c16ca_Str(&_6277_s);;
}



inline jule::Bool _1ad9c6e9a_Equal(jule::Ptr<_1ad9c67a2_Tuple> _self_, jule::Ptr<_1ad9b8596_TypeKind> _63918_other) {
	jule::Ptr<_1ad9c67a2_Tuple> _6403_tup = _1ad9bca73_Tup(_63918_other.ptr());;
	if ((_6403_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6403_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6477_i = 0LL;;
	for (; (_6477_i < (*_self_.alloc)._field_Types.len()); (_6477_i)++) {
		{
			if ((!(_1ad9b8cd3_Equal((*(_self_))._field_Types[_6477_i], (*(_6403_tup))._field_Types[_6477_i])))) {
				return false;;
			};
		}
	_iter_next_1beb5ce88:;
	}
	_iter_end_1beb5ce88:;;
	return true;;
}








inline jule::Bool _1ad9c7352_Map_eq(_1ad9c7352_Map *_self_, _1ad9c7352_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1ad9c7709_Str(_1ad9c7352_Map* _self_) {
	_1dd0b6912_Builder _6677_s = static__1dd0b74d4_New(16LL);;
	_1dd0c0dd3_WriteStr(&_6677_s, jule::Str::lit("map[", 4));
	_1dd0c0dd3_WriteStr(&_6677_s, _1ad9b8992_Str((*(_self_))._field_Key.ptr()));
	_1dd0c118b_WriteByte(&_6677_s, ']');
	_1dd0c0dd3_WriteStr(&_6677_s, _1ad9b8992_Str((*(_self_))._field_Val.ptr()));
	return _1dd0c16ca_Str(&_6677_s);;
}



inline jule::Bool _1ad9c7a4a_Equal(jule::Ptr<_1ad9c7352_Map> _self_, jule::Ptr<_1ad9b8596_TypeKind> _67618_other) {
	jule::Ptr<_1ad9c7352_Map> _6773_m = _1ad9bc7dc_Map(_67618_other.ptr());;
	if ((_6773_m == nullptr)) {
		return false;;
	};
	return (_1ad9b8cd3_Equal((*(_self_))._field_Key, (*(_6773_m))._field_Key) && _1ad9b8cd3_Equal((*_self_.alloc)._field_Val, (*(_6773_m))._field_Val));;
}








inline jule::Bool _1ad9c7ece_Arr_eq(_1ad9c7ece_Arr *_self_, _1ad9c7ece_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1ad9c8386_Str(_1ad9c7ece_Arr* _self_) {
	_1dd0b6912_Builder _6957_s = static__1dd0b74d4_New(16LL);;
	_1dd0c118b_WriteByte(&_6957_s, '[');
	_1dd0c0dd3_WriteStr(&_6957_s, _1ab15d6ab_Itoa((*(_self_))._field_N));
	_1dd0c118b_WriteByte(&_6957_s, ']');
	_1dd0c0dd3_WriteStr(&_6957_s, _1ad9b8992_Str((*(_self_))._field_Elem.ptr()));
	return _1dd0c16ca_Str(&_6957_s);;
}



inline jule::Bool _1ad9c86c7_Equal(jule::Ptr<_1ad9c7ece_Arr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _70418_other) {
	jule::Ptr<_1ad9c7ece_Arr> _7053_arr = _1ad9bba1c_Arr(_70418_other.ptr());;
	if ((_7053_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7053_arr))._field_N) && _1ad9b8cd3_Equal((*_self_.alloc)._field_Elem, (*(_7053_arr))._field_Elem));;
}








inline jule::Bool _1ad9c89a2_Ptr_eq(_1ad9c89a2_Ptr *_self_, _1ad9c89a2_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1ad9c8d59_Str(_1ad9c89a2_Ptr* _self_) {
	if (_1ad9c951e_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1ad9b8992_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1ad9c919a_Equal(jule::Ptr<_1ad9c89a2_Ptr> _self_, jule::Ptr<_1ad9b8596_TypeKind> _72818_other) {
	jule::Ptr<_1ad9c89a2_Ptr> _7293_ptr = _1ad9bb269_Ptr(_72818_other.ptr());;
	{
		
		if ((_7293_ptr == nullptr)) {
			_case_begin_1beb69082:;
			{
				return false;;
			}
		}
		else if (_1ad9c951e_IsUnsafe(_self_.ptr())) {
			_case_begin_1beb68933:;
			{
				return _1ad9c951e_IsUnsafe(_7293_ptr.ptr());;
			}
		}
		else if (_1ad9c951e_IsUnsafe(_7293_ptr.ptr())) {
			_case_begin_1beb68999:;
			{
				return _1ad9c951e_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1beb684b0:;
			{
				return _1ad9b8cd3_Equal((*(_self_))._field_Elem, (*(_7293_ptr))._field_Elem);;
			}
		}
		_match_end_1beb68438:;
	};
}



inline jule::Bool _1ad9c951e_IsUnsafe(_1ad9c89a2_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1ad9c99a3_referencer_eq(_1ad9c99a3_referencer *_self_, _1ad9c99a3_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1ad9cb224_pushErr(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6ceb70_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args) {
	_1ad912c71_pushErr((*(_self_))._field_s.ptr(), _82023_token, _82045_fmt, _82065_args);
}



inline void _1ad9cb422_allowBuiltin(_1ad9ca993_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1ad9cb620_disallowBuiltin(_1ad9ca993_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1beb6d98d_pushReference(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad718857_StructIns>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1be7d9d46_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1ad8d09db_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type64));
}

inline void _1beb71463_pushReference(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad802ea2_Trait>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1beb73168_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1ad8d09db_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type11));
}



inline void _1ad9cbb81_pushReferenceByKind(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _84240_k) {
	{
		
		if ((_1ad9bc2c0_Struct((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1beb6c5a2:;
			{
				jule::Ptr<_1ad718857_StructIns> _8458_t = _1ad9bc2c0_Struct((*(_84240_k)).ptr());;
				_1beb6d98d_pushReference(_self_, &(_8458_t));
			}
		}
		else if ((_1ad9bc556_Trait((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1beb6c64b:;
			{
				jule::Ptr<_1ad802ea2_Trait> _8488_t = _1ad9bc556_Trait((*(_84240_k)).ptr());;
				_1beb71463_pushReference(_self_, &(_8488_t));
			}
		}
		_match_end_1beb6c481:;
	};
}



inline void _1ad9cc09e_pushCycleError(_1ad9ca993_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1dd0b6912_Builder* _85353_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8553_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1beb75533, nullptr, nullptr);;
	jule::Str _8653_m = _1dd0c16ca_Str(_85353_message);;
	jule::Str _8663_def1Ident = _8553_getIdent(&(_85326_def1));;
	jule::Str _8673_def2Ident = _8553_getIdent(&(_85337_def2));;
	jule::Str _8683_refersTo = _1dd3568d8_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8663_def1Ident, &__jule_any_type5); (*it++) = jule::Any(_8673_def2Ident, &__jule_any_type5); __jule_collection; }));;
	_1dd0c0dd3_WriteStr(_85353_message, _1dd0a3613_Repeat(jule::Str::lit(" ", 1), 7LL));
	_1dd0c0dd3_WriteStr(_85353_message, _8683_refersTo);
	_1dd0c118b_WriteByte(_85353_message, '\n');
	_1dd0c0dd3_WriteStr(_85353_message, _8653_m);
}



inline jule::Bool _1ad9cc49a_checkCrossCycle(_1ad9ca993_typeChecker* _self_, jule::Any _87527_decl, _1dd0b6912_Builder* _87543_message) {
	{
		auto &_match_expr{ _87527_decl };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1beb79999:;
			{
				jule::Ptr<_1ad9b77a4_TypeAlias> _8784_ta = _87527_decl.unsafe_cast_ptr<_1ad9b77a4_TypeAlias>();;
				{
					auto expr = &((*(_8784_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1beb7a967:;
					if (it != expr_end) {
						jule::Any *_87911_d = it;
						{
							{
								
								if (((*(_87911_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1beb7b270:;
									{
										_1ad9cc09e_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								else if ((!(_1ad9cc49a_checkCrossCycle(_self_, (*(_87911_d)), _87543_message)))) {
									_case_begin_1beb7b308:;
									{
										_1ad9cc09e_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								_match_end_1beb7b160:;
							};
						}
						_iter_next_1beb7a967:;
						++it;
						goto _iter_begin_1beb7a967;
					}
					_iter_end_1beb7a967:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1beb79801:;
			{
				jule::Ptr<_1ad7159ec_Struct> _8904_s = _87527_decl.unsafe_cast_ptr<_1ad7159ec_Struct>();;
				{
					auto expr = &((*(_8904_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1beb7ccee:;
					if (it != expr_end) {
						jule::Ptr<_1ad7159ec_Struct> *_89111_d = it;
						{
							{
								
								if ((jule::Any((*(_89111_d)), &__jule_any_type9) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1beb7d618:;
									{
										_1ad9cc09e_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								else if ((!(_1ad9cc49a_checkCrossCycle(_self_, jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message)))) {
									_case_begin_1beb7d6a1:;
									{
										_1ad9cc09e_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								_match_end_1beb7d508:;
							};
						}
						_iter_next_1beb7ccee:;
						++it;
						goto _iter_begin_1beb7ccee;
					}
					_iter_end_1beb7ccee:;
				};
			}
		}
		_match_end_1beb79933:;
	};
	return true;;
}



inline jule::Bool _1ad9cc896_checkIllegalCycles(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90967_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1beb8094a:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1ad7159ec_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1beb8085c:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1ad9b77a4_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1beb7d1d9:;
	};
	if ((_90967_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1ad9cb224_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1dd0b6912_Builder _9327_message = static__1dd0b74d4_New(32LL);;
	if ((!(_1ad9cc49a_checkCrossCycle(_self_, _90967_decl, &(_9327_message))))) {
		jule::Str _9358_errMsg = _1dd0c16ca_Str(&_9327_message);;
		_1dd0c18c8_Clear(&_9327_message);
		_1ad9cc09e_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90967_decl, &(_9327_message));
		_9358_errMsg+=_1dd0c16ca_Str(&_9327_message);
		_1ad9cb224_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9358_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1beb8a5e2:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90967_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1beb83e26:;
			{
				{
					auto &_match_expr{ _90967_decl };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1beb8ada6:;
						{
							jule::Ptr<_1ad7159ec_Struct> _9519_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1ad7159ec_Struct>();;
							(*(_9519_s))._field_Depends=jule::append((*_9519_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7159ec_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90967_decl.cast_ptr<_1ad7159ec_Struct>(&__jule_any_type9); __jule_collection; }));
						}
					}
					_match_end_1beb8ac0d:;
				};
			}
		}
		_match_end_1beb8a559:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1ad9ccc92_fromTypeAlias(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _95930_decl, jule::Ptr<_1ad9b77a4_TypeAlias>* _95962_ta) {
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95962_ta))))._field_Public, (*((*(_95962_ta))))._field_Token)))) {
		_1ad9cb224_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_95962_ta))))._field_Used=true;
	if (((*((*(_95930_decl))))._field_Generics.len() > 0LL)) {
		_1ad9cb224_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1beb9152c:;
			if (it != expr_end) {
				jule::Ptr<_1ad9b77a4_TypeAlias> _97611_bg = *it;
				{
					if (((_97611_bg == (*(_95962_ta))) || (((*((*((*(_95962_ta))))._field_Kind))._field_Kind != nullptr) && _1ad9b8cd3_Equal((*((*((*(_95962_ta))))._field_Kind))._field_Kind, (*(*(_97611_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1beb9152c;
					};
				}
				_iter_next_1beb9152c:;
				++it;
				goto _iter_begin_1beb9152c;
			}
			_iter_end_1beb9152c:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1beb9383c:;
			if (it != expr_end) {
				jule::Ptr<_1ad9b77a4_TypeAlias> _98711_bg = *it;
				{
					if ((_98711_bg == (*(_95962_ta)))) {
						_1ad9cb224_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95962_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1beb94244:;
						if (it != expr_end) {
							jule::Ptr<_1ad9b77a4_TypeAlias> _99212_dg = *it;
							{
								if ((_98711_bg == _99212_dg)) {
									_1ad9cb224_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1beb94244:;
							++it;
							goto _iter_begin_1beb94244;
						}
						_iter_end_1beb94244:;
					};
				}
				_iter_next_1beb9383c:;
				++it;
				goto _iter_begin_1beb9383c;
			}
			_iter_end_1beb9383c:;
		};
	};
	if (((*(*((*(_95962_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		jule::Bool _10034_ok = _1ad91ede3_checkTypeAliasDeclKind((*(_self_))._field_s, _95962_ta, (*(_self_))._field_lookup);;
		if ((!(_10034_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_95962_ta))))._field_Kind))._field_Kind))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)) {
			_case_begin_1beb97841:;
			{
				jule::Bool _10114_ok = _1ad9cc896_checkIllegalCycles(_self_, _95930_decl, jule::Any((*((*(*((*((*(_95962_ta))))._field_Kind))._field_Kind.alloc)._field_Kind.cast_ptr<_1ad718857_StructIns>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)))._field_Decl, &__jule_any_type9));;
				if ((!(_10114_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1beb977b9:;
	};
	if (((*((*(_95962_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_95962_ta)); __jule_collection; }));
	};
	jule::Ptr<_1ad9b8596_TypeKind> _10237_tk = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_95962_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_95962_ta))))._field_Kind))._field_Kind.alloc)._field_Kind});;
	_1ad9cbb81_pushReferenceByKind(_self_, &(_10237_tk));
	if ((*((*(_95962_ta))))._field_Binded) {
		(*(_10237_tk))._field_BindIdent=(*((*(_95962_ta))))._field_Ident;
	} else {
		(*(_10237_tk))._field_BindIdent=(*(*((*((*(_95962_ta))))._field_Kind))._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_10237_tk, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data21);;
}



inline jule::Ptr<_1ad805658_Enum> _1ad9cd18d_fromEnum(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _103625_decl, jule::Ptr<_1ad805658_Enum>* _103657_e) {
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103657_e))))._field_Public, (*((*(_103657_e))))._field_Token)))) {
		_1ad9cb224_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103625_decl))))._field_Generics.len() > 0LL)) {
		_1ad9cb224_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_103657_e));;
}



inline jule::Ptr<_1ad806d63_TypeEnum> _1ad9cd589_fromTypeEnum(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _104829_decl, jule::Ptr<_1ad806d63_TypeEnum>* _104861_e) {
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104861_e))))._field_Public, (*((*(_104861_e))))._field_Token)))) {
		_1ad9cb224_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104829_decl))))._field_Generics.len() > 0LL)) {
		_1ad9cb224_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_104861_e));;
}



inline jule::Ptr<_1ad802ea2_Trait> _1ad9cd985_fromTrait(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _106026_decl, jule::Ptr<_1ad802ea2_Trait>* _106058_t) {
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106058_t))))._field_Public, (*((*(_106058_t))))._field_Token)))) {
		_1ad9cb224_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106026_decl))))._field_Generics.len() > 0LL)) {
		_1ad9cb224_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1beb71463_pushReference(_self_, _106058_t);
	return (*(_106058_t));;
}



inline jule::Bool _1ad9cdd81_checkStructIns(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad718857_StructIns>* _107335_ins, jule::Ptr<_1ad6ceb70_Token>* _107357_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_107335_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_107335_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_107335_ins))))._field_Decl, &__jule_any_type9) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1ad92b8d3_precheckStructIns((*(_self_))._field_s, _107335_ins, (*(_107357_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_107335_ins))))._field_Generics.len() > 0LL)) {
		_1ad92c3ea_checkStructInsOperators((*(_self_))._field_s, (*(_107335_ins)));
		_1ad92bb8b_checkStructIns((*(_self_))._field_s, _107335_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ad9ce139_appendUsedStructReference(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad7159ec_Struct>* _109446_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bebaa39d:;
			{
				jule::Ptr<_1ad7159ec_Struct> _11008_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1ad7159ec_Struct>();;
				if ((!(_1ad7174b0_IsUses(_11008_refS.ptr(), (*(_109446_s)))))) {
					(*_11008_refS.alloc)._field_Uses=jule::append((*_11008_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7159ec_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_109446_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1bebaa337:;
	};
}



inline jule::Ptr<_1ad718857_StructIns> _1ad9ce535_buildStructInstance(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _110740_decl, jule::Ptr<_1ad7159ec_Struct>* _110772_s) {
	jule::Ptr<_1ad9c99a3_referencer> _11097_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> _11117_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)) {
				_case_begin_1bebad3d4:;
				{
					jule::Ptr<_1ad8b860b_scopeChecker> _11189_sc = (*(_self_))._field_lookup.cast_ptr<_1ad8b860b_scopeChecker>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1);;
					jule::Ptr<_1ad8b860b_scopeChecker> _11199_hard = _1ad8bbc6e_getHardRoot(_11189_sc);;
					if ((((*((*(_11199_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_110772_s))))) {
						goto _match_end_1bebad36d;
					};
					jule::I64 _11235_n = ((*(*(_11199_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11199_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11235_n);
				}
			}
			_match_end_1bebad36d:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11337_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1ad718857_StructIns> _11377_ins = _1ad715e92_instance((*(_110772_s)));;
	(*(_11377_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>::alloc(0LL, (*((*(_110740_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad9b6de1_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_110740_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bebb36b4:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e51b3_TypeDecl> _113915_g = *it;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _11408_kind = _1ad9d323c_build(_self_, &((*(_113915_g))._field_Kind));;
				if ((_11408_kind == nullptr)) {
					return nullptr;;
				};
				(*_11377_ins.alloc)._field_Generics=jule::append((*_11377_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ad9b6de1_InsGeneric>(_1ad9b6de1_InsGeneric{._field_Kind=_11408_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1bebb36b4:;
			++it;
			goto _iter_begin_1bebb36b4;
		}
		_iter_end_1bebb36b4:;
	};
	(*(_self_))._field_lookup=_11337_lookup;
	(*(_self_))._field_bannedGenerics=_11117_bannedGenerics;
	(*(_self_))._field_referencer=_11097_referencer;
	return _11377_ins;;
}



inline jule::Ptr<_1ad718857_StructIns> _1ad9ce931_fromStructIns(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad718857_StructIns>* _115534_ins, jule::Ptr<_1ad6ceb70_Token> _115555_token) {
	jule::Ptr<_1ad718857_StructIns> _11567_existInstance = _1ad7162a0_appendInstance((*((*(_115534_ins))))._field_Decl.ptr(), _115534_ins);;
	if ((_11567_existInstance != nullptr)) {
		if ((!(_1ad91cbe3_checkConstraintsStruct((*(_self_))._field_s, _115534_ins, &(_115555_token), _11567_existInstance)))) {
			return nullptr;;
		};
		_1beb6d98d_pushReference(_self_, &(_11567_existInstance));
		return _11567_existInstance;;
	};
	if ((!(_1ad9cdd81_checkStructIns(_self_, _115534_ins, &(_115555_token))))) {
		return nullptr;;
	};
	_1beb6d98d_pushReference(_self_, _115534_ins);
	return (*(_115534_ins));;
}



inline jule::Ptr<_1ad718857_StructIns> _1ad9ced2c_fromStruct(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _117331_decl, jule::Ptr<_1ad7159ec_Struct>* _117363_s) {
	if ((!(_1ad9134d0_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_117363_s))))._field_Public, (*((*(_117363_s))))._field_Token)))) {
		_1ad9cb224_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_117331_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_117331_decl))))._field_Generics.len() > 0LL)) {
			_1ad9cb224_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1ad718857_StructIns>(_1ad718857_StructIns{._field_Checked=false, ._field_Decl=(*(_117363_s)), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1ad717ca7_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1ad7e778d_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Operators=_1ad714ad9_Operators{._field_Eq=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Add=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Div=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1ad7ea84b_FnIns>(nullptr)}});;
	};
	jule::Bool _11917_ok = _1ad9cc896_checkIllegalCycles(_self_, _117331_decl, jule::Any((*(_117363_s)), &__jule_any_type9));;
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	_1ad9ce139_appendUsedStructReference(_self_, _117363_s);
	jule::Ptr<_1ad718857_StructIns> _11977_ins = _1ad9ce535_buildStructInstance(_self_, _117331_decl, _117363_s);;
	if ((_11977_ins == nullptr)) {
		return nullptr;;
	};
	_11917_ok=_1ad9142a0_checkGenericQuantity((*(_self_))._field_s, (*((*(_11977_ins))._field_Decl))._field_Generics.len(), (*(_11977_ins))._field_Generics.len(), (*((*(_117331_decl))))._field_Token);
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	return _1ad9ce931_fromStructIns(_self_, &(_11977_ins), (*((*(_117331_decl))))._field_Token);;
}



inline jule::Trait _1ad9d016d_getDef(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl>* _121727_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bebbdb64:;
		if (it != expr_end) {
			jule::Ptr<_1ad7023bd_GenericDecl> _121810_g = *it;
			{
				if (((*(_121810_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					return jule::Trait(_1ad9d5a36_buildPrimType((*_121810_g.alloc)._field_Ident), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22);;
				};
			}
			_iter_next_1bebbdb64:;
			++it;
			goto _iter_begin_1bebbdb64;
		}
		_iter_end_1bebbdb64:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bebbdec7:;
		if (it != expr_end) {
			jule::Ptr<_1ad9b77a4_TypeAlias> _122415_g = *it;
			{
				if (((*(_122415_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					if (((*((*(_121727_decl))))._field_Generics.len() > 0LL)) {
						_1ad9cb224_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1ad718857_StructIns> _12309_st = _1ad9bc2c0_Struct((*((*_122415_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_12309_st != nullptr)) {
						jule::Bool _12326_ok = _1ad9cc896_checkIllegalCycles(_self_, _121727_decl, jule::Any((*_12309_st.alloc)._field_Decl, &__jule_any_type9));;
						if ((!(_12326_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_122415_g))._field_Kind))._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1bebbdec7:;
			++it;
			goto _iter_begin_1bebbdec7;
		}
		_iter_end_1bebbdec7:;
	};
	if ((!((*((*(_121727_decl))))._field_Binded))) {
		jule::Ptr<_1ad805658_Enum> _12428_e = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d84d9_FindEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12428_e != nullptr)) {
			return jule::Trait(_1ad9cd18d_fromEnum(_self_, _121727_decl, &(_12428_e)), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data3);;
		};
		jule::Ptr<_1ad806d63_TypeEnum> _12478_te = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d882a_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12478_te != nullptr)) {
			return jule::Trait(_1ad9cd589_fromTypeEnum(_self_, _121727_decl, &(_12478_te)), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data4);;
		};
		jule::Ptr<_1ad802ea2_Trait> _12528_t = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d8198_FindTrait((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12528_t != nullptr)) {
			return jule::Trait(_1ad9cd985_fromTrait(_self_, _121727_decl, &(_12528_t)), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1ad9cb224_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad7159ec_Struct> _12617_s = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d795b_FindStruct((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if ((_12617_s != nullptr)) {
		return jule::Trait(_1ad9ced2c_fromStruct(_self_, _121727_decl, &(_12617_s)), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0);;
	};
	jule::Ptr<_1ad9b77a4_TypeAlias> _12667_ta = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d7560_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if (((_12667_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12667_ta=_1adaa242c_findBuiltinTypeAlias((*((*(_121727_decl))))._field_Ident);
	};
	if ((_12667_ta != nullptr)) {
		return _1ad9ccc92_fromTypeAlias(_self_, _121727_decl, &(_12667_ta));;
	};
	_1ad9cb224_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1ad9d04ae_buildIdent(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e57bd_IdentTypeDecl> _127830_decl) {
	return _1ad9d016d_getDef(_self_, &(_127830_decl));;
}



inline jule::Trait _1ad9d0800_buildSubIdent(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e5a87_SubIdentTypeDecl> _128233_decl) {
	jule::Trait _12837_ident = _1ad9d04ae_buildIdent(_self_, (*(_128233_decl))._field_Idents[0LL]);;
	if ((_12837_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12837_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data4)) {
			_case_begin_1bebcbe80:;
			{
				goto _match_end_1bebcc4ad;
			}
		}
		else {
			_case_begin_1bebcc029:;
			{
				_1ad9cb224_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bebcc4ad:;
	};
	jule::Ptr<_1ad806d63_TypeEnum> _12947_t = _12837_ident.cast_ptr<_1ad806d63_TypeEnum>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1ad6e57bd_IdentTypeDecl>> _12957_idents = (*_128233_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12957_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bebcd1e5:;
		if (it != expr_end) {
			jule::I64 _12967_i = it - expr->begin();
			jule::Ptr<_1ad6e57bd_IdentTypeDecl> _129610_id = *it;
			{
				jule::Ptr<_1ad80678b_TypeEnumItem> _12978_item = _1ad807957_FindItem(_12947_t.ptr(), (*(_129610_id))._field_Ident);;
				if ((_12978_item == nullptr)) {
					_1ad9cb224_pushErr(_self_, (*_129610_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_12947_t.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_129610_id.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				if (((_12957_idents.len() - _12967_i) == 1LL)) {
					_1ad9cbb81_pushReferenceByKind(_self_, &((*((*(_12978_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_12978_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data21);;
				};
				_12947_t=_1ad9bb786_TypeEnum((*(*(_12978_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_12947_t == nullptr)) {
					_1ad9cb224_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1bebcd1e5:;
			++it;
			_12967_i++;
			goto _iter_begin_1bebcd1e5;
		}
		_iter_end_1bebcd1e5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad9c51da_Sptr> _1ad9d0b41_buildSptrFromType(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _131638_elem) {
	{
		
		if (((*(_131638_elem)) == nullptr)) {
			_case_begin_1bebd36d4:;
			{
				return nullptr;;
			}
		}
		else if ((_1ad9bc2c0_Struct((*(_131638_elem)).ptr()) != nullptr)) {
			_case_begin_1bebd375b:;
			{
				jule::Ptr<_1ad718857_StructIns> _13224_s = _1ad9bc2c0_Struct((*(_131638_elem)).ptr());;
				if ((((*(_13224_s))._field_Decl != nullptr) && (*(*(_13224_s))._field_Decl.alloc)._field_Binded)) {
					_1ad9cb224_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1ad9bba1c_Arr((*(_131638_elem)).ptr()) != nullptr) && (*(_1ad9bba1c_Arr((*(_131638_elem)).ptr())))._field_Auto)) {
			_case_begin_1bebd37c2:;
			{
				_1ad9cb224_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bebd2ccc:;
	};
	return jule::new_ptr<_1ad9c51da_Sptr>(_1ad9c51da_Sptr{._field_Elem=(*(_131638_elem))});;
}



inline jule::Ptr<_1ad9c51da_Sptr> _1ad9d0e82_buildSptr(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e625d_SptrTypeDecl> _133629_decl) {
	jule::Bool _13373_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13373_cycleRisk;
	});;
	jule::Ptr<_1ad9b8596_TypeKind> _13417_elem = _1ad9d357d_checkDecl(_self_, &((*(_133629_decl))._field_Elem));;
	return _1ad9d0b41_buildSptrFromType(_self_, &(_13417_elem));;
}



inline jule::Ptr<_1ad9c89a2_Ptr> _1ad9d12c3_buildPtrFromType(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _134537_elem) {
	{
		
		if (((*(_134537_elem)) == nullptr)) {
			_case_begin_1bebd8a6e:;
			{
				return nullptr;;
			}
		}
		else if (((_1ad9bba1c_Arr((*(_134537_elem)).ptr()) != nullptr) && (*(_1ad9bba1c_Arr((*(_134537_elem)).ptr())))._field_Auto)) {
			_case_begin_1bebd8b18:;
			{
				_1ad9cb224_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1ad9c89a2_Ptr>(_1ad9c89a2_Ptr{._field_Elem=jule::Ptr<_1ad9b8596_TypeKind>(nullptr)});;
			}
		}
		_match_end_1bebd894d:;
	};
	return jule::new_ptr<_1ad9c89a2_Ptr>(_1ad9c89a2_Ptr{._field_Elem=(*(_134537_elem))});;
}



inline jule::Ptr<_1ad9c89a2_Ptr> _1ad9d1614_buildPtr(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e6bdc_PtrTypeDecl> _136028_decl) {
	jule::Bool _13613_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13613_cycleRisk;
	});;
	jule::Ptr<_1ad9b8596_TypeKind> _136511_elem = nullptr;;
	if ((!(_1ad6e7083_IsUnsafe(_136028_decl.ptr())))) {
		_136511_elem=_1ad9d357d_checkDecl(_self_, &((*_136028_decl.alloc)._field_Elem));
		return _1ad9d12c3_buildPtrFromType(_self_, &(_136511_elem));;
	};
	return jule::new_ptr<_1ad9c89a2_Ptr>(_1ad9c89a2_Ptr{._field_Elem=_136511_elem});;
}



inline jule::Ptr<_1ad9c5bad_Slc> _1ad9d1955_buildSlc(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e65e3_SlcTypeDecl> _137728_decl) {
	jule::Bool _13783_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13783_cycleRisk;
	});;
	jule::Ptr<_1ad9b8596_TypeKind> _13827_elem = _1ad9d357d_checkDecl(_self_, &((*(_137728_decl))._field_Elem));;
	{
		
		if ((_13827_elem == nullptr)) {
			_case_begin_1bebddd4e:;
			{
				return nullptr;;
			}
		}
		else if (((_1ad9bba1c_Arr(_13827_elem.ptr()) != nullptr) && (*(_1ad9bba1c_Arr(_13827_elem)))._field_Auto)) {
			_case_begin_1bebdddb5:;
			{
				_1ad9cb224_pushErr(_self_, (*((*_137728_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bebddcd8:;
	};
	return jule::new_ptr<_1ad9c5bad_Slc>(_1ad9c5bad_Slc{._field_Elem=_13827_elem});;
}



inline jule::Ptr<_1ad9c7ece_Arr> _1ad9d1c96_buildArr(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e747e_ArrTypeDecl> _139828_decl) {
	jule::I64 _13997_n = 0LL;;
	if ((!(_1ad6e7825_AutoSized(_139828_decl.ptr())))) {
		jule::Ptr<_1ad985b90_Data> _14028_size = _1ad9a672c_evalExpr(_1ad919b46_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_139828_decl.alloc)._field_Size);;
		if ((_14028_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1ad9865ca_IsConst(_14028_size.ptr())))) {
			_1ad9cb224_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1ad9bac4c_Prim((*(_14028_size))._field_Kind.ptr()) == nullptr) || (!(_1ad87c0c5_IsInt((*(_1ad9bac4c_Prim((*(_14028_size))._field_Kind)))._field_Kind))))) {
			_1ad9cb224_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13997_n=static_cast<jule::I64>(_1ad7d11e4_AsI64((*(_14028_size))._field_Constant.ptr()));
		if ((_13997_n < 0LL)) {
			_1ad9cb224_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14205_max = _1ad87a03a_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1ad873110_BitSize != 64LL) && (static_cast<jule::I64>(_13997_n) > _14205_max))) {
				_1ad9cb224_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b47b2_constoa(&((*(_14028_size))._field_Constant)), &__jule_any_type5); (*it++) = jule::Any(_1ab15d3e2_FmtInt(_14205_max, 10LL), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1ad9b8596_TypeKind> _14297_elem = _1ad9d357d_checkDecl(_self_, &((*_139828_decl.alloc)._field_Elem));;
	{
		
		if ((_14297_elem == nullptr)) {
			_case_begin_1bebe90ce:;
			{
				return nullptr;;
			}
		}
		else if (((_1ad9bba1c_Arr(_14297_elem.ptr()) != nullptr) && (*(_1ad9bba1c_Arr(_14297_elem)))._field_Auto)) {
			_case_begin_1bebe9178:;
			{
				_1ad9cb224_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bebe9057:;
	};
	return jule::new_ptr<_1ad9c7ece_Arr>(_1ad9c7ece_Arr{._field_Auto=_1ad6e7825_AutoSized(_139828_decl), ._field_N=_13997_n, ._field_Elem=_14297_elem});;
}



inline jule::Ptr<_1ad9c7352_Map> _1ad9d20d7_buildMap(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e7bcc_MapTypeDecl> _144728_decl) {
	jule::Bool _14483_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14483_cycleRisk;
	});;
	jule::Ptr<_1ad9b8596_TypeKind> _14527_key = _1ad9d357d_checkDecl(_self_, &((*(_144728_decl))._field_Key));;
	if ((_14527_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad9b8596_TypeKind> _14577_val = _1ad9d357d_checkDecl(_self_, &((*_144728_decl.alloc)._field_Val));;
	if ((_14577_val == nullptr)) {
		return nullptr;;
	};
	if ((_1ad9bb500_Enum(_14577_val.ptr()) != nullptr)) {
		_1ad9cb224_pushErr(_self_, (*((*_144728_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1ad7159ec_Struct> _14668_s = _1ab307338_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1ad9ce139_appendUsedStructReference(_self_, &(_14668_s));
		jule::Ptr<_1ad718857_StructIns> _14688_ins = _1ad715e92_instance(_14668_s);;
		(*(_14688_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ad9b6de1_InsGeneric>(_1ad9b6de1_InsGeneric{._field_Kind=_14527_key, ._field_Constraint=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr)}); (*it++) = jule::new_ptr<_1ad9b6de1_InsGeneric>(_1ad9b6de1_InsGeneric{._field_Kind=_14577_val, ._field_Constraint=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr)}); __jule_collection; });
		_1ad9ce931_fromStructIns(_self_, &(_14688_ins), (*((*_144728_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1ad9c7352_Map>(_1ad9c7352_Map{._field_Key=_14527_key, ._field_Val=_14577_val});;
}



inline jule::Ptr<_1ad9c67a2_Tuple> _1ad9d2428_buildTuple(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e68e0_TupleTypeDecl> _147930_decl) {
	jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _14807_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(0LL, (*(_147930_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad9b8596_TypeKind>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_147930_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec03380:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e51b3_TypeDecl> _148115_t = *it;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _14828_kind = _1ad9d357d_checkDecl(_self_, &(_148115_t));;
				if ((_14828_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> &__jule_push_dest = _14807_types; __jule_push_dest.push(_14828_kind); };
			}
			_iter_next_1bec03380:;
			++it;
			goto _iter_begin_1bec03380;
		}
		_iter_end_1bec03380:;
	};
	return jule::new_ptr<_1ad9c67a2_Tuple>(_1ad9c67a2_Tuple{._field_Types=_14807_types});;
}



inline jule::Bool _1ad9d2769_checkFuncTypes(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad7ea84b_FnIns>* _149235_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_149235_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec04dba:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e96e6_ParamIns> _149315_p = *it;
			{
				(*(_149315_p))._field_Kind=_1ad9d323c_build(_self_, &((*((*((*((*_149315_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_149315_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1ad91d793_checkFnParamKind((*(_self_))._field_s, &(_149315_p));
			}
			_iter_next_1bec04dba:;
			++it;
			goto _iter_begin_1bec04dba;
		}
		_iter_end_1bec04dba:;
	};
	if ((!(_1ad7e7c44_IsVoid((*((*(_149235_f))))._field_Decl.ptr())))) {
		(*((*(_149235_f))))._field_Result=_1ad9d323c_build(_self_, &((*(*((*((*((*((*(_149235_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_149235_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ad7ea84b_FnIns> _1ad9d2aaa_buildFunc(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad706d73_FnDecl> _151029_decl) {
	jule::Bool _15113_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15113_cycleRisk;
	});;
	if (((*(_151029_decl))._field_Generics.len() > 0LL)) {
		_1ad9cb224_pushErr(_self_, (*_151029_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad7e778d_Fn> _15207_f = _1ad8d315e_buildFunc(_151029_decl);;
	jule::I64 _15223_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1ad927a88_checkAnonFuncDecl((*(_self_))._field_s, &(_15207_f));
	if ((_15223_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _15287_ins = _1ad7e8c9a_instanceForce(_15207_f);;
	(*(_15287_ins))._field_Anon=true;
	(*_15287_ins.alloc)._field_AsAnon=true;
	jule::Bool _15323_ok = _1ad9d2769_checkFuncTypes(_self_, &(_15287_ins));;
	if ((!(_15323_ok))) {
		return nullptr;;
	};
	return _15287_ins;;
}



inline jule::Trait _1ad9d2deb_buildNamespace(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e5e61_NamespaceTypeDecl> _154034_ns) {
	jule::Ptr<_1ad8e1bea_ImportInfo> _15417_imp = ((_1ad9d897e_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1ad9d6c68_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>>((void*)__jule_anon_1bec0e04a, jule::Ptr<__jule_anon_1bec0e04a_ctx>::make(__jule_anon_1bec0e04a_ctx{._154034_ns=_154034_ns}).as<jule::Uintptr>(), __jule_anon_1bec0e04a_ctx_handler));;
	if (((_15417_imp == nullptr) || (!(_1ad8e4192_isLookupable(_15417_imp.ptr()))))) {
		_1ad9cb224_pushErr(_self_, (*_154034_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_154034_ns))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1ad9cb620_disallowBuiltin(_self_);
	jule::Trait _15517_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15417_imp, (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data2);
	jule::Ptr<_1ad9b8596_TypeKind> _15537_kind = _1ad9d357d_checkDecl(_self_, &((*_154034_ns.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15517_lookup;
	_1ad9cb422_allowBuiltin(_self_);
	return jule::Trait(_15537_kind, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data21);;
}



inline jule::Ptr<_1ad9b8596_TypeKind> _1ad9d323c_build(_1ad9ca993_typeChecker* _self_, jule::Any* _155926_declKind) {
	jule::Trait _156011_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155926_declKind)) };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1bec13439:;
			{
				jule::Trait _15638_t = _1ad9d04ae_buildIdent(_self_, (*(_155926_declKind)).cast_ptr<_1ad6e57bd_IdentTypeDecl>(&__jule_any_type77));;
				if ((_15638_t != nullptr)) {
					_156011_kind=_15638_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bec1410a:;
			{
				jule::Trait _15688_t = _1ad9d0800_buildSubIdent(_self_, (*(_155926_declKind)).cast_ptr<_1ad6e5a87_SubIdentTypeDecl>(&__jule_any_type89));;
				if ((_15688_t != nullptr)) {
					_156011_kind=_15688_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bec1358d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ad9c51da_Sptr> _15748_t = _1ad9d0e82_buildSptr(_self_, (*(_155926_declKind)).cast_ptr<_1ad6e625d_SptrTypeDecl>(&__jule_any_type74));;
				if ((_15748_t != nullptr)) {
					_156011_kind=jule::Trait(_15748_t, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bec13604:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ad9c89a2_Ptr> _15808_t = _1ad9d1614_buildPtr(_self_, (*(_155926_declKind)).cast_ptr<_1ad6e6bdc_PtrTypeDecl>(&__jule_any_type73));;
				if ((_15808_t != nullptr)) {
					_156011_kind=jule::Trait(_15808_t, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bec1366a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ad9c5bad_Slc> _15868_t = _1ad9d1955_buildSlc(_self_, (*(_155926_declKind)).cast_ptr<_1ad6e65e3_SlcTypeDecl>(&__jule_any_type72));;
				if ((_15868_t != nullptr)) {
					_156011_kind=jule::Trait(_15868_t, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bec136d1:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ad9c7ece_Arr> _15928_t = _1ad9d1c96_buildArr(_self_, (*(_155926_declKind)).cast_ptr<_1ad6e747e_ArrTypeDecl>(&__jule_any_type71));;
				if ((_15928_t != nullptr)) {
					_156011_kind=jule::Trait(_15928_t, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1bec13747:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ad9c7352_Map> _15988_t = _1ad9d20d7_buildMap(_self_, (*(_155926_declKind)).cast_ptr<_1ad6e7bcc_MapTypeDecl>(&__jule_any_type75));;
				if ((_15988_t != nullptr)) {
					_156011_kind=jule::Trait(_15988_t, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bec137ad:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ad9c67a2_Tuple> _16048_t = _1ad9d2428_buildTuple(_self_, (*(_155926_declKind)).cast_ptr<_1ad6e68e0_TupleTypeDecl>(&__jule_any_type76));;
				if ((_16048_t != nullptr)) {
					_156011_kind=jule::Trait(_16048_t, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1bec1422b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1ad7ea84b_FnIns> _16108_t = _1ad9d2aaa_buildFunc(_self_, (*(_155926_declKind)).cast_ptr<_1ad706d73_FnDecl>(&__jule_any_type67));;
				if ((_16108_t != nullptr)) {
					_156011_kind=jule::Trait(_16108_t, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1bec14292:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16168_t = _1ad9d2deb_buildNamespace(_self_, (*(_155926_declKind)).cast_ptr<_1ad6e5e61_NamespaceTypeDecl>(&__jule_any_type93));;
				if ((_16168_t != nullptr)) {
					_156011_kind=_16168_t;
				};
			}
		}
		else {
			_case_begin_1bec13527:;
			{
				_1ad9cb224_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bec134b1:;
	};
	if ((_156011_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _156011_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data21)) {
			_case_begin_1bec22635:;
			{
				return _156011_kind.cast_ptr<_1ad9b8596_TypeKind>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1bec1de28:;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _16318_tk = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_156011_kind});;
				{
					auto &_match_expr{ _156011_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)) {
						_case_begin_1bec209da:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16318_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)) {
						_case_begin_1bec20864:;
						{
							jule::Ptr<_1ad718857_StructIns> _16385_s = _156011_kind.cast_ptr<_1ad718857_StructIns>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0);;
							if ((((*(_16385_s))._field_Decl != nullptr) && (*(*(_16385_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16318_tk))._field_BindIdent=(*(*(_16385_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1bec20974:;
				};
				return _16318_tk;;
			}
		}
		_match_end_1bec1ec2b:;
	};
}



inline jule::Ptr<_1ad9b8596_TypeKind> _1ad9d357d_checkDecl(_1ad9ca993_typeChecker* _self_, jule::Ptr<_1ad6e51b3_TypeDecl>* _164730_decl) {
	jule::Ptr<_1ad6ceb70_Token> _16497_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_164730_decl))))._field_Token;
	jule::Ptr<_1ad9b8596_TypeKind> _16527_kind = _1ad9d323c_build(_self_, &((*((*(_164730_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16497_errorToken;
	return _16527_kind;;
}








inline jule::Bool _1ad9d3a56_identTypeLookup_eq(_1ad9d3a56_identTypeLookup *_self_, _1ad9d3a56_identTypeLookup _other_) { return true; }

inline jule::Bool static__1ad9d3ec9_prim(jule::Str* _167418_ident, jule::Ptr<_1ad9c16ae_Prim> _167430_t) {
	return ((*(_167430_t))._field_Kind == (*(_167418_ident)));;
}



inline jule::Bool static__1ad9d434d_exist(jule::Str* _167819_ident, jule::Ptr<_1ad9b8596_TypeKind>* _167836_k) {
	{
		
		if ((_1ad9bac4c_Prim((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1bec27481:;
			{
				return static__1ad9d3ec9_prim(_167819_ident, _1ad9bac4c_Prim((*(_167836_k)).ptr()));;
			}
		}
		else if ((_1ad9baed3_Sptr((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1bec27508:;
			{
				jule::Ptr<_1ad9c51da_Sptr> _16838_sptr = _1ad9baed3_Sptr((*(_167836_k)).ptr());;
				return static__1ad9d434d_exist(_167819_ident, &((*(_16838_sptr))._field_Elem));;
			}
		}
		else if ((_1ad9bb269_Ptr((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1bec27580:;
			{
				jule::Ptr<_1ad9c89a2_Ptr> _16868_ptr = _1ad9bb269_Ptr((*(_167836_k)).ptr());;
				return static__1ad9d434d_exist(_167819_ident, &((*(_16868_ptr))._field_Elem));;
			}
		}
		else if ((_1ad9bbca3_Slc((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1bec27607:;
			{
				jule::Ptr<_1ad9c5bad_Slc> _16898_slc = _1ad9bbca3_Slc((*(_167836_k)).ptr());;
				return static__1ad9d434d_exist(_167819_ident, &((*(_16898_slc))._field_Elem));;
			}
		}
		else if ((_1ad9bba1c_Arr((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1bec277d3:;
			{
				jule::Ptr<_1ad9c7ece_Arr> _16928_arr = _1ad9bba1c_Arr((*(_167836_k)).ptr());;
				return static__1ad9d434d_exist(_167819_ident, &((*(_16928_arr))._field_Elem));;
			}
		}
		else if ((_1ad9bc7dc_Map((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1bec27849:;
			{
				jule::Ptr<_1ad9c7352_Map> _16958_m = _1ad9bc7dc_Map((*(_167836_k)).ptr());;
				return (static__1ad9d434d_exist(_167819_ident, &((*(_16958_m))._field_Key)) || static__1ad9d434d_exist(_167819_ident, &((*_16958_m.alloc)._field_Val)));;
			}
		}
		else if ((_1ad9bc2c0_Struct((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1bec278b0:;
			{
				jule::Ptr<_1ad718857_StructIns> _16998_s = _1ad9bc2c0_Struct((*(_167836_k)).ptr());;
				{
					auto expr = &((*(_16998_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bec2ea0a:;
					if (it != expr_end) {
						jule::Ptr<_1ad9b6de1_InsGeneric> _170016_g = *it;
						{
							if (static__1ad9d434d_exist(_167819_ident, &((*(_170016_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1bec2ea0a:;
						++it;
						goto _iter_begin_1bec2ea0a;
					}
					_iter_end_1bec2ea0a:;
				};
				return false;;
			}
		}
		else if ((_1ad9bc039_Fn((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1bec27926:;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _17078_f = _1ad9bc039_Fn((*(_167836_k)).ptr());;
				{
					auto expr = &((*(_17078_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bec31534:;
					if (it != expr_end) {
						jule::Ptr<_1ad7e96e6_ParamIns> _170816_p = *it;
						{
							if (_1ad7e6418_IsSelf((*(_170816_p))._field_Decl.ptr())) {
								goto _iter_next_1bec31534;
							};
							if (static__1ad9d434d_exist(_167819_ident, &((*_170816_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1bec31534:;
						++it;
						goto _iter_begin_1bec31534;
					}
					_iter_end_1bec31534:;
				};
				if (((*_17078_f.alloc)._field_Result != nullptr)) {
					return static__1ad9d434d_exist(_167819_ident, &((*_17078_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1ad9bca73_Tup((*(_167836_k)).ptr()) != nullptr)) {
			_case_begin_1bec2799d:;
			{
				jule::Ptr<_1ad9c67a2_Tuple> _17218_tup = _1ad9bca73_Tup((*(_167836_k)).ptr());;
				{
					auto expr = &((*(_17218_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bec33da5:;
					if (it != expr_end) {
						jule::Ptr<_1ad9b8596_TypeKind> _172216_t = *it;
						{
							if (static__1ad9d434d_exist(_167819_ident, &(_172216_t))) {
								return true;;
							};
						}
						_iter_next_1bec33da5:;
						++it;
						goto _iter_begin_1bec33da5;
					}
					_iter_end_1bec33da5:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1bec27360:;
			{
				return false;;
			}
		}
		_match_end_1bec27250:;
	};
}















inline void _1bb06841e_stop(_1bb067c6a_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1bb0686a5_stopped(_1bb067c6a_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1bb06893b_finished(_1bb067c6a_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1bb068bc2_isLastSt(_1bb067c6a_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1bb069035_pushErr(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1ad6ceb70_Token> _15323_token, jule::Str _15345_fmt) {
	_1bb086948_pushErr((*(_self_))._field_p.ptr(), _15323_token, _15345_fmt, jule::Slice<jule::Any>());
}



inline void _1bb069398_pushSuggestion(_1bb067c6a_scopeParser* _self_, jule::Str _15830_fmt, jule::Slice<jule::Any> _15850_args) {
	_1bb086cab_pushSuggestion((*(_self_))._field_p.ptr(), _15830_fmt, _15850_args);
}



inline void _1bb069651_insertAsNext(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _16233_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1bb0673c9_stmt>(_1bb0673c9_stmt{._field_tokens=(*(_16233_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1bb0673c9_stmt> _1bb0698d7_next(_1bb067c6a_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1ad7051d4_ScopeTree> _1bb069cd3_buildScope(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _17231_tokens, jule::Ptr<_1ad6ceb70_Token> _17260_end) {
	jule::Ptr<_1ad7051d4_ScopeTree> _1737_s = _1bb066164_newScope();;
	(*(_1737_s))._field_Parent=(*(_self_))._field_s;
	(*_1737_s.alloc)._field_End=_17260_end;
	_1bb067c6a_scopeParser _1767_ssp = _1bb067c6a_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1bb0673c9_stmt>>(nullptr), ._field_pos=0};;
	_1bb074b56_build(&_1767_ssp, _17231_tokens, &(_1737_s));
	return _1737_s;;
}



inline jule::Ptr<_1ad70802d_VarDecl> _1bb06a124_buildVarSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _18331_tokens) {
	jule::Ptr<_1ad70802d_VarDecl> _1847_v = _1bb08971a_buildVar((*(_self_))._field_p, (*(_18331_tokens)));;
	if ((_1847_v != nullptr)) {
		(*_1847_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _1847_v;;
}



inline jule::Ptr<_1ad708407_RetSt> _1bb06a465_buildRetSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _19130_tokens) {
	jule::Ptr<_1ad708407_RetSt> _1927_st = jule::new_ptr<_1ad708407_RetSt>(_1ad708407_RetSt{._field_Token=_19130_tokens[0LL], ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
	if ((_19130_tokens.len() > 1LL)) {
		(_19130_tokens).mut_slice(1LL);;
		(*(_1927_st))._field_Expr=_1bb0870ec_buildExpr((*(_self_))._field_p, &(_19130_tokens));
	};
	return _1927_st;;
}



inline jule::Ptr<_1ad708b77_Iter> _1bb06a7a6_buildWhileNextIter(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1bb0673c9_stmt>* _20239_s) {
	jule::Ptr<_1ad708b77_Iter> _2037_it = jule::new_ptr<_1ad708b77_Iter>(_1ad708b77_Iter{._field_Comptime=false, ._field_Token=(*((*(_20239_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _2067_tokens = (*((*(_20239_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1ad7094a2_WhileKind> _2077_kind = jule::new_ptr<_1ad7094a2_WhileKind>(_1ad7094a2_WhileKind{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1ad6ceb70_Token>(nullptr)});;
	if ((_2067_tokens.len() > 0LL)) {
		(*_2077_kind.alloc)._field_Expr=_1bb0870ec_buildExpr((*(_self_))._field_p, &(_2067_tokens));
	};
	if (_1bb068bc2_isLastSt(_self_)) {
		_1bb069035_pushErr(_self_, (*(_2037_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2067_tokens=(*(_1bb0698d7_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _2197_stTokens = _1bb08139e_getBlockExpr(&(_2067_tokens));;
	if ((_2197_stTokens.len() > 0LL)) {
		jule::Ptr<_1bb0673c9_stmt> _2218_stmt = jule::new_ptr<_1bb0673c9_stmt>(_1bb0673c9_stmt{._field_tokens=_2197_stTokens, ._field_terminated=(*((*(_20239_s))))._field_terminated});;
		(*_2077_kind.alloc)._field_NextToken=_2197_stTokens[0LL];
		(*_2077_kind.alloc)._field_Next=_1bb0747e3_buildSt(_self_, &(_2218_stmt));
	};
	jule::I64 _2297_i = _2197_stTokens.len();;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _2307_blockTokens = _1bb084616_range(&(_2297_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2067_tokens));;
	if ((_2307_blockTokens == nullptr)) {
		_1bb06841e_stop(_self_);
		_1bb069035_pushErr(_self_, (*_2037_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1bb069398_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2297_i < _2067_tokens.len())) {
		_1bb069035_pushErr(_self_, _2067_tokens[_2297_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_2037_it.alloc)._field_Scope=_1bb069cd3_buildScope(_self_, &(_2307_blockTokens), _2067_tokens[(_2297_i - 1LL)]);
	(*_2037_it.alloc)._field_Kind=jule::Any(_2077_kind, &__jule_any_type33);
	return _2037_it;;
}



inline jule::Ptr<_1ad7094a2_WhileKind> _1bb06aae7_buildWhileIterKind(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _24739_tokens) {
	return jule::new_ptr<_1ad7094a2_WhileKind>(_1ad7094a2_WhileKind{._field_Expr=_1bb0870ec_buildExpr((*(_self_))._field_p, _24739_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1ad6ceb70_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1bb06ae38_getRangeKindKeysTokens(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _25343_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _2547_vars;
	jule::Slice<_1dd356476_Log> _25413_errs;
	({
		__jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb084d86_parts(_25343_toks, static_cast<jule::U64>(5LLU), true);
		_2547_vars = __jule_assign_result.__jule_result_arg0;
		_25413_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_25413_errs);
	return _2547_vars;;
}



inline jule::Ptr<_1ad70802d_VarDecl> _1bb06b279_buildRangeKindKey(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _25938_tokens) {
	if (((*(_25938_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ad70802d_VarDecl> _2637_key = jule::new_ptr<_1ad70802d_VarDecl>(_1ad70802d_VarDecl{._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_Token=(*(_25938_tokens))[0LL], ._field_Setter=(*(_25938_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
	if (((*((*(_2637_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2637_key.alloc)._field_Mutable=true;
		if (((*(_25938_tokens)).len() == 1LL)) {
			_1bb069035_pushErr(_self_, (*_2637_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2637_key.alloc)._field_Token=(*(_25938_tokens))[1LL];
	} else if (((*(_25938_tokens)).len() > 1LL)) {
		_1bb069035_pushErr(_self_, (*(_25938_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2637_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb069035_pushErr(_self_, (*_2637_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bb069398_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2637_key.alloc)._field_Ident=(*(*(_2637_key))._field_Token.alloc)._field_Kind;
	return _2637_key;;
}



inline jule::Slice<jule::Ptr<_1ad70802d_VarDecl>> _1bb06b5ba_buildRangeKindKeys(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>>* _28539_parts) {
	jule::Slice<jule::Ptr<_1ad70802d_VarDecl>> _28611_keys = nullptr;;
	{
		auto expr = _28539_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee0be18:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _28715_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1ad70802d_VarDecl>> &__jule_push_dest = _28611_keys; __jule_push_dest.push(_1bb06b279_buildRangeKindKey(_self_, &(_28715_tokens))); };
			}
			_iter_next_1bee0be18:;
			++it;
			goto _iter_begin_1bee0be18;
		}
		_iter_end_1bee0be18:;
	};
	return _28611_keys;;
}



inline void _1bb06b92d_setupRangeKindKeysPlain(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1ad709da9_RangeKind>* _29344_rng, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _29371_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _2947_keyTokens = _1bb06ae38_getRangeKindKeysTokens(_self_, _29371_tokens);;
	if ((_2947_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_2947_keyTokens.len() > 2LL)) {
		_1bb069035_pushErr(_self_, (*((*(_29344_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1ad70802d_VarDecl>> _3017_keys = _1bb06b5ba_buildRangeKindKeys(_self_, &(_2947_keyTokens));;
	(*((*(_29344_rng))))._field_KeyA=_3017_keys[0LL];
	if ((_3017_keys.len() > 1LL)) {
		(*((*(_29344_rng))))._field_KeyB=_3017_keys[1LL];
	};
}



inline void _1bb06bc91_setupRangeKindKeysExplicit(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1ad709da9_RangeKind>* _30847_rng, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _30874_tokens) {
	jule::I64 _3097_i = 0LL;;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _3107_rang = _1bb084616_range(&(_3097_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _30874_tokens);;
	if ((_3097_i < (*(_30874_tokens)).len())) {
		_1bb069035_pushErr(_self_, (*((*(_30847_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1bb06b92d_setupRangeKindKeysPlain(_self_, _30847_rng, &(_3107_rang));
}



inline void _1bb06c104_setupRangeKindKeys(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1ad709da9_RangeKind>* _31739_rng, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _31766_tokens) {
	if (((*((*(_31766_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1bb06bc91_setupRangeKindKeysExplicit(_self_, _31739_rng, _31766_tokens);
		return;;
	};
	_1bb06b92d_setupRangeKindKeysPlain(_self_, _31739_rng, _31766_tokens);
}



inline jule::Ptr<_1ad709da9_RangeKind> _1bb06c5aa_buildRangeIterKind(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _32539_varTokens, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _3268_exprTokens, jule::Ptr<_1ad6ceb70_Token>* _32642_inToken) {
	jule::Ptr<_1ad709da9_RangeKind> _3277_rng = jule::new_ptr<_1ad709da9_RangeKind>(_1ad709da9_RangeKind{._field_InToken=(*(_32642_inToken)), ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1ad70802d_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1ad70802d_VarDecl>(nullptr)});;
	if (((*(_3268_exprTokens)).len() == 0LL)) {
		_1bb069035_pushErr(_self_, (*(_3277_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3277_rng;;
	};
	(*_3277_rng.alloc)._field_Expr=_1bb0870ec_buildExpr((*(_self_))._field_p, _3268_exprTokens);
	if (((*(_32539_varTokens)).len() > 0LL)) {
		_1bb06c104_setupRangeKindKeys(_self_, &(_3277_rng), _32539_varTokens);
	};
	return _3277_rng;;
}



inline jule::Any _1bb06c9a6_buildCommonIterKind(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _34140_tokens, jule::Ptr<_1ad6ceb70_Token>* _34166_errTok) {
	jule::I64 _3427_braceN = 0LL;;
	{
		auto expr = _34140_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee17c15:;
		if (it != expr_end) {
			jule::I64 _3438_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> _34315_tok = *it;
			{
				{
					auto &_match_expr{ (*(_34315_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bee185d9:;
						{
							(_3427_braceN)++;
							goto _iter_next_1bee17c15;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bee189c4:;
						{
							(_3427_braceN)--;
						}
					}
					_match_end_1bee188c5:;
				};
				if ((_3427_braceN != 0LL)) {
					goto _iter_next_1bee17c15;
				};
				{
					auto &_match_expr{ (*(_34315_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1bee19ab3:;
						{
							jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _3609_declTokens = (*(_34140_tokens)).slice(0LL, _3438_i);;
							jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _3619_exprTokens = (*(_34140_tokens)).slice((_3438_i + 1LL));;
							return jule::Any(_1bb06c5aa_buildRangeIterKind(_self_, &(_3609_declTokens), &(_3619_exprTokens), &(_34315_tok)), &__jule_any_type35);;
						}
					}
					_match_end_1bee1a1e0:;
				};
			}
			_iter_next_1bee17c15:;
			++it;
			_3438_i++;
			goto _iter_begin_1bee17c15;
		}
		_iter_end_1bee17c15:;
	};
	return jule::Any(_1bb06aae7_buildWhileIterKind(_self_, _34140_tokens), &__jule_any_type33);;
}



inline jule::Ptr<_1ad708b77_Iter> _1bb06cce7_buildCommonIter(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _36835_tokens) {
	jule::Ptr<_1ad708b77_Iter> _3697_it = jule::new_ptr<_1ad708b77_Iter>(_1ad708b77_Iter{._field_Comptime=false, ._field_Token=_36835_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr)});;
	(_36835_tokens).mut_slice(1LL);;
	if ((_36835_tokens.len() == 0LL)) {
		_1bb06841e_stop(_self_);
		_1bb069035_pushErr(_self_, (*(_3697_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1bb069398_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _3797_exprTokens = _1bb08139e_getBlockExpr(&(_36835_tokens));;
	if ((_3797_exprTokens.len() > 0LL)) {
		(*_3697_it.alloc)._field_Kind=_1bb06c9a6_buildCommonIterKind(_self_, &(_3797_exprTokens), &((*_3697_it.alloc)._field_Token));
	};
	jule::I64 _3837_i = _3797_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _3847_scopeTokens = _1bb084616_range(&(_3837_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_36835_tokens));;
	if ((_3847_scopeTokens == nullptr)) {
		_1bb06841e_stop(_self_);
		_1bb069035_pushErr(_self_, (*_3697_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1bb069398_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_3837_i < _36835_tokens.len())) {
		_1bb069035_pushErr(_self_, _36835_tokens[_3837_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3697_it.alloc)._field_Scope=_1bb069cd3_buildScope(_self_, &(_3847_scopeTokens), _36835_tokens[(_3837_i - 1LL)]);
	return _3697_it;;
}



inline jule::Ptr<_1ad708b77_Iter> _1bb06d138_buildIterSt(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1bb0673c9_stmt>* _39832_st) {
	if ((*((*(_39832_st))))._field_terminated) {
		return _1bb06a7a6_buildWhileNextIter(_self_, _39832_st);;
	};
	return _1bb06cce7_buildCommonIter(_self_, (*((*(_39832_st))))._field_tokens);;
}



inline jule::Ptr<_1ad70a283_BreakSt> _1bb06d479_buildBreakSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _40533_tokens) {
	jule::Ptr<_1ad70a283_BreakSt> _4067_brk = jule::new_ptr<_1ad70a283_BreakSt>(_1ad70a283_BreakSt{._field_Token=(*(_40533_tokens))[0LL], ._field_Label=jule::Ptr<_1ad6ceb70_Token>(nullptr)});;
	if (((*(_40533_tokens)).len() > 1LL)) {
		if (((*((*(_40533_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1bb069035_pushErr(_self_, (*(_40533_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1bb069398_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4067_brk))._field_Label=(*(_40533_tokens))[1LL];
			if (((*(_40533_tokens)).len() > 2LL)) {
				_1bb069035_pushErr(_self_, (*(_40533_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4067_brk;;
}



inline jule::Ptr<_1ad70a65c_ContSt> _1bb06d7ba_buildContSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _42332_tokens) {
	jule::Ptr<_1ad70a65c_ContSt> _4247_cont = jule::new_ptr<_1ad70a65c_ContSt>(_1ad70a65c_ContSt{._field_Token=(*(_42332_tokens))[0LL], ._field_Label=jule::Ptr<_1ad6ceb70_Token>(nullptr)});;
	if (((*(_42332_tokens)).len() > 1LL)) {
		if (((*((*(_42332_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1bb069035_pushErr(_self_, (*(_42332_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1bb069398_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4247_cont))._field_Label=(*(_42332_tokens))[1LL];
			if (((*(_42332_tokens)).len() > 2LL)) {
				_1bb069035_pushErr(_self_, (*(_42332_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4247_cont;;
}



inline jule::Ptr<_1ad70ab13_If> _1bb06db0b_buildIf(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _44128_tokens) {
	jule::Ptr<_1ad70ab13_If> _4427_model = jule::new_ptr<_1ad70ab13_If>(_1ad70ab13_If{._field_Token=(*(_44128_tokens))[0LL], ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr)});;
	((*(_44128_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _4467_exprTokens = _1bb08139e_getBlockExpr(_44128_tokens);;
	jule::I64 _4477_i = 0LL;;
	if ((_4467_exprTokens.len() == 0LL)) {
		_1bb069035_pushErr(_self_, (*(_4427_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4477_i=_4467_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _4537_scopeTokens = _1bb084616_range(&(_4477_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _44128_tokens);;
	if ((_4537_scopeTokens == nullptr)) {
		_1bb06841e_stop(_self_);
		_1bb069035_pushErr(_self_, (*(_4427_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1bb069398_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad6ceb70_Token> _4607_end = (*(_44128_tokens))[(_4477_i - 1LL)];;
	if ((_4477_i < (*(_44128_tokens)).len())) {
		if (((*((*(_44128_tokens))[_4477_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_44128_tokens))).mut_slice(_4477_i);;
		} else {
			_1bb069035_pushErr(_self_, (*(_44128_tokens))[_4477_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_44128_tokens))=nullptr;
		};
	};
	(*_4427_model.alloc)._field_Expr=_1bb0870ec_buildExpr((*(_self_))._field_p, &(_4467_exprTokens));
	(*_4427_model.alloc)._field_Scope=_1bb069cd3_buildScope(_self_, &(_4537_scopeTokens), _4607_end);
	return _4427_model;;
}



inline jule::Ptr<_1ad70aedc_Else> _1bb06de4c_buildElse(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _47430_tokens) {
	jule::Ptr<_1ad70aedc_Else> _4757_els = jule::new_ptr<_1ad70aedc_Else>(_1ad70aedc_Else{._field_Token=(*(_47430_tokens))[0LL], ._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr)});;
	((*(_47430_tokens))).mut_slice(1LL);;
	jule::I64 _4797_i = 0LL;;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _4807_scopeTokens = _1bb084616_range(&(_4797_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47430_tokens);;
	if ((_4807_scopeTokens == nullptr)) {
		if ((_4797_i < (*(_47430_tokens)).len())) {
			_1bb069035_pushErr(_self_, (*(_4757_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1bb06841e_stop(_self_);
			_1bb069035_pushErr(_self_, (*(_4757_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1bb069398_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_4797_i < (*(_47430_tokens)).len())) {
		_1bb069035_pushErr(_self_, (*(_47430_tokens))[_4797_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_4757_els))._field_Scope=_1bb069cd3_buildScope(_self_, &(_4807_scopeTokens), (*(_47430_tokens))[(_4797_i - 1LL)]);
	return _4757_els;;
}



inline jule::Ptr<_1ad70b493_Conditional> _1bb06e28d_buildIfElseChain(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _49836_tokens) {
	jule::Ptr<_1ad70b493_Conditional> _4997_chain = jule::new_ptr<_1ad70b493_Conditional>(_1ad70b493_Conditional{._field_Head=_1bb06db0b_buildIf(_self_, &(_49836_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1ad70ab13_If>>(nullptr), ._field_Default=jule::Ptr<_1ad70aedc_Else>(nullptr)});;
	if (((*(_4997_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_49836_tokens.len() != 0LL)) {
		{
			if (((*(_49836_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1bee36937;
			};
			if (((_49836_tokens.len() > 1LL) && ((*(_49836_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_49836_tokens).mut_slice(1LL);;
				jule::Ptr<_1ad70ab13_If> _5119_elif = _1bb06db0b_buildIf(_self_, &(_49836_tokens));;
				(*_4997_chain.alloc)._field_Tail=jule::append((*_4997_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad70ab13_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5119_elif; __jule_collection; }));
				goto _iter_next_1bee36937;
			};
			(*_4997_chain.alloc)._field_Default=_1bb06de4c_buildElse(_self_, &(_49836_tokens));
			goto _iter_end_1bee36937;
		}
	_iter_next_1bee36937:;
	}
	_iter_end_1bee36937:;;
	return _4997_chain;;
}



inline jule::Ptr<_1ad6e94e7_Expr> _1bb06e5ce_buildCoCallSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _52133_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _5223_token = _52133_tokens[0LL];;
	(_52133_tokens).mut_slice(1LL);;
	jule::Ptr<_1ad6e94e7_Expr> _5247_e = _1bb0870ec_buildExpr((*(_self_))._field_p, &(_52133_tokens));;
	if ((_5247_e == nullptr)) {
		return _5247_e;;
	};
	{
		auto &_match_expr{ (*(_5247_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1bee3aa29:;
			{
				(*((*(_5247_e))._field_Kind.unsafe_cast_ptr<_1ad6ed221_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1bee3b101:;
			{
				_1bb069035_pushErr(_self_, _5223_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1bee3b08a:;
	};
	return _5247_e;;
}



inline jule::Ptr<_1ad702b71_GotoSt> _1bb06e920_buildGotoSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _53732_tokens) {
	jule::Ptr<_1ad702b71_GotoSt> _5387_gt = jule::new_ptr<_1ad702b71_GotoSt>(_1ad702b71_GotoSt{._field_Token=(*(_53732_tokens))[0LL], ._field_Label=jule::Ptr<_1ad6ceb70_Token>(nullptr)});;
	if (((*(_53732_tokens)).len() == 1LL)) {
		_1bb069035_pushErr(_self_, (*(_5387_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_53732_tokens)).len() > 2LL)) {
		_1bb069035_pushErr(_self_, (*(_53732_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1ad6ceb70_Token> _5477_identToken = (*(_53732_tokens))[1LL];;
	if (((*(_5477_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb069035_pushErr(_self_, _5477_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bb069398_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5387_gt;;
	};
	(*(_5387_gt))._field_Label=_5477_identToken;
	return _5387_gt;;
}



inline jule::Ptr<_1ad702e6d_FallSt> _1bb06ec61_buildFallSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _55732_tokens) {
	jule::Ptr<_1ad702e6d_FallSt> _5587_fll = jule::new_ptr<_1ad702e6d_FallSt>(_1ad702e6d_FallSt{._field_Token=(*(_55732_tokens))[0LL]});;
	if (((*(_55732_tokens)).len() > 1LL)) {
		_1bb069035_pushErr(_self_, (*(_55732_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5587_fll;;
}



inline jule::Ptr<_1ad70bbd0_TypeAliasDecl> _1bb0700a2_buildTypeAliasSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _56737_tokens) {
	jule::Ptr<_1ad70bbd0_TypeAliasDecl> _5687_tad = _1bb088890_buildTypeAliasDecl((*(_self_))._field_p, _56737_tokens);;
	(*(_5687_tad))._field_Scope=(*(_self_))._field_s;
	return _5687_tad;;
}



inline void _1bb07057a_pushCaseExpr(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _57332_tokens, jule::Ptr<_1ad6ceb70_Token> _57361_token, jule::Bool _5743_typeMatch, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>* _57425_exprs) {
	if ((_57332_tokens.len() == 0LL)) {
		return;;
	};
	if (_5743_typeMatch) {
		jule::I64 _5798_i = 0LL;;
		jule::Ptr<_1ad6e51b3_TypeDecl> _5808_t;
		jule::Bool _58011_ok;
		({
			__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType((*(_self_))._field_p, &(_57332_tokens), (&(_5798_i)), true);
			_5808_t = __jule_assign_result.__jule_result_arg0;
			_58011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_58011_ok) {
			{ jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> &__jule_push_dest = (*(_57425_exprs)); __jule_push_dest.push(jule::new_ptr<_1ad6e94e7_Expr>(_1ad6e94e7_Expr{._field_Token=_57332_tokens[0LL], ._field_End=_57332_tokens[(_57332_tokens.len() - 1LL)], ._field_Kind=jule::Any(_5808_t, &__jule_any_type91)})); };
			if ((_5798_i < _57332_tokens.len())) {
				_1bb069035_pushErr(_self_, _57332_tokens[_5798_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> &__jule_push_dest = (*(_57425_exprs)); __jule_push_dest.push(_1bb0870ec_buildExpr((*(_self_))._field_p, &(_57332_tokens))); };
}



inline __jule_tuple_sx_1ad6e94e7_Expr__jule_tuple_bool _1bb070a31_buildCaseExprs(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _59635_tokens, jule::Ptr<_1ad6ceb70_Token>* _59665_colon, jule::Bool _59687_typeMatch) {
	__jule_tuple_sx_1ad6e94e7_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _5977_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e94e7_Expr>(nullptr); __jule_collection; });;
	jule::I64 _5987_braceN = 0LL;;
	jule::I64 _5997_j = 0LL;;
	{
		auto expr = _59635_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee479ae:;
		if (it != expr_end) {
			jule::I64 _6008_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> _60015_tok = *it;
			{
				{
					auto &_match_expr{ (*(_60015_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1bee4921e:;
						{
							(_5987_braceN)++;
							goto _iter_next_1bee479ae;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1bee49609:;
						{
							(_5987_braceN)--;
							goto _iter_next_1bee479ae;
						}
					}
					_match_end_1bee4950a:;
				};
				if ((_5987_braceN != 0LL)) {
					goto _iter_next_1bee479ae;
				};
				{
					
					if (((*(_60015_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1bee4acc0:;
						{
							jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _6195_exprTokens = (*(_59635_tokens)).slice(_5997_j, _6008_i);;
							if ((_6195_exprTokens.len() == 0LL)) {
								_1bb069035_pushErr(_self_, _60015_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1bb07057a_pushCaseExpr(_self_, (*(_59635_tokens)).slice(_5997_j, _6008_i), _60015_tok, _59687_typeMatch, &(_5977_exprs));
							};
							_5997_j=(_6008_i + 1LL);
						}
					}
					else if (((*(_60015_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1bee4ad36:;
						{
							(*(_59665_colon))=_60015_tok;
							_1bb07057a_pushCaseExpr(_self_, (*(_59635_tokens)).slice(_5997_j, _6008_i), _60015_tok, _59687_typeMatch, &(_5977_exprs));
							((*(_59635_tokens))).mut_slice((_6008_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _5977_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6008_i - _5997_j) == 0LL) || (_5977_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1bee4a7e7:;
				};
			}
			_iter_next_1bee479ae:;
			++it;
			_6008_i++;
			goto _iter_begin_1bee479ae;
		}
		_iter_end_1bee479ae:;
	};
	_1bb069035_pushErr(_self_, (*(_59635_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_59635_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1ad7051d4_ScopeTree> _1bb070d72_buildCaseScope(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _63835_tokens) {
	jule::I64 _6397_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6418_i = 0LL;;
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _6428_next;
			({
				__jule_tuple_sx_1ad6ceb70_Token__jule_tuple_bool __jule_assign_result = _1bb067099_skipSt(&(_6418_i), (*(_63835_tokens)).slice(_6397_n));
				_6428_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6428_next.len() == 0LL)) {
				goto _iter_end_1bee54922;
			};
			jule::Ptr<_1ad6ceb70_Token> _6464_tok = _6428_next[0LL];;
			if (((*(_6464_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6397_n+=_6418_i;
				goto _iter_next_1bee54922;
			};
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _6518_scopeTokens = (*(_63835_tokens)).slice(0LL, _6397_n);;
			jule::Ptr<_1ad7051d4_ScopeTree> _6528_scope = _1bb069cd3_buildScope(_self_, &(_6518_scopeTokens), (*(_63835_tokens))[_6397_n]);;
			((*(_63835_tokens))).mut_slice(_6397_n);;
			return _6528_scope;;
		}
	_iter_next_1bee54922:;
	}
	_iter_end_1bee54922:;;
	jule::Ptr<_1ad6ceb70_Token> _65611_end;;
	if (((*(_63835_tokens)).len() > 0LL)) {
		_65611_end=(*(_63835_tokens))[((*(_63835_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1ad7051d4_ScopeTree> _6607_scope = _1bb069cd3_buildScope(_self_, _63835_tokens, _65611_end);;
	(*(_63835_tokens))=nullptr;
	return _6607_scope;;
}



inline __jule_tuple_x_1ad70c186_Case__jule_tuple_bool _1bb07126d_buildCase(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _66530_tokens, jule::Bool _66555_typeMatch) {
	__jule_tuple_x_1ad70c186_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ad70c186_Case> _6667_c = jule::new_ptr<_1ad70c186_Case>(_1ad70c186_Case{._field_Token=(*(_66530_tokens))[0LL], ._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>(nullptr)});;
	((*(_66530_tokens))).mut_slice(1LL);;
	jule::Ptr<_1ad6ceb70_Token> _67011_colon = nullptr;;
	if (((*(_66530_tokens)).len() == 0LL)) {
		_1bb069035_pushErr(_self_, (*(_6667_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _67512_ok;
	({
		__jule_tuple_sx_1ad6e94e7_Expr__jule_tuple_bool __jule_assign_result = _1bb070a31_buildCaseExprs(_self_, _66530_tokens, &(_67011_colon), _66555_typeMatch);
		(*_6667_c.alloc)._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_67512_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_6667_c.alloc)._field_Scope=_1bb070d72_buildCaseScope(_self_, _66530_tokens);
	if (((*((*_6667_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6667_c))._field_Scope.alloc)._field_End=_67011_colon;
	};
	jule::Bool _6803_isDefault = (_67512_ok && ((*_6667_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6667_c;
	__jule_func_result.__jule_result_arg1 = _6803_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ad70c186_Case__jule_tuple_x_1ad70aedc_Else _1bb071669_buildCases(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _68430_tokens, jule::Bool _68455_typeMatch) {
	__jule_tuple_sx_1ad70c186_Case__jule_tuple_x_1ad70aedc_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1ad70c186_Case>> _68511_cases = nullptr;;
	jule::Ptr<_1ad70aedc_Else> _68611_def = nullptr;;
	jule::Bool _6877_defNotLast = false;;
	while ((_68430_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1ad6ceb70_Token> _6898_tok = _68430_tokens[0LL];;
			if (((*(_6898_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1bb069035_pushErr(_self_, _6898_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1bee5dd38;
			};
			jule::Ptr<_1ad70c186_Case> _6948_c;
			jule::Bool _69411_isDefault;
			({
				__jule_tuple_x_1ad70c186_Case__jule_tuple_bool __jule_assign_result = _1bb07126d_buildCase(_self_, &(_68430_tokens), _68455_typeMatch);
				_6948_c = __jule_assign_result.__jule_result_arg0;
				_69411_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_69411_isDefault) {
				(*(_6948_c))._field_Token=_6898_tok;
				if ((_68611_def == nullptr)) {
					_68611_def=jule::new_ptr<_1ad70aedc_Else>(_1ad70aedc_Else{._field_Token=(*_6948_c.alloc)._field_Token, ._field_Scope=(*_6948_c.alloc)._field_Scope});
				} else {
					_1bb069035_pushErr(_self_, _6898_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_6877_defNotLast=(_6877_defNotLast || (_68611_def != nullptr));
				{ jule::Slice<jule::Ptr<_1ad70c186_Case>> &__jule_push_dest = _68511_cases; __jule_push_dest.push(_6948_c); };
			};
		}
	_iter_next_1bee5dd38:;
	}
	_iter_end_1bee5dd38:;;
	if (_6877_defNotLast) {
		_1bb069035_pushErr(_self_, (*(_68611_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _68511_cases;
	__jule_func_result.__jule_result_arg1 = _68611_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1ad70c9a0_MatchCase> _1bb0719aa_buildMatchCase(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _71834_tokens) {
	jule::Ptr<_1ad70c9a0_MatchCase> _7197_m = jule::new_ptr<_1ad70c9a0_MatchCase>(_1ad70c9a0_MatchCase{._field_Comptime=false, ._field_Token=_71834_tokens[0LL], ._field_End=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1ad70c186_Case>>(nullptr), ._field_Default=jule::Ptr<_1ad70aedc_Else>(nullptr)});;
	(_71834_tokens).mut_slice(1LL);;
	if (((_71834_tokens.len() > 0LL) && ((*(_71834_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7197_m))._field_TypeMatch=true;
		(_71834_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _7297_exprTokens = _1bb08139e_getBlockExpr(&(_71834_tokens));;
	if ((_7297_exprTokens.len() > 0LL)) {
		(*_7197_m.alloc)._field_Expr=_1bb0870ec_buildExpr((*(_self_))._field_p, &(_7297_exprTokens));
	} else if ((*_7197_m.alloc)._field_TypeMatch) {
		_1bb069035_pushErr(_self_, (*_7197_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I64 _7367_i = _7297_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _7377_blockToks = _1bb084616_range(&(_7367_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_71834_tokens));;
	if ((_7377_blockToks == nullptr)) {
		_1bb06841e_stop(_self_);
		_1bb069035_pushErr(_self_, (*_7197_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1bb069398_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7367_i < _71834_tokens.len())) {
		_1bb069035_pushErr(_self_, _71834_tokens[_7367_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_7197_m.alloc)._field_End=_71834_tokens[(_7367_i - 1LL)];
	({
		__jule_tuple_sx_1ad70c186_Case__jule_tuple_x_1ad70aedc_Else __jule_assign_result = _1bb071669_buildCases(_self_, _7377_blockToks, (*_7197_m.alloc)._field_TypeMatch);
		(*_7197_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7197_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7197_m;;
}



inline jule::Ptr<_1ad7051d4_ScopeTree> _1bb071ceb_buildScopeSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _75132_tokens) {
	jule::Bool _7527_isUnsafe = false;;
	jule::Bool _7537_isDeferred = false;;
	jule::Ptr<_1ad6ceb70_Token> _7547_token = _75132_tokens[0LL];;
	if (((*(_7547_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7527_isUnsafe=true;
		(_75132_tokens).mut_slice(1LL);;
		if ((_75132_tokens.len() == 0LL)) {
			_1bb069035_pushErr(_self_, _7547_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7547_token=_75132_tokens[0LL];
		if (((*_7547_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7537_isDeferred=true;
			(_75132_tokens).mut_slice(1LL);;
			if ((_75132_tokens.len() == 0LL)) {
				_1bb069035_pushErr(_self_, _7547_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7547_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7537_isDeferred=true;
		(_75132_tokens).mut_slice(1LL);;
		if ((_75132_tokens.len() == 0LL)) {
			_1bb069035_pushErr(_self_, _7547_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I64 _7807_i = 0LL;;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _7817_scopeTokens = _1bb084616_range(&(_7807_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_75132_tokens));;
	if ((_7817_scopeTokens == nullptr)) {
		_1bb069035_pushErr(_self_, _7547_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_7807_i < _75132_tokens.len())) {
		_1bb069035_pushErr(_self_, _75132_tokens[_7807_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1ad7051d4_ScopeTree> _7887_scope = _1bb069cd3_buildScope(_self_, &(_7817_scopeTokens), _75132_tokens[(_7807_i - 1LL)]);;
	(*(_7887_scope))._field_Unsafety=_7527_isUnsafe;
	(*_7887_scope.alloc)._field_Deferred=_7537_isDeferred;
	return _7887_scope;;
}



inline jule::Ptr<_1ad702797_LabelSt> _1bb07213c_buildLabelSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _79433_tokens) {
	jule::Ptr<_1ad702797_LabelSt> _7957_lbl = jule::new_ptr<_1ad702797_LabelSt>(_1ad702797_LabelSt{._field_Token=(*(_79433_tokens))[0LL], ._field_Ident=(*((*(_79433_tokens))[0LL]))._field_Kind});;
	if (((*(_79433_tokens)).len() > 2LL)) {
		((*(_79433_tokens))).mut_slice(2LL);;
		_1bb069651_insertAsNext(_self_, _79433_tokens);
	};
	return _7957_lbl;;
}



inline __jule_tuple__1ad704821_StmtData__jule_tuple_bool _1bb07247d_buildIdSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _80930_tokens) {
	__jule_tuple__1ad704821_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_80930_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ad6ceb70_Token> _8147_token = (*(_80930_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8147_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1bee758ee:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1bb07213c_buildLabelSt(_self_, _80930_tokens), &__jule_any_type55);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bee7615d:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1bb082c85_assignInfo> _1bb0727be_buildAssignInfo(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _82336_tokens) {
	jule::Ptr<_1bb082c85_assignInfo> _8247_info = jule::new_ptr<_1bb082c85_assignInfo>(_1bb082c85_assignInfo{._field_l=jule::Slice<jule::Ptr<_1ad6ceb70_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1ad6ceb70_Token>>(nullptr), ._field_setter=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_ok=true});;
	jule::I64 _8277_braceN = 0LL;;
	{
		auto expr = _82336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee77934:;
		if (it != expr_end) {
			jule::I64 _8288_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> _82815_token = *it;
			{
				{
					auto &_match_expr{ (*(_82815_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1bee7836e:;
						{
							(_8277_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1bee78704:;
						{
							(_8277_braceN)--;
						}
					}
					_match_end_1bee78605:;
				};
				{
					
					if ((_8277_braceN > 0LL)) {
						_case_begin_1bee798c0:;
						{
							goto _iter_next_1bee77934;
						}
					}
					else if (((!(_1ad6d4c85_IsAssignOp((*(_82815_token))._field_Id))) && ((*_82815_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1bee79936:;
						{
							goto _iter_next_1bee77934;
						}
					}
					_match_end_1bee79826:;
				};
				(*(_8247_info))._field_l=(*(_82336_tokens)).slice(0LL, _8288_i);
				if (((*_8247_info.alloc)._field_l.len() == 0LL)) {
					(*_8247_info.alloc)._field_ok=false;
				};
				(*_8247_info.alloc)._field_setter=_82815_token;
				if (((_8288_i + 1LL) >= (*(_82336_tokens)).len())) {
					(*_8247_info.alloc)._field_r=nullptr;
					(*_8247_info.alloc)._field_ok=_1ad6d49bb_IsPostfixOp((*((*_8247_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1bee77934;
				};
				(*_8247_info.alloc)._field_r=(*(_82336_tokens)).slice((_8288_i + 1LL));
				if (_1ad6d49bb_IsPostfixOp((*(*(_8247_info))._field_setter.alloc)._field_Id)) {
					if (((*_8247_info.alloc)._field_r.len() > 0LL)) {
						_1bb069035_pushErr(_self_, (*(_8247_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8247_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1bee77934;
			}
			_iter_next_1bee77934:;
			++it;
			_8288_i++;
			goto _iter_begin_1bee77934;
		}
		_iter_end_1bee77934:;
	};
	return _8247_info;;
}



inline jule::Ptr<_1ad7035cd_AssignLeft> _1bb072b10_buildAssignL(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _86833_tokens) {
	jule::Ptr<_1ad7035cd_AssignLeft> _8697_l = jule::new_ptr<_1ad7035cd_AssignLeft>(_1ad7035cd_AssignLeft{._field_Token=(*(_86833_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
	if (((*((*(_86833_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_8697_l))._field_Ident=(*((*_8697_l.alloc)._field_Token))._field_Kind;
	};
	(*_8697_l.alloc)._field_Expr=_1bb0870ec_buildExpr((*(_self_))._field_p, _86833_tokens);
	return _8697_l;;
}



inline jule::Slice<jule::Ptr<_1ad7035cd_AssignLeft>> _1bb072e51_buildAssignLs(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>>* _87934_parts) {
	jule::Slice<jule::Ptr<_1ad7035cd_AssignLeft>> _88011_lefts = nullptr;;
	{
		auto expr = _87934_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee81c6d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _88115_part = *it;
			{
				jule::Ptr<_1ad7035cd_AssignLeft> _8828_l = _1bb072b10_buildAssignL(_self_, &(_88115_part));;
				{ jule::Slice<jule::Ptr<_1ad7035cd_AssignLeft>> &__jule_push_dest = _88011_lefts; __jule_push_dest.push(_8828_l); };
			}
			_iter_next_1bee81c6d:;
			++it;
			goto _iter_begin_1bee81c6d;
		}
		_iter_end_1bee81c6d:;
	};
	return _88011_lefts;;
}



inline __jule_tuple__1ad704821_StmtData__jule_tuple_bool _1bb073292_buildPlainAssign(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _88837_tokens) {
	__jule_tuple__1ad704821_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1bb082c85_assignInfo> _8897_info = _1bb0727be_buildAssignInfo(_self_, _88837_tokens);;
	if ((!((*(_8897_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad703b61_AssignSt> _8947_assign = jule::new_ptr<_1ad703b61_AssignSt>(_1ad703b61_AssignSt{._field_Declarative=false, ._field_Setter=(*_8897_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1ad7035cd_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
	if (((*((*_8897_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_8947_assign))._field_Declarative=true;
		(*_8947_assign.alloc)._field_Right=_1bb0870ec_buildExpr((*(_self_))._field_p, &((*_8897_info.alloc)._field_r));
		jule::Bool _9024_ok = _1bb07368d_buildDeclAssign1(_self_, &((*_8897_info.alloc)._field_l), &(_8947_assign));;
		if ((!(_9024_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_8947_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_8947_assign, &__jule_any_type57);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1ad7035cd_AssignLeft> _9118_left = (*(_8947_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9118_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1bee8803d:;
				{
					jule::Ptr<_1ad70802d_VarDecl> _9149_decl = jule::new_ptr<_1ad70802d_VarDecl>(_1ad70802d_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9118_left))._field_Token, ._field_Setter=(*_8947_assign.alloc)._field_Setter, ._field_Ident=(*_9118_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9118_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9118_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Expr=(*_8947_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9149_decl, &__jule_any_type49);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_1bee87ec7:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_8947_assign, &__jule_any_type57);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _9287_parts;
	jule::Slice<_1dd356476_Log> _92814_errs;
	({
		__jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb084d86_parts(&((*_8897_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9287_parts = __jule_assign_result.__jule_result_arg0;
		_92814_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_92814_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_92814_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_8947_assign.alloc)._field_Left=_1bb072e51_buildAssignLs(_self_, &(_9287_parts));
	if (((*_8897_info.alloc)._field_r != nullptr)) {
		(*_8947_assign.alloc)._field_Right=_1bb0870ec_buildExpr((*(_self_))._field_p, &((*_8897_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_8947_assign, &__jule_any_type57);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1bb07368d_buildDeclAssign1(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _94237_lefts, jule::Ptr<_1ad703b61_AssignSt>* _94266_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _9447_parts;
	jule::Slice<_1dd356476_Log> _94414_errs;
	({
		__jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb084d86_parts(_94237_lefts, static_cast<jule::U64>(5LLU), true);
		_9447_parts = __jule_assign_result.__jule_result_arg0;
		_94414_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_94414_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_94414_errs);
		return false;;
	};
	{
		auto expr = &(_9447_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee8e011:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _95015_part = *it;
			{
				jule::Bool _9518_isMut = false;;
				jule::Bool _9528_isRef = false;;
				jule::Ptr<_1ad6ceb70_Token> _9544_token = _95015_part[0LL];;
				if (((*(_9544_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9518_isMut=true;
					(_95015_part).mut_slice(1LL);;
					if ((_95015_part.len() == 0LL)) {
						_1bb069035_pushErr(_self_, _9544_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_95015_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9528_isRef=true;
					(_95015_part).mut_slice(1LL);;
					if ((_95015_part.len() == 0LL)) {
						_1bb069035_pushErr(_self_, _9544_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_95015_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_95015_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1bb069035_pushErr(_self_, _9544_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1ad7035cd_AssignLeft> _9788_l = _1bb072b10_buildAssignL(_self_, &(_95015_part));;
				if (((*(_9788_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*_9788_l.alloc)._field_Mutable=_9518_isMut;
				(*_9788_l.alloc)._field_Reference=_9528_isRef;
				{ jule::Slice<jule::Ptr<_1ad7035cd_AssignLeft>> &__jule_push_dest = (*((*(_94266_assign))))._field_Left; __jule_push_dest.push(_9788_l); };
			}
			_iter_next_1bee8e011:;
			++it;
			goto _iter_begin_1bee8e011;
		}
		_iter_end_1bee8e011:;
	};
	return true;;
}



inline __jule_tuple_x_1ad703b61_AssignSt__jule_tuple_bool _1bb0739ce_buildDeclAssign(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _99035_tokens) {
	__jule_tuple_x_1ad703b61_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99035_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99035_tokens).mut_slice(1LL);;
	jule::Ptr<_1ad6ceb70_Token> _9967_token = _99035_tokens[0LL];;
	if (((*(_9967_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad703b61_AssignSt> _10017_assign = jule::new_ptr<_1ad703b61_AssignSt>(_1ad703b61_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1ad7035cd_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
	jule::I64 _10057_i = 0LL;;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _10067_rang = _1bb084616_range(&(_10057_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99035_tokens));;
	if ((_10067_rang == nullptr)) {
		_1bb069035_pushErr(_self_, _9967_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10057_i + 1LL) < _99035_tokens.len())) {
		(*(_10017_assign))._field_Setter=_99035_tokens[_10057_i];
		if (((*((*_10017_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1bb069035_pushErr(_self_, (*_10017_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10057_i)++;
		jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _10168_exprTokens = _99035_tokens.slice(_10057_i);;
		(*_10017_assign.alloc)._field_Right=_1bb0870ec_buildExpr((*(_self_))._field_p, &(_10168_exprTokens));
	};
	jule::Bool _10203_ok = _1bb07368d_buildDeclAssign1(_self_, &(_10067_rang), &(_10017_assign));;
	__jule_func_result.__jule_result_arg0 = _10017_assign;
	__jule_func_result.__jule_result_arg1 = _10203_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1ad704821_StmtData__jule_tuple_bool _1bb073d20_buildAssignSt(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _102434_tokens) {
	__jule_tuple__1ad704821_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1bb08313c_checkAssignTokens(_102434_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102434_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1bee9ecad:;
			{
				({
					__jule_tuple_x_1ad703b61_AssignSt__jule_tuple_bool __jule_assign_result = _1bb0739ce_buildDeclAssign(_self_, (*(_102434_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type57);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1bee9de33:;
			{
				({
					__jule_tuple__1ad704821_StmtData__jule_tuple_bool __jule_assign_result = _1bb073292_buildPlainAssign(_self_, _102434_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1bee9e395:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ad6e9dbb_UseExpr> _1bb074161_buildUseExpr(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _103733_tokens) {
	if (((*(_103733_tokens)).len() == 1LL)) {
		_1bb069035_pushErr(_self_, (*(_103733_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1ad6e9dbb_UseExpr> _10427_ue = jule::new_ptr<_1ad6e9dbb_UseExpr>(_1ad6e9dbb_UseExpr{._field_Token=(*(_103733_tokens))[0LL], ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
	((*(_103733_tokens))).mut_slice(1LL);;
	(*(_10427_ue))._field_Expr=_1bb0870ec_buildExpr((*(_self_))._field_p, _103733_tokens);
	return _10427_ue;;
}



inline jule::Any _1bb0744a2_buildConstSt(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1bb0673c9_stmt>* _105033_st) {
	if (((*((*(_105033_st))))._field_tokens.len() == 1LL)) {
		_1bb069035_pushErr(_self_, (*((*(_105033_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_105033_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1beea43cd:;
			{
				((*((*(_105033_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1ad708b77_Iter> _10588_iter = _1bb06d138_buildIterSt(_self_, _105033_st);;
				if ((_10588_iter != nullptr)) {
					(*_10588_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10588_iter, &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1beea41be:;
			{
				((*((*(_105033_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1ad70c9a0_MatchCase> _10658_mt = _1bb0719aa_buildMatchCase(_self_, (*((*(_105033_st))))._field_tokens);;
				if ((_10658_mt != nullptr)) {
					(*_10658_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10658_mt, &__jule_any_type58);;
			}
		}
		else {
			_case_begin_1beea34cb:;
			{
				return jule::Any(_1bb06a124_buildVarSt(_self_, &((*((*(_105033_st))))._field_tokens)), &__jule_any_type49);;
			}
		}
		_match_end_1beea3c18:;
	};
}



inline jule::Any _1bb0747e3_buildSt(_1bb067c6a_scopeParser* _self_, jule::Ptr<_1bb0673c9_stmt>* _107528_st) {
	jule::Ptr<_1ad6ceb70_Token> _10767_token = (*((*(_107528_st))))._field_tokens[0LL];;
	if (((*(_10767_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _10788_s;
		jule::Bool _107811_ok;
		({
			__jule_tuple__1ad704821_StmtData__jule_tuple_bool __jule_assign_result = _1bb07247d_buildIdSt(_self_, &((*((*(_107528_st))))._field_tokens));
			_10788_s = __jule_assign_result.__jule_result_arg0;
			_107811_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_107811_ok) {
			return _10788_s;;
		};
	};
	jule::Any _10847_s;
	jule::Bool _108410_ok;
	({
		__jule_tuple__1ad704821_StmtData__jule_tuple_bool __jule_assign_result = _1bb073d20_buildAssignSt(_self_, &((*((*(_107528_st))))._field_tokens));
		_10847_s = __jule_assign_result.__jule_result_arg0;
		_108410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_108410_ok) {
		return _10847_s;;
	};
	{
		auto &_match_expr{ (*(_10767_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1beeaa307:;
			{
				return jule::Any(_1bb074161_buildUseExpr(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1beeaa181:;
			{
				return _1bb0744a2_buildConstSt(_self_, _107528_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1beeaa56b:;
			{
				return jule::Any(_1bb06a124_buildVarSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1beeaa5d2:;
			{
				return jule::Any(_1bb06a465_buildRetSt(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1beeaa648:;
			{
				return jule::Any(_1bb06d138_buildIterSt(_self_, _107528_st), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1beeaa6ae:;
			{
				return jule::Any(_1bb06d479_buildBreakSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1beeaa725:;
			{
				return jule::Any(_1bb06d7ba_buildContSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1beeaa79c:;
			{
				return jule::Any(_1bb06e28d_buildIfElseChain(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1beeaa824:;
			{
				return jule::Any(_1bb06e5ce_buildCoCallSt(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1beeaa89b:;
			{
				return jule::Any(_1bb06e920_buildGotoSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1beeaa923:;
			{
				return jule::Any(_1bb06ec61_buildFallSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1beeaa99a:;
			{
				return jule::Any(_1bb0700a2_buildTypeAliasSt(_self_, &((*((*(_107528_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1beeaaa22:;
			{
				return jule::Any(_1bb0719aa_buildMatchCase(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1beeaaa99:;
			{
				if (((*((*(_107528_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1beea9eb6;
				};
				if ((((*((*((*(_107528_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_107528_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1bb071ceb_buildScopeSt(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type48);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1beeaab21:;
			{
				return jule::Any(_1bb071ceb_buildScopeSt(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type48);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1beeaab98:;
			{
				return jule::Any(_1bb071ceb_buildScopeSt(_self_, (*((*(_107528_st))))._field_tokens), &__jule_any_type48);;
			}
		}
		_match_end_1beea9eb6:;
	};
	jule::Ptr<_1ad6e94e7_Expr> _11317_expr = _1bb0870ec_buildExpr((*(_self_))._field_p, &((*((*(_107528_st))))._field_tokens));;
	if ((_11317_expr != nullptr)) {
		return jule::Any(_11317_expr, &__jule_any_type51);;
	};
	_1bb069035_pushErr(_self_, _10767_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1bb074b56_build(_1bb067c6a_scopeParser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _113926_tokens, jule::Ptr<_1ad7051d4_ScopeTree>* _113956_s) {
	if (((*(_113956_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1bb067781_splitStmts(_113926_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_113956_s));
	while (((!(_1bb068bc2_isLastSt(_self_))) && (!(_1bb06893b_finished(_self_))))) {
		{
			jule::Ptr<_1bb0673c9_stmt> _11478_st = _1bb0698d7_next(_self_);;
			jule::Any _11488_data = _1bb0747e3_buildSt(_self_, &(_11478_st));;
			if ((_11488_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1ad704a74_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad704a74_Stmt{._field_Token=(*(_11478_st))._field_tokens[0LL], ._field_Data=_11488_data}; __jule_collection; }));
			};
			if (_1bb0686a5_stopped(_self_)) {
				goto _iter_end_1beeb7de7;
			};
		}
	_iter_next_1beeb7de7:;
	}
	_iter_end_1beeb7de7:;;
}








inline jule::Bool _1bb0756a1_exprBuilder_eq(_1bb0756a1_exprBuilder *_self_, _1bb0756a1_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1bb075d99_pushErr(_1bb0756a1_exprBuilder* _self_, jule::Ptr<_1ad6ceb70_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args) {
	_1bb086948_pushErr((*(_self_))._field_p.ptr(), _1423_token, _1445_fmt, _1465_args);
}



inline void _1bb07620c_pushSuggestion(_1bb0756a1_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args) {
	_1bb086cab_pushSuggestion((*(_self_))._field_p.ptr(), _1930_fmt, _1950_args);
}



inline jule::Ptr<_1ad6ea0db_TupleExpr> _1bb07654d_buildTuple(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>>* _2331_parts) {
	jule::Ptr<_1ad6ea0db_TupleExpr> _247_tuple = jule::new_ptr<_1ad6ea0db_TupleExpr>(_1ad6ea0db_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>::alloc(0LL, (*(_2331_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e94e7_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _2331_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beedc01a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _2715_part = *it;
			{
				(*(_247_tuple))._field_Expr=jule::append((*_247_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bb080942_buildFromTokens(_self_, _2715_part); __jule_collection; }));
			}
			_iter_next_1beedc01a:;
			++it;
			goto _iter_begin_1beedc01a;
		}
		_iter_end_1beedc01a:;
	};
	return _247_tuple;;
}



inline jule::Ptr<_1ad6ea482_LitExpr> _1bb07688e_buildLit(_1bb0756a1_exprBuilder* _self_, jule::Ptr<_1ad6ceb70_Token> _3324_token) {
	return jule::new_ptr<_1ad6ea482_LitExpr>(_1ad6ea482_LitExpr{._field_Token=_3324_token, ._field_Value=(*(_3324_token))._field_Kind});;
}



inline jule::Any _1bb077021_buildSingle(_1bb0756a1_exprBuilder* _self_, jule::Ptr<_1ad6ceb70_Token> _4431_token) {
	{
		auto &_match_expr{ (*(_4431_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1beedec10:;
			{
				return jule::Any(_1bb07688e_buildLit(_self_, _4431_token), &__jule_any_type104);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1beedec87:;
			{
				return jule::Any(jule::new_ptr<_1ad6eb97d_VariadicExpr>(_1ad6eb97d_VariadicExpr{._field_Token=_4431_token, ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr)}), &__jule_any_type78);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1beedeced:;
			{
				return jule::Any(_1bb081cea_buildIdentExpr(&(_4431_token)), &__jule_any_type41);;
			}
		}
		_match_end_1beedeb44:;
	};
	_1bb075d99_pushErr(_self_, _4431_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ad6ead12_IdentExpr> _1bb077362_buildBindIdent(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _6135_tokens) {
	if (((*((*(_6135_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_6135_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1bb075d99_pushErr(_self_, (*(_6135_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad6ceb70_Token> _697_token = (*(_6135_tokens))[2LL];;
	if (((*(_697_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb075d99_pushErr(_self_, (*(_6135_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad6ead12_IdentExpr> _757_expr = _1bb081cea_buildIdentExpr(&(_697_token));;
	(*(_757_expr))._field_Binded=true;
	return _757_expr;;
}



inline jule::Ptr<_1ad6eb5a4_UnaryExpr> _1bb0776a3_buildUnary(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _8030_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _817_op = _8030_tokens[0LL];;
	if ((_8030_tokens.len() == 1LL)) {
		_1bb075d99_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1ad6d03ac_IsUnaryOp((*(_817_op))._field_Id)))) {
		_1bb075d99_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_817_op.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(_8030_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1ad6eb5a4_UnaryExpr>(_1ad6eb5a4_UnaryExpr{._field_Op=_817_op, ._field_Expr=_1bb080942_buildFromTokens(_self_, _8030_tokens)});;
}



inline jule::Ptr<_1ad6ec60a_SubIdentExpr> _1bb0779e4_buildObjSubIdent(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _10136_tokens) {
	jule::I64 _1027_i = (_10136_tokens.len() - 1LL);;
	jule::Ptr<_1ad6ceb70_Token> _1037_identToken = _10136_tokens[_1027_i];;
	(_1027_i)--;
	(_10136_tokens).mut_slice(0LL, _1027_i);;
	if ((_10136_tokens.len() == 0LL)) {
		_1bb075d99_pushErr(_self_, _1037_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ad6ec60a_SubIdentExpr>(_1ad6ec60a_SubIdentExpr{._field_Expr=_1bb080942_buildFromTokens(_self_, _10136_tokens), ._field_Ident=_1037_identToken});;
}



inline jule::Ptr<_1ad6ec231_NamespaceExpr> _1bb077d35_buildNamespace(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _11635_tokens) {
	jule::Ptr<_1ad6ec231_NamespaceExpr> _1177_ns = jule::new_ptr<_1ad6ec231_NamespaceExpr>(_1ad6ec231_NamespaceExpr{._field_Namespace=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Ident=jule::Ptr<_1ad6ceb70_Token>(nullptr)});;
	if (((*(_11635_tokens)).len() > 3LL)) {
		_1bb075d99_pushErr(_self_, (*(_11635_tokens))[3LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_1177_ns.alloc)._field_Namespace=(*(_11635_tokens))[0LL];
	if ((((*((*_1177_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_1177_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U64>(31LLU)))) {
		_1bb075d99_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	if (((*(_11635_tokens)).len() < 2LL)) {
		_1bb075d99_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_11635_tokens))[1LL]))._field_Id != static_cast<jule::U64>(19LLU))) {
		_1bb075d99_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_11635_tokens)).len() < 3LL)) {
		_1bb075d99_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_1177_ns.alloc)._field_Ident=(*(_11635_tokens))[2LL];
	if (((*((*_1177_ns.alloc)._field_Ident))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb075d99_pushErr(_self_, (*_1177_ns.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1177_ns;;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb078176_buildType(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _15030_tokens) {
	jule::I64 _1517_i = 0LL;;
	jule::Ptr<_1ad6e51b3_TypeDecl> _1527_t;
	jule::Bool _15210_ok;
	({
		__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType((*(_self_))._field_p, _15030_tokens, (&(_1517_i)), false);
		_1527_t = __jule_assign_result.__jule_result_arg0;
		_15210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_15210_ok))) {
		_1bb075d99_pushErr(_self_, (*(_15030_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1517_i < (*(_15030_tokens)).len())) {
		_1bb075d99_pushErr(_self_, (*(_15030_tokens))[_1517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1527_t;;
}



inline jule::Any _1bb0784b7_buildSubIdent(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _16434_tokens) {
	jule::I64 _1653_i = ((*(_16434_tokens)).len() - 2LL);;
	jule::Ptr<_1ad6ceb70_Token> _1663_token = (*(_16434_tokens))[_1653_i];;
	{
		auto &_match_expr{ (*(_1663_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1c0007376:;
			{
				return jule::Any(_1bb0779e4_buildObjSubIdent(_self_, (*(_16434_tokens))), &__jule_any_type88);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1c00079a3:;
			{
				return jule::Any(_1bb077d35_buildNamespace(_self_, _16434_tokens), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1c0007a19:;
			{
				return jule::Any(_1bb078176_buildType(_self_, _16434_tokens), &__jule_any_type91);;
			}
		}
		_match_end_1c0007882:;
	};
	if (_1bb08248d_isAnonFnHead(_16434_tokens)) {
		return jule::Any(_1bb078176_buildType(_self_, _16434_tokens), &__jule_any_type91);;
	};
	_1bb075d99_pushErr(_self_, _1663_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ad6eb97d_VariadicExpr> _1bb078808_buildVariadic(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _18633_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _1877_token = _18633_tokens[(_18633_tokens.len() - 1LL)];;
	(_18633_tokens).mut_slice(0LL, (_18633_tokens.len() - 1LL));;
	return jule::new_ptr<_1ad6eb97d_VariadicExpr>(_1ad6eb97d_VariadicExpr{._field_Token=_1877_token, ._field_Expr=_1bb080942_buildFromTokens(_self_, _18633_tokens)});;
}



inline jule::Ptr<_1ad6e97b1_RangeExpr> _1bb078b49_buildBetweenParentheses(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _19543_tokens) {
	if ((_19543_tokens.len() == 2LL)) {
		_1bb075d99_pushErr(_self_, _19543_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_19543_tokens).mut_slice(1LL, (_19543_tokens.len() - 1LL));;
	return jule::new_ptr<_1ad6e97b1_RangeExpr>(_1ad6e97b1_RangeExpr{._field_Expr=_1bb080942_buildFromTokens(_self_, _19543_tokens)});;
}



inline jule::Ptr<_1ad6ebd57_CastExpr> _1bb078e8a_tryBuildCast(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _20733_tokens) {
	jule::I64 _2087_rangeN = 0LL;;
	{
		auto expr = _20733_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c000d59c:;
		if (it != expr_end) {
			jule::I64 _2097_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> _20910_token = *it;
			{
				{
					auto &_match_expr{ (*(_20910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c000de3d:;
						{
							(_2087_rangeN)++;
							goto _iter_next_1c000d59c;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c000e328:;
						{
							(_2087_rangeN)--;
						}
					}
					_match_end_1c000e229:;
				};
				if ((_2087_rangeN > 0LL)) {
					goto _iter_next_1c000d59c;
				} else if (((_2097_i + 1LL) == (*(_20733_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _2288_typeTokens = (*(_20733_tokens)).slice(0LL, (_2097_i + 1LL));;
				jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _2298_exprTokens = (*(_20733_tokens)).slice((_2097_i + 1LL));;
				if ((_2298_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1ad6ceb70_Token> _2364_tok = _2298_exprTokens[0LL];;
				if (((*(_2364_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1ad6ebd57_CastExpr> _2418_cast = jule::new_ptr<_1ad6ebd57_CastExpr>(_1ad6ebd57_CastExpr{._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
				if ((_2298_exprTokens.len() == 2LL)) {
					_1bb075d99_pushErr(_self_, _2298_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2288_typeTokens.len() == 2LL)) {
					_1bb075d99_pushErr(_self_, _2288_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2288_typeTokens).mut_slice(1LL, (_2288_typeTokens.len() - 1LL));;
					jule::I64 _2559_typeIndex = 0LL;;
					jule::Ptr<_1ad6e51b3_TypeDecl> _2569_t;
					jule::Bool _25612_ok;
					({
						__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType((*(_self_))._field_p, &(_2288_typeTokens), (&(_2559_typeIndex)), true);
						_2569_t = __jule_assign_result.__jule_result_arg0;
						_25612_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_25612_ok && (_2559_typeIndex < _2288_typeTokens.len()))) {
						_1bb075d99_pushErr(_self_, _2288_typeTokens[_2559_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_25612_ok))) {
						return _2418_cast;;
					};
					(*(_2418_cast))._field_Kind=_2569_t;
					if ((_2298_exprTokens.len() > 2LL)) {
						jule::I64 _26610_j = 0LL;;
						_1bb084616_range(&(_26610_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2298_exprTokens));
						if ((_26610_j < _2298_exprTokens.len())) {
							return nullptr;;
						};
						(_2298_exprTokens).mut_slice(0LL, _26610_j);;
						(*_2418_cast.alloc)._field_Expr=_1bb080942_buildFromTokens(_self_, _2298_exprTokens);
					};
				};
				return _2418_cast;;
			}
			_iter_next_1c000d59c:;
			++it;
			_2097_i++;
			goto _iter_begin_1c000d59c;
		}
		_iter_end_1c000d59c:;
	};
	return nullptr;;
}



inline void _1bb0793a8_pushArg(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _28152_tokens, jule::Ptr<_1ad6ceb70_Token> _28177_errToken) {
	if ((_28152_tokens.len() == 0LL)) {
		_1bb075d99_pushErr(_self_, _28177_errToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> &__jule_push_dest = (*(_28128_args)); __jule_push_dest.push(_1bb080942_buildFromTokens(_self_, _28152_tokens)); };
}



inline jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _1bb0796e9_buildArgs(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _29029_tokens) {
	if ((_29029_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _29611_args = nullptr;;
	jule::I64 _2977_last = 0LL;;
	jule::I64 _2987_rangeN = 0LL;;
	(_29029_tokens).mut_slice(1LL, (_29029_tokens.len() - 1LL));;
	{
		auto expr = &(_29029_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c001beb2:;
		if (it != expr_end) {
			jule::I64 _3007_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> _30010_token = *it;
			{
				{
					auto &_match_expr{ (*(_30010_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c001cb94:;
						{
							(_2987_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c001d07e:;
						{
							(_2987_rangeN)--;
						}
					}
					_match_end_1c001ce80:;
				};
				if (((_2987_rangeN > 0LL) || ((*(_30010_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1c001beb2;
				};
				_1bb0793a8_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last, _3007_i), _30010_token);
				_2977_last=(_3007_i + 1LL);
			}
			_iter_next_1c001beb2:;
			++it;
			_3007_i++;
			goto _iter_begin_1c001beb2;
		}
		_iter_end_1c001beb2:;
	};
	if ((_2977_last < _29029_tokens.len())) {
		if ((_2977_last == 0LL)) {
			if ((_29029_tokens.len() > 0LL)) {
				_1bb0793a8_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[_2977_last]);
			};
		} else {
			_1bb0793a8_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[(_2977_last - 1LL)]);
		};
	};
	return _29611_args;;
}



inline jule::Ptr<_1ad6ed221_FnCallExpr> _1bb079ee1_buildFnCall(_1bb0756a1_exprBuilder* _self_, jule::Ptr<_1ad6ceb70_Token>* _35632_token, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _35687_args) {
	return jule::new_ptr<_1ad6ed221_FnCallExpr>(_1ad6ed221_FnCallExpr{._field_Token=(*(_35632_token)), ._field_Expr=_1bb080942_buildFromTokens(_self_, (*(_35659_expr))), ._field_Args=_1bb0796e9_buildArgs(_self_, (*(_35687_args))), ._field_Exception=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1bb07a332_buildParenthesesRange(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _36442_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _3657_token = (*(_36442_tokens))[0LL];;
	if (((*(_3657_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1ad6ebd57_CastExpr> _3678_expr = _1bb078e8a_tryBuildCast(_self_, _36442_tokens);;
		if ((_3678_expr != nullptr)) {
			return jule::Any(_3678_expr, &__jule_any_type108);;
		};
	};
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _3727_exprTokens;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _37223_argsTokens;
	({
		__jule_tuple_sx_1ad6ceb70_Token__jule_tuple_sx_1ad6ceb70_Token __jule_assign_result = _1bb0848d0_rangeLast(_36442_tokens);
		_3727_exprTokens = __jule_assign_result.__jule_result_arg0;
		_37223_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3727_exprTokens.len() == 0LL)) {
		return jule::Any(_1bb078b49_buildBetweenParentheses(_self_, _37223_argsTokens), &__jule_any_type103);;
	};
	if (_1bb08248d_isAnonFnHead(&(_3727_exprTokens))) {
		return jule::Any(_1bb078176_buildType(_self_, _36442_tokens), &__jule_any_type91);;
	};
	return jule::Any(_1bb079ee1_buildFnCall(_self_, &(_3657_token), &(_3727_exprTokens), &(_37223_argsTokens)), &__jule_any_type84);;
}



inline jule::Ptr<_1ad6ea85b_UnsafeExpr> _1bb07a673_buildUnsafeExpr(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _38635_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _3877_token = _38635_tokens[0LL];;
	(_38635_tokens).mut_slice(1LL);;
	jule::I64 _3897_i = 0LL;;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _3907_rangeTokens = _1bb084616_range(&(_3897_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_38635_tokens));;
	if ((_3907_rangeTokens.len() == 0LL)) {
		_1bb075d99_pushErr(_self_, _38635_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ad6ea85b_UnsafeExpr>(_1ad6ea85b_UnsafeExpr{._field_Token=_3877_token, ._field_Expr=_1bb080942_buildFromTokens(_self_, _3907_rangeTokens)});;
}



inline jule::Ptr<_1ad706d73_FnDecl> _1bb07a9b4_buildAnonFn(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _40132_tokens) {
	jule::Ptr<_1ad706d73_FnDecl> _4027_f = _1bb08cad6_buildFn((*(_self_))._field_p, _40132_tokens, false, false);;
	if ((!(_1ad707219_IsAnon(_4027_f.ptr())))) {
		_1bb075d99_pushErr(_self_, (*_4027_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4027_f;;
}



inline jule::Any _1bb07ad05_buildUnsafe(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _41032_tokens) {
	{
		auto &_match_expr{ (*((*(_41032_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c0030aca:;
			{
				return jule::Any(_1bb07a9b4_buildAnonFn(_self_, _41032_tokens), &__jule_any_type67);;
			}
		}
		else {
			_case_begin_1c002ee70:;
			{
				return jule::Any(_1bb07a673_buildUnsafeExpr(_self_, (*(_41032_tokens))), &__jule_any_type105);;
			}
		}
		_match_end_1c00303b0:;
	};
}



inline void _1bb07b223_pushRangeLitPart(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _42036_part, jule::Ptr<_1ad6ceb70_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>>* _42135_parts) {
	if ((_42036_part.len() == 0LL)) {
		_1bb075d99_pushErr(_self_, _4213_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> &__jule_push_dest = (*(_42135_parts)); __jule_push_dest.push(_42036_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1bb07b564_getBraceRangeLitExprParts(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _43145_tokens) {
	if ((_43145_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _43711_parts = nullptr;;
	jule::I64 _4397_last = 0LL;;
	jule::I64 _4407_rangeN = 0LL;;
	(_43145_tokens).mut_slice(1LL, (_43145_tokens.len() - 1LL));;
	{
		auto expr = &(_43145_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c003435e:;
		if (it != expr_end) {
			jule::I64 _4427_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> _44210_token = *it;
			{
				{
					auto &_match_expr{ (*(_44210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c0035041:;
						{
							(_4407_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c003542b:;
						{
							(_4407_rangeN)--;
						}
					}
					_match_end_1c003532c:;
				};
				if (((_4407_rangeN > 0LL) || ((*(_44210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1c003435e;
				};
				_1bb07b223_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last, _4427_i), _44210_token, &(_43711_parts));
				_4397_last=(_4427_i + 1LL);
			}
			_iter_next_1c003435e:;
			++it;
			_4427_i++;
			goto _iter_begin_1c003435e;
		}
		_iter_end_1c003435e:;
	};
	if ((_4397_last < _43145_tokens.len())) {
		if ((_4397_last == 0LL)) {
			if ((_43145_tokens.len() > 0LL)) {
				_1bb07b223_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[_4397_last], &(_43711_parts));
			};
		} else {
			_1bb07b223_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[(_4397_last - 1LL)], &(_43711_parts));
		};
	};
	return _43711_parts;;
}



inline jule::Ptr<_1ad6edc16_FieldExprPair> _1bb07b8a5_buildFieldExprPair(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _47338_tokens) {
	if (((_47338_tokens.len() - 2LL) == 0LL)) {
		_1bb075d99_pushErr(_self_, _47338_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad6edc16_FieldExprPair> _4787_pair = jule::new_ptr<_1ad6edc16_FieldExprPair>(_1ad6edc16_FieldExprPair{._field_Field=_47338_tokens[0LL], ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
	(_47338_tokens).mut_slice(2LL);;
	(*(_4787_pair))._field_Expr=_1bb080942_buildFromTokens(_self_, _47338_tokens);
	return _4787_pair;;
}



inline jule::Ptr<_1ad6e94e7_Expr> _1bb07bbe6_buildStructLitExpr(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _48639_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _4877_token = (*(_48639_tokens))[0LL];;
	if ((((*(_4877_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_48639_tokens)).len() > 1LL))) {
		_4877_token=(*(_48639_tokens))[1LL];
		if (((*_4877_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1ad6e94e7_Expr>(_1ad6e94e7_Expr{._field_Token=_4877_token, ._field_End=(*(_48639_tokens))[((*(_48639_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1bb07b8a5_buildFieldExprPair(_self_, (*(_48639_tokens))), &__jule_any_type80)});;
		};
	};
	return _1bb080942_buildFromTokens(_self_, (*(_48639_tokens)));;
}



inline jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _1bb07c037_buildStructLitExprs(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _50140_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _5027_parts = _1bb07b564_getBraceRangeLitExprParts(_self_, (*(_50140_tokens)));;
	if ((_5027_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> _5077_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>::alloc(0LL, _5027_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e94e7_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5027_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c003dc3c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _50815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ad6e94e7_Expr>> &__jule_push_dest = _5077_pairs; __jule_push_dest.push(_1bb07bbe6_buildStructLitExpr(_self_, &(_50815_part))); };
			}
			_iter_next_1c003dc3c:;
			++it;
			goto _iter_begin_1c003dc3c;
		}
		_iter_end_1c003dc3c:;
	};
	return _5077_pairs;;
}



inline jule::Ptr<_1ad6ee541_StructLit> _1bb07c378_buildTypedStructLiteral(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _51443_tokens) {
	jule::I64 _5157_i = 0LL;;
	jule::Ptr<_1ad6e51b3_TypeDecl> _5167_t;
	jule::Bool _51610_ok;
	({
		__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType((*(_self_))._field_p, &(_51443_tokens), (&(_5157_i)), true);
		_5167_t = __jule_assign_result.__jule_result_arg0;
		_51610_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_51610_ok))) {
		return nullptr;;
	} else if ((_5157_i >= _51443_tokens.len())) {
		_1bb075d99_pushErr(_self_, _51443_tokens[_5157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51443_tokens).mut_slice(_5157_i);;
	jule::Ptr<_1ad6ceb70_Token> _5253_token = _51443_tokens[0LL];;
	if (((*(_5253_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1bb075d99_pushErr(_self_, _5253_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ad6ee541_StructLit>(_1ad6ee541_StructLit{._field_End=_51443_tokens[(_51443_tokens.len() - 1LL)], ._field_Kind=_5167_t, ._field_Exprs=_1bb07c037_buildStructLitExprs(_self_, &(_51443_tokens))});;
}



inline jule::Ptr<_1ad6e94e7_Expr> _1bb07c6b9_buildBraceLitPart(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _53838_tokens) {
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _5397_l;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _53914_r;
	({
		__jule_tuple_sx_1ad6ceb70_Token__jule_tuple_sx_1ad6ceb70_Token __jule_assign_result = _1bb081767_splitDelim(_53838_tokens, static_cast<jule::U64>(8LLU));
		_5397_l = __jule_assign_result.__jule_result_arg0;
		_53914_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5397_l != nullptr)) {
		return jule::new_ptr<_1ad6e94e7_Expr>(_1ad6e94e7_Expr{._field_Token=(*(_53838_tokens))[0LL], ._field_End=(*(_53838_tokens))[((*(_53838_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1ad700322_KeyValPair>(_1ad700322_KeyValPair{._field_Key=_1bb080942_buildFromTokens(_self_, _5397_l), ._field_Val=_1bb080942_buildFromTokens(_self_, _53914_r), ._field_Colon=(*(_53838_tokens))[_5397_l.len()]}), &__jule_any_type81)});;
	};
	return _1bb080942_buildFromTokens(_self_, (*(_53838_tokens)));;
}



inline jule::Ptr<_1ad6ee9e7_BraceLit> _1bb07ca0a_buildBraceLit(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _55534_tokens) {
	jule::Ptr<_1ad6ee9e7_BraceLit> _5567_lit = jule::new_ptr<_1ad6ee9e7_BraceLit>(_1ad6ee9e7_BraceLit{._field_Token=(*(_55534_tokens))[0LL], ._field_End=(*(_55534_tokens))[((*(_55534_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _5617_parts = _1bb07b564_getBraceRangeLitExprParts(_self_, (*(_55534_tokens)));;
	if ((_5617_parts == nullptr)) {
		return _5567_lit;;
	};
	(*(_5567_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>::alloc(0LL, _5617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e94e7_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c004895b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _56715_part = *it;
			{
				(*_5567_lit.alloc)._field_Exprs=jule::append((*_5567_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bb07c6b9_buildBraceLitPart(_self_, &(_56715_part)); __jule_collection; }));
			}
			_iter_next_1c004895b:;
			++it;
			goto _iter_begin_1c004895b;
		}
		_iter_end_1c004895b:;
	};
	return _5567_lit;;
}



inline jule::Any _1bb07cd4b_buildBraceRange(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _57436_tokens) {
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _5757_exprTokens;
	jule::I64 _57519_rangeN;
	({
		__jule_tuple_sx_1ad6ceb70_Token__jule_tuple_int __jule_assign_result = _1bb0820b4_getRangeExprTokens(_57436_tokens);
		_5757_exprTokens = __jule_assign_result.__jule_result_arg0;
		_57519_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5757_exprTokens.len() == 0LL)) {
			_case_begin_1c004a3a8:;
			{
				return jule::Any(_1bb07ca0a_buildBraceLit(_self_, _57436_tokens), &__jule_any_type110);;
			}
		}
		else if ((_57519_rangeN > 0LL)) {
			_case_begin_1c004a441:;
			{
				_1bb075d99_pushErr(_self_, (*(_57436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c004a342:;
	};
	jule::Ptr<_1ad6ceb70_Token> _5863_elseToken = _5757_exprTokens[(_5757_exprTokens.len() - 1LL)];;
	if (((*(_5757_exprTokens[(_5757_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5757_exprTokens).mut_slice(0LL, (_5757_exprTokens.len() - 1LL));;
		jule::Any _5898_d = _1bb0802b0_build(_self_, &(_5757_exprTokens));;
		if ((_5898_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _5898_d };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1c004d28a:;
				{
					((*(_57436_tokens))).mut_slice((_5757_exprTokens.len() + 1LL));;
					jule::I64 _5969_i = 0LL;;
					jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _5979_rangeTokens = _1bb084616_range(&(_5969_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _57436_tokens);;
					jule::Ptr<_1ad6ed221_FnCallExpr> _5989_model = _5898_d.unsafe_cast_ptr<_1ad6ed221_FnCallExpr>();;
					if (_1ad6ed85e_Ignored(_5989_model.ptr())) {
						_1bb075d99_pushErr(_self_, _5863_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*_5989_model.alloc)._field_Exception=_1bb087ae2_buildScope((*(_self_))._field_p, &(_5979_rangeTokens), (*(_57436_tokens))[(_5969_i - 1LL)]);
					return _5898_d;;
				}
			}
			else {
				_case_begin_1c004cde4:;
				{
					_1bb075d99_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1c004d334:;
		};
	};
	{
		auto &_match_expr{ (*(_5757_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c0052adb:;
			{
				return _1bb07ad05_buildUnsafe(_self_, _57436_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c005338e:;
			{
				return jule::Any(_1bb07a9b4_buildAnonFn(_self_, _57436_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c0053405:;
			{
				return jule::Any(_1bb07c378_buildTypedStructLiteral(_self_, (*(_57436_tokens))), &__jule_any_type109);;
			}
		}
		else {
			_case_begin_1c0050be9:;
			{
				_1bb075d99_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c00526ce:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1bb07d18c_getEnumerableParts(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _62638_tokens) {
	(_62638_tokens).mut_slice(1LL, (_62638_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _6287_parts;
	jule::Slice<_1dd356476_Log> _62814_errors;
	({
		__jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb084d86_parts(&(_62638_tokens), static_cast<jule::U64>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_62814_errors);
	return _6287_parts;;
}



inline jule::Ptr<_1ad700a4d_SliceExpr> _1bb07d4cd_buildSlice(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _63330_tokens) {
	jule::Ptr<_1ad700a4d_SliceExpr> _6347_slc = jule::new_ptr<_1ad700a4d_SliceExpr>(_1ad700a4d_SliceExpr{._field_Token=_63330_tokens[0LL], ._field_End=_63330_tokens[(_63330_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _6397_parts = _1bb07d18c_getEnumerableParts(_self_, _63330_tokens);;
	if ((_6397_parts.len() == 0LL)) {
		return _6347_slc;;
	};
	(*(_6347_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>::alloc(0LL, _6397_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e94e7_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6397_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0058284:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _64515_p = *it;
			{
				if ((_64515_p.len() == 0LL)) {
					goto _iter_next_1c0058284;
				};
				(*_6347_slc.alloc)._field_Exprs=jule::append((*_6347_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e94e7_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bb080942_buildFromTokens(_self_, _64515_p); __jule_collection; }));
			}
			_iter_next_1c0058284:;
			++it;
			goto _iter_begin_1c0058284;
		}
		_iter_end_1c0058284:;
	};
	return _6347_slc;;
}



inline jule::Ptr<_1ad7014aa_IndexingExpr> _1bb07d984_buildIndexing(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _6567_tokens, jule::Ptr<_1ad6ceb70_Token> _65636_errorToken) {
	jule::Ptr<_1ad6ceb70_Token> _6577_end = _6567_tokens[(_6567_tokens.len() - 1LL)];;
	(_6567_tokens).mut_slice(1LL, (_6567_tokens.len() - 1LL));;
	if ((_6567_tokens.len() == 0LL)) {
		_1bb075d99_pushErr(_self_, _65636_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad6e94e7_Expr> _6637_expr = _1bb080942_buildFromTokens(_self_, _65533_exprTokens);;
	if ((_6637_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad6e94e7_Expr> _6677_index = _1bb080942_buildFromTokens(_self_, _6567_tokens);;
	if ((_6677_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ad7014aa_IndexingExpr>(_1ad7014aa_IndexingExpr{._field_Token=_65636_errorToken, ._field_End=_6577_end, ._field_Expr=_6637_expr, ._field_Index=_6677_index});;
}



inline jule::Ptr<_1ad701b1a_SlicingExpr> _1bb07e0a0_buildSlicing(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _67967_start, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _6808_to, jule::Ptr<_1ad6ceb70_Token>* _68034_errorToken, jule::Ptr<_1ad6ceb70_Token> _68065_end) {
	jule::Ptr<_1ad701b1a_SlicingExpr> _6817_slc = jule::new_ptr<_1ad701b1a_SlicingExpr>(_1ad701b1a_SlicingExpr{._field_Token=(*(_68034_errorToken)), ._field_End=_68065_end, ._field_Expr=_1bb080942_buildFromTokens(_self_, (*(_67933_exprTokens))), ._field_Start=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_To=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
	if (((*(_67967_start)).len() > 0LL)) {
		(*(_6817_slc))._field_Start=_1bb080942_buildFromTokens(_self_, (*(_67967_start)));
	};
	if (((*(_6808_to)).len() > 0LL)) {
		(*_6817_slc.alloc)._field_To=_1bb080942_buildFromTokens(_self_, (*(_6808_to)));
	};
	return _6817_slc;;
}



inline jule::Any _1bb07e3e1_buildBracketRange(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _69537_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _6967_errorToken = _69537_tokens[0LL];;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _6977_exprTokens;
	jule::I64 _69719_rangeN;
	({
		__jule_tuple_sx_1ad6ceb70_Token__jule_tuple_int __jule_assign_result = _1bb0820b4_getRangeExprTokens(&(_69537_tokens));
		_6977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_69719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_6977_exprTokens.len() == 0LL)) {
		return jule::Any(_1bb07d4cd_buildSlice(_self_, _69537_tokens), &__jule_any_type96);;
	} else if ((_69719_rangeN > 0LL)) {
		_1bb075d99_pushErr(_self_, _6967_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_69537_tokens).mut_slice(_6977_exprTokens.len());;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _7127_splitTokens = _69537_tokens.slice(1LL, (_69537_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _7137_start;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _71318_to;
	({
		__jule_tuple_sx_1ad6ceb70_Token__jule_tuple_sx_1ad6ceb70_Token __jule_assign_result = _1bb081767_splitDelim(&(_7127_splitTokens), static_cast<jule::U64>(8LLU));
		_7137_start = __jule_assign_result.__jule_result_arg0;
		_71318_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7137_start != nullptr) || (_71318_to != nullptr))) {
		return jule::Any(_1bb07e0a0_buildSlicing(_self_, &(_6977_exprTokens), &(_7137_start), &(_71318_to), &(_6967_errorToken), _69537_tokens[(_69537_tokens.len() - 1LL)]), &__jule_any_type107);;
	};
	return jule::Any(_1bb07d984_buildIndexing(_self_, _6977_exprTokens, _69537_tokens, _6967_errorToken), &__jule_any_type106);;
}



inline jule::Any _1bb07e732_buildExclRight(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _72035_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _7213_token = (*(_72035_tokens))[((*(_72035_tokens)).len() - 1LL)];;
	((*(_72035_tokens))).mut_slice(0LL, ((*(_72035_tokens)).len() - 1LL));;
	jule::Any _7237_d = _1bb0802b0_build(_self_, _72035_tokens);;
	if ((_7237_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7237_d };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c0065d63:;
			{
				(*(_7237_d.unsafe_cast_ptr<_1ad6ed221_FnCallExpr>()))._field_Exception=jule::new_ptr<_1ad7051d4_ScopeTree>(_1ad7051d4_ScopeTree{._field_Parent=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1ad704a74_Stmt>(nullptr), ._field_End=jule::Ptr<_1ad6ceb70_Token>(nullptr)});
				return _7237_d;;
			}
		}
		_match_end_1c006624d:;
	};
	_1bb075d99_pushErr(_self_, _7213_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1bb07ea73_buildData(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _73830_tokens) {
	{
		auto _match_expr{ (*(_73830_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c0067969:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c00679d0:;
			{
				return _1bb077021_buildSingle(_self_, (*(_73830_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c0067a46:;
			{
				if (((*((*(_73830_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1bb077362_buildBindIdent(_self_, _73830_tokens), &__jule_any_type41);;
				};
			}
		}
		_match_end_1c0067837:;
	};
	jule::Ptr<_1ad6ceb70_Token> _7507_token = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
	if (((*(_7507_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1bb078808_buildVariadic(_self_, (*(_73830_tokens))), &__jule_any_type78);;
	};
	_7507_token=(*(_73830_tokens))[0LL];
	if (_1ad6d03ac_IsUnaryOp((*_7507_token.alloc)._field_Id)) {
		if (((*(_73830_tokens)).len() > 1LL)) {
			_7507_token=(*(_73830_tokens))[1LL];
			if (((*_7507_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1bb078176_buildType(_self_, _73830_tokens), &__jule_any_type91);;
			};
		};
		return jule::Any(_1bb0776a3_buildUnary(_self_, (*(_73830_tokens))), &__jule_any_type90);;
	};
	if (((*(_73830_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7507_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1c006c30e:;
				{
					if (((*(_73830_tokens)).len() > 3LL)) {
						jule::Ptr<_1ad6ceb70_Token> _7766_t = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
						if (((*(_7766_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1c006c5d9;
						};
					};
					jule::Ptr<_1ad6ceb70_Token> _7825_next = (*(_73830_tokens))[1LL];;
					if (((*(_7825_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1c006c5d9;
					};
					return jule::Any(_1bb078176_buildType(_self_, _73830_tokens), &__jule_any_type91);;
				}
			}
			_match_end_1c006c5d9:;
		};
	};
	_7507_token=(*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7507_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c00707da:;
			{
				return _1bb0784b7_buildSubIdent(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1c0070851:;
			{
				return _1bb07e732_buildExclRight(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1c00708b7:;
			{
				return _1bb07a332_buildParenthesesRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1c007092d:;
			{
				return _1bb07cd4b_buildBraceRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1c0070994:;
			{
				return _1bb07e3e1_buildBracketRange(_self_, (*(_73830_tokens)));;
			}
		}
		_match_end_1c0070774:;
	};
	_1bb075d99_pushErr(_self_, _7507_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1bb07ee6e_buildBinary(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _80732_tokens, jule::I64 _80757_i) {
	jule::Ptr<_1ad6ceb70_Token> _8087_op = (*(_80732_tokens))[_80757_i];;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _8097_leftTokens = (*(_80732_tokens)).slice(0LL, _80757_i);;
	if ((_1bb080cc7_isTypeOp(&((*(_8087_op))._field_Id)) && _1bb0810d5_isTypeRange(&(_8097_leftTokens)))) {
		return jule::Any(_1bb078176_buildType(_self_, _80732_tokens), &__jule_any_type91);;
	};
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _8147_rightTokens = (*(_80732_tokens)).slice((_80757_i + 1LL));;
	if ((_8097_leftTokens.len() == 0LL)) {
		_1bb075d99_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8147_rightTokens.len() == 0LL)) {
		_1bb075d99_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb07620c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1ad6ecab1_BinaryExpr>(_1ad6ecab1_BinaryExpr{._field_Left=_1bb080942_buildFromTokens(_self_, _8097_leftTokens), ._field_Right=_1bb080942_buildFromTokens(_self_, _8147_rightTokens), ._field_Op=_8087_op}), &__jule_any_type111);;
}



inline jule::Any _1bb0802b0_build(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _83226_tokens) {
	if (((*((*(_83226_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1bb078176_buildType(_self_, _83226_tokens), &__jule_any_type91);;
	};
	jule::I64 _8363_i = _1bb081a31_findLowestPrecOp(_83226_tokens);;
	if ((_8363_i == -1LL)) {
		return _1bb07ea73_buildData(_self_, _83226_tokens);;
	};
	return _1bb07ee6e_buildBinary(_self_, _83226_tokens, _8363_i);;
}



inline jule::Any _1bb080601_buildKind(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _84330_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _8447_parts;
	jule::Slice<_1dd356476_Log> _84414_errors;
	({
		__jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb084d86_parts(_84330_tokens, static_cast<jule::U64>(5LLU), true);
		_8447_parts = __jule_assign_result.__jule_result_arg0;
		_84414_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_84414_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_84414_errors);
		return nullptr;;
	} else if ((_8447_parts.len() > 1LL)) {
		return jule::Any(_1bb07654d_buildTuple(_self_, &(_8447_parts)), &__jule_any_type82);;
	};
	return _1bb0802b0_build(_self_, _84330_tokens);;
}



inline jule::Ptr<_1ad6e94e7_Expr> _1bb080942_buildFromTokens(_1bb0756a1_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _85435_tokens) {
	if ((_85435_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8587_kind = _1bb080601_buildKind(_self_, &(_85435_tokens));;
	if ((_8587_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ad6e94e7_Expr>(_1ad6e94e7_Expr{._field_Token=_85435_tokens[0LL], ._field_End=_85435_tokens[(_85435_tokens.len() - 1LL)], ._field_Kind=_8587_kind});;
}











inline void _1bb086294_stop(_1bb085e64_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1bb08652a_stopped(_1bb085e64_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1bb086948_pushErr(_1bb085e64_parser* _self_, jule::Ptr<_1ad6ceb70_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args) {
	{ jule::Slice<_1dd356476_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1bb08554b_compilerErr(&(_16923_token), &(_16945_fmt), _16965_args)); };
}



inline void _1bb086cab_pushSuggestion(_1bb085e64_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args) {
	{
		_1bb0858e2_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _17430_fmt, _17450_args);
	};
}



inline jule::Ptr<_1ad6e94e7_Expr> _1bb0870ec_buildExpr(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _17831_tokens) {
	return _1bb080942_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_17831_tokens)));;
}



inline jule::Ptr<_1ad6e45d0_Directive> _1bb08743d_buildDirective(_1bb085e64_parser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _18234_tokens) {
	if ((_18234_tokens.len() == 1LL)) {
		_1bb086948_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_18234_tokens[1LL]))._field_Column != ((*(_18234_tokens[0LL]))._field_Column + 1LL))) {
		_1bb086948_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ad6e45d0_Directive>(_1ad6e45d0_Directive{._field_Tag=_18234_tokens[1LL], ._field_Args=_18234_tokens.slice(2LL)});;
}



inline void _1bb0876e6_pushDirective(_1bb085e64_parser* _self_, jule::Ptr<_1ad6e45d0_Directive> _19733_d) {
	if ((_19733_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c009ce55:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e45d0_Directive> _20210_pd = *it;
			{
				if (((*((*(_19733_d))._field_Tag))._field_Kind == (*(*(_20210_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1c009ce55:;
			++it;
			goto _iter_begin_1c009ce55;
		}
		_iter_end_1c009ce55:;
	};
	{ jule::Slice<jule::Ptr<_1ad6e45d0_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_19733_d); };
}



inline jule::Ptr<_1ad7051d4_ScopeTree> _1bb087ae2_buildScope(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _21032_tokens, jule::Ptr<_1ad6ceb70_Token> _21061_end) {
	jule::Ptr<_1ad7051d4_ScopeTree> _2117_s = _1bb066164_newScope();;
	(*(_2117_s))._field_End=_21061_end;
	_1bb067c6a_scopeParser _2137_sp = _1bb067c6a_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1bb0673c9_stmt>>(nullptr), ._field_pos=0};;
	_1bb074b56_build(&_2137_sp, _21032_tokens, &(_2117_s));
	return _2117_s;;
}



inline __jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool _1bb088098__buildType(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _22039_tokens, jule::I64* _2217_i, jule::Bool _22116_err) {
	__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1bb09711d_typeBuilder _2227_tb = _1bb09711d_typeBuilder{._field_p=_self_, ._field_tokens=(*(_22039_tokens)), ._field_i=_2217_i, ._field_err=_22116_err};;
	__jule_func_result = std::move(_1bb09a132_build(&_2227_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool _1bb08854e_buildType(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _23238_tokens, jule::I64* _2337_i, jule::Bool _23316_err) {
	__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ad6ceb70_Token> _2343_token = (*(_23238_tokens))[(*(_2337_i))];;
	jule::Ptr<_1ad6e51b3_TypeDecl> _2357_t;
	jule::Bool _23510_ok;
	({
		__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb088098__buildType(_self_, _23238_tokens, _2337_i, _23316_err);
		_2357_t = __jule_assign_result.__jule_result_arg0;
		_23510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_23316_err && (!(_23510_ok)))) {
		_1bb086948_pushErr(_self_, _2343_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2357_t;
	__jule_func_result.__jule_result_arg1 = _23510_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1ad70bbd0_TypeAliasDecl> _1bb088890_buildTypeAliasDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _24240_tokens) {
	jule::I64 _2437_i = 1LL;;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1bb086948_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad70bbd0_TypeAliasDecl> _2487_tad = jule::new_ptr<_1ad70bbd0_TypeAliasDecl>(_1ad70bbd0_TypeAliasDecl{._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_24240_tokens))[1LL], ._field_Ident=(*((*(_24240_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr)});;
	jule::Ptr<_1ad6ceb70_Token> _2527_token = (*(_24240_tokens))[_2437_i];;
	if (((*(_2527_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb086948_pushErr(_self_, _2527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1bb086948_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	_2527_token=(*(_24240_tokens))[_2437_i];
	if (((*_2527_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1bb086948_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1bb086948_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	jule::Ptr<_1ad6e51b3_TypeDecl> _2737_t;
	jule::Bool _27310_ok;
	({
		__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, _24240_tokens, (&(_2437_i)), true);
		_2737_t = __jule_assign_result.__jule_result_arg0;
		_27310_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2487_tad))._field_Kind=_2737_t;
	if ((_27310_ok && (_2437_i < (*(_24240_tokens)).len()))) {
		_1bb086948_pushErr(_self_, (*(_24240_tokens))[_2437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2487_tad.alloc)._field_Public=_1ad90c078_IsPub((*_2487_tad.alloc)._field_Ident);
	return _2487_tad;;
}



inline void _1bb088c03_buildVarTypeAndExpr(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad70802d_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _28264_tokens) {
	jule::I64 _2837_i = 0LL;;
	jule::Ptr<_1ad6ceb70_Token> _2847_tok = (*(_28264_tokens))[_2837_i];;
	if (((*(_2847_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_2837_i)++;
		if (((_2837_i >= (*(_28264_tokens)).len()) || ((*((*(_28264_tokens))[_2837_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1bb086948_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1ad6e51b3_TypeDecl> _2918_t;
		jule::Bool _29111_ok;
		({
			__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, _28264_tokens, (&(_2837_i)), true);
			_2918_t = __jule_assign_result.__jule_result_arg0;
			_29111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_29111_ok) {
			(*((*(_28241_v))))._field_Kind=_2918_t;
			if ((_2837_i >= (*(_28264_tokens)).len())) {
				return;;
			};
			_2847_tok=(*(_28264_tokens))[_2837_i];
		};
	};
	if (((*_2847_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1bb086948_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Setter=_2847_tok;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _3077_exprTokens = (*(_28264_tokens)).slice((_2837_i + 1LL));;
	if ((_3077_exprTokens.len() == 0LL)) {
		_1bb086948_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Expr=_1bb0870ec_buildExpr(_self_, &(_3077_exprTokens));
}



inline void _1bb089066_buildVarCommon(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad70802d_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _31558_tokens) {
	(*((*(_31536_v))))._field_Token=_31558_tokens[0LL];
	if (((*((*((*(_31536_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb086948_pushErr(_self_.ptr(), (*((*(_31536_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_31536_v))))._field_Ident=(*(*((*(_31536_v))))._field_Token.alloc)._field_Kind;
	(*((*(_31536_v))))._field_Public=_1ad90c078_IsPub((*((*(_31536_v))))._field_Ident);
	(*((*(_31536_v))))._field_Kind=nullptr;
	if ((_31558_tokens.len() > 1LL)) {
		(_31558_tokens).mut_slice(1LL);;
		_1bb088c03_buildVarTypeAndExpr(_self_, _31536_v, &(_31558_tokens));
	};
}



inline void _1bb0893c9_buildVarBegin(_1bb085e64_parser* _self_, jule::Ptr<_1ad70802d_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _33157_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _3323_tok = (*(_33157_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3323_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c00be6b3:;
			{
				(*((*(_33134_v))))._field_Statically=true;
				goto _case_begin_1c00be372;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c00be372:;
			{
				if (((*(_33157_tokens)).len() == 1LL)) {
					(*(_33157_tokens))=nullptr;
					_1bb086948_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_33157_tokens))).mut_slice(1LL);;
				if (((*((*(_33157_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_33134_v))))._field_Mutable=true;
					((*(_33157_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1c00be3d8:;
			{
				(*((*(_33134_v))))._field_Constant=true;
				((*(_33157_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1c00be064:;
			{
				(*(_33157_tokens))=nullptr;
				_1bb086948_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c00be30b:;
	};
}



inline jule::Ptr<_1ad70802d_VarDecl> _1bb08971a_buildVar(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _35929_tokens) {
	jule::Ptr<_1ad70802d_VarDecl> _3607_v = jule::new_ptr<_1ad70802d_VarDecl>(_1ad70802d_VarDecl{._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_Token=_35929_tokens[0LL], ._field_Setter=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
	_1bb0893c9_buildVarBegin(_self_.ptr(), &(_3607_v), &(_35929_tokens));
	if ((_35929_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_35929_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3607_v))._field_Reference=true;
		if ((_35929_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_35929_tokens).mut_slice(1LL);;
	};
	_1bb089066_buildVarCommon(_self_, &(_3607_v), _35929_tokens);
	return _3607_v;;
}



inline jule::Ptr<_1ad7023bd_GenericDecl> _1bb089a5b_buildGeneric(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _37834_tokens) {
	jule::Ptr<_1ad7023bd_GenericDecl> _3797_g = jule::new_ptr<_1ad7023bd_GenericDecl>(_1ad7023bd_GenericDecl{._field_Token=(*(_37834_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1ad701e17_Constraint>(nullptr)});;
	if (((*((*(_3797_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb086948_pushErr(_self_.ptr(), (*_3797_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_3797_g.alloc)._field_Ident=(*(*(_3797_g))._field_Token.alloc)._field_Kind;
	if (((*(_37834_tokens)).len() > 1LL)) {
		if (((*((*(_37834_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1bb086948_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_37834_tokens)).len() == 2LL)) {
			_1bb086948_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _3968_constraintTokens = (*(_37834_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _3978_parts;
		jule::Slice<_1dd356476_Log> _39715_errors;
		({
			__jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb084d86_parts(&(_3968_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_3978_parts = __jule_assign_result.__jule_result_arg0;
			_39715_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_39715_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_39715_errors);
			return nullptr;;
		};
		(*_3797_g.alloc)._field_Constraint=jule::new_ptr<_1ad701e17_Constraint>(_1ad701e17_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>::alloc(0LL, _3978_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_3978_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c00cc5b1:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _40316_part = *it;
				{
					jule::I64 _4049_i = 0LL;;
					jule::Ptr<_1ad6e51b3_TypeDecl> _4059_kind;
					({
						__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, &(_40316_part), (&(_4049_i)), true);
						_4059_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_3797_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_3797_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4059_kind; __jule_collection; }));
					if ((_4049_i < _40316_part.len())) {
						_1bb086948_pushErr(_self_, _40316_part[_4049_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1c00cc5b1:;
				++it;
				goto _iter_begin_1c00cc5b1;
			}
			_iter_end_1c00cc5b1:;
		};
	};
	return _3797_g;;
}



inline jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> _1bb089e57_buildGenerics(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _41535_tokens, jule::Ptr<_1ad6ceb70_Token>* _41561_errorToken) {
	if (((*(_41535_tokens)).len() == 0LL)) {
		_1bb086948_pushErr(_self_.ptr(), (*(_41561_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _4217_parts;
	jule::Slice<_1dd356476_Log> _42114_errors;
	({
		__jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb084d86_parts(_41535_tokens, static_cast<jule::U64>(5LLU), true);
		_4217_parts = __jule_assign_result.__jule_result_arg0;
		_42114_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_42114_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_42114_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> _4277_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>::alloc(0LL, _4217_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad7023bd_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c00d2b38:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _42815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>> &__jule_push_dest = _4277_generics; __jule_push_dest.push(_1bb089a5b_buildGeneric(_self_, &(_42815_part))); };
			}
			_iter_next_1c00d2b38:;
			++it;
			goto _iter_begin_1c00d2b38;
		}
		_iter_end_1c00d2b38:;
	};
	return _4277_generics;;
}



inline jule::Ptr<_1ad705921_ParamDecl> _1bb08a298_buildSelfParam(_1bb085e64_parser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _43534_tokens) {
	if ((_43534_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ad705921_ParamDecl> _4407_param = jule::new_ptr<_1ad705921_ParamDecl>(_1ad705921_ParamDecl{._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4407_param.alloc)._field_Mutable=true;
		if ((_43534_tokens.len() == 1LL)) {
			_1bb086948_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	_1dd0b6912_Builder _4527_ident = static__1dd0b74d4_New(5LL);;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_1dd0c0dd3_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
		if ((_43534_tokens.len() == 1LL)) {
			_1bb086948_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_1dd0c0dd3_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("self", 4)));
		(*_4407_param.alloc)._field_Token=_43534_tokens[0LL];
		if ((_43534_tokens.len() != 1LL)) {
			_1bb086948_pushErr(_self_, _43534_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4407_param.alloc)._field_Ident=_1dd0c16ca_Str(&_4527_ident);
	return _4407_param;;
}



inline void _1bb08a6b6_paramTypeBegin(_1bb085e64_parser* _self_, jule::Ptr<_1ad705921_ParamDecl>* _47535_param, jule::I64* _47564_i, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _47573_tokens) {
	for (; ((*(_47564_i)) < (*(_47573_tokens)).len()); ((*(_47564_i)))++) {
		{
			jule::Ptr<_1ad6ceb70_Token> _4774_token = (*(_47573_tokens))[(*(_47564_i))];;
			if (((*(_4774_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_47535_param))))._field_Variadic) {
				_1bb086948_pushErr(_self_, _4774_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1c00da712;
			};
			(*((*(_47535_param))))._field_Variadic=true;
		}
	_iter_next_1c00da712:;
	}
	_iter_end_1c00da712:;;
}



inline void _1bb08aa29_buildParamType(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad705921_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _49065_tokens) {
	jule::I64 _4917_i = 0LL;;
	_1bb08a6b6_paramTypeBegin(_self_.ptr(), _49036_param, &(_4917_i), _49065_tokens);
	if ((_4917_i >= (*(_49065_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, _49065_tokens, (&(_4917_i)), true);
		(*((*(_49036_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_4917_i < (*(_49065_tokens)).len())) {
		_1bb086948_pushErr(_self_, (*(_49065_tokens))[_4917_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1bb08ad8c_buildParamBody(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad705921_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _50364_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _5047_tok = _50364_tokens[0LL];;
	if ((_50364_tokens.len() == 1LL)) {
		(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
		return;;
	} else if ((_50364_tokens.len() < 3LL)) {
		_1bb086948_pushErr(_self_.ptr(), _5047_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_50364_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_50336_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1bb08aa29_buildParamType(_self_, _50336_param, &(_50364_tokens));
		return;;
	};
	(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
	(_50364_tokens).mut_slice(2LL);;
	_1bb08aa29_buildParamType(_self_, _50336_param, &(_50364_tokens));
}



inline jule::Ptr<_1ad705921_ParamDecl> _1bb08b1cd_buildParam(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _52331_tokens) {
	jule::Ptr<_1ad705921_ParamDecl> _5247_param = jule::new_ptr<_1ad705921_ParamDecl>(_1ad705921_ParamDecl{._field_Token=_52331_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5247_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5247_param.alloc)._field_Mutable=true;
		if ((_52331_tokens.len() == 1LL)) {
			_1bb086948_pushErr(_self_.ptr(), _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_52331_tokens).mut_slice(1LL);;
		(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
	};
	if ((_52331_tokens.len() >= 3LL)) {
		if (((*(*(_5247_param))._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_52331_tokens.len() == 1LL)) {
				_1bb086948_pushErr(_self_, _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_52331_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_52331_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5247_param.alloc)._field_Reference=true;
				(_52331_tokens).mut_slice(1LL);;
				(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
			};
		};
	};
	if (((*(*(_5247_param))._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5247_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1bb08aa29_buildParamType(_self_, &(_5247_param), &(_52331_tokens));
	} else {
		_1bb08ad8c_buildParamBody(_self_, &(_5247_param), _52331_tokens);
	};
	return _5247_param;;
}



inline void _1bb08b486_checkParams(_1bb085e64_parser* _self_, jule::Slice<jule::Ptr<_1ad705921_ParamDecl>>* _56632_params) {
	{
		auto expr = _56632_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c00eb0c4:;
		if (it != expr_end) {
			jule::Ptr<_1ad705921_ParamDecl> _56715_param = *it;
			{
				if ((_1ad705cc8_IsSelf(_56715_param.ptr()) || ((*_56715_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1c00eb0c4;
				};
				if (((*_56715_param.alloc)._field_Token == nullptr)) {
					_1bb086948_pushErr(_self_, (*_56715_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*_56715_param.alloc)._field_Kind=jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ad6e57bd_IdentTypeDecl>(_1ad6e57bd_IdentTypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Ident=(*((*_56715_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>(nullptr)}), &__jule_any_type77)});
					(*_56715_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1c00eb0c4:;
			++it;
			goto _iter_begin_1c00eb0c4;
		}
		_iter_end_1c00eb0c4:;
	};
}



inline jule::Slice<jule::Ptr<_1ad705921_ParamDecl>> _1bb08b882_buildParams(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _58633_tokens, jule::Bool _58658_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _5877_parts;
	jule::Slice<_1dd356476_Log> _58714_errs;
	({
		__jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb084d86_parts(_58633_tokens, static_cast<jule::U64>(5LLU), true);
		_5877_parts = __jule_assign_result.__jule_result_arg0;
		_58714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_58714_errs);
	if ((_5877_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad705921_ParamDecl>> _59311_params = nullptr;;
	if ((_58658_method && (_5877_parts.len() > 0LL))) {
		jule::Ptr<_1ad705921_ParamDecl> _5958_param = _1bb08a298_buildSelfParam(_self_, _5877_parts[0LL]);;
		if (((_5958_param != nullptr) && _1ad705cc8_IsSelf(_5958_param))) {
			{ jule::Slice<jule::Ptr<_1ad705921_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_5958_param); };
			(_5877_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_5877_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0102bbe:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _60215_part = *it;
			{
				if ((_60215_part.len() == 0LL)) {
					goto _iter_next_1c0102bbe;
				};
				jule::Ptr<_1ad705921_ParamDecl> _6068_param = _1bb08b1cd_buildParam(_self_, _60215_part);;
				if ((_6068_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1ad705921_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_6068_param); };
				};
			}
			_iter_next_1c0102bbe:;
			++it;
			goto _iter_begin_1c0102bbe;
		}
		_iter_end_1c0102bbe:;
	};
	_1bb08b486_checkParams(_self_, &(_59311_params));
	return _59311_params;;
}



inline __jule_tuple_x_1ad6e80a6_RetTypeDecl__jule_tuple_bool _1bb08bc7d_buildMultiRetType(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _61639_tokens, jule::I64* _61669_i) {
	__jule_tuple_x_1ad6e80a6_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ad6e80a6_RetTypeDecl>(_1ad6e80a6_RetTypeDecl{._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1ad6ceb70_Token>>(nullptr)});
	((*(_61669_i)))++;
	if (((*(_61669_i)) >= (*(_61639_tokens)).len())) {
		((*(_61669_i)))--;
		({
			__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, _61639_tokens, (&((*(_61669_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_61669_i)))--;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _6267_rangeTokens = _1bb084616_range(_61669_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _61639_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _6287_parts;
	jule::Slice<_1dd356476_Log> _62814_errs;
	({
		__jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb084d86_parts(&(_6267_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_62814_errs);
	if ((_6287_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> _6347_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6ceb70_Token>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6ceb70_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6287_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0108ca2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _63615_part = *it;
			{
				if ((_63615_part.len() == 0LL)) {
					goto _iter_next_1c0108ca2;
				};
				jule::Ptr<_1ad6ceb70_Token> _6408_token = _63615_part[0LL];;
				jule::I64 _6418_offset = 0LL;;
				if ((_63615_part.len() > 1LL)) {
					_6408_token=_63615_part[1LL];
					if (((*(_6408_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6418_offset=2LL;
						if ((_63615_part.len() < 3LL)) {
							_1bb086948_pushErr(_self_, _6408_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1c0108ca2;
						};
					};
				};
				_6408_token=_63615_part[0LL];
				if ((_6418_offset != 2LL)) {
					jule::Ptr<_1ad6ceb70_Token> _6579_newToken = jule::new_ptr<_1ad6ceb70_Token>((*_6408_token.alloc));;
					(*_6579_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6ceb70_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6579_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6ceb70_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6408_token; __jule_collection; }));
				};
				jule::Ptr<_1ad6e51b3_TypeDecl> _6648_tk;
				({
					__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, &(_63615_part), (&(_6418_offset)), true);
					_6648_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6418_offset < _63615_part.len())) {
					_1bb086948_pushErr(_self_, _63615_part[_6418_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> &__jule_push_dest = _6347_types; __jule_push_dest.push(_6648_tk); };
			}
			_iter_next_1c0108ca2:;
			++it;
			goto _iter_begin_1c0108ca2;
		}
		_iter_end_1c0108ca2:;
	};
	if ((_6347_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=(*(_61639_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1ad6e68e0_TupleTypeDecl>(_1ad6e68e0_TupleTypeDecl{._field_Types=_6347_types}), &__jule_any_type76)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6347_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ad6e80a6_RetTypeDecl__jule_tuple_bool _1bb08c179_buildRetType(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _68734_tokens, jule::I64* _68764_i) {
	__jule_tuple_x_1ad6e80a6_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ad6e80a6_RetTypeDecl>(_1ad6e80a6_RetTypeDecl{._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1ad6ceb70_Token>>(nullptr)});
	if (((*(_68764_i)) >= (*(_68734_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ad6ceb70_Token> _6937_token = (*(_68734_tokens))[(*(_68764_i))];;
	{
		auto &_match_expr{ (*(_6937_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1c0112d66:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1c0112ddd:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1c0112e54:;
			{
				if ((((*(_68764_i)) + 1LL) >= (*(_68734_tokens)).len())) {
					_1bb086948_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_68764_i)))++;
				_6937_token=(*(_68734_tokens))[(*(_68764_i))];
				{
					auto &_match_expr{ (*(_6937_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c0113d12:;
						{
							({
								__jule_tuple_x_1ad6e80a6_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1bb08bc7d_buildMultiRetType(_self_, _68734_tokens, _68764_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1c0114e78:;
						{
							_1bb086948_pushErr(_self_, _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1c0114dce:;
				};
				({
					__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, _68734_tokens, (&((*(_68764_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1c0112d00:;
	};
	((*(_68764_i)))++;
	_1bb086948_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1ad706d73_FnDecl> _1bb08c630_buildFnPrototype(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _72638_tokens, jule::I64* _72668_i, jule::Bool _72676_method) {
	jule::Ptr<_1ad706d73_FnDecl> _7277_f = jule::new_ptr<_1ad706d73_FnDecl>(_1ad706d73_FnDecl{._field_Token=(*(_72638_tokens))[(*(_72668_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1ad6e80a6_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad705921_ParamDecl>>(nullptr)});;
	if (((*((*(_7277_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7277_f.alloc)._field_Statically=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1bb086948_pushErr(_self_.ptr(), (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	if (((*(*(_7277_f))._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7277_f.alloc)._field_Unsafety=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1bb086948_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	((*(_72668_i)))++;
	if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
		_1bb086948_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad6ceb70_Token> _7603_tok = (*(_72638_tokens))[(*(_72668_i))];;
	if (((*(_7603_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1bb086948_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Ident=(*_7603_tok.alloc)._field_Kind;
	} else {
		(*_7277_f.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1ad6ceb70_Token> _7723_errorToken = (*(_72638_tokens))[(*(_72668_i))];;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _7737_genericsTokens = _1bb084616_range(_72668_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _72638_tokens);;
	if ((_7737_genericsTokens != nullptr)) {
		(*_7277_f.alloc)._field_Generics=_1bb089e57_buildGenerics(_self_, &(_7737_genericsTokens), &(_7723_errorToken));
	};
	if (((*((*(_72638_tokens))[(*(_72668_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1bb086948_pushErr(_self_, (*(_72638_tokens))[(*(_72668_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _7837_paramsToks = _1bb084616_range(_72668_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _72638_tokens);;
	if ((_7837_paramsToks.len() > 0LL)) {
		(*_7277_f.alloc)._field_Params=_1bb08b882_buildParams(_self_, &(_7837_paramsToks), _72676_method);
	};
	if (((*(_72668_i)) < (*(_72638_tokens)).len())) {
		jule::Ptr<_1ad6ceb70_Token> _7894_token = (*(_72638_tokens))[(*(_72668_i))];;
		if (((*(_7894_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7277_f.alloc)._field_Exceptional=true;
			((*(_72668_i)))++;
		};
	};
	(*_7277_f.alloc)._field_Public=_1ad90c078_IsPub((*_7277_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1ad6e80a6_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1bb08c179_buildRetType(_self_, _72638_tokens, _72668_i);
		(*_7277_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7277_f;;
}



inline jule::Ptr<_1ad706d73_FnDecl> _1bb08cad6_buildFn(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype) {
	jule::I64 _8047_i = 0LL;;
	jule::Ptr<_1ad706d73_FnDecl> _8057_f = _1bb08c630_buildFnPrototype(_self_, _80329_tokens, &(_8047_i), _80354_method);;
	if (_80368_prototype) {
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1bb086948_pushErr(_self_, (*(_80329_tokens))[(_8047_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8057_f;;
	} else if ((_8057_f == nullptr)) {
		return _8057_f;;
	};
	if ((_8047_i >= (*(_80329_tokens)).len())) {
		_1bb086294_stop(_self_);
		_1bb086948_pushErr(_self_, (*(_8057_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _8217_blockTokens = _1bb084616_range(&(_8047_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _80329_tokens);;
	if ((_8217_blockTokens != nullptr)) {
		(*_8057_f.alloc)._field_Scope=_1bb087ae2_buildScope(_self_, &(_8217_blockTokens), (*(_80329_tokens))[(_8047_i - 1LL)]);
		(*((*_8057_f.alloc)._field_Scope))._field_Unsafety=(*_8057_f.alloc)._field_Unsafety;
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1bb086948_pushErr(_self_, (*(_80329_tokens))[_8047_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1bb086294_stop(_self_);
		_1bb086948_pushErr(_self_, (*_8057_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8057_f;;
}



inline void _1bb08ce49_buildBindUseDecl(_1bb085e64_parser* _self_, jule::Ptr<_1ad70d033_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _83763_tokens) {
	if (((*(_83763_tokens)).len() > 1LL)) {
		_1bb086948_pushErr(_self_, (*(_83763_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad6ceb70_Token> _8417_token = (*(_83763_tokens))[0LL];;
	if ((((*(_8417_token))._field_Id != static_cast<jule::U64>(4LLU)) || (!(_1ad6d0cc5_IsStr((*_8417_token.alloc)._field_Kind))))) {
		_1bb086948_pushErr(_self_, _8417_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_83737_decl))))._field_Binded=true;
	(*((*(_83737_decl))))._field_Path=_8417_token;
}



inline void _1bb08d2ac_parseUseDecl(_1bb085e64_parser* _self_, jule::Ptr<_1ad70d033_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _85058_tokens) {
	if ((*((*(_85033_decl))))._field_Binded) {
		_1bb08ce49_buildBindUseDecl(_self_, _85033_decl, &(_85058_tokens));
		return;;
	};
	jule::Ptr<_1ad6ceb70_Token> _8567_token = _85058_tokens[0LL];;
	if (((((*(_8567_token))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8567_token.alloc)._field_Id != static_cast<jule::U64>(4LLU))) && (!(_1ad6d0cc5_IsStr((*_8567_token.alloc)._field_Kind))))) {
		_1bb086948_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_8567_token.alloc)._field_Id == static_cast<jule::U64>(1LLU))) {
		(*((*(_85033_decl))))._field_Alias=_8567_token;
		(_85058_tokens).mut_slice(1LL);;
		if ((_85058_tokens.len() == 0LL)) {
			_1bb086948_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
		_8567_token=_85058_tokens[0LL];
		if ((((*_8567_token.alloc)._field_Id != static_cast<jule::U64>(4LLU)) || (!(_1ad6d0cc5_IsStr((*_8567_token.alloc)._field_Kind))))) {
			_1bb086948_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
	};
	(*((*(_85033_decl))))._field_Path=_8567_token;
}



inline jule::Ptr<_1ad70d033_UseDecl> _1bb08d6a8_buildUseDecl(_1bb085e64_parser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _87932_tokens, jule::Bool _87957_binded) {
	jule::Ptr<_1ad70d033_UseDecl> _8807_decl = jule::new_ptr<_1ad70d033_UseDecl>(_1ad70d033_UseDecl{._field_Token=_87932_tokens[0LL], ._field_Path=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Alias=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Binded=_87957_binded});;
	if ((_87932_tokens.len() < 2LL)) {
		_1bb086948_pushErr(_self_, (*(_8807_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_87932_tokens).mut_slice(1LL);;
	_1bb08d2ac_parseUseDecl(_self_, &(_8807_decl), _87932_tokens);
	return _8807_decl;;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb08daa4_buildTypeEnumItemKind(jule::Ptr<_1bb085e64_parser> _self_, jule::I64* _89343_i, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _89356_tokens) {
	jule::I64 _8947_braceN = 0LL;;
	jule::I64 _8953_exprStart = (*(_89343_i));;
	for (; ((*(_89343_i)) < (*(_89356_tokens)).len()); ((*(_89343_i)))++) {
		{
			jule::Ptr<_1ad6ceb70_Token> _8974_t = (*(_89356_tokens))[(*(_89343_i))];;
			{
				auto &_match_expr{ (*(_8974_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c01394db:;
					{
						(_8947_braceN)++;
						goto _iter_next_1c013896e;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c013981b:;
					{
						(_8947_braceN)--;
					}
				}
				_match_end_1c0139563:;
			};
			if ((_8947_braceN > 0LL)) {
				goto _iter_next_1c013896e;
			};
			if ((((*(_8974_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_89343_i)) + 1LL) >= (*(_89356_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _91313_kindTokens = nullptr;;
				if (((*_8974_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_91313_kindTokens=(*(_89356_tokens)).slice(_8953_exprStart, (*(_89343_i)));
				} else {
					_91313_kindTokens=(*(_89356_tokens)).slice(_8953_exprStart);
				};
				jule::I64 _9199_j = 0LL;;
				jule::Ptr<_1ad6e51b3_TypeDecl> _9209_kind;
				({
					__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, &(_91313_kindTokens), (&(_9199_j)), true);
					_9209_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_9199_j < _91313_kindTokens.len())) {
					_1bb086948_pushErr(_self_, _91313_kindTokens[_9199_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _9209_kind;;
			};
		}
	_iter_next_1c013896e:;
	}
	_iter_end_1c013896e:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ad70e8c5_TypeEnumItemDecl>> _1bb08dde5_buildTypeEnumItems(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _93040_tokens) {
	jule::Slice<jule::Ptr<_1ad70e8c5_TypeEnumItemDecl>> _9317_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad70e8c5_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad70e8c5_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _9327_i = 0LL;;
	for (; (_9327_i < (*(_93040_tokens)).len()); (_9327_i)++) {
		{
			jule::Ptr<_1ad6ceb70_Token> _9348_t = (*(_93040_tokens))[_9327_i];;
			jule::Ptr<_1ad70e8c5_TypeEnumItemDecl> _9358_item = jule::new_ptr<_1ad70e8c5_TypeEnumItemDecl>(_1ad70e8c5_TypeEnumItemDecl{._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr)});;
			(*_9358_item.alloc)._field_Token=_9348_t;
			if ((((*((*_9358_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_93040_tokens)).len() - _9327_i) > 2LL))) {
				_9348_t=(*(_93040_tokens))[(_9327_i + 1LL)];
				if (((*(_9348_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_9358_item.alloc)._field_Ident=(*(*(_9358_item))._field_Token.alloc)._field_Kind;
					_9327_i+=2LL;
					if (((_9327_i >= (*(_93040_tokens)).len()) || ((*((*(_93040_tokens))[_9327_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1bb086948_pushErr(_self_.ptr(), _9348_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1c013e7bb;
					};
				};
			};
			(*_9358_item.alloc)._field_Kind=_1bb08daa4_buildTypeEnumItemKind(_self_, &(_9327_i), _93040_tokens);
			{ jule::Slice<jule::Ptr<_1ad70e8c5_TypeEnumItemDecl>> &__jule_push_dest = _9317_items; __jule_push_dest.push(_9358_item); };
		}
	_iter_next_1c013e7bb:;
	}
	_iter_end_1c013e7bb:;;
	return _9317_items;;
}



inline jule::Ptr<_1ad710035_TypeEnumDecl> _1bb08e236_buildTypeEnumDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _95439_tokens) {
	jule::I64 _9557_i = 1LL;;
	jule::Ptr<_1ad710035_TypeEnumDecl> _9567_e = jule::new_ptr<_1ad710035_TypeEnumDecl>(_1ad710035_TypeEnumDecl{._field_Token=(*(_95439_tokens))[_9557_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1ad70e8c5_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1ad6ceb70_Token>(nullptr)});;
	if (((*((*(_9567_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb086948_pushErr(_self_.ptr(), (*_9567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_9567_e.alloc)._field_Ident=(*(*(_9567_e))._field_Token.alloc)._field_Kind;
	_9557_i+=3LL;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _9667_itemTokens = _1bb084616_range(&(_9557_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _95439_tokens);;
	if ((_9667_itemTokens == nullptr)) {
		_1bb086294_stop(_self_);
		_1bb086948_pushErr(_self_, (*_9567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _9567_e;;
	} else if ((_9557_i < (*(_95439_tokens)).len())) {
		_1bb086948_pushErr(_self_, (*(_95439_tokens))[_9557_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_9567_e.alloc)._field_Public=_1ad90c078_IsPub((*_9567_e.alloc)._field_Ident);
	(*_9567_e.alloc)._field_End=(*(_95439_tokens))[(_9557_i - 1LL)];
	(*_9567_e.alloc)._field_Items=_1bb08dde5_buildTypeEnumItems(_self_, &(_9667_itemTokens));
	return _9567_e;;
}



inline jule::Ptr<_1ad6e94e7_Expr> _1bb08e632_buildEnumItemExpr(jule::Ptr<_1bb085e64_parser> _self_, jule::I64* _98139_i, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _98152_tokens) {
	jule::I64 _9827_braceN = 0LL;;
	jule::I64 _9833_exprStart = (*(_98139_i));;
	for (; ((*(_98139_i)) < (*(_98152_tokens)).len()); ((*(_98139_i)))++) {
		{
			jule::Ptr<_1ad6ceb70_Token> _9854_t = (*(_98152_tokens))[(*(_98139_i))];;
			{
				auto &_match_expr{ (*(_9854_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c014cb92:;
					{
						(_9827_braceN)++;
						goto _iter_next_1c014c125;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c014cec2:;
					{
						(_9827_braceN)--;
					}
				}
				_match_end_1c014cc19:;
			};
			if ((_9827_braceN > 0LL)) {
				goto _iter_next_1c014c125;
			};
			if ((((*(_9854_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_98139_i)) + 1LL) >= (*(_98152_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _100113_exprTokens = nullptr;;
				if (((*_9854_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_100113_exprTokens=(*(_98152_tokens)).slice(_9833_exprStart, (*(_98139_i)));
				} else {
					_100113_exprTokens=(*(_98152_tokens)).slice(_9833_exprStart);
				};
				return _1bb0870ec_buildExpr(_self_, &(_100113_exprTokens));;
			};
		}
	_iter_next_1c014c125:;
	}
	_iter_end_1c014c125:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ad70d4d9_EnumItemDecl>> _1bb08e973_buildEnumItems(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _101336_tokens) {
	jule::Slice<jule::Ptr<_1ad70d4d9_EnumItemDecl>> _10147_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad70d4d9_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad70d4d9_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _10157_i = 0LL;;
	for (; (_10157_i < (*(_101336_tokens)).len()); (_10157_i)++) {
		{
			jule::Ptr<_1ad6ceb70_Token> _10178_t = (*(_101336_tokens))[_10157_i];;
			jule::Ptr<_1ad70d4d9_EnumItemDecl> _10188_item = jule::new_ptr<_1ad70d4d9_EnumItemDecl>(_1ad70d4d9_EnumItemDecl{._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
			(*_10188_item.alloc)._field_Token=_10178_t;
			if (((*((*_10188_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1bb086948_pushErr(_self_.ptr(), (*_10188_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_10188_item.alloc)._field_Ident=(*(*(_10188_item))._field_Token.alloc)._field_Kind;
			if ((((_10157_i + 1LL) >= (*(_101336_tokens)).len()) || ((*((*(_101336_tokens))[(_10157_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_10157_i + 1LL) < (*(_101336_tokens)).len())) {
					(_10157_i)++;
				};
				{ jule::Slice<jule::Ptr<_1ad70d4d9_EnumItemDecl>> &__jule_push_dest = _10147_items; __jule_push_dest.push(_10188_item); };
				goto _iter_next_1c0151a53;
			};
			(_10157_i)++;
			_10178_t=(*(_101336_tokens))[_10157_i];
			(_10157_i)++;
			if (((*(_10178_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1bb086948_pushErr(_self_, _10178_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1c0151a53;
			};
			if (((_10157_i >= (*(_101336_tokens)).len()) || ((*((*(_101336_tokens))[_10157_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1bb086948_pushErr(_self_, _10178_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1c0151a53;
			};
			(*_10188_item.alloc)._field_Expr=_1bb08e632_buildEnumItemExpr(_self_, &(_10157_i), _101336_tokens);
			{ jule::Slice<jule::Ptr<_1ad70d4d9_EnumItemDecl>> &__jule_push_dest = _10147_items; __jule_push_dest.push(_10188_item); };
		}
	_iter_next_1c0151a53:;
	}
	_iter_end_1c0151a53:;;
	return _10147_items;;
}



inline jule::Ptr<_1ad70e09a_EnumDecl> _1bb08ecb4_buildEnumDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _105035_tokens) {
	if (((*(_105035_tokens)).len() < 3LL)) {
		_1bb086948_pushErr(_self_.ptr(), (*(_105035_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad70e09a_EnumDecl> _10557_e = jule::new_ptr<_1ad70e09a_EnumDecl>(_1ad70e09a_EnumDecl{._field_Token=(*(_105035_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1ad70d4d9_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1ad6ceb70_Token>(nullptr)});;
	if (((*((*(_10557_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb086948_pushErr(_self_, (*_10557_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_10557_e.alloc)._field_Ident=(*(*(_10557_e))._field_Token.alloc)._field_Kind;
	jule::I64 _10637_i = 2LL;;
	if (((*((*(_105035_tokens))[_10637_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_10637_i)++;
		if ((_10637_i >= (*(_105035_tokens)).len())) {
			_1bb086948_pushErr(_self_, (*(_105035_tokens))[(_10637_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _10557_e;;
		};
		({
			__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, _105035_tokens, (&(_10637_i)), true);
			(*_10557_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_10637_i >= (*(_105035_tokens)).len())) {
			_1bb086294_stop(_self_);
			_1bb086948_pushErr(_self_, (*_10557_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _10557_e;;
		};
	} else {
		(*_10557_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _10807_itemTokens = _1bb084616_range(&(_10637_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _105035_tokens);;
	if ((_10807_itemTokens == nullptr)) {
		_1bb086294_stop(_self_);
		_1bb086948_pushErr(_self_, (*_10557_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _10557_e;;
	} else if ((_10637_i < (*(_105035_tokens)).len())) {
		_1bb086948_pushErr(_self_, (*(_105035_tokens))[_10637_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_10557_e.alloc)._field_Public=_1ad90c078_IsPub((*_10557_e.alloc)._field_Ident);
	(*_10557_e.alloc)._field_End=(*(_105035_tokens))[(_10637_i - 1LL)];
	(*_10557_e.alloc)._field_Items=_1bb08e973_buildEnumItems(_self_, &(_10807_itemTokens));
	return _10557_e;;
}



inline jule::Any _1bb090105_buildNodeEnumDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _109539_tokens) {
	if ((((*(_109539_tokens)).len() > 3LL) && ((*((*(_109539_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_109539_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1bb08e236_buildTypeEnumDecl(_self_, _109539_tokens), &__jule_any_type70);;
		};
	};
	return jule::Any(_1bb08ecb4_buildEnumDecl(_self_, _109539_tokens), &__jule_any_type69);;
}



inline jule::Ptr<_1ad7102ee_FieldDecl> _1bb090446_buildField(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _110431_tokens) {
	jule::Ptr<_1ad7102ee_FieldDecl> _11057_f = jule::new_ptr<_1ad7102ee_FieldDecl>(_1ad7102ee_FieldDecl{._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
	(*_11057_f.alloc)._field_Mutable=((*(_110431_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_11057_f.alloc)._field_Mutable) {
		if ((_110431_tokens.len() == 1LL)) {
			_1bb086948_pushErr(_self_.ptr(), _110431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110431_tokens).mut_slice(1LL);;
	};
	(*_11057_f.alloc)._field_Token=_110431_tokens[0LL];
	if (((*((*_11057_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb086948_pushErr(_self_, (*_11057_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_11057_f.alloc)._field_Ident=(*(*(_11057_f))._field_Token.alloc)._field_Kind;
	if ((_110431_tokens.len() == 1LL)) {
		_1bb086948_pushErr(_self_, _110431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_110431_tokens.len() < 3LL) || ((*(_110431_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1bb086948_pushErr(_self_, _110431_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_110431_tokens).mut_slice(2LL);;
	jule::I64 _11337_i = 0LL;;
	({
		__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, &(_110431_tokens), (&(_11337_i)), true);
		(*_11057_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_11337_i < _110431_tokens.len())) {
		jule::Ptr<_1ad6ceb70_Token> _11364_token = _110431_tokens[_11337_i];;
		if (((*(_11364_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1bb086948_pushErr(_self_, _110431_tokens[_11337_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_11337_i)++;
		if ((_11337_i >= _110431_tokens.len())) {
			_1bb086948_pushErr(_self_, _11364_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110431_tokens).mut_slice(_11337_i);;
		(*_11057_f.alloc)._field_Default=_1bb0870ec_buildExpr(_self_, &(_110431_tokens));
	};
	(*_11057_f.alloc)._field_Public=_1ad90c078_IsPub((*_11057_f.alloc)._field_Ident);
	return _11057_f;;
}



inline jule::Slice<jule::Ptr<_1ad7102ee_FieldDecl>> _1bb090787_buildStructDeclFields(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _115342_tokens) {
	jule::Slice<jule::Ptr<_1ad7102ee_FieldDecl>> _115411_fields = nullptr;;
	jule::Slice<jule::Ptr<_1bb0673c9_stmt>> _11557_stmts = _1bb067781_splitStmts(&(_115342_tokens));;
	{
		auto expr = &(_11557_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0173954:;
		if (it != expr_end) {
			jule::Ptr<_1bb0673c9_stmt> _115615_stmt = *it;
			{
				_115342_tokens=(*(_115615_stmt))._field_tokens;
				jule::Ptr<_1ad7102ee_FieldDecl> _11588_f = _1bb090446_buildField(_self_, _115342_tokens);;
				{ jule::Slice<jule::Ptr<_1ad7102ee_FieldDecl>> &__jule_push_dest = _115411_fields; __jule_push_dest.push(_11588_f); };
			}
			_iter_next_1c0173954:;
			++it;
			goto _iter_begin_1c0173954;
		}
		_iter_end_1c0173954:;
	};
	return _115411_fields;;
}



inline jule::Ptr<_1ad710be5_StructDecl> _1bb090ac8_buildStructDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _116437_tokens) {
	if (((*(_116437_tokens)).len() < 3LL)) {
		_1bb086948_pushErr(_self_.ptr(), (*(_116437_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _11707_i = 1LL;;
	jule::Ptr<_1ad710be5_StructDecl> _11717_s = jule::new_ptr<_1ad710be5_StructDecl>(_1ad710be5_StructDecl{._field_Token=(*(_116437_tokens))[_11707_i], ._field_End=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1ad7102ee_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>(nullptr)});;
	if (((*((*(_11717_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb086948_pushErr(_self_, (*_11717_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_11707_i)++;
	if ((_11707_i >= (*(_116437_tokens)).len())) {
		_1bb086948_pushErr(_self_, (*(_116437_tokens))[_11707_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _11717_s;;
	};
	(*_11717_s.alloc)._field_Ident=(*(*(_11717_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1ad6ceb70_Token> _11853_errorToken = (*(_116437_tokens))[_11707_i];;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _11867_genericsTokens = _1bb084616_range(&(_11707_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _116437_tokens);;
	if ((_11867_genericsTokens != nullptr)) {
		(*_11717_s.alloc)._field_Generics=_1bb089e57_buildGenerics(_self_, &(_11867_genericsTokens), &(_11853_errorToken));
	};
	if ((_11707_i >= (*(_116437_tokens)).len())) {
		_1bb086948_pushErr(_self_, (*(_116437_tokens))[(_11707_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11717_s;;
	};
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _11967_bodyTokens = _1bb084616_range(&(_11707_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _116437_tokens);;
	if ((_11967_bodyTokens == nullptr)) {
		_1bb086294_stop(_self_);
		_1bb086948_pushErr(_self_, (*_11717_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11717_s;;
	};
	if ((_11707_i < (*(_116437_tokens)).len())) {
		_1bb086948_pushErr(_self_, (*(_116437_tokens))[_11707_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11717_s.alloc)._field_Public=_1ad90c078_IsPub((*_11717_s.alloc)._field_Ident);
	(*_11717_s.alloc)._field_Fields=_1bb090787_buildStructDeclFields(_self_, _11967_bodyTokens);
	(*_11717_s.alloc)._field_End=(*(_116437_tokens))[(_11707_i - 1LL)];
	return _11717_s;;
}



inline void _1bb090d81_checkMethodReceiver(_1bb085e64_parser* _self_, jule::Ptr<_1ad706d73_FnDecl>* _121236_f) {
	if ((*((*(_121236_f))))._field_Statically) {
		if ((((*((*(_121236_f))))._field_Params.len() > 0LL) && _1ad705cc8_IsSelf((*((*(_121236_f))))._field_Params[0LL].ptr()))) {
			_1bb086948_pushErr(_self_, (*((*(_121236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_121236_f))))._field_Params.len() == 0LL)) {
		_1bb086948_pushErr(_self_, (*((*(_121236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ad705921_ParamDecl> _12243_param = (*((*(_121236_f))))._field_Params[0LL];;
	if ((!(_1ad705cc8_IsSelf(_12243_param.ptr())))) {
		_1bb086948_pushErr(_self_, (*((*(_121236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1bb0911e4_buildTraitBody(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad711432_TraitDecl>* _123136_t, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _123160_tokens) {
	jule::Slice<jule::Ptr<_1bb0673c9_stmt>> _12327_stmts = _1bb067781_splitStmts(&(_123160_tokens));;
	{
		auto expr = &(_12327_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01852b2:;
		if (it != expr_end) {
			jule::Ptr<_1bb0673c9_stmt> _123315_stmt = *it;
			{
				_123160_tokens=(*(_123315_stmt))._field_tokens;
				if ((_123160_tokens.len() == 0LL)) {
					goto _iter_next_1c01852b2;
				};
				{
					auto &_match_expr{ (*(_123160_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1c0188e31:;
						{
							jule::Ptr<_1ad706d73_FnDecl> _12409_f = _1bb08cad6_buildFn(_self_, &(_123160_tokens), true, true);;
							if ((_12409_f == nullptr)) {
								goto _match_end_1c018657c;
							};
							_1bb090d81_checkMethodReceiver(_self_, &(_12409_f));
							if (((*(_12409_f))._field_Generics.len() > 0LL)) {
								_1bb086948_pushErr(_self_, (*(_12409_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ad706d73_FnDecl>> &__jule_push_dest = (*((*(_123136_t))))._field_Methods; __jule_push_dest.push(_12409_f); };
						}
					}
					else {
						_case_begin_1c0185d73:;
						{
							jule::I64 _12509_i = 0LL;;
							jule::Ptr<_1ad6e51b3_TypeDecl> _12519_ti;
							jule::Bool _125113_ok;
							({
								__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, &(_123160_tokens), (&(_12509_i)), true);
								_12519_ti = __jule_assign_result.__jule_result_arg0;
								_125113_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_125113_ok))) {
								goto _match_end_1c018657c;
							};
							if ((_12509_i < _123160_tokens.len())) {
								_1bb086948_pushErr(_self_, _123160_tokens[_12509_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> &__jule_push_dest = (*((*(_123136_t))))._field_Inherits; __jule_push_dest.push(_12519_ti); };
						}
					}
					_match_end_1c018657c:;
				};
			}
			_iter_next_1c01852b2:;
			++it;
			goto _iter_begin_1c01852b2;
		}
		_iter_end_1c01852b2:;
	};
}



inline jule::Ptr<_1ad711432_TraitDecl> _1bb091535_buildTraitDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _126336_tokens) {
	if (((*(_126336_tokens)).len() < 3LL)) {
		_1bb086948_pushErr(_self_.ptr(), (*(_126336_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad711432_TraitDecl> _12687_t = jule::new_ptr<_1ad711432_TraitDecl>(_1ad711432_TraitDecl{._field_Token=(*(_126336_tokens))[1LL], ._field_End=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1ad706d73_FnDecl>>(nullptr)});;
	if (((*((*(_12687_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb086948_pushErr(_self_, (*_12687_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_12687_t.alloc)._field_Ident=(*(*(_12687_t))._field_Token.alloc)._field_Kind;
	jule::I64 _12767_i = 2LL;;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _12777_bodyTokens = _1bb084616_range(&(_12767_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _126336_tokens);;
	if ((_12777_bodyTokens == nullptr)) {
		_1bb086294_stop(_self_);
		_1bb086948_pushErr(_self_, (*_12687_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_12767_i < (*(_126336_tokens)).len())) {
		_1bb086948_pushErr(_self_, (*(_126336_tokens))[_12767_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12687_t.alloc)._field_Public=_1ad90c078_IsPub((*_12687_t.alloc)._field_Ident);
	_1bb0911e4_buildTraitBody(_self_, &(_12687_t), _12777_bodyTokens);
	(*_12687_t.alloc)._field_End=(*(_126336_tokens))[(_12767_i - 1LL)];
	return _12687_t;;
}



inline jule::Ptr<_1ad706d73_FnDecl> _1bb091876_buildBindFn(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _129332_tokens) {
	(_129332_tokens).mut_slice(1LL);;
	jule::Ptr<_1ad706d73_FnDecl> _12957_f = _1bb08cad6_buildFn(_self_, &(_129332_tokens), false, true);;
	if ((_12957_f != nullptr)) {
		(*_12957_f.alloc)._field_Public=false;
		(*_12957_f.alloc)._field_Binded=true;
	};
	return _12957_f;;
}



inline jule::Ptr<_1ad70802d_VarDecl> _1bb091bb7_buildBindVar(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _130333_tokens) {
	(_130333_tokens).mut_slice(1LL);;
	jule::Ptr<_1ad70802d_VarDecl> _13057_v = _1bb08971a_buildVar(_self_, _130333_tokens);;
	if ((_13057_v != nullptr)) {
		(*_13057_v.alloc)._field_Public=false;
		(*_13057_v.alloc)._field_Binded=true;
		if (((*_13057_v.alloc)._field_Expr != nullptr)) {
			_1bb086948_pushErr(_self_, (*_13057_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _13057_v;;
}



inline jule::Ptr<_1ad710be5_StructDecl> _1bb092008_buildBindStruct(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _131636_tokens) {
	(_131636_tokens).mut_slice(1LL);;
	jule::Ptr<_1ad710be5_StructDecl> _13187_s = _1bb090ac8_buildStructDecl(_self_, &(_131636_tokens));;
	if ((_13187_s != nullptr)) {
		(*_13187_s.alloc)._field_Public=false;
		{
			auto expr = &((*_13187_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c019899b:;
			if (it != expr_end) {
				jule::Ptr<_1ad7102ee_FieldDecl> _132116_f = *it;
				{
					(*(_132116_f))._field_Public=true;
				}
				_iter_next_1c019899b:;
				++it;
				goto _iter_begin_1c019899b;
			}
			_iter_end_1c019899b:;
		};
		(*_13187_s.alloc)._field_Binded=true;
	};
	return _13187_s;;
}



inline jule::Ptr<_1ad70bbd0_TypeAliasDecl> _1bb092349_buildBindTypeAlias(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _133039_tokens) {
	(_133039_tokens).mut_slice(1LL);;
	jule::Ptr<_1ad70bbd0_TypeAliasDecl> _13327_t = _1bb088890_buildTypeAliasDecl(_self_, &(_133039_tokens));;
	if ((_13327_t != nullptr)) {
		(*_13327_t.alloc)._field_Public=false;
		(*_13327_t.alloc)._field_Binded=true;
	};
	return _13327_t;;
}



inline jule::Ptr<_1ad70d033_UseDecl> _1bb09268a_buildBindUse(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _134033_tokens) {
	if ((_134033_tokens.len() == 1LL)) {
		_1bb086948_pushErr(_self_.ptr(), _134033_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_134033_tokens).mut_slice(1LL);;
	;
	return _1bb08d6a8_buildUseDecl(_self_, _134033_tokens, true);;
}



inline jule::Any _1bb0929cb_buildBind(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _135131_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _13527_token = (*(_135131_tokens))[0LL];;
	if (((*(_135131_tokens)).len() == 1LL)) {
		_1bb086948_pushErr(_self_.ptr(), _13527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_13527_token=(*(_135131_tokens))[1LL];
	{
		auto &_match_expr{ (*(_13527_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c019ea6d:;
			{
				return jule::Any(_1bb091876_buildBindFn(_self_, (*(_135131_tokens))), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1c019e6b6:;
			{
				return jule::Any(_1bb091bb7_buildBindVar(_self_, (*(_135131_tokens))), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1c019e72c:;
			{
				return jule::Any(_1bb092008_buildBindStruct(_self_, (*(_135131_tokens))), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c019e793:;
			{
				return jule::Any(_1bb092349_buildBindTypeAlias(_self_, (*(_135131_tokens))), &__jule_any_type50);;
			}
		}
		else {
			_case_begin_1c019d94b:;
			{
				_1bb086948_pushErr(_self_, _13527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c019e650:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad706d73_FnDecl> _1bb092d1c_getMethod(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _137531_tokens) {
	jule::I64 _13767_i = 0LL;;
	jule::Ptr<_1ad6ceb70_Token> _13777_token = (*(_137531_tokens))[_13767_i];;
	if (((*(_13777_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_13767_i + 1LL) >= (*(_137531_tokens)).len())) {
			_1bb086948_pushErr(_self_.ptr(), _13777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13767_i)++;
		_13777_token=(*(_137531_tokens))[_13767_i];
	};
	if (((*_13777_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_13767_i + 1LL) >= (*(_137531_tokens)).len())) {
			_1bb086948_pushErr(_self_, _13777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13767_i)++;
		_13777_token=(*(_137531_tokens))[_13767_i];
	};
	if (((*_13777_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1bb086948_pushErr(_self_, _13777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1bb08cad6_buildFn(_self_, _137531_tokens, true, false);;
}



inline void _1bb093180_parseImplBody(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad711a92_Impl>* _140435_ipl, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _140457_tokens) {
	jule::Slice<jule::Ptr<_1bb0673c9_stmt>> _14057_stmts = _1bb067781_splitStmts(_140457_tokens);;
	{
		auto expr = &(_14057_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01a79bb:;
		if (it != expr_end) {
			jule::Ptr<_1bb0673c9_stmt> _140615_stmt = *it;
			{
				(*(_140457_tokens))=(*(_140615_stmt))._field_tokens;
				jule::Ptr<_1ad6ceb70_Token> _14088_token = (*(_140457_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_14088_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1c01a89bc:;
						{
							_1bb0876e6_pushDirective(_self_.ptr(), _1bb08743d_buildDirective(_self_, (*(_140457_tokens))));
							goto _iter_next_1c01a79bb;
						}
					}
					_match_end_1c01a8c0e:;
				};
				{
					auto &_match_expr{ (*(_14088_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1c01a9e85:;
						{
							jule::Ptr<_1ad70802d_VarDecl> _14179_v = _1bb08971a_buildVar(_self_, (*(_140457_tokens)));;
							if ((_14179_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1ad70802d_VarDecl>> &__jule_push_dest = (*((*(_140435_ipl))))._field_Statics; __jule_push_dest.push(_14179_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1c01a9bbb:;
						{
							jule::Ptr<_1ad706d73_FnDecl> _14249_f = _1bb092d1c_getMethod(_self_, _140457_tokens);;
							if ((_14249_f != nullptr)) {
								_1bb090d81_checkMethodReceiver(_self_, &(_14249_f));
								_1bb093aba_applyFnMeta(_self_, &(_14249_f));
								{ jule::Slice<jule::Ptr<_1ad706d73_FnDecl>> &__jule_push_dest = (*((*(_140435_ipl))))._field_Methods; __jule_push_dest.push(_14249_f); };
							};
						}
					}
					else {
						_case_begin_1c01a8d63:;
						{
							_1bb086948_pushErr(_self_, _14088_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1c01a79bb;
						}
					}
					_match_end_1c01a935d:;
				};
			}
			_iter_next_1c01a79bb:;
			++it;
			goto _iter_begin_1c01a79bb;
		}
		_iter_end_1c01a79bb:;
	};
}



inline jule::Ptr<_1ad711a92_Impl> _1bb0934c1_buildImpl(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _143730_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _14387_token = _143730_tokens[0LL];;
	if ((_143730_tokens.len() < 2LL)) {
		_1bb086948_pushErr(_self_.ptr(), _14387_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _14447_i = 1LL;;
	jule::Ptr<_1ad6e51b3_TypeDecl> _14467_base;
	jule::Bool _144617_ok;
	({
		__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, &(_143730_tokens), (&(_14447_i)), true);
		_14467_base = __jule_assign_result.__jule_result_arg0;
		_144617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144617_ok))) {
		return nullptr;;
	};
	if ((_14447_i >= _143730_tokens.len())) {
		_1bb086948_pushErr(_self_, _14387_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad711a92_Impl> _14557_ipl = jule::new_ptr<_1ad711a92_Impl>(_1ad711a92_Impl{._field_End=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Base=_14467_base, ._field_Dest=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1ad706d73_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1ad70802d_VarDecl>>(nullptr)});;
	_14387_token=_143730_tokens[_14447_i];
	if (((*(_14387_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_14387_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_14557_ipl))._field_Base, (*_14557_ipl.alloc)._field_Dest);
			goto _julec_label_1c01b6bb7;
		};
		_1bb086294_stop(_self_);
		_1bb086948_pushErr(_self_, _14387_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_14447_i)++;
	if ((_14447_i >= _143730_tokens.len())) {
		_1bb086294_stop(_self_);
		_1bb086948_pushErr(_self_, _14387_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType(_self_, &(_143730_tokens), (&(_14447_i)), true);
		(*_14557_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_144617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144617_ok))) {
		return nullptr;;
	};
	if ((_14447_i >= _143730_tokens.len())) {
		_1bb086294_stop(_self_);
		_1bb086948_pushErr(_self_, _14387_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1c01b6bb7:;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _14937_bodyTokens = _1bb084616_range(&(_14447_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_143730_tokens));;
	if ((_14937_bodyTokens == nullptr)) {
		_1bb086294_stop(_self_);
		_1bb086948_pushErr(_self_, _14387_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14447_i < _143730_tokens.len())) {
		_1bb086948_pushErr(_self_, _143730_tokens[_14447_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_14557_ipl.alloc)._field_End=_143730_tokens[(_14447_i - 1LL)];
	_1bb093180_parseImplBody(_self_, &(_14557_ipl), &(_14937_bodyTokens));
	return _14557_ipl;;
}



inline jule::Any _1bb093812_buildNodeData(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _150835_tokens) {
	jule::Ptr<_1ad6ceb70_Token> _15097_token = (*(_150835_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_15097_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c01bbd87:;
			{
				jule::Ptr<_1ad706d73_FnDecl> _15138_f = _1bb08cad6_buildFn(_self_, _150835_tokens, false, false);;
				if ((_15138_f != nullptr)) {
					(*_15138_f.alloc)._field_Global=true;
				};
				return jule::Any(_15138_f, &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1c01bc56e:;
			{
				return jule::Any(_1bb08971a_buildVar(_self_, (*(_150835_tokens))), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1c01bc5d5:;
			{
				return jule::Any(_1bb088890_buildTypeAliasDecl(_self_, _150835_tokens), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1c01bb99c:;
			{
				return _1bb090105_buildNodeEnumDecl(_self_, _150835_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1c01bba13:;
			{
				return jule::Any(_1bb090ac8_buildStructDecl(_self_, _150835_tokens), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1c01bba79:;
			{
				return jule::Any(_1bb091535_buildTraitDecl(_self_, _150835_tokens), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1c01bbae0:;
			{
				return jule::Any(_1bb0934c1_buildImpl(_self_, (*(_150835_tokens))), &__jule_any_type65);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c01bbb67:;
			{
				return _1bb0929cb_buildBind(_self_, _150835_tokens);;
			}
		}
		else {
			_case_begin_1c01bb6a0:;
			{
				_1bb086948_pushErr(_self_.ptr(), _15097_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c01bb936:;
	};
}



inline void _1bb093aba_applyFnMeta(_1bb085e64_parser* _self_, jule::Ptr<_1ad706d73_FnDecl>* _154132_f) {
	(*((*(_154132_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1bb093d73_applyMeta(_1bb085e64_parser* _self_, _1ad6e41b2_Node* _154630_node) {
	{
		auto &_match_expr{ (*(_154630_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1c01c3751:;
			{
				jule::Ptr<_1ad70802d_VarDecl> _15498_v = (*(_154630_node))._field_Data.unsafe_cast_ptr<_1ad70802d_VarDecl>();;
				if ((_15498_v == nullptr)) {
					return;;
				};
				(*(_15498_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c01c34a9:;
			{
				jule::Ptr<_1ad706d73_FnDecl> _15568_f = (*(_154630_node))._field_Data.unsafe_cast_ptr<_1ad706d73_FnDecl>();;
				if ((_15568_f == nullptr)) {
					return;;
				};
				_1bb093aba_applyFnMeta(_self_, &(_15568_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c01c37ea:;
			{
				jule::Ptr<_1ad710be5_StructDecl> _15628_sd = (*(_154630_node))._field_Data.unsafe_cast_ptr<_1ad710be5_StructDecl>();;
				if ((_15628_sd == nullptr)) {
					return;;
				};
				(*(_15628_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1c01c36b8:;
	};
}



inline void _1bb09412b_pushUseDecl(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad70d033_UseDecl>* _157133_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad70d033_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_157133_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1bb086948_pushErr(_self_, (*((*(_157133_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1bb086cab_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1bb09446c_pushMetaNodes(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _157935_tokens) {
	{
		auto &_match_expr{ (*((*(_157935_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1c01c9d95:;
			{
				;
				jule::Ptr<_1ad70d033_UseDecl> _15838_decl = _1bb08d6a8_buildUseDecl(_self_.ptr(), (*(_157935_tokens)), false);;
				_1bb09412b_pushUseDecl(_self_, &(_15838_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c01c9e1c:;
			{
				if ((((*(_157935_tokens)).len() > 1LL) && ((*((*(_157935_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1ad70d033_UseDecl> _15889_decl = _1bb09268a_buildBindUse(_self_, (*(_157935_tokens)));;
					_1bb09412b_pushUseDecl(_self_, &(_15889_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1c01c9e83:;
			{
				_1bb0876e6_pushDirective(_self_.ptr(), _1bb08743d_buildDirective(_self_, (*(_157935_tokens))));
				return true;;
			}
		}
		_match_end_1c01c9c85:;
	};
	return false;;
}



inline _1ad6e41b2_Node _1bb0947ad_parseNode(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _159931_st) {
	_1ad6e41b2_Node _16007_node = _1ad6e41b2_Node{._field_Token=(*(_159931_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1bb09446c_pushMetaNodes(_self_, _159931_st)) {
		return _16007_node;;
	};
	jule::Any _16087_data = _1bb093812_buildNodeData(_self_, _159931_st);;
	if ((_16087_data == nullptr)) {
		return _16007_node;;
	};
	_16007_node._field_Data=_16087_data;
	_1bb093d73_applyMeta(_self_, &(_16007_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1bb086948_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _16007_node;;
}



inline void _1bb094a66_appendNode(jule::Ptr<_1bb085e64_parser> _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _162332_st) {
	if (((*(_162332_st)).len() == 0LL)) {
		return;;
	};
	_1ad6e41b2_Node _16277_node = _1bb0947ad_parseNode(_self_, _162332_st);;
	if (((_16277_node._field_Data != nullptr) && (!(_1bb08652a_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1ad6e41b2_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16277_node; __jule_collection; }));
	};
}



inline void _1bb09503e_removeRange(_1bb085e64_parser* _self_, jule::I64 _163327_i, jule::U64 _163335_id, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _163351_tokens, jule::Slice<jule::I64>* _163381_ranges) {
	jule::U64 _16343_close = _1bb08511c_getCloseOfBrace(_163335_id);;
	for (; (_163327_i >= 0LL); (_163327_i)--) {
		{
			jule::Ptr<_1ad6ceb70_Token> _16364_tok = (*(_163351_tokens))[(*(_163381_ranges))[_163327_i]];;
			if (((*(_16364_tok))._field_Id != _16343_close)) {
				goto _iter_next_1c01d5125;
			};
			(*(_163381_ranges))=jule::append((*(_163381_ranges)).slice(0LL, _163327_i),(*(_163381_ranges)).slice((_163327_i + 1LL)));
			goto _iter_end_1c01d5125;
		}
	_iter_next_1c01d5125:;
	}
	_iter_end_1c01d5125:;;
}



inline void _1bb09545c_pushWrongOrderCloseErr(_1bb085e64_parser* _self_, jule::Ptr<_1ad6ceb70_Token>* _164539_t, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _164558_tokens, jule::Slice<jule::I64>* _164584_ranges) {
	{
		auto &_match_expr{ (*((*(_164558_tokens))[(*(_164584_ranges))[((*(_164584_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1c01d7534:;
			{
				_1bb086948_pushErr(_self_, (*(_164539_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1c01d75ab:;
			{
				_1bb086948_pushErr(_self_, (*(_164539_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1c01d7622:;
			{
				_1bb086948_pushErr(_self_, (*(_164539_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c01d7424:;
	};
}



inline void _1bb095935_pushRangeClose(_1bb085e64_parser* _self_, jule::Ptr<_1ad6ceb70_Token> _165630_t, jule::U64 _165648_left, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _165666_tokens, jule::Slice<jule::I64>* _165696_ranges) {
	jule::I64 _16573_n = (*(_165696_ranges)).len();;
	if ((_16573_n == 0LL)) {
		{
			auto &_match_expr{ (*(_165630_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1c01da636:;
				{
					_1bb086948_pushErr(_self_, _165630_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1c01da6ad:;
				{
					_1bb086948_pushErr(_self_, _165630_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1c01da724:;
				{
					_1bb086948_pushErr(_self_, _165630_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1c01da56a:;
		};
		return;;
	} else if (((*((*(_165666_tokens))[(*(_165696_ranges))[(_16573_n - 1LL)]]))._field_Id != _165648_left)) {
		_1bb09545c_pushWrongOrderCloseErr(_self_, &(_165630_t), _165666_tokens, _165696_ranges);
	};
	_1bb09503e_removeRange(_self_, (_16573_n - 1LL), (*(_165630_t))._field_Id, _165666_tokens, _165696_ranges);
}



inline void _1bb095bdd_checkRanges(_1bb085e64_parser* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _167428_tokens) {
	jule::Slice<jule::I64> _167511_ranges = nullptr;;
	{
		auto expr = _167428_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01dda02:;
		if (it != expr_end) {
			jule::I64 _16777_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> *_167710_token = it;
			{
				{
					auto &_match_expr{ (*((*(_167710_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1c01de89e:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _167511_ranges; __jule_push_dest.push(_16777_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c01de937:;
						{
							_1bb095935_pushRangeClose(_self_, (*(_167710_token)), static_cast<jule::U64>(74LLU), _167428_tokens, &(_167511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1c01de99d:;
						{
							_1bb095935_pushRangeClose(_self_, (*(_167710_token)), static_cast<jule::U64>(72LLU), _167428_tokens, &(_167511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1c01dea14:;
						{
							_1bb095935_pushRangeClose(_self_, (*(_167710_token)), static_cast<jule::U64>(76LLU), _167428_tokens, &(_167511_ranges));
						}
					}
					_match_end_1c01de7d3:;
				};
			}
			_iter_next_1c01dda02:;
			++it;
			_16777_i++;
			goto _iter_begin_1c01dda02;
		}
		_iter_end_1c01dda02:;
	};
	{
		auto expr = &(_167511_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01ddace:;
		if (it != expr_end) {
			jule::I64 _169210_i = *it;
			{
				jule::Ptr<_1ad6ceb70_Token> _16934_token = (*(_167428_tokens))[_169210_i];;
				{
					auto &_match_expr{ (*(_16934_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c01e28c4:;
						{
							_1bb086948_pushErr(_self_, _16934_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1c01e293a:;
						{
							_1bb086948_pushErr(_self_, _16934_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1c01e29a1:;
						{
							_1bb086948_pushErr(_self_, _16934_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1c01e263d:;
				};
			}
			_iter_next_1c01ddace:;
			++it;
			goto _iter_begin_1c01ddace;
		}
		_iter_end_1c01ddace:;
	};
}



inline void _1bb095e96_parse(jule::Ptr<_1bb085e64_parser> _self_, jule::Ptr<_1ad6d5527_Fileset>* _170527_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1ad6e325a_AST>(_1ad6e325a_AST{._field_File=(*(_170527_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1ad70d033_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1ad6e41b2_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1bb0756a1_exprBuilder>(_1bb0756a1_exprBuilder{._field_p=_self_});
	_1bb095bdd_checkRanges(_self_, &((*((*(_170527_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1bb0673c9_stmt>> _17187_stmts = _1bb067781_splitStmts(&((*((*(_170527_f))))._field_Tokens));;
	jule::I64 _17217_i = 0LL;;
	for (; (_17217_i < _17187_stmts.len()); (_17217_i)++) {
		{
			jule::Ptr<_1bb0673c9_stmt> _17238_stmt = _17187_stmts[_17217_i];;
			if (((*(_17238_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_17238_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1c01e6774;
			};
			if ((!(_1dd35827a_IsTopDirective((*((*_17238_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1c01e6774;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bb08743d_buildDirective(_self_, (*_17238_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1c01e6774:;
	}
	_iter_end_1c01e6774:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_17217_i < _17187_stmts.len()) && (!(_1bb08652a_stopped(_self_)))); (_17217_i)++) {
		{
			jule::Ptr<_1bb0673c9_stmt> _17408_stmt = _17187_stmts[_17217_i];;
			_1bb094a66_appendNode(_self_, &((*(_17408_stmt))._field_tokens));
		}
	_iter_next_1c01e9777:;
	}
	_iter_end_1c01e9777:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1bb086948_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1bb0976e5_pushErr(_1bb09711d_typeBuilder* _self_, jule::Ptr<_1ad6ceb70_Token> _3123_token, jule::Str _3145_fmt) {
	if ((*(_self_))._field_err) {
		_1bb086948_pushErr((*(_self_))._field_p.ptr(), _3123_token, _3145_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1bb097a58_pushSuggestion(_1bb09711d_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args) {
	if ((*(_self_))._field_err) {
		_1bb086cab_pushSuggestion((*(_self_))._field_p.ptr(), _3830_fmt, _3850_args);
	};
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb097cde_buildNamespace(_1bb09711d_typeBuilder* _self_) {
	jule::Ptr<_1ad6e51b3_TypeDecl> _457_t = jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1ad6e5e61_NamespaceTypeDecl> _487_ns = jule::new_ptr<_1ad6e5e61_NamespaceTypeDecl>(_1ad6e5e61_NamespaceTypeDecl{._field_Namespace=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Kind=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr)});;
	(*_487_ns.alloc)._field_Namespace=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((((*((*_487_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_487_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U64>(31LLU)))) {
		_1bb0976e5_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bb097a58_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1bb0976e5_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bb097a58_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(19LLU))) {
		_1bb0976e5_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bb097a58_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1bb0976e5_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bb097a58_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_487_ns.alloc)._field_Kind=_1bb098592_buildIdent(_self_);
	(*(_457_t))._field_Kind=jule::Any(_487_ns, &__jule_any_type93);
	return _457_t;;
}



inline jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> _1bb098075_buildGenerics(_1bb09711d_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ad6ceb70_Token> _803_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_803_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _857_parts = _1bb09830b_identGenerics(_self_);;
	if ((_857_parts.len() == 0LL)) {
		_1bb0976e5_pushErr(_self_, _803_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> _917_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>::alloc(0LL, _857_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0209c93:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _9215_part = *it;
			{
				jule::I64 _938_j = 0LL;;
				jule::Ptr<_1ad6e51b3_TypeDecl> _948_t;
				({
					__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType((*(_self_))._field_p, &(_9215_part), (&(_938_j)), true);
					_948_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_938_j < _9215_part.len())) {
					_1bb0976e5_pushErr(_self_, _9215_part[_938_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>> &__jule_push_dest = _917_types; __jule_push_dest.push(_948_t); };
			}
			_iter_next_1c0209c93:;
			++it;
			goto _iter_begin_1c0209c93;
		}
		_iter_end_1c0209c93:;
	};
	return _917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1bb09830b_identGenerics(_1bb09711d_typeBuilder* _self_) {
	jule::I64 _1043_first = (*((*(_self_))._field_i));;
	jule::I64 _1057_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ad6ceb70_Token> _1074_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1074_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1c020de62:;
					{
						(_1057_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1c020e292:;
					{
						(_1057_rangeN)--;
					}
				}
				_match_end_1c020ded9:;
			};
			if ((_1057_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1c020d13c;
			};
		}
	_iter_next_1c020d13c:;
	}
	_iter_end_1c020d13c:;;
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _1197_tokens = (*(_self_))._field_tokens.slice((_1043_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1207_parts;
	jule::Slice<_1dd356476_Log> _12014_errors;
	({
		__jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb084d86_parts(&(_1197_tokens), static_cast<jule::U64>(5LLU), true);
		_1207_parts = __jule_assign_result.__jule_result_arg0;
		_12014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12014_errors);
	};
	return _1207_parts;;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb098592_buildIdent(_1bb09711d_typeBuilder* _self_) {
	jule::Bool _1287_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1287_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1bb097cde_buildNamespace(_self_);;
	};
	jule::Ptr<_1ad6ceb70_Token> _1327_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ad6e57bd_IdentTypeDecl> _1337_it = jule::new_ptr<_1ad6e57bd_IdentTypeDecl>(_1ad6e57bd_IdentTypeDecl{._field_Token=_1327_token, ._field_Ident=(*(_1327_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ad6e51b3_TypeDecl> _1397_itd = jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1337_it, &__jule_any_type77)});;
	if (((!(_1287_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1337_it))._field_Generics=_1bb098075_buildGenerics(_self_);
		return _1397_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1bb0976e5_pushErr(_self_, _1327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1bb0976e5_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	jule::Ptr<_1ad6e5a87_SubIdentTypeDecl> _1567_sit = jule::new_ptr<_1ad6e5a87_SubIdentTypeDecl>(_1ad6e5a87_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1ad6e57bd_IdentTypeDecl>>(nullptr)});;
	(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e57bd_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1337_it; __jule_collection; }));
	jule::Ptr<_1ad6e51b3_TypeDecl> _1587_ident = _1bb098592_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1587_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1c021ec75:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e57bd_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1587_ident))._field_Kind.cast_ptr<_1ad6e57bd_IdentTypeDecl>(&__jule_any_type77); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1c021917b:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,(*((*(_1587_ident))._field_Kind.unsafe_cast_ptr<_1ad6e5a87_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1c021ebed:;
	};
	return jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1567_sit, &__jule_any_type89)});;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb098828_buildCppLink(_1bb09711d_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1bb0976e5_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1ad6e51b3_TypeDecl> _1777_t = _1bb098592_buildIdent(_self_);;
	(*((*(_1777_t))._field_Kind.cast_ptr<_1ad6e57bd_IdentTypeDecl>(&__jule_any_type77)))._field_Binded=true;
	return _1777_t;;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb098aae_buildFn(_1bb09711d_typeBuilder* _self_) {
	jule::Ptr<_1ad6ceb70_Token> _1837_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ad706d73_FnDecl> _1847_f = _1bb08c630_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1847_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ad707219_IsAnon(_1847_f.ptr())))) {
		_1bb0976e5_pushErr(_self_, (*(_1847_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=_1837_token, ._field_Kind=jule::Any(_1847_f, &__jule_any_type67)});;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb098d45_buildPtr(_1bb09711d_typeBuilder* _self_) {
	jule::Ptr<_1ad6ceb70_Token> _1987_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1bb0976e5_pushErr(_self_, _1987_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1ad6e6bdc_PtrTypeDecl>(_1ad6e6bdc_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type73)});;
	};
	jule::Ptr<_1ad6e51b3_TypeDecl> _2157_elem = _1bb099d9b_step(_self_);;
	if ((_2157_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1ad6e6bdc_PtrTypeDecl>(_1ad6e6bdc_PtrTypeDecl{._field_Elem=_2157_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb0990cb_buildSptr(_1bb09711d_typeBuilder* _self_) {
	jule::Ptr<_1ad6ceb70_Token> _2297_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1bb0976e5_pushErr(_self_, _2297_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ad6e51b3_TypeDecl> _2367_elem = _1bb099d9b_step(_self_);;
	if ((_2367_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=_2297_token, ._field_Kind=jule::Any(jule::new_ptr<_1ad6e625d_SptrTypeDecl>(_1ad6e625d_SptrTypeDecl{._field_Elem=_2367_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb099362_buildSlc(_1bb09711d_typeBuilder* _self_) {
	jule::Ptr<_1ad6ceb70_Token> _2507_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1ad6e51b3_TypeDecl> _2527_elem = _1bb099d9b_step(_self_);;
	if ((_2527_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=_2507_token, ._field_Kind=jule::Any(jule::new_ptr<_1ad6e65e3_SlcTypeDecl>(_1ad6e65e3_SlcTypeDecl{._field_Elem=_2527_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb0995e8_buildArr(_1bb09711d_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _2657_exprTokens = _1bb084616_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1bb0976e5_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1ad6e51b3_TypeDecl> _2717_elem = _1bb099d9b_step(_self_);;
	if ((_2717_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad6e747e_ArrTypeDecl> _2767_arrt = jule::new_ptr<_1ad6e747e_ArrTypeDecl>(_1ad6e747e_ArrTypeDecl{._field_Elem=_2717_elem, ._field_Size=jule::Ptr<_1ad6e94e7_Expr>(nullptr)});;
	jule::Ptr<_1ad6ceb70_Token> _2807_token = _2657_exprTokens[0LL];;
	if (((_2657_exprTokens.len() == 1LL) && ((*(_2807_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2767_arrt))._field_Size=_1bb0870ec_buildExpr((*(_self_))._field_p, &(_2657_exprTokens));
	};
	return jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=_2807_token, ._field_Kind=jule::Any(_2767_arrt, &__jule_any_type71)});;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb09987e_buildMap(_1bb09711d_typeBuilder* _self_) {
	jule::Ptr<_1ad6ceb70_Token> _2947_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1bb0976e5_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _3027_keyTokens = _1bb084616_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1bb0976e5_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3027_keyTokens.len() == 0LL)) {
		_1bb0976e5_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1ad6e7bcc_MapTypeDecl> _3117_mapt = jule::new_ptr<_1ad6e7bcc_MapTypeDecl>(_1ad6e7bcc_MapTypeDecl{._field_Key=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr)});;
	jule::I64 _3127_j = 0LL;;
	jule::Ptr<_1ad6e51b3_TypeDecl> _3137_keyt;
	jule::Bool _31317_ok;
	({
		__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType((*(_self_))._field_p, &(_3027_keyTokens), (&(_3127_j)), (*(_self_))._field_err);
		_3137_keyt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	} else if ((_3127_j < _3027_keyTokens.len())) {
		_1bb0976e5_pushErr(_self_, _3027_keyTokens[_3127_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3117_mapt.alloc)._field_Key=_3137_keyt;
	jule::Ptr<_1ad6e51b3_TypeDecl> _3217_valt;
	({
		__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_assign_result = _1bb08854e_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3217_valt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	};
	(*_3117_mapt.alloc)._field_Val=_3217_valt;
	return jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=_2947_mapToken, ._field_Kind=jule::Any(_3117_mapt, &__jule_any_type75)});;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb099b15_buildEnumerable(_1bb09711d_typeBuilder* _self_) {
	jule::Ptr<_1ad6ceb70_Token> _3337_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1bb0976e5_pushErr(_self_, _3337_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3337_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3337_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1bb099362_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1bb0995e8_buildArr(_self_);;
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb099d9b_step(_1bb09711d_typeBuilder* _self_) {
	jule::Ptr<_1ad6ceb70_Token> _3483_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3483_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1c0240339:;
			{
				return _1bb098592_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1c0240724:;
			{
				return _1bb098828_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1c024078a:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1ad6e51b3_TypeDecl> _3589_f = _1bb098aae_buildFn(_self_);;
					if ((_3589_f != nullptr)) {
						(*((*_3589_f.alloc)._field_Kind.cast_ptr<_1ad706d73_FnDecl>(&__jule_any_type67)))._field_Unsafety=true;
					};
					return _3589_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1c0240801:;
			{
				return _1bb098aae_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c0240867:;
			{
				return _1bb098d45_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c02408de:;
			{
				return _1bb0990cb_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1c0240966:;
			{
				return jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1ad6e625d_SptrTypeDecl>(_1ad6e625d_SptrTypeDecl{._field_Elem=_1bb0990cb_buildSptr(_self_)}), &__jule_any_type74)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1c02409dd:;
			{
				return _1bb099b15_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1c0240a65:;
			{
				return _1bb09987e_buildMap(_self_);;
			}
		}
		_match_end_1c02403b1:;
	};
	((*((*(_self_))._field_i)))++;
	_1bb0976e5_pushErr(_self_, _3483_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool _1bb09a132_build(_1bb09711d_typeBuilder* _self_) {
	__jule_tuple_x_1ad6e51b3_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ad6e51b3_TypeDecl> _3897_root = _1bb099d9b_step(_self_);;
	if ((_3897_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1bb09686a_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3897_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1adb5c6a2_CompileInfo_eq(_1adb5c6a2_CompileInfo *_self_, _1adb5c6a2_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1adb5e0ee_pushErr(_1adb5da7c_directiveEval* _self_, jule::Ptr<_1ad6ceb70_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args) {
	{ jule::Slice<_1dd356476_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1dd356476_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1dd3568d8_Logf(_2141_fmt, _2161_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1adb5e4ea_splitOperans(_1adb5da7c_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _3348_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1ad6ceb70_Token>>(nullptr); __jule_collection; });;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3348_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1ad6ceb70_Token> _394_b = (*(_3348_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c0269352:;
					{
						(_367_rangeN)++;
						goto _iter_next_1c02688c3;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c0269682:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1c02693c9:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1c02688c3;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1c02688c3:;
	}
	_iter_end_1c02688c3:;;
	if ((_377_last < (*(_3348_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last)); };
	} else {
		_1adb5e0ee_pushErr(_self_, (*(_3348_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1adb5e83b_evalDirectiveIdent(_1adb5da7c_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c026c245:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1c026c245:;
			++it;
			goto _iter_begin_1c026c245;
		}
		_iter_end_1c026c245:;
	};
	return false;;
}



inline jule::Bool _1adb5eb7c_evalDirectivePart(_1adb5da7c_directiveEval* _self_, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1adb5e0ee_pushErr(_self_, _7837_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1adb5e83b_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1adb5ee13_eval(_1adb5da7c_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1adb5e0ee_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1047_logicalOrParts = _1adb5e4ea_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0272c62:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> _1118_logicalAndParts = _1adb5e4ea_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c027478b:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1ad6ceb70_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1ad6ceb70_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1adb5e0ee_pushErr(_self_, _1175_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1adb5eb7c_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1c027478b:;
						++it;
						goto _iter_begin_1c027478b;
					}
					_iter_end_1c027478b:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1c0272c62:;
			++it;
			goto _iter_begin_1c0272c62;
		}
		_iter_end_1c0272c62:;
	};
	return _1027_result;;
}







inline jule::Ptr<_1bb09b254_Importer> static__1bb09b683_New(_1adb5c6a2_CompileInfo _4516_info) {
	jule::Ptr<_1bb09b254_Importer> _467_imp = jule::new_ptr<_1bb09b254_Importer>(_1bb09b254_Importer{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1dd46550d_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1adb5d032_initVars(&((*(_467_imp))._field_vars), &(_4516_info));
	return _467_imp;;
}



inline jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>> _1bb09b919_AllPackages(_1bb09b254_Importer* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1bb09bd59_SetModPath(_1bb09b254_Importer* _self_, jule::Str _6226_path) {
	(*(_self_))._field_mod=_6226_path;
}



inline jule::Str _1bb09c0e0_GetModPath(_1bb09b254_Importer* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1bb09c431_ModById(_1bb09b254_Importer* _self_, jule::I64 _7019_id) {
	return (*(_self_))._field_mods[_7019_id];;
}



inline jule::Ptr<_1ad8e1bea_ImportInfo> _1bb09c772_GetImport(_1bb09b254_Importer* _self_, jule::Str _7425_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c027ac15:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _7515_p = *it;
			{
				if (_1dd0c33ad_EqualFold((*(_7515_p))._field_Path, _7425_path)) {
					return _7515_p;;
				};
			}
			_iter_next_1c027ac15:;
			++it;
			goto _iter_begin_1c027ac15;
		}
		_iter_end_1c027ac15:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ad6e325a_AST__jule_tuple_s_1dd356476_Log _1bb09cb6d_ImportPackage(_1bb09b254_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod) {
	__jule_tuple_sx_1ad6e325a_AST__jule_tuple_s_1dd356476_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1dbd04750_DirEntry>> _857_dirents = ({
		auto except = static__1dd0c8171_Read(_8429_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_1dd356476_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bb09ac6a_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _8429_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_1dbd04750_DirEntry>>(nullptr);});
	});;
	if (_8440_updateMod) {
		jule::Str _904_newMod = _1ad90b50b_FindModuleFileDeep(_8429_path);;
		if ((_904_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_904_newMod;
			jule::Slice<_1dd356476_Log> _939_errs = _1ad90b7c5_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_939_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _939_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1ad6e325a_AST>> _1007_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad6e325a_AST>>::alloc(0LL, _857_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad6e325a_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c027ce48:;
		if (it != expr_end) {
			jule::Ptr<_1dbd04750_DirEntry> _10110_dirent = *it;
			{
				if ((_1dbd08952_IsDir((*(_10110_dirent))._field_Stat.ptr()) || (!(_1dd0a3cea_HasSuffix((*_10110_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1c027ce48;
				};
				jule::Str _1074__path = _1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _8429_path; (*it++) = (*_10110_dirent.alloc)._field_Name; __jule_collection; }));;
				jule::Ptr<_1ad6d5527_Fileset> _1088_file = static__1ad6d5989_New(_1074__path);;
				_1ad6d5c42_Fill(_1088_file.ptr(), _1bb09a84c_readBuff((*_1088_file.alloc)._field_Path));
				jule::Slice<_1dd356476_Log> _1108_errors = _1ad6e2c82_Lex(_1088_file, static_cast<jule::I64>(0LL));;
				if ((_1108_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1108_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1bb01b25c_FileInfo> _1158_finfo = _1bb0651eb_ParseFile(_1088_file);;
				if (((*(_1158_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1158_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1adb3c5c7_isPassFileAnnotation((*_10110_dirent.alloc)._field_Name)))) {
					goto _iter_next_1c027ce48;
				};
				jule::Bool _1254_r;
				jule::Slice<_1dd356476_Log> _12511_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb09d355_isPassBuildDirectives(_self_, &((*_1158_finfo.alloc)._field_Ast));
					_1254_r = __jule_assign_result.__jule_result_arg0;
					_12511_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_12511_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12511_logs;
					return __jule_func_result;;
				};
				if ((!(_1254_r))) {
					goto _iter_next_1c027ce48;
				};
				{ jule::Slice<jule::Ptr<_1ad6e325a_AST>> &__jule_push_dest = _1007_asts; __jule_push_dest.push((*_1158_finfo.alloc)._field_Ast); };
			}
			_iter_next_1c027ce48:;
			++it;
			goto _iter_begin_1c027ce48;
		}
		_iter_end_1c027ce48:;
	};
	__jule_func_result.__jule_result_arg0 = _1007_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1bb09ce26_Imported(_1bb09b254_Importer* _self_, jule::Ptr<_1ad8e1bea_ImportInfo> _14128_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c028007c:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _14310_p = *it;
			{
				if ((((*(_14310_p))._field_Binded == (*(_14128_imp))._field_Binded) && _1dd0c33ad_EqualFold((*_14310_p.alloc)._field_Path, (*_14128_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_1c028007c:;
			++it;
			goto _iter_begin_1c028007c;
		}
		_iter_end_1c028007c:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0287727:;
			if (it != expr_end) {
				jule::I64 _1518_i = it - expr->begin();
				jule::Str _15111_mod = *it;
				{
					if (((*(_self_))._field_mod == _15111_mod)) {
						(*_14128_imp.alloc)._field_ModId=_1518_i;
						goto _julec_label_1c0286d75;
					};
				}
				_iter_next_1c0287727:;
				++it;
				_1518_i++;
				goto _iter_begin_1c0287727;
			}
			_iter_end_1c0287727:;
		};
		(*_14128_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1c0286d75:;
	};
	{ jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_14128_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1dd356476_Log _1bb09d355_isPassBuildDirectives(_1bb09b254_Importer* _self_, jule::Ptr<_1ad6e325a_AST>* _16842_file) {
	__jule_tuple_bool__jule_tuple_s_1dd356476_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_16842_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0280038:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e45d0_Directive> _16915_td = *it;
			{
				if (((*((*(_16915_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1c0280038;
				};
				_1adb5da7c_directiveEval _1738_de = _1adb5da7c_directiveEval{._field_logs=jule::Slice<_1dd356476_Log>(nullptr), ._field_d=_16915_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1774_result = _1adb5ee13_eval(&_1738_de);;
				if ((_1738_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1738_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1774_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1c0280038:;
			++it;
			goto _iter_begin_1c0280038;
		}
		_iter_end_1c0280038:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline jule::Ptr<_1bb0a2cd8_ExprInspector> static__1bb0a3107_New(void) {
	return jule::new_ptr<_1bb0a2cd8_ExprInspector>(_1bb0a2cd8_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1bb0a33b0_args(_1bb0a2cd8_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args) {
	{
		auto expr = &(_2224_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02d24b9:;
		if (it != expr_end) {
			jule::Any _2315_arg = *it;
			{
				_1bb0a3668_inspect(_self_, &(_2315_arg));
			}
			_iter_next_1c02d24b9:;
			++it;
			goto _iter_begin_1c02d24b9;
		}
		_iter_end_1c02d24b9:;
	};
}



inline void _1bb0a3668_inspect(_1bb0a2cd8_ExprInspector* _self_, jule::Any* _2828_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_2828_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_2828_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c02d38d8:;
			{
				jule::Ptr<_1ad7da3a7_BinaryExprModel> _368_b = (*(_2828_m)).cast_ptr<_1ad7da3a7_BinaryExprModel>(&__jule_any_type113);;
				_1bb0a3668_inspect(_self_, &((*((*(_368_b))._field_Left))._field_Model));
				_1bb0a3668_inspect(_self_, &((*((*_368_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c02d3a5e:;
			{
				jule::Ptr<_1ad7da781_UnaryExprModel> _408_u = (*(_2828_m)).cast_ptr<_1ad7da781_UnaryExprModel>(&__jule_any_type112);;
				_1bb0a3668_inspect(_self_, &((*((*(_408_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c02d394e:;
			{
				jule::Ptr<_1ad7db155_StructLitExprModel> _438_lit = (*(_2828_m)).cast_ptr<_1ad7db155_StructLitExprModel>(&__jule_any_type97);;
				{
					auto expr = &((*(_438_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c02d7dc6:;
					if (it != expr_end) {
						jule::Ptr<_1ad7dacae_StructArgExprModel> _4416_arg = *it;
						{
							_1bb0a3668_inspect(_self_, &((*((*(_4416_arg))._field_Expr))._field_Model));
						}
						_iter_next_1c02d7dc6:;
						++it;
						goto _iter_begin_1c02d7dc6;
					}
					_iter_end_1c02d7dc6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c02d3d28:;
			{
				jule::Ptr<_1ad7db155_StructLitExprModel> _488_lit = (*((*(_2828_m)).cast_ptr<_1ad7db452_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
				{
					auto expr = &((*(_488_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c02d95ae:;
					if (it != expr_end) {
						jule::Ptr<_1ad7dacae_StructArgExprModel> _4916_arg = *it;
						{
							_1bb0a3668_inspect(_self_, &((*((*(_4916_arg))._field_Expr))._field_Model));
						}
						_iter_next_1c02d95ae:;
						++it;
						goto _iter_begin_1c02d95ae;
					}
					_iter_end_1c02d95ae:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c02d3d8e:;
			{
				jule::Ptr<_1ad7db9d5_CastingExprModel> _538_c = (*(_2828_m)).cast_ptr<_1ad7db9d5_CastingExprModel>(&__jule_any_type95);;
				_1bb0a3668_inspect(_self_, &((*((*(_538_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c02d3e05:;
			{
				jule::Ptr<_1ad7dc387_FnCallExprModel> _568_fc = (*(_2828_m)).cast_ptr<_1ad7dc387_FnCallExprModel>(&__jule_any_type30);;
				_1bb0a3668_inspect(_self_, &((*(_568_fc))._field_Expr));
				_1bb0a33b0_args(_self_, (*_568_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c02d3e6b:;
			{
				jule::Ptr<_1ad7dc761_SliceExprModel> _608_s = (*(_2828_m)).cast_ptr<_1ad7dc761_SliceExprModel>(&__jule_any_type79);;
				_1bb0a33b0_args(_self_, (*(_608_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c02d3ed2:;
			{
				jule::Ptr<_1ad7e0698_ArrayExprModel> _638_a = (*(_2828_m)).cast_ptr<_1ad7e0698_ArrayExprModel>(&__jule_any_type87);;
				_1bb0a33b0_args(_self_, (*(_638_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c02d4059:;
			{
				jule::Ptr<_1ad7dcc17_IndexingExprModel> _668_i = (*(_2828_m)).cast_ptr<_1ad7dcc17_IndexingExprModel>(&__jule_any_type42);;
				_1bb0a3668_inspect(_self_, &((*((*(_668_i))._field_Expr))._field_Model));
				_1bb0a3668_inspect(_self_, &((*((*_668_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c02d40d1:;
			{
				jule::Ptr<_1ad7dd971_MapExprModel> _708_mp = (*(_2828_m)).cast_ptr<_1ad7dd971_MapExprModel>(&__jule_any_type101);;
				{
					auto expr = &((*(_708_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c02e0b48:;
					if (it != expr_end) {
						jule::Ptr<_1ad7dd597_KeyValPairExprModel> _7116_entry = *it;
						{
							_1bb0a3668_inspect(_self_, &((*(_7116_entry))._field_Key));
							_1bb0a3668_inspect(_self_, &((*_7116_entry.alloc)._field_Val));
						}
						_iter_next_1c02e0b48:;
						++it;
						goto _iter_begin_1c02e0b48;
					}
					_iter_end_1c02e0b48:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c02d4158:;
			{
				jule::Ptr<_1ad7de004_SlicingExprModel> _768_s = (*(_2828_m)).cast_ptr<_1ad7de004_SlicingExprModel>(&__jule_any_type94);;
				_1bb0a3668_inspect(_self_, &((*(_768_s))._field_Expr));
				_1bb0a3668_inspect(_self_, &((*_768_s.alloc)._field_Left));
				if (((*_768_s.alloc)._field_Right != nullptr)) {
					_1bb0a3668_inspect(_self_, &((*_768_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c02d41d0:;
			{
				jule::Ptr<_1ad7de587_TraitSubIdentExprModel> _838_t = (*(_2828_m)).cast_ptr<_1ad7de587_TraitSubIdentExprModel>(&__jule_any_type99);;
				_1bb0a3668_inspect(_self_, &((*(_838_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c02d4257:;
			{
				jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _868_s = (*(_2828_m)).cast_ptr<_1ad7dee28_StructSubIdentExprModel>(&__jule_any_type100);;
				_1bb0a3668_inspect(_self_, &((*((*(_868_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c02d42ce:;
			{
				jule::Ptr<_1ad7e0995_TupleExprModel> _898_t = (*(_2828_m)).cast_ptr<_1ad7e0995_TupleExprModel>(&__jule_any_type83);;
				{
					auto expr = &((*(_898_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c02e5730:;
					if (it != expr_end) {
						jule::Ptr<_1ad985b90_Data> _9016_d = *it;
						{
							_1bb0a3668_inspect(_self_, &((*(_9016_d))._field_Model));
						}
						_iter_next_1c02e5730:;
						++it;
						goto _iter_begin_1c02e5730;
					}
					_iter_end_1c02e5730:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c02d4356:;
			{
				jule::Ptr<_1ad7e1622_BuiltinNewCallExprModel> _948_b = (*(_2828_m)).cast_ptr<_1ad7e1622_BuiltinNewCallExprModel>(&__jule_any_type115);;
				if (((*(_948_b))._field_Init != nullptr)) {
					_1bb0a3668_inspect(_self_, &((*_948_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c02d43cd:;
			{
				jule::Ptr<_1ad7e0d6e_BuiltinOutCallExprModel> _998_c = (*(_2828_m)).cast_ptr<_1ad7e0d6e_BuiltinOutCallExprModel>(&__jule_any_type24);;
				_1bb0a3668_inspect(_self_, &((*((*(_998_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c02d4455:;
			{
				jule::Ptr<_1ad7e1248_BuiltinOutlnCallExprModel> _1028_c = (*(_2828_m)).cast_ptr<_1ad7e1248_BuiltinOutlnCallExprModel>(&__jule_any_type25);;
				_1bb0a3668_inspect(_self_, &((*((*(_1028_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c02d44cc:;
			{
				jule::Ptr<_1ad7e19eb_BuiltinPanicCallExprModel> _1058_c = (*(_2828_m)).cast_ptr<_1ad7e19eb_BuiltinPanicCallExprModel>(&__jule_any_type26);;
				_1bb0a3668_inspect(_self_, &((*(_1058_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c02d4554:;
			{
				jule::Ptr<_1ad7e3602_BuiltinErrorCallExprModel> _1088_c = (*(_2828_m)).cast_ptr<_1ad7e3602_BuiltinErrorCallExprModel>(&__jule_any_type20);;
				_1bb0a3668_inspect(_self_, &((*((*(_1088_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c02d45cb:;
			{
				jule::Ptr<_1ad7e1ea2_BuiltinMakeCallExprModel> _1118_b = (*(_2828_m)).cast_ptr<_1ad7e1ea2_BuiltinMakeCallExprModel>(&__jule_any_type116);;
				if (((*(_1118_b))._field_Len != nullptr)) {
					_1bb0a3668_inspect(_self_, &((*_1118_b.alloc)._field_Len));
				};
				if (((*_1118_b.alloc)._field_Cap != nullptr)) {
					_1bb0a3668_inspect(_self_, &((*_1118_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c02d4653:;
			{
				jule::Ptr<_1ad7e237b_BuiltinAppendCallExprModel> _1198_b = (*(_2828_m)).cast_ptr<_1ad7e237b_BuiltinAppendCallExprModel>(&__jule_any_type23);;
				_1bb0a3668_inspect(_self_, &((*(_1198_b))._field_Dest));
				_1bb0a3668_inspect(_self_, &((*_1198_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c02d46ca:;
			{
				jule::Ptr<_1ad7e2678_BuiltinLenCallExprModel> _1238_l = (*(_2828_m)).cast_ptr<_1ad7e2678_BuiltinLenCallExprModel>(&__jule_any_type117);;
				_1bb0a3668_inspect(_self_, &((*((*(_1238_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c02d4752:;
			{
				jule::Ptr<_1ad7e2975_BuiltinCapCallExprModel> _1268_c = (*(_2828_m)).cast_ptr<_1ad7e2975_BuiltinCapCallExprModel>(&__jule_any_type118);;
				_1bb0a3668_inspect(_self_, &((*((*(_1268_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c02d47c9:;
			{
				jule::Ptr<_1ad7e2d4e_BuiltinDeleteCallExprModel> _1298_b = (*(_2828_m)).cast_ptr<_1ad7e2d4e_BuiltinDeleteCallExprModel>(&__jule_any_type28);;
				_1bb0a3668_inspect(_self_, &((*((*(_1298_b))._field_Dest))._field_Model));
				if (((*_1298_b.alloc)._field_Key != nullptr)) {
					_1bb0a3668_inspect(_self_, &((*(*(_1298_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c02d4851:;
			{
				jule::Ptr<_1ad7e38ee_SizeofExprModel> _1358_s = (*(_2828_m)).cast_ptr<_1ad7e38ee_SizeofExprModel>(&__jule_any_type119);;
				_1bb0a3668_inspect(_self_, &((*(_1358_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1c02d48c8:;
			{
				jule::Ptr<_1ad7e40a3_AlignofExprModel> _1388_a = (*(_2828_m)).cast_ptr<_1ad7e40a3_AlignofExprModel>(&__jule_any_type120);;
				_1bb0a3668_inspect(_self_, &((*(_1388_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c02d4950:;
			{
				jule::Ptr<_1ad7e4911_FreeExprModel> _1418_f = (*(_2828_m)).cast_ptr<_1ad7e4911_FreeExprModel>(&__jule_any_type29);;
				_1bb0a3668_inspect(_self_, &((*(_1418_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c02d49c7:;
			{
				jule::Ptr<_1ad7e4614_BackendEmitExprModel> _1448_e = (*(_2828_m)).cast_ptr<_1ad7e4614_BackendEmitExprModel>(&__jule_any_type22);;
				_1bb0a33b0_args(_self_, (*(_1448_e))._field_Exprs);
			}
		}
		_match_end_1c02d3872:;
	};
}



inline void _1bb0a39cb_Inspect(_1bb0a2cd8_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f) {
	(*(_self_))._field_handler=_15248_f;
	_1bb0a3668_inspect(_self_, _15228_m);
}












inline jule::Bool _1bbed7722_specialCaseDefines_eq(_1bbed7722_specialCaseDefines *_self_, _1bbed7722_specialCaseDefines _other_) {
	return 
		(_self_->_field_runtime_Map == _other_._field_runtime_Map) &&
		(_self_->_field_runtime_mapIterator == _self_->_field_runtime_mapIterator);
}

inline jule::Bool _1bbedaabb_isAllMethodsLive(_1bbed7722_specialCaseDefines* _self_, jule::Ptr<_1ad7159ec_Struct> _1928_s) {
	return ((_1928_s == (*(_self_))._field_runtime_Map) || (_1928_s == (*(_self_))._field_runtime_mapIterator));;
}











inline jule::Ptr<_1bbedb627_ObjectDeadCode> static__1bbedbb99_new(jule::Ptr<_1bb09dcd4_IR>* _3921_ir) {
	return jule::new_ptr<_1bbedb627_ObjectDeadCode>(_1bbedb627_ObjectDeadCode{._field_live=_1bbedb171_liveTable{._field_vars=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1ad718857_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1ad802ea2_Trait>>(nullptr)}, ._field_ir=(*(_3921_ir)), ._field_scd=_1bbed7722_specialCaseDefines{._field_runtime_Map=jule::Ptr<_1ad7159ec_Struct>(nullptr), ._field_runtime_mapIterator=jule::Ptr<_1ad7159ec_Struct>(nullptr)}});;
}



inline jule::Bool _1c034a6db_isLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad718857_StructIns>* _4527_t) {
	jule::Slice<jule::Ptr<_1ad718857_StructIns>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1c034c3d0:;
			{
				_4611_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1c034c29d:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c034c314:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1c034c314:;
			++it;
			_577_i++;
			goto _iter_begin_1c034c314;
		}
		_iter_end_1c034c314:;
	};
	return false;;
}

inline jule::Bool _1c03525d3_isLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _4527_t) {
	jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1c035421c:;
			{
				_4611_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1c0354151:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c03541b7:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1c03541b7:;
			++it;
			_577_i++;
			goto _iter_begin_1c03541b7;
		}
		_iter_end_1c03541b7:;
	};
	return false;;
}

inline jule::Bool _1c037e06b_isLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad802ea2_Trait>* _4527_t) {
	jule::Slice<jule::Ptr<_1ad802ea2_Trait>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1c0380cc6:;
			{
				_4611_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1c0380b2d:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0381d93:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1c0381d93:;
			++it;
			_577_i++;
			goto _iter_begin_1c0381d93;
		}
		_iter_end_1c0381d93:;
	};
	return false;;
}

inline jule::Bool _1c0389296_isLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad933a83_Var>* _4527_t) {
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _4611_live = nullptr;;
	{
		
{
			_case_begin_1c038abb0:;
			{
				_4611_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1c038ad14:;
	};
	{
		auto expr = &(_4611_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c038b84d:;
		if (it != expr_end) {
			jule::I64 _577_i = it - expr->begin();
			{
				if ((_4611_live[_577_i] == (*(_4527_t)))) {
					return true;;
				};
			}
			_iter_next_1c038b84d:;
			++it;
			_577_i++;
			goto _iter_begin_1c038b84d;
		}
		_iter_end_1c038b84d:;
	};
	return false;;
}



inline void _1c034b16a_pushLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad718857_StructIns> _6532_t) {
	{
		
{
			_case_begin_1c034e778:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad718857_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1c034d4d0:;
	};
}

inline void _1c0355cbd_pushLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad7ea84b_FnIns> _6532_t) {
	{
		
{
			_case_begin_1c0356c36:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1c0356131:;
	};
}

inline void _1c037e9ea_pushLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad802ea2_Trait> _6532_t) {
	{
		
{
			_case_begin_1c0382e60:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad802ea2_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1c0381711:;
	};
}

inline void _1c038c70b_pushLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad933a83_Var> _6532_t) {
	{
		
{
			_case_begin_1c038d443:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6532_t; __jule_collection; }));
			}
		}
		_match_end_1c038be8b:;
	};
}



inline void _1bbedc518_pushStructAsLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad718857_StructIns>* _7838_s) {
	if (_1c034a6db_isLive(_self_, _7838_s)) {
		return;;
	};
	_1c034b16a_pushLive(_self_, (*(_7838_s)));
	_1bbedc7c1_setReferencesAsLive(_self_, &((*((*(_7838_s))))._field_Refers));
	jule::Bool _843_allLive = _1bbedaabb_isAllMethodsLive(&(*_self_.alloc)._field_scd, (*((*(_7838_s))))._field_Decl);;
	{
		auto expr = &((*((*(_7838_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0350bec:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _8515_m = *it;
			{
				{
					auto expr = &((*(_8515_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c03515c1:;
					if (it != expr_end) {
						jule::Ptr<_1ad7ea84b_FnIns> _8616_ins = *it;
						{
							if (_1c03525d3_isLive(_self_, &(_8616_ins))) {
								goto _iter_next_1c03515c1;
							};
							if (_843_allLive) {
								_1c0355cbd_pushLive(_self_, _8616_ins);
								_1bbedc7c1_setReferencesAsLive(_self_, &((*(_8616_ins))._field_Refers));
								goto _iter_next_1c03515c1;
							};
							if (_1bb0a5637_IsTraitMethod(_7838_s, &(_8616_ins))) {
								_1c0355cbd_pushLive(_self_, _8616_ins);
								_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
							};
							;
							;
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Eq)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Gt)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_GtEq)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Lt)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_LtEq)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Shl)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Shr)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Add)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Sub)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Div)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Mul)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Mod)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitAnd)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitOr)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitXor)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Neg)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_Pos)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitNot)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_AddAssign)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_SubAssign)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_DivAssign)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_MulAssign)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ModAssign)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ShlAssign)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_ShrAssign)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitOrAssign)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitAndAssign)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_8616_ins == (*((*(_7838_s))))._field_Operators._field_BitXorAssign)) {
									_1c0355cbd_pushLive(_self_, _8616_ins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*_8616_ins.alloc)._field_Refers));
								};
							};
							;
							jule::Ptr<_1ad7e778d_Fn> _1249_dispose = _1ad719902_FindMethod((*(_7838_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
							if (((_1249_dispose != nullptr) && static__1ad93505c_Dispose(_1249_dispose))) {
								jule::Ptr<_1ad7ea84b_FnIns> _12610_fins = (*_1249_dispose.alloc)._field_Instances[0LL];;
								_1c0355cbd_pushLive(_self_, _12610_fins);
								_1bbedc7c1_setReferencesAsLive(_self_, &((*(_12610_fins))._field_Refers));
							};
							jule::Ptr<_1ad7e778d_Fn> _1319__str = _1ad719902_FindMethod((*(_7838_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1319__str != nullptr) && static__1ad935326_Str(_1319__str))) {
								jule::Ptr<_1ad7ea84b_FnIns> _13310_fins = (*(_1319__str))._field_Instances[0LL];;
								_1c0355cbd_pushLive(_self_, _13310_fins);
								_1bbedc7c1_setReferencesAsLive(_self_, &((*(_13310_fins))._field_Refers));
							};
						}
						_iter_next_1c03515c1:;
						++it;
						goto _iter_begin_1c03515c1;
					}
					_iter_end_1c03515c1:;
				};
			}
			_iter_next_1c0350bec:;
			++it;
			goto _iter_begin_1c0350bec;
		}
		_iter_end_1c0350bec:;
	};
}



inline void _1bbedc7c1_setReferencesAsLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad8ced70_ReferenceStack>* _14141_rs) {
	if (((*(_14141_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _1457_i = 0LL;;
	for (; (_1457_i < _1ad8d03e2_Len((*(_14141_rs)).ptr())); (_1457_i)++) {
		{
			jule::Any _1478_ref = _1ad8d0733_At((*(_14141_rs)).ptr(), _1457_i);;
			{
				auto &_match_expr{ _1478_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1c037cc5c:;
					{
						jule::Ptr<_1ad802ea2_Trait> _1509_t = _1478_ref.unsafe_cast_ptr<_1ad802ea2_Trait>();;
						if (_1c037e06b_isLive(_self_, &(_1509_t))) {
							goto _iter_next_1c037be04;
						};
						_1c037e9ea_pushLive(_self_, _1509_t);
						{
							auto expr = &((*(_1509_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c037d983:;
							if (it != expr_end) {
								jule::Ptr<_1ad7e778d_Fn> _15517_ins = *it;
								{
									{
										auto expr = &((*(_15517_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1c0382b52:;
										if (it != expr_end) {
											jule::Ptr<_1ad7ea84b_FnIns> _15618_mins = *it;
											{
												if (_1c03525d3_isLive(_self_, &(_15618_mins))) {
													goto _iter_next_1c0382b52;
												};
												_1c0355cbd_pushLive(_self_, _15618_mins);
												_1bbedc7c1_setReferencesAsLive(_self_, &((*(_15618_mins))._field_Refers));
											}
											_iter_next_1c0382b52:;
											++it;
											goto _iter_begin_1c0382b52;
										}
										_iter_end_1c0382b52:;
									};
								}
								_iter_next_1c037d983:;
								++it;
								goto _iter_begin_1c037d983;
							}
							_iter_end_1c037d983:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type63) {
					_case_begin_1c037ca92:;
					{
						jule::Ptr<_1ad7ea84b_FnIns> _1659_f = _1478_ref.unsafe_cast_ptr<_1ad7ea84b_FnIns>();;
						if (_1c03525d3_isLive(_self_, &(_1659_f))) {
							goto _match_end_1c037cb19;
						};
						if ((((*(_1659_f))._field_Owner != nullptr) && (!((*((*_1659_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1c034a6db_isLive(_self_, &((*_1659_f.alloc)._field_Owner))))) {
								_1c034b16a_pushLive(_self_, (*_1659_f.alloc)._field_Owner);
								_1bbedc7c1_setReferencesAsLive(_self_, &((*(*(_1659_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1c0355cbd_pushLive(_self_, _1659_f);
						_1bbedc7c1_setReferencesAsLive(_self_, &((*_1659_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1c037ccc3:;
					{
						jule::Ptr<_1ad933a83_Var> _1789_v = _1478_ref.unsafe_cast_ptr<_1ad933a83_Var>();;
						if (_1c0389296_isLive(_self_, &(_1789_v))) {
							goto _match_end_1c037cb19;
						};
						_1c038c70b_pushLive(_self_, _1789_v);
						_1bbedc7c1_setReferencesAsLive(_self_, &((*(_1789_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type64) {
					_case_begin_1c037cd39:;
					{
						jule::Ptr<_1ad718857_StructIns> _1859_s = _1478_ref.unsafe_cast_ptr<_1ad718857_StructIns>();;
						_1bbedc518_pushStructAsLive(_self_, &(_1859_s));
					}
				}
				_match_end_1c037cb19:;
			};
		}
	_iter_next_1c037be04:;
	}
	_iter_end_1c037be04:;;
}



inline void _1bbedca79_inits(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad8e446c_Package>* _19127_pkg) {
	{
		auto expr = &((*((*(_19127_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c037c2de:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _19215_file = *it;
			{
				{
					auto expr = &((*(_19215_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c039080d:;
					if (it != expr_end) {
						jule::Ptr<_1ad7e778d_Fn> _19316_f = *it;
						{
							if ((*(_19316_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1ad7ea84b_FnIns> _19510_ins = (*(_19316_f))._field_Instances[0LL];;
								if ((!(_1c03525d3_isLive(_self_, &(_19510_ins))))) {
									_1c0355cbd_pushLive(_self_, _19510_ins);
								};
								_1bbedc7c1_setReferencesAsLive(_self_, &((*(_19510_ins))._field_Refers));
							};
						}
						_iter_next_1c039080d:;
						++it;
						goto _iter_begin_1c039080d;
					}
					_iter_end_1c039080d:;
				};
			}
			_iter_next_1c037c2de:;
			++it;
			goto _iter_begin_1c037c2de;
		}
		_iter_end_1c037c2de:;
	};
}



inline void _1bbedcd32_collectLivePackage(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad8e446c_Package>* _20540_pkg) {
	_1bbedca79_inits(_self_, _20540_pkg);
	_1bb0a19da_IterFiles(_20540_pkg, jule::__new_closure<void,jule::Ptr<_1ad7eda91_SymTab>*>((void*)__jule_anon_1c03935e1, jule::Ptr<__jule_anon_1c03935e1_ctx>::make(__jule_anon_1c03935e1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c03935e1_ctx_handler));
	if (_1dd46cc96_Test) {
		if ((((*((*(_20540_pkg))))._field_Files.len() > 0LL) && _1bb0a59ab_IsStdPackage((*((*((*((*(_20540_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1ad7159ec_Struct> _2359_s = _1ad8e5638_FindStruct((*(_20540_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1ad718857_StructIns> _2369_ins = (*(_2359_s))._field_Instances[0LL];;
			_1bbedc518_pushStructAsLive(_self_, &(_2369_ins));
			{
				auto expr = &((*(_2369_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c0399b36:;
				if (it != expr_end) {
					jule::Ptr<_1ad7e778d_Fn> _23817_m = *it;
					{
						{
							auto expr = &((*(_23817_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c039a6a3:;
							if (it != expr_end) {
								jule::Ptr<_1ad7ea84b_FnIns> _23918_mins = *it;
								{
									if (_1c03525d3_isLive(_self_, &(_23918_mins))) {
										goto _iter_next_1c039a6a3;
									};
									_1c0355cbd_pushLive(_self_, _23918_mins);
									_1bbedc7c1_setReferencesAsLive(_self_, &((*(_23918_mins))._field_Refers));
								}
								_iter_next_1c039a6a3:;
								++it;
								goto _iter_begin_1c039a6a3;
							}
							_iter_end_1c039a6a3:;
						};
					}
					_iter_next_1c0399b36:;
					++it;
					goto _iter_begin_1c0399b36;
				}
				_iter_end_1c0399b36:;
			};
		};
		{
			auto expr = &((*((*(_20540_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c039678c:;
			if (it != expr_end) {
				jule::Ptr<_1ad7eda91_SymTab> _24816_file = *it;
				{
					{
						auto expr = &((*(_24816_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c039cd6a:;
						if (it != expr_end) {
							jule::Ptr<_1ad7e778d_Fn> _24917_f = *it;
							{
								if (_1bb0a6c10_HasDirective(&((*(_24917_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1ad7ea84b_FnIns> _25111_ins = (*_24917_f.alloc)._field_Instances[0LL];;
									if ((!(_1c03525d3_isLive(_self_, &(_25111_ins))))) {
										_1c0355cbd_pushLive(_self_, _25111_ins);
									};
									_1bbedc7c1_setReferencesAsLive(_self_, &((*(_25111_ins))._field_Refers));
								};
							}
							_iter_next_1c039cd6a:;
							++it;
							goto _iter_begin_1c039cd6a;
						}
						_iter_end_1c039cd6a:;
					};
				}
				_iter_next_1c039678c:;
				++it;
				goto _iter_begin_1c039678c;
			}
			_iter_end_1c039678c:;
		};
	};
}



inline void _1bbedd030_collectLive(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c039e4ed:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _26315_used = *it;
			{
				if ((!((*(_26315_used))._field_Binded))) {
					_1bbedcd32_collectLivePackage(_self_, &((*_26315_used.alloc)._field_Package));
				};
			}
			_iter_next_1c039e4ed:;
			++it;
			goto _iter_begin_1c039e4ed;
		}
		_iter_end_1c039e4ed:;
	};
	_1bbedcd32_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1ad7e778d_Fn> _2717_main = _1ad8e5a34_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2717_main != nullptr)) {
		jule::Ptr<_1ad7ea84b_FnIns> _2738_ins = (*_2717_main.alloc)._field_Instances[0LL];;
		if ((!(_1c03525d3_isLive(_self_, &(_2738_ins))))) {
			_1c0355cbd_pushLive(_self_, _2738_ins);
		};
		_1bbedc7c1_setReferencesAsLive(_self_, &((*(_2738_ins))._field_Refers));
	};
}



inline void _1bbedd2d8_removeDeadGlobals(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ad933a83_Var>>* _28139_vars) {
	jule::I64 _2827_i = 0LL;;
	while ((_2827_i < (*(_28139_vars)).len())) {
		{
			jule::Ptr<_1ad933a83_Var> _2844_v = (*(_28139_vars))[_2827_i];;
			if (_1c0389296_isLive(_self_, &(_2844_v))) {
				(_2827_i)++;
				goto _iter_next_1c03a479a;
			};
			(*(_28139_vars))=jule::append((*(_28139_vars)).slice(0LL, _2827_i),(*(_28139_vars)).slice((_2827_i + 1LL)));
		}
	_iter_next_1c03a479a:;
	}
	_iter_end_1c03a479a:;;
}



inline void _1bbedd591_removeDeadFns(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ad7e778d_Fn>>* _29335_funcs) {
	jule::I64 _2947_i = 0LL;;
	while ((_2947_i < (*(_29335_funcs)).len())) {
		{
			jule::Ptr<_1ad7e778d_Fn> _2968_f = (*(_29335_funcs))[_2947_i];;
			jule::I64 _2978_j = 0LL;;
			while ((_2978_j < (*(_2968_f))._field_Instances.len())) {
				{
					jule::Ptr<_1ad7ea84b_FnIns> _2995_ins = (*(_2968_f))._field_Instances[_2978_j];;
					if (_1c03525d3_isLive(_self_, &(_2995_ins))) {
						(_2978_j)++;
						goto _iter_next_1c03a714e;
					};
					(*_2968_f.alloc)._field_Instances=jule::append((*_2968_f.alloc)._field_Instances.slice(0LL, _2978_j),(*_2968_f.alloc)._field_Instances.slice((_2978_j + 1LL)));
				}
			_iter_next_1c03a714e:;
			}
			_iter_end_1c03a714e:;;
			if (((*_2968_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_29335_funcs))=jule::append((*(_29335_funcs)).slice(0LL, _2947_i),(*(_29335_funcs)).slice((_2947_i + 1LL)));
				goto _iter_next_1c03a6307;
			};
			(_2947_i)++;
		}
	_iter_next_1c03a6307:;
	}
	_iter_end_1c03a6307:;;
}



inline void _1bbedd849_removeDeadStructs(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ad7159ec_Struct>>* _31439_structs) {
	jule::I64 _3157_i = 0LL;;
	while ((_3157_i < (*(_31439_structs)).len())) {
		{
			jule::Ptr<_1ad7159ec_Struct> _3178_s = (*(_31439_structs))[_3157_i];;
			jule::I64 _3188_j = 0LL;;
			while ((_3188_j < (*(_3178_s))._field_Instances.len())) {
				{
					jule::Ptr<_1ad718857_StructIns> _3209_ins = (*(_3178_s))._field_Instances[_3188_j];;
					_1bbedd591_removeDeadFns(_self_, &((*(_3209_ins))._field_Methods));
					if ((((*_3209_ins.alloc)._field_Methods.len() != 0LL) || _1c034a6db_isLive(_self_, &(_3209_ins)))) {
						(_3188_j)++;
						goto _iter_next_1c03aad01;
					};
					(*_3178_s.alloc)._field_Instances=jule::append((*_3178_s.alloc)._field_Instances.slice(0LL, _3188_j),(*_3178_s.alloc)._field_Instances.slice((_3188_j + 1LL)));
				}
			_iter_next_1c03aad01:;
			}
			_iter_end_1c03aad01:;;
			if (((*_3178_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_31439_structs))=jule::append((*(_31439_structs)).slice(0LL, _3157_i),(*(_31439_structs)).slice((_3157_i + 1LL)));
				goto _iter_next_1c03a9ea9;
			};
			(_3157_i)++;
		}
	_iter_next_1c03a9ea9:;
	}
	_iter_end_1c03a9ea9:;;
}



inline void _1bbeddb02_removeDeadTraits(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ad802ea2_Trait>>* _33638_traits) {
	jule::I64 _3377_i = 0LL;;
	while ((_3377_i < (*(_33638_traits)).len())) {
		{
			jule::Ptr<_1ad802ea2_Trait> _3398_t = (*(_33638_traits))[_3377_i];;
			if ((!(_1c037e06b_isLive(_self_, &(_3398_t))))) {
				(*(_33638_traits))=jule::append((*(_33638_traits)).slice(0LL, _3377_i),(*(_33638_traits)).slice((_3377_i + 1LL)));
				goto _iter_next_1c03ae6b7;
			};
			jule::I64 _3448_j = 0LL;;
			while ((_3448_j < (*(_3398_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1ad7159ec_Struct> _3465_s = (*(_3398_t))._field_Implemented[_3448_j];;
					if (((*(_3465_s))._field_Instances.len() > 0LL)) {
						(_3448_j)++;
						goto _iter_next_1c03b0113;
					};
					(*_3398_t.alloc)._field_Implemented=jule::append((*_3398_t.alloc)._field_Implemented.slice(0LL, _3448_j),(*_3398_t.alloc)._field_Implemented.slice((_3448_j + 1LL)));
				}
			_iter_next_1c03b0113:;
			}
			_iter_end_1c03b0113:;;
			(_3377_i)++;
		}
	_iter_next_1c03ae6b7:;
	}
	_iter_end_1c03ae6b7:;;
}



inline void _1bbedddaa_removeDeadsFile(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad7eda91_SymTab>* _35737_file) {
	_1bbedd591_removeDeadFns(_self_, &((*((*(_35737_file))))._field_Funcs));
	_1bbedd849_removeDeadStructs(_self_, &((*((*(_35737_file))))._field_Structs));
	_1bbeddb02_removeDeadTraits(_self_, &((*((*(_35737_file))))._field_Traits));
	_1bbedd2d8_removeDeadGlobals(_self_, &((*((*(_35737_file))))._field_Vars));
}



inline void _1bbede163_removeDeadsPackage(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_, jule::Ptr<_1ad8e446c_Package>* _36440_pkg) {
	{
		auto expr = &((*((*(_36440_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c03b4bc8:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _36515_file = *it;
			{
				_1bbedddaa_removeDeadsFile(_self_, &(_36515_file));
			}
			_iter_next_1c03b4bc8:;
			++it;
			goto _iter_begin_1c03b4bc8;
		}
		_iter_end_1c03b4bc8:;
	};
}



inline void _1bbede361_removeDeads(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c03b546a:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _37115_used = *it;
			{
				if ((!((*(_37115_used))._field_Binded))) {
					_1bbede163_removeDeadsPackage(_self_, &((*_37115_used.alloc)._field_Package));
				};
			}
			_iter_next_1c03b546a:;
			++it;
			goto _iter_begin_1c03b546a;
		}
		_iter_end_1c03b546a:;
	};
	_1bbede163_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1bbede55e_collectSpecialCaseDefines(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_) {
	(*(_self_))._field_scd._field_runtime_Map=_1adaad23a_RuntimeFindStruct(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));
	(*_self_.alloc)._field_scd._field_runtime_mapIterator=_1adaad23a_RuntimeFindStruct(&((*(*(_self_))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));
}



inline void _1bbede75c_elimanate(jule::Ptr<_1bbedb627_ObjectDeadCode> _self_) {
	_1bbede55e_collectSpecialCaseDefines(_self_);
	_1bbedd030_collectLive(_self_);
	_1bbede361_removeDeads(_self_);
}








inline jule::Bool _1bbee0692_scopeDeadCode_eq(_1bbee0692_scopeDeadCode *_self_, _1bbee0692_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1bbee0bae_optimizeChild(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b136d_Scope>* _1935_s) {
	jule::Ptr<_1bbee0692_scopeDeadCode> _207_sdc = jule::new_ptr<_1bbee0692_scopeDeadCode>(_1bbee0692_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_1935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1bbee35c9_optimizeStmts(_207_sdc);
	};
}



inline void _1bbee0e67_optimizeBodyChildExceptional(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b136d_Scope>* _2950_s) {
	jule::Ptr<_1bbee0692_scopeDeadCode> _307_sdc = jule::new_ptr<_1bbee0692_scopeDeadCode>(_1bbee0692_scopeDeadCode{._field_parent=jule::Ptr<_1bbee0692_scopeDeadCode>(nullptr), ._field_s=(*(_2950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1bbee35c9_optimizeStmts(_307_sdc);
	};
}



inline void _1bbee1220_optimizeBodyChild(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b136d_Scope>* _3939_s) {
	jule::Ptr<_1bbee0692_scopeDeadCode> _407_sdc = jule::new_ptr<_1bbee0692_scopeDeadCode>(_1bbee0692_scopeDeadCode{._field_parent=jule::Ptr<_1bbee0692_scopeDeadCode>(nullptr), ._field_s=(*(_3939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1bbee35c9_optimizeStmts(_407_sdc);
	};
}



inline void _1bbee14c8_optimizeExprModel(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Any* _4839_model) {
	_1bbee4c29_exprDeadCode _493_edc = static__1bbee5147_new(&(_self_));;
	_1bbee5400_optimize(&_493_edc, _4839_model);
}



inline void _1bbee16c6_eliminateFollowed(_1bbee0692_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1bbee0692_scopeDeadCode> _607_parent = (*(_self_))._field_parent;;
	while ((_607_parent != nullptr)) {
		{
			{
				((*((*(_607_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_607_parent))._field_i + 1LL));;
			};
			_607_parent=(*_607_parent.alloc)._field_parent;
		}
	_iter_next_1c03c7801:;
	}
	_iter_end_1c03c7801:;;
}



inline void _1bbee197e_pushGoto(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b452a_GotoSt> _6929_gt) {
	jule::I64 _707_i = 0LL;;
	for (; (_707_i < (*((*(_self_))._field_labels)).len()); (_707_i)++) {
		{
			if (((*(_6929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_707_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1c03cab34:;
	}
	_iter_end_1c03cab34:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8b452a_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6929_gt; __jule_collection; }));
}



inline void _1bbee1c37_pushLabel(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b3dba_Label> _7930_l) {
	jule::I64 _807_i = 0LL;;
	while ((_807_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_7930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_807_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_807_i), (*((*(_self_))._field_gotos)).slice((_807_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1c03ccd34;
			};
			(_807_i)++;
		}
	_iter_next_1c03ccd34:;
	}
	_iter_end_1c03ccd34:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8b3dba_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7930_l; __jule_collection; }));
}



inline void _1bbee1ee0_optimizeRangeIter(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b31a5_RangeIter> _9238_it) {
	_1bbee14c8_optimizeExprModel(_self_, &((*((*(_9238_it))._field_Expr))._field_Model));
	_1bbee1220_optimizeBodyChild(_self_, &((*_9238_it.alloc)._field_Scope));
}



inline void _1bbee2298_optimizeWhileIter(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b2759_WhileIter> _9738_it) {
	_1bbee14c8_optimizeExprModel(_self_, &((*(_9738_it))._field_Expr));
	if (((*_9738_it.alloc)._field_Next != nullptr)) {
		_1bbee33cb_optimizeStmt(_self_, (*_9738_it.alloc)._field_Next);
	};
	_1bbee1220_optimizeBodyChild(_self_, &((*_9738_it.alloc)._field_Scope));
}



inline void _1bbee2551_optimizeInfIter(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b22a3_InfIter> _10536_it) {
	_1bbee1220_optimizeBodyChild(_self_, &((*(_10536_it))._field_Scope));
}



inline void _1bbee2809_optimizeConditional(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b1ea6_Conditional> _10940_c) {
	{
		auto expr = &((*(_10940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c03d4ae9:;
		if (it != expr_end) {
			jule::Ptr<_1ad8b178b_If> _11015_case = *it;
			{
				if ((_11015_case != nullptr)) {
					_1bbee14c8_optimizeExprModel(_self_, &((*_11015_case.alloc)._field_Expr));
					_1bbee1220_optimizeBodyChild(_self_, &((*_11015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1c03d4ae9:;
			++it;
			goto _iter_begin_1c03d4ae9;
		}
		_iter_end_1c03d4ae9:;
	};
	if (((*_10940_c.alloc)._field_Default != nullptr)) {
		if (((*_10940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1bbee0bae_optimizeChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1bbee1220_optimizeBodyChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1bbee2ab2_optimizeMatch(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b5a9d_Match> _12734_m) {
	{
		auto expr = &((*(_12734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c03d8180:;
		if (it != expr_end) {
			jule::Ptr<_1ad8b65c6_Case> _12815_case = *it;
			{
				{
					auto expr = &((*(_12815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c03d8b0e:;
					if (it != expr_end) {
						jule::Ptr<_1ad985b90_Data> _12916_expr = *it;
						{
							_1bbee14c8_optimizeExprModel(_self_, &((*(_12916_expr))._field_Model));
						}
						_iter_next_1c03d8b0e:;
						++it;
						goto _iter_begin_1c03d8b0e;
					}
					_iter_end_1c03d8b0e:;
				};
				_1bbee1220_optimizeBodyChild(_self_, &((*_12815_case.alloc)._field_Scope));
			}
			_iter_next_1c03d8180:;
			++it;
			goto _iter_begin_1c03d8180;
		}
		_iter_end_1c03d8180:;
	};
	if (((*_12734_m.alloc)._field_Default != nullptr)) {
		if (((*_12734_m.alloc)._field_Cases.len() == 0LL)) {
			_1bbee0bae_optimizeChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1bbee1220_optimizeBodyChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1bbee2d6a_optimizeAssign(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b4daa_Assign> _14535_assign) {
	_1bbee14c8_optimizeExprModel(_self_, &((*((*(_14535_assign))._field_Left))._field_Model));
	_1bbee14c8_optimizeExprModel(_self_, &((*((*_14535_assign.alloc)._field_Right))._field_Model));
}



inline void _1bbee3123_optimizeMultiAssign(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Ptr<_1ad8b5361_MultiAssign> _15040_assign) {
	{
		auto expr = &((*(_15040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c03dcecb:;
		if (it != expr_end) {
			jule::Ptr<_1ad985b90_Data> _15115_l = *it;
			{
				if ((_15115_l != nullptr)) {
					_1bbee14c8_optimizeExprModel(_self_, &((*_15115_l.alloc)._field_Model));
				};
			}
			_iter_next_1c03dcecb:;
			++it;
			goto _iter_begin_1c03dcecb;
		}
		_iter_end_1c03dcecb:;
	};
	_1bbee14c8_optimizeExprModel(_self_, &((*_15040_assign.alloc)._field_Right));
}



inline void _1bbee33cb_optimizeStmt(jule::Ptr<_1bbee0692_scopeDeadCode> _self_, jule::Any _15933_st) {
	{
		auto &_match_expr{ _15933_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c03deb7b:;
			{
				jule::Ptr<_1ad8b136d_Scope> _1628_scope = _15933_st.unsafe_cast_ptr<_1ad8b136d_Scope>();;
				if ((*(_1628_scope))._field_Deferred) {
					_1bbee38c6_eliminateDeadCodeOfScope(_1628_scope);
				} else {
					_1bbee0bae_optimizeChild(_self_, &(_1628_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c03de8e5:;
			{
				_1bbee1ee0_optimizeRangeIter(_self_, _15933_st.cast_ptr<_1ad8b31a5_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c03dec03:;
			{
				_1bbee2298_optimizeWhileIter(_self_, _15933_st.cast_ptr<_1ad8b2759_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c03dec7a:;
			{
				_1bbee2551_optimizeInfIter(_self_, _15933_st.cast_ptr<_1ad8b22a3_InfIter>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c03ded02:;
			{
				_1bbee2809_optimizeConditional(_self_, _15933_st.cast_ptr<_1ad8b1ea6_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c03ded79:;
			{
				_1bbee2ab2_optimizeMatch(_self_, _15933_st.cast_ptr<_1ad8b5a9d_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c03dee01:;
			{
				_1bbee2d6a_optimizeAssign(_self_, _15933_st.cast_ptr<_1ad8b4daa_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c03dee78:;
			{
				_1bbee3123_optimizeMultiAssign(_self_, _15933_st.cast_ptr<_1ad8b5361_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c03e0000:;
			{
				jule::Ptr<_1ad985b90_Data> _1838_d = _15933_st.unsafe_cast_ptr<_1ad985b90_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1c03dea27;
				};
				{
					auto &_match_expr{ (*(_1838_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20 || _match_expr.type == &__jule_any_type26) {
						_case_begin_1c03e5764:;
						{
							_1bbee16c6_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1c03e5dd5:;
						{
							_1bbee14c8_optimizeExprModel(_self_, &((*(_1838_d))._field_Model));
						}
					}
					_match_end_1c03e5d6e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c03e0077:;
			{
				_1bbee16c6_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c03e00ee:;
			{
				_1bbee197e_pushGoto(_self_, _15933_st.cast_ptr<_1ad8b452a_GotoSt>(&__jule_any_type38));
				_1bbee16c6_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1c03e0176:;
			{
				_1bbee1c37_pushLabel(_self_, _15933_st.cast_ptr<_1ad8b3dba_Label>(&__jule_any_type18));
			}
		}
		_match_end_1c03dea27:;
	};
}



inline void _1bbee35c9_optimizeStmts(jule::Ptr<_1bbee0692_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1bbee33cb_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1c03e8a75:;
	}
	_iter_end_1c03e8a75:;;
}








inline jule::Bool _1bbee4c29_exprDeadCode_eq(_1bbee4c29_exprDeadCode *_self_, _1bbee4c29_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1bbee4c29_exprDeadCode static__1bbee5147_new(jule::Ptr<_1bbee0692_scopeDeadCode>* _1421_s) {
	return _1bbee4c29_exprDeadCode{._field_s=(*(_1421_s))};;
}



inline void _1bbee5400_optimize(_1bbee4c29_exprDeadCode* _self_, jule::Any* _2025_model) {
	jule::Ptr<_1bb0a2cd8_ExprInspector> _217_inspector = static__1bb0a3107_New();;
	_1bb0a39cb_Inspect(_217_inspector.ptr(), _2025_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1c03eb6c1, jule::Ptr<__jule_anon_1c03eb6c1_ctx>::make(__jule_anon_1c03eb6c1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c03eb6c1_ctx_handler));
}








inline jule::Bool _1bbd9506e_ExceptionalForwardingExprModel_eq(_1bbd9506e_ExceptionalForwardingExprModel *_self_, _1bbd9506e_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1bbd952e4_SwapExprModel_eq(_1bbd952e4_SwapExprModel *_self_, _1bbd952e4_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1bbd956bd_EmptyCompareExprModel_eq(_1bbd956bd_EmptyCompareExprModel *_self_, _1bbd956bd_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1bbd95a42_RefExprModel_eq(_1bbd95a42_RefExprModel *_self_, _1bbd95a42_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1bbd95eb5_StrCompExprModel_eq(_1bbd95eb5_StrCompExprModel *_self_, _1bbd95eb5_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1bbd96548_MutSlicingExprModel_eq(_1bbd96548_MutSlicingExprModel *_self_, _1bbd96548_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1bbd96845_UnsafeBinaryExprModel_eq(_1bbd96845_UnsafeBinaryExprModel *_self_, _1bbd96845_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1bbd96bca_UnsafeIndexingExprModel_eq(_1bbd96bca_UnsafeIndexingExprModel *_self_, _1bbd96bca_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1bbd970a4_PushToSliceExprModel_eq(_1bbd970a4_PushToSliceExprModel *_self_, _1bbd970a4_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1bbd9747d_AppendToSliceExprModel_eq(_1bbd9747d_AppendToSliceExprModel *_self_, _1bbd9747d_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1bbd97857_StrRuneIter_eq(_1bbd97857_StrRuneIter *_self_, _1bbd97857_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1bbd97b54_UnsafeDerefExprModel_eq(_1bbd97b54_UnsafeDerefExprModel *_self_, _1bbd97b54_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1bbd97e51_UnsafeCastingExprModel_eq(_1bbd97e51_UnsafeCastingExprModel *_self_, _1bbd97e51_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1bbd98a78_nilVar_eq(_1bbd98a78_nilVar *_self_, _1bbd98a78_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1bbd9935e_pushVar(_1bbd98db9_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe) {
	if (((!(_1bbdb14db_Access)) || (_2323_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c044d228:;
		if (it != expr_end) {
			_1bbd98a78_nilVar _2815_v = *it;
			{
				if ((_2815_v._field_var == _2323_var)) {
					_2815_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1c044d228:;
			++it;
			goto _iter_begin_1c044d228;
		}
		_iter_end_1c044d228:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c044e0c5:;
		if (it != expr_end) {
			_1bbd98a78_nilVar _3515_v = *it;
			{
				if ((_3515_v._field_var == 0LLU)) {
					_3515_v._field_var=_2323_var;
					_3515_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1c044e0c5:;
			++it;
			goto _iter_begin_1c044e0c5;
		}
		_iter_end_1c044e0c5:;
	};
	{ jule::Slice<_1bbd98a78_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1bbd98a78_nilVar{._field_var=_2323_var, ._field_safe=_2337_safe}); };
}



inline jule::Bool _1bbd996a0_removeVar(_1bbd98db9_nils* _self_, jule::Uintptr _4625_var) {
	if ((_4625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c04510e9:;
			if (it != expr_end) {
				_1bbd98a78_nilVar _4816_v = *it;
				{
					if ((_4816_v._field_var == _4625_var)) {
						_4816_v._field_var=0LLU;
						_4816_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1c04510e9:;
				++it;
				goto _iter_begin_1c04510e9;
			}
			_iter_end_1c04510e9:;
		};
	};
	return false;;
}



inline jule::Bool _1bbd999e1_isSafe(_1bbd98db9_nils* _self_, jule::Uintptr _6022_var) {
	if ((_6022_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c045278d:;
			if (it != expr_end) {
				_1bbd98a78_nilVar _6211_v = *it;
				{
					if ((_6211_v._field_var == _6022_var)) {
						return _6211_v._field_safe;;
					};
				}
				_iter_next_1c045278d:;
				++it;
				goto _iter_begin_1c045278d;
			}
			_iter_end_1c045278d:;
		};
	};
	return false;;
}








inline jule::Bool _1bbd9ba37_scopeOptimizer_eq(_1bbd9ba37_scopeOptimizer *_self_, _1bbd9ba37_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1bbd9ba37_scopeOptimizer> static__1bbd9c087_new(jule::Ptr<_1ad8b136d_Scope> _2320_scope) {
	jule::Ptr<_1bbd9ba37_scopeOptimizer> _247_sc = jule::new_ptr<_1bbd9ba37_scopeOptimizer>(_1bbd9ba37_scopeOptimizer{._field_parent=jule::Ptr<_1bbd9ba37_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_2320_scope, ._field_data=jule::new_ptr<_1bbdab409_data>(_1bbdab409_data{._field_boundary=jule::new_ptr<_1bbdacbe1_boundary>(_1bbdacbe1_boundary{._field_vars=jule::Slice<_1bbdac8a0_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1bbd98db9_nils>(_1bbd98db9_nils{._field_vars=jule::Slice<_1bbd98a78_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1bbda87d0_dynamic>(_1bbda87d0_dynamic{._field_vars=jule::Slice<_1bbda848e_dynamicVar>(nullptr)})})});;
	return _247_sc;;
}



inline void _1bbd9c340_setCurrentStmt(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Any _3535_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_3535_stmt))))));
}



inline void _1bbd9c53d_removeCurrent(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1bbd9c7c4_isLastStmt(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_) {
	jule::Ptr<_1bbd9ba37_scopeOptimizer> _457_r = _self_;;
	for (; (_457_r != nullptr); _457_r=(*_457_r.alloc)._field_parent) {
		{
			if ((((*((*_457_r.alloc)._field_scope))._field_Stmts.len() - (*_457_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1c045e954:;
	}
	_iter_end_1c045e954:;;
	return true;;
}



inline jule::Bool _1bbd9ca5a_isIter(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_) {
	jule::Ptr<_1bbd9ba37_scopeOptimizer> _557_r = (*(_self_))._field_parent;;
	for (; (_557_r != nullptr); _557_r=(*_557_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_557_r))._field_scope))._field_Stmts[(*(_557_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type32) {
					_case_begin_1c04622a3:;
					{
						return true;;
					}
				}
				_match_end_1c0462209:;
			};
		}
	_iter_next_1c0460d84:;
	}
	_iter_end_1c0460d84:;;
	return false;;
}



inline void _1bbd9cd13_optimizeData(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad985b90_Data> _6733_d) {
	{
		auto &_match_expr{ (*(_6733_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c046346e:;
			{
				jule::Ptr<_1ad7dc387_FnCallExprModel> _708_m = (*(_6733_d))._field_Model.unsafe_cast_ptr<_1ad7dc387_FnCallExprModel>();;
				if (_1dd46d659_Production) {
					if (((!(_1ad7ebd14_IsBuiltin((*(_708_m))._field_Func.ptr()))) && _1bb0a59ab_IsStdPackage((*((*((*((*(*(_708_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1bbd9c340_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1bbda3973_optimizeData(&((*(_6733_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1bbdb2960_Exceptional && (*(*((*(_708_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_708_m.alloc)._field_Except != nullptr)) && ((*(*(_708_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1bb0a4746_IsForwarded(&((*_708_m.alloc)._field_Except))) && _1bbd9c7c4_isLastStmt(_self_)) && (!(_1bbd9ca5a_isIter(_self_))))) {
					_1bbd9c340_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bbd9506e_ExceptionalForwardingExprModel>(_1bbd9506e_ExceptionalForwardingExprModel{._field_Expr=_708_m}), &__jule_any_type121));
				};
				return;;
			}
		}
		_match_end_1c04633e7:;
	};
	static__1bbda3973_optimizeData(&((*_6733_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1bbd9d0bb_optimizeVar(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad933a83_Var> _9332_v) {
	if (((*(_9332_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1bbd9a52a_isNilValidType((*((*_9332_v.alloc)._field_Kind))._field_Kind)) && _1bbd9a261_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_9332_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1bbd9935e_pushVar((*((*(_self_))._field_data))._field_nils, _1bbd9a86b_getNilVar(jule::Any(_9332_v, &__jule_any_type7)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1ad9b8596_TypeKind> _1029_kind = _1bbdaa0a6_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_9332_v))._field_Kind.alloc)._field_Kind, (*(*((*(_9332_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1029_kind != nullptr)) {
				if (_1bbda9b77_isDynamicValidType((*(*(_9332_v))._field_Kind.alloc)._field_Kind)) {
					_1bbda8c75_pushVar((*((*(_self_))._field_data))._field_dynamic, _1bbdaa3e7_getDynamicVar(jule::Any(_9332_v, &__jule_any_type7)), _1029_kind);
				};
			};
		};
		static__1bbda3973_optimizeData(&((*(*((*(_9332_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1bbd9d374_optimizeConditional(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b1ea6_Conditional> _11440_c) {
	_1bbdaae0e_dataCheckpoint _1157_checkpoint = _1bbdab7b1_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_11440_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0474590:;
		if (it != expr_end) {
			jule::Ptr<_1ad8b178b_If> _11615_elif = *it;
			{
				static__1bbda3973_optimizeData(&((*(_11615_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1bbda1003_optimizeChild(_self_, (*_11615_elif.alloc)._field_Scope);
				if ((((*(_11440_c))._field_Elifs.len() > 1LL) || ((*_11440_c.alloc)._field_Default != nullptr))) {
					_1bbdaba69_loadCheckpoint((*(_self_))._field_data, &(_1157_checkpoint));
				};
			}
			_iter_next_1c0474590:;
			++it;
			goto _iter_begin_1c0474590;
		}
		_iter_end_1c0474590:;
	};
	if (((*_11440_c.alloc)._field_Default != nullptr)) {
		_1bbda1003_optimizeChild(_self_, (*(*(_11440_c))._field_Default.alloc)._field_Scope);
		_1bbdaba69_loadCheckpoint((*(_self_))._field_data, &(_1157_checkpoint));
	};
	if ((!(_1bbdb1e15_Cond))) {
		return;;
	};
	jule::Bool _1327_constCase = false;;
	{
		auto expr = &((*_11440_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0478220:;
		if (it != expr_end) {
			jule::I64 _1358_i = it - expr->begin();
			jule::Ptr<_1ad8b178b_If> _13515_elif = *it;
			{
				if ((!(_1bbda1586_isConstantValidConditionalCase(&(_13515_elif))))) {
					goto _iter_next_1c0478220;
				};
				_1327_constCase=true;
				((*(_11440_c))._field_Elifs).mut_slice(0LL, _1358_i);;
				(*_11440_c.alloc)._field_Default=jule::new_ptr<_1ad8b1a88_Else>(_1ad8b1a88_Else{._field_Scope=(*(_13515_elif))._field_Scope});
				goto _iter_end_1c0478220;
			}
			_iter_next_1c0478220:;
			++it;
			_1358_i++;
			goto _iter_begin_1c0478220;
		}
		_iter_end_1c0478220:;
	};
	if (((*_11440_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ad8b178b_If>* _1527_i = (&((*(_11440_c))._field_Elifs[0LL]));;
	jule::Ptr<_1ad8b178b_If>* _1533_end = (&((*_11440_c.alloc)._field_Elifs[((*_11440_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1527_i <= _1533_end); (_1527_i)++) {
		{
			{
				if (_1bbda1e9e_isUnreachableConditionalCase(&((*(_1527_i))))) {
					(*(_1527_i))=nullptr;
				};
			};
		}
	_iter_next_1c047b7ea:;
	}
	_iter_end_1c047b7ea:;;
	if (((*_11440_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1327_constCase))) {
		return;;
	};
	jule::I64 _1717_only = -1LL;;
	{
		auto expr = &((*_11440_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c047d203:;
		if (it != expr_end) {
			jule::I64 _1727_j = it - expr->begin();
			jule::Ptr<_1ad8b178b_If> _17210_elif = *it;
			{
				if ((_17210_elif != nullptr)) {
					if ((_1717_only != -1LL)) {
						return;;
					};
					_1717_only=_1727_j;
				};
			}
			_iter_next_1c047d203:;
			++it;
			_1727_j++;
			goto _iter_begin_1c047d203;
		}
		_iter_end_1c047d203:;
	};
	if ((_1717_only != -1LL)) {
		_1bbd9c340_setCurrentStmt(_self_, jule::Any((*((*_11440_c.alloc)._field_Elifs[_1717_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1bbd9d792_buildDefaultConstantTrueCase(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b65c6_Case> _18849_case, jule::I64* _18873_i, jule::Ptr<_1ad8b5a9d_Match>* _18886_m) {
	(*(_18849_case))._field_Exprs=nullptr;
	jule::I64 _1903_start = (*(_18873_i));;
	_julec_label_1c0481107:;
	for (;;) {
		{
			if (((*((*_18849_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1c04810a2;
			};
			jule::Any *_1969_stmt = &((*(*(_18849_case))._field_Scope.alloc)._field_Stmts[((*(*(_18849_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_1969_stmt)) };
				
				if (_match_expr.type == &__jule_any_type45) {
					_case_begin_1c048301b:;
					{
						((*(_18873_i)))++;
						if (((*(_18873_i)) >= (*((*(_18886_m))))._field_Cases.len())) {
							(*(_1969_stmt))=jule::Any((*((*((*(_18886_m))))._field_Default))._field_Scope, &__jule_any_type19);
							goto _iter_end_1c04810a2;
						};
						_18849_case=(*((*(_18886_m))))._field_Cases[(*(_18873_i))];
						(*(_1969_stmt))=jule::Any((*_18849_case.alloc)._field_Scope, &__jule_any_type19);
					}
				}
				else {
					_case_begin_1c04830e8:;
					{
						goto _iter_end_1c04810a2;
					}
				}
				_match_end_1c0482ea5:;
			};
		}
	_iter_next_1c04810a2:;
	}
	_iter_end_1c04810a2:;;
	(*((*(_18886_m))))._field_Default=(*((*(_18886_m))))._field_Cases[_1903_start];
	((*((*(_18886_m))))._field_Cases).mut_slice(0LL, _1903_start);;
}



inline void _1bbd9da4a_optimizeMatch(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b5a9d_Match> _21434_m) {
	jule::Uintptr _2157_var = 0LLU;;
	if ((_1bbdb2ec1_Dynamic && (*(_21434_m))._field_TypeMatch)) {
		_2157_var=_1bbdaa3e7_getDynamicVar((*((*_21434_m.alloc)._field_Expr))._field_Model);
	};
	_1bbdaae0e_dataCheckpoint _2197_checkpoint = _1bbdab7b1_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_21434_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0486e87:;
		if (it != expr_end) {
			jule::Ptr<_1ad8b65c6_Case> _22015_case = *it;
			{
				{
					auto expr = &((*(_22015_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c048787d:;
					if (it != expr_end) {
						jule::Ptr<_1ad985b90_Data> _22116_expr = *it;
						{
							static__1bbda3973_optimizeData(&((*(_22116_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1c048787d:;
						++it;
						goto _iter_begin_1c048787d;
					}
					_iter_end_1c048787d:;
				};
				if ((((*_22015_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1ad9b8596_TypeKind> _2269_kind = _1bbdaa0a6_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_22015_case))._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_2269_kind != nullptr)) {
						_1bbda8c75_pushVar((*((*(_self_))._field_data))._field_dynamic, _2157_var, _2269_kind);
					} else {
						_1bbda90b6_removeVar((*((*(_self_))._field_data))._field_dynamic, _2157_var);
					};
				};
				_1bbda1003_optimizeChild(_self_, (*_22015_case.alloc)._field_Scope);
				if ((((*_21434_m.alloc)._field_Cases.len() > 1LL) || ((*_21434_m.alloc)._field_Default != nullptr))) {
					_1bbdaba69_loadCheckpoint((*(_self_))._field_data, &(_2197_checkpoint));
				};
			}
			_iter_next_1c0486e87:;
			++it;
			goto _iter_begin_1c0486e87;
		}
		_iter_end_1c0486e87:;
	};
	if (((*_21434_m.alloc)._field_Default != nullptr)) {
		_1bbda1003_optimizeChild(_self_, (*(*(_21434_m))._field_Default.alloc)._field_Scope);
		_1bbdaba69_loadCheckpoint((*(_self_))._field_data, &(_2197_checkpoint));
	};
	if ((!(_1bbdb1e15_Cond))) {
		return;;
	};
	jule::Bool _2477_constCase = false;;
	{
		auto expr = &((*_21434_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c048e346:;
		if (it != expr_end) {
			jule::I64 _25012_i = it - expr->begin();
			jule::Ptr<_1ad8b65c6_Case> _25019_case = *it;
			{
				if ((!(_1bbda1b5d_isConstantValidMatchCase(&(_25019_case))))) {
					goto _iter_next_1c048e346;
				};
				_2477_constCase=true;
				_1bbd9d792_buildDefaultConstantTrueCase(_self_, _25019_case, &(_25012_i), &(_21434_m));
				goto _iter_end_1c048e346;
			}
			_iter_next_1c048e346:;
			++it;
			_25012_i++;
			goto _iter_begin_1c048e346;
		}
		_iter_end_1c048e346:;
	};
	if (((*_21434_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ad8b65c6_Case>* _2647_i = (&((*(_21434_m))._field_Cases[0LL]));;
	jule::Ptr<_1ad8b65c6_Case>* _2653_end = (&((*_21434_m.alloc)._field_Cases[((*_21434_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2647_i <= _2653_end); (_2647_i)++) {
		{
			{
				if (_1bbda2235_isUnreachableMatchCase(&((*(_2647_i))))) {
					(*(_2647_i))=nullptr;
				};
			};
		}
	_iter_next_1c0491e09:;
	}
	_iter_end_1c0491e09:;;
	if ((!(_2477_constCase))) {
		return;;
	};
	jule::I64 _2797_only = -1LL;;
	{
		auto expr = &((*_21434_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c04931d5:;
		if (it != expr_end) {
			jule::I64 _2807_j = it - expr->begin();
			jule::Ptr<_1ad8b65c6_Case> _28010_case = *it;
			{
				if ((_28010_case != nullptr)) {
					if ((_2797_only != -1LL)) {
						return;;
					};
					_2797_only=_2807_j;
				};
			}
			_iter_next_1c04931d5:;
			++it;
			_2807_j++;
			goto _iter_begin_1c04931d5;
		}
		_iter_end_1c04931d5:;
	};
	if ((_2797_only != -1LL)) {
		_1bbd9c340_setCurrentStmt(_self_, jule::Any((*((*_21434_m.alloc)._field_Cases[_2797_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1bbd9dd03_optimizeRangeIter(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b31a5_RangeIter> _29638_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_29638_it))._field_KeyA != nullptr))) {
		_1bbdad186_pushVar((*((*(_self_))._field_data))._field_boundary, _1bbdb0122_getBoundaryVar((*((*_29638_it.alloc)._field_Expr))._field_Model), jule::Any((*_29638_it.alloc)._field_KeyA, &__jule_any_type7));
	};
	_1bbda1003_optimizeChild(_self_, (*_29638_it.alloc)._field_Scope);
	if (_1bbdb2c18_Iter) {
		{
			auto &_match_expr{ (*((*(_29638_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type95) {
				_case_begin_1c0497dee:;
				{
					jule::Ptr<_1ad7db9d5_CastingExprModel> _3089_cem = (*((*(_29638_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1ad7db9d5_CastingExprModel>();;
					jule::Ptr<_1ad9c16ae_Prim> _3095_eprim = _1ad9bac4c_Prim((*(_3089_cem))._field_ExprKind.ptr());;
					if (((_3095_eprim == nullptr) || (!(_1ad9c4b79_IsStr(_3095_eprim.ptr()))))) {
						goto _match_end_1c0497d77;
					};
					jule::Ptr<_1ad9c5bad_Slc> _3139_s = _1ad9bbca3_Slc((*_3089_cem.alloc)._field_Kind.ptr());;
					if ((_3139_s == nullptr)) {
						goto _match_end_1c0497d77;
					};
					jule::Ptr<_1ad9c16ae_Prim> _3175_prim = _1ad9bac4c_Prim((*(_3139_s))._field_Elem.ptr());;
					if ((_3175_prim == nullptr)) {
						goto _match_end_1c0497d77;
					};
					{
						
						if (_1ad9c30d9_IsU8(_3175_prim.ptr())) {
							_case_begin_1c049b7d7:;
							{
								(*_29638_it.alloc)._field_Expr=(*_3089_cem.alloc)._field_Expr;
							}
						}
						else if (_1ad9c2abc_IsI32(_3175_prim.ptr())) {
							_case_begin_1c049b9b3:;
							{
								static__1bbda3973_optimizeData(&((*((*_3089_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1bbd9c340_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bbd97857_StrRuneIter>(_1bbd97857_StrRuneIter{._field_Expr=(*_3089_cem.alloc)._field_Expr, ._field_Base=_29638_it}), &__jule_any_type122));
								return;;
							}
						}
						_match_end_1c049b5ea:;
					};
				}
			}
			_match_end_1c0497d77:;
		};
	};
	static__1bbda3973_optimizeData(&((*(*(_29638_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1bbd9e0ab_optimizeWhileIter(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b2759_WhileIter> _34138_it) {
	static__1bbda3973_optimizeData(&((*(_34138_it))._field_Expr), &((*(_self_))._field_data));
	_1bbda0c4a_optimizeStmt(_self_, (*_34138_it.alloc)._field_Next);
	_1bbda1003_optimizeChild(_self_, (*_34138_it.alloc)._field_Scope);
}



inline jule::Bool _1bbd9e3ec_substr(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b4daa_Assign> _34727_a) {
	if (((*((*(_34727_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_34727_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c04a425c:;
			{
				jule::Ptr<_1ad7de004_SlicingExprModel> _3538_sem = (*((*(_34727_a))._field_Right))._field_Model.unsafe_cast_ptr<_1ad7de004_SlicingExprModel>();;
				if (_1bbd944e1_equalModels((*((*_34727_a.alloc)._field_Left))._field_Model, (*(_3538_sem))._field_Expr)) {
					_1bbd9c340_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bbd96548_MutSlicingExprModel>(_1bbd96548_MutSlicingExprModel{._field_Token=(*_3538_sem.alloc)._field_Token, ._field_Expr=(*_3538_sem.alloc)._field_Expr, ._field_Left=(*_3538_sem.alloc)._field_Left, ._field_Right=(*_3538_sem.alloc)._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1c04a41d5:;
	};
	return false;;
}



inline jule::Bool _1bbd9e73d_strAssign(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b4daa_Assign> _36730_a) {
	if ((!(_1bbdb2157_Str))) {
		return false;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _3713_lp = _1ad9bac4c_Prim((*((*(_36730_a))._field_Left))._field_Kind.ptr());;
	if (((_3713_lp == nullptr) || (!(_1ad9c4b79_IsStr(_3713_lp.ptr()))))) {
		return false;;
	};
	return _1bbd9e3ec_substr(_self_, _36730_a);;
}



inline jule::Bool _1bbd9ea7e_sliceAssign(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b4daa_Assign> _37832_a) {
	if (((!(_1bbdb23ee_Slice)) || (_1ad9bbca3_Slc((*((*(_37832_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1bbd9e3ec_substr(_self_, _37832_a);;
}



inline void _1bbd9ed37_optimizePostfix(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b4904_Postfix> _38636_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1bbdae7c5_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_38636_postfix))._field_Expr);
	};
	static__1bbda3973_optimizeData(&((*_38636_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1bbda00e0_optimizeAssign(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b4daa_Assign> _39335_assign) {
	if ((((*((*(_39335_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1bbd944e1_equalModels((*((*_39335_assign.alloc)._field_Left))._field_Model, (*((*_39335_assign.alloc)._field_Right))._field_Model))) {
		_1bbd9c53d_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1bbdaea8e_isBoundaryRiskyType((*(*(_39335_assign))._field_Left.alloc)._field_Kind)) {
			_1bbdae7c5_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_39335_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1bbd9a261_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_39335_assign))._field_Right.alloc)._field_Model)) {
			if (_1bbd9a52a_isNilValidType((*(*(_39335_assign))._field_Left.alloc)._field_Kind)) {
				;
				_1bbd9935e_pushVar((*((*(_self_))._field_data))._field_nils, _1bbd9a86b_getNilVar((*(*(_39335_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1bbd99d98_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_39335_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1ad9b8596_TypeKind> _4178_kind = _1bbdaa0a6_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_39335_assign))._field_Right.alloc)._field_Kind, (*(*(_39335_assign))._field_Right.alloc)._field_Model);;
		if ((_4178_kind != nullptr)) {
			if (_1bbda9b77_isDynamicValidType((*(*(_39335_assign))._field_Left.alloc)._field_Kind)) {
				_1bbda8c75_pushVar((*((*(_self_))._field_data))._field_dynamic, _1bbdaa3e7_getDynamicVar((*(*(_39335_assign))._field_Left.alloc)._field_Model), _4178_kind);
			};
		} else {
			_1bbda9869_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_39335_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1bbd9e73d_strAssign(_self_, _39335_assign) || _1bbd9ea7e_sliceAssign(_self_, _39335_assign)) {
			_case_begin_1c04b6318:;
			{
				return;;
			}
		}
		_match_end_1c04b7eb8:;
	};
	static__1bbda3973_optimizeData(&((*(*(_39335_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1bbda3973_optimizeData(&((*(*(_39335_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_39335_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU) || _match_expr == static_cast<jule::U64>(45LLU) || _match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1c04bbad2:;
			{
				if (((!(_1bbdb1233_Math)) || (_1ad9bc2c0_Struct((*(*(_39335_assign))._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1c04bba5a;
				};
				jule::U64 _4434_oldId;
				jule::Str _44311_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*(_39335_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_39335_assign))._field_Op.alloc)._field_Kind;
					_4434_oldId = ___jule_assign_arg;
					_44311_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_39335_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1c04bed5a:;
						{
							(*(*(_39335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_39335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1c04bedc1:;
						{
							(*(*(_39335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_39335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(45LLU)) {
						_case_begin_1c04be9d6:;
						{
							(*(*(_39335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
							(*(*(_39335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(46LLU)) {
						_case_begin_1c04bea5d:;
						{
							(*(*(_39335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
							(*(*(_39335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else {
						_case_begin_1c04be563:;
						{
							__jule_panic_s(jule::Str::lit("opt: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/opt/scope.jule:458:5"));;
						}
					}
					_match_end_1c04be893:;
				};
				jule::Ptr<_1ad7da3a7_BinaryExprModel> _4608_b = jule::new_ptr<_1ad7da3a7_BinaryExprModel>(_1ad7da3a7_BinaryExprModel{._field_Left=(*_39335_assign.alloc)._field_Left, ._field_Right=(*_39335_assign.alloc)._field_Right, ._field_Op=(*_39335_assign.alloc)._field_Op});;
				jule::Any _4658_model = jule::Any(_4608_b, &__jule_any_type113);;
				static__1bbda3973_optimizeData(&(_4658_model), &((*_self_.alloc)._field_data));
				if ((!__jule_any_type113_compare(_4658_model, _4608_b))) {
					(*_39335_assign.alloc)._field_Right=jule::new_ptr<_1ad7d9dac_OperandExprModel>((*(*(_39335_assign))._field_Right.alloc));
					(*(_4608_b))._field_Op=jule::new_ptr<_1ad6ceb70_Token>((*(*(_4608_b))._field_Op.alloc));
					(*(*(_39335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
					(*(*(_39335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_39335_assign))._field_Right.alloc)._field_Model=_4658_model;
					return;;
				};
				(*(*(_39335_assign))._field_Op.alloc)._field_Id=_4434_oldId;
				(*(*(_39335_assign))._field_Op.alloc)._field_Kind=_44311_oldKind;
				return;;
			}
		}
		_match_end_1c04bba5a:;
	};
	if (_1bbdb0e36_Append) {
		{
			auto &_match_expr{ (*((*(_39335_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type23) {
				_case_begin_1c04c8c54:;
				{
					jule::Ptr<_1ad7e237b_BuiltinAppendCallExprModel> _4859_m = (*(*(_39335_assign))._field_Right.alloc)._field_Model.cast_ptr<_1ad7e237b_BuiltinAppendCallExprModel>(&__jule_any_type23);;
					if ((!(_1bbda77ac_areSameLvalueExprModel(&((*(*(_39335_assign))._field_Left.alloc)._field_Model), &((*(_4859_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_4859_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type79) {
							_case_begin_1c04d15ec:;
							{
								_1bbd9c340_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bbd970a4_PushToSliceExprModel>(_1bbd970a4_PushToSliceExprModel{._field_Dest=(*_4859_m.alloc)._field_Dest, ._field_Elems=(*(_4859_m))._field_Elements.unsafe_cast_ptr<_1ad7dc761_SliceExprModel>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_1c04d0640:;
							{
								_1bbd9c340_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bbd9747d_AppendToSliceExprModel>(_1bbd9747d_AppendToSliceExprModel{._field_Dest=(*(*(_39335_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_4859_m.alloc)._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_1c04d05c9:;
					};
				}
			}
			_match_end_1c04c8bcc:;
		};
	};
}



inline jule::Bool _1bbda0431_tryOptimizeSwap(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b5361_MultiAssign>* _50737_assign) {
	if (((((!(_1bbdb26a7_Assign)) || ((*((*(_50737_assign))))._field_Left.len() != 2LL)) || ((*((*(_50737_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_50737_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ad7e0995_TupleExprModel> _51211_tup;;
	{
		auto &_match_expr{ (*((*(_50737_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c04d7e0b:;
			{
				_51211_tup=(*((*(_50737_assign))))._field_Right.unsafe_cast_ptr<_1ad7e0995_TupleExprModel>();
			}
		}
		_match_end_1c04d7d84:;
	};
	if (((_51211_tup == nullptr) || ((*(_51211_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1bbd944e1_equalModels((*((*((*(_50737_assign))))._field_Left[0LL]))._field_Model, (*((*(_51211_tup))._field_Datas[0LL]))._field_Model) && _1bbd944e1_equalModels((*((*((*(_50737_assign))))._field_Left[1LL]))._field_Model, (*((*(_51211_tup))._field_Datas[1LL]))._field_Model))) {
		_1bbd9c53d_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1bbd944e1_equalModels((*((*((*(_50737_assign))))._field_Left[0LL]))._field_Model, (*((*(_51211_tup))._field_Datas[1LL]))._field_Model))) || (!(_1bbd944e1_equalModels((*((*((*(_50737_assign))))._field_Left[1LL]))._field_Model, (*((*(_51211_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1bbd952e4_SwapExprModel> _5347_model = jule::new_ptr<_1bbd952e4_SwapExprModel>(_1bbd952e4_SwapExprModel{._field_Left=(*((*(_50737_assign))))._field_Left[0LL], ._field_Right=(*((*(_50737_assign))))._field_Left[1LL]});;
	static__1bbda3973_optimizeData(&((*((*(_5347_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1bbda3973_optimizeData(&((*((*_5347_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1bbd9c340_setCurrentStmt(_self_, jule::Any(_5347_model, &__jule_any_type126));
	return true;;
}



inline void _1bbda06d9_optimizeMultiAssign(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b5361_MultiAssign> _54440_assign) {
	if (_1bbda0431_tryOptimizeSwap(_self_, &(_54440_assign))) {
		return;;
	};
	jule::Ptr<_1ad7e0995_TupleExprModel> _5517_tup = static_cast<jule::Ptr<_1ad7e0995_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_54440_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c04e43ac:;
			{
				_5517_tup=(*(_54440_assign))._field_Right.unsafe_cast_ptr<_1ad7e0995_TupleExprModel>();
			}
		}
		_match_end_1c04e4335:;
	};
	{
		auto expr = &((*(_54440_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c04e2542:;
		if (it != expr_end) {
			jule::I64 _5568_i = it - expr->begin();
			jule::Ptr<_1ad985b90_Data> _55615_l = *it;
			{
				if ((_55615_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1bbdaea8e_isBoundaryRiskyType((*_55615_l.alloc)._field_Kind)) {
							_1bbdae7c5_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_55615_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5517_tup != nullptr) && _1bbd9a261_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5517_tup.alloc)._field_Datas[_5568_i]))._field_Model))) {
							if (_1bbd9a52a_isNilValidType((*_55615_l.alloc)._field_Kind)) {
								;
								_1bbd9935e_pushVar((*((*(_self_))._field_data))._field_nils, _1bbd9a86b_getNilVar((*_55615_l.alloc)._field_Model), true);
							};
						} else {
							_1bbd99d98_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_55615_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5517_tup != nullptr))) {
						jule::Ptr<_1ad9b8596_TypeKind> _57410_kind = _1bbdaa0a6_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5517_tup.alloc)._field_Datas[_5568_i]))._field_Kind, (*((*(_5517_tup))._field_Datas[_5568_i]))._field_Model);;
						if ((_57410_kind != nullptr)) {
							if (_1bbda9b77_isDynamicValidType((*_55615_l.alloc)._field_Kind)) {
								_1bbda8c75_pushVar((*((*(_self_))._field_data))._field_dynamic, _1bbdaa3e7_getDynamicVar((*_55615_l.alloc)._field_Model), _57410_kind);
							};
						} else {
							_1bbda9869_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_55615_l.alloc)._field_Model);
						};
					};
					static__1bbda3973_optimizeData(&((*_55615_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1c04e2542:;
			++it;
			_5568_i++;
			goto _iter_begin_1c04e2542;
		}
		_iter_end_1c04e2542:;
	};
	static__1bbda3973_optimizeData(&((*_54440_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1bbda0992_optimizeRet(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b7165_RetSt> _59032_r) {
	static__1bbda3973_optimizeData(&((*(_59032_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1bbdb2960_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_59032_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c0501b17:;
			{
				goto _match_end_1c0501bc2;
			}
		}
		else {
			_case_begin_1c0501c38:;
			{
				return;;
			}
		}
		_match_end_1c0501bc2:;
	};
	jule::Ptr<_1ad7dc387_FnCallExprModel> _6047_fc = (*_59032_r.alloc)._field_Expr.cast_ptr<_1ad7dc387_FnCallExprModel>(&__jule_any_type30);;
	if (((((!((*((*((*(_6047_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6047_fc.alloc)._field_Except == nullptr)) || ((*((*_6047_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1bb0a4746_IsForwarded(&((*_6047_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1bbd9c340_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bbd9506e_ExceptionalForwardingExprModel>(_1bbd9506e_ExceptionalForwardingExprModel{._field_Expr=_6047_fc}), &__jule_any_type121));
}



inline void _1bbda0c4a_optimizeStmt(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Any _61433_stmt) {
	{
		auto &_match_expr{ _61433_stmt };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c0505159:;
			{
				_1bbda1003_optimizeChild(_self_, _61433_stmt.cast_ptr<_1ad8b136d_Scope>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c0504dd4:;
			{
				_1bbd9cd13_optimizeData(_self_, _61433_stmt.cast_ptr<_1ad985b90_Data>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c05051e2:;
			{
				_1bbd9d0bb_optimizeVar(_self_, _61433_stmt.cast_ptr<_1ad933a83_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c050528b:;
			{
				_1bbd9d374_optimizeConditional(_self_, _61433_stmt.cast_ptr<_1ad8b1ea6_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c0505302:;
			{
				_1bbd9dd03_optimizeRangeIter(_self_, _61433_stmt.cast_ptr<_1ad8b31a5_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c0505368:;
			{
				_1bbd9e0ab_optimizeWhileIter(_self_, _61433_stmt.cast_ptr<_1ad8b2759_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c05053e0:;
			{
				_1bbda1003_optimizeChild(_self_, (*(_61433_stmt.unsafe_cast_ptr<_1ad8b22a3_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c0505467:;
			{
				_1bbda00e0_optimizeAssign(_self_, _61433_stmt.cast_ptr<_1ad8b4daa_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c05054de:;
			{
				_1bbda06d9_optimizeMultiAssign(_self_, _61433_stmt.cast_ptr<_1ad8b5361_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c0505566:;
			{
				_1bbd9da4a_optimizeMatch(_self_, _61433_stmt.cast_ptr<_1ad8b5a9d_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c05055dd:;
			{
				_1bbda0992_optimizeRet(_self_, _61433_stmt.cast_ptr<_1ad8b7165_RetSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c0505665:;
			{
				_1bbd9ed37_optimizePostfix(_self_, _61433_stmt.cast_ptr<_1ad8b4904_Postfix>(&__jule_any_type39));
			}
		}
		_match_end_1c0505005:;
	};
}



inline void _1bbda1003_optimizeChild(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_, jule::Ptr<_1ad8b136d_Scope> _64334_child) {
	jule::Ptr<_1bbd9ba37_scopeOptimizer> _6447_so = static__1bbd9c087_new(_64334_child);;
	(*(_6447_so))._field_parent=_self_;
	(*_6447_so.alloc)._field_data=(*(_self_))._field_data;
	_1bbda1201_optimize(_6447_so);
}



inline void _1bbda1201_optimize(jule::Ptr<_1bbd9ba37_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1bbda0c4a_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1c050d690:;
	}
	_iter_end_1c050d690:;;
}








inline jule::Bool _1bbda31d1_exprOptimizer_eq(_1bbda31d1_exprOptimizer *_self_, _1bbda31d1_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1bbda3687_optimize(jule::Any* _2126_model) {
	static__1bbda3973_optimizeData(_2126_model, &(_1bbdaaaac_emptyData));
}



inline void static__1bbda3973_optimizeData(jule::Any* _2530_model, jule::Ptr<_1bbdab409_data>* _2559_d) {
	if (_1bbee59a5_exprEnabled) {
		jule::Ptr<_1bbda31d1_exprOptimizer> _288_exop = jule::new_ptr<_1bbda31d1_exprOptimizer>(_1bbda31d1_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_2530_model)), ._field_data=(*(_2559_d)), ._field_inspector=static__1bb0a3107_New()});;
		_1bbda6ea4_do(_288_exop.ptr());
	};
}



inline jule::Bool _1bbda3cb4_selfCmpCond(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _3728_m) {
	if ((!(_1bbd944e1_equalModels((*((*((*(_3728_m))))._field_Left))._field_Model, (*((*((*(_3728_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_3728_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c051d1a5:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1ad7ce522_NewBool(true), &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1c051d5b2:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1ad7ce522_NewBool(false), &__jule_any_type15);
				return true;;
			}
		}
		else {
			_case_begin_1c051c072:;
			{
				return false;;
			}
		}
		_match_end_1c051d12d:;
	};
}



inline jule::Bool _1bbda4105_boolCond(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _6125_m) {
	jule::Ptr<_1ad9c16ae_Prim> _623_lp = _1ad9bac4c_Prim((*((*((*(_6125_m))))._field_Left))._field_Kind.ptr());;
	if (((_623_lp == nullptr) || (!(_1ad9c48e3_IsBool(_623_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_6125_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c05229e5:;
			{
				std::swap((*((*(_6125_m))))._field_Left, (*((*(_6125_m))))._field_Right);
			}
		}
		else {
			_case_begin_1c0521bc0:;
			{
				{
					auto &_match_expr{ (*((*((*(_6125_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1c0520eaa:;
						{
							goto _match_end_1c05224ea;
						}
					}
					else {
						_case_begin_1c0522561:;
						{
							return false;;
						}
					}
					_match_end_1c05224ea:;
				};
			}
		}
		_match_end_1c0521b59:;
	};
	jule::Ptr<_1ad778ec2_Const> _797_c = (*((*((*(_6125_m))))._field_Right))._field_Model.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_6125_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1c0524640:;
			{
				if (_1ad7d0941_ReadBool(_797_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_6125_m))))._field_Left.alloc)._field_Model;
				} else {
					_1ad7d202a_SetBool(_797_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_797_c, &__jule_any_type15);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1c05246d9:;
			{
				if (_1ad7d0941_ReadBool(_797_c.ptr())) {
					_1ad7d202a_SetBool(_797_c, true);
					(*((*(_self_))._field_model))=jule::Any(_797_c, &__jule_any_type15);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_6125_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1c05227b4:;
		}
		_match_end_1c05245a7:;
	};
	return false;;
}



inline jule::Bool _1bbda4446_strCond(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel> _11423_m) {
	jule::Ptr<_1ad9c16ae_Prim> _1153_lp = _1ad9bac4c_Prim((*((*(_11423_m))._field_Left))._field_Kind.ptr());;
	if (((_1153_lp == nullptr) || (!(_1ad9c4b79_IsStr(_1153_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_11423_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*(_11423_m))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_11423_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c052b339:;
			{
				std::swap((*_11423_m.alloc)._field_Left, (*_11423_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1c052a514:;
			{
				{
					auto &_match_expr{ (*((*(_11423_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1c0529090:;
						{
							goto _match_end_1c052ad3e;
						}
					}
					else {
						_case_begin_1c052ada5:;
						{
							return false;;
						}
					}
					_match_end_1c052ad3e:;
				};
			}
		}
		_match_end_1c052a49d:;
	};
	jule::Ptr<_1ad778ec2_Const> _1357_c = (*((*_11423_m.alloc)._field_Right))._field_Model.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*(_11423_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1c052b119:;
			{
				if ((_1ad7d0bc7_ReadStr(_1357_c.ptr())).empty()) {
					jule::Any _1399_model = jule::Any(jule::new_ptr<_1bbd956bd_EmptyCompareExprModel>(_1bbd956bd_EmptyCompareExprModel{._field_Expr=(*(*(_11423_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1399_model))))));
					goto _match_end_1c052cd85;
				};
				jule::Any _1468_model = jule::Any(jule::new_ptr<_1bbd95eb5_StrCompExprModel>(_1bbd95eb5_StrCompExprModel{._field_Left=(*(*(_11423_m))._field_Left.alloc)._field_Model, ._field_Right=_1357_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1468_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1c052ce40:;
			{
				if ((_1ad7d0bc7_ReadStr(_1357_c.ptr())).empty()) {
					jule::Any _1549_model = jule::Any(jule::new_ptr<_1bbd956bd_EmptyCompareExprModel>(_1bbd956bd_EmptyCompareExprModel{._field_Expr=(*(*(_11423_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1549_model))))));
					goto _match_end_1c052cd85;
				};
				jule::Any _1618_model = jule::Any(jule::new_ptr<_1bbd95eb5_StrCompExprModel>(_1bbd95eb5_StrCompExprModel{._field_Left=(*(*(_11423_m))._field_Left.alloc)._field_Model, ._field_Right=_1357_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1618_model))))));
			}
		}
		_match_end_1c052cd85:;
	};
	return true;;
}



inline jule::Bool _1bbda48ec_tryNeutralElement1(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _17135_m, jule::Ptr<_1ad778ec2_Const> _17166_c, jule::Ptr<_1ad7d9dac_OperandExprModel>* _17188_nc) {
	if (_1ad7d32c3_IsStr(_17166_c.ptr())) {
		if ((!(_1bbdb2157_Str))) {
			return false;;
		};
		if (((_1ad7d0bc7_ReadStr(_17166_c.ptr())).empty() && ((*((*((*(_17135_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_17188_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1bbdb1233_Math)) || (_1ad7d1711_AsF64(_17166_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_17135_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c053c0b4:;
			{
				if (((*(_17188_nc)) == (*((*(_17135_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_17188_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_17166_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c053cbec:;
			{
				_1ad7d19b9_SetI64(_17166_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_17166_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c053cc63:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_17188_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1c053caa9:;
	};
	return false;;
}



inline jule::Bool _1bbda4c3d_tryNeutralElement(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _21534_m) {
	{
		auto &_match_expr{ (*((*((*(_21534_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0541382:;
			{
				jule::Ptr<_1ad778ec2_Const> _2198_c = (*((*((*(_21534_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1ad778ec2_Const>();;
				return _1bbda48ec_tryNeutralElement1(_self_, _21534_m, _2198_c, &((*((*(_21534_m))))._field_Right));;
			}
		}
		_match_end_1c054130a:;
	};
	{
		auto &_match_expr{ (*((*((*(_21534_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c054189e:;
			{
				jule::Ptr<_1ad778ec2_Const> _2248_c = (*((*((*(_21534_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1ad778ec2_Const>();;
				return _1bbda48ec_tryNeutralElement1(_self_, _21534_m, _2248_c, &((*((*(_21534_m))))._field_Left));;
			}
		}
		_match_end_1c0541838:;
	};
	return false;;
}



inline void _1bbda4ee6_checkBinaryForBoundary(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _23039_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_23039_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c0544d03:;
			{
				jule::Ptr<_1ad7e2678_BuiltinLenCallExprModel> _2368_blc = (*((*((*(_23039_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1ad7e2678_BuiltinLenCallExprModel>();;
				if ((!(_1bbdaed58_isBoundaryValidType((*((*(_2368_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_23039_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_23039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_23039_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_23039_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1c05480d1:;
							{
								jule::Ptr<_1ad778ec2_Const> _24810_c = jule::new_ptr<_1ad778ec2_Const>((*((*((*((*(_23039_m))))._field_Right))._field_Model.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15))));;
								_1ad7d5a9a_Sub(_24810_c, (*(static__1ad7ce07c_NewI64(1LL))));
								_1bbdad186_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1bbdb0122_getBoundaryVar((*(*(_2368_blc))._field_Expr.alloc)._field_Model), jule::Any(_24810_c, &__jule_any_type15));
							}
						}
						_match_end_1c0548059:;
					};
					return;;
				};
				_1bbdad186_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1bbdb0122_getBoundaryVar((*(*(_2368_blc))._field_Expr.alloc)._field_Model), (*(*((*(_23039_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1c0544c7b:;
	};
	{
		auto &_match_expr{ (*((*((*(_23039_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c0545474:;
			{
				jule::Ptr<_1ad7e2678_BuiltinLenCallExprModel> _2598_blc = (*((*((*(_23039_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1ad7e2678_BuiltinLenCallExprModel>();;
				if ((!(_1bbdaed58_isBoundaryValidType((*(*(_2598_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_23039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_23039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_23039_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_23039_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1c054ec20:;
							{
								jule::Ptr<_1ad778ec2_Const> _27110_c = jule::new_ptr<_1ad778ec2_Const>((*((*((*((*(_23039_m))))._field_Left))._field_Model.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15))));;
								_1ad7d5a9a_Sub(_27110_c, (*(static__1ad7ce07c_NewI64(1LL))));
								_1bbdad186_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1bbdb0122_getBoundaryVar((*(*(_2598_blc))._field_Expr.alloc)._field_Model), jule::Any(_27110_c, &__jule_any_type15));
							}
						}
						_match_end_1c054eb98:;
					};
					return;;
				};
				_1bbdad186_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1bbdb0122_getBoundaryVar((*(*(_2598_blc))._field_Expr.alloc)._field_Model), (*(*((*(_23039_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1c05453ec:;
	};
}



inline void _1bbda529e_checkBinaryForNil(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel>* _28234_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _2867_var = _1bbd9a86b_getNilVar((*((*((*(_28234_m))))._field_Left))._field_Model);;
	if ((_2867_var != 0LLU)) {
		if ((!(_1bbd9a52a_isNilValidType((*(*((*(_28234_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_28234_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1c05555c7:;
				{
					_1bbd9935e_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _2867_var, ((*((*((*(_28234_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1c0555550:;
		};
		return;;
	};
	_2867_var=_1bbd9a86b_getNilVar((*((*((*(_28234_m))))._field_Right))._field_Model);
	if ((_2867_var != 0LLU)) {
		if ((!(_1bbd9a52a_isNilValidType((*(*((*(_28234_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_28234_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1c0557cb1:;
				{
					_1bbd9935e_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _2867_var, ((*(*((*(_28234_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1c0557c39:;
		};
		return;;
	};
}



inline void _1bbda5557_binary(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel> _31422_m) {
	_1bbda4ee6_checkBinaryForBoundary(_self_, &(_31422_m));
	_1bbda529e_checkBinaryForNil(_self_, &(_31422_m));
	if (_1bbdb1e15_Cond) {
		{
			
			if (_1bbda4446_strCond(_self_, _31422_m) || _1bbda4105_boolCond(_self_, &(_31422_m)) || _1bbda3cb4_selfCmpCond(_self_, &(_31422_m))) {
				_case_begin_1c0559c19:;
				{
					return;;
				}
			}
			_match_end_1c0559ac6:;
		};
	};
	if (_1bbda4c3d_tryNeutralElement(_self_, &(_31422_m))) {
		return;;
	};
	if ((!(_1bbdb1233_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_31422_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c055ab82:;
			{
				goto _match_end_1c055ae18;
			}
		}
		else {
			_case_begin_1c055ae7e:;
			{
				return;;
			}
		}
		_match_end_1c055ae18:;
	};
	jule::Ptr<_1ad9c16ae_Prim> _3473_lp = _1ad9bac4c_Prim((*((*(_31422_m))._field_Left))._field_Kind.ptr());;
	if ((_3473_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _3513_rp = _1ad9bac4c_Prim((*((*(_31422_m))._field_Right))._field_Kind);;
	if ((_3513_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_31422_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c055d756:;
			{
				jule::Bool _3584_ok;
				jule::U64 _3588_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1bbda73e4_checkForBitShiftOpt(&((*_31422_m.alloc)._field_Left), &((*_31422_m.alloc)._field_Right));
					_3584_ok = __jule_assign_result.__jule_result_arg0;
					_3588_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3584_ok) {
					(*_31422_m.alloc)._field_Op=jule::new_ptr<_1ad6ceb70_Token>((*(*(_31422_m))._field_Op.alloc));
					(*(*(_31422_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
					(*(*(_31422_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1ad778ec2_Const> _3639_c = (*((*_31422_m.alloc)._field_Right))._field_Model.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15);;
					_1ad7d1c72_SetU64(_3639_c.ptr(), _3588_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1c055d7bc:;
			{
				jule::Bool _3704_ok;
				jule::U64 _3708_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1bbda73e4_checkForBitShiftOpt(&((*_31422_m.alloc)._field_Left), &((*_31422_m.alloc)._field_Right));
					_3704_ok = __jule_assign_result.__jule_result_arg0;
					_3708_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3704_ok) {
					(*_31422_m.alloc)._field_Op=jule::new_ptr<_1ad6ceb70_Token>((*(*(_31422_m))._field_Op.alloc));
					(*(*(_31422_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
					(*(*(_31422_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1ad778ec2_Const> _3759_c = (*((*_31422_m.alloc)._field_Right))._field_Model.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15);;
					_1ad7d1c72_SetU64(_3759_c.ptr(), _3708_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c055d833:;
			{
				jule::Ptr<_1ad778ec2_Const> _3828_c = (*((*_31422_m.alloc)._field_Right))._field_Model.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15);;
				if ((_1ad7d1711_AsF64(_3828_c.ptr()) == 2LL)) {
					(*_31422_m.alloc)._field_Op=jule::new_ptr<_1ad6ceb70_Token>((*(*(_31422_m))._field_Op.alloc));
					(*(*(_31422_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(65LLU);
					(*(*(_31422_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1ad7d19b9_SetI64(_3828_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c055d899:;
			{
				jule::I64 _3944_z = _1ad874056_BitSizeOf((*(_3473_lp))._field_Kind);;
				jule::U64 _3954_s = _1ad7d147a_AsU64((*((*_31422_m.alloc)._field_Right))._field_Model.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15).ptr());;
				if ((_3954_s >= static_cast<jule::U64>(_3944_z))) {
					(*((*(_self_))._field_model))=jule::Any(static__1ad7ce258_NewU64(0LLU), &__jule_any_type15);
					return;;
				};
			}
		}
		else {
			_case_begin_1c055d3b0:;
			{
				return;;
			}
		}
		_match_end_1c055d6ce:;
	};
	jule::Any _4087_model = jule::Any(jule::new_ptr<_1bbd96845_UnsafeBinaryExprModel>(_1bbd96845_UnsafeBinaryExprModel{._field_Node=_31422_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4087_model))))));
}



inline void _1bbda5810_unary(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7da781_UnaryExprModel> _41221_m) {
	if ((!(_1bbdb1a4c_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41221_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c056cb50:;
			{
				{
					auto &_match_expr{ (*((*(_41221_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1c057005e:;
						{
							jule::Ptr<_1ad7da781_UnaryExprModel> _4209_um = (*((*(_41221_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1ad7da781_UnaryExprModel>();;
							if (((*((*(_4209_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4209_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1c056eed7:;
				};
				if ((!(_1bbdb14db_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1bbd9a52a_isNilValidType((*(*(_41221_m))._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _4345_var = _1bbd9a86b_getNilVar((*(*(_41221_m))._field_Expr.alloc)._field_Model);;
					if (_1bbd999e1_isSafe((*((*(_self_))._field_data))._field_nils, _4345_var)) {
						jule::Any _43610_model = jule::Any(jule::new_ptr<_1bbd97b54_UnsafeDerefExprModel>(_1bbd97b54_UnsafeDerefExprModel{._field_Base=_41221_m}), &__jule_any_type130);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_43610_model))))));
						return;;
					};
					_1bbd9935e_pushVar((*((*(_self_))._field_data))._field_nils, _4345_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c056cbb6:;
			{
				{
					auto &_match_expr{ (*((*(_41221_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_1c057851d:;
						{
							jule::Ptr<_1ad933a83_Var> _4469_v = (*((*(_41221_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1ad933a83_Var>();;
							if ((*(_4469_v))._field_Reference) {
								jule::Any _44810_model = jule::Any(jule::new_ptr<_1bbd95a42_RefExprModel>(_1bbd95a42_RefExprModel{._field_Var=_4469_v}), &__jule_any_type131);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_44810_model))))));
							};
						}
					}
					_match_end_1c0578496:;
				};
			}
		}
		_match_end_1c056cad9:;
	};
}



inline void _1bbda5ab8_structureLit(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7db155_StructLitExprModel> _45528_m) {
	{
		auto expr = &((*(_45528_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c057d149:;
		if (it != expr_end) {
			jule::Ptr<_1ad7dacae_StructArgExprModel> _45615_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1bbdaea8e_isBoundaryRiskyType((*((*(_45615_arg))._field_Expr))._field_Kind)) {
						_1bbdae7c5_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_45615_arg, &__jule_any_type132));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1bbd99d98_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_45615_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1bbda9869_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_45615_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1c057d149:;
			++it;
			goto _iter_begin_1c057d149;
		}
		_iter_end_1c057d149:;
	};
}



inline void _1bbda5d71_casting(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7db9d5_CastingExprModel> _47123_m) {
	jule::Bool _4723_valid = _1bbda9b77_isDynamicValidType((*(_47123_m))._field_ExprKind);;
	jule::Uintptr _4733_var = _1bbdaa3e7_getDynamicVar((*((*_47123_m.alloc)._field_Expr))._field_Model);;
	if (((_4723_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1bbda94b2_isFits((*((*(_self_))._field_data))._field_dynamic, _4733_var, (*_47123_m.alloc)._field_Kind))) {
		jule::Any _4758_model = jule::Any(jule::new_ptr<_1bbd97e51_UnsafeCastingExprModel>(_1bbd97e51_UnsafeCastingExprModel{._field_Base=_47123_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4758_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4723_valid)) {
		_1bbda8c75_pushVar((*((*(_self_))._field_data))._field_dynamic, _4733_var, (*_47123_m.alloc)._field_Kind);
	};
}



inline void _1bbda61d4_args(_1bbda31d1_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>> _48520_params, jule::Slice<jule::Any>* _48552_args) {
	{
		auto expr = _48552_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c058b83e:;
		if (it != expr_end) {
			jule::I64 _4868_i = it - expr->begin();
			jule::Any _48615_arg = *it;
			{
				if ((_4868_i >= _48520_params.len())) {
					goto _iter_next_1c058b83e;
				};
				jule::Ptr<_1ad7e96e6_ParamIns> _4908_p = _48520_params[_4868_i];;
				if (((*((*(_4908_p))._field_Decl))._field_Mutable && (*(*(_4908_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1bbdaea8e_isBoundaryRiskyType((*_4908_p.alloc)._field_Kind)) {
							_1bbdae7c5_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _48615_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1bbd99d98_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _48615_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1bbda9869_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _48615_arg);
					};
				};
			}
			_iter_next_1c058b83e:;
			++it;
			_4868_i++;
			goto _iter_begin_1c058b83e;
		}
		_iter_end_1c058b83e:;
	};
}



inline void _1bbda648c_scope(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad8b136d_Scope>* _50722_s) {
	jule::Ptr<_1bbd9ba37_scopeOptimizer> _5087_scopt = static__1bbd9c087_new((*(_50722_s)));;
	(*(_5087_scopt))._field_data=(*(_self_))._field_data;
	_1bbda1201_optimize(_5087_scopt);
}



inline void _1bbda6745_funcCall(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7dc387_FnCallExprModel> _51324_m) {
	_1bbda61d4_args(_self_, (*((*(_51324_m))._field_Func))._field_Params, &((*_51324_m.alloc)._field_Args));
	if (((*_51324_m.alloc)._field_Except != nullptr)) {
		_1bbda648c_scope(_self_, &((*_51324_m.alloc)._field_Except));
	};
}



inline void _1bbda69ed_indexing(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7dcc17_IndexingExprModel> _52024_m) {
	if ((!(_1bbdb14db_Access))) {
		return;;
	};
	jule::Bool _5253_array = (_1ad9bba1c_Arr((*((*(_52024_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_5253_array && _1ad9865ca_IsConst((*_52024_m.alloc)._field_Index.ptr()))) {
		jule::Any _5288_model = jule::Any(jule::new_ptr<_1bbd96bca_UnsafeIndexingExprModel>(_1bbd96bca_UnsafeIndexingExprModel{._field_Node=_52024_m}), &__jule_any_type134);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5288_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1bbdaed58_isBoundaryValidType((*(*(_52024_m))._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _5344_var = _1bbdb0122_getBoundaryVar((*(*(_52024_m))._field_Expr.alloc)._field_Model);;
		if (_1bbdad8c3_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5344_var, (*(*(_52024_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5369_model = jule::Any(jule::new_ptr<_1bbd96bca_UnsafeIndexingExprModel>(_1bbd96bca_UnsafeIndexingExprModel{._field_Node=_52024_m}), &__jule_any_type134);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5369_model))))));
			return;;
		};
		_1bbdad186_pushVar((*((*(_self_))._field_data))._field_boundary, _5344_var, (*(*(_52024_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1bbda6ca6_anonFunc(_1bbda31d1_exprOptimizer* _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel> _54424_m) {
	_1bbda648c_scope(_self_, &((*((*(_54424_m))._field_Func))._field_Scope));
}



inline void _1bbda6ea4_do(_1bbda31d1_exprOptimizer* _self_) {
	_1bb0a39cb_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1c059d741, jule::Ptr<__jule_anon_1c059d741_ctx>::make(__jule_anon_1c059d741_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c059d741_ctx_handler));
}








inline jule::Bool _1bbda848e_dynamicVar_eq(_1bbda848e_dynamicVar *_self_, _1bbda848e_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1bbda8c75_pushVar(jule::Ptr<_1bbda87d0_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1ad9b8596_TypeKind> _2442_kind) {
	if (((!(_1bbdb2ec1_Dynamic)) || (_2424_var == 0LLU))) {
		return;;
	};
	_2442_kind=_1bbdaa0a6_isTypeGuaranteedDynamicData(&(_self_), _2442_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05acde3:;
		if (it != expr_end) {
			_1bbda848e_dynamicVar _3015_v = *it;
			{
				if ((_3015_v._field_var == _2424_var)) {
					_3015_v._field_kind=_2442_kind;
					return;;
				};
			}
			_iter_next_1c05acde3:;
			++it;
			goto _iter_begin_1c05acde3;
		}
		_iter_end_1c05acde3:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05ad8d8:;
		if (it != expr_end) {
			_1bbda848e_dynamicVar _3715_v = *it;
			{
				if ((_3715_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _2424_var;
						jule::Ptr<_1ad9b8596_TypeKind> _1___jule_assign_arg = _2442_kind;
						_3715_v._field_var = ___jule_assign_arg;
						_3715_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1c05ad8d8:;
			++it;
			goto _iter_begin_1c05ad8d8;
		}
		_iter_end_1c05ad8d8:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1bbda848e_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bbda848e_dynamicVar{._field_var=_2424_var, ._field_kind=_2442_kind}; __jule_collection; }));
}



inline jule::Bool _1bbda90b6_removeVar(_1bbda87d0_dynamic* _self_, jule::Uintptr _4725_var) {
	if ((_4725_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c05b0ac7:;
			if (it != expr_end) {
				_1bbda848e_dynamicVar _4916_v = *it;
				{
					if ((_4916_v._field_var == _4725_var)) {
						_4916_v._field_var=0LLU;
						_4916_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1c05b0ac7:;
				++it;
				goto _iter_begin_1c05b0ac7;
			}
			_iter_end_1c05b0ac7:;
		};
	};
	return false;;
}



inline jule::Bool _1bbda94b2_isFits(_1bbda87d0_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1ad9b8596_TypeKind> _6136_kind) {
	if ((_6122_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c05b248b:;
			if (it != expr_end) {
				_1bbda848e_dynamicVar _6311_v = *it;
				{
					if ((_6311_v._field_var == _6122_var)) {
						return ((_6311_v._field_kind != nullptr) && _1ad9b8cd3_Equal(_6311_v._field_kind, _6136_kind));;
					};
				}
				_iter_next_1c05b248b:;
				++it;
				goto _iter_begin_1c05b248b;
			}
			_iter_end_1c05b248b:;
		};
	};
	return false;;
}








inline jule::Bool _1bbdab409_data_eq(_1bbdab409_data *_self_, _1bbdab409_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline _1bbdaae0e_dataCheckpoint _1bbdab7b1_getCheckpoint(_1bbdab409_data* _self_) {
	_1bbdaae0e_dataCheckpoint _257_c = _1bbdaae0e_dataCheckpoint{._field_boundary=_1bbdacbe1_boundary{._field_vars=jule::Slice<_1bbdac8a0_boundaryVar>(nullptr)}, ._field_nils=_1bbd98db9_nils{._field_vars=jule::Slice<_1bbd98a78_nilVar>(nullptr)}, ._field_dynamic=_1bbda87d0_dynamic{._field_vars=jule::Slice<_1bbda848e_dynamicVar>(nullptr)}};;
	_257_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1bbdac8a0_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1bbdac8a0_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_257_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05b4339:;
		if (it != expr_end) {
			jule::I64 _277_i = it - expr->begin();
			{
				_257_c._field_boundary._field_vars[_277_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_257_c._field_boundary._field_vars[_277_i]._field_maxSize);
			}
			_iter_next_1c05b4339:;
			++it;
			_277_i++;
			goto _iter_begin_1c05b4339;
		}
		_iter_end_1c05b4339:;
	};
	_257_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1bbd98a78_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1bbd98a78_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_257_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1bbda848e_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1bbda848e_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _257_c;;
}



inline void _1bbdaba69_loadCheckpoint(_1bbdab409_data* _self_, _1bbdaae0e_dataCheckpoint* _3535_c) {
	(*((*(_self_))._field_boundary))=(*(_3535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3535_c))._field_dynamic;
}











inline void _1bbdad186_pushVar(_1bbdacbe1_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1bbdb14db_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1bbdadc58_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05c85e5:;
		if (it != expr_end) {
			_1bbdac8a0_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c05c93d7:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1bbdae495_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1c05c93d7:;
							++it;
							_349_i++;
							goto _iter_begin_1c05c93d7;
						}
						_iter_end_1c05c93d7:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1c05c85e5:;
			++it;
			goto _iter_begin_1c05c85e5;
		}
		_iter_end_1c05c85e5:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05c8e64:;
		if (it != expr_end) {
			_1bbdac8a0_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1c05c8e64:;
			++it;
			goto _iter_begin_1c05c8e64;
		}
		_iter_end_1c05c8e64:;
	};
	{ jule::Slice<_1bbdac8a0_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1bbdac8a0_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1bbdad8c3_fitsMaxSize(_1bbdacbe1_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c05cdd04:;
			if (it != expr_end) {
				_1bbdac8a0_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1bbdae121_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1c05cdd04:;
				++it;
				goto _iter_begin_1c05cdd04;
			}
			_iter_end_1c05cdd04:;
		};
	};
	return false;;
}








inline jule::Bool _1bbee5d4b_Optimizer_eq(_1bbee5d4b_Optimizer *_self_, _1bbee5d4b_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1bbee5d4b_Optimizer> static__1bbee6302_New(jule::Ptr<_1bb09dcd4_IR>* _2121_ir) {
	return jule::new_ptr<_1bbee5d4b_Optimizer>(_1bbee5d4b_Optimizer{._field_ir=(*(_2121_ir))});;
}



inline void _1bbee65aa_optimizeGlobal(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad933a83_Var>* _2735_v) {
	if ((!((*((*(_2735_v))))._field_Binded))) {
		static__1bbda3687_optimize(&((*((*((*((*(_2735_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1bbee6863_optimizeFunction(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad7e778d_Fn>* _3337_func) {
	if ((*((*(_3337_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3337_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05d3d70:;
		if (it != expr_end) {
			jule::Ptr<_1ad7ea84b_FnIns> _3715_ins = *it;
			{
				jule::Ptr<_1bbd9ba37_scopeOptimizer> _388_so = static__1bbd9c087_new((*(_3715_ins))._field_Scope);;
				_1bbda1201_optimize(_388_so);
			}
			_iter_next_1c05d3d70:;
			++it;
			goto _iter_begin_1c05d3d70;
		}
		_iter_end_1c05d3d70:;
	};
}



inline void _1bbee6b1b_optimizeStruct(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad7159ec_Struct>* _4335_s) {
	if ((*((*(_4335_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05d5547:;
		if (it != expr_end) {
			jule::Ptr<_1ad718857_StructIns> _4715_ins = *it;
			{
				{
					auto expr = &((*(_4715_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c05d5e4e:;
					if (it != expr_end) {
						jule::Ptr<_1ad717ca7_FieldIns> _4816_f = *it;
						{
							if (((*(_4816_f))._field_Default != nullptr)) {
								static__1bbda3687_optimize(&((*(*(_4816_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1c05d5e4e:;
						++it;
						goto _iter_begin_1c05d5e4e;
					}
					_iter_end_1c05d5e4e:;
				};
				{
					auto expr = &((*_4715_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c05d63a0:;
					if (it != expr_end) {
						jule::Ptr<_1ad7e778d_Fn> _5316_m = *it;
						{
							_1bbee6863_optimizeFunction(_self_, &(_5316_m));
						}
						_iter_next_1c05d63a0:;
						++it;
						goto _iter_begin_1c05d63a0;
					}
					_iter_end_1c05d63a0:;
				};
			}
			_iter_next_1c05d5547:;
			++it;
			goto _iter_begin_1c05d5547;
		}
		_iter_end_1c05d5547:;
	};
}



inline void _1bbee6dc4_optimizeGlobals(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad8e446c_Package>* _5936_p) {
	{
		auto expr = &((*((*(_5936_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05d76e2:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _6015_f = *it;
			{
				{
					auto expr = &((*(_6015_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c05d8506:;
					if (it != expr_end) {
						jule::Ptr<_1ad933a83_Var> _6116_v = *it;
						{
							_1bbee65aa_optimizeGlobal(_self_, &(_6116_v));
						}
						_iter_next_1c05d8506:;
						++it;
						goto _iter_begin_1c05d8506;
					}
					_iter_end_1c05d8506:;
				};
			}
			_iter_next_1c05d76e2:;
			++it;
			goto _iter_begin_1c05d76e2;
		}
		_iter_end_1c05d76e2:;
	};
}



inline void _1bbee717c_optimizeFunctions(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad8e446c_Package>* _6738_p) {
	{
		auto expr = &((*((*(_6738_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05d8aab:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _6815_f = *it;
			{
				{
					auto expr = &((*(_6815_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c05d9925:;
					if (it != expr_end) {
						jule::Ptr<_1ad7e778d_Fn> _6916_func = *it;
						{
							_1bbee6863_optimizeFunction(_self_, &(_6916_func));
						}
						_iter_next_1c05d9925:;
						++it;
						goto _iter_begin_1c05d9925;
					}
					_iter_end_1c05d9925:;
				};
			}
			_iter_next_1c05d8aab:;
			++it;
			goto _iter_begin_1c05d8aab;
		}
		_iter_end_1c05d8aab:;
	};
}



inline void _1bbee7435_optimizeStructs(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad8e446c_Package>* _7536_p) {
	{
		auto expr = &((*((*(_7536_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05d9eca:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _7615_f = *it;
			{
				{
					auto expr = &((*(_7615_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c05dad44:;
					if (it != expr_end) {
						jule::Ptr<_1ad7159ec_Struct> _7716_s = *it;
						{
							_1bbee6b1b_optimizeStruct(_self_, &(_7716_s));
						}
						_iter_next_1c05dad44:;
						++it;
						goto _iter_begin_1c05dad44;
					}
					_iter_end_1c05dad44:;
				};
			}
			_iter_next_1c05d9eca:;
			++it;
			goto _iter_begin_1c05d9eca;
		}
		_iter_end_1c05d9eca:;
	};
}



inline void _1bbee76dd_optimizePackage(_1bbee5d4b_Optimizer* _self_, jule::Ptr<_1ad8e446c_Package>* _8336_p) {
	_1bbee6dc4_optimizeGlobals(_self_, _8336_p);
	_1bbee717c_optimizeFunctions(_self_, _8336_p);
	_1bbee7435_optimizeStructs(_self_, _8336_p);
}



inline void _1bbee78db_Optimize(_1bbee5d4b_Optimizer* _self_) {
	_1bbee7b50_detectEnabled();
	if (_1bbdb0b7d_Deadcode) {
		_1bbedea15_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1bbee5bb4_scopeEnabled || _1bbee59a5_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c05dcd9b:;
			if (it != expr_end) {
				jule::Ptr<_1ad8e1bea_ImportInfo> _9916_u = *it;
				{
					if ((!((*(_9916_u))._field_Binded))) {
						_1bbee76dd_optimizePackage(_self_, &((*_9916_u.alloc)._field_Package));
					};
				}
				_iter_next_1c05dcd9b:;
				++it;
				goto _iter_begin_1c05dcd9b;
			}
			_iter_end_1c05dcd9b:;
		};
		_1bbee76dd_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1bbdb0b7d_Deadcode) {
		_1bbee4564_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1bc0c1850_AbsTime_eq(_1bc0c1850_AbsTime *_self_, _1bc0c1850_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1bc0c2026_Time_eq(_1bc0c2026_Time *_self_, _1bc0c2026_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1bc0c2026_Time static__1bc0c2411_Unix(jule::U64 _9117_sec) {
	return _1bc0c2026_Time{._field_sec=_9117_sec};;
}



inline _1bc0c2026_Time static__1bc0c2620_Now(void) {
	return static__1bc0c2411_Unix(_1bc0c4116_unix());;
}



inline _1bc0c1850_AbsTime _1bc0c3d08_Abs(_1bc0c2026_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1bc0c0cb1_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1bc0c0cb1_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1c061a04e:;
	}
	_iter_end_1c061a04e:;;
	_1bc0c1850_AbsTime _1747_t = _1bc0c1850_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _1bbee9ba7_scopeCoder_eq(_1bbee9ba7_scopeCoder *_self_, _1bbee9ba7_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1bbee9ba7_scopeCoder> static__1bbeea3a0_new(jule::Ptr<_1bc0cdd35_ObjectCoder>* _3721_oc) {
	return jule::new_ptr<_1bbee9ba7_scopeCoder>(_1bbee9ba7_scopeCoder{._field_oc=(*(_3721_oc))});;
}



inline void _1c0760606_iterHead(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b31a5_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1bbdb0881_Copy && _1bc0030cd_isCopyOptimizable(&((*((*(_4429_it))))._field_Expr)))) {
		(*(_4441_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_4429_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c0765ba0:;
				{
					jule::Ptr<_1ad933a83_Var> _535_v = (*((*((*(_4429_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1ad933a83_Var>();;
					if ((*(_535_v))._field_Reference) {
						_1bc0145ea_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
						goto _match_end_1c07640cc;
					};
					goto _case_begin_1c0764143;
				}
			}
			else {
				_case_begin_1c0764143:;
				{
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1bc0145ea_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1c07640cc:;
		};
	} else {
		_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_4441_ref))) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_4441_ref))) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, _4452_begin);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
}



inline void _1bbeeaa76_rangeIndexIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b31a5_RangeIter>* _9336_it) {
	_1dd0b6912_Builder _947_sb = static__1dd0b74d4_New(64LL);;
	static__1bc01d978_iterBegin(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _963_begin = _1dd0c16ca_Str(&_947_sb);;
	_1dd0c18c8_Clear(&_947_sb);
	static__1bc01e050_iterNext(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _993_next = _1dd0c16ca_Str(&_947_sb);;
	jule::Bool _1017_ref = false;;
	_1c0760606_iterHead(_self_, _9336_it, &(_1017_ref), _963_begin);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		_1bc0d648b_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c077111c, jule::Ptr<__jule_anon_1c077111c_ctx>::make(__jule_anon_1c077111c_ctx{._self_=_self_,._1017_ref=_1017_ref}).as<jule::Uintptr>(), __jule_anon_1c077111c_ctx_handler));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bc0cee02_indent((*(_self_))._field_oc);
	};
	if (((*((*(_9336_it))))._field_KeyB != nullptr)) {
		(*(*((*(_9336_it))))._field_KeyB.alloc)._field_Reference=(_1bbdb0881_Copy && _1bc003496_isIterCopyOptimizable(&((*((*(_9336_it))))._field_Expr), &((*((*(_9336_it))))._field_KeyB)));
		_1bc0d648b_varInitExpr((*(_self_))._field_oc, &((*((*(_9336_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1c0774b26, jule::Ptr<__jule_anon_1c0774b26_ctx>::make(__jule_anon_1c0774b26_ctx{._self_=_self_,._9336_it=_9336_it}).as<jule::Uintptr>(), __jule_anon_1c0774b26_ctx_handler));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bc0cee02_indent((*(_self_))._field_oc);
	};
	_1bc002374_scope(_self_, (*((*(_9336_it))))._field_Scope);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, _993_next);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1bc0cee02_indent((*(_self_))._field_oc);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		static__1bc01d68c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_9336_it))))._field_KeyA);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1bc0cee02_indent((*(_self_))._field_oc);
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1bc0ce550_write((*(_self_))._field_oc, _963_begin);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bc0cee02_indent((*(_self_))._field_oc);
	static__1bc01dc64_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_9336_it))));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bbeead2e_rangeHashmapIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b31a5_RangeIter>* _16038_it) {
	_1dd0b6912_Builder _1617_sb = static__1dd0b74d4_New(64LL);;
	static__1bc01d978_iterBegin(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1633_begin = _1dd0c16ca_Str(&_1617_sb);;
	_1dd0c18c8_Clear(&_1617_sb);
	static__1bc01e050_iterNext(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1663_next = _1dd0c16ca_Str(&_1617_sb);;
	jule::Ptr<_1ad9c7352_Map> _1687__map = _1ad9bc7dc_Map((*((*((*(_16038_it))))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1ad7159ec_Struct> _1697_s = _1adaad23a_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1ad718857_StructIns> _1707_ins = _1bb0a8805_FindStructGenericInstance(&(_1697_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_1687__map))._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1ad7ea84b_FnIns> _1727_f = (*(_1ad719902_FindMethod(_1707_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1ad7159ec_Struct> _1747_itDecl = _1adaad23a_RuntimeFindStruct(&((*(*((*(_self_))._field_oc))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));;
	jule::Ptr<_1ad718857_StructIns> _1757_iterator = _1bb0a8805_FindStructGenericInstance(&(_1747_itDecl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_1687__map.alloc)._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1ad7ea84b_FnIns> _1767_nextCall = (*(_1ad719902_FindMethod(_1757_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0e2046_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1757_iterator);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1727_f));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_16038_it))))._field_Expr.alloc)._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, _1633_begin);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0e3256_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1767_nextCall));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1767_nextCall));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	if (((*((*(_16038_it))))._field_KeyA != nullptr)) {
		_1bc0d648b_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c079a069, jule::Ptr<__jule_anon_1c079a069_ctx>::make(__jule_anon_1c079a069_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c079a069_ctx_handler));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bc0cee02_indent((*(_self_))._field_oc);
	};
	if (((*((*(_16038_it))))._field_KeyB != nullptr)) {
		_1bc0d648b_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1c079c555, jule::Ptr<__jule_anon_1c079c555_ctx>::make(__jule_anon_1c079c555_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c079c555_ctx_handler));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bc0cee02_indent((*(_self_))._field_oc);
	};
	_1bc002374_scope(_self_, (*((*(_16038_it))))._field_Scope);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, _1663_next);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1bc0ce550_write((*(_self_))._field_oc, _1633_begin);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bc0cee02_indent((*(_self_))._field_oc);
	static__1bc01dc64_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_16038_it))));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bbeeb0d7_strRuneIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1bbd97857_StrRuneIter> _24332_it) {
	_1dd0b6912_Builder _2447_sb = static__1dd0b74d4_New(64LL);;
	static__1bc01d978_iterBegin(&(_2447_sb), static_cast<jule::Uintptr>((*(_24332_it))._field_Base));
	jule::Str _2463_begin = _1dd0c16ca_Str(&_2447_sb);;
	_1dd0c18c8_Clear(&_2447_sb);
	static__1bc01e050_iterNext(&(_2447_sb), static_cast<jule::Uintptr>((*_24332_it.alloc)._field_Base));
	jule::Str _2493_next = _1dd0c16ca_Str(&_2447_sb);;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	jule::Bool _2557_ref = false;;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1bbdb0881_Copy && _1bc0030cd_isCopyOptimizable(&((*_24332_it.alloc)._field_Expr)))) {
		_2557_ref=true;
		{
			auto &_match_expr{ (*((*(_24332_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c07ab6b8:;
				{
					jule::Ptr<_1ad933a83_Var> _2615_v = (*((*(_24332_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1ad933a83_Var>();;
					if ((*(_2615_v))._field_Reference) {
						_1bc0145ea_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1c07a9ae5;
					};
					goto _case_begin_1c07a9b5b;
				}
			}
			else {
				_case_begin_1c07a9b5b:;
				{
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1bc0145ea_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1c07a9ae5:;
		};
	} else {
		_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2557_ref) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2557_ref) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1bc0cee02_indent((*(_self_))._field_oc);
	if (((*((*_24332_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1bc0d648b_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c07b6519, jule::Ptr<__jule_anon_1c07b6519_ctx>::make(__jule_anon_1c07b6519_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c07b6519_ctx_handler));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bc0cee02_indent((*(_self_))._field_oc);
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1bc0cee02_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1bc0d648b_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bc0cee02_indent((*(_self_))._field_oc);
	};
	_1bc0ce550_write((*(_self_))._field_oc, _2463_begin);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1bc01d68c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc002374_scope(_self_, (*(*(_24332_it))._field_Base.alloc)._field_Scope);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, _2493_next);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1bc0cee02_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1bc01d68c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyA);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1bc0cee02_indent((*(_self_))._field_oc);
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1bc0ce550_write((*(_self_))._field_oc, _2463_begin);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bbeeb390_ifCase(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b178b_If> _35527_i) {
	if (((*(_35527_i))._field_Expr != nullptr)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35527_i.alloc)._field_Expr);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1bc002374_scope(_self_, (*_35527_i.alloc)._field_Scope);
}



inline void _1bbeeb648_conditional(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b1ea6_Conditional> _36432_c) {
	jule::Bool _3657_writed = false;;
	{
		auto expr = &((*(_36432_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c07cba7e:;
		if (it != expr_end) {
			jule::Ptr<_1ad8b178b_If> _36615_elif = *it;
			{
				if ((_36615_elif == nullptr)) {
					goto _iter_next_1c07cba7e;
				};
				if (_3657_writed) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3657_writed=true;
				_1bbeeb390_ifCase(_self_, _36615_elif);
			}
			_iter_next_1c07cba7e:;
			++it;
			goto _iter_begin_1c07cba7e;
		}
		_iter_end_1c07cba7e:;
	};
	if (((*_36432_c.alloc)._field_Default != nullptr)) {
		if (_3657_writed) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1bc002374_scope(_self_, (*(*(_36432_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1bbeeb901_infIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b22a3_InfIter> _38428_it) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc002374_scope(_self_, (*(_38428_it))._field_Scope);
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bc0cee02_indent((*(_self_))._field_oc);
	static__1bc01e050_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38428_it));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bc0cee02_indent((*(_self_))._field_oc);
	static__1bc01dc64_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38428_it));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1bbeebba9_whileIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b2759_WhileIter> _40130_it) {
	if ((((*(_40130_it))._field_Expr != nullptr) && ((*_40130_it.alloc)._field_Next == nullptr))) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_40130_it.alloc)._field_Expr);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_40130_it))._field_Expr != nullptr)) {
			_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_40130_it.alloc)._field_Expr);
		};
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_40130_it.alloc)._field_Next != nullptr)) {
			_1bc001d13_st(_self_, (*_40130_it.alloc)._field_Next);
		};
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_40130_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc002374_scope(_self_, (*_40130_it.alloc)._field_Scope);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	static__1bc01e050_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_40130_it));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bc0cee02_indent((*(_self_))._field_oc);
	static__1bc01dc64_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_40130_it));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1bbeebe62_rangeIter(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b31a5_RangeIter> _44030_it) {
	{
		
		if ((_1ad9bbca3_Slc((*((*(_44030_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c07e2479:;
			{
				_1bbeeaa76_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		else if ((_1ad9bba1c_Arr((*((*(_44030_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c07e2127:;
			{
				_1bbeeaa76_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		else if ((_1ad9bc7dc_Map((*((*(_44030_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c07e218d:;
			{
				_1bbeead2e_rangeHashmapIter(_self_, &(_44030_it));
			}
		}
		else {
			_case_begin_1c07e20b1:;
			{
				_1bbeeaa76_rangeIndexIter(_self_, &(_44030_it));
			}
		}
		_match_end_1c07e1ea1:;
	};
}



inline void _1bbeec21a_cont(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b353a_ContSt> _45321_c) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bc01e050_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_45321_c))._field_It);
}



inline void _1bbeec4c3_label(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b3dba_Label> _45822_l) {
	static__1bc01e33b_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45822_l));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1bbeec77b_gotoSt(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b452a_GotoSt> _46323_gt) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bc01e33b_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_46323_gt))._field_Label));
}



inline void _1bbeeca34_postfix(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b4904_Postfix> _46828_p) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46828_p))._field_Expr);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1bc0ce550_write((*(_self_))._field_oc, (*_46828_p.alloc)._field_Op);
}



inline void _1bbeeccdc_assignLeft(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Any* _47532_model) {
	{
		auto &_match_expr{ (*(_47532_model)) };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c07eb494:;
			{
				jule::Ptr<_1ad7dcc17_IndexingExprModel> _4788_iem = (*(_47532_model)).cast_ptr<_1ad7dcc17_IndexingExprModel>(&__jule_any_type42);;
				jule::Ptr<_1ad9c7352_Map> _4794__map = _1ad9bc7dc_Map((*((*(_4788_iem))._field_Expr))._field_Kind.ptr());;
				if ((_4794__map == nullptr)) {
					goto _match_end_1c07eb42d;
				};
				jule::Ptr<_1ad7159ec_Struct> _4858_s = _1adaad23a_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1ad718857_StructIns> _4868_ins = _1bb0a8805_FindStructGenericInstance(&(_4858_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4794__map))._field_Key; (*it++) = (*(_4794__map))._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1ad7ea84b_FnIns> _4888_f = (*(_1ad719902_FindMethod(_4868_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4888_f));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_4788_iem))._field_Expr.alloc)._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_1dd46d659_Production))) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*_4788_iem.alloc)._field_Token));
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1bc00a547_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4788_iem.alloc)._field_Index))._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1c07eb42d:;
	};
	_1bc00a547_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47532_model)));
}



inline void _1bbeed095_shl(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b4daa_Assign> _50724_a) {
	_1bbeeccdc_assignLeft(_self_, &((*((*(_50724_a))._field_Left))._field_Model));
	_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1bc008ce8_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50724_a.alloc)._field_Left), &((*_50724_a.alloc)._field_Right));
}



inline void _1bbeed34d_shr(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b4daa_Assign> _51324_a) {
	_1bbeeccdc_assignLeft(_self_, &((*((*(_51324_a))._field_Left))._field_Model));
	_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1bc00915b_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51324_a.alloc)._field_Left), &((*_51324_a.alloc)._field_Right));
}



inline void _1bbeed606_divByZeroAssign(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b4daa_Assign> _51936_a) {
	_1bbeeccdc_assignLeft(_self_, &((*((*(_51936_a))._field_Left))._field_Model));
	_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1bc007ed4_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51936_a.alloc)._field_Op), &((*_51936_a.alloc)._field_Left), &((*_51936_a.alloc)._field_Right));
}



inline void _1bbeedace_operatorOverloadingAssign(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _52547_s, jule::Ptr<_1ad7d9dac_OperandExprModel>* _52573_l, jule::Ptr<_1ad7d9dac_OperandExprModel>* _5268_r, jule::U64 _52636_op) {
	;
	jule::Ptr<_1ad7ea84b_FnIns> _5287_f = _1bb0a7eec_FindOperator(_52547_s, _52636_op, false);;
	if ((_5287_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:530:4"));;
	};
	static__1bc01c416_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5287_f));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1bbeeccdc_assignLeft(_self_, &((*((*(_52573_l))))._field_Model));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5268_r))))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bbeedd87_assign(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b4daa_Assign> _54027_a) {
	{
		auto &_match_expr{ (*((*(_54027_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1c0811e49:;
			{
				if ((_1dd46d417_Safety && (_1ad9bc2c0_Struct((*((*(_54027_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1bbeed606_divByZeroAssign(_self_, _54027_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1c0811ec1:;
			{
				if ((_1ad9bc2c0_Struct((*((*(_54027_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1bbeed095_shl(_self_, _54027_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1c0812037:;
			{
				if ((_1ad9bc2c0_Struct((*((*(_54027_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1bbeed34d_shr(_self_, _54027_a);
					return;;
				};
			}
		}
		_match_end_1c0811d7d:;
	};
	if ((((*((*(_54027_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1ad9bc2c0_Struct((*((*_54027_a.alloc)._field_Left))._field_Kind.ptr()) != nullptr))) {
		jule::Ptr<_1ad718857_StructIns> _5638_s = _1ad9bc2c0_Struct((*((*(_54027_a))._field_Left))._field_Kind);;
		_1bbeedace_operatorOverloadingAssign(_self_, &(_5638_s), &((*_54027_a.alloc)._field_Left), &((*_54027_a.alloc)._field_Right), (*(*(_54027_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1bbeeccdc_assignLeft(_self_, &((*(*(_54027_a))._field_Left.alloc)._field_Model));
	_1bc0ce550_write((*_self_.alloc)._field_oc, (*(*(_54027_a))._field_Op.alloc)._field_Kind);
	_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_54027_a.alloc)._field_Right))._field_Model);
}



inline void _1bbeee140_mapLookupAssign(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5361_MultiAssign>* _57337_a) {
	jule::Ptr<_1ad7dcc17_IndexingExprModel> _5757_iem = (*((*(_57337_a))))._field_Right.cast_ptr<_1ad7dcc17_IndexingExprModel>(&__jule_any_type42);;
	jule::Ptr<_1ad9c7352_Map> _5767__map = _1ad9bc7dc_Map((*((*(_5757_iem))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1ad7159ec_Struct> _5787_s = _1adaad23a_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1ad718857_StructIns> _5797_ins = _1bb0a8805_FindStructGenericInstance(&(_5787_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5767__map))._field_Key; (*it++) = (*_5767__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1ad7ea84b_FnIns> _5817_f = (*(_1ad719902_FindMethod(_5797_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_5817_f));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bbeeccdc_assignLeft(_self_, &((*(*(_5757_iem))._field_Expr.alloc)._field_Model));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5757_iem.alloc)._field_Index))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_57337_a))))._field_Left[0LL] != nullptr)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1bc00a547_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57337_a))))._field_Left[0LL]))._field_Model);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_57337_a))))._field_Left[1LL] != nullptr)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1bc00a547_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57337_a))))._field_Left[1LL]))._field_Model);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bbeee3e8_multiAssignTup(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5361_MultiAssign>* _60636_a) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1ad7e0995_TupleExprModel> _6107_tup = (*((*(_60636_a))))._field_Right.cast_ptr<_1ad7e0995_TupleExprModel>(&__jule_any_type83);;
	{
		auto expr = &((*(_6107_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0827965:;
		if (it != expr_end) {
			jule::I64 _6128_i = it - expr->begin();
			jule::Ptr<_1ad985b90_Data> _61215_r = *it;
			{
				_1bc0cee02_indent((*(_self_))._field_oc);
				jule::Ptr<_1ad985b90_Data> _6148_l = (*((*(_60636_a))))._field_Left[_6128_i];;
				if ((_6148_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6148_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1c082a9e0:;
							{
								jule::Ptr<_1ad933a83_Var> _61810_v = (*(_6148_l))._field_Model.unsafe_cast_ptr<_1ad933a83_Var>();;
								if (((*(_61810_v))._field_Reference && (!(_1ad933e90_IsInitialized(_61810_v))))) {
									static__1bc01d68c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _61810_v);
									_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_61215_r))._field_Model);
									_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_60636_a))))._field_Left[_6128_i]=nullptr;
									goto _iter_next_1c0827965;
								};
							}
						}
						_match_end_1c082a979:;
					};
					_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6148_l.alloc)._field_Kind);
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1bc01b8dd_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1bbee9448_assignArgName, static_cast<jule::Uintptr>(_6128_i));
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1bc00a547_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_61215_r.alloc)._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c0827965:;
			++it;
			_6128_i++;
			goto _iter_begin_1c0827965;
		}
		_iter_end_1c0827965:;
	};
	{
		auto expr = &((*((*(_60636_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0832123:;
		if (it != expr_end) {
			jule::I64 _6398_i = it - expr->begin();
			jule::Ptr<_1ad985b90_Data> _63915_l = *it;
			{
				if ((_63915_l == nullptr)) {
					goto _iter_next_1c0832123;
				};
				_1bc0cee02_indent((*(_self_))._field_oc);
				_1bbeeccdc_assignLeft(_self_, &((*(_63915_l))._field_Model));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1bc01b8dd_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1bbee9448_assignArgName, static_cast<jule::Uintptr>(_6398_i));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c0832123:;
			++it;
			_6398_i++;
			goto _iter_begin_1c0832123;
		}
		_iter_end_1c0832123:;
	};
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bbeee6a1_multiAssignFn(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5361_MultiAssign>* _65535_a) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	jule::Ptr<_1ad7dc387_FnCallExprModel> _6607_f = (*((*(_65535_a))))._field_Right.cast_ptr<_1ad7dc387_FnCallExprModel>(&__jule_any_type30);;
	_1bc0e8c40_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6607_f))._field_Func))._field_Result));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_65535_a))))._field_Right);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1ad9c67a2_Tuple> _6667_tup = _1ad9bca73_Tup((*(*(_6607_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_65535_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c083acb9:;
		if (it != expr_end) {
			jule::I64 _6678_i = it - expr->begin();
			jule::Ptr<_1ad985b90_Data> _66715_l = *it;
			{
				if ((_66715_l == nullptr)) {
					goto _iter_next_1c083acb9;
				};
				;
				_1bc0cee02_indent((*(_self_))._field_oc);
				_1bbeeccdc_assignLeft(_self_, &((*(_66715_l))._field_Model));
				{
					
					if (_1ad9b8cd3_Equal((*(_6667_tup))._field_Types[_6678_i], (*(_66715_l))._field_Kind)) {
						_case_begin_1c0845ea0:;
						{
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_6678_i));
						}
					}
					else if (_1bb0a4bdb_IsAny(&((*(_66715_l))._field_Kind))) {
						_case_begin_1c0842dae:;
						{
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_6678_i));
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_1bc0d1057_pushAnyType((*(_self_))._field_oc, (*(_6667_tup))._field_Types[_6678_i])));
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1c083c0a6:;
						{
							if ((_1ad9bc556_Trait((*(_6667_tup))._field_Types[_6678_i].ptr()) != nullptr)) {
								_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1ad802ea2_Trait> _68810_t1 = _1ad9bc556_Trait((*(_66715_l))._field_Kind.ptr());;
								jule::Ptr<_1ad802ea2_Trait> _68910_t2 = _1ad9bc556_Trait((*(_6667_tup))._field_Types[_6678_i].ptr());;
								_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_6678_i));
								_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1bc0d192b_pushAndWriteMaskMapper((*(_self_))._field_oc, _68810_t1, _68910_t2);
								_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1c083cea8;
							};
							jule::Ptr<_1ad802ea2_Trait> _6975_t = _1ad9bc556_Trait((*(_66715_l))._field_Kind);;
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_6678_i));
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1bc01c702_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _6975_t);
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_1bb0a7abd_FindTraitTypeOffset(_6975_t, (*(_6667_tup))._field_Types[_6678_i])));
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1c083cea8:;
				};
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c083acb9:;
			++it;
			_6678_i++;
			goto _iter_begin_1c083acb9;
		}
		_iter_end_1c083acb9:;
	};
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bbeee959_multiAssign(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5361_MultiAssign> _71432_a) {
	{
		auto expr = &((*(_71432_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c084b912:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _71715_d = *it;
			{
				_1bc0d648b_varInitExpr((*(_self_))._field_oc, &(_71715_d), nullptr);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1bc0cee02_indent((*(_self_))._field_oc);
			}
			_iter_next_1c084b912:;
			++it;
			goto _iter_begin_1c084b912;
		}
		_iter_end_1c084b912:;
	};
	{
		auto &_match_expr{ (*(_71432_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c084c12c:;
			{
				_1bbeee140_mapLookupAssign(_self_, &(_71432_a));
				return;;
			}
		}
		_match_end_1c084c0b6:;
	};
	{
		auto &_match_expr{ (*(_71432_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c084c1b5:;
			{
				_1bbeee3e8_multiAssignTup(_self_, &(_71432_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c084db78:;
			{
				_1bbeee6a1_multiAssignFn(_self_, &(_71432_a));
			}
		}
		else {
			_case_begin_1c084db12:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:736:4"));;
			}
		}
		_match_end_1c084da9b:;
	};
}



inline jule::Fn<void> _1bbeeec9a_matchExpr(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5a9d_Match> _74030_m) {
	if ((!(_1ad9865ca_IsConst((*(_74030_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1c08511ca, jule::Ptr<__jule_anon_1c08511ca_ctx>::make(__jule_anon_1c08511ca_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c08511ca_ctx_handler);;
	};
	if (((!(_1ad7d303c_IsBool((*(*(_74030_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1ad7d0941_ReadBool((*((*(_74030_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1c085250b, jule::Ptr<__jule_anon_1c085250b_ctx>::make(__jule_anon_1c085250b_ctx{._self_=_self_,._74030_m=_74030_m}).as<jule::Uintptr>(), __jule_anon_1c085250b_ctx_handler);;
	};
	return nullptr;;
}



inline void _1bc00010d_case(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5a9d_Match> _75025_m, jule::Ptr<_1ad8b65c6_Case> _75046_c) {
	if ((((*(_75046_c))._field_Exprs.len() != 0LL) && (!((*(_75025_m))._field_Comptime)))) {
		if ((((*_75025_m.alloc)._field_Cases.len() > 0LL) && ((*(_75025_m))._field_Cases[0LL] == _75046_c))) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_75046_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0856796:;
			if (it != expr_end) {
				jule::I64 _7579_i = it - expr->begin();
				jule::Ptr<_1ad985b90_Data> _75716_expr = *it;
				{
					{
						
						if ((!((*_75025_m.alloc)._field_TypeMatch))) {
							_case_begin_1c085e2c6:;
							{
								jule::Fn<void> _7606_caseExpr = _1bbeeec9a_matchExpr(_self_, _75025_m);;
								if (_1ad98691b_GoodOperand((*_75025_m.alloc)._field_Expr.ptr(), &(_75716_expr))) {
									if ((_7606_caseExpr != nullptr)) {
										_7606_caseExpr();
										_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_75716_expr))._field_Model);
								} else {
									_1bc00a547_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_75716_expr))._field_Model);
									if ((_7606_caseExpr != nullptr)) {
										_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7606_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1c0857368:;
							{
								_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1ad9b8596_TypeKind> _77610_tk = (*(_75716_expr))._field_Model.cast_ptr<_1ad9b8596_TypeKind>(&__jule_any_type86);;
								if ((_1ad9bc556_Trait((*((*_75025_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1bc006840_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1ad9baed3_Sptr((*(_75716_expr))._field_Kind) != nullptr));
									_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1bc01c702_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ad9bc556_Trait((*((*(_75025_m))._field_Expr))._field_Kind));
									_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_1bb0a7abd_FindTraitTypeOffset(_1ad9bc556_Trait((*((*(_75025_m))._field_Expr))._field_Kind), (*_75716_expr.alloc)._field_Kind)));
									_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _7867_j = _1bc0d1057_pushAnyType((*(_self_))._field_oc, _77610_tk);;
									_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_7867_j));
								};
							}
						}
						_match_end_1c0857258:;
					};
					if ((((*_75046_c.alloc)._field_Exprs.len() - _7579_i) > 1LL)) {
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1c0856796:;
				++it;
				_7579_i++;
				goto _iter_begin_1c0856796;
			}
			_iter_end_1c0856796:;
		};
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_75025_m))._field_Default == _75046_c) && ((*_75025_m.alloc)._field_Cases.len() != 0LL))) {
		_1bc0cee02_indent((*(_self_))._field_oc);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bc0cee02_indent((*(_self_))._field_oc);
	static__1bc02486e_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_75046_c));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_75046_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1bc0cee02_indent((*(_self_))._field_oc);
		_1bc002374_scope(_self_, (*_75046_c.alloc)._field_Scope);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bc0003b6_matchSt(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b5a9d_Match> _82028_m) {
	if ((((*(_82028_m))._field_Cases.len() == 0LL) && ((*_82028_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_82028_m.alloc)._field_Comptime && (((*_82028_m.alloc)._field_Default == nullptr) || ((*((*((*_82028_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	if (((!((*_82028_m.alloc)._field_Comptime)) && (!(_1ad9865ca_IsConst((*_82028_m.alloc)._field_Expr.ptr()))))) {
		if ((_1bbdb0881_Copy && _1bc0030cd_isCopyOptimizable(&((*_82028_m.alloc)._field_Expr)))) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_82028_m))._field_Expr.alloc)._field_Model);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1bc0cee02_indent((*(_self_))._field_oc);
	};
	if (((*_82028_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_82028_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0872b14:;
			if (it != expr_end) {
				jule::Ptr<_1ad8b65c6_Case> _84816_c = *it;
				{
					if ((_84816_c == nullptr)) {
						goto _iter_next_1c0872b14;
					};
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1bc0cee02_indent((*(_self_))._field_oc);
					_1bc00010d_case(_self_, _82028_m, _84816_c);
				}
				_iter_next_1c0872b14:;
				++it;
				goto _iter_begin_1c0872b14;
			}
			_iter_end_1c0872b14:;
		};
	};
	if (((*_82028_m.alloc)._field_Default != nullptr)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bc00010d_case(_self_, _82028_m, (*_82028_m.alloc)._field_Default);
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bc0cee02_indent((*(_self_))._field_oc);
	static__1bc01e627_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_82028_m));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bc00066e_fallSt(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b6cbe_FallSt> _87523_f) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bc02486e_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_87523_f))._field_DestCase);
}



inline void _1bc000927_breakSt(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b3914_BreakSt> _88024_b) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_88024_b))._field_It != 0LLU)) {
		static__1bc01dc64_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_88024_b.alloc)._field_It);
	} else {
		static__1bc01e627_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_88024_b))._field_Mtch);
	};
}



inline void _1bc000bd0_setResult(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b7165_RetSt> _88930_r) {
	if (((*((*((*((*(_88930_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_88930_r.alloc)._field_Expr);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1bc0cee02_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_88930_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c087c998:;
			{
				jule::Slice<jule::Ptr<_1ad985b90_Data>> _8998_datas = (*((*(_88930_r))._field_Expr.unsafe_cast_ptr<_1ad7e0995_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_8998_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c088167d:;
					if (it != expr_end) {
						jule::I64 _9008_i = it - expr->begin();
						jule::Ptr<_1ad985b90_Data> _90011_data = *it;
						{
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_9008_i));
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1bc00a547_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_90011_data))._field_Model);
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1bc0cee02_indent((*(_self_))._field_oc);
						}
						_iter_next_1c088167d:;
						++it;
						_9008_i++;
						goto _iter_begin_1c088167d;
					}
					_iter_end_1c088167d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c0880627:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1bc0145ea_model((*((*(_self_))._field_oc))._field_ec, (*_88930_r.alloc)._field_Expr);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1c088023c:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:913:4"));;
			}
		}
		_match_end_1c08801c6:;
	};
}



inline void _1bc000e88_retSt(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b7165_RetSt> _91726_r) {
	if (_1ad7e7c44_IsVoid((*((*(_91726_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_91726_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_91726_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_91726_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_91726_r))._field_Func.alloc)._field_Result);
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91726_r.alloc)._field_Expr);
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91726_r.alloc)._field_Expr);
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_91726_r))._field_Expr != nullptr)) {
		_1bc000bd0_setResult(_self_, _91726_r);
	};
	if ((*((*((*_91726_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1bc0e8c40_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_91726_r))._field_Func.alloc)._field_Result));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1bc001241_var(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad933a83_Var> _95324_v) {
	if ((!((*(_95324_v))._field_Constant))) {
		_1bc0d6744_var((*(_self_))._field_oc, _95324_v);
	};
}



inline void _1bc0014e9_mutSlicing(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1bbd96548_MutSlicingExprModel> _95931_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_95931_m))._field_Expr);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1dd46d659_Production))) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*_95931_m.alloc)._field_Token));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1bc00a547_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_95931_m.alloc)._field_Left);
	if (((*_95931_m.alloc)._field_Right != nullptr)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bc00a547_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_95931_m.alloc)._field_Right);
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1bc0017a2_swap(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1bbd952e4_SwapExprModel> _97625_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1bc00a547_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_97625_m))._field_Left))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bc00a547_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_97625_m.alloc)._field_Right))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc001a5a_exceptionalForwarding(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1bbd9506e_ExceptionalForwardingExprModel> _98442_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1bc00be72_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_98442_m))._field_Expr));
}



inline void _1bc001d13_st(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Any _99023_st) {
	if ((_99023_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _99023_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c089d865:;
			{
				_1bc002374_scope(_self_, _99023_st.cast_ptr<_1ad8b136d_Scope>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c089dada:;
			{
				_1bc001241_var(_self_, _99023_st.cast_ptr<_1ad933a83_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c089db51:;
			{
				_1bc0145ea_model((*((*(_self_))._field_oc))._field_ec, (*(_99023_st.unsafe_cast_ptr<_1ad985b90_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c089e3c1:;
			{
				_1bbeeb648_conditional(_self_, _99023_st.cast_ptr<_1ad8b1ea6_Conditional>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c089e437:;
			{
				_1bbeeb901_infIter(_self_, _99023_st.cast_ptr<_1ad8b22a3_InfIter>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1c089e49d:;
			{
				_1bbeebba9_whileIter(_self_, _99023_st.cast_ptr<_1ad8b2759_WhileIter>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1c089e514:;
			{
				_1bbeebe62_rangeIter(_self_, _99023_st.cast_ptr<_1ad8b31a5_RangeIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c089e57a:;
			{
				_1bbeec21a_cont(_self_, _99023_st.cast_ptr<_1ad8b353a_ContSt>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1c089e5e1:;
			{
				_1bbeec4c3_label(_self_, _99023_st.cast_ptr<_1ad8b3dba_Label>(&__jule_any_type18));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c089e657:;
			{
				_1bbeec77b_gotoSt(_self_, _99023_st.cast_ptr<_1ad8b452a_GotoSt>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c089e6bd:;
			{
				_1bbeeca34_postfix(_self_, _99023_st.cast_ptr<_1ad8b4904_Postfix>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c089e734:;
			{
				_1bbeedd87_assign(_self_, _99023_st.cast_ptr<_1ad8b4daa_Assign>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c089e79a:;
			{
				_1bbeee959_multiAssign(_self_, _99023_st.cast_ptr<_1ad8b5361_MultiAssign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c089e811:;
			{
				_1bc0003b6_matchSt(_self_, _99023_st.cast_ptr<_1ad8b5a9d_Match>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c089e877:;
			{
				_1bc00066e_fallSt(_self_, _99023_st.cast_ptr<_1ad8b6cbe_FallSt>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c089e8ee:;
			{
				_1bc000927_breakSt(_self_, _99023_st.cast_ptr<_1ad8b3914_BreakSt>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c089e976:;
			{
				_1bc000e88_retSt(_self_, _99023_st.cast_ptr<_1ad8b7165_RetSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1c089e9ed:;
			{
				_1bc0120cb_pushToSlice((*((*(_self_))._field_oc))._field_ec, _99023_st.cast_ptr<_1bbd970a4_PushToSliceExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1c089ea75:;
			{
				_1bc012384_appendToSlice((*((*(_self_))._field_oc))._field_ec, _99023_st.cast_ptr<_1bbd9747d_AppendToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1c089eaec:;
			{
				_1bc0014e9_mutSlicing(_self_, _99023_st.cast_ptr<_1bbd96548_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1c089eb74:;
			{
				_1bc0017a2_swap(_self_, _99023_st.cast_ptr<_1bbd952e4_SwapExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1c089ebeb:;
			{
				_1bc001a5a_exceptionalForwarding(_self_, _99023_st.cast_ptr<_1bbd9506e_ExceptionalForwardingExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1c089ec73:;
			{
				_1bbeeb0d7_strRuneIter(_self_, _99023_st.cast_ptr<_1bbd97857_StrRuneIter>(&__jule_any_type122));
			}
		}
		else {
			_case_begin_1c089d6cd:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1c089d667:;
	};
}



inline void _1bc0020bb_scopeStmts(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b136d_Scope>* _104632_s) {
	{
		auto expr = &((*((*(_104632_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08ac8b8:;
		if (it != expr_end) {
			jule::Any _104715_st = *it;
			{
				_1bc0cee02_indent((*(_self_))._field_oc);
				_1bc001d13_st(_self_, _104715_st);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c08ac8b8:;
			++it;
			goto _iter_begin_1c08ac8b8;
		}
		_iter_end_1c08ac8b8:;
	};
}



inline void _1bc002374_scope(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad8b136d_Scope> _105526_s) {
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	if ((*(_105526_s))._field_Deferred) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bc0020bb_scopeStmts(_self_, &(_105526_s));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_105526_s.alloc)._field_Deferred) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1bc00262c_commonFuncScope(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _107037_f) {
	if ((!(_1ad7e7c44_IsVoid((*((*(_107037_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1ad9c67a2_Tuple> _10728_tup = _1ad9bca73_Tup((*((*(_107037_f))))._field_Result.ptr());;
		if ((_10728_tup != nullptr)) {
			_1bc0cee02_indent((*(_self_))._field_oc);
			_1bc0e8569_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10728_tup);
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_10728_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c08b4639:;
				if (it != expr_end) {
					jule::I64 _107710_i = it - expr->begin();
					jule::Ptr<_1ad9b8596_TypeKind> _107717_t = *it;
					{
						if (_1bc0eae1d_shouldInitialized(&(_107717_t))) {
							_1bc0cee02_indent((*(_self_))._field_oc);
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_107710_i));
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1bc0157b6_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _107717_t);
							_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1c08b4639:;
					++it;
					_107710_i++;
					goto _iter_begin_1c08b4639;
				}
				_iter_end_1c08b4639:;
			};
		} else if (((*((*(*((*(_107037_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1bc0cee02_indent((*(_self_))._field_oc);
			_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_107037_f))))._field_Result);
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1bc0eae1d_shouldInitialized(&((*((*(_107037_f))))._field_Result))) {
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1bc0157b6_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_107037_f))))._field_Result);
			};
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1bc0020bb_scopeStmts(_self_, &((*((*(_107037_f))))._field_Scope));
	if (((*(*((*(_107037_f))))._field_Decl.alloc)._field_Exceptional && _1ad7e7c44_IsVoid((*((*(_107037_f))))._field_Decl))) {
		_1bc0cee02_indent((*_self_.alloc)._field_oc);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1bc002990_anonFuncScope(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel> _111034_m, jule::Str _111061_ident) {
	if (((*((*(_111034_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11143_closure = _1bb0a502c_IsClosure(&(_111034_m));;
	if (_11143_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1ad933a83_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1ad933a83_Var>>((void*)__jule_anon_1c08c2dc8, jule::Ptr<__jule_anon_1c08c2dc8_ctx>::make(__jule_anon_1c08c2dc8_ctx{._self_=_self_,._111034_m=_111034_m}).as<jule::Uintptr>(), __jule_anon_1c08c2dc8_ctx_handler); __jule_collection; }));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	if (_11143_closure) {
		_1bc0cee02_indent((*(_self_))._field_oc);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1bc0ce550_write((*(_self_))._field_oc, _111061_ident);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1bc0ce550_write((*(_self_))._field_oc, _111061_ident);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1bc00262c_commonFuncScope(_self_, &((*_111034_m.alloc)._field_Func));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11143_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1bc002c48_funcScope(jule::Ptr<_1bbee9ba7_scopeCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _114230_f) {
	if (((*(_114230_f))._field_Scope == nullptr)) {
		return;;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc00262c_commonFuncScope(_self_, &(_114230_f));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1bc005dd3_exprCoder> static__1bc0062ce_new(jule::Ptr<_1bc0cdd35_ObjectCoder>* _4621_oc) {
	return jule::new_ptr<_1bc005dd3_exprCoder>(_1bc005dd3_exprCoder{._field_oc=(*(_4621_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1ad933a83_Var>>>(nullptr)});;
}



inline void _1bc006587_string(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad778ec2_Const>* _5224_c) {
	jule::Str _533_content = _1ad7d0bc7_ReadStr((*(_5224_c)).ptr());;
	if ((_533_content.len() == 0LL)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _583_len = _1ab15d3e2_FmtInt(static_cast<jule::I64>(_533_content.len()), 10LL);;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1bc016575_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _533_content);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bc0ce550_write((*(_self_))._field_oc, _583_len);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc006840_boolean(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Bool _6724_b) {
	if (_6724_b) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1bc006a3d_nilLit(jule::Ptr<_1bc005dd3_exprCoder> _self_) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1bc006d7e_ftoaSpecialCases(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::F64* _7934_x) {
	{
		
		if (_1c2d4b55d_IsNaN((*(_7934_x)))) {
			_case_begin_1c08e7271:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1c2d4bbe0_IsInf((*(_7934_x)), 1LL)) {
			_case_begin_1c08e731a:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1c2d4bbe0_IsInf((*(_7934_x)), -1LL)) {
			_case_begin_1c08e7392:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1c08e71d8:;
			{
				return false;;
			}
		}
		_match_end_1c08e70c8:;
	};
	return true;;
}



inline void _1bc007137_float32(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad778ec2_Const>* _9325_c) {
	jule::F64 _943_x = _1ad7d1711_AsF64((*(_9325_c)).ptr());;
	if (_1bc006d7e_ftoaSpecialCases(_self_, &(_943_x))) {
		return;;
	};
	{
		
		if ((_943_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1c08eb52d:;
			{
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_943_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1c08ea906:;
			{
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1c08ea571:;
			{
				_1bc01691b_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _943_x, 32LL);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1c08ea30c:;
	};
}



inline void _1bc0073e0_float64(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad778ec2_Const>* _11225_c) {
	jule::F64 _1133_x = _1ad7d1711_AsF64((*(_11225_c)).ptr());;
	if (_1bc006d7e_ftoaSpecialCases(_self_, &(_1133_x))) {
		return;;
	};
	{
		
		if ((_1133_x == jule::MAX_F64)) {
			_case_begin_1c0903bc8:;
			{
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1133_x == jule::MIN_F64)) {
			_case_begin_1c09038a9:;
			{
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1c0903843:;
			{
				_1bc01691b_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1133_x, 64LL);
			}
		}
		_match_end_1c09035ce:;
	};
}



inline void _1bc007698_constant(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad778ec2_Const> _13029_c) {
	{
		
		if (_1ad7d32c3_IsStr(_13029_c.ptr())) {
			_case_begin_1c0905a54:;
			{
				_1bc006587_string(_self_, &(_13029_c));
			}
		}
		else if (_1ad7d303c_IsBool(_13029_c.ptr())) {
			_case_begin_1c0905aba:;
			{
				_1bc006840_boolean(_self_, _1ad7d0941_ReadBool(_13029_c));
			}
		}
		else if (_1ad7d3559_IsF64(_13029_c.ptr())) {
			_case_begin_1c0905b31:;
			{
				{
					
					if (((*_13029_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1c090856d:;
						{
							_1bc007137_float32(_self_, &(_13029_c));
						}
					}
					else {
						_case_begin_1c09081c7:;
						{
							_1bc0073e0_float64(_self_, &(_13029_c));
						}
					}
					_match_end_1c09080b7:;
				};
			}
		}
		else if (_1ad7d2a20_IsI64(_13029_c.ptr())) {
			_case_begin_1c0905b97:;
			{
				_1bc016c07_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1ad7d0424_ReadI64(_13029_c));
			}
		}
		else if (_1ad7d2ca6_IsU64(_13029_c.ptr())) {
			_case_begin_1c0905c0d:;
			{
				_1bc016ee3_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1ad7d06aa_ReadU64(_13029_c));
			}
		}
		else if (_1ad7d37e0_IsNil(_13029_c.ptr())) {
			_case_begin_1c0905c74:;
			{
				_1bc006a3d_nilLit(_self_);
			}
		}
		else {
			_case_begin_1c09059dd:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1c09058de:;
	};
}



inline void _1bc007ab6_operatorOverloadingUnary(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _15446_s, jule::U64 _15467_op, jule::Any _15486_e) {
	;
	jule::Ptr<_1ad7ea84b_FnIns> _1567_f = _1bb0a7eec_FindOperator(_15446_s, _15467_op, true);;
	if ((_1567_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: unary operator overloading is not exist, this is an implementation mistake", 79) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:158:4"));;
	};
	static__1bc01c416_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_1567_f));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1bc00a547_possibleRefExpr(_self_, _15486_e);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc007ed4_divByZeroBinary(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad6ceb70_Token>* _16633_op, jule::Ptr<_1ad7d9dac_OperandExprModel>* _16657_l, jule::Ptr<_1ad7d9dac_OperandExprModel>* _16690_r) {
	;
	;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16657_l))))._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bc00a547_possibleRefExpr(_self_, (*((*(_16657_l))))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1bc0e3c90_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16690_r))))._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bc00a547_possibleRefExpr(_self_, (*((*(_16690_r))))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_1dd46d659_Production))) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1bc0d1bd4_locInfo((*(_self_))._field_oc, _16633_op);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1bc0e3c90_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16657_l))))._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_16633_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1c0916e50:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1c091a67e:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1c091a5d5:;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1bc0086cc__unsafeBinary(jule::Ptr<_1bc005dd3_exprCoder> _self_, _1dd0b6912_Builder* _20535_buf, jule::Str* _20559_l, jule::Str* _20568_r, jule::Ptr<_1ad9b8596_TypeKind>* _2068_lk, jule::Ptr<_1ad9b8596_TypeKind>* _20634_rk, jule::U64 _20655_op, jule::Str _20670_kind) {
	if ((_1ad9bc2c0_Struct((*(_2068_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1ad718857_StructIns> _2098_s = _1ad9bc2c0_Struct((*(_2068_lk)).ptr());;
		_1bc017642_operatorOverloadingBinary(_20535_buf, &(_2098_s), _20559_l, _20568_r, _20655_op, _20670_kind);
		return;;
	};
	if (((_20655_op == static_cast<jule::U64>(50LLU)) || (_20655_op == static_cast<jule::U64>(51LLU)))) {
		{
			
			if (_1bb0a4bdb_IsAny(_2068_lk)) {
				_case_begin_1c09201cd:;
				{
					if (((!(_1ad9b96c9_IsNil((*(_20634_rk)).ptr()))) && (!(_1bb0a4bdb_IsAny(_20634_rk))))) {
						_1dd0c118b_WriteByte(_20535_buf, '(');
						if ((_20655_op == static_cast<jule::U64>(51LLU))) {
							_1dd0c118b_WriteByte(_20535_buf, '!');
						};
						jule::I64 _2256_i = _1bc0d1057_pushAnyType((*(_self_))._field_oc, (*(_20634_rk)));;
						_1dd0c0dd3_WriteStr(_20535_buf, jule::Str::lit("__jule_any_type", 15));
						_1dd0c0dd3_WriteStr(_20535_buf, _1ab15d6ab_Itoa(_2256_i));
						_1dd0c0dd3_WriteStr(_20535_buf, jule::Str::lit("_compare(", 9));
						_1dd0c0dd3_WriteStr(_20535_buf, (*(_20559_l)));
						_1dd0c0dd3_WriteStr(_20535_buf, jule::Str::lit(", ", 2));
						_1dd0c0dd3_WriteStr(_20535_buf, (*(_20568_r)));
						_1dd0c0dd3_WriteStr(_20535_buf, jule::Str::lit("))", 2));
						return;;
					};
				}
			}
			else if ((_1ad9bba1c_Arr((*(_2068_lk)).ptr()) != nullptr)) {
				_case_begin_1c0920277:;
				{
					jule::Ptr<_1ad9c7ece_Arr> _2385_arr = _1ad9bba1c_Arr((*(_2068_lk)).ptr());;
					jule::Ptr<_1ad7e778d_Fn> _2399_f = _1adaacb41_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
					jule::Ptr<_1ad7ea84b_FnIns> _2409_ins = _1bb0a8371_FindFnGenericInstance(&(_2399_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2385_arr))._field_Elem; __jule_collection; }));;
					if ((_20655_op == static_cast<jule::U64>(51LLU))) {
						_1dd0c118b_WriteByte(_20535_buf, '!');
					};
					static__1bc01c416_funcIns(_20535_buf, &(_2409_ins));
					_1dd0c118b_WriteByte(_20535_buf, '(');
					_1dd0c0dd3_WriteStr(_20535_buf, (*(_20559_l)));
					_1dd0c0dd3_WriteStr(_20535_buf, jule::Str::lit(".begin(), ", 10));
					_1dd0c0dd3_WriteStr(_20535_buf, (*(_20568_r)));
					_1dd0c0dd3_WriteStr(_20535_buf, jule::Str::lit(".begin(), ", 10));
					_1dd0c0dd3_WriteStr(_20535_buf, _1ab15d6ab_Itoa((*_2385_arr.alloc)._field_N));
					_1dd0c118b_WriteByte(_20535_buf, ')');
					return;;
				}
			}
			_match_end_1c09200e0:;
		};
	};
	{
		auto &_match_expr{ _20655_op };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1c0920310:;
			{
				jule::Ptr<_1ad9c16ae_Prim> _2594_lp = _1ad9bac4c_Prim((*(_2068_lk)).ptr());;
				if (((_2594_lp != nullptr) && _1ad87bd0b_IsUnsigInt((*_2594_lp.alloc)._field_Kind))) {
					_1dd0c118b_WriteByte(_20535_buf, '(');
					_1bc0de7b3_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _20535_buf, _2594_lp);
					_1dd0c118b_WriteByte(_20535_buf, ')');
				};
			}
		}
		_match_end_1c0923d2a:;
	};
	_1dd0c118b_WriteByte(_20535_buf, '(');
	_1dd0c0dd3_WriteStr(_20535_buf, (*(_20559_l)));
	_1dd0c118b_WriteByte(_20535_buf, ' ');
	_1dd0c0dd3_WriteStr(_20535_buf, _20670_kind);
	_1dd0c118b_WriteByte(_20535_buf, ' ');
	_1dd0c0dd3_WriteStr(_20535_buf, (*(_20568_r)));
	_1dd0c118b_WriteByte(_20535_buf, ')');
}



inline void _1bc008985_unsafeBinary(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel> _27633_m) {
	jule::I64 _2773_i = _1dd0c1b5e_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _2787_oldbuf = _1dd0c217b_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1bc00a547_possibleRefExpr(_self_, (*((*(_27633_m))._field_Left))._field_Model);
	jule::Str _2803_l = __jule_bytesToStr(_1dd0c217b_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2773_i));;
	{
		_1dd0c2434_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2787_oldbuf);
	};
	_1bc00a547_possibleRefExpr(_self_, (*((*_27633_m.alloc)._field_Right))._field_Model);
	jule::Str _2833_r = __jule_bytesToStr(_1dd0c217b_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2773_i));;
	{
		_1dd0c2434_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2787_oldbuf);
	};
	_1bc0086cc__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2803_l), &(_2833_r), &((*(*(_27633_m))._field_Left.alloc)._field_Kind), &((*(*(_27633_m))._field_Right.alloc)._field_Kind), (*((*_27633_m.alloc)._field_Op))._field_Id, (*(*(_27633_m))._field_Op.alloc)._field_Kind);
}



inline void _1bc008ce8_shl(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7d9dac_OperandExprModel>* _28825_l, jule::Ptr<_1ad7d9dac_OperandExprModel>* _28858_r) {
	;
	;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28825_l))))._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bc00a547_possibleRefExpr(_self_, (*((*(_28825_l))))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1bc0e3c90_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28858_r))))._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bc00a547_possibleRefExpr(_self_, (*((*(_28858_r))))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1bc0e3c90_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28825_l))))._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_1ad874056_BitSizeOf((*(_1ad9bac4c_Prim((*((*(_28825_l))))._field_Kind.ptr())))._field_Kind)));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1bc00915b_shr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7d9dac_OperandExprModel>* _31625_l, jule::Ptr<_1ad7d9dac_OperandExprModel>* _31658_r) {
	;
	;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31625_l))))._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bc00a547_possibleRefExpr(_self_, (*((*(_31625_l))))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1bc0e3c90_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31658_r))))._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bc00a547_possibleRefExpr(_self_, (*((*(_31658_r))))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1bc0e3c90_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31625_l))))._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_1ad874056_BitSizeOf((*(_1ad9bac4c_Prim((*((*(_31625_l))))._field_Kind.ptr())))._field_Kind)));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1bc009414_binary(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7da3a7_BinaryExprModel> _34427_m) {
	{
		auto &_match_expr{ (*((*(_34427_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c094c150:;
			{
				if ((_1dd46d417_Safety && (_1ad9bc2c0_Struct((*((*(_34427_m))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1bc007ed4_divByZeroBinary(_self_, &((*_34427_m.alloc)._field_Op), &((*_34427_m.alloc)._field_Left), &((*_34427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1c094c1c7:;
			{
				if ((_1ad9bc2c0_Struct((*((*(_34427_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1bc008ce8_shl(_self_, &((*_34427_m.alloc)._field_Left), &((*_34427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c094c23d:;
			{
				if ((_1ad9bc2c0_Struct((*((*(_34427_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1bc00915b_shr(_self_, &((*_34427_m.alloc)._field_Left), &((*_34427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1c094c084:;
	};
	_1bc008985_unsafeBinary(_self_, _34427_m);
}



inline void _1bc0096bc_var(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad933a83_Var> _36824_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0952056:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1ad933a83_Var>> _36910_prefix = *it;
			{
				if (_36910_prefix(_36824_m)) {
					return;;
				};
			}
			_iter_next_1c0952056:;
			++it;
			goto _iter_begin_1c0952056;
		}
		_iter_end_1c0952056:;
	};
	if ((*(_36824_m))._field_Binded) {
		jule::Ptr<_1ad6e45d0_Directive> _3754_d = _1bb0a6847_FindDirective(&((*_36824_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_3754_d != nullptr)) {
			_1bc0ce808_writeBytes((*_self_.alloc)._field_oc, _1bc0db67d_concatAllParts((*_3754_d.alloc)._field_Args));
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1bc01d68c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _36824_m);
}



inline void _1bc009975_structureIns(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad718857_StructIns> _38433_m) {
	_1bc0e2046_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _38433_m);
}



inline void _1bc009c2d_unary(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7da781_UnaryExprModel> _38826_m) {
	if ((_1ad9bc2c0_Struct((*((*(_38826_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1ad718857_StructIns> _3918_s = _1ad9bc2c0_Struct((*((*(_38826_m))._field_Expr))._field_Kind);;
		_1bc007ab6_operatorOverloadingUnary(_self_, &(_3918_s), (*((*_38826_m.alloc)._field_Op))._field_Id, (*(*(_38826_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_38826_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c095836a:;
			{
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1bc00a547_possibleRefExpr(_self_, (*(*(_38826_m))._field_Expr.alloc)._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c0958bc8:;
			{
				if ((_1dd46d659_Production || (_1ad9baed3_Sptr((*((*(_38826_m))._field_Expr))._field_Kind) == nullptr))) {
					goto _match_end_1c0958b2e;
				};
				_1bc00a547_possibleRefExpr(_self_, (*(*(_38826_m))._field_Expr.alloc)._field_Model);
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*_38826_m.alloc)._field_Op));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1c0958b2e:;
	};
	_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1bc0ce550_write((*(_self_))._field_oc, (*(*(_38826_m))._field_Op.alloc)._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bc00a547_possibleRefExpr(_self_, (*(*(_38826_m))._field_Expr.alloc)._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1bc009ed6_structureLit(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7db155_StructLitExprModel> _41933_m) {
	if ((*((*((*(_41933_m))._field_Strct))._field_Decl))._field_Binded) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1bc0e2046_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_41933_m.alloc)._field_Strct);
	if ((*(*((*(_41933_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4307_inited = false;;
	_julec_label_1c0960e88:;
	{
		auto expr = &((*(*(_41933_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0964145:;
		if (it != expr_end) {
			jule::Ptr<_1ad717ca7_FieldIns> _43215_f = *it;
			{
				{
					auto expr = &((*_41933_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0964d5a:;
					if (it != expr_end) {
						jule::Ptr<_1ad7dacae_StructArgExprModel> _43316_arg = *it;
						{
							if (((*(_43316_arg))._field_Field == _43215_f)) {
								if (_4307_inited) {
									_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1bc01d3a1_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_43215_f))._field_Decl));
								_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1bc00a547_possibleRefExpr(_self_, (*((*_43316_arg.alloc)._field_Expr))._field_Model);
								_4307_inited=true;
								goto _iter_next_1c0964145;
							};
						}
						_iter_next_1c0964d5a:;
						++it;
						goto _iter_begin_1c0964d5a;
					}
					_iter_end_1c0964d5a:;
				};
				if ((*(*((*(_41933_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					_4307_inited=false;
					goto _iter_next_1c0964145;
				};
				if (_4307_inited) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4307_inited=_1bc01493b_handleFieldByDefault(_self_, &(_43215_f));
			}
			_iter_next_1c0964145:;
			++it;
			goto _iter_begin_1c0964145;
		}
		_iter_end_1c0964145:;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bc00a28e_allocStructure(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7db452_AllocStructLitExprModel> _46235_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1bc01d0b5_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_46235_m))._field_Lit))._field_Strct));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1bc009ed6_structureLit(_self_, (*_46235_m.alloc)._field_Lit);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc00a547_possibleRefExpr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Any _47032_expr) {
	{
		auto &_match_expr{ _47032_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c096c615:;
			{
				jule::Ptr<_1ad933a83_Var> _4734_v = _47032_expr.unsafe_cast_ptr<_1ad933a83_Var>();;
				if ((*(_4734_v))._field_Reference) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1bc0145ea_model(_self_, _47032_expr);
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1c096c59e:;
	};
	_1bc0145ea_model(_self_, _47032_expr);
}



inline void _1bc00a965_castTraitFromTrait(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7db9d5_CastingExprModel>* _48440_m, jule::Ptr<_1ad802ea2_Trait> _48472_t1, jule::Ptr<_1ad802ea2_Trait> _48494_t2) {
	_1bc00a547_possibleRefExpr(_self_, (*((*((*(_48440_m))))._field_Expr))._field_Model);
	_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1bc0d192b_pushAndWriteMaskMapper((*(_self_))._field_oc, _48472_t1, _48494_t2);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc00ac1d_casting(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7db9d5_CastingExprModel> _49728_m) {
	{
		
		if (_1bb0a4bdb_IsAny(&((*(_49728_m))._field_Kind))) {
			_case_begin_1c097220d:;
			{
				if (_1ad9b96c9_IsNil((*_49728_m.alloc)._field_ExprKind.ptr())) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1ad9bb786_TypeEnum((*(_49728_m))._field_ExprKind) != nullptr)) {
					_1bc00a547_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _5084_i = _1bc0d1057_pushAnyType((*(_self_))._field_oc, (*_49728_m.alloc)._field_ExprKind);;
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_49728_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1c0973de1:;
						{
							jule::Ptr<_1ad9c16ae_Prim> _5125_prim = _1ad9bac4c_Prim((*(_49728_m))._field_ExprKind);;
							if (((_5125_prim != nullptr) && _1ad87c0c5_IsInt((*_5125_prim.alloc)._field_Kind))) {
								_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1bc0de7b3_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5125_prim);
								_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1bc00a547_possibleRefExpr(_self_, (*(*(_49728_m))._field_Expr.alloc)._field_Model);
								_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1c0976124;
							};
							goto _case_begin_1c097618a;
						}
					}
					else {
						_case_begin_1c097618a:;
						{
							_1bc00a547_possibleRefExpr(_self_, (*(*(_49728_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1c0976124:;
				};
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_5084_i));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1bb0a4bdb_IsAny(&((*(_49728_m))._field_ExprKind))) {
			_case_begin_1c09722a7:;
			{
				_1bc00a547_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1ad9baed3_Sptr((*_49728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1ad9baed3_Sptr((*(_49728_m))._field_Kind)))._field_Elem);
				} else {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49728_m.alloc)._field_Kind);
				};
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1dd46d659_Production))) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*_49728_m.alloc)._field_Token));
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_1bc0d1057_pushAnyType((*(_self_))._field_oc, (*_49728_m.alloc)._field_Kind)));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ad9bb269_Ptr((*(_49728_m))._field_ExprKind.ptr()) != nullptr) || (_1ad9bb269_Ptr((*_49728_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c097231d:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49728_m.alloc)._field_Kind);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1bc00a547_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1ad9bc556_Trait((*(_49728_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1c0972384:;
			{
				if ((_1ad9bc556_Trait((*_49728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1bc00a965_castTraitFromTrait(_self_, &(_49728_m), _1ad9bc556_Trait((*(_49728_m))._field_Kind), _1ad9bc556_Trait((*(_49728_m))._field_ExprKind));
					return;;
				};
				_1bc00a547_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1ad9baed3_Sptr((*(_49728_m))._field_Kind) != nullptr)) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1ad9baed3_Sptr((*(_49728_m))._field_Kind)))._field_Elem);
				} else {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49728_m.alloc)._field_Kind);
				};
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1dd46d659_Production))) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*_49728_m.alloc)._field_Token));
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1bc01c702_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ad9bc556_Trait((*(_49728_m))._field_ExprKind));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_1bb0a7abd_FindTraitTypeOffset(_1ad9bc556_Trait((*(_49728_m))._field_ExprKind), (*_49728_m.alloc)._field_Kind)));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1ad9bc556_Trait((*(_49728_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c09723ea:;
			{
				_1bc0e3c90_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49728_m.alloc)._field_Kind);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1bc00a547_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1bc01c702_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ad9bc556_Trait((*(_49728_m))._field_Kind));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_1bb0a7abd_FindTraitTypeOffset(_1ad9bc556_Trait((*(_49728_m))._field_Kind), (*_49728_m.alloc)._field_ExprKind)));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1c0972076:;
	};
	jule::Ptr<_1ad9c16ae_Prim> _5947_prim = _1ad9bac4c_Prim((*(_49728_m))._field_Kind.ptr());;
	if (((_5947_prim != nullptr) && _1ad9c4b79_IsStr(_5947_prim))) {
		jule::Ptr<_1ad9c16ae_Prim> _5968_eprim = _1ad9bac4c_Prim((*_49728_m.alloc)._field_ExprKind.ptr());;
		if (((_5968_eprim != nullptr) && (_5947_prim != nullptr))) {
			if (_1ad9c30d9_IsU8(_5968_eprim)) {
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1bc00a547_possibleRefExpr(_self_, (*((*_49728_m.alloc)._field_Expr))._field_Model);
			_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1ad9c5bad_Slc> _6078_slc = _1ad9bbca3_Slc((*(_49728_m))._field_ExprKind);;
		if ((_6078_slc != nullptr)) {
			_5968_eprim=_1ad9bac4c_Prim((*_6078_slc.alloc)._field_Elem.ptr());
			if (_1ad9c2abc_IsI32(_5968_eprim)) {
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1bc00a547_possibleRefExpr(_self_, (*(*(_49728_m))._field_Expr.alloc)._field_Model);
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_5947_prim=_1ad9bac4c_Prim((*(_49728_m))._field_ExprKind);
	if (((_5947_prim != nullptr) && _1ad9c4b79_IsStr(_5947_prim))) {
		jule::Ptr<_1ad9c5bad_Slc> _6238_slc = _1ad9bbca3_Slc((*(_49728_m))._field_Kind);;
		if ((_6238_slc != nullptr)) {
			_5947_prim=_1ad9bac4c_Prim((*(_6238_slc))._field_Elem);
			if (_1ad9c2abc_IsI32(_5947_prim)) {
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1bc00a547_possibleRefExpr(_self_, (*(*(_49728_m))._field_Expr.alloc)._field_Model);
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49728_m.alloc)._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1bc00a547_possibleRefExpr(_self_, (*(*(_49728_m))._field_Expr.alloc)._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc00aec6_args(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel>* _64426_m) {
	jule::I64 _6457_j = 0LL;;
	if (((((*((*((*(_64426_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_64426_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_64426_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1ad7e6418_IsSelf((*((*((*((*(_64426_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6457_j)++;
	};
	{
		auto expr = &((*((*(_64426_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c09a8a2a:;
		if (it != expr_end) {
			jule::I64 _6507_i = it - expr->begin();
			jule::Any _65010_arg = *it;
			{
				jule::Ptr<_1ad7e96e6_ParamIns> _6514_p = (*(*((*(_64426_m))))._field_Func.alloc)._field_Params[_6457_j];;
				if ((((*(_6514_p))._field_Decl != nullptr) && (*(*(_6514_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _65010_arg };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1c09ab852:;
							{
								jule::Ptr<_1ad933a83_Var> _6556_v = _65010_arg.unsafe_cast_ptr<_1ad933a83_Var>();;
								if ((*(_6556_v))._field_Reference) {
									_1bc0145ea_model(_self_, _65010_arg);
									goto _julec_label_1c09ae39e;
								};
							}
						}
						_match_end_1c09ab7db:;
					};
					_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1bc0145ea_model(_self_, _65010_arg);
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1c09ae39e;
				};
				_1bc00a547_possibleRefExpr(_self_, _65010_arg);
				_julec_label_1c09ae39e:;
				if ((((*((*(_64426_m))))._field_Args.len() - _6507_i) > 1LL)) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_6457_j)++;
			}
			_iter_next_1c09a8a2a:;
			++it;
			_6507_i++;
			goto _iter_begin_1c09a8a2a;
		}
		_iter_end_1c09a8a2a:;
	};
}



inline void _1bc00b27e_modelForCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Any _67533_expr) {
	{
		auto &_match_expr{ _67533_expr };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c09b0405:;
			{
				_1bc00e804_funcIns(_self_, _67533_expr.cast_ptr<_1ad7ea84b_FnIns>(&__jule_any_type63));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c09aa7b8:;
			{
				jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _6818_ssie = _67533_expr.unsafe_cast_ptr<_1ad7dee28_StructSubIdentExprModel>();;
				if (((*(_6818_ssie))._field_Method != nullptr)) {
					_1bc00e804_funcIns(_self_, (*_6818_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1c09b038e:;
	};
	_1bc00a547_possibleRefExpr(_self_, _67533_expr);
}



inline void _1bc00b537_pushCallInf(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel>* _69029_m) {
	if ((_1dd46d659_Production || (!((*((*((*(_69029_m))))._field_Func))._field_Anon)))) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_69029_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_69029_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1c09b3ea8:;
				{
					if ((*((*((*((*((*((*(_69029_m))))._field_Expr.unsafe_cast_ptr<_1ad7dee28_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1c09b3e42:;
		};
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*((*(_69029_m))))._field_Token));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_69029_m))))._field_Args.len() != 0LL)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1bc00b878_isWrapped(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel>* _71331_m) {
	if ((((!(_1ad7ebd14_IsBuiltin((*((*(_71331_m))))._field_Func.ptr()))) && ((*((*(*((*(_71331_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1ad7e6418_IsSelf((*((*((*((*(_71331_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_71331_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1c09b8c6b:;
				{
					jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _7179_ssie = (*((*(_71331_m))))._field_Expr.unsafe_cast_ptr<_1ad7dee28_StructSubIdentExprModel>();;
					{
						
						if (_1ad7e669e_IsRef((*((*((*((*(_71331_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1ad9baed3_Sptr((*((*(_7179_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1c09baa1a:;
							{
								goto _match_end_1c09b9bc3;
							}
						}
						else {
							_case_begin_1c09b9c4a:;
							{
								if ((_1ad9bc2c0_Struct((*((*(_7179_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*(_7179_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1bc0145ea_model(_self_, (*(*(_7179_ssie))._field_Expr.alloc)._field_Model);
										_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1c09b9bc3:;
					};
				}
			}
			_match_end_1c09b8c05:;
		};
	};
	return false;;
}



inline jule::Bool _1bc00bbb9_writeReceiver(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Any _73734_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _73734_m };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c09c0547:;
			{
				_1bc00a547_possibleRefExpr(_self_, (*((*(_73734_m.unsafe_cast_ptr<_1ad7da781_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1c09c0756:;
			{
				_1bc00a547_possibleRefExpr(_self_, (*((*((*(_73734_m.unsafe_cast_ptr<_1bbd97b54_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c09c06e0:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:746:4"));;
			}
		}
		_match_end_1c09c0679:;
	};
}



inline void _1bc00be72_pureFuncCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel>* _75034_m) {
	jule::Bool _7513_wrapped = _1bc00b878_isWrapped(_self_, _75034_m);;
	_1bc00b27e_modelForCall(_self_, (*((*(_75034_m))))._field_Expr);
	if ((!(_1ad7ebd14_IsBuiltin((*((*(_75034_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_75034_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_75034_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1bb0a6c10_HasDirective(&((*(*((*((*(_75034_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_75034_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c09c4a9b:;
					if (it != expr_end) {
						jule::I64 _75711_i = it - expr->begin();
						jule::Ptr<_1ad9b6de1_InsGeneric> _75718_g = *it;
						{
							_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_75718_g))._field_Kind);
							if ((((*(*((*(_75034_m))))._field_Func.alloc)._field_Generics.len() - _75711_i) > 1LL)) {
								_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1c09c4a9b:;
						++it;
						_75711_i++;
						goto _iter_begin_1c09c4a9b;
					}
					_iter_end_1c09c4a9b:;
				};
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1bc00b537_pushCallInf(_self_, _75034_m);
	if (((*(*((*(_75034_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_75034_m))))._field_Func.alloc)._field_Anon)))) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_75034_m))))._field_Args.len() > 0LL)) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1ad7ebd14_IsBuiltin((*((*(_75034_m))))._field_Func))) && ((*(*((*((*(_75034_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1ad7e6418_IsSelf((*((*((*((*(_75034_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_75034_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1c09cb7a6:;
				{
					jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _7819_ssie = (*((*(_75034_m))))._field_Expr.unsafe_cast_ptr<_1ad7dee28_StructSubIdentExprModel>();;
					{
						
						if (_1ad7e669e_IsRef((*((*((*((*(_75034_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1c09d0a41:;
							{
								_1bc00bbb9_writeReceiver(_self_, (*((*(_7819_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1ad9baed3_Sptr((*((*(_7819_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1c09d20d6:;
							{
								jule::Bool _7886_safe = _1bc00bbb9_writeReceiver(_self_, (*(*(_7819_ssie))._field_Expr.alloc)._field_Model);;
								if (_7886_safe) {
									_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_1dd46d659_Production))) {
										_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*((*(_75034_m))))._field_Token));
										_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1c09cc80c:;
							{
								if ((_1ad9bc2c0_Struct((*((*(_7819_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_7819_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type7) {
											_case_begin_1c09cd159:;
											{
												jule::Ptr<_1ad933a83_Var> _8028_v = (*((*(_7819_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1ad933a83_Var>();;
												if ((*(_8028_v))._field_Reference) {
													goto _match_end_1c09cd632;
												};
												goto _case_begin_1c09cd698;
											}
										}
										else {
											_case_begin_1c09cd698:;
											{
												_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1c09cd632:;
									};
								};
								if (_7513_wrapped) {
									_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1ad9bb269_Ptr((*((*(_7819_ssie))._field_Expr))._field_Kind) == nullptr)) {
									_1bc0145ea_model(_self_, (*(*(_7819_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1bc00a547_possibleRefExpr(_self_, (*((*((*(*(_7819_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1ad7da781_UnaryExprModel>(&__jule_any_type112)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1c09cc785:;
					};
					if (((*((*(_75034_m))))._field_Args.len() > 0LL)) {
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1c09cb443:;
				{
					_1bc00a547_possibleRefExpr(_self_, (*((*((*(_75034_m))))._field_Expr.unsafe_cast_ptr<_1ad7de587_TraitSubIdentExprModel>()))._field_Expr);
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_75034_m))))._field_Args.len() > 0LL)) {
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1c09cb72e:;
		};
	};
	_1bc00aec6_args(_self_, _75034_m);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_7513_wrapped) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1bc00c22a_coFuncCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel>* _84032_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _8477_i = jule::Str();;
	if ((((*((*((*(_84032_m))))._field_Func))._field_Params.len() > 0LL) || (*(*((*(_84032_m))))._field_Func.alloc)._field_AsAnon)) {
		_8477_i=_1ab15d6ab_Itoa(_1bc0d0584_pushCoSpawn((*(_self_))._field_oc, (*((*(_84032_m))))._field_Func));
		jule::Str _8504_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _8477_i);;
		_1bc0ce550_write((*(_self_))._field_oc, _8504_t);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_1bc0ce550_write((*(_self_))._field_oc, _8504_t);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_1bc0cee02_indent((*(_self_))._field_oc);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_1bc00b27e_modelForCall(_self_, (*((*(_84032_m))))._field_Expr);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*(*((*(_84032_m))))._field_Func.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c09e7c56:;
			if (it != expr_end) {
				jule::I64 _8728_j = it - expr->begin();
				{
					_1bc0cee02_indent((*(_self_))._field_oc);
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_8728_j));
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1bc00a547_possibleRefExpr(_self_, (*((*(_84032_m))))._field_Args[_8728_j]);
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1c09e7c56:;
				++it;
				_8728_j++;
				goto _iter_begin_1c09e7c56;
			}
			_iter_end_1c09e7c56:;
		};
		_1bc0cee02_indent((*(_self_))._field_oc);
	};
	if (!(_8477_i).empty()) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_8477_i).empty()) {
		static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_84032_m))))._field_Func));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _8477_i));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_8477_i).empty()) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_8477_i).empty()) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bc00c58d_writeUseExpr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _91834_f, jule::Ptr<_1ad985b90_Data> _91855_d) {
	if ((_1ad9bca73_Tup((*(_91855_d))._field_Kind.ptr()) == nullptr)) {
		_1bc00a547_possibleRefExpr(_self_, (*_91855_d.alloc)._field_Model);
		_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1ad7e0995_TupleExprModel> _9247_tup = (*_91855_d.alloc)._field_Model.cast_ptr<_1ad7e0995_TupleExprModel>(&__jule_any_type83);;
	_1bc0e8569_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1ad9bca73_Tup((*((*(_91834_f))))._field_Result.ptr()));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_9247_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a099d2:;
		if (it != expr_end) {
			jule::I64 _9277_i = it - expr->begin();
			jule::Ptr<_1ad985b90_Data> _92710_data = *it;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_9277_i));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1bc00a547_possibleRefExpr(_self_, (*(_92710_data))._field_Model);
				if ((((*(_9247_tup))._field_Datas.len() - _9277_i) > 1LL)) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c0a099d2:;
			++it;
			_9277_i++;
			goto _iter_begin_1c0a099d2;
		}
		_iter_end_1c0a099d2:;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1bc00c846_funcCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc387_FnCallExprModel> _93929_m) {
	if ((*(_93929_m))._field_IsCo) {
		_1bc00c22a_coFuncCall(_self_, &(_93929_m));
		return;;
	};
	if (((_1ad7ebd14_IsBuiltin((*_93929_m.alloc)._field_Func.ptr()) || (!((*((*(*(_93929_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_93929_m.alloc)._field_Except != nullptr) && ((*(*(_93929_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1bc00be72_pureFuncCall(_self_, &(_93929_m));
		return;;
	};
	_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1bc00be72_pureFuncCall(_self_, &(_93929_m));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bc0cee02_indent((*(_self_))._field_oc);
	if (((*_93929_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_93929_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_93929_m.alloc)._field_Assigned)))) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1bc002374_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_93929_m.alloc)._field_Except);
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9675_forwarded = _1bb0a4746_IsForwarded(&((*_93929_m.alloc)._field_Except));;
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9675_forwarded) {
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9729_stmt = (*(*(_93929_m))._field_Except.alloc)._field_Stmts[((*(*(_93929_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9729_stmt };
				
				if (_match_expr.type == &__jule_any_type21) {
					_case_begin_1c0a16dc9:;
					{
						((*((*(_93929_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_93929_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1bc0cea06_addIndent((*(_self_))._field_oc);
						_1bc0020bb_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_93929_m.alloc)._field_Except));
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1bc0cee02_indent((*(_self_))._field_oc);
						_1bc00c58d_writeUseExpr(_self_, &((*_93929_m.alloc)._field_Func), _9729_stmt.cast_ptr<_1ad985b90_Data>(&__jule_any_type21));
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1bc0cec04_doneIndent((*(_self_))._field_oc);
						_1bc0cee02_indent((*(_self_))._field_oc);
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1c0a1833c:;
					{
						_1bc002374_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_93929_m.alloc)._field_Except);
					}
				}
				_match_end_1c0a182c6:;
			};
			if (_9675_forwarded) {
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1bc0157b6_initExpr(_self_, (*(*(_93929_m))._field_Func.alloc)._field_Result);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1bc0cec04_doneIndent((*(_self_))._field_oc);
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*_93929_m.alloc)._field_Token));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1ad7e7c44_IsVoid((*((*(_93929_m))._field_Func))._field_Decl)))) {
			_1bc0cee02_indent((*(_self_))._field_oc);
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1bc0cec04_doneIndent((*(_self_))._field_oc);
	};
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bc00caee_slice(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dc761_SliceExprModel> _101226_m) {
	if (((*(_101226_m))._field_Elems.len() == 0LL)) {
		_1bc0e1199_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_101226_m.alloc)._field_ElemKind);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1bc0e1199_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_101226_m.alloc)._field_ElemKind);
	jule::Str _10203_size = _1ab15d6ab_Itoa((*_101226_m.alloc)._field_Elems.len());;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1bc0ce550_write((*(_self_))._field_oc, _10203_size);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bc0ce550_write((*(_self_))._field_oc, _10203_size);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_101226_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a2c2c9:;
		if (it != expr_end) {
			jule::I64 _10307_i = it - expr->begin();
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1bc00a547_possibleRefExpr(_self_, (*(_101226_m))._field_Elems[_10307_i]);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1c0a2c2c9:;
			++it;
			_10307_i++;
			goto _iter_begin_1c0a2c2c9;
		}
		_iter_end_1c0a2c2c9:;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1bc00cda7_indexing(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dcc17_IndexingExprModel> _104129_m) {
	{
		auto &_match_expr{ (*((*(_104129_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0a31157:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1dd46d659_Production))) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*(_104129_m))._field_Token));
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10524_s = _1ad7d0bc7_ReadStr((*((*(_104129_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1ad778ec2_Const>().ptr());;
				_1bc016575_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10524_s);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_10524_s.len()));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bc00a547_possibleRefExpr(_self_, (*((*_104129_m.alloc)._field_Index))._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1c0a310e1:;
	};
	{
		
		if ((_1ad9bc7dc_Map((*((*_104129_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c0a39db9:;
			{
				jule::Ptr<_1ad9c7352_Map> _10658__map = _1ad9bc7dc_Map((*((*(_104129_m))._field_Expr))._field_Kind);;
				jule::Ptr<_1ad7159ec_Struct> _10668_s = _1adaad23a_RuntimeFindStruct(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1ad718857_StructIns> _10678_ins = _1bb0a8805_FindStructGenericInstance(&(_10668_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_10658__map))._field_Key; (*it++) = (*_10658__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1ad7ea84b_FnIns> _10698_f = (*(_1ad719902_FindMethod(_10678_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_10698_f));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1bc00a547_possibleRefExpr(_self_, (*(*(_104129_m))._field_Expr.alloc)._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bc00a547_possibleRefExpr(_self_, (*(*(_104129_m))._field_Index.alloc)._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_1dd46d659_Production || (_1ad9bb269_Ptr((*((*_104129_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr) || _1bb0a4922_IsExprComesFromBind(&((*_104129_m.alloc)._field_Expr))) {
			_case_begin_1c0a37504:;
			{
				_1bc00a547_possibleRefExpr(_self_, (*(*(_104129_m))._field_Expr.alloc)._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1bc00a547_possibleRefExpr(_self_, (*(*(_104129_m))._field_Index.alloc)._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1c0a373e4:;
			{
				_1bc00a547_possibleRefExpr(_self_, (*((*_104129_m.alloc)._field_Expr))._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*_104129_m.alloc)._field_Token));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1bc00a547_possibleRefExpr(_self_, (*(*(_104129_m))._field_Index.alloc)._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1c0a3491e:;
	};
}



inline void _1bc00d160_unsafeIndexing(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd96bca_UnsafeIndexingExprModel> _109335_m) {
	_1bc00a547_possibleRefExpr(_self_, (*((*((*(_109335_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1dd46d659_Production || (_1ad9bb269_Ptr((*(*((*(_109335_m))._field_Node))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1ad9bc7dc_Map((*((*((*(_109335_m))._field_Node))._field_Expr))._field_Kind) != nullptr)) {
			_case_begin_1c0a4648b:;
			{
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1bc00a547_possibleRefExpr(_self_, (*((*(*(_109335_m))._field_Node.alloc)._field_Index))._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1c0a43ee4:;
			{
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1bc00a547_possibleRefExpr(_self_, (*((*(*(_109335_m))._field_Node.alloc)._field_Index))._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1c0a44a94:;
	};
}



inline void _1bc00d418_anonFunc(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel> _111029_m) {
	jule::Bool _11113_closure = _1bb0a502c_IsClosure(&(_111029_m));;
	jule::Str _11123_ident = _1bc0d0c16_pushAnonFn((*(_self_))._field_oc, &(_111029_m));;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1bc0e35b9_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_111029_m))._field_Func);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1bc0ce550_write((*(_self_))._field_oc, _11123_ident);
	if (_11113_closure) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1bc0ce550_write((*(_self_))._field_oc, _11123_ident);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1bc0ce550_write((*(_self_))._field_oc, _11123_ident);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_111029_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0a4ab88:;
			if (it != expr_end) {
				jule::I64 _11249_i = it - expr->begin();
				jule::Ptr<_1ad933a83_Var> _112416_v = *it;
				{
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1bc01d68c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _112416_v);
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1bc0096bc_var(_self_, _112416_v);
					if ((((*_111029_m.alloc)._field_Captured.len() - _11249_i) > 1LL)) {
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1c0a4ab88:;
				++it;
				_11249_i++;
				goto _iter_begin_1c0a4ab88;
			}
			_iter_end_1c0a4ab88:;
		};
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1bc0ce550_write((*(_self_))._field_oc, _11123_ident);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1bc00d6c1_mapExpr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dd971_MapExprModel> _114128_m) {
	jule::Ptr<_1ad7159ec_Struct> _11427_s = _1adaad23a_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1ad718857_StructIns> _11437_ins = _1bb0a8805_FindStructGenericInstance(&(_11427_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_114128_m))._field_Kind))._field_Key; (*it++) = (*(*(_114128_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1ad7ea84b_FnIns> _11457_maker = (*(_1ad719902_FindMethod(_11437_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_114128_m.alloc)._field_Entries.len() == 0LL)) {
		static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11457_maker));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _11527_f = (*(_1ad719902_FindMethod(_11437_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1bc0e1870_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_114128_m.alloc)._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11457_maker));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_114128_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a6282b:;
		if (it != expr_end) {
			jule::Ptr<_1ad7dd597_KeyValPairExprModel> _116215_pair = *it;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11527_f));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bc00a547_possibleRefExpr(_self_, (*(_116215_pair))._field_Key);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1bc00a547_possibleRefExpr(_self_, (*_116215_pair.alloc)._field_Val);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1c0a6282b:;
			++it;
			goto _iter_begin_1c0a6282b;
		}
		_iter_end_1c0a6282b:;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1bc00d979_slicing(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7de004_SlicingExprModel> _117728_m) {
	_1bc00a547_possibleRefExpr(_self_, (*(_117728_m))._field_Expr);
	_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1dd46d659_Production))) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*_117728_m.alloc)._field_Token));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1bc00a547_possibleRefExpr(_self_, (*_117728_m.alloc)._field_Left);
	if (((*_117728_m.alloc)._field_Right != nullptr)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bc00a547_possibleRefExpr(_self_, (*_117728_m.alloc)._field_Right);
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc00dc32_traitSub(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7de587_TraitSubIdentExprModel> _119329_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1bc01c702_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_119329_m))._field_Trt);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1bc00a547_possibleRefExpr(_self_, (*_119329_m.alloc)._field_Expr);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_1dd46d659_Production))) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*_119329_m.alloc)._field_Token));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1bc01c12a_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_119329_m.alloc)._field_Method));
}



inline void _1bc00deda_structureSub(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _120933_m) {
	_1bc00a547_possibleRefExpr(_self_, (*((*(_120933_m))._field_Expr))._field_Model);
	if (((*_120933_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1bc01d3a1_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_120933_m.alloc)._field_Field))._field_Decl));
}



inline void _1bc00e293_array(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e0698_ArrayExprModel> _121826_m) {
	if ((((*((*(_121826_m))._field_Kind))._field_N == 0LL) || (((*_121826_m.alloc)._field_Elems.len() == 0LL) && (!(_1bc0eab43_ableToInit(&((*(*(_121826_m))._field_Kind.alloc)._field_Elem))))))) {
		_1bc0e23a9_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_121826_m.alloc)._field_Kind);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_121826_m.alloc)._field_Elems.len() == 2LL) && ((*(_121826_m))._field_Elems[1LL] == nullptr))) {
		_1bc0e23a9_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_121826_m.alloc)._field_Kind);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bc00a547_possibleRefExpr(_self_, (*(_121826_m))._field_Elems[0LL]);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1bc0e23a9_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_121826_m.alloc)._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_121826_m.alloc)._field_Elems.len() != (*(*(_121826_m))._field_Kind.alloc)._field_N)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_121826_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a7d58e:;
		if (it != expr_end) {
			jule::I64 _12517_i = it - expr->begin();
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1bc00a547_possibleRefExpr(_self_, (*_121826_m.alloc)._field_Elems[_12517_i]);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1c0a7d58e:;
			++it;
			_12517_i++;
			goto _iter_begin_1c0a7d58e;
		}
		_iter_end_1c0a7d58e:;
	};
	if ((((*_121826_m.alloc)._field_Elems.len() != (*(*(_121826_m))._field_Kind.alloc)._field_N) && _1bc0eab43_ableToInit(&((*(*(_121826_m))._field_Kind.alloc)._field_Elem)))) {
		_1bc014e9c_fillCollectionByDefault(_self_, &((*(*(_121826_m))._field_Kind.alloc)._field_Elem));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1bc00e54b_funcInsCommon(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _126834_m) {
	_1bc0e392c_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _126834_m);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bc00e804_funcIns(_self_, _126834_m);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc00e804_funcIns(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _127528_m) {
	if ((((*(_127528_m))._field_Decl != nullptr) && (*(*(_127528_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1ad6e45d0_Directive> _12774_d = _1bb0a6847_FindDirective(&((*(*(_127528_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_12774_d != nullptr)) {
			_1bc0ce808_writeBytes((*(_self_))._field_oc, _1bc0db67d_concatAllParts((*_12774_d.alloc)._field_Args));
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_127528_m));
}



inline void _1bc00eaac_tuple(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e0995_TupleExprModel> _128626_m) {
	{
		auto expr = &((*_128626_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a8acc7:;
		if (it != expr_end) {
			jule::I64 _12878_i = it - expr->begin();
			jule::Ptr<_1ad985b90_Data> _128715_d = *it;
			{
				_1bc00a547_possibleRefExpr(_self_, (*(_128715_d))._field_Model);
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_128626_m))._field_Datas.len() - _12878_i) > 1LL)) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1bc0cee02_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1c0a8acc7:;
			++it;
			_12878_i++;
			goto _iter_begin_1c0a8acc7;
		}
		_iter_end_1c0a8acc7:;
	};
}



inline void _1bc00ed65_newCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e1622_BuiltinNewCallExprModel> _129728_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_129728_m))._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_129728_m.alloc)._field_Init != nullptr)) {
		_1bc00a547_possibleRefExpr(_self_, (*_129728_m.alloc)._field_Init);
	} else if (_1bc0eab43_ableToInit(&((*_129728_m.alloc)._field_Kind))) {
		_1bc0157b6_initExpr(_self_, (*_129728_m.alloc)._field_Kind);
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc01011d_outCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e0d6e_BuiltinOutCallExprModel> _130928_m) {
	if (((*(_130928_m))._field_Debug && _1dd46d659_Production)) {
		return;;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	jule::Ptr<_1ad7e778d_Fn> _13147_decl = _1adaacb41_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1ad7ea84b_FnIns> _13157_f = _1bb0a8371_FindFnGenericInstance(&(_13147_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_130928_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13157_f));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bc00a547_possibleRefExpr(_self_, (*(*(_130928_m))._field_Expr.alloc)._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1bc0103c6_outlnCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e1248_BuiltinOutlnCallExprModel> _132230_m) {
	if (((*(_132230_m))._field_Debug && _1dd46d659_Production)) {
		return;;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	jule::Ptr<_1ad7e778d_Fn> _13277_decl = _1adaacb41_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1ad7ea84b_FnIns> _13287_f = _1bb0a8371_FindFnGenericInstance(&(_13277_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_132230_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13287_f));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bc00a547_possibleRefExpr(_self_, (*(*(_132230_m))._field_Expr.alloc)._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1bc01067e_panicCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e19eb_BuiltinPanicCallExprModel> _133530_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1bc00a547_possibleRefExpr(_self_, (*(_133530_m))._field_Expr);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1bc0d1bd4_locInfo((*(_self_))._field_oc, &((*_133530_m.alloc)._field_Token));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1bc010937_errorCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e3602_BuiltinErrorCallExprModel> _134330_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1ad7e7c44_IsVoid((*((*(_134330_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_134330_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c0a9e082:;
				{
					jule::Ptr<_1ad933a83_Var> _13485_v = (*((*(_134330_m))._field_Err))._field_Model.unsafe_cast_ptr<_1ad933a83_Var>();;
					if (((*(_13485_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1c0a9e01b:;
		};
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1bc0e8c40_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_134330_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_134330_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c0aa35c5:;
				{
					jule::Ptr<_1ad933a83_Var> _13605_v = (*((*(_134330_m))._field_Err))._field_Model.unsafe_cast_ptr<_1ad933a83_Var>();;
					if (((*(_13605_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1c0aa355e:;
		};
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1bc00a547_possibleRefExpr(_self_, (*((*(_134330_m))._field_Err))._field_Model);
	jule::I64 _13693_i = _1bc0d1057_pushAnyType((*(_self_))._field_oc, (*(*(_134330_m))._field_Err.alloc)._field_Kind);;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_13693_i));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1bc010be0_copyCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e3228_BuiltinCopyCallExprModel> _137529_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1bc00a547_possibleRefExpr(_self_, (*((*(_137529_m))._field_Dest))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bc00a547_possibleRefExpr(_self_, (*((*_137529_m.alloc)._field_Src))._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc010e98_lenCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e2678_BuiltinLenCallExprModel> _138328_m) {
	jule::Ptr<_1ad9c7352_Map> _13847__map = _1ad9bc7dc_Map((*((*(_138328_m))._field_Expr))._field_Kind.ptr());;
	if ((_13847__map != nullptr)) {
		jule::Ptr<_1ad7159ec_Struct> _13868_s = _1adaad23a_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		jule::Ptr<_1ad718857_StructIns> _13878_ins = _1bb0a8805_FindStructGenericInstance(&(_13868_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_13847__map.alloc)._field_Key; (*it++) = (*_13847__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1ad7ea84b_FnIns> _13898_f = (*(_1ad719902_FindMethod(_13878_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13898_f));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bc00a547_possibleRefExpr(_self_, (*(*(_138328_m))._field_Expr.alloc)._field_Model);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1bc00a547_possibleRefExpr(_self_, (*(*(_138328_m))._field_Expr.alloc)._field_Model);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1bc011251_capCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e2975_BuiltinCapCallExprModel> _140028_m) {
	_1bc00a547_possibleRefExpr(_self_, (*((*(_140028_m))._field_Expr))._field_Model);
	_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1bc011509_deleteCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e2d4e_BuiltinDeleteCallExprModel> _140531_m) {
	jule::Ptr<_1ad9c7352_Map> _14067__map = _1ad9bc7dc_Map((*((*(_140531_m))._field_Dest))._field_Kind.ptr());;
	if ((_14067__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1408:4"));;
	};
	jule::Ptr<_1ad7159ec_Struct> _14107_s = _1adaad23a_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1ad718857_StructIns> _14117_ins = _1bb0a8805_FindStructGenericInstance(&(_14107_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14067__map))._field_Key; (*it++) = (*(_14067__map))._field_Val; __jule_collection; }));;
	;
	if (((*_140531_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1ad7ea84b_FnIns> _14148_f = (*(_1ad719902_FindMethod(_14117_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14148_f));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bc00a547_possibleRefExpr(_self_, (*(*(_140531_m))._field_Dest.alloc)._field_Model);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bc00a547_possibleRefExpr(_self_, (*(*(_140531_m))._field_Key.alloc)._field_Model);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1ad7ea84b_FnIns> _14228_f = (*(_1ad719902_FindMethod(_14117_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14228_f));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bc00a547_possibleRefExpr(_self_, (*(*(_140531_m))._field_Dest.alloc)._field_Model);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1bc0117b2_makeCallSlice(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e1ea2_BuiltinMakeCallExprModel>* _143035_m) {
	jule::Ptr<_1ad9c5bad_Slc> _14317_slice = _1ad9bbca3_Slc((*((*(_143035_m))))._field_Kind.ptr());;
	jule::Bool _14323_init = _1bc0eab43_ableToInit(&((*(_14317_slice))._field_Elem));;
	if (_14323_init) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_143035_m))))._field_Kind);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1bc00a547_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Len);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_143035_m))))._field_Cap != nullptr)) {
		_1bc00a547_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Cap);
	} else {
		_1bc00a547_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Len);
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14323_init))) {
		return;;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1bc015255_initCollection(_self_, &((*_14317_slice.alloc)._field_Elem));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1bc011a6a_makeCallStr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e1ea2_BuiltinMakeCallExprModel>* _145433_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1bc00a547_possibleRefExpr(_self_, (*((*(_145433_m))))._field_Len);
	if (((*((*(_145433_m))))._field_Cap != nullptr)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bc00a547_possibleRefExpr(_self_, (*((*(_145433_m))))._field_Cap);
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc011d23_makeCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e1ea2_BuiltinMakeCallExprModel> _146529_m) {
	if ((_1ad9bbca3_Slc((*(_146529_m))._field_Kind.ptr()) != nullptr)) {
		_1bc0117b2_makeCallSlice(_self_, &(_146529_m));
		return;;
	};
	_1bc011a6a_makeCallStr(_self_, &(_146529_m));
}



inline void _1bc0120cb_pushToSlice(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd970a4_PushToSliceExprModel> _147332_m) {
	;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1bc0e1199_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_147332_m))._field_Elems))._field_ElemKind);
	jule::Bool _14817_ptr = false;;
	{
		auto &_match_expr{ (*(_147332_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c0acb521:;
			{
				jule::Ptr<_1ad7da781_UnaryExprModel> _14858_u = (*(_147332_m))._field_Dest.unsafe_cast_ptr<_1ad7da781_UnaryExprModel>();;
				if ((_1ad9bb269_Ptr((*((*(_14858_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1bc00a547_possibleRefExpr(_self_, (*(*(_14858_u))._field_Expr.alloc)._field_Model);
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14817_ptr=true;
					goto _match_end_1c0aca014;
				};
				goto _case_begin_1c0aca07a;
			}
		}
		else {
			_case_begin_1c0aca07a:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1bc00a547_possibleRefExpr(_self_, (*_147332_m.alloc)._field_Dest);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1c0aca014:;
	};
	if (((*(*(_147332_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14817_ptr) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1bc00a547_possibleRefExpr(_self_, (*((*(_147332_m))._field_Elems))._field_Elems[0LL]);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14817_ptr) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa((*(*(_147332_m))._field_Elems.alloc)._field_Elems.len()));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_147332_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ad399b:;
		if (it != expr_end) {
			jule::Any _151915_e = *it;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14817_ptr) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1bc00a547_possibleRefExpr(_self_, _151915_e);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1c0ad399b:;
			++it;
			goto _iter_begin_1c0ad399b;
		}
		_iter_end_1c0ad399b:;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bc012384_appendToSlice(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd9747d_AppendToSliceExprModel> _153334_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bc00a547_possibleRefExpr(_self_, (*(_153334_m))._field_Dest);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1bc00a547_possibleRefExpr(_self_, (*_153334_m.alloc)._field_Slice);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1bc01263c_appendCall(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e237b_BuiltinAppendCallExprModel> _154131_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1bc00a547_possibleRefExpr(_self_, (*(_154131_m))._field_Dest);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1bc00a547_possibleRefExpr(_self_, (*_154131_m.alloc)._field_Elements);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc0128e5_sizeof(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e38ee_SizeofExprModel> _154927_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1bc00a547_possibleRefExpr(_self_, (*(_154927_m))._field_Expr);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc012b9d_alignof(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e40a3_AlignofExprModel> _155528_m) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1bc00a547_possibleRefExpr(_self_, (*(_155528_m))._field_Expr);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bc012e56_runeLit(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e4290_RuneExprModel> _156124_m) {
	if (((*(_156124_m))._field_Code <= 127LL)) {
		_1dd0c118b_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _15648_b = _1bc015e59_sbtoa(static_cast<jule::U8>((*_156124_m.alloc)._field_Code));;
		if (_15648_b.equal("'", 1)) {
			_1dd0c118b_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
		};
		_1dd0c0dd3_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15648_b);
		_1dd0c118b_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1bc016c07_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_156124_m.alloc)._field_Code));
}



inline void _1bc01320e_structureStatic(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e02be_StructStaticIdentExprModel> _157536_m) {
	static__1bc01c416_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_157536_m))._field_Method));
}



inline void _1bc0134b7_backendEmit(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e4614_BackendEmitExprModel> _157932_m) {
	if (((*(_157932_m))._field_Exprs.len() == 0LL)) {
		_1bc0ce550_write((*(_self_))._field_oc, (*_157932_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _15843_n = _1dd0c1b5e_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _15857_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_157932_m.alloc)._field_Exprs.len(), (*_157932_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_157932_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ae3bdc:;
		if (it != expr_end) {
			jule::I64 _15868_i = it - expr->begin();
			jule::Any _158615_expr = *it;
			{
				_1bc00a547_possibleRefExpr(_self_, _158615_expr);
				jule::Slice<jule::U8> _15888_buf = _1dd0c217b_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15857_args[_15868_i]=jule::Any(__jule_bytesToStr(_15888_buf.slice(_15843_n)), &__jule_any_type5);
				{
					_1dd0c2434_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15888_buf.slice(0LL, _15843_n));
				};
			}
			_iter_next_1c0ae3bdc:;
			++it;
			_15868_i++;
			goto _iter_begin_1c0ae3bdc;
		}
		_iter_end_1c0ae3bdc:;
	};
	_1bc0ce550_write((*(_self_))._field_oc, _1ada9c9dd_Format((*_157932_m.alloc)._field_Code, _15857_args));
}



inline void _1bc013770_free(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad7e4911_FreeExprModel> _159525_m) {
	_1bc00a547_possibleRefExpr(_self_, (*(_159525_m))._field_Expr);
	if (_1dd46d04e_RC) {
		_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1bc013a28_strComp(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd95eb5_StrCompExprModel> _160428_m) {
	if ((*(_160428_m))._field_NotEq) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16083_s = _1ad7d0bc7_ReadStr((*_160428_m.alloc)._field_Right.ptr());;
	_1bc00a547_possibleRefExpr(_self_, (*_160428_m.alloc)._field_Left);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1bc016575_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16083_s);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_16083_s.len()));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_160428_m.alloc)._field_NotEq) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1bc013cd1_emptyCompare(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd956bd_EmptyCompareExprModel> _162033_m) {
	if ((*(_162033_m))._field_Neg) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bc00a547_possibleRefExpr(_self_, (*_162033_m.alloc)._field_Expr);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1bc014089_unsafeDeref(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd97b54_UnsafeDerefExprModel> _162932_m) {
	{
		
		if ((_1ad9baed3_Sptr((*((*((*(_162932_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1c0b02745:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1bc00a547_possibleRefExpr(_self_, (*(*((*(_162932_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1c0b0237c:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1636:4"));;
			}
		}
		_match_end_1c0b0226c:;
	};
}



inline void _1bc014342_unsafeCasting(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1bbd97e51_UnsafeCastingExprModel> _164034_m) {
	{
		
		if (_1bb0a4bdb_IsAny(&((*((*(_164034_m))._field_Base))._field_ExprKind))) {
			_case_begin_1c0b05429:;
			{
				_1bc00a547_possibleRefExpr(_self_, (*((*(*(_164034_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1ad9baed3_Sptr((*(*(_164034_m))._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1ad9baed3_Sptr((*((*(_164034_m))._field_Base))._field_Kind)))._field_Elem);
				} else {
					_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1bc0e3c90_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_164034_m))._field_Base.alloc)._field_Kind);
				};
				_1bc0ce550_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1c0b05061:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1653:4"));;
			}
		}
		_match_end_1c0b04e73:;
	};
}



inline void _1bc0145ea_model(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Any _165726_m) {
	{
		auto &_match_expr{ _165726_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c0b05c98:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, _165726_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1c0b0acd1:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, (*(_165726_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c0b0ad47:;
			{
				_1bc0e3c90_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _165726_m.cast_ptr<_1ad9b8596_TypeKind>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0b0adad:;
			{
				_1bc007698_constant(_self_, _165726_m.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c0b0ae24:;
			{
				_1bc0096bc_var(_self_, _165726_m.cast_ptr<_1ad933a83_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c0b0ae8a:;
			{
				_1bc009975_structureIns(_self_, _165726_m.cast_ptr<_1ad718857_StructIns>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c0b0b001:;
			{
				_1bc00e54b_funcInsCommon(_self_, _165726_m.cast_ptr<_1ad7ea84b_FnIns>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1c0b0bb5b:;
			{
				_1bc008985_unsafeBinary(_self_, (*(_165726_m.unsafe_cast_ptr<_1bbd96845_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c0b0bbc2:;
			{
				_1bc009414_binary(_self_, _165726_m.cast_ptr<_1ad7da3a7_BinaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c0b0bc38:;
			{
				_1bc009c2d_unary(_self_, _165726_m.cast_ptr<_1ad7da781_UnaryExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c0b0bc9e:;
			{
				_1bc009ed6_structureLit(_self_, _165726_m.cast_ptr<_1ad7db155_StructLitExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c0b0bd15:;
			{
				_1bc00a28e_allocStructure(_self_, _165726_m.cast_ptr<_1ad7db452_AllocStructLitExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c0b0bd7b:;
			{
				_1bc00ac1d_casting(_self_, _165726_m.cast_ptr<_1ad7db9d5_CastingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c0b0bde2:;
			{
				_1bc00c846_funcCall(_self_, _165726_m.cast_ptr<_1ad7dc387_FnCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c0b0be58:;
			{
				_1bc00caee_slice(_self_, _165726_m.cast_ptr<_1ad7dc761_SliceExprModel>(&__jule_any_type79));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c0b0bed0:;
			{
				_1bc00e293_array(_self_, _165726_m.cast_ptr<_1ad7e0698_ArrayExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1c0b0c057:;
			{
				_1bc00d160_unsafeIndexing(_self_, _165726_m.cast_ptr<_1bbd96bca_UnsafeIndexingExprModel>(&__jule_any_type134));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c0b0c0ce:;
			{
				_1bc00cda7_indexing(_self_, _165726_m.cast_ptr<_1ad7dcc17_IndexingExprModel>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c0b0c156:;
			{
				_1bc00d418_anonFunc(_self_, _165726_m.cast_ptr<_1ad7dd1bd_AnonFnExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c0b0c1cd:;
			{
				_1bc00d6c1_mapExpr(_self_, _165726_m.cast_ptr<_1ad7dd971_MapExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c0b0c255:;
			{
				_1bc00d979_slicing(_self_, _165726_m.cast_ptr<_1ad7de004_SlicingExprModel>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c0b0c2cc:;
			{
				_1bc00dc32_traitSub(_self_, _165726_m.cast_ptr<_1ad7de587_TraitSubIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c0b0c354:;
			{
				_1bc00deda_structureSub(_self_, _165726_m.cast_ptr<_1ad7dee28_StructSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c0b0c3cb:;
			{
				_1bc00eaac_tuple(_self_, _165726_m.cast_ptr<_1ad7e0995_TupleExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c0b0c453:;
			{
				_1bc01011d_outCall(_self_, _165726_m.cast_ptr<_1ad7e0d6e_BuiltinOutCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c0b0c4ca:;
			{
				_1bc0103c6_outlnCall(_self_, _165726_m.cast_ptr<_1ad7e1248_BuiltinOutlnCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c0b0c552:;
			{
				_1bc00ed65_newCall(_self_, _165726_m.cast_ptr<_1ad7e1622_BuiltinNewCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c0b0c5c9:;
			{
				_1bc01067e_panicCall(_self_, _165726_m.cast_ptr<_1ad7e19eb_BuiltinPanicCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c0b0c651:;
			{
				_1bc010937_errorCall(_self_, _165726_m.cast_ptr<_1ad7e3602_BuiltinErrorCallExprModel>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c0b0c6c8:;
			{
				_1bc011d23_makeCall(_self_, _165726_m.cast_ptr<_1ad7e1ea2_BuiltinMakeCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c0b0c750:;
			{
				_1bc01263c_appendCall(_self_, _165726_m.cast_ptr<_1ad7e237b_BuiltinAppendCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c0b0c7c7:;
			{
				_1bc010be0_copyCall(_self_, _165726_m.cast_ptr<_1ad7e3228_BuiltinCopyCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c0b0c84e:;
			{
				_1bc010e98_lenCall(_self_, _165726_m.cast_ptr<_1ad7e2678_BuiltinLenCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c0b0c8c6:;
			{
				_1bc011251_capCall(_self_, _165726_m.cast_ptr<_1ad7e2975_BuiltinCapCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c0b0c94d:;
			{
				_1bc011509_deleteCall(_self_, _165726_m.cast_ptr<_1ad7e2d4e_BuiltinDeleteCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c0b0c9c5:;
			{
				_1bc0128e5_sizeof(_self_, _165726_m.cast_ptr<_1ad7e38ee_SizeofExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1c0b0ca4c:;
			{
				_1bc012b9d_alignof(_self_, _165726_m.cast_ptr<_1ad7e40a3_AlignofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c0b0cac4:;
			{
				_1bc012e56_runeLit(_self_, _165726_m.cast_ptr<_1ad7e4290_RuneExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c0b0cb4b:;
			{
				_1bc01320e_structureStatic(_self_, _165726_m.cast_ptr<_1ad7e02be_StructStaticIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c0b0cbc3:;
			{
				_1bc0134b7_backendEmit(_self_, _165726_m.cast_ptr<_1ad7e4614_BackendEmitExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c0b0cc4a:;
			{
				_1bc013770_free(_self_, _165726_m.cast_ptr<_1ad7e4911_FreeExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1c0b0ccc2:;
			{
				_1bc013a28_strComp(_self_, _165726_m.cast_ptr<_1bbd95eb5_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1c0b0cd49:;
			{
				_1bc0096bc_var(_self_, (*(_165726_m.unsafe_cast_ptr<_1bbd95a42_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1c0b0cdc1:;
			{
				_1bc013cd1_emptyCompare(_self_, _165726_m.cast_ptr<_1bbd956bd_EmptyCompareExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1c0b0ce48:;
			{
				_1bc014089_unsafeDeref(_self_, _165726_m.cast_ptr<_1bbd97b54_UnsafeDerefExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1c0b0cec0:;
			{
				_1bc014342_unsafeCasting(_self_, _165726_m.cast_ptr<_1bbd97e51_UnsafeCastingExprModel>(&__jule_any_type133));
			}
		}
		else {
			_case_begin_1c0b0ac6a:;
			{
				_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1c0b0ab7c:;
	};
}



inline jule::Bool _1bc01493b_handleFieldByDefault(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad717ca7_FieldIns>* _175742_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_175742_f))))._field_Default != nullptr)) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1bc01d3a1_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_175742_f))))._field_Decl));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1bc00a547_possibleRefExpr(_self_, (*(*((*(_175742_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1bc0eab43_ableToInit(&((*((*(_175742_f))))._field_Kind))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1bc01d3a1_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_175742_f))))._field_Decl));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1bc0157b6_initExpr(_self_, (*((*(_175742_f))))._field_Kind);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bc014be4_initStructLit(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _177835_s) {
	if ((*((*((*(_177835_s))))._field_Decl))._field_Binded) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bc0e2046_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_177835_s)));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1bc0e2046_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_177835_s)));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _17877_inited = false;;
	{
		auto expr = &((*((*(_177835_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b2ee48:;
		if (it != expr_end) {
			jule::Ptr<_1ad717ca7_FieldIns> _178815_f = *it;
			{
				if (_17877_inited) {
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_17877_inited=_1bc01493b_handleFieldByDefault(_self_, &(_178815_f));
			}
			_iter_next_1c0b2ee48:;
			++it;
			goto _iter_begin_1c0b2ee48;
		}
		_iter_end_1c0b2ee48:;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bc014e9c_fillCollectionByDefault(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _180045_elem) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bc0157b6_initExpr(_self_, (*(_180045_elem)));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1bc015255_initCollection(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _181536_elem) {
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1bc014e9c_fillCollectionByDefault(_self_, _181536_elem);
}



inline void _1bc01550d_initArray(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad9c7ece_Arr>* _182931_arr) {
	if (((*((*(_182931_arr))))._field_N == 0LL)) {
		_1bc0e23a9_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_182931_arr)));
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1bc0e23a9_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_182931_arr)));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1bc015255_initCollection(_self_, &((*((*(_182931_arr))))._field_Elem));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1bc0157b6_initExpr(jule::Ptr<_1bc005dd3_exprCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind> _184329_t) {
	if (_1ad9ba499_NilCompatible(_184329_t.ptr())) {
		if ((_1ad9bc7dc_Map(_184329_t) != nullptr)) {
			_1bc0e3c90_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _184329_t);
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1ad9bb269_Ptr(_184329_t) != nullptr)) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1bc0e3c90_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _184329_t);
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1ad9c67a2_Tuple> _18587_tup = _1ad9bca73_Tup(_184329_t);;
	if ((_18587_tup != nullptr)) {
		_1bc0e8569_tup((*(*((*(_self_))._field_oc))._field_tc.alloc)._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18587_tup);
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_18587_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0b48615:;
			if (it != expr_end) {
				jule::I64 _18629_i = it - expr->begin();
				jule::Ptr<_1ad9b8596_TypeKind> _186216_tt = *it;
				{
					if ((!(_1bc0eae1d_shouldInitialized(&(_186216_tt))))) {
						goto _iter_next_1c0b48615;
					};
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1bc0ce550_write((*(_self_))._field_oc, _1ab15d6ab_Itoa(_18629_i));
					_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1bc0157b6_initExpr(_self_, _186216_tt);
					if ((((*_18587_tup.alloc)._field_Types.len() - _18629_i) > 1LL)) {
						_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1c0b48615:;
				++it;
				_18629_i++;
				goto _iter_begin_1c0b48615;
			}
			_iter_end_1c0b48615:;
		};
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1ad805658_Enum> _18777_enm = _1ad9bb500_Enum(_184329_t);;
	if ((_18777_enm != nullptr)) {
		_1bc0145ea_model(_self_, (*((*((*((*_18777_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _18823_prim = _1ad9bac4c_Prim(_184329_t);;
	if ((_18823_prim != nullptr)) {
		if (_1ad87c69c_IsNum((*_18823_prim.alloc)._field_Kind)) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1ad9c48e3_IsBool(_18823_prim)) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1ad9c4b79_IsStr(_18823_prim)) {
			_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1ad9bba1c_Arr(_184329_t) != nullptr)) {
		jule::Ptr<_1ad9c7ece_Arr> _18948_arr = _1ad9bba1c_Arr(_184329_t);;
		_1bc01550d_initArray(_self_, &(_18948_arr));
		return;;
	};
	jule::Ptr<_1ad718857_StructIns> _18987_s = _1ad9bc2c0_Struct(_184329_t);;
	if ((_18987_s != nullptr)) {
		_1bc014be4_initStructLit(_self_, &(_18987_s));
		return;;
	};
	_1bc0e3c90_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _184329_t);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1bc0183ac_TestCoder_eq(_1bc0183ac_TestCoder *_self_, _1bc0183ac_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1bc0183ac_TestCoder> static__1bc018863_New(jule::Ptr<_1bc0cdd35_ObjectCoder>* _2021_oc) {
	return jule::new_ptr<_1bc0183ac_TestCoder>(_1bc0183ac_TestCoder{._field_t=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_oc=(*(_2021_oc))});;
}



inline jule::Ptr<_1ad8e1bea_ImportInfo> _1bc018ae9_findTestingPackage(jule::Ptr<_1bc0183ac_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b540b0:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _2715_imp = *it;
			{
				if ((*(_2715_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _2715_imp;;
				};
			}
			_iter_next_1c0b540b0:;
			++it;
			goto _iter_begin_1c0b540b0;
		}
		_iter_end_1c0b540b0:;
	};
	return nullptr;;
}



inline void _1bc018da2_appendTest(jule::Ptr<_1bc0183ac_TestCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _3531_f) {
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0195de_callTmReset(_self_);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1bc016575_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_3531_f))._field_Decl))._field_Ident);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1bc0cee02_indent((*(_self_))._field_oc);
	static__1bc01c416_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3531_f));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1bc01915a_appendPackageTests(jule::Ptr<_1bc0183ac_TestCoder> _self_, jule::Ptr<_1ad8e446c_Package>* _5040_p) {
	{
		auto expr = &((*((*(_5040_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b5a88b:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _5115_file = *it;
			{
				{
					auto expr = &((*(_5115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0b5b31a:;
					if (it != expr_end) {
						jule::Ptr<_1ad7e778d_Fn> _5216_f = *it;
						{
							if (_1bb0a6c10_HasDirective(&((*(_5216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1bc018da2_appendTest(_self_, (*_5216_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1c0b5b31a:;
						++it;
						goto _iter_begin_1c0b5b31a;
					}
					_iter_end_1c0b5b31a:;
				};
			}
			_iter_next_1c0b5a88b:;
			++it;
			goto _iter_begin_1c0b5a88b;
		}
		_iter_end_1c0b5a88b:;
	};
}



inline jule::Bool _1bc0193e1_readyTestingPackage(jule::Ptr<_1bc0183ac_TestCoder> _self_) {
	jule::Ptr<_1ad8e1bea_ImportInfo> _617_p = _1bc018ae9_findTestingPackage(_self_);;
	if ((_617_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1ad8e2e0a_FindStruct(_617_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1ad719902_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1ad719902_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1ad719902_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1bc0195de_callTmReset(jule::Ptr<_1bc0183ac_TestCoder> _self_) {
	static__1bc01c12a_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bc0197dc_callTmFailed(jule::Ptr<_1bc0183ac_TestCoder> _self_) {
	static__1bc01c12a_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bc0199da_callTmSkipped(jule::Ptr<_1bc0183ac_TestCoder> _self_) {
	static__1bc01c12a_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bc019bd8_Serialize(jule::Ptr<_1bc0183ac_TestCoder> _self_) {
	_1bc0db0ea_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1bc0da88b_end((*(_self_))._field_oc);
	});;
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	if ((!(_1bc0193e1_readyTestingPackage(_self_)))) {
		_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1bc0cec04_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_1dd0b6912_Builder _1117_tb = static__1dd0b74d4_New(40LL);;
	_1bc0e2046_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1117_tb), (*_self_.alloc)._field_t);
	_1bc0dee89_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1dd0c217b_Buf(&_1117_tb));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1bc0ce808_writeBytes((*(_self_))._field_oc, _1dd0c217b_Buf(&_1117_tb));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1bc0cea06_addIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1bc0197dc_callTmFailed(_self_);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1bc0199da_callTmSkipped(_self_);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1bc01915a_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1bc0cec04_doneIndent((*(_self_))._field_oc);
	_1bc0cee02_indent((*(_self_))._field_oc);
	_1bc0ce550_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}








inline jule::Bool _1bc01b03b_identCoder_eq(_1bc01b03b_identCoder *_self_, _1bc01b03b_identCoder _other_) { return true; }

inline void static__1bc01b547_writeIdentTo(_1dd0b6912_Builder* _2630_buf, jule::Str* _2654_ident) {
	{
		auto expr = _2654_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b7c4a1:;
		if (it != expr_end) {
			jule::U8 *_2710_b = it;
			{
				if (((*(_2710_b)) >= 128LLU)) {
					goto _julec_label_1c0b7c825;
				};
			}
			_iter_next_1c0b7c4a1:;
			++it;
			goto _iter_begin_1c0b7c4a1;
		}
		_iter_end_1c0b7c4a1:;
	};
	_1dd0c0dd3_WriteStr(_2630_buf, (*(_2654_ident)));
	return;;
	_julec_label_1c0b7c825:;
	{
		auto expr = _2654_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _3710_r;
		_iter_begin_1c0b7d35e:;
		__jule_runeStep(it, end - it, &_3710_r, &len);
		if (it < end) {
			{
				if ((_3710_r < 128LL)) {
					_1dd0c118b_WriteByte(_2630_buf, static_cast<jule::U8>(_3710_r));
					goto _iter_next_1c0b7d35e;
				};
				_1dd0c0dd3_WriteStr(_2630_buf, _1ab15d3e2_FmtInt(static_cast<jule::I64>(_3710_r), 15LL));
			}
			_iter_next_1c0b7d35e:;
			it += len;
			goto _iter_begin_1c0b7d35e;
		}
	};
}



inline void static__1bc01b8dd_toOut(_1dd0b6912_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr) {
	_1dd0c118b_WriteByte(_5423_buf, '_');
	if ((_5458_addr != 0LLU)) {
		_1dd0c0dd3_WriteStr(_5423_buf, _1ab15d029_FmtUint(static_cast<jule::U64>(_5458_addr), 15LL));
		_1dd0c118b_WriteByte(_5423_buf, '_');
	};
	static__1bc01b547_writeIdentTo(_5423_buf, &(_5446_ident));
}



inline void static__1bc01bd3e_toLocal(_1dd0b6912_Builder* _6925_buf, jule::I64 _6948_row, jule::I64 _6958_col, jule::Str* _6969_ident) {
	_1dd0c118b_WriteByte(_6925_buf, '_');
	_1dd0c0dd3_WriteStr(_6925_buf, _1ab15d6ab_Itoa(_6948_row));
	_1dd0c0dd3_WriteStr(_6925_buf, _1ab15d6ab_Itoa(_6958_col));
	_1dd0c118b_WriteByte(_6925_buf, '_');
	static__1bc01b547_writeIdentTo(_6925_buf, _6969_ident);
}



inline void static__1bc01c12a_func(_1dd0b6912_Builder* _7722_buf, jule::Ptr<_1ad7e778d_Fn>* _7750_f) {
	{
		
		if ((*((*(_7750_f))))._field_Binded) {
			_case_begin_1c0b82792:;
			{
				_1dd0c0dd3_WriteStr(_7722_buf, (*((*(_7750_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_7750_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1c0b8283b:;
			{
				_1dd0c0dd3_WriteStr(_7722_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1ad7e7eca_IsMethod((*(_7750_f)).ptr())) {
			_case_begin_1c0b828a2:;
			{
				if ((*((*(_7750_f))))._field_Statically) {
					_1dd0c0dd3_WriteStr(_7722_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1c0b8262c:;
	};
	jule::Ptr<_1ad6e45d0_Directive> _903_export = _1bb0a6847_FindDirective(&((*((*(_7750_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_903_export != nullptr)) {
		_1dd0c0dd3_WriteStr(_7722_buf, (*((*_903_export.alloc)._field_Args[0LL]))._field_Kind);
		return;;
	};
	static__1bc01b8dd_toOut(_7722_buf, (*((*(_7750_f))))._field_Ident, static_cast<jule::Uintptr>((*(_7750_f))));
}



inline void static__1bc01c416_funcIns(_1dd0b6912_Builder* _9825_buf, jule::Ptr<_1ad7ea84b_FnIns>* _9853_f) {
	if (_1ad7ebd14_IsBuiltin((*(_9853_f)).ptr())) {
		_1dd0c0dd3_WriteStr(_9825_buf, jule::Str::lit("jule::", 6));
		_1dd0c0dd3_WriteStr(_9825_buf, (*((*((*(_9853_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_9853_f))))._field_Decl.alloc)._field_Binded || ((*((*(_9853_f))))._field_Generics.len() == 0LL))) {
		static__1bc01c12a_func(_9825_buf, &((*((*(_9853_f))))._field_Decl));
		return;;
	};
	static__1bc01b8dd_toOut(_9825_buf, (*(*((*(_9853_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_9853_f))));
}



inline void static__1bc01c702_traitDecl(_1dd0b6912_Builder* _11327_buf, jule::Ptr<_1ad802ea2_Trait> _11350_t) {
	static__1bc01b8dd_toOut(_11327_buf, (*(_11350_t))._field_Ident, static_cast<jule::Uintptr>(_11350_t));
}



inline void static__1bc01c9dd_param(_1dd0b6912_Builder* _11723_buf, jule::Ptr<_1ad7e5cb9_Param>* _11747_p) {
	if ((_1ad6d2821_IsAnonIdent((*((*(_11747_p))))._field_Ident) || _1ad6d2557_IsIgnoreIdent((*((*(_11747_p))))._field_Ident))) {
		return;;
	};
	if (_1ad7e6418_IsSelf((*(_11747_p)).ptr())) {
		_1dd0c0dd3_WriteStr(_11723_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_11747_p))))._field_Token == nullptr)) {
		static__1bc01bd3e_toLocal(_11723_buf, 0LL, 0LL, &((*((*(_11747_p))))._field_Ident));
		return;;
	};
	static__1bc01bd3e_toLocal(_11723_buf, (*((*((*(_11747_p))))._field_Token))._field_Row, (*((*((*(_11747_p))))._field_Token))._field_Column, &((*((*(_11747_p))))._field_Ident));
}



inline void static__1bc01ccc9_structure(_1dd0b6912_Builder* _13227_buf, jule::Ptr<_1ad7159ec_Struct>* _13251_s) {
	if ((*((*(_13251_s))))._field_Binded) {
		if ((!(_1bb0a6c10_HasDirective(&((*((*(_13251_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			_1dd0c0dd3_WriteStr(_13227_buf, jule::Str::lit("struct ", 7));
		};
		_1dd0c0dd3_WriteStr(_13227_buf, (*((*(_13251_s))))._field_Ident);
		return;;
	};
	static__1bc01b8dd_toOut(_13227_buf, (*((*(_13251_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13251_s))));
}



inline void static__1bc01d0b5_structureIns(_1dd0b6912_Builder* _14330_buf, jule::Ptr<_1ad718857_StructIns>* _14354_s) {
	if (((*((*((*(_14354_s))))._field_Decl))._field_Binded || ((*((*(_14354_s))))._field_Generics.len() == 0LL))) {
		static__1bc01ccc9_structure(_14330_buf, &((*((*(_14354_s))))._field_Decl));
		return;;
	};
	static__1bc01b8dd_toOut(_14330_buf, (*(*((*(_14354_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14354_s))));
}



inline void static__1bc01d3a1_field(_1dd0b6912_Builder* _15123_buf, jule::Ptr<_1ad712ac6_Field>* _15147_f) {
	if ((*((*((*(_15147_f))))._field_Owner))._field_Binded) {
		_1dd0c0dd3_WriteStr(_15123_buf, (*((*(_15147_f))))._field_Ident);
		return;;
	};
	_1dd0c0dd3_WriteStr(_15123_buf, jule::Str::lit("_field_", 7));
	static__1bc01b547_writeIdentTo(_15123_buf, &((*((*(_15147_f))))._field_Ident));
}



inline void static__1bc01d68c_var(_1dd0b6912_Builder* _16121_buf, jule::Ptr<_1ad933a83_Var> _16148_v) {
	{
		
		if ((*(_16148_v))._field_Binded) {
			_case_begin_1c0b943a8:;
			{
				_1dd0c0dd3_WriteStr(_16121_buf, (*_16148_v.alloc)._field_Ident);
			}
		}
		else if (((*(_16148_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1c0b935c7:;
			{
				_1dd0c0dd3_WriteStr(_16121_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if (((*(_16148_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1c0b9265e:;
			{
				_1dd0c0dd3_WriteStr(_16121_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16148_v))._field_RetOrder == -1LL)) {
			_case_begin_1c0b926c5:;
			{
				_1dd0c0dd3_WriteStr(_16121_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16148_v))._field_RetOrder >= 0LL)) {
			_case_begin_1c0b9273b:;
			{
				_1dd0c0dd3_WriteStr(_16121_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_1dd0c0dd3_WriteStr(_16121_buf, _1ab15d6ab_Itoa((*_16148_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16148_v))._field_Scope != nullptr)) {
			_case_begin_1c0b927a2:;
			{
				static__1bc01bd3e_toLocal(_16121_buf, (*((*_16148_v.alloc)._field_Token))._field_Row, (*(*(_16148_v))._field_Token.alloc)._field_Column, &((*_16148_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1c0b925e8:;
			{
				jule::Ptr<_1ad6e45d0_Directive> _1794_export = _1bb0a6847_FindDirective(&((*(_16148_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1794_export != nullptr)) {
					_1dd0c0dd3_WriteStr(_16121_buf, (*((*_1794_export.alloc)._field_Args[0LL]))._field_Kind);
					return;;
				};
				static__1bc01b8dd_toOut(_16121_buf, (*_16148_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_16148_v));
			}
		}
		_match_end_1c0b924d8:;
	};
}



inline void static__1bc01d978_iterBegin(_1dd0b6912_Builder* _18827_buf, jule::Uintptr _18850_it) {
	_1dd0c0dd3_WriteStr(_18827_buf, jule::Str::lit("_iter_begin_", 12));
	_1dd0c0dd3_WriteStr(_18827_buf, _1ab15d029_FmtUint(static_cast<jule::U64>(_18850_it), 15LL));
}



inline void static__1bc01dc64_iterEnd(_1dd0b6912_Builder* _19325_buf, jule::Uintptr _19348_it) {
	_1dd0c0dd3_WriteStr(_19325_buf, jule::Str::lit("_iter_end_", 10));
	_1dd0c0dd3_WriteStr(_19325_buf, _1ab15d029_FmtUint(static_cast<jule::U64>(_19348_it), 15LL));
}



inline void static__1bc01e050_iterNext(_1dd0b6912_Builder* _19826_buf, jule::Uintptr _19849_it) {
	_1dd0c0dd3_WriteStr(_19826_buf, jule::Str::lit("_iter_next_", 11));
	_1dd0c0dd3_WriteStr(_19826_buf, _1ab15d029_FmtUint(static_cast<jule::U64>(_19849_it), 15LL));
}



inline void static__1bc01e33b_label(_1dd0b6912_Builder* _20323_buf, jule::Uintptr _20346_u) {
	_1dd0c0dd3_WriteStr(_20323_buf, jule::Str::lit("_julec_label_", 13));
	_1dd0c0dd3_WriteStr(_20323_buf, _1ab15d029_FmtUint(static_cast<jule::U64>(_20346_u), 15LL));
}



inline void static__1bc01e627_matchEnd(_1dd0b6912_Builder* _20826_buf, jule::Uintptr _20849_m) {
	_1dd0c0dd3_WriteStr(_20826_buf, jule::Str::lit("_match_end_", 11));
	_1dd0c0dd3_WriteStr(_20826_buf, _1ab15d029_FmtUint(static_cast<jule::U64>(_20849_m), 15LL));
}



inline void static__1bc02486e_caseBegin(_1dd0b6912_Builder* _21327_buf, jule::Uintptr _21350_c) {
	_1dd0c0dd3_WriteStr(_21327_buf, jule::Str::lit("_case_begin_", 12));
	_1dd0c0dd3_WriteStr(_21327_buf, _1ab15d029_FmtUint(static_cast<jule::U64>(_21350_c), 15LL));
}








inline jule::Bool _1bc0cba36_SerializationInfo_eq(_1bc0cba36_SerializationInfo *_self_, _1bc0cba36_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1bc0cbe54_traitCast_eq(_1bc0cbe54_traitCast *_self_, _1bc0cbe54_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1bc0cc32d_anonHash_eq(_1bc0cc32d_anonHash *_self_, _1bc0cc32d_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}






inline jule::Bool _1bc0cc6a2_metadata_eq(_1bc0cc6a2_metadata *_self_, _1bc0cc6a2_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_1bc0cdd35_ObjectCoder> static__1bc0ce297_New(jule::Ptr<_1bb09dcd4_IR>* _11321_ir, _1bc0cba36_SerializationInfo _11335_info) {
	jule::Ptr<_1bc0cdd35_ObjectCoder> _1147_oc = jule::new_ptr<_1bc0cdd35_ObjectCoder>(_1bc0cdd35_ObjectCoder{._field_Buf=_1dd0b6912_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_1dd0b6912_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_1dd0b6912_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_1dd0b6912_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_1dd0b6912_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_1dd0b6912_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_11321_ir)), ._field_info=_11335_info, ._field_anons=jule::Slice<jule::Ptr<_1bc0cc32d_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1c063e78d_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr), ._field_traitCastMap=jule::Slice<_1bc0cbe54_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>>(nullptr), ._field_traitMetMap=static__1c068a201_make(), ._field_ec=jule::Ptr<_1bc005dd3_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1bbee9ba7_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1bc0dda8c_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_1bc0cc6a2_metadata{._field_concurrent=false}});;
	(*(_1147_oc))._field_ec=static__1bc0062ce_new(&(_1147_oc));
	(*_1147_oc.alloc)._field_sc=static__1bbeea3a0_new(&(_1147_oc));
	(*_1147_oc.alloc)._field_tc=static__1bc0de0dc_new(&(_1147_oc));
	return _1147_oc;;
}



inline void _1bc0ce550_write(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Str _12622_s) {
	_1dd0c0dd3_WriteStr(&(*(_self_))._field_Buf, _12622_s);
}



inline void _1bc0ce808_writeBytes(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Slice<jule::U8> _13027_b) {
	_1dd0c0b2a_Write(&(*(_self_))._field_Buf, _13027_b);
}



inline void _1bc0cea06_addIndent(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1bc0cec04_doneIndent(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1bc0cee02_indent(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1dd0c0b2a_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1bc0d0243_findAnyType(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind>* _14933_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ba8e39:;
		if (it != expr_end) {
			jule::I64 _1508_i = it - expr->begin();
			jule::Ptr<_1ad9b8596_TypeKind> _15015_at = *it;
			{
				if (_1ad9b8cd3_Equal(_15015_at, (*(_14933_t)))) {
					return _1508_i;;
				};
			}
			_iter_next_1c0ba8e39:;
			++it;
			_1508_i++;
			goto _iter_begin_1c0ba8e39;
		}
		_iter_end_1c0ba8e39:;
	};
	return -1LL;;
}



inline jule::I64 _1bc0d0584_pushCoSpawn(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _15832_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ba99ea:;
		if (it != expr_end) {
			jule::I64 _1597_i = it - expr->begin();
			jule::Ptr<_1ad7ea84b_FnIns> _15910_sf = *it;
			{
				if (((*(_15910_sf))._field_Params.len() == (*(_15832_f))._field_Params.len())) {
					{
						auto expr = &((*_15910_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c0bab524:;
						if (it != expr_end) {
							jule::I64 _1619_j = it - expr->begin();
							jule::Ptr<_1ad7e96e6_ParamIns> *_16112_sp = it;
							{
								if ((!(_1ad9b8cd3_Equal((*((*(_16112_sp))))._field_Kind, (*((*(_15910_sf))._field_Params[_1619_j]))._field_Kind)))) {
									goto _iter_end_1c0bab524;
								};
							}
							_iter_next_1c0bab524:;
							++it;
							_1619_j++;
							goto _iter_begin_1c0bab524;
						}
						_iter_end_1c0bab524:;
					};
					return _1597_i;;
				};
			}
			_iter_next_1c0ba99ea:;
			++it;
			_1597_i++;
			goto _iter_begin_1c0ba99ea;
		}
		_iter_end_1c0ba99ea:;
	};
	jule::I64 _1693_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1703_is = _1ab15d6ab_Itoa(_1693_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15832_f; __jule_collection; }));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1703_is);
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_1bc0e392c_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _15832_f);
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
	{
		auto expr = &((*_15832_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0bb1826:;
		if (it != expr_end) {
			jule::I64 _1868_j = it - expr->begin();
			jule::Ptr<_1ad7e96e6_ParamIns> _18615_p = *it;
			{
				_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_1bc0e3c90_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_18615_p))._field_Kind);
				_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1ab15d6ab_Itoa(_1868_j));
				_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
				_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
			}
			_iter_next_1c0bb1826:;
			++it;
			_1868_j++;
			goto _iter_begin_1c0bb1826;
		}
		_iter_end_1c0bb1826:;
	};
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
	{
		
		if ((_1dd46607a_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1c0bbb7a9:;
			{
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
			}
		}
		else if (_1dd35a8cb_IsUnix(_1dd46607a_Os)) {
			_case_begin_1c0bbb886:;
			{
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
			}
		}
		else {
			_case_begin_1c0baedb8:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:205:4"));;
			}
		}
		_match_end_1c0bbb1e3:;
	};
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1703_is);
	;
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1703_is);
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1703_is);
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
	{
		auto expr = &((*_15832_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0bc4273:;
		if (it != expr_end) {
			jule::I64 _2317_j = it - expr->begin();
			{
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1ab15d6ab_Itoa(_2317_j));
				if ((((*_15832_f.alloc)._field_Params.len() - _2317_j) > 1LL)) {
					_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c0bc4273:;
			++it;
			_2317_j++;
			goto _iter_begin_1c0bc4273;
		}
		_iter_end_1c0bc4273:;
	};
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
	{
		
		if ((_1dd46607a_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1c0bc883d:;
			{
				_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
			}
		}
		else if (_1dd35a8cb_IsUnix(_1dd46607a_Os)) {
			_case_begin_1c0bc891a:;
			{
				_1dd0c118b_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
			}
		}
		else {
			_case_begin_1c0bc4ae2:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:254:4"));;
			}
		}
		_match_end_1c0bc8475:;
	};
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
	return _1693_i;;
}



inline jule::I64 _1bc0d08c5_pushDealloc(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind> _26132_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0bcada1:;
		if (it != expr_end) {
			jule::I64 _2627_i = it - expr->begin();
			jule::Ptr<_1ad9b8596_TypeKind> _26210_dt = *it;
			{
				if (_1ad9b8cd3_Equal(_26210_dt, _26132_t)) {
					return _2627_i;;
				};
			}
			_iter_next_1c0bcada1:;
			++it;
			_2627_i++;
			goto _iter_begin_1c0bcada1;
		}
		_iter_end_1c0bcada1:;
	};
	jule::I64 _2673_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _26132_t; __jule_collection; }));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_deallocObj, _1ab15d6ab_Itoa(_2673_i));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1bc0e3c90_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _26132_t);
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _2673_i;;
}



inline jule::Str _1bc0d0c16_pushAnonFn(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel>* _27732_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_27732_m))))._field_Func))._field_CalledCo);
	jule::Bool _2803_closure = _1bb0a502c_IsClosure(_27732_m);;
	if (_2803_closure) {
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I64 _2844_l = _1dd0c1b5e_Len(&(*_self_.alloc)._field_anonObj);;
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anonObj, _1ab15d029_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_27732_m))))._field_Func)), 15LL));
		__jule_func_result=__jule_bytesToStr(_1dd0c217b_Buf(&(*_self_.alloc)._field_anonObj).slice(_2844_l));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_27732_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0bd345d:;
			if (it != expr_end) {
				jule::Ptr<_1ad933a83_Var> _28916_v = *it;
				{
					_1dd0c118b_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1bc0e3c90_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_28916_v))._field_Kind))._field_Kind);
					_1dd0c118b_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_28916_v.alloc)._field_Reference) {
						_1dd0c118b_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1bc01d68c_var(&((*_self_.alloc)._field_anonObj), _28916_v);
					_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1c0bd345d:;
				++it;
				goto _iter_begin_1c0bd345d;
			}
			_iter_end_1c0bd345d:;
		};
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1ab15d029_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_27732_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc0cc32d_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bc0cc32d_anonHash>(_1bc0cc32d_anonHash{._field_expr=(*(_27732_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1bc0d6aa7_anonFuncInsDecl(_self_, _27732_m, __jule_func_result);
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1bc0d1057_pushAnyType(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad9b8596_TypeKind> _31932_t) {
	jule::Ptr<_1ad9b8596_TypeKind> _3207_orig = _31932_t;;
	if ((_1ad9bb500_Enum(_31932_t.ptr()) != nullptr)) {
		_31932_t=(*((*(_1ad9bb500_Enum(_31932_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _3247_i = _1bc0d0243_findAnyType(_self_, &(_31932_t));;
	if ((_3247_i != -1LL)) {
		return _3247_i;;
	};
	_3247_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _31932_t; __jule_collection; }));
	jule::Str _3303_si = _1ab15d6ab_Itoa(_3247_i);;
	if ((_1ad9baed3_Sptr(_31932_t) != nullptr)) {
		_1dd0b6912_Builder _3328_elemKind = static__1dd0b74d4_New(40LL);;
		_1bc0e3c90_kind((*_self_.alloc)._field_tc.ptr(), &(_3328_elemKind), (*(_1ad9baed3_Sptr(_31932_t)))._field_Elem);
		jule::I64 _3364_di = _1bc0d08c5_pushDealloc(_self_, (*(_1ad9baed3_Sptr(_31932_t)))._field_Elem);;
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _1ab15d6ab_Itoa(_3364_di));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1bc0dee89_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1dd0c217b_Buf(&_3328_elemKind));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
	} else {
		_1dd0b6912_Builder _3558_kindB = static__1dd0b74d4_New(40LL);;
		_1bc0e3c90_kind((*_self_.alloc)._field_tc.ptr(), &(_3558_kindB), _31932_t);
		jule::Str _3574_kind = _1dd0c16ca_Str(&_3558_kindB);;
		jule::I64 _3604_di = _1bc0d08c5_pushDealloc(_self_, _31932_t);;
		jule::Str _3658_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
		_3658_lmodel+=_3574_kind;
		_3658_lmodel+=jule::Str::lit("*>(", 3);
		jule::Str _3688_rmodel = _3658_lmodel;;
		_3688_rmodel+=jule::Str::lit("other)", 6);
		_3658_lmodel+=jule::Str::lit("alloc)", 6);
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { ", 41));
		if (_1ad9b9be6_Comparable(_31932_t)) {
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("return ", 7));
			_1bc0086cc__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3658_lmodel), &(_3688_rmodel), &(_31932_t), &(_31932_t), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
		} else {
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_panic((", 14));
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::U8", 8));
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*)\"runtime: comparing uncomparable type \" \"", 43));
			jule::I64 _3839_n = _1dd0c1b5e_Len(&(*_self_.alloc)._field_anyObj);;
			_1bc016245_cstrBytes(&((*_self_.alloc)._field_anyObj), _1ad9b8992_Str(_31932_t));
			_3839_n=(_1dd0c1b5e_Len(&(*_self_.alloc)._field_anyObj) - _3839_n);
			_3839_n+=37LL;
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("\", ", 3));
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _1ab15d6ab_Itoa(_3839_n));
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("); return false; }\n", 19));
		};
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
		jule::Ptr<_1ad7e778d_Fn> _3968_decl = _1adaacb41_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
		jule::Ptr<_1ad7ea84b_FnIns> _3978_f = _1bb0a8371_FindFnGenericInstance(&(_3968_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _3207_orig; __jule_collection; }));;
		static__1bc01c416_funcIns(&((*_self_.alloc)._field_anyObj), &(_3978_f));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
		if ((_1ad9bb269_Ptr(_31932_t) == nullptr)) {
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _3574_kind);
		} else {
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _3574_kind);
			_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _1ab15d6ab_Itoa(_3604_di));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_any_type", 21));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, .to_str=__jule_any_type", 28));
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _3303_si);
		_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
	};
	return _3247_i;;
}



inline void _1bc0d1310_pushResultIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _42435_f) {
	jule::Str _4253_s = __jule_bytesToStr(_1bc0e904d_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_42435_f))))._field_Result)));;
	jule::Bool _4266_ok;
	_1c063ee53_lookup((*_self_.alloc)._field_resultMap, _4253_s, nullptr, &(_4266_ok));
	if (_4266_ok) {
		return;;
	};
	(*_1c064020b_set(((*_self_.alloc)._field_resultMap).ptr(), _4253_s))=false;
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_resultDecls, _4253_s);
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1ad9bca73_Tup((*((*(_42435_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c095e9:;
		if (it != expr_end) {
			jule::I64 _4348_i = it - expr->begin();
			jule::Ptr<_1ad9b8596_TypeKind> _43415_t = *it;
			{
				_1dd0c118b_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1bc0e3c90_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _43415_t);
				_1dd0c118b_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_resultDecls, _1ab15d6ab_Itoa(_4348_i));
				_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c0c095e9:;
			++it;
			_4348_i++;
			goto _iter_begin_1c0c095e9;
		}
		_iter_end_1c0c095e9:;
	};
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1bc0d15b8_pushResult(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7e778d_Fn>* _44532_f) {
	if ((_1ad7e7c44_IsVoid((*(_44532_f)).ptr()) || ((*((*((*(_44532_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _4497_n = (*((*(_44532_f))))._field_Instances.len();;
	if (((*((*(_44532_f))))._field_Generics.len() == 0LL)) {
		_4497_n=1LL;
	};
	{
		auto expr = (*((*(_44532_f))))._field_Instances.slice(0LL, _4497_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c0c0e6cb:;
		if (it != expr_end) {
			jule::Ptr<_1ad7ea84b_FnIns> _45315_ins = *it;
			{
				_1bc0d1310_pushResultIns(_self_, &(_45315_ins));
			}
			_iter_next_1c0c0e6cb:;
			++it;
			goto _iter_begin_1c0c0e6cb;
		}
		_iter_end_1c0c0e6cb:;
	};
}



inline void _1bc0d192b_pushAndWriteMaskMapper(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad802ea2_Trait> _45843_t1, jule::Ptr<_1ad802ea2_Trait> _45865_t2) {
	_1dd0b6912_Builder _4597_ident = static__1dd0b74d4_New(32LL);;
	_1dd0c0dd3_WriteStr(&_4597_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_1dd0c0dd3_WriteStr(&_4597_ident, _1ab15d029_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_45865_t2)), 15LL));
	_1dd0c0dd3_WriteStr(&_4597_ident, jule::Str::lit("_to_", 4));
	_1dd0c0dd3_WriteStr(&_4597_ident, _1ab15d029_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_45843_t1)), 15LL));
	_1dd0c0b2a_Write(&(*(_self_))._field_Buf, _1dd0c217b_Buf(&_4597_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c12558:;
		if (it != expr_end) {
			_1bc0cbe54_traitCast _46710_m = *it;
			{
				if (((_46710_m._field_t1 == _45843_t1) && (_46710_m._field_t2 == _45865_t2))) {
					return;;
				};
			}
			_iter_next_1c0c12558:;
			++it;
			goto _iter_begin_1c0c12558;
		}
		_iter_end_1c0c12558:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1bc0cbe54_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bc0cbe54_traitCast{._field_t1=_45843_t1, ._field_t2=_45865_t2}; __jule_collection; }));
	;
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_1dd0c0b2a_Write(&(*_self_.alloc)._field_anyObj, _1dd0c217b_Buf(&_4597_ident));
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_1dd0b6912_Builder _4817_t1Ident = static__1dd0b74d4_New(16LL);;
	_1dd0b6912_Builder _4827_t2Ident = static__1dd0b74d4_New(16LL);;
	static__1bc01c702_traitDecl(&(_4817_t1Ident), _45843_t1);
	static__1bc01c702_traitDecl(&(_4827_t2Ident), _45865_t2);
	{
		auto expr = &((*(_45843_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c12b85:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _48615_s1 = *it;
			{
				{
					auto expr = &((*(_45865_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0c16b67:;
					if (it != expr_end) {
						jule::Ptr<_1ad7159ec_Struct> _48711_s2 = *it;
						{
							if ((_48615_s1 == _48711_s2)) {
								{
									auto expr = &((*(_48615_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c0c17a58:;
									if (it != expr_end) {
										jule::Ptr<_1ad718857_StructIns> _48918_s1i = *it;
										{
											jule::I64 _4907_i1 = _1bb0a7749_FindTraitTypeOffsetS(_45843_t1, _48918_s1i);;
											jule::I64 _4917_i2 = _1bb0a7749_FindTraitTypeOffsetS(_45865_t2, _48918_s1i);;
											_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_1dd0c0b2a_Write(&(*_self_.alloc)._field_anyObj, _1dd0c217b_Buf(&_4827_t2Ident));
											_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _1ab15d6ab_Itoa(_4917_i2));
											_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_1dd0c0b2a_Write(&(*_self_.alloc)._field_anyObj, _1dd0c217b_Buf(&_4817_t1Ident));
											_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, _1ab15d6ab_Itoa(_4907_i1));
											_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1c0c17a58:;
										++it;
										goto _iter_begin_1c0c17a58;
									}
									_iter_end_1c0c17a58:;
								};
							};
						}
						_iter_next_1c0c16b67:;
						++it;
						goto _iter_begin_1c0c16b67;
					}
					_iter_end_1c0c16b67:;
				};
			}
			_iter_next_1c0c12b85:;
			++it;
			goto _iter_begin_1c0c12b85;
		}
		_iter_end_1c0c12b85:;
	};
	_1dd0c0dd3_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
}



inline void _1bc0d1bd4_locInfo(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad6ceb70_Token>* _50925_t) {
	jule::Str *_5104_loc = &((*((*((*(_50925_t))))._field_File))._field_Path);;
	if (_1dd46d659_Production) {
		{
			
			if (_1dd0a3976_HasPrefix((*(_5104_loc)), _1dd46550d_PathStdlib)) {
				_case_begin_1c0c1d047:;
				{
					_1bc016245_cstrBytes(&((*(_self_))._field_Buf), (*(_5104_loc)).slice((_1dd0c5e82_Dir(_1dd46550d_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1dd0a3976_HasPrefix((*(_5104_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1c0c1d124:;
				{
					_1bc016245_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5104_loc)).slice((_1dd0c5e82_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1c0c1cb7e:;
				{
					_1bc016245_cstrBytes(&((*(_self_))._field_Buf), (*(_5104_loc)));
				}
			}
			_match_end_1c0c1caa2:;
		};
	} else {
		_1bc016245_cstrBytes(&((*(_self_))._field_Buf), (*(_5104_loc)));
	};
	_1bc0ce550_write(_self_, jule::Str::lit(":", 1));
	_1bc0ce550_write(_self_, _1ab15d6ab_Itoa((*((*(_50925_t))))._field_Row));
	_1bc0ce550_write(_self_, jule::Str::lit(":", 1));
	_1bc0ce550_write(_self_, _1ab15d6ab_Itoa((*((*(_50925_t))))._field_Column));
}



inline void _1bc0d1dd2_head(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1bc0c2026_Time _5363_time = static__1bc0c2620_Now();;
	_1bc0c1850_AbsTime _5373_abs = _1bc0c3d08_Abs(&_5363_time);;
	_1bc0ce550_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1bc0ce550_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1bc0ce550_write(_self_, jule::Str::lit("jule0.1.1 @master", 17));
	_1bc0ce550_write(_self_, jule::Str::lit("\n", 1));
	_1bc0ce550_write(_self_, jule::Str::lit("// Date: ", 9));
	_1bc0ce550_write(_self_, _1ab15d029_FmtUint(_5373_abs._field_Day, 10LL));
	_1bc0ce550_write(_self_, jule::Str::lit("/", 1));
	_1bc0ce550_write(_self_, _1ab15d029_FmtUint(_5373_abs._field_Month, 10LL));
	_1bc0ce550_write(_self_, jule::Str::lit("/", 1));
	_1bc0ce550_write(_self_, _1ab15d029_FmtUint(_5373_abs._field_Year, 10LL));
	_1bc0ce550_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1bc0ce550_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1bc0ce550_write(_self_, jule::Str::lit(" ", 1));
	_1bc0ce550_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1dd46d659_Production) {
		_1bc0ce550_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1dd46d04e_RC))) {
		_1bc0ce550_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1dd46d417_Safety))) {
		_1bc0ce550_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1bc0d218a_links(_self_, true);
	_1bc0ce550_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1bc0ce550_write(_self_, _1dd465cc2_PathApi);
	_1bc0ce550_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1bc0d218a_links(_self_, false);
}



inline void _1bc0d218a_links(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Bool _57622_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c29c46:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _57710_used = *it;
			{
				{
					
					if ((!((*(_57710_used))._field_Binded))) {
						_case_begin_1c0c2aa7c:;
						{
							goto _iter_next_1c0c29c46;
						}
					}
					else if (_1dd348d2b_IsStdHeaderPath((*(_57710_used))._field_Path)) {
						_case_begin_1c0c2ab15:;
						{
							if ((!(_57622_std))) {
								goto _iter_next_1c0c29c46;
							};
							_1bc0ce550_write(_self_, jule::Str::lit("#include ", 9));
							_1bc0ce550_write(_self_, (*_57710_used.alloc)._field_Path);
							_1bc0ce550_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1dd349106_IsValidHeaderExt(_1dd0c5525_Ext((*(_57710_used))._field_Path))) {
						_case_begin_1c0c2ab7b:;
						{
							if (_57622_std) {
								goto _iter_next_1c0c29c46;
							};
							_1bc0ce550_write(_self_, jule::Str::lit("#include \"", 10));
							_1bc0ce550_write(_self_, (*_57710_used.alloc)._field_Path);
							_1bc0ce550_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1c0c2a928:;
				};
			}
			_iter_next_1c0c29c46:;
			++it;
			goto _iter_begin_1c0c29c46;
		}
		_iter_end_1c0c29c46:;
	};
}



inline void _1bc0d2443_prepareStructure(_1bc0cdd35_ObjectCoder* _self_, jule::Ptr<_1ad7159ec_Struct>* _59937_s) {
	{
		auto expr = &((*((*(_59937_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c2a6d6:;
		if (it != expr_end) {
			jule::Ptr<_1ad718857_StructIns> _60015_ins = *it;
			{
				{
					auto expr = &((*(_60015_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0c2e81c:;
					if (it != expr_end) {
						jule::Ptr<_1ad7e778d_Fn> _60116_m = *it;
						{
							if ((*(_60116_m))._field_Statically) {
								goto _iter_next_1c0c2e81c;
							};
							{
								auto expr = &((*_60116_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c0c303cd:;
								if (it != expr_end) {
									jule::Ptr<_1ad7ea84b_FnIns> _60517_mins = *it;
									{
										jule::Ptr<_1ad7e96e6_ParamIns> _60610_p = (*(_60517_mins))._field_Params[0LL];;
										_1dd0b6912_Builder _60710_kind = static__1dd0b74d4_New(40LL);;
										_1bc0e3c90_kind((*(_self_))._field_tc.ptr(), &(_60710_kind), (*(_60610_p))._field_Kind);
										if ((!(_1ad7e669e_IsRef((*_60610_p.alloc)._field_Decl.ptr())))) {
											_1dd0c0dd3_WriteStr(&_60710_kind, jule::Str::lit("*", 1));
										};
										(*_60610_p.alloc)._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc0dce98_customType>(_1bc0dce98_customType{._field_kind=_1dd0c16ca_Str(&_60710_kind)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data29)});
									}
									_iter_next_1c0c303cd:;
									++it;
									goto _iter_begin_1c0c303cd;
								}
								_iter_end_1c0c303cd:;
							};
						}
						_iter_next_1c0c2e81c:;
						++it;
						goto _iter_begin_1c0c2e81c;
					}
					_iter_end_1c0c2e81c:;
				};
			}
			_iter_next_1c0c2a6d6:;
			++it;
			goto _iter_begin_1c0c2a6d6;
		}
		_iter_end_1c0c2a6d6:;
	};
}



inline void _1bc0d2641_prepareStructures(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c296e6:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _62315_s = *it;
			{
				if (((*(_62315_s))._field_Token != nullptr)) {
					_1bc0d2443_prepareStructure(_self_.ptr(), &(_62315_s));
				};
			}
			_iter_next_1c0c296e6:;
			++it;
			goto _iter_begin_1c0c296e6;
		}
		_iter_end_1c0c296e6:;
	};
}



inline void _1bc0d28e9_structurePlainDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7159ec_Struct>* _63040_s) {
	{
		auto expr = &((*((*(_63040_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c349ba:;
		if (it != expr_end) {
			jule::Ptr<_1ad718857_StructIns> _63115_ins = *it;
			{
				_1bc0ce550_write(_self_, jule::Str::lit("struct ", 7));
				static__1bc01d0b5_structureIns(&((*_self_.alloc)._field_Buf), &(_63115_ins));
				_1bc0ce550_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c0c349ba:;
			++it;
			goto _iter_begin_1c0c349ba;
		}
		_iter_end_1c0c349ba:;
	};
}



inline void _1bc0d2ae7_structurePlainDecls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c360d7:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _63915_s = *it;
			{
				if (((*(_63915_s))._field_Token != nullptr)) {
					_1bc0d28e9_structurePlainDecl(_self_, &(_63915_s));
				};
			}
			_iter_next_1c0c360d7:;
			++it;
			goto _iter_begin_1c0c360d7;
		}
		_iter_end_1c0c360d7:;
	};
}



inline void _1bc0d2da0_fieldDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad717ca7_FieldIns>* _64631_f) {
	_1bc0e3c90_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_64631_f))))._field_Kind);
	_1bc0ce550_write(_self_, jule::Str::lit(" ", 1));
	static__1bc01d3a1_field(&((*_self_.alloc)._field_Buf), &((*((*(_64631_f))))._field_Decl));
	_1bc0ce550_write(_self_, jule::Str::lit(";", 1));
}



inline void _1bc0d3158_structureDestructor(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _65341_s) {
	;
	jule::Ptr<_1ad7e778d_Fn> _6567_disposeMethod = _1ad719902_FindMethod((*(_65341_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _6577_disposed = static__1ad93505c_Dispose(_6567_disposeMethod);;
	if ((!(_6577_disposed))) {
		return;;
	};
	_1bc0ce550_write(_self_, jule::Str::lit("~", 1));
	static__1bc01d0b5_structureIns(&((*_self_.alloc)._field_Buf), _65341_s);
	_1bc0ce550_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1bc01c12a_func(&((*_self_.alloc)._field_Buf), &(_6567_disposeMethod));
	_1bc0ce550_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1bc0d3576_structureOperatorEq(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Str _66936_ident, jule::Ptr<_1ad718857_StructIns>* _66953_s, jule::Bool _66974_decl) {
	if ((!(_1bc0dbc55_defaultEq(_66953_s)))) {
		return;;
	};
	_1bc0ce550_write(_self_, jule::Str::lit("\n", 1));
	if (_1bbdb1794_Inline) {
		_1bc0ce550_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1bc0ce550_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1bc0ce550_write(_self_, _66936_ident);
	_1bc0ce550_write(_self_, jule::Str::lit("_eq", 3));
	_1bc0ce550_write(_self_, jule::Str::lit("(", 1));
	_1bc0ce550_write(_self_, _66936_ident);
	_1bc0ce550_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1bc0ce550_write(_self_, _66936_ident);
	_1bc0ce550_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_66974_decl) {
		_1bc0ce550_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1bc0ce550_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_66953_s))))._field_Fields.len() == 0LL)) {
		_1bc0ce550_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1bc0cea06_addIndent(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("\n", 1));
	_1bc0cee02_indent(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("return ", 7));
	_1bc0cea06_addIndent(_self_);
	jule::Bool _7007_writed = false;;
	jule::Str _7037_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _7047_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_66953_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c43d4d:;
		if (it != expr_end) {
			jule::Ptr<_1ad717ca7_FieldIns> _70615_f = *it;
			{
				jule::Ptr<_1ad718857_StructIns> _7084_strct = _1ad9bc2c0_Struct((*(_70615_f))._field_Kind.ptr());;
				if ((((_7084_strct != nullptr) && ((*_7084_strct.alloc)._field_Decl != nullptr)) && (*(*(_7084_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1c0c43d4d;
				};
				if (_7007_writed) {
					_1bc0ce550_write(_self_, jule::Str::lit(" &&", 3));
				};
				_7007_writed=true;
				_1bc0ce550_write(_self_, jule::Str::lit("\n", 1));
				_1bc0cee02_indent(_self_);
				_1dd0b6912_Builder _7198_fIdent = static__1dd0b74d4_New((*((*_70615_f.alloc)._field_Decl))._field_Ident.len());;
				static__1bc01d3a1_field(&(_7198_fIdent), &((*_70615_f.alloc)._field_Decl));
				_7037_lmodel+=_1db99041e_BytesStr(_1dd0c217b_Buf(&_7198_fIdent));
				_7047_rmodel+=_1db99041e_BytesStr(_1dd0c217b_Buf(&_7198_fIdent));
				_1bc0086cc__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_7037_lmodel), &(_7047_rmodel), &((*_70615_f.alloc)._field_Kind), &((*_70615_f.alloc)._field_Kind), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_7037_lmodel).mut_slice(0LL, (_7037_lmodel.len() - _1dd0c1b5e_Len(&_7198_fIdent)));;
				_7047_rmodel=_7037_lmodel.slice(0LL, (_7047_rmodel.len() - _1dd0c1b5e_Len(&_7198_fIdent)));
			}
			_iter_next_1c0c43d4d:;
			++it;
			goto _iter_begin_1c0c43d4d;
		}
		_iter_end_1c0c43d4d:;
	};
	_1bc0cec04_doneIndent(_self_);
	if ((!(_7007_writed))) {
		_1bc0ce550_write(_self_, jule::Str::lit("true", 4));
	};
	_1bc0ce550_write(_self_, jule::Str::lit(";\n", 2));
	_1bc0cec04_doneIndent(_self_);
	_1bc0cee02_indent(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1bc0d38d9_structureOperators(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _73740_s, jule::Bool _73761_decl) {
	_1dd0b6912_Builder _7387_sb = static__1dd0b74d4_New(40LL);;
	static__1bc01d0b5_structureIns(&(_7387_sb), _73740_s);
	jule::Str _7403_ident = _1dd0c16ca_Str(&_7387_sb);;
	_1bc0d3576_structureOperatorEq(_self_, _7403_ident, _73740_s, _73761_decl);
}



inline void _1bc0d3b92_structureInsDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _74638_s) {
	{
		auto expr = &((*((*(_74638_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c4d066:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _74715_m = *it;
			{
				if (_1bc0db98b_isHeadDecl(&(_74715_m))) {
					_1bc0d4ee5_funcDecl(_self_, &(_74715_m), false);
				};
			}
			_iter_next_1c0c4d066:;
			++it;
			goto _iter_begin_1c0c4d066;
		}
		_iter_end_1c0c4d066:;
	};
	_1bc0ce550_write(_self_, jule::Str::lit("struct ", 7));
	static__1bc01d0b5_structureIns(&((*_self_.alloc)._field_Buf), _74638_s);
	_1bc0ce550_write(_self_, jule::Str::lit(" {\n", 3));
	_1bc0cea06_addIndent(_self_);
	{
		auto expr = &((*((*(_74638_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c4e96e:;
		if (it != expr_end) {
			jule::Ptr<_1ad717ca7_FieldIns> _75815_f = *it;
			{
				_1bc0cee02_indent(_self_);
				_1bc0d2da0_fieldDecl(_self_, &(_75815_f));
				_1bc0ce550_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1c0c4e96e:;
			++it;
			goto _iter_begin_1c0c4e96e;
		}
		_iter_end_1c0c4e96e:;
	};
	_1bc0cee02_indent(_self_);
	_1bc0d3158_structureDestructor(_self_, _74638_s);
	_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
	_1bc0cec04_doneIndent(_self_);
	_1bc0cee02_indent(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("};", 2));
	;
	_1bc0d38d9_structureOperators(_self_, _74638_s, true);
}



inline void _1bc0d3e4a_structureDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7159ec_Struct>* _77635_s) {
	{
		auto expr = &((*((*(_77635_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c534cd:;
		if (it != expr_end) {
			jule::Ptr<_1ad718857_StructIns> _77715_ins = *it;
			{
				_1bc0d3b92_structureInsDecl(_self_, &(_77715_ins));
			}
			_iter_next_1c0c534cd:;
			++it;
			goto _iter_begin_1c0c534cd;
		}
		_iter_end_1c0c534cd:;
	};
}



inline void _1bc0d4148_structureDecls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c53c70:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _78315_s = *it;
			{
				if (((*(_78315_s))._field_Token != nullptr)) {
					_1bc0d3e4a_structureDecl(_self_, &(_78315_s));
					_1bc0ce550_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1c0c53c70:;
			++it;
			goto _iter_begin_1c0c53c70;
		}
		_iter_end_1c0c53c70:;
	};
}



inline void _1bc0d4346_structureMethodDecls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c54c93:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _79215_s = *it;
			{
				if (((*(_79215_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_79215_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c0c56db6:;
						if (it != expr_end) {
							jule::Ptr<_1ad718857_StructIns> _79417_ins = *it;
							{
								{
									auto expr = &((*(_79417_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c0c57812:;
									if (it != expr_end) {
										jule::Ptr<_1ad7e778d_Fn> _79518_m = *it;
										{
											if ((!(_1bc0db98b_isHeadDecl(&(_79518_m))))) {
												_1bc0d15b8_pushResult(_self_, &(_79518_m));
												_1bc0d4ee5_funcDecl(_self_, &(_79518_m), false);
											};
										}
										_iter_next_1c0c57812:;
										++it;
										goto _iter_begin_1c0c57812;
									}
									_iter_end_1c0c57812:;
								};
							}
							_iter_next_1c0c56db6:;
							++it;
							goto _iter_begin_1c0c56db6;
						}
						_iter_end_1c0c56db6:;
					};
				};
			}
			_iter_next_1c0c54c93:;
			++it;
			goto _iter_begin_1c0c54c93;
		}
		_iter_end_1c0c54c93:;
	};
}



inline void _1bc0d481e_funcHead(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, _1dd0b6912_Builder* _81030_buf, jule::Ptr<_1ad7ea84b_FnIns>* _81058_f, jule::Bool _81075_ptr, jule::Str _81086_ident) {
	if ((((!(_81075_ptr)) && _1bbdb1794_Inline) && (!(_1ad7e8261_IsEntryPoint((*((*(_81058_f))))._field_Decl.ptr()))))) {
		_1dd0c0dd3_WriteStr(_81030_buf, jule::Str::lit("inline ", 7));
	};
	_1bc0e3256_funcInsResult((*(_self_))._field_tc.ptr(), _81030_buf, _81058_f);
	if (_81075_ptr) {
		_1dd0c0dd3_WriteStr(_81030_buf, jule::Str::lit("(*", 2));
		static__1bc01c416_funcIns(_81030_buf, _81058_f);
		_1dd0c118b_WriteByte(_81030_buf, ')');
	} else {
		_1dd0c118b_WriteByte(_81030_buf, ' ');
		if ((_81086_ident).empty()) {
			static__1bc01c416_funcIns(_81030_buf, _81058_f);
		} else {
			_1dd0c0dd3_WriteStr(_81030_buf, _81086_ident);
		};
	};
}



inline void _1bc0d4b82_funcDeclIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns>* _82933_f, jule::Bool _82950_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_82933_f))))._field_CalledCo);
	_1bc0cee02_indent(_self_);
	_1bc0d481e_funcHead(_self_, &((*_self_.alloc)._field_Buf), _82933_f, _82950_ptr, jule::Str());
	_1bc0d6128_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _82933_f);
	_1bc0ce550_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1bc0d4ee5_funcDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7e778d_Fn>* _83730_f, jule::Bool _83744_ptr) {
	{
		auto expr = &((*((*(_83730_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c5e473:;
		if (it != expr_end) {
			jule::Ptr<_1ad7ea84b_FnIns> _83815_c = *it;
			{
				_1bc0d4b82_funcDeclIns(_self_, &(_83815_c), _83744_ptr);
			}
			_iter_next_1c0c5e473:;
			++it;
			goto _iter_begin_1c0c5e473;
		}
		_iter_end_1c0c5e473:;
	};
}



inline void _1bc0d529d_funcDeclTrait(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7e778d_Fn>* _84335_f) {
	{
		auto expr = &((*((*(_84335_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c603a8:;
		if (it != expr_end) {
			jule::Ptr<_1ad7ea84b_FnIns> _84415_c = *it;
			{
				jule::Ptr<_1ad9b8596_TypeKind> _8458_k = (*((*(_84415_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_84415_c))._field_Params[0LL]))._field_Kind=_1bc0cb75b_generalGCPtr;
				_1bc0d4b82_funcDeclIns(_self_, &(_84415_c), true);
				(*((*(_84415_c))._field_Params[0LL]))._field_Kind=_8458_k;
			}
			_iter_next_1c0c603a8:;
			++it;
			goto _iter_begin_1c0c603a8;
		}
		_iter_end_1c0c603a8:;
	};
}



inline void _1bc0d549b_funcDecls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1bb0a1776_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ad8e446c_Package>*>((void*)__jule_anon_1c0c630d1, jule::Ptr<__jule_anon_1c0c630d1_ctx>::make(__jule_anon_1c0c630d1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c630d1_ctx_handler));
}



inline void _1bc0d5754_traitDataTypeMethods(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad802ea2_Trait>* _86542_t) {
	_1bb0a2557_IterTraitMethods(_86542_t, jule::__new_closure<void,jule::Ptr<_1ad7e778d_Fn>*>((void*)__jule_anon_1c0c645aa, jule::Ptr<__jule_anon_1c0c645aa_ctx>::make(__jule_anon_1c0c645aa_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c645aa_ctx_handler));
}



inline void _1bc0d5952_traitDataTypes(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1bb0a1776_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ad8e446c_Package>*>((void*)__jule_anon_1c0c69c20, jule::Ptr<__jule_anon_1c0c69c20_ctx>::make(__jule_anon_1c0c69c20_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c69c20_ctx_handler));
}



inline void _1bc0d5cb5_paramIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, _1dd0b6912_Builder* _90130_buf, jule::Ptr<_1ad7e96e6_ParamIns>* _90158_p) {
	_1bc0e2a80_paramIns((*(_self_))._field_tc.ptr(), _90130_buf, _90158_p);
	_1dd0c118b_WriteByte(_90130_buf, ' ');
	static__1bc01c9dd_param(_90130_buf, &((*((*(_90158_p))))._field_Decl));
}



inline void _1bc0d6128_paramsIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, _1dd0b6912_Builder* _90731_buf, jule::Ptr<_1ad7ea84b_FnIns>* _90759_f) {
	if (((!((*((*(_90759_f))))._field_AsAnon)) && ((*((*(_90759_f))))._field_Params.len() == 0LL))) {
		_1dd0c0dd3_WriteStr(_90731_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_1dd0c118b_WriteByte(_90731_buf, '(');
	if ((*((*(_90759_f))))._field_AsAnon) {
		_1dd0c0dd3_WriteStr(_90731_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_90759_f))))._field_Params.len() > 0LL)) {
			_1dd0c0dd3_WriteStr(_90731_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_90759_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c73014:;
		if (it != expr_end) {
			jule::I64 _9198_i = it - expr->begin();
			jule::Ptr<_1ad7e96e6_ParamIns> _91915_p = *it;
			{
				_1bc0d5cb5_paramIns(_self_, _90731_buf, &(_91915_p));
				if ((((*((*(_90759_f))))._field_Params.len() - _9198_i) > 1LL)) {
					_1dd0c0dd3_WriteStr(_90731_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c0c73014:;
			++it;
			_9198_i++;
			goto _iter_begin_1c0c73014;
		}
		_iter_end_1c0c73014:;
	};
	_1dd0c118b_WriteByte(_90731_buf, ')');
}



inline void _1bc0d648b_varInitExpr(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad933a83_Var>* _92833_v, jule::Fn<void> _92848_init) {
	if ((*((*(_92833_v))))._field_Statically) {
		_1bc0ce550_write(_self_, jule::Str::lit("static ", 7));
	};
	_1bc0e3c90_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_92833_v))))._field_Kind))._field_Kind);
	_1bc0ce550_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_92833_v))))._field_Reference) {
		_1bc0ce550_write(_self_, jule::Str::lit("*", 1));
	};
	static__1bc01d68c_var(&((*_self_.alloc)._field_Buf), (*(_92833_v)));
	if ((_92848_init != nullptr)) {
		_1bc0ce550_write(_self_, jule::Str::lit(" = ", 3));
		_92848_init();
	};
	_1bc0ce550_write(_self_, jule::Str::lit(";", 1));
}



inline void _1bc0d6744_var(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad933a83_Var> _94624_v) {
	if (_1ad6d2557_IsIgnoreIdent((*(_94624_v))._field_Ident)) {
		return;;
	};
	if ((((*_94624_v.alloc)._field_Value != nullptr) && ((*(*(_94624_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_94624_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_94624_v.alloc)._field_Reference) {
				_1bc0d648b_varInitExpr(_self_, &(_94624_v), jule::__new_closure<void>((void*)__jule_anon_1c0c7a3c3, jule::Ptr<__jule_anon_1c0c7a3c3_ctx>::make(__jule_anon_1c0c7a3c3_ctx{._self_=_self_,._94624_v=_94624_v}).as<jule::Uintptr>(), __jule_anon_1c0c7a3c3_ctx_handler));
			} else {
				_1bc0d648b_varInitExpr(_self_, &(_94624_v), jule::__new_closure<void>((void*)__jule_anon_1c0c7c4b3, jule::Ptr<__jule_anon_1c0c7c4b3_ctx>::make(__jule_anon_1c0c7c4b3_ctx{._self_=_self_,._94624_v=_94624_v}).as<jule::Uintptr>(), __jule_anon_1c0c7c4b3_ctx_handler));
			};
			return;;
		};
		_1bc0d648b_varInitExpr(_self_, &(_94624_v), nullptr);
		return;;
	};
	if ((*_94624_v.alloc)._field_Reference) {
		_1bc0d648b_varInitExpr(_self_, &(_94624_v), jule::__new_closure<void>((void*)__jule_anon_1c0c7ebbe, jule::Ptr<__jule_anon_1c0c7ebbe_ctx>::make(__jule_anon_1c0c7ebbe_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c7ebbe_ctx_handler));
		return;;
	};
	if (_1bc0eae1d_shouldInitialized(&((*((*_94624_v.alloc)._field_Kind))._field_Kind))) {
		_1bc0d648b_varInitExpr(_self_, &(_94624_v), jule::__new_closure<void>((void*)__jule_anon_1c0c80d68, jule::Ptr<__jule_anon_1c0c80d68_ctx>::make(__jule_anon_1c0c80d68_ctx{._self_=_self_,._94624_v=_94624_v}).as<jule::Uintptr>(), __jule_anon_1c0c80d68_ctx_handler));
		return;;
	};
	_1bc0d648b_varInitExpr(_self_, &(_94624_v), nullptr);
}



inline void _1bc0d6aa7_anonFuncInsDecl(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel>* _97737_m, jule::Str _97764_ident) {
	_1bc0d481e_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_97737_m))))._field_Func), false, _97764_ident);
	_1bc0d6128_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_97737_m))))._field_Func));
	_1dd0c118b_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1bc0d6e1a_anonFuncIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7dd1bd_AnonFnExprModel>* _98333_m, jule::Str _98360_ident) {
	_1bc0d481e_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_98333_m))))._field_Func), false, _98360_ident);
	_1bc0d6128_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_98333_m))))._field_Func));
	_1bc0ce550_write(_self_, jule::Str::lit(" ", 1));
	_1bc002990_anonFuncScope((*_self_.alloc)._field_sc, (*(_98333_m)), _98360_ident);
	if (((*((*((*(_98333_m))))._field_Func))._field_Scope != nullptr)) {
		_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1bc0d727d_funcIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7ea84b_FnIns> _99328_f, jule::Str _99345_ident) {
	_1bc0d481e_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_99328_f), false, _99345_ident);
	_1bc0d6128_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_99328_f));
	_1bc0ce550_write(_self_, jule::Str::lit(" ", 1));
	_1bc002c48_funcScope((*_self_.alloc)._field_sc, _99328_f);
	if (((*(_99328_f))._field_Scope != nullptr)) {
		_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1bc0d7536_func(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7e778d_Fn>* _100326_f) {
	{
		auto expr = &((*((*(_100326_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c8969b:;
		if (it != expr_end) {
			jule::Ptr<_1ad7ea84b_FnIns> _100415_ins = *it;
			{
				_1bc0d727d_funcIns(_self_, _100415_ins, jule::Str());
			}
			_iter_next_1c0c8969b:;
			++it;
			goto _iter_begin_1c0c8969b;
		}
		_iter_end_1c0c8969b:;
	};
}



inline void _1bc0d7899_funcTrait(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _100927_s, jule::Ptr<_1ad7ea84b_FnIns>* _100953_f) {
	(*((*(_100953_f))))._field_Scope=nullptr;
	_1dd0b6912_Builder _10127_nident = static__1dd0b74d4_New(30LL);;
	_1dd0c0dd3_WriteStr(&_10127_nident, jule::Str::lit("__jule_trait_method_", 20));
	_1dd0c0dd3_WriteStr(&_10127_nident, _1ab15d029_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_100953_f)))), 15LL));
	_1dd0c0dd3_WriteStr(&_10127_nident, jule::Str::lit("_", 1));
	_1dd0c0dd3_WriteStr(&_10127_nident, _1ab15d029_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_100927_s)))), 15LL));
	jule::Ptr<_1ad9b8596_TypeKind> _10187_k = (*((*((*(_100953_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_100953_f))))._field_Params[0LL]))._field_Kind=_1bc0cb75b_generalGCPtr;
	_1bc0d727d_funcIns(_self_, (*(_100953_f)), _1dd0c16ca_Str(&_10127_nident));
	(*((*((*(_100953_f))))._field_Params[0LL]))._field_Kind=_10187_k;
}



inline __jule_tuple_x_1ad7ea84b_FnIns__jule_tuple_bool _1bc0d7bda_findTraitMetMap(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7e778d_Fn>* _102437_m) {
	__jule_tuple_x_1ad7ea84b_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ad7ea84b_FnIns> _10257_mins = (*((*(_102437_m))))._field_Instances[0LL];;
	{
		_1c069422c_mapIterator it = _1c068b334_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1c0c8ee76:;
		__jule_tuple_px_1ad7ea84b_FnIns__jule_tuple_psuintptr __iterator_result = _1c0694914_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1ad7ea84b_FnIns> _102612_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_102612_f))._field_Decl))._field_Public == (*((*(_102437_m))))._field_Public) && ((*(*(_102612_f))._field_Decl.alloc)._field_Ident == (*((*(_102437_m))))._field_Ident)) && _1ad7eb4a6_EqualFn(_102612_f, &(_10257_mins)))) {
					__jule_func_result.__jule_result_arg0 = _102612_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c0c8ee76:;
			goto _iter_begin_1c0c8ee76;
		}
		_iter_end_1c0c8ee76:;
	};
	__jule_func_result.__jule_result_arg0 = _10257_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1bc0d804d_traitWrapper(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad802ea2_Trait>* _103634_t, jule::Ptr<_1ad7e778d_Fn>* _103656_m) {
	_julec_label_1c0c926a4:;
	{
		auto expr = &((*((*(_103634_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c9285d:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _103815_imp = *it;
			{
				jule::Ptr<_1ad7ea84b_FnIns> _10398_mepf;
				jule::Bool _103914_exist;
				({
					__jule_tuple_x_1ad7ea84b_FnIns__jule_tuple_bool __jule_assign_result = _1bc0d7bda_findTraitMetMap(_self_, _103656_m);
					_10398_mepf = __jule_assign_result.__jule_result_arg0;
					_103914_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_103914_exist) {
					jule::Slice<jule::Uintptr> _10429_vals = _1c068aa1a_get((*_self_.alloc)._field_traitMetMap, _10398_mepf);;
					{
						auto expr = &(_10429_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c0c9483d:;
						if (it != expr_end) {
							jule::Uintptr _104312_val = *it;
							{
								if ((_104312_val == static_cast<jule::Uintptr>(_103815_imp))) {
									goto _iter_next_1c0c9285d;
								};
							}
							_iter_next_1c0c9483d:;
							++it;
							goto _iter_begin_1c0c9483d;
						}
						_iter_end_1c0c9483d:;
					};
					(*_1c068ab6e_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10398_mepf))=jule::append(_10429_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_103815_imp); __jule_collection; }));
				} else {
					(*_1c068ab6e_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10398_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_103815_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_103815_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0c95575:;
					if (it != expr_end) {
						jule::Ptr<_1ad718857_StructIns> _105316_ins = *it;
						{
							_1bc0d7899_funcTrait(_self_, &(_105316_ins), &(_10398_mepf));
							;
							jule::Ptr<_1ad7e778d_Fn> _10579_sm = _1ad719902_FindMethod(_105316_ins.ptr(), (*((*(_103656_m))))._field_Ident, false);;
							if (((_10579_sm == nullptr) || ((*(_10579_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1bc0cea06_addIndent(_self_);
							_1bc0ce550_write(_self_, jule::Str::lit("{\n", 2));
							_1bc0cee02_indent(_self_);
							if (((*((*(_103656_m))))._field_Exceptional || (!(_1ad7e7c44_IsVoid((*(_103656_m)).ptr()))))) {
								_1bc0ce550_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1bc01c12a_func(&((*_self_.alloc)._field_Buf), &(_10579_sm));
							_1bc0ce550_write(_self_, jule::Str::lit("(", 1));
							_1bc0ce550_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1bc0e2046_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _105316_ins);
							_1bc0ce550_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10745_ptr = (!(_1ad7e669e_IsRef((*((*(_103656_m))))._field_Params[0LL].ptr())));;
							if (_10745_ptr) {
								_1bc0ce550_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_103656_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1c0c9c45b:;
								if (it != expr_end) {
									jule::Ptr<_1ad7e5cb9_Param> _107812_mp = *it;
									{
										_1bc0ce550_write(_self_, jule::Str::lit(", ", 2));
										static__1bc01c9dd_param(&((*_self_.alloc)._field_Buf), &(_107812_mp));
									}
									_iter_next_1c0c9c45b:;
									++it;
									goto _iter_begin_1c0c9c45b;
								}
								_iter_end_1c0c9c45b:;
							};
							_1bc0ce550_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1bc0cec04_doneIndent(_self_);
						}
						_iter_next_1c0c95575:;
						++it;
						goto _iter_begin_1c0c95575;
					}
					_iter_end_1c0c95575:;
				};
			}
			_iter_next_1c0c9285d:;
			++it;
			goto _iter_begin_1c0c9285d;
		}
		_iter_end_1c0c9285d:;
	};
}



inline void _1bc0d824b_traitWrappers(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1bb0a1776_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ad8e446c_Package>*>((void*)__jule_anon_1c0c9e02e, jule::Ptr<__jule_anon_1c0c9e02e_ctx>::make(__jule_anon_1c0c9e02e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c9e02e_ctx_handler));
}



inline void _1bc0d85ae_traitDataMethods(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad802ea2_Trait>* _110338_t, jule::Ptr<_1ad718857_StructIns> _110355_s) {
	_1bb0a2557_IterTraitMethods(_110338_t, jule::__new_closure<void,jule::Ptr<_1ad7e778d_Fn>*>((void*)__jule_anon_1c0ca03a4, jule::Ptr<__jule_anon_1c0ca03a4_ctx>::make(__jule_anon_1c0ca03a4_ctx{._self_=_self_,._110355_s=_110355_s}).as<jule::Uintptr>(), __jule_anon_1c0ca03a4_ctx_handler));
}



inline void _1bc0d89cc_traitData(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad802ea2_Trait>* _112031_t, jule::I64 _112048_i, jule::Ptr<_1ad718857_StructIns>* _112061_s) {
	_1dd0b6912_Builder _11217_ident = static__1dd0b74d4_New((*((*(_112031_t))))._field_Ident.len());;
	static__1bc01c702_traitDecl(&(_11217_ident), (*(_112031_t)));
	_1bc0ce550_write(_self_, jule::Str::lit("static ", 7));
	_1bc0ce808_writeBytes(_self_, _1dd0c217b_Buf(&_11217_ident));
	_1bc0ce550_write(_self_, jule::Str::lit("MptrData ", 9));
	_1bc0ce808_writeBytes(_self_, _1dd0c217b_Buf(&_11217_ident));
	_1bc0ce550_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1bc0ce550_write(_self_, _1ab15d6ab_Itoa(_112048_i));
	_1bc0ce550_write(_self_, jule::Str::lit(" {\n", 3));
	_1bc0cea06_addIndent(_self_);
	_1bc0cee02_indent(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1bc0ce550_write(_self_, _1ab15d6ab_Itoa(_1bc0d08c5_pushDealloc(_self_, jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_112061_s)), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)}))));
	_1bc0ce550_write(_self_, jule::Str::lit(",\n", 2));
	_1bc0d85ae_traitDataMethods(_self_, _112031_t, (*(_112061_s)));
	_1bc0cec04_doneIndent(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1bc0d8bca_traitDatas(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1bb0a1776_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ad8e446c_Package>*>((void*)__jule_anon_1c0cacc30, jule::Ptr<__jule_anon_1c0cacc30_ctx>::make(__jule_anon_1c0cacc30_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0cacc30_ctx_handler));
}



inline void _1bc0d8dc8_globalDecls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0caebaa:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _115715_v = *it;
			{
				_1bc0e3c90_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_115715_v))._field_Kind))._field_Kind);
				_1bc0ce550_write(_self_, jule::Str::lit(" ", 1));
				static__1bc01d68c_var(&((*_self_.alloc)._field_Buf), _115715_v);
				_1bc0ce550_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c0caebaa:;
			++it;
			goto _iter_begin_1c0caebaa;
		}
		_iter_end_1c0caebaa:;
	};
}



inline void _1bc0d90c6_decls(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1bc0d2ae7_structurePlainDecls(_self_);
	_1bc0d4148_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1dd0c1b5e_Len(&(*_self_.alloc)._field_Buf);
	_1bc0d4346_structureMethodDecls(_self_);
	_1bc0d549b_funcDecls(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
	_1bc0d5952_traitDataTypes(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1dd0c1b5e_Len(&(*_self_.alloc)._field_Buf);
	_1bc0d824b_traitWrappers(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
	_1bc0d8bca_traitDatas(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1dd0c1b5e_Len(&(*_self_.alloc)._field_Buf);
	_1bc0d8dc8_globalDecls(_self_);
}



inline void _1bc0d937e_structureMethods(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _118338_s) {
	{
		auto expr = &((*((*(_118338_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cb7a1a:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _118415_f = *it;
			{
				_1bc0d7536_func(_self_, &(_118415_f));
				_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c0cb7a1a:;
			++it;
			goto _iter_begin_1c0cb7a1a;
		}
		_iter_end_1c0cb7a1a:;
	};
}



inline void _1bc0d9637_structureIns(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad718857_StructIns>* _119034_s) {
	;
	_1bc0d38d9_structureOperators(_self_, _119034_s, false);
	_1bc0d937e_structureMethods(_self_, _119034_s);
}



inline void _1bc0d98e0_structure(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad7159ec_Struct>* _119631_s) {
	{
		auto expr = &((*((*(_119631_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cb9ee5:;
		if (it != expr_end) {
			jule::Ptr<_1ad718857_StructIns> _119715_ins = *it;
			{
				_1bc0d9637_structureIns(_self_, &(_119715_ins));
				_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c0cb9ee5:;
			++it;
			goto _iter_begin_1c0cb9ee5;
		}
		_iter_end_1c0cb9ee5:;
	};
}



inline void _1bc0d9add_structures(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cba732:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _120415_s = *it;
			{
				if (((*(_120415_s))._field_Token != nullptr)) {
					_1bc0d98e0_structure(_self_, &(_120415_s));
					_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1c0cba732:;
			++it;
			goto _iter_begin_1c0cba732;
		}
		_iter_end_1c0cba732:;
	};
}



inline void _1bc0d9cdb_funcs(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1bb0a1776_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ad8e446c_Package>*>((void*)__jule_anon_1c0cbd35b, jule::Ptr<__jule_anon_1c0cbd35b_ctx>::make(__jule_anon_1c0cbd35b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0cbd35b_ctx_handler));
}



inline void _1bc0da094_pushInit(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, jule::Ptr<_1ad8e446c_Package>* _123530_pkg) {
	_1bb0a19da_IterFiles(_123530_pkg, jule::__new_closure<void,jule::Ptr<_1ad7eda91_SymTab>*>((void*)__jule_anon_1c0cbe835, jule::Ptr<__jule_anon_1c0cbe835_ctx>::make(__jule_anon_1c0cbe835_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0cbe835_ctx_handler));
}



inline void _1bc0da292_anonHashes(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_julec_label_1c0cc4175:;
	jule::Slice<jule::Ptr<_1bc0cc32d_anonHash>> _12527_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12527_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cc5c04:;
		if (it != expr_end) {
			jule::Ptr<_1bc0cc32d_anonHash> _125415_h = *it;
			{
				_1bc0d6e1a_anonFuncIns(_self_, &((*(_125415_h))._field_expr), (*_125415_h.alloc)._field_ident);
			}
			_iter_next_1c0cc5c04:;
			++it;
			goto _iter_begin_1c0cc5c04;
		}
		_iter_end_1c0cc5c04:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1c0cc4175;
	};
}



inline void _1bc0da490_initGlobals(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cc7222:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _126315_v = *it;
			{
				_1dd0c118b_WriteByte(&(*(_self_))._field_Buf, 9LLU);
				static__1bc01d68c_var(&((*_self_.alloc)._field_Buf), _126315_v);
				_1bc0ce550_write(_self_, jule::Str::lit(" = ", 3));
				_1bc0145ea_model((*_self_.alloc)._field_ec, (*((*((*(_126315_v))._field_Value))._field_Data))._field_Model);
				_1bc0ce550_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c0cc7222:;
			++it;
			goto _iter_begin_1c0cc7222;
		}
		_iter_end_1c0cc7222:;
	};
}



inline void _1bc0da68d_initCaller(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1bc0ce550_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1bc0cea06_addIndent(_self_);
	_1bb0a1776_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1ad8e446c_Package>*>((void*)__jule_anon_1c0ccabc6, jule::Ptr<__jule_anon_1c0ccabc6_ctx>::make(__jule_anon_1c0ccabc6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0ccabc6_ctx_handler));
	_1bc0cec04_doneIndent(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1bc0da88b_end(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1bc0ce550_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
	_1bc0da490_initGlobals(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_1dd46cc96_Test) {
		_1bc0ce550_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1bc0ce550_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1bc0ce550_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1bc0dabee_insertBuf(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_, _1dd0b6912_Builder* _130631_buf, jule::I64 _130654_pos) {
	if ((_1dd0c1b5e_Len(_130631_buf) > 0LL)) {
		jule::Slice<jule::U8> _13088_head = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_1dd0c1b5e_Len(&(*(_self_))._field_Buf) + _1dd0c1b5e_Len(_130631_buf))); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
		(_13088_head).append(_1dd0c217b_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _130654_pos));;
		(_13088_head).append(_1dd0c217b_Buf(_130631_buf));;
		(_13088_head).append(_1dd0c217b_Buf(&(*_self_.alloc)._field_Buf).slice(_130654_pos));;
		{
			_1dd0c2434_SetBuf(&(*_self_.alloc)._field_Buf, _13088_head);
		};
	};
}



inline void _1bc0dadec_implementRC(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_1bc0d727d_funcIns(_self_, (*(_1adaacb41_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAddAtomic", 12)))))._field_Instances[0LL], jule::Str::lit("__jule_RCAdd", 12));
		_1bc0d727d_funcIns(_self_, (*(_1adaacb41_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoadAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCLoad", 13));
		_1bc0d727d_funcIns(_self_, (*(_1adaacb41_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDropAtomic", 13)))))._field_Instances[0LL], jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_1bc0d727d_funcIns(_self_, (*(_1adaacb41_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCAdd", 6)))))._field_Instances[0LL], jule::Str());
		_1bc0d727d_funcIns(_self_, (*(_1adaacb41_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCLoad", 7)))))._field_Instances[0LL], jule::Str());
		_1bc0d727d_funcIns(_self_, (*(_1adaacb41_RuntimeFindFn(&((*((*(_self_))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_RCDrop", 7)))))._field_Instances[0LL], jule::Str());
	};
}



inline void _1bc0db0ea_serializeHead(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1bc0d2641_prepareStructures(_self_);
	_1bc0d1dd2_head(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("\n", 1));
	_1bc0d90c6_decls(_self_);
	_1bc0dabee_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1dd0c1b5e_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1dd0c1b5e_Len(&(*_self_.alloc)._field_resultDecls);
	_1bc0ce550_write(_self_, jule::Str::lit("\n", 1));
	_1bc0d9add_structures(_self_);
	_1bc0d9cdb_funcs(_self_);
	_1bc0da68d_initCaller(_self_);
	_1bc0ce550_write(_self_, jule::Str::lit("\n\n", 2));
	_1bc0da292_anonHashes(_self_);
	_1bc0dadec_implementRC(_self_);
	_1bc0dabee_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1dd0c1b5e_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1dd0c1b5e_Len(&(*_self_.alloc)._field_deallocObj);
	_1bc0dabee_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1dd0c1b5e_Len(&(*_self_.alloc)._field_anyObj);
	_1bc0dabee_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1dd0c1b5e_Len(&(*_self_.alloc)._field_anonObj);
	_1bc0dabee_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1dd0c1b5e_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _1bc0db2e8_Serialize(jule::Ptr<_1bc0cdd35_ObjectCoder> _self_) {
	_1bc0db0ea_serializeHead(_self_);
	_1bc0da88b_end(_self_);
}








inline jule::Bool _1bc0dce98_customType_eq(_1bc0dce98_customType *_self_, _1bc0dce98_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1bc0dd350_Str(_1bc0dce98_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1bc0dd691_Equal(jule::Ptr<_1bc0dce98_customType> _self_, jule::Ptr<_1ad9b8596_TypeKind> _2518_k) {
	return false;;
}








inline jule::Bool _1bc0dda8c_typeCoder_eq(_1bc0dda8c_typeCoder *_self_, _1bc0dda8c_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1bc0dda8c_typeCoder> static__1bc0de0dc_new(jule::Ptr<_1bc0cdd35_ObjectCoder>* _5021_oc) {
	jule::Ptr<_1bc0dda8c_typeCoder> _517_tc = jule::new_ptr<_1bc0dda8c_typeCoder>(_1bc0dda8c_typeCoder{._field_oc=(*(_5021_oc)), ._field_rc=jule::Ptr<_1bc0e6677_resultCoder>(nullptr)});;
	(*(_517_tc))._field_rc=static__1bc0e6b83_new(&(_517_tc));
	return _517_tc;;
}



inline void _1bc0de450_toType(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _5727_buf, jule::Str _5754_id) {
	if ((_5754_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_5754_id=_1ad873c8c_RealKindOf(_5754_id);
	};
	_1dd0c0dd3_WriteStr(_5727_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _5754_id[0LL]) && (_5754_id[0LL] <= 122LLU))) {
		_1dd0c118b_WriteByte(_5727_buf, (jule::U8)(_5754_id[0LL] - 32LLU));
	} else {
		_1dd0c118b_WriteByte(_5727_buf, _5754_id[0LL]);
	};
	_1dd0c0dd3_WriteStr(_5727_buf, _5754_id.slice(1LL));
}



inline void _1bc0de7b3_prim(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _7125_buf, jule::Ptr<_1ad9c16ae_Prim> _7148_p) {
	_1bc0de450_toType(_self_, _7125_buf, (*(_7148_p))._field_Kind);
}



inline void _1bc0deb26_tuple(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _7626_buf, jule::Ptr<_1ad9c67a2_Tuple> _7653_t) {
	_1dd0c0dd3_WriteStr(_7626_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_7653_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cec4bc:;
		if (it != expr_end) {
			jule::I64 _788_i = it - expr->begin();
			jule::Ptr<_1ad9b8596_TypeKind> _7815_tk = *it;
			{
				_1bc0e3c90_kind(_self_, _7626_buf, _7815_tk);
				if ((((*(_7653_t))._field_Types.len() - _788_i) > 1LL)) {
					_1dd0c118b_WriteByte(_7626_buf, ',');
				};
			}
			_iter_next_1c0cec4bc:;
			++it;
			_788_i++;
			goto _iter_begin_1c0cec4bc;
		}
		_iter_end_1c0cec4bc:;
	};
	_1dd0c118b_WriteByte(_7626_buf, '>');
}



inline void _1bc0dee89_asSptr(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem) {
	_1dd0c0dd3_WriteStr(_8827_buf, jule::Str::lit("jule::Ptr<", 10));
	_1dd0c0b2a_Write(_8827_buf, _8850_elem);
	_1dd0c118b_WriteByte(_8827_buf, '>');
}



inline void _1bc0e02ec_sptr(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _9525_buf, jule::Ptr<_1ad9c51da_Sptr> _9552_sptr) {
	_1dd0c0dd3_WriteStr(_9525_buf, jule::Str::lit("jule::Ptr<", 10));
	_1bc0e3c90_kind(_self_, _9525_buf, (*(_9552_sptr))._field_Elem);
	_1dd0c118b_WriteByte(_9525_buf, '>');
}



inline void _1bc0e0660_ptr(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _10224_buf, jule::Ptr<_1ad9c89a2_Ptr> _10251_p) {
	;
	if (_1ad9c951e_IsUnsafe(_10251_p.ptr())) {
		_1dd0c0dd3_WriteStr(_10224_buf, jule::Str::lit("void*", 5));
	} else {
		_1bc0e3c90_kind(_self_, _10224_buf, (*(_10251_p))._field_Elem);
		_1dd0c0dd3_WriteStr(_10224_buf, jule::Str::lit("*", 1));
	};
}



inline void _1bc0e09c3_enumDecl(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _11329_buf, jule::Ptr<_1ad805658_Enum> _11356_e) {
	_1bc0e3c90_kind(_self_, _11329_buf, (*((*(_11356_e))._field_Kind))._field_Kind);
}



inline void _1bc0e0d36_typeEnumDecl(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _11833_buf, jule::Ptr<_1ad806d63_TypeEnum> _11860_e) {
	_1dd0c0dd3_WriteStr(_11833_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1bc0e1199_asSlice(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _12228_buf, jule::Ptr<_1ad9b8596_TypeKind> _12255_elem) {
	_1dd0c0dd3_WriteStr(_12228_buf, jule::Str::lit("jule::Slice<", 12));
	_1bc0e3c90_kind(_self_, _12228_buf, _12255_elem);
	_1dd0c118b_WriteByte(_12228_buf, '>');
}



inline void _1bc0e150c_slice(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _12926_buf, jule::Ptr<_1ad9c5bad_Slc> _12953_s) {
	_1bc0e1199_asSlice(_self_, _12926_buf, (*(_12953_s))._field_Elem);
}



inline void _1bc0e1870_mapType(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _13428_buf, jule::Ptr<_1ad9c7352_Map> _13455_m) {
	jule::Ptr<_1ad7159ec_Struct> _1357_s = _1adaad23a_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1ad718857_StructIns> _1367_ins = _1bb0a8805_FindStructGenericInstance(&(_1357_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13455_m))._field_Key; (*it++) = (*_13455_m.alloc)._field_Val; __jule_collection; }));;
	_1dd0c0dd3_WriteStr(_13428_buf, jule::Str::lit("jule::Ptr<", 10));
	static__1bc01d0b5_structureIns(_13428_buf, &(_1367_ins));
	_1dd0c0dd3_WriteStr(_13428_buf, jule::Str::lit(">", 1));
}



inline void _1bc0e2046_structureIns(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _14833_buf, jule::Ptr<_1ad718857_StructIns> _14860_s) {
	if ((!((*((*(_14860_s))._field_Decl))._field_Binded))) {
		static__1bc01d0b5_structureIns(_14833_buf, &(_14860_s));
		return;;
	};
	jule::Ptr<_1ad6e45d0_Directive> _1533_d = _1bb0a6847_FindDirective(&((*(*(_14860_s))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1533_d != nullptr)) {
		_1dd0c0b2a_Write(_14833_buf, _1bc0db67d_concatAllParts((*_1533_d.alloc)._field_Args));
		_1dd0c0dd3_WriteStr(_14833_buf, jule::Str::lit("::", 2));
	};
	static__1bc01d0b5_structureIns(_14833_buf, &(_14860_s));
	if (((*_14860_s.alloc)._field_Generics.len() > 0LL)) {
		_1dd0c118b_WriteByte(_14833_buf, '<');
		{
			auto expr = &((*_14860_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0d0abb2:;
			if (it != expr_end) {
				jule::I64 _1619_i = it - expr->begin();
				jule::Ptr<_1ad9b6de1_InsGeneric> _16116_g = *it;
				{
					_1bc0e3c90_kind(_self_, _14833_buf, (*(_16116_g))._field_Kind);
					if ((((*_14860_s.alloc)._field_Generics.len() - _1619_i) > 1LL)) {
						_1dd0c118b_WriteByte(_14833_buf, ',');
					};
				}
				_iter_next_1c0d0abb2:;
				++it;
				_1619_i++;
				goto _iter_begin_1c0d0abb2;
			}
			_iter_end_1c0d0abb2:;
		};
		_1dd0c118b_WriteByte(_14833_buf, '>');
	};
}



inline void _1bc0e23a9_array(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _17226_buf, jule::Ptr<_1ad9c7ece_Arr> _17253_a) {
	_1dd0c0dd3_WriteStr(_17226_buf, jule::Str::lit("jule::Array<", 12));
	_1bc0e3c90_kind(_self_, _17226_buf, (*(_17253_a))._field_Elem);
	_1dd0c118b_WriteByte(_17226_buf, ',');
	_1dd0c0dd3_WriteStr(_17226_buf, _1ab15d6ab_Itoa((*_17253_a.alloc)._field_N));
	_1dd0c118b_WriteByte(_17226_buf, '>');
}



inline void _1bc0e2a80_paramIns(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _19529_buf, jule::Ptr<_1ad7e96e6_ParamIns>* _19557_p) {
	if ((*((*((*(_19557_p))))._field_Decl))._field_Variadic) {
		_1dd0c0dd3_WriteStr(_19529_buf, jule::Str::lit("jule::Slice<", 12));
		_1bc0e3c90_kind(_self_, _19529_buf, (*((*(_19557_p))))._field_Kind);
		_1dd0c118b_WriteByte(_19529_buf, '>');
	} else {
		_1bc0e3c90_kind(_self_, _19529_buf, (*((*(_19557_p))))._field_Kind);
	};
	if ((*((*((*(_19557_p))))._field_Decl))._field_Reference) {
		_1dd0c118b_WriteByte(_19529_buf, '*');
	};
}



inline void _1bc0e3256_funcInsResult(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _22734_s, jule::Ptr<_1ad7ea84b_FnIns>* _22760_f) {
	if (_1ad7e7c44_IsVoid((*((*(_22760_f))))._field_Decl.ptr())) {
		if ((*(*((*(_22760_f))))._field_Decl.alloc)._field_Exceptional) {
			_1dd0c0dd3_WriteStr(_22734_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_1dd0c0dd3_WriteStr(_22734_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_22760_f))))._field_Decl.alloc)._field_Exceptional) {
		_1dd0c0dd3_WriteStr(_22734_s, jule::Str::lit("jule::Exceptional<", 18));
		_1bc0e8c40_codeMut1((*(_self_))._field_rc.ptr(), _22734_s, &((*((*(_22760_f))))._field_Result));
		_1dd0c118b_WriteByte(_22734_s, '>');
		return;;
	};
	_1bc0e8c40_codeMut1((*(_self_))._field_rc, _22734_s, &((*((*(_22760_f))))._field_Result));
}



inline void _1bc0e35b9_anonFunc(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _24529_buf, jule::Ptr<_1ad7ea84b_FnIns> _24556_f) {
	if ((((*(_24556_f))._field_Result != nullptr) && (_1ad9bca73_Tup((*(_24556_f))._field_Result) != nullptr))) {
		_1bc0d1310_pushResultIns((*(_self_))._field_oc, &(_24556_f));
	};
	_1bc0e3256_funcInsResult(_self_, _24529_buf, &(_24556_f));
	if (((*_24556_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_1dd0c118b_WriteByte(_24529_buf, ',');
	{
		auto expr = &((*_24556_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d1c696:;
		if (it != expr_end) {
			jule::I64 _2548_i = it - expr->begin();
			jule::Ptr<_1ad7e96e6_ParamIns> _25415_param = *it;
			{
				if (_1ad7e6418_IsSelf((*(_25415_param))._field_Decl.ptr())) {
					goto _iter_next_1c0d1c696;
				};
				_1bc0e2a80_paramIns(_self_, _24529_buf, &(_25415_param));
				if ((((*_24556_f.alloc)._field_Params.len() - _2548_i) > 1LL)) {
					_1dd0c118b_WriteByte(_24529_buf, ',');
				};
			}
			_iter_next_1c0d1c696:;
			++it;
			_2548_i++;
			goto _iter_begin_1c0d1c696;
		}
		_iter_end_1c0d1c696:;
	};
}



inline void _1bc0e392c_func(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _26625_buf, jule::Ptr<_1ad7ea84b_FnIns> _26652_f) {
	_1dd0c0dd3_WriteStr(_26625_buf, jule::Str::lit("jule::Fn<", 9));
	_1bc0e35b9_anonFunc(_self_, _26625_buf, _26652_f);
	_1dd0c118b_WriteByte(_26625_buf, '>');
}



inline void _1bc0e3c90_kind(_1bc0dda8c_typeCoder* _self_, _1dd0b6912_Builder* _27325_buf, jule::Ptr<_1ad9b8596_TypeKind> _27352_k) {
	{
		
		if ((_1ad9bc2c0_Struct(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d25a45:;
			{
				_1bc0e2046_structureIns(_self_, _27325_buf, _1ad9bc2c0_Struct(_27352_k));
				return;;
			}
		}
		else if (_1ad9b9443_Binded(_27352_k.ptr())) {
			_case_begin_1c0d25ade:;
			{
				_1dd0c0dd3_WriteStr(_27325_buf, (*_27352_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1ad9bac4c_Prim(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d25b55:;
			{
				_1bc0de7b3_prim(_self_, _27325_buf, _1ad9bac4c_Prim(_27352_k));
				return;;
			}
		}
		else if ((_1ad9bca73_Tup(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d25bbb:;
			{
				_1bc0deb26_tuple(_self_, _27325_buf, _1ad9bca73_Tup(_27352_k));
				return;;
			}
		}
		else if ((_1ad9baed3_Sptr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d25c32:;
			{
				_1bc0e02ec_sptr(_self_, _27325_buf, _1ad9baed3_Sptr(_27352_k));
				return;;
			}
		}
		else if ((_1ad9bb269_Ptr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d25ca9:;
			{
				_1bc0e0660_ptr(_self_, _27325_buf, _1ad9bb269_Ptr(_27352_k));
				return;;
			}
		}
		else if ((_1ad9bb500_Enum(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d25d31:;
			{
				_1bc0e09c3_enumDecl(_self_, _27325_buf, _1ad9bb500_Enum(_27352_k));
				return;;
			}
		}
		else if ((_1ad9bb786_TypeEnum(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d25da8:;
			{
				_1bc0e0d36_typeEnumDecl(_self_, _27325_buf, _1ad9bb786_TypeEnum(_27352_k));
				return;;
			}
		}
		else if ((_1ad9bbca3_Slc(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d25e30:;
			{
				_1bc0e150c_slice(_self_, _27325_buf, _1ad9bbca3_Slc(_27352_k));
				return;;
			}
		}
		else if ((_1ad9bc7dc_Map(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d25ea7:;
			{
				_1bc0e1870_mapType(_self_, _27325_buf, _1ad9bc7dc_Map(_27352_k));
				return;;
			}
		}
		else if ((_1ad9bc556_Trait(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d2602e:;
			{
				_1dd0c0dd3_WriteStr(_27325_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1ad9bba1c_Arr(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d260a6:;
			{
				_1bc0e23a9_array(_self_, _27325_buf, _1ad9bba1c_Arr(_27352_k));
				return;;
			}
		}
		else if ((_1ad9bc039_Fn(_27352_k.ptr()) != nullptr)) {
			_case_begin_1c0d2612d:;
			{
				_1bc0e392c_func(_self_, _27325_buf, _1ad9bc039_Fn(_27352_k));
				return;;
			}
		}
		_match_end_1c0d25858:;
	};
	{
		auto &_match_expr{ (*(_27352_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data29)) {
			_case_begin_1c0d261b6:;
			{
				_1dd0c0dd3_WriteStr(_27325_buf, (*((*(_27352_k))._field_Kind.cast_ptr<_1bc0dce98_customType>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data29)))._field_kind);
			}
		}
		else {
			_case_begin_1c0d2e774:;
			{
				_1dd0c0dd3_WriteStr(_27325_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1c0d2e70d:;
	};
}








inline jule::Bool _1bc0e6677_resultCoder_eq(_1bc0e6677_resultCoder *_self_, _1bc0e6677_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1bc0e6677_resultCoder> static__1bc0e6b83_new(jule::Ptr<_1bc0dda8c_typeCoder>* _34121_tc) {
	return jule::new_ptr<_1bc0e6677_resultCoder>(_1bc0e6677_resultCoder{._field_tc=(*(_34121_tc))});;
}



inline void _1bc0e6ee6_ptr(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _34524_s, jule::Ptr<_1ad9c89a2_Ptr> _34549_p) {
	_1dd0c0dd3_WriteStr(_34524_s, jule::Str::lit("p", 1));
	_1bc0e88cc_codeMut(_self_, _34524_s, &((*(_34549_p))._field_Elem));
}



inline void _1bc0e7359_sptr(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _35025_s, jule::Ptr<_1ad9c51da_Sptr> _35050_p) {
	_1dd0c0dd3_WriteStr(_35025_s, jule::Str::lit("x", 1));
	_1bc0e88cc_codeMut(_self_, _35025_s, &((*(_35050_p))._field_Elem));
}



inline void _1bc0e76bc_mapType(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _35528_s, jule::Ptr<_1ad9c7352_Map> _35553_p) {
	_1dd0c0dd3_WriteStr(_35528_s, jule::Str::lit("m", 1));
	_1bc0e88cc_codeMut(_self_, _35528_s, &((*(_35553_p))._field_Key));
	_1bc0e88cc_codeMut(_self_, _35528_s, &((*_35553_p.alloc)._field_Val));
}



inline void _1bc0e7a30_slice(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _36126_s, jule::Ptr<_1ad9c5bad_Slc> _36151_slc) {
	_1dd0c0dd3_WriteStr(_36126_s, jule::Str::lit("s", 1));
	_1bc0e88cc_codeMut(_self_, _36126_s, &((*(_36151_slc))._field_Elem));
}



inline void _1bc0e7d93_arr(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _36624_s, jule::Ptr<_1ad9c7ece_Arr> _36649_arr) {
	_1dd0c0dd3_WriteStr(_36624_s, jule::Str::lit("a", 1));
	_1dd0c0dd3_WriteStr(_36624_s, _1ab15d3e2_FmtInt(static_cast<jule::I64>((*(_36649_arr))._field_N), 16LL));
	_1bc0e88cc_codeMut(_self_, _36624_s, &((*_36649_arr.alloc)._field_Elem));
}



inline void _1bc0e8206_func(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _37225_s, jule::Ptr<_1ad7ea84b_FnIns> _37250_f) {
	_1dd0c0dd3_WriteStr(_37225_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_37250_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d36c10:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e96e6_ParamIns> _37415_p = *it;
			{
				if ((*((*(_37415_p))._field_Decl))._field_Reference) {
					_1dd0c0dd3_WriteStr(_37225_s, jule::Str::lit("r", 1));
				};
				_1bc0e88cc_codeMut(_self_, _37225_s, &((*_37415_p.alloc)._field_Kind));
			}
			_iter_next_1c0d36c10:;
			++it;
			goto _iter_begin_1c0d36c10;
		}
		_iter_end_1c0d36c10:;
	};
	if (((*_37250_f.alloc)._field_Result != nullptr)) {
		_1bc0e88cc_codeMut(_self_, _37225_s, &((*_37250_f.alloc)._field_Result));
	};
}



inline void _1bc0e8569_tup(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _38524_s, jule::Ptr<_1ad9c67a2_Tuple> _38549_tup) {
	{
		auto expr = &((*(_38549_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d39394:;
		if (it != expr_end) {
			jule::Ptr<_1ad9b8596_TypeKind> _38615_t = *it;
			{
				_1dd0c0dd3_WriteStr(_38524_s, jule::Str::lit("__jule_tuple_", 13));
				_1bc0e88cc_codeMut(_self_, _38524_s, &(_38615_t));
			}
			_iter_next_1c0d39394:;
			++it;
			goto _iter_begin_1c0d39394;
		}
		_iter_end_1c0d39394:;
	};
}



inline void _1bc0e88cc_codeMut(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _39228_s, jule::Ptr<_1ad9b8596_TypeKind>* _39254_t) {
	if (_1ad9b9443_Binded((*(_39254_t)).ptr())) {
		_1dd0c0dd3_WriteStr(_39228_s, jule::Str::lit("b", 1));
		_1dd0c0dd3_WriteStr(_39228_s, (*((*(_39254_t))))._field_BindIdent);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39254_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data28)) {
			_case_begin_1c0d3aa38:;
			{
				_1bc0e6ee6_ptr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ad9c89a2_Ptr>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data23)) {
			_case_begin_1c0d3b6c6:;
			{
				_1bc0e7359_sptr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ad9c51da_Sptr>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data26)) {
			_case_begin_1c0d3b73c:;
			{
				_1bc0e76bc_mapType(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ad9c7352_Map>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data24)) {
			_case_begin_1c0d3b7a3:;
			{
				_1bc0e7a30_slice(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ad9c5bad_Slc>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data27)) {
			_case_begin_1c0d3b819:;
			{
				_1bc0e7d93_arr(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ad9c7ece_Arr>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1)) {
			_case_begin_1c0d3bc59:;
			{
				_1bc0e8206_func(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ad7ea84b_FnIns>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data3)) {
			_case_begin_1c0d3bcc0:;
			{
				jule::Ptr<_1ad805658_Enum> _4124_te = (*((*(_39254_t))))._field_Kind.cast_ptr<_1ad805658_Enum>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data3);;
				static__1bc01b8dd_toOut(_39228_s, (*(_4124_te))._field_Ident, static_cast<jule::Uintptr>(_4124_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data4)) {
			_case_begin_1c0d3bd36:;
			{
				jule::Ptr<_1ad806d63_TypeEnum> _4154_te = (*((*(_39254_t))))._field_Kind.cast_ptr<_1ad806d63_TypeEnum>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data4);;
				static__1bc01b8dd_toOut(_39228_s, (*(_4154_te))._field_Ident, static_cast<jule::Uintptr>(_4154_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)) {
			_case_begin_1c0d3bd9c:;
			{
				jule::Ptr<_1ad718857_StructIns> _4188_si = (*((*(_39254_t))))._field_Kind.cast_ptr<_1ad718857_StructIns>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0);;
				static__1bc01d0b5_structureIns(_39228_s, &(_4188_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data2)) {
			_case_begin_1c0d3be13:;
			{
				jule::Ptr<_1ad802ea2_Trait> _4218_trt = (*((*(_39254_t))))._field_Kind.cast_ptr<_1ad802ea2_Trait>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data2);;
				static__1bc01c702_traitDecl(_39228_s, _4218_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)) {
			_case_begin_1c0d3be79:;
			{
				_1dd0c0dd3_WriteStr(_39228_s, (*((*((*(_39254_t))))._field_Kind.cast_ptr<_1ad9c16ae_Prim>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data25)) {
			_case_begin_1c0d3bee0:;
			{
				_1bc0e8569_tup(_self_, _39228_s, (*((*(_39254_t))))._field_Kind.cast_ptr<_1ad9c67a2_Tuple>((jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1c0d3b660:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/type.jule:428:4"));;
			}
		}
		_match_end_1c0d3b5e9:;
	};
}



inline void _1bc0e8c40_codeMut1(_1bc0e6677_resultCoder* _self_, _1dd0b6912_Builder* _43229_s, jule::Ptr<_1ad9b8596_TypeKind>* _43255_t) {
	jule::Ptr<_1ad9c67a2_Tuple> _4337_tup = _1ad9bca73_Tup((*(_43255_t)).ptr());;
	if ((_4337_tup != nullptr)) {
		_1bc0e8569_tup(_self_, _43229_s, _4337_tup);
	} else {
		_1bc0e3c90_kind((*(_self_))._field_tc.ptr(), _43229_s, (*(_43255_t)));
	};
}



inline jule::Slice<jule::U8> _1bc0e904d_code(_1bc0e6677_resultCoder* _self_, jule::Ptr<_1ad9b8596_TypeKind>* _44125_t) {
	_1dd0b6912_Builder _4427_s = static__1dd0b74d4_New(20LL);;
	_1bc0e88cc_codeMut(_self_, &(_4427_s), _44125_t);
	return _1dd0c217b_Buf(&_4427_s);;
}








inline jule::Bool _1c0d47d20_Flag_eq(_1c0d47d20_Flag *_self_, _1c0d47d20_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c0d47b77_Name(_1c0d47d20_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c0d4810b_What(_1c0d47d20_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c0d4824e_Reset(_1c0d47d20_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c0d48392_Short(_1c0d47d20_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c0d4b63c_Flag_eq(_1c0d4b63c_Flag *_self_, _1c0d4b63c_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c0d4b2b8_Name(_1c0d4b63c_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c0d4b928_What(_1c0d4b63c_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c0d4ba6b_Reset(_1c0d4b63c_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c0d4bbae_Short(_1c0d4b63c_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c0d4ed49_Flag_eq(_1c0d4ed49_Flag *_self_, _1c0d4ed49_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c0d4e9c5_Name(_1c0d4ed49_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c0d50135_What(_1c0d4ed49_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c0d50278_Reset(_1c0d4ed49_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c0d503bb_Short(_1c0d4ed49_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c0d5359a_Flag_eq(_1c0d5359a_Flag *_self_, _1c0d5359a_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c0d53226_Name(_1c0d5359a_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c0d53886_What(_1c0d5359a_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c0d539c9_Reset(_1c0d5359a_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c0d53b1c_Short(_1c0d5359a_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c0d56ca7_Flag_eq(_1c0d56ca7_Flag *_self_, _1c0d56ca7_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c0d56933_Name(_1c0d56ca7_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c0d57093_What(_1c0d56ca7_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c0d571d6_Reset(_1c0d56ca7_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c0d57329_Short(_1c0d56ca7_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1bc161ea6_FlagSet> static__1bc1622c5_New(void) {
	return jule::new_ptr<_1bc161ea6_FlagSet>(_1bc161ea6_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1bc16277b_FindFlag(_1bc161ea6_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d61b2a:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1bc160416_CommonFlagMptrData*)_7215_flag.safe_type())->_1bc12e5b1_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1c0d61b2a:;
			++it;
			goto _iter_begin_1c0d61b2a;
		}
		_iter_end_1c0d61b2a:;
	};
	return nullptr;;
}



inline jule::Trait _1bc162abc_FindFlagShort(_1bc161ea6_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d62345:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1bc160416_CommonFlagMptrData*)_8215_flag.safe_type())->_1bc12e704_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1c0d62345:;
			++it;
			goto _iter_begin_1c0d62345;
		}
		_iter_end_1c0d62345:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1bc163194_Parse(_1bc161ea6_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1bc16496a_argParser _1167_ap = _1bc16496a_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1bc165e99_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1c0d56ca7_Flag> _1c0dd399e_addFlagCommon(_1bc161ea6_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1bc16277b_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1bc162abc_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1c0d56ca7_Flag> _1407_flag = jule::new_ptr<_1c0d56ca7_Flag>(_1c0d56ca7_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1c0d5359a_Flag> _1c0ddca74_addFlagCommon(_1bc161ea6_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1bc16277b_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1bc162abc_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1c0d5359a_Flag> _1407_flag = jule::new_ptr<_1c0d5359a_Flag>(_1c0d5359a_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1c0dd1282_AddVar(_1bc161ea6_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1c0d56ca7_Flag> _1717_flag = _1c0dd399e_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1c0dda38a_AddVar(_1bc161ea6_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1c0d5359a_Flag> _1717_flag = _1c0ddca74_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1c0d69a78_parseInteger(_1bc16496a_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1c0d6cad1:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1dd0a3976_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c0d6c828:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1dd0a3976_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c0d6c1da:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1dd0a3976_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c0d6c251:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1c0d6c2b7:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c0d6c174:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c0d6c064:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1c0d72652_parseInteger(_1bc16496a_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1c0d75743:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1dd0a3976_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c0d7548a:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1dd0a3976_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c0d74d4c:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1dd0a3976_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c0d74db3:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1c0d74e29:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c0d74cd6:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c0d74bc6:;
	};
	return __jule_func_result;;
}



inline jule::Str _1bc1652b7_getData(_1bc16496a_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1bc16553c_processFlag(_1bc16496a_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data3)) {
			_case_begin_1c0d66c2e:;
			{
				jule::Ptr<_1c0d5359a_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1c0d5359a_Flag>((jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1c0d66bb8:;
	};
	jule::Str _2203_data = _1bc1652b7_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1bc160416_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1bc12e5b1_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type5)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data0)) {
			_case_begin_1c0d68b32:;
			{
				jule::Ptr<_1c0d47d20_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1c0d47d20_Flag>((jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1c0d69a78_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1c0d6d582, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1bc160416_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1bc12e5b1_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data1)) {
			_case_begin_1c0d6858d:;
			{
				jule::Ptr<_1c0d4b63c_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1c0d4b63c_Flag>((jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c0d72652_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1c0d761e4, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1bc160416_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1bc12e5b1_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data2)) {
			_case_begin_1c0d68b98:;
			{
				jule::Ptr<_1c0d4ed49_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1c0d4ed49_Flag>((jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1ab15376c_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1bc160416_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1bc12e5b1_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type5)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data4)) {
			_case_begin_1c0d68c0e:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1c0d56ca7_Flag>((jule::Trait::Type*)&_1bc160416_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1c0d683c3:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1bc1657e5_singleDash(_1bc16496a_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1c0d7ba68:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1bc162abc_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + __jule_strFromRune(_25710_r)), &__jule_any_type5)};
				};
				({
					auto except = _1bc16553c_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1c0d7ba68:;
			it += len;
			goto _iter_begin_1c0d7ba68;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1bc165a9d_doubleDash(_1bc16496a_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	jule::Trait _2707_flag = _1bc16277b_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type5)};
	};
	return _1bc16553c_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1bc165c9b_tryArg(_1bc16496a_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1bc165a9d_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1bc1657e5_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1bc165e99_parse(_1bc16496a_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1bc165c9b_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1c0d817c6:;
	}
	_iter_end_1c0d817c6:;;
	return jule::VoidExceptional{};
}







inline jule::Ptr<_1dd40e1bb_Cmd> static__1dd40e60b_New(jule::Str _2616_path) {
	return jule::new_ptr<_1dd40e1bb_Cmd>(_1dd40e1bb_Cmd{._field_attrs=_1dd462bd1_cmdAttrs{._field_pid=-1LL}, ._field_path=_2616_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _1dd40e809_Spawn(_1dd40e1bb_Cmd* _self_) {
	return _1dd46397e_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1dd40ec8d_Wait(_1dd40e1bb_Cmd* _self_) {
	return _1dd463e13_wait(_self_);
}



inline jule::VoidExceptional _1dd46397e_spawn(_1dd40e1bb_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is already spawned", 35) + jule::Str("\nlocation: std/process/cmd_unix.jule:84:4"));;
	};
	jule::Str _863_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _877_pipe;;
	if ((pipe((&(_877_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	if ((_1db94953d_Fcntl(static_cast<jule::I64>(_877_pipe[1LL]), F_SETFD, (fcntl(static_cast<jule::I64>(_877_pipe[1LL]), F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_1db95c73d_Close(static_cast<jule::I64>(_877_pipe[0LL]));
		_1db95c73d_Close(static_cast<jule::I64>(_877_pipe[1LL]));
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1bd17656e:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1bd17575a:;
			{
				_1db95c73d_Close(static_cast<jule::I64>(_877_pipe[0LL]));
				jule::Slice<jule::Str> _1028_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
				_1028_args[0LL]=_863_path;
				(_1028_args).append((*(_self_))._field_Args);;
				({
					auto except = _1dd4636e8_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_1dd4634b7_execvp(&(_863_path), &(_1028_args));
				jule::Str _1074_code = _1dd45de74_Itoa(_1db5d9695_GetLastErrno());;
				{
					_1db95cae5_Write(static_cast<jule::I64>(_877_pipe[1LL]), (&(_1074_code[0LL])), static_cast<jule::U64>(_1074_code.len()));
				};
				_1db95c73d_Close(static_cast<jule::I64>(_877_pipe[1LL]));
				_1dd465035_Exit(1LL);
			}
		}
		else {
			_case_begin_1bd16d3ce:;
			{
				_1db95c73d_Close(static_cast<jule::I64>(_877_pipe[1LL]));
				jule::Array<jule::U8,16> _11312_buf = ({ auto __jule_collection = jule::Array<jule::U8,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
				jule::I64 _1144_n = _1db95c364_Read(static_cast<jule::I64>(_877_pipe[0LL]), (&(_11312_buf[0LL])), static_cast<jule::U64>(16LLU));;
				_1db95c73d_Close(static_cast<jule::I64>(_877_pipe[0LL]));
				if ((_1144_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _1185_code;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd45592c_AtoiBp((&(_11312_buf[0LL])), _1144_n);
						_1185_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_1dd4646e9_processErrorFromCode(_1185_code), &__jule_any_type0)};
				};
			}
		}
		_match_end_1bd17344a:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _1dd463e13_wait(_1dd40e1bb_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is not spawned", 31) + jule::Str("\nlocation: std/process/cmd_unix.jule:136:4"));;
	};
	jule::I64 _1387_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_1387_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_1dd464870_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>{.result=WEXITSTATUS(_1387_stat)};;
}







inline __jule_tuple_x_1bb09dcd4_IR__jule_tuple_s_1dd356476_Log static__1bb09e2ac_Build(jule::Str _3018_path, jule::I64 _3029_flags) {
	__jule_tuple_x_1bb09dcd4_IR__jule_tuple_s_1dd356476_Log __jule_func_result;
	jule::Ptr<_1bb09b254_Importer> _317_importer = static__1bb09b683_New(_1bb0a0c5e_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1ad6e325a_AST>> _337_files;
	jule::Slice<_1dd356476_Log> _3318_logs;
	({
		__jule_tuple_sx_1ad6e325a_AST__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb09cb6d_ImportPackage(_317_importer.ptr(), _3018_path, true);
		_337_files = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Str _373_root = _3018_path;;
	if ((_337_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad6e325a_AST> _457_firstFile = _337_files[0LL];;
	_1bb0a1017_pushRuntimeToAST(&(_457_firstFile));
	jule::Ptr<_1ad8e446c_Package> _487_pkg;
	({
		__jule_tuple_x_1ad8e446c_Package__jule_tuple_s_1dd356476_Log __jule_assign_result = _1ad9e01d3_AnalyzePackage(_337_files, jule::Trait(_317_importer, (jule::Trait::Type*)&_1ad8ddbe7_Importer_mptr_data0), _3029_flags);
		_487_pkg = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1bb09dcd4_IR> _537_ir = jule::new_ptr<_1bb09dcd4_IR>(_1bb09dcd4_IR{._field_Root=_373_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_487_pkg, ._field_Runtime=jule::Ptr<_1ad8e1bea_ImportInfo>(nullptr), ._field_Used=_1bb09b919_AllPackages(_317_importer), ._field_Ordered=_1bb0a8e76_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1ad7159ec_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr)}});;
	(*(_537_ir))._field_Passes=_1bb0a0a50_getAllUniquePasses(&((*_537_ir.alloc)._field_Main), (*_537_ir.alloc)._field_Used);
	(*_537_ir.alloc)._field_Runtime=(*((*(_487_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _537_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1bb09e796_appendStructs(_1bb09dcd4_IR* _self_, jule::Ptr<_1ad8e446c_Package>* _6830_p, jule::Slice<jule::Ptr<_1ad7159ec_Struct>>* _6854_buffer) {
	{
		auto expr = &((*((*(_6830_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02b7b31:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _6915_f = *it;
			{
				{
					auto expr = &((*(_6915_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c02b858d:;
					if (it != expr_end) {
						jule::Ptr<_1ad7159ec_Struct> _7016_s = *it;
						{
							if ((!((*(_7016_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1ad7159ec_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push(_7016_s); };
							};
						}
						_iter_next_1c02b858d:;
						++it;
						goto _iter_begin_1c02b858d;
					}
					_iter_end_1c02b858d:;
				};
			}
			_iter_next_1c02b7b31:;
			++it;
			goto _iter_begin_1c02b7b31;
		}
		_iter_end_1c02b7b31:;
	};
}



inline jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _1bb09ea2c_GetAllStructures(_1bb09dcd4_IR* _self_) {
	jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _8111_buffer = nullptr;;
	_1bb09e796_appendStructs(_self_, &((*(_self_))._field_Main), &(_8111_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02b9748:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _8315_u = *it;
			{
				if ((!((*(_8315_u))._field_Binded))) {
					_1bb09e796_appendStructs(_self_, &((*_8315_u.alloc)._field_Package), &(_8111_buffer));
				};
			}
			_iter_next_1c02b9748:;
			++it;
			goto _iter_begin_1c02b9748;
		}
		_iter_end_1c02b9748:;
	};
	return _8111_buffer;;
}



inline void _1bb09ed90_appendGlobals(_1bb09dcd4_IR* _self_, jule::Ptr<_1ad8e446c_Package>* _9130_p, jule::Slice<jule::Ptr<_1ad933a83_Var>>* _9154_buffer) {
	{
		auto expr = &((*((*(_9130_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02badcb:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _9215_f = *it;
			{
				{
					auto expr = &((*(_9215_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c02bb838:;
					if (it != expr_end) {
						jule::Ptr<_1ad933a83_Var> _9316_v = *it;
						{
							if (((((*(_9316_v))._field_Token != nullptr) && (!((*_9316_v.alloc)._field_Binded))) && (!((*_9316_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1ad933a83_Var>> &__jule_push_dest = (*(_9154_buffer)); __jule_push_dest.push(_9316_v); };
							};
						}
						_iter_next_1c02bb838:;
						++it;
						goto _iter_begin_1c02bb838;
					}
					_iter_end_1c02bb838:;
				};
			}
			_iter_next_1c02badcb:;
			++it;
			goto _iter_begin_1c02badcb;
		}
		_iter_end_1c02badcb:;
	};
}



inline jule::Slice<jule::Ptr<_1ad933a83_Var>> _1bb0a0126_GetAllGlobals(_1bb09dcd4_IR* _self_) {
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _10411_buffer = nullptr;;
	_1bb09ed90_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10411_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02bd263:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _10615_u = *it;
			{
				if ((!((*(_10615_u))._field_Binded))) {
					_1bb09ed90_appendGlobals(_self_, &((*_10615_u.alloc)._field_Package), &(_10411_buffer));
				};
			}
			_iter_next_1c02bd263:;
			++it;
			goto _iter_begin_1c02bd263;
		}
		_iter_end_1c02bd263:;
	};
	return _10411_buffer;;
}



inline void _1bb0a0324_Order(_1bb09dcd4_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1bb0a0126_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1bb09ea2c_GetAllStructures(_self_);
	_1c02bed69_order((*(_self_))._field_Ordered._field_Globals);
	_1c02c094c_order((*(_self_))._field_Ordered._field_Structs);
}











inline void _1db909564_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1db939d47_BytePtrToStr(jule::U8* _6524_s) {
	if ((_6524_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _696_n = 0LL;;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {};
	};
	if ((_696_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _776_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_696_n, _696_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_696_n=0LL;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {
			{
				_776_buf[_696_n]=_6524_s[_696_n];
			}
		_iter_next_1bc193bb9:;
		}
		_iter_end_1bc193bb9:;;
	};
	return __jule_bytesToStr(_776_buf);;
}



inline jule::Slice<jule::U8> _1db93a0cd_StrToBytes(jule::Str _9015_s) {
	{
		auto expr = &(_9015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc1941b4:;
		if (it != expr_end) {
			jule::I64 _916_i = it - expr->begin();
			jule::U8 *_919_b = it;
			{
				if (((*(_919_b)) == 0LLU)) {
					jule::Slice<jule::U8> _938_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_916_i + 1LL), (_916_i + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
					jule::copy(_938_bytes, _9015_s.slice(0LL, _938_bytes.len()));
					return _938_bytes;;
				};
			}
			_iter_next_1bc1941b4:;
			++it;
			_916_i++;
			goto _iter_begin_1bc1941b4;
		}
		_iter_end_1bc1941b4:;
	};
	jule::Slice<jule::U8> _986_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_9015_s.len() + 1LL), (_9015_s.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_986_bytes, _9015_s);
	return _986_bytes;;
}



inline jule::I64 _1db5d9695_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _1db94953d_Fcntl(jule::I64 _5510_handle, jule::I64 _5523_cmd, jule::I64 _5533_arg) {
	return fcntl(_5510_handle, _5523_cmd, _5533_arg);;
}



inline jule::I64 _1db9498b2_Stat(jule::U8* _6016_path, struct stat* _6033_stat) {
	return stat(((char*)(_6016_path)), _6033_stat);;
}



inline jule::I64 _1db949ce1_Open(jule::U8* _6516_path, jule::I64 _6529_flag, jule::I64 _6540_mode) {
	return open(((char*)(_6516_path)), _6529_flag, _6540_mode);;
}



inline jule::U8* _1db94a165_Getcwd(jule::U8* _7118_buff, jule::U64 _7131_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7118_buff)), _7131_bufflen)));;
}



inline DIR* _1db94a660_Opendir(jule::U8* _7619_path) {
	return opendir(((char*)(_7619_path)));;
}



inline struct dirent* _1db94a83b_Readdir(DIR* _7923_dir) {
	return readdir(_7923_dir);;
}



inline jule::I64 _1db94aad3_Closedir(DIR* _8224_dir) {
	return closedir(_8224_dir);;
}



inline jule::I64 _1db94b4da_Mkdir(jule::U8* _9117_path, jule::I64 _9130_mode) {
	return mkdir(((char*)(_9117_path)), _9130_mode);;
}



inline jule::I64 _1db94b7a4_Rmdir(jule::U8* _9617_path) {
	return rmdir(((char*)(_9617_path)));;
}



inline jule::I64 _1db94ba6d_Unlink(jule::U8* _9918_path) {
	return unlink(((char*)(_9918_path)));;
}



inline jule::I64 _1db95c364_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _1db95c73d_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _1db95cae5_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _1db95cd26_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Str _1db984314_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1bc1e70b3_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _1db990188_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1bc1e70b3_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _1db99041e_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1db984314_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _1db9906d8_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline __jule_tuple_i32__jule_tuple_int _1dbaa8e3e_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1dbaa7ba7_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_1dbaa825c_acceptRange _1962_accept = _1dbaa8603_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1dbaa9280_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1dbaa7ba7_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_1dbaa825c_acceptRange _2432_accept = _1dbaa8603_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1dbaa97d0_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1dbaaaeeb_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1bc238588;
			};
		}
	_iter_next_1bc238588:;
	}
	_iter_end_1bc238588:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa9280_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1dbaaa32a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _1dbaaa69e_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1dbaaa69e_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1bb331b38:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1bb3307e6:;
			{
				_41242_r=128LL;
				goto _case_begin_1bb33085c;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1bb33085c:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1bb330087:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1bb330010:;
	};
}



inline jule::I64 _1dbaaac32_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1bb33a081;
			};
			jule::U8 _4823_x = _1dbaa7ba7_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1bb33a081;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1bb33a081;
			};
			_1dbaa825c_acceptRange _4923_accept = _1dbaa8603_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1bb33a081:;
	}
	_iter_end_1bb33a081:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1dbaaaeeb_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1dbc08de6_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _1dbc1177d_Len64(_6119_x));;
}



inline jule::I64 _1dbc09d3c_TrailingZeros(jule::U64 _8318_x) {
	;
	return _1dbc0a9db_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _1dbc0a722_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_1dbc09534__DE_BRUIJN32_TAB[static_cast<jule::I64>(((jule::U32)((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _1dbc0a9db_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_1dbc09ac8__DE_BRUIJN64_TAB[static_cast<jule::I64>(((jule::U64)((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _1dbc114b4_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x=(_35214_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x=(_35214_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _1dbc1177d_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x=(_36614_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x=(_36614_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x=(_36614_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dbc1251a_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dbc13d24_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5012_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5022_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5032_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5042_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5052_w0 = (jule::U64)(_5012_x0 * _5032_y0);;
	jule::U64 _5062_t = (jule::U64)((jule::U64)(_5022_x1 * _5032_y0) + (_5052_w0 >> 32LLU));;
	jule::U64 _5076_w1 = (_5062_t & 4294967295LLU);;
	jule::U64 _5082_w2 = (_5062_t >> 32LLU);;
	_5076_w1+=(jule::U64)(_5012_x0 * _5042_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5022_x1 * _5042_y1) + _5082_w2) + (_5076_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _1dbab086e__coSpawn(_1319_func, _1334_args);;
}



inline jule::I64 _205e3dcd2_randInt(jule::U64 _716_seed, jule::I64 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U64 _172_p2 = static_cast<jule::U64>(_162_p1);;
	return ({ jule::I64 __jule_x = static_cast<jule::I64>((({ jule::U64 __jule_x = _172_p2; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I64 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); });;
}



inline jule::Bool _1bc38ea41_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1bc3917e0:;
	}
	_iter_end_1bc3917e0:;;
	return true;;
}

inline jule::Bool _1bc3dd100_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1bc3de7e9:;
	}
	_iter_end_1bc3de7e9:;;
	return true;;
}

inline jule::Bool _1bd438237_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1bd4398dc:;
	}
	_iter_end_1bd4398dc:;;
	return true;;
}

inline jule::Bool _1c0641c57_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1c06439b2:;
	}
	_iter_end_1c06439b2:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void _1db9769aa__handleRW(jule::Slice<jule::U8>* _1615_b) {
	if (((*(_1615_b)).len() > 1073741824LL)) {
		{
			((*((&((*(_1615_b))))))).mut_slice(0LL, 1073741824LLU);;
		};
	};
}



inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _2520_buf) {
	if ((_2520_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1dbaad9b0_handleRW(&(_2520_buf));
	return _1db95cae5_Write(static_cast<jule::I64>(_1db9487c3_STDOUT), (&(_2520_buf[0LL])), static_cast<jule::U64>(_2520_buf.len()));;
}



inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _3620_buf) {
	if ((_3620_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1dbaad9b0_handleRW(&(_3620_buf));
	return _1db95cae5_Write(static_cast<jule::I64>(_1db948aae_STDERR), (&(_3620_buf[0LL])), static_cast<jule::U64>(_3620_buf.len()));;
}



inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _4718_buf) {
	if ((_4718_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1dbaad9b0_handleRW(&(_4718_buf));
	return _1db95cae5_Write(static_cast<jule::I64>(_1db948493_STDIN), (&(_4718_buf[0LL])), static_cast<jule::U64>(_4718_buf.len()));;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n) {
	__jule_writeStderr(_1db990188_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1bc1e70b3_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_1db990188_StrBytes(jule::Str::lit("\n", 1)));
	_1db95cd26_Exit(2LL);
}



inline jule::U64 _1bc2de6a5_atomicLoad(jule::U64* _3525_p, jule::I64 _3532_mo) {
	jule::U64 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U64 _1bc2de870_atomicAdd(jule::U64* _4628_p, jule::U64 _4635_delta, jule::I64 _4645_mo) {
	jule::U64 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Str _1db996667_executable(void) {
	jule::Array<jule::U8,1024> _1310_buf = jule::Array<jule::U8,1024>(0LLU);;
	jule::U32 _142_size = static_cast<jule::U32>(1024LLU);;
	jule::U8* _156_p = (&(_1310_buf[0LL]));;
	{
		if ((!(_NSGetExecutablePath(((char*)(_156_p)), (&(_142_size)))))) {
			return _1db939d47_BytePtrToStr(_156_p);;
		};
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_darwin.jule:21:2"));;
}



inline jule::U64* __jule_RCNew(void) {
	;
	;
	jule::U64* _256_p = ((jule::U64*)(malloc(8LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U64 __jule_RCLoadAtomic(jule::U64* _4625_p) {
	return _1bc2de6a5_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U64* _6328_p) {
	_1bc2de870_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U64* _8429_p) {
	return (_1bc2de870_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U64* _9219_p) {
	free(_9219_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I64>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1bc2e5db5:;
	}
	_iter_end_1bc2e5db5:;;
	jule::I64 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1bc2e6602:;
	}
	_iter_end_1bc2e6602:;;
	return _1db9906d8_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _522_n = _1db9a11cc_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _1db9906d8_StrFromBytes(_516_buf);;
}



inline jule::I64 _1db9a11cc_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I64 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1bc2ebad0:;
	}
	_iter_end_1bc2ebad0:;;
	jule::I64 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_1db9a2376_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	if ((_8017_f > jule::MAX_F64)) {
		return jule::Str::lit("+Inf", 4);;
	};
	if ((_8017_f < jule::MIN_F64)) {
		return jule::Str::lit("-Inf", 4);;
	};
	;
	jule::I64 _942_n = 26LL;;
	jule::Slice<jule::U8> _956_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_942_n, _942_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _966_j = 0LL;;
	if ((_8017_f < 0LL)) {
		_956_buf[0LL]='-';
		(_966_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _1032_intPart = static_cast<jule::U64>(_8017_f);;
	_966_j+=_1db9a11cc_u64ToBuf(_956_buf.slice(_966_j), _1032_intPart);
	_956_buf[_966_j]='.';
	jule::F64 _1076_fracPart = (_8017_f - static_cast<jule::F64>(_1032_intPart));;
	jule::I64 _1086_i = 0LL;;
	for (; (_1086_i < 4LL); (_1086_i)++) {
		{
			_1076_fracPart*=10LL;
			jule::I64 _1113_digit = static_cast<jule::I64>(_1076_fracPart);;
			(_966_j)++;
			_956_buf[_966_j]=static_cast<jule::U8>(('0' + _1113_digit));
			_1076_fracPart-=static_cast<jule::F64>(_1113_digit);
		}
	_iter_next_1bc3028b6:;
	}
	_iter_end_1bc3028b6:;;
	for (; (_966_j >= 0LL); (_966_j)--) {
		{
			if ((_956_buf[_966_j] != '0')) {
				goto _iter_end_1bc303752;
			};
		}
	_iter_next_1bc303752:;
	}
	_iter_end_1bc303752:;;
	if ((_956_buf[_966_j] != '.')) {
		(_966_j)++;
	};
	(_956_buf).mut_slice(0LL, _966_j);;
	return _1db9906d8_StrFromBytes(_956_buf);;
}



inline jule::Str _1c0da3089_arrToStr(jule::Slice<jule::U8> _13316_x) {
	jule::Slice<jule::U8> _1346_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1346_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_13316_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0da4354:;
		if (it != expr_end) {
			jule::I64 _1366_i = it - expr->begin();
			jule::U8 *_1369_z = it;
			{
				if ((_1366_i > 0LL)) {
					(_1346_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1346_buf).append(_1bc368b19_toStr((*(_1369_z))));;
			}
			_iter_next_1c0da4354:;
			++it;
			_1366_i++;
			goto _iter_begin_1c0da4354;
		}
		_iter_end_1c0da4354:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1346_buf; __jule_push_dest.push(']'); };
	return _1db9906d8_StrFromBytes(_1346_buf);;
}



inline jule::Str _1c0d97e2a_structToStr(_1dd0b6912_Builder _16619_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1c0d9ae61:;
				{
					;
					{
						
{
							_case_begin_1c0d9c0e9:;
							{
								;
								;
							}
						}
						_match_end_1c0d9bcca:;
					};
				}
			}
			_match_end_1c0d9a504:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1876_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1876_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1c0d9deca:;
				{
					(_1876_buf).append(_1c0d9e7b1_toStr(_16619_x._field_buf));;
				}
			}
			_match_end_1c0d9de31:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1876_buf; __jule_push_dest.push('}'); };
	return _1db9906d8_StrFromBytes(_1876_buf);;
}



inline jule::Str _1bc352d56_toStr(jule::Any _20713_x) {
	;
	{
		
{
			_case_begin_1bc354088:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bc353e9a:;
	};
	{
		
{
			_case_begin_1bc3545a5:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _20713_x.type->to_str(_20713_x.data.alloc);;
			}
		}
		_match_end_1bc354440:;
	};
}

inline jule::Str _1bc355034_toStr(jule::Str _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc356277:;
			{
				return _20713_x;;
			}
		}
		_match_end_1bc356211:;
	};
}

inline jule::Str _1bc355782_toStr(jule::I64 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc358cb3:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_20713_x));;
			}
		}
		_match_end_1bc358bc5:;
	};
}

inline jule::Str _1bc35a4e0_toStr(jule::I8 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc35b744:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_20713_x));;
			}
		}
		_match_end_1bc35b656:;
	};
}

inline jule::Str _1bc358224_toStr(jule::I16 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc35e1c5:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_20713_x));;
			}
		}
		_match_end_1bc35e0d7:;
	};
}

inline jule::Str _1bc360902_toStr(jule::I32 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc361bde:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_20713_x));;
			}
		}
		_match_end_1bc361b01:;
	};
}

inline jule::Str _1bc3633d8_toStr(jule::I64 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc364708:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_20713_x));;
			}
		}
		_match_end_1bc36461a:;
	};
}

inline jule::Str _1bc365e35_toStr(jule::U64 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc367211:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1bc36709b:;
	};
}

inline jule::Str _1bc363949_toStr(jule::Uintptr _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc369653:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1bc3694dd:;
	};
}

inline jule::Str _1bc368b19_toStr(jule::U8 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc36ba95:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1bc36b930:;
	};
}

inline jule::Str _1bc36b05b_toStr(jule::U16 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc36ded7:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1bc36dd72:;
	};
}

inline jule::Str _1bc36d49d_toStr(jule::U32 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc371429:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1bc3712b4:;
	};
}

inline jule::Str _1bc3708e0_toStr(jule::U64 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc3739ae:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_20713_x));;
			}
		}
		_match_end_1bc373849:;
	};
}

inline jule::Str _1bc373cbc_toStr(jule::F32 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc375ebc:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_20713_x));;
			}
		}
		_match_end_1bc375cd0:;
	};
}

inline jule::Str _1bc372d76_toStr(jule::F64 _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc378046:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_20713_x));;
			}
		}
		_match_end_1bc377d8c:;
	};
}

inline jule::Str _1bc360ccb_toStr(jule::Bool _20713_x) {
	;
	;
	{
		
{
			_case_begin_1bc379de4:;
			{
				return __jule_boolToStr(_20713_x);;
			}
		}
		_match_end_1bc379b6e:;
	};
}

inline jule::Str _1bc3536e7_toStr(jule::I64 _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1bc37ba3e:;
			{
				return _1bc355782_toStr(_20713_x);;
			}
		}
		_match_end_1bc37ab2b:;
	};
}

inline jule::Str _1bd135253_toStr(jule::I64 _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1bd136c49:;
			{
				return _1bc355782_toStr(_20713_x);;
			}
		}
		_match_end_1bd136650:;
	};
}

inline jule::Str _1bd16d9a6_toStr(jule::I64 _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1bd17049c:;
			{
				return _1bc355782_toStr(_20713_x);;
			}
		}
		_match_end_1bd16eda3:;
	};
}

inline jule::Str _1bd4cc50c_toStr(jule::I64 _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1bd4ce003:;
			{
				return _1bc355782_toStr(_20713_x);;
			}
		}
		_match_end_1bd4cd909:;
	};
}

inline jule::Str _1bdb72dc2_toStr(jule::Ptr<_1ad933a83_Var> _20713_x) {
	;
	{
		
{
			_case_begin_1bdb740b0:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb73ec2:;
	};
	;
	{
		
{
			_case_begin_1bdb74a61:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdb74731:;
	};
}

inline jule::Str _1bdb7508e_toStr(jule::Ptr<_1ad9b77a4_TypeAlias> _20713_x) {
	;
	{
		
{
			_case_begin_1bdb77932:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb77844:;
	};
	;
	{
		
{
			_case_begin_1bdb783d3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdb780a3:;
	};
}

inline jule::Str _1bdb78a32_toStr(jule::Ptr<_1ad7159ec_Struct> _20713_x) {
	;
	{
		
{
			_case_begin_1bdb7b31a:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb7b22c:;
	};
	;
	{
		
{
			_case_begin_1bdb7bcbb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdb7b98b:;
	};
}

inline jule::Str _1bdb7c2e9_toStr(jule::Ptr<_1ad7e778d_Fn> _20713_x) {
	;
	{
		
{
			_case_begin_1bdb7eb8c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb7ea9e:;
	};
	;
	{
		
{
			_case_begin_1bdb8063d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdb8030d:;
	};
}

inline jule::Str _1bdb80d8b_toStr(jule::Ptr<_1ad802ea2_Trait> _20713_x) {
	;
	{
		
{
			_case_begin_1bdb83751:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb83663:;
	};
	;
	{
		
{
			_case_begin_1bdb84202:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdb83dc2:;
	};
}

inline jule::Str _1bdb81177_toStr(jule::Ptr<_1ad805658_Enum> _20713_x) {
	;
	{
		
{
			_case_begin_1bdb86d09:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb86c1b:;
	};
	;
	{
		
{
			_case_begin_1bdb877aa:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdb8748b:;
	};
}

inline jule::Str _1bdb88d61_toStr(jule::Ptr<_1ad806d63_TypeEnum> _20713_x) {
	;
	{
		
{
			_case_begin_1bdb8a2d5:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb8a1e7:;
	};
	;
	{
		
{
			_case_begin_1bdb8ac86:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdb8a967:;
	};
}

inline jule::Str _1bdba64bb_toStr(jule::Ptr<_1ad712ac6_Field> _20713_x) {
	;
	{
		
{
			_case_begin_1bdba76a9:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdba75bb:;
	};
	;
	{
		
{
			_case_begin_1bdba815a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdba7d2a:;
	};
}

inline jule::Str _1bdbb85aa_toStr(jule::Ptr<_1ad778ec2_Const> _20713_x) {
	;
	{
		
{
			_case_begin_1bdbb9798:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdbb96aa:;
	};
	;
	{
		
{
			_case_begin_1bdbba249:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdbb9e19:;
	};
}

inline jule::Str _1bdbd27b1_toStr(jule::Ptr<_1ad804b0d_EnumItem> _20713_x) {
	;
	{
		
{
			_case_begin_1bdbd398d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdbd38a0:;
	};
	;
	{
		
{
			_case_begin_1bdbd443e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdbd410e:;
	};
}

inline jule::Str _1bdbe3daa_toStr(jule::Ptr<_1ad7e5cb9_Param> _20713_x) {
	;
	{
		
{
			_case_begin_1bdbe59b1:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdbe58c3:;
	};
	;
	{
		
{
			_case_begin_1bdbe6462:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdbe6132:;
	};
}

inline jule::Str _1bdccdcec_toStr(jule::Str _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1bdcd0826:;
			{
				return _1bc355034_toStr(_20713_x);;
			}
		}
		_match_end_1bdcd022c:;
	};
}

inline jule::Str _1bdda591d_toStr(jule::Ptr<_1ad6e57bd_IdentTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1bdda6ac8:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdda69da:;
	};
	;
	{
		
{
			_case_begin_1bdda7579:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdda7249:;
	};
}

inline jule::Str _1bddbcade_toStr(jule::Ptr<_1ad7e0995_TupleExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bddbdace:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bddbd9e1:;
	};
	;
	{
		
{
			_case_begin_1bddbe580:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bddbe250:;
	};
}

inline jule::Str _1bddc0097_toStr(jule::Ptr<_1ad6ea0db_TupleExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1bddc2929:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bddc283b:;
	};
	;
	{
		
{
			_case_begin_1bddc33ca:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bddc309a:;
	};
}

inline jule::Str _1bddcee31_toStr(jule::Ptr<_1ad703b61_AssignSt> _20713_x) {
	;
	{
		
{
			_case_begin_1bddd100e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bddd0e21:;
	};
	;
	{
		
{
			_case_begin_1bddd19b0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bddd1680:;
	};
}

inline jule::Str _1bddd2917_toStr(jule::Ptr<_1ad6e94e7_Expr> _20713_x) {
	;
	{
		
{
			_case_begin_1bddd4155:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bddd4067:;
	};
	;
	{
		
{
			_case_begin_1bddd4b06:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bddd47c6:;
	};
}

inline jule::Str _1bddd593c_toStr(jule::Ptr<_1ad8b4904_Postfix> _20713_x) {
	;
	{
		
{
			_case_begin_1bddd7521:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bddd7433:;
	};
	;
	{
		
{
			_case_begin_1bddd7ec2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bddd7ba3:;
	};
}

inline jule::Str _1bddd928c_toStr(jule::Ptr<_1ad8b4daa_Assign> _20713_x) {
	;
	{
		
{
			_case_begin_1bddd88eb:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bddd880d:;
	};
	;
	{
		
{
			_case_begin_1bdddb03b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bddd89d9:;
	};
}

inline jule::Str _1bddd948a_toStr(jule::Ptr<_1ad8b5361_MultiAssign> _20713_x) {
	;
	{
		
{
			_case_begin_1bdddb49d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdddb3b0:;
	};
	;
	{
		
{
			_case_begin_1bddddadd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdddb58b:;
	};
}

inline jule::Str _1bdddeade_toStr(jule::Ptr<_1ad985b90_Data> _20713_x) {
	;
	{
		
{
			_case_begin_1bddde1e8:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bddde10a:;
	};
	;
	{
		
{
			_case_begin_1bdde13d7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdde1041:;
	};
}

inline jule::Str _1bdde24c6_toStr(jule::Ptr<_1ad7dc387_FnCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bdde40cc:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdde3ede:;
	};
	;
	{
		
{
			_case_begin_1bdde4a7d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdde474d:;
	};
}

inline jule::Str _1bde2850c_toStr(jule::Ptr<_1ad8b3dba_Label> _20713_x) {
	;
	{
		
{
			_case_begin_1bde296b7:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde295c9:;
	};
	;
	{
		
{
			_case_begin_1bde2a168:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde29d38:;
	};
}

inline jule::Str _1bde46ccd_toStr(jule::Ptr<_1ad8b136d_Scope> _20713_x) {
	;
	{
		
{
			_case_begin_1bde47ebb:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde47dcd:;
	};
	;
	{
		
{
			_case_begin_1bde4896c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde4863c:;
	};
}

inline jule::Str _1bde51249_toStr(jule::Ptr<_1ad7e3602_BuiltinErrorCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bde523d2:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde522e4:;
	};
	;
	{
		
{
			_case_begin_1bde52d83:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde52a53:;
	};
}

inline jule::Str _1bde558ad_toStr(jule::Ptr<_1ad7e4614_BackendEmitExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bde56914:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde56826:;
	};
	;
	{
		
{
			_case_begin_1bde573b5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde57085:;
	};
}

inline jule::Str _1bde56084_toStr(jule::Ptr<_1ad7e237b_BuiltinAppendCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bde57e32:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde57d44:;
	};
	;
	{
		
{
			_case_begin_1bde5a121:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde59c7a:;
	};
}

inline jule::Str _1bde58938_toStr(jule::Ptr<_1ad7e0d6e_BuiltinOutCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bde5a9d4:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde5a8e6:;
	};
	;
	{
		
{
			_case_begin_1bde5d124:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde5aac2:;
	};
}

inline jule::Str _1bde5ded2_toStr(jule::Ptr<_1ad7e1248_BuiltinOutlnCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bde5d586:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde5d498:;
	};
	;
	{
		
{
			_case_begin_1bde60bc6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde5d674:;
	};
}

inline jule::Str _1bde61a84_toStr(jule::Ptr<_1ad7e19eb_BuiltinPanicCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bde61138:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde6104a:;
	};
	;
	{
		
{
			_case_begin_1bde63778:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde61226:;
	};
}

inline jule::Str _1bde64636_toStr(jule::Ptr<_1ad7e3228_BuiltinCopyCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bde63bda:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde63aec:;
	};
	;
	{
		
{
			_case_begin_1bde6632a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde63cc8:;
	};
}

inline jule::Str _1bde671d8_toStr(jule::Ptr<_1ad7e2d4e_BuiltinDeleteCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bde6678c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde6669e:;
	};
	;
	{
		
{
			_case_begin_1bde68dcc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde6687a:;
	};
}

inline jule::Str _1bde69c8a_toStr(jule::Ptr<_1ad7e4911_FreeExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bde690ca:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde6896a:;
	};
	;
	{
		
{
			_case_begin_1bde6b297:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde6b077:;
	};
}

inline jule::Str _1bde7415c_toStr(jule::Ptr<_1ad8b1ea6_Conditional> _20713_x) {
	;
	{
		
{
			_case_begin_1bde7534a:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde7525c:;
	};
	;
	{
		
{
			_case_begin_1bde75ceb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde759bb:;
	};
}

inline jule::Str _1bde7ea3b_toStr(jule::Ptr<_1ad8b22a3_InfIter> _20713_x) {
	;
	{
		
{
			_case_begin_1bde80c29:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde80b3b:;
	};
	;
	{
		
{
			_case_begin_1bde816ca:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde8139a:;
	};
}

inline jule::Str _1bde85877_toStr(jule::Ptr<_1ad8b2759_WhileIter> _20713_x) {
	;
	{
		
{
			_case_begin_1bde86a65:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde86977:;
	};
	;
	{
		
{
			_case_begin_1bde87516:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bde871d6:;
	};
}

inline jule::Str _1bdeac0a7_toStr(jule::Ptr<_1ad8b31a5_RangeIter> _20713_x) {
	;
	{
		
{
			_case_begin_1bdead295:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdead1a7:;
	};
	;
	{
		
{
			_case_begin_1bdeadc46:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdead916:;
	};
}

inline jule::Str _1bdebbbbb_toStr(jule::Ptr<_1ad7094a2_WhileKind> _20713_x) {
	;
	{
		
{
			_case_begin_1bdebcd76:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdebcc88:;
	};
	;
	{
		
{
			_case_begin_1bdebd827:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdebd4e7:;
	};
}

inline jule::Str _1bdebe44e_toStr(jule::Ptr<_1ad709da9_RangeKind> _20713_x) {
	;
	{
		
{
			_case_begin_1bdec1bd2:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdec1ae4:;
	};
	;
	{
		
{
			_case_begin_1bdec2683:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdec2353:;
	};
}

inline jule::Str _1bdedadb6_toStr(jule::Ptr<_1ad8b353a_ContSt> _20713_x) {
	;
	{
		
{
			_case_begin_1bdedc0a4:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdedbeb6:;
	};
	;
	{
		
{
			_case_begin_1bdedca55:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdedc725:;
	};
}

inline jule::Str _1bdee4c27_toStr(jule::Ptr<_1ad8b452a_GotoSt> _20713_x) {
	;
	{
		
{
			_case_begin_1bdee5e15:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdee5d27:;
	};
	;
	{
		
{
			_case_begin_1bdee68b6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bdee6586:;
	};
}

inline jule::Str _1be02a8d9_toStr(jule::Ptr<_1ad6ead12_IdentExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be02ba61:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be02b973:;
	};
	;
	{
		
{
			_case_begin_1be02c512:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be02c1d2:;
	};
}

inline jule::Str _1be04035a_toStr(jule::Ptr<_1ad7dcc17_IndexingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bdbe552c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdbe542d:;
	};
	;
	{
		
{
			_case_begin_1be041a87:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be04113b:;
	};
}

inline jule::Str _1be08c94b_toStr(jule::Ptr<_1ad8b5a9d_Match> _20713_x) {
	;
	{
		
{
			_case_begin_1be08db39:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be08da4b:;
	};
	;
	{
		
{
			_case_begin_1be08e5da:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be08e2aa:;
	};
}

inline jule::Str _1be0a19b5_toStr(jule::Ptr<_1ad8b6cbe_FallSt> _20713_x) {
	;
	{
		
{
			_case_begin_1be0a34ab:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0a33bd:;
	};
	;
	{
		
{
			_case_begin_1be0a3e5c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0a3b2c:;
	};
}

inline jule::Str _1be0bca36_toStr(jule::Ptr<_1ad8b3914_BreakSt> _20713_x) {
	;
	{
		
{
			_case_begin_1be0bdc24:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0bdb36:;
	};
	;
	{
		
{
			_case_begin_1be0be6c5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0be395:;
	};
}

inline jule::Str _1be0c41ad_toStr(jule::Ptr<_1ad8b7165_RetSt> _20713_x) {
	;
	{
		
{
			_case_begin_1be0c539b:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0c52ad:;
	};
	;
	{
		
{
			_case_begin_1be0c5d4c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0c5a1c:;
	};
}

inline jule::Str _1be0cdb35_toStr(jule::Ptr<_1ad7051d4_ScopeTree> _20713_x) {
	;
	{
		
{
			_case_begin_1be0cecac:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0cebbe:;
	};
	;
	{
		
{
			_case_begin_1be0d075d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0d042d:;
	};
}

inline jule::Str _1be0d1c26_toStr(jule::Ptr<_1ad70802d_VarDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be0d2e7a:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0d2d8c:;
	};
	;
	{
		
{
			_case_begin_1be0d392b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0d35eb:;
	};
}

inline jule::Str _1be0d0c8b_toStr(jule::Ptr<_1ad70bbd0_TypeAliasDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be0d6148:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0d605a:;
	};
	;
	{
		
{
			_case_begin_1be0d6ae9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0d67b9:;
	};
}

inline jule::Str _1be0d7435_toStr(jule::Ptr<_1ad70b493_Conditional> _20713_x) {
	;
	{
		
{
			_case_begin_1be0d9bda:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0d9aec:;
	};
	;
	{
		
{
			_case_begin_1be0da68b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0da35b:;
	};
}

inline jule::Str _1be0dbb54_toStr(jule::Ptr<_1ad708b77_Iter> _20713_x) {
	;
	{
		
{
			_case_begin_1be0dcda8:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0dccba:;
	};
	;
	{
		
{
			_case_begin_1be0dd859:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0dd529:;
	};
}

inline jule::Str _1be0dabb9_toStr(jule::Ptr<_1ad70a65c_ContSt> _20713_x) {
	;
	{
		
{
			_case_begin_1be0e1076:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0e0e88:;
	};
	;
	{
		
{
			_case_begin_1be0e1a27:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0e16e7:;
	};
}

inline jule::Str _1be0e2a7d_toStr(jule::Ptr<_1ad702797_LabelSt> _20713_x) {
	;
	{
		
{
			_case_begin_1be0e4024:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0e23b8:;
	};
	;
	{
		
{
			_case_begin_1be0e49e7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0e4640:;
	};
}

inline jule::Str _1be0e57b7_toStr(jule::Ptr<_1ad702b71_GotoSt> _20713_x) {
	;
	{
		
{
			_case_begin_1be0e719d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0e70b0:;
	};
	;
	{
		
{
			_case_begin_1be0e7b4e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0e781e:;
	};
}

inline jule::Str _1be0e8336_toStr(jule::Ptr<_1ad70c9a0_MatchCase> _20713_x) {
	;
	{
		
{
			_case_begin_1be0eaaec:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0eaa0e:;
	};
	;
	{
		
{
			_case_begin_1be0eb59d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0eb26d:;
	};
}

inline jule::Str _1be0ec505_toStr(jule::Ptr<_1ad702e6d_FallSt> _20713_x) {
	;
	{
		
{
			_case_begin_1be0edcba:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0edbcc:;
	};
	;
	{
		
{
			_case_begin_1be0ee76b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be0ee43b:;
	};
}

inline jule::Str _1be0ebacb_toStr(jule::Ptr<_1ad70a283_BreakSt> _20713_x) {
	;
	{
		
{
			_case_begin_1be101e88:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be101d9a:;
	};
	;
	{
		
{
			_case_begin_1be102939:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be102609:;
	};
}

inline jule::Str _1be103990_toStr(jule::Ptr<_1ad708407_RetSt> _20713_x) {
	;
	{
		
{
			_case_begin_1be105156:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be105068:;
	};
	;
	{
		
{
			_case_begin_1be105b07:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be1057c7:;
	};
}

inline jule::Str _1be102e67_toStr(jule::Ptr<_1ad6e9dbb_UseExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be108324:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be108236:;
	};
	;
	{
		
{
			_case_begin_1be108cc5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be108995:;
	};
}

inline jule::Str _1be1e3a19_toStr(jule::Ptr<_1ad711a92_Impl> _20713_x) {
	;
	{
		
{
			_case_begin_1be1e4bc4:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be1e4ad6:;
	};
	;
	{
		
{
			_case_begin_1be1e5675:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be1e5345:;
	};
}

inline jule::Str _1be1e85ce_toStr(jule::Ptr<_1ad710be5_StructDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be1e9624:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be1e9536:;
	};
	;
	{
		
{
			_case_begin_1be1ea0c5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be1e9c95:;
	};
}

inline jule::Str _1be1eab42_toStr(jule::Ptr<_1ad706d73_FnDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be1ed35e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be1ed271:;
	};
	;
	{
		
{
			_case_begin_1be1edd10:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be1ed9d0:;
	};
}

inline jule::Str _1be1ee739_toStr(jule::Ptr<_1ad711432_TraitDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be201e56:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be201d68:;
	};
	;
	{
		
{
			_case_begin_1be202907:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be2025c7:;
	};
}

inline jule::Str _1be205bb3_toStr(jule::Ptr<_1ad70e09a_EnumDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be206c08:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be206b1a:;
	};
	;
	{
		
{
			_case_begin_1be2076a9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be207379:;
	};
}

inline jule::Str _1be207d6e_toStr(jule::Ptr<_1ad710035_TypeEnumDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be20a58b:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be20a49d:;
	};
	;
	{
		
{
			_case_begin_1be20b03c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be20ac0c:;
	};
}

inline jule::Str _1be23133c_toStr(jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be23267e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be232591:;
	};
	;
	{
		
{
			_case_begin_1be233130:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be232d00:;
	};
}

inline jule::Str _1be231abd_toStr(jule::Ptr<_1ad7da781_UnaryExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be236265:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be236177:;
	};
	;
	{
		
{
			_case_begin_1be236c16:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be2368d6:;
	};
}

inline jule::Str _1be264837_toStr(jule::Ptr<_1ad7ea84b_FnIns> _20713_x) {
	;
	{
		
{
			_case_begin_1be265a25:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be265937:;
	};
	;
	{
		
{
			_case_begin_1be2664c6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be266196:;
	};
}

inline jule::Str _1be525d7e_toStr(jule::Ptr<_1ad6e7bcc_MapTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be527039:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be526e4b:;
	};
	;
	{
		
{
			_case_begin_1be5279da:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be5276aa:;
	};
}

inline jule::Str _1be52b6e2_toStr(jule::Ptr<_1ad6e68e0_TupleTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be52c89c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be52c7ae:;
	};
	;
	{
		
{
			_case_begin_1be52d34d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be52d01d:;
	};
}

inline jule::Str _1be53ea68_toStr(jule::Ptr<_1ad6e747e_ArrTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be540c34:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be540b46:;
	};
	;
	{
		
{
			_case_begin_1be5416d5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be5413a5:;
	};
}

inline jule::Str _1be545e8c_toStr(jule::Ptr<_1ad6e65e3_SlcTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be547158:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be54706a:;
	};
	;
	{
		
{
			_case_begin_1be547b09:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be5477c9:;
	};
}

inline jule::Str _1be54c3b1_toStr(jule::Ptr<_1ad6e6bdc_PtrTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be54d57c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be54d48e:;
	};
	;
	{
		
{
			_case_begin_1be54e02d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be54dbed:;
	};
}

inline jule::Str _1be5534b6_toStr(jule::Ptr<_1ad6e625d_SptrTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be554682:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be554594:;
	};
	;
	{
		
{
			_case_begin_1be555133:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be554d03:;
	};
}

inline jule::Str _1be59d885_toStr(jule::Ptr<_1ad6eb97d_VariadicExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be59e996:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be59e8a8:;
	};
	;
	{
		
{
			_case_begin_1be5a0447:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be5a0117:;
	};
}

inline jule::Str _1be5a45c2_toStr(jule::Ptr<_1ad7dc761_SliceExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be5a62d8:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be5a61ea:;
	};
	;
	{
		
{
			_case_begin_1be5a6c89:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be5a6959:;
	};
}

inline jule::Str _1be5be2bd_toStr(jule::Ptr<_1ad6edc16_FieldExprPair> _20713_x) {
	;
	{
		
{
			_case_begin_1be5c0478:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be5c038a:;
	};
	;
	{
		
{
			_case_begin_1be5c0e29:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be5c0ae9:;
	};
}

inline jule::Str _1be5c7b89_toStr(jule::Ptr<_1ad700322_KeyValPair> _20713_x) {
	;
	{
		
{
			_case_begin_1be5c8d44:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be5c8c56:;
	};
	;
	{
		
{
			_case_begin_1be5c97e5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be5c94b5:;
	};
}

inline jule::Str _1be633ba1_toStr(jule::Ptr<_1ad6ed221_FnCallExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be634d5b:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be634c6d:;
	};
	;
	{
		
{
			_case_begin_1be63580c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be6354cc:;
	};
}

inline jule::Str _1be646741_toStr(jule::Ptr<_1ad7db452_AllocStructLitExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be64792e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be647841:;
	};
	;
	{
		
{
			_case_begin_1be6483d0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be6480a0:;
	};
}

inline jule::Str _1be6597a9_toStr(jule::Ptr<_1ad7db9d5_CastingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be65a997:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be65a8a9:;
	};
	;
	{
		
{
			_case_begin_1be65b448:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be65b118:;
	};
}

inline jule::Str _1be67187b_toStr(jule::Ptr<_1ad7e02be_StructStaticIdentExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be672ea9:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be672dbb:;
	};
	;
	{
		
{
			_case_begin_1be67395a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be67362a:;
	};
}

inline jule::Str _1be674164_toStr(jule::Ptr<_1ad6ec60a_SubIdentExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be677d49:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be677c5b:;
	};
	;
	{
		
{
			_case_begin_1be6787ea:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be6784ba:;
	};
}

inline jule::Str _1be681270_toStr(jule::Ptr<_1ad7db155_StructLitExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be682419:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be68232b:;
	};
	;
	{
		
{
			_case_begin_1be682dba:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be682a8a:;
	};
}

inline jule::Str _1be6a1768_toStr(jule::Ptr<_1ad7e4290_RuneExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be6a2956:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be6a2868:;
	};
	;
	{
		
{
			_case_begin_1be6a3407:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be6a30c7:;
	};
}

inline jule::Str _1be6c4505_toStr(jule::Ptr<_1ad718857_StructIns> _20713_x) {
	;
	{
		
{
			_case_begin_1be6c56e3:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be6c5605:;
	};
	;
	{
		
{
			_case_begin_1be6c6194:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be6c5d64:;
	};
}

inline jule::Str _1be7146bb_toStr(jule::Ptr<_1ad9b8596_TypeKind> _20713_x) {
	;
	{
		
{
			_case_begin_1be715854:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be715766:;
	};
	;
	{
		
{
			_case_begin_1be716305:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be715ec5:;
	};
}

inline jule::Str _1be736710_toStr(jule::Ptr<_1ad7e0698_ArrayExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be7378ed:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be737810:;
	};
	;
	{
		
{
			_case_begin_1be73839e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be73806e:;
	};
}

inline jule::Str _1be7754da_toStr(jule::Ptr<_1ad6e5a87_SubIdentTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be7766c8:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be7765da:;
	};
	;
	{
		
{
			_case_begin_1be777179:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be776d49:;
	};
}

inline jule::Str _1be779ae9_toStr(jule::Ptr<_1ad6eb5a4_UnaryExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be77ac82:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be77ab94:;
	};
	;
	{
		
{
			_case_begin_1be77b733:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be77b403:;
	};
}

inline jule::Str _1be783c79_toStr(jule::Ptr<_1ad6e51b3_TypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be78431d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be784230:;
	};
	;
	{
		
{
			_case_begin_1be784cbe:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be7849a0:;
	};
}

inline jule::Str _1be7886c9_toStr(jule::Ptr<_1ad6ec231_NamespaceExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be78b138:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be78b04a:;
	};
	;
	{
		
{
			_case_begin_1be78bad9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be78b7a9:;
	};
}

inline jule::Str _1be7901b4_toStr(jule::Ptr<_1ad6e5e61_NamespaceTypeDecl> _20713_x) {
	;
	{
		
{
			_case_begin_1be7913a2:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be7912b4:;
	};
	;
	{
		
{
			_case_begin_1be791d53:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be791a23:;
	};
}

inline jule::Str _1be7ca793_toStr(jule::Ptr<_1ad7de004_SlicingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be7cb92b:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be7cb83d:;
	};
	;
	{
		
{
			_case_begin_1be7cc3cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be7cc09c:;
	};
}

inline jule::Str _1be848448_toStr(jule::Ptr<_1ad700a4d_SliceExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be849603:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be849515:;
	};
	;
	{
		
{
			_case_begin_1be84a0a4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be849c74:;
	};
}

inline jule::Str _1be8b4dbb_toStr(jule::Ptr<_1ad7de587_TraitSubIdentExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be8b60a9:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be8b5ebb:;
	};
	;
	{
		
{
			_case_begin_1be8b6a5a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be8b672a:;
	};
}

inline jule::Str _1be9641ce_toStr(jule::Ptr<_1ad7dd971_MapExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be965d5c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be965c6e:;
	};
	;
	{
		
{
			_case_begin_1be96680d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be9664cd:;
	};
}

inline jule::Str _1be974563_toStr(jule::Ptr<_1ad7dd1bd_AnonFnExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1be975751:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be975663:;
	};
	;
	{
		
{
			_case_begin_1be976202:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be975dc2:;
	};
}

inline jule::Str _1be97b603_toStr(jule::Ptr<_1ad6e97b1_RangeExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be97c7ad:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be97c6c0:;
	};
	;
	{
		
{
			_case_begin_1be97d25e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be97ce2e:;
	};
}

inline jule::Str _1be97e727_toStr(jule::Ptr<_1ad6ea482_LitExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be981185:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be981097:;
	};
	;
	{
		
{
			_case_begin_1be981b36:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be981806:;
	};
}

inline jule::Str _1be982780_toStr(jule::Ptr<_1ad6ea85b_UnsafeExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be985ba1:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be985ab3:;
	};
	;
	{
		
{
			_case_begin_1be986652:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be986322:;
	};
}

inline jule::Str _1be9876a8_toStr(jule::Ptr<_1ad7014aa_IndexingExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be989347:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be989259:;
	};
	;
	{
		
{
			_case_begin_1be989ce8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be9899b8:;
	};
}

inline jule::Str _1be98b2b1_toStr(jule::Ptr<_1ad701b1a_SlicingExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be98c4e3:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be98c405:;
	};
	;
	{
		
{
			_case_begin_1be98ce94:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be98cb64:;
	};
}

inline jule::Str _1be98a326_toStr(jule::Ptr<_1ad6ebd57_CastExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be99068e:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be9905a1:;
	};
	;
	{
		
{
			_case_begin_1be991140:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be990d10:;
	};
}

inline jule::Str _1be992196_toStr(jule::Ptr<_1ad6ee541_StructLit> _20713_x) {
	;
	{
		
{
			_case_begin_1be994099:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be993eab:;
	};
	;
	{
		
{
			_case_begin_1be994a4a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be99471a:;
	};
}

inline jule::Str _1be995430_toStr(jule::Ptr<_1ad6ee9e7_BraceLit> _20713_x) {
	;
	{
		
{
			_case_begin_1be9991d1:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be9990d2:;
	};
	;
	{
		
{
			_case_begin_1be99a149:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be999852:;
	};
}

inline jule::Str _1be99a9b8_toStr(jule::Ptr<_1ad6ecab1_BinaryExpr> _20713_x) {
	;
	{
		
{
			_case_begin_1be99cadb:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be99c9ed:;
	};
	;
	{
		
{
			_case_begin_1be99d58c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1be99d25c:;
	};
}

inline jule::Str _1beae40ea_toStr(jule::Ptr<_1ad7da3a7_BinaryExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1beae52d8:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1beae51ea:;
	};
	;
	{
		
{
			_case_begin_1beae5c89:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1beae5959:;
	};
}

inline jule::Str _1bc7ed0d1_toStr(jule::Ptr<_1ad7e1622_BuiltinNewCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bc7ee2be:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bc7ee1d1:;
	};
	;
	{
		
{
			_case_begin_1bc7eec70:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bc7ee940:;
	};
}

inline jule::Str _1bc81416e_toStr(jule::Ptr<_1ad7e1ea2_BuiltinMakeCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bc81535c:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bc81526e:;
	};
	;
	{
		
{
			_case_begin_1bc815d0d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bc8159cd:;
	};
}

inline jule::Str _1bc848ec8_toStr(jule::Ptr<_1ad7e2678_BuiltinLenCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bc84a1b6:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bc84a0c8:;
	};
	;
	{
		
{
			_case_begin_1bc84ab67:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bc84a837:;
	};
}

inline jule::Str _1bece6011_toStr(jule::Ptr<_1ad7e2975_BuiltinCapCallExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bece7166:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bece7078:;
	};
	;
	{
		
{
			_case_begin_1bece7b17:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bece77d7:;
	};
}

inline jule::Str _1bed3cb90_toStr(jule::Ptr<_1ad7e38ee_SizeofExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bed3dcb2:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bed3dbc4:;
	};
	;
	{
		
{
			_case_begin_1bed3e763:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bed3e433:;
	};
}

inline jule::Str _1bed46b99_toStr(jule::Ptr<_1ad7e40a3_AlignofExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1bed47cbb:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bed47bcd:;
	};
	;
	{
		
{
			_case_begin_1bed4876c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1bed4843c:;
	};
}

inline jule::Str _1c02a4348_toStr(jule::Str _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c02a5d2d:;
			{
				return _1bc355034_toStr(_20713_x);;
			}
		}
		_match_end_1c02a5734:;
	};
}

inline jule::Str _1c04670ee_toStr(jule::Ptr<_1bbd9506e_ExceptionalForwardingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c04682dc:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c04681ee:;
	};
	;
	{
		
{
			_case_begin_1c0468c8d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c046895d:;
	};
}

inline jule::Str _1c049e136_toStr(jule::Ptr<_1bbd97857_StrRuneIter> _20713_x) {
	;
	{
		
{
			_case_begin_1c04a0324:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c04a0236:;
	};
	;
	{
		
{
			_case_begin_1c04a0cc5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c04a0995:;
	};
}

inline jule::Str _1c04a6a78_toStr(jule::Ptr<_1bbd96548_MutSlicingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c04a7c66:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c04a7b78:;
	};
	;
	{
		
{
			_case_begin_1c04a8717:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c04a83d7:;
	};
}

inline jule::Str _1c04d19a4_toStr(jule::Ptr<_1bbd9747d_AppendToSliceExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c04d2b92:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c04d2aa4:;
	};
	;
	{
		
{
			_case_begin_1c04d3643:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c04d3313:;
	};
}

inline jule::Str _1c04d3dd5_toStr(jule::Ptr<_1bbd970a4_PushToSliceExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c04d679a:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c04d66ac:;
	};
	;
	{
		
{
			_case_begin_1c04d724b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c04d6e1b:;
	};
}

inline jule::Str _1c04e1db0_toStr(jule::Ptr<_1bbd952e4_SwapExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c04e309d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c04e2eb0:;
	};
	;
	{
		
{
			_case_begin_1c04e3a4e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c04e371e:;
	};
}

inline jule::Str _1c052e936_toStr(jule::Ptr<_1bbd956bd_EmptyCompareExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c0530b24:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0530a36:;
	};
	;
	{
		
{
			_case_begin_1c05315c5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c0531295:;
	};
}

inline jule::Str _1c05322b8_toStr(jule::Ptr<_1bbd95eb5_StrCompExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c0534b7d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0534a90:;
	};
	;
	{
		
{
			_case_begin_1c053562e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c05352ee:;
	};
}

inline jule::Str _1c056a7a7_toStr(jule::Ptr<_1bbd96845_UnsafeBinaryExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c056b995:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c056b8a7:;
	};
	;
	{
		
{
			_case_begin_1c056c446:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c056c116:;
	};
}

inline jule::Str _1c0573b56_toStr(jule::Ptr<_1bbd97b54_UnsafeDerefExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c0574d44:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0574c56:;
	};
	;
	{
		
{
			_case_begin_1c05757e5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c05754b5:;
	};
}

inline jule::Str _1c057a4ba_toStr(jule::Ptr<_1bbd95a42_RefExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c057b6a8:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c057b5ba:;
	};
	;
	{
		
{
			_case_begin_1c057c159:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c057bd29:;
	};
}

inline jule::Str _1c057ea63_toStr(jule::Ptr<_1ad7dacae_StructArgExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c0580c51:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0580b63:;
	};
	;
	{
		
{
			_case_begin_1c0581702:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c05813c2:;
	};
}

inline jule::Str _1c058632d_toStr(jule::Ptr<_1bbd97e51_UnsafeCastingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c058751b:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c058742d:;
	};
	;
	{
		
{
			_case_begin_1c0587ebc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c0587b8c:;
	};
}

inline jule::Str _1c0595194_toStr(jule::Ptr<_1bbd96bca_UnsafeIndexingExprModel> _20713_x) {
	;
	{
		
{
			_case_begin_1c0596382:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0596294:;
	};
	;
	{
		
{
			_case_begin_1c0596d33:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c0596a03:;
	};
}

inline jule::Str _1c0b0dd39_toStr(jule::Ptr<jule::Str> _20713_x) {
	;
	{
		
{
			_case_begin_1c0b0ee7d:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0b0ed90:;
	};
	;
	{
		
{
			_case_begin_1c0b1092e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_20713_x))));;
			}
		}
		_match_end_1c0b105ee:;
	};
}

inline jule::Str _1c0d92e69_toStr(_1dd0b6912_Builder _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c0d96368:;
			{
				return _1c0d97e2a_structToStr(_20713_x);;
			}
		}
		_match_end_1c0d95de5:;
	};
}

inline jule::Str _1c0d9e7b1_toStr(jule::Slice<jule::U8> _20713_x) {
	;
	{
		
{
			_case_begin_1c0da0b58:;
			{
				if ((_20713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0da087d:;
	};
	;
	{
		
{
			_case_begin_1c0da14b6:;
			{
				return _1c0da3089_arrToStr(_20713_x);;
			}
		}
		_match_end_1c0da12da:;
	};
}

inline jule::Str _1c0d9708e_toStr(jule::Str _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c0d96995:;
			{
				return _1bc355034_toStr(_20713_x);;
			}
		}
		_match_end_1c0da2918:;
	};
}

inline jule::Str _1c0da67da_toStr(jule::Str _20713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c0da7e07:;
			{
				return _1bc355034_toStr(_20713_x);;
			}
		}
		_match_end_1c0d9d98b:;
	};
}



inline void _1db9a2376_rev(jule::Slice<jule::U8> _26012_b) {
	jule::I64 _2616_i = 0LL;;
	for (; (_2616_i < (_26012_b.len() >> 1LL)); (_2616_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _26012_b[((_26012_b.len() - 1LL) - _2616_i)];
				jule::U8 _1___jule_assign_arg = _26012_b[_2616_i];
				_26012_b[_2616_i] = ___jule_assign_arg;
				_26012_b[((_26012_b.len() - 1LL) - _2616_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1bc3051c1:;
	}
	_iter_end_1bc3051c1:;;
}



inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I64 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I64 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1bc306b95:;
	}
	_iter_end_1bc306b95:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _1db9906d8_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, ({ jule::I64 __jule_x = _4415_runes.len(); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc30a99b:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_1dbaaa32a_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1bc30a99b:;
			++it;
			goto _iter_begin_1bc30a99b;
		}
		_iter_end_1bc30a99b:;
	};
	return _1db9906d8_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _1dbaaac32_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I64 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa9280_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1bc30bb89:;
	}
	_iter_end_1bc30bb89:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _1db9906d8_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_1dbaaa32a_AppendRune(_846_buf, _8316_r);
	return _1db9906d8_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1bc1e70b3_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa8e3e_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa8e3e_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline void _1dbaad9b0_handleRW(jule::Slice<jule::U8>* _814_b) {
	_1db9769aa__handleRW(_814_b);
}



inline jule::Slice<jule::Str> _1dbaade88_args(void) {
	jule::Slice<jule::Str> _86_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_86_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc311b7d:;
		if (it != expr_end) {
			jule::I64 _96_i = it - expr->begin();
			{
				{
					jule::U8* _118_arg = __jule_argv[_96_i];;
					_86_args[_96_i]=_1db984314_Str(_118_arg, _1dbaae54e_strlen(_118_arg));
				};
			}
			_iter_next_1bc311b7d:;
			++it;
			_96_i++;
			goto _iter_begin_1bc311b7d;
		}
		_iter_end_1bc311b7d:;
	};
	return _86_args;;
}



inline jule::I64 _1dbaae54e_strlen(jule::U8* _3122_p) {
	jule::I64 __jule_func_result = 0;
	for (; ((*(_3122_p)) != 0LLU); (_3122_p)++) {
		{
			(__jule_func_result)++;
		}
	_iter_next_1bc315423:;
	}
	_iter_end_1bc315423:;;
	return __jule_func_result;;
}



inline jule::Bool _1dbab086e__coSpawn(void* _1520_func, void* _1535_args) {
	pthread_t _166_t;;
	if ((pthread_create((&(_166_t)), nullptr, (void*(*)(void*))(_1520_func), _1535_args) != 0LL)) {
		return false;;
	};
	pthread_detach(_166_t);
	return true;;
}



inline jule::U64 _1dbb16ac3_hash128to64(_1dbb1671b_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _1dbb16dd1_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__1dbb130db_DecodeU64(_5312_bytes);;
}



inline jule::U32 _1dbb1719a_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__1dbb126b2_DecodeU32(_5412_bytes);;
}



inline jule::U64 _1dbb174db_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _1dbb1782c_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _1dbb16ac3_hash128to64(_1dbb1671b_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _1dbb17ba1_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _1dbb180d0_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _1dbb18564_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_1dbb16dd1_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _1dbb16dd1_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_1dbb17ba1_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_1dbb17ba1_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _1dbb180d0_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_1dbb1719a_fetch32(_7517_bytes));;
		return _1dbb180d0_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_1dbb1719a_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I64 _963_z = (_7532_n + (static_cast<jule::I64>(_943_c) << 2LL));;
		return (jule::U64)(_1dbb174db_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _1dbb1671b_u128 _1dbb1891b_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _1dbb1671b_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I64 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_1dbb174db_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _1dbb18564_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_1dbb174db_shiftMix((jule::U64)(_1046_a + _1dbb16dd1_fetch64(_10319_bytes)));
		} else {
			_1076_d=_1dbb174db_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_1dbb1782c_hashLen16((jule::U64)(_1dbb16dd1_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_1dbb1782c_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _1dbb16dd1_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_1dbb174db_shiftMix((jule::U64)(_1dbb16dd1_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_1dbb174db_shiftMix((jule::U64)(_1dbb16dd1_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1bc32a559;
				};
			}
		_iter_next_1bc32a559:;
		}
		_iter_end_1bc32a559:;;
	};
	_1046_a=_1dbb1782c_hashLen16(_1046_a, _1066_c);
	_1056_b=_1dbb1782c_hashLen16(_1076_d, _1056_b);
	return _1dbb1671b_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_1dbb1782c_hashLen16(_1056_b, _1046_a)};;
}



inline _1dbb1671b_u128 _1dbb1906a_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_1dbb17ba1_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_1dbb17ba1_rotate64(_14563_a, 44LLU);
	return _1dbb1671b_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _1dbb1671b_u128 _1dbb19499_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _1dbb1906a_weakHashLen32WithSeeds(_1dbb16dd1_fetch64(_15529_bytes), _1dbb16dd1_fetch64(_15529_bytes.slice(8LL)), _1dbb16dd1_fetch64(_15529_bytes.slice(16LL)), _1dbb16dd1_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _1dbb1671b_u128 _1dbb198c8_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _1dbb1671b_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _1dbb1891b_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I64 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_1dbb1671b_u128 _16910_v = _1dbb1671b_u128{._field_hi=0, ._field_lo=0};;
	_1dbb1671b_u128 _17010_w = _1dbb1671b_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_1dbb17ba1_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _1dbb16dd1_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_1dbb17ba1_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _1dbb16dd1_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_1dbb17ba1_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_1dbb17ba1_rotate64((jule::U64)(_1716_x + _1dbb16dd1_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_1dbb17ba1_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1dbb16dd1_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1dbb17ba1_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1dbb16dd1_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1dbb16dd1_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1dbb17ba1_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1dbb19499_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1dbb19499_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1dbb16dd1_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_1dbb17ba1_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1dbb16dd1_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1dbb17ba1_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1dbb16dd1_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1dbb16dd1_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1dbb17ba1_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1dbb19499_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1dbb19499_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1dbb16dd1_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1bc333c16;
			};
		}
	_iter_next_1bc333c16:;
	}
	_iter_end_1bc333c16:;;
	_1716_x+=(jule::U64)(_1dbb17ba1_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _1dbb17ba1_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _1dbb17ba1_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I64 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_1dbb17ba1_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_1dbb16dd1_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _1dbb16dd1_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_1dbb19499_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1bc33e903:;
	}
	_iter_end_1bc33e903:;;
	_1716_x=_1dbb1782c_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_1dbb1782c_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _1dbb1671b_u128{._field_hi=(jule::U64)(_1dbb1782c_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_1dbb1782c_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _1dbb19b92_hash(jule::Slice<jule::U8> _23413_bytes) {
	_1dbb1671b_u128 _2356_sum = _1dbb1671b_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_1dbb198c8_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _1dbb1671b_u128{._field_hi=_1dbb16dd1_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_1dbb16dd1_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_1dbb198c8_hashWithSeed(_23413_bytes, _23413_bytes.len(), _1dbb1671b_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _1dbb16ac3_hash128to64(_2356_sum);;
}



inline jule::U64 _1dbc18499_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _1dbc18db2_hasZeroByte((_1dbc19148_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _1dbc187a7_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _1dbc18db2_hasZeroByte((_1dbc19148_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _1dbc18a71_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_1dbc0a9db_TrailingZeros64(static_cast<jule::U64>((*(_6419_b)))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _1dbc18db2_hasZeroByte(jule::U64 _7016_x) {
	return static_cast<jule::U64>((((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _1dbc19148_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I64 _1dbc19412_numGroups(jule::I64 _7914_n) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result=({ jule::I64 __jule_x = ((_7914_n + 4LL) - 1LL); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _1dbc19621_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc34948a:;
		if (it != expr_end) {
			jule::I64 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1bc34948a:;
			++it;
			_886_i++;
			goto _iter_begin_1bc34948a;
		}
		_iter_end_1bc34948a:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _1dbc199ea_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9414_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _1dbc19ce7_probeStart(jule::U64 _9815_hi, jule::I64 _9823_groups) {
	return _1dbc1a16b_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _1dbc1a16b_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline jule::I64 _1dbc45d78_getLastOsError(void) {
	jule::I64 _212_err = _1db5d9695_GetLastErrno();;
	{
		auto &_match_expr{ _212_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1bc35032b:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1bc34ebdd:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1bc34ec54:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1bc34eccb:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bc34ed53:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1bc35001d:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1bc350084:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1bc34e9ce:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1bc34eade:;
	};
}



inline jule::Slice<jule::Str> _1dbc4676e_Args(void) {
	return _1dbaade88_args();;
}



inline jule::Exceptional<jule::Str> _1dbc46c69_WorkingDir(void) {
	return _1dbc476c6_getwd();
}



inline jule::Exceptional<jule::Str> _1dbc476c6_getwd(void) {
	jule::U8* _116_buf = _1db94a165_Getcwd(nullptr, 0LLU);;
	if ((_116_buf == nullptr)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1dbc45d78_getLastOsError(), &__jule_any_type0)};
	};
	jule::Str _152_pwd = _1db939d47_BytePtrToStr(_116_buf);;
	{
		_1db909564_Free(_116_buf);
	};
	return jule::Exceptional<jule::Str>{.result=_152_pwd};;
}



inline jule::I64 _1dbe8c993_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1bc386197:;
	}
	_iter_end_1bc386197:;;
	return -1LL;;
}



inline jule::I64 _1dbe8d0c0_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc38654e:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1bc38654e:;
			++it;
			_706_i++;
			goto _iter_begin_1bc38654e;
		}
		_iter_end_1bc38654e:;
	};
	return -1LL;;
}



inline jule::I64 _1dbe8d444_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1dbe8c993_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Bool _1dd035ab2_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1dd098691__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1dd0a21b1_isExcludingLatin(_1dd03ea88_Letter, _7613_r);;
}



inline jule::Bool _1dd0a1534_is16(jule::Slice<_1dd09e796_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd076381:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_1dd09e796_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1bd076381:;
				++it;
				_1937_i++;
				goto _iter_begin_1bd076381;
			}
			_iter_end_1bd076381:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ({ jule::I64 __jule_x = (_2096_hi - _2086_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_1dd09e796_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1bd0751b5:;
	}
	_iter_end_1bd0751b5:;;
	return false;;
}



inline jule::Bool _1dd0a18a8_is32(jule::Slice<_1dd09ecc4_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd07c761:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_1dd09ecc4_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1bd07c761:;
				++it;
				_2307_i++;
				goto _iter_begin_1bd07c761;
			}
			_iter_end_1bd07c761:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ({ jule::I64 __jule_x = (_2466_hi - _2456_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_1dd09ecc4_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1bd079483:;
	}
	_iter_end_1bd079483:;;
	return false;;
}



inline jule::Bool _1dd0a21b1_isExcludingLatin(jule::Ptr<_1dd0a0247_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1dd09e796_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1dd0a1534_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1dd09ecc4_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1dd0a18a8_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1dd0a2403_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1dd098691__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1dd0a21b1_isExcludingLatin(_1dd045d58_Upper, _29512_r);;
}



inline jule::I32 _1dd0a2aeb_convertCase(jule::I64 _31316_case, jule::I32 _31327_r, jule::Ptr<_1dd09e2e0_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_1dd09e2e0_CaseRange> _1dd0a2e70_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1dd09e2e0_CaseRange> _33329_caseRange) {
	jule::I64 _3356_lo = 0LL;;
	jule::I64 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I64 _3383_m = static_cast<jule::I64>((static_cast<jule::U64>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_1dd09e2e0_CaseRange> _3397_cr = ((jule::Ptr<_1dd09e2e0_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*_3397_cr.alloc)._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_1bd08e014:;
	}
	_iter_end_1bd08e014:;;
	return nullptr;;
}



inline jule::I32 _1dd0a3239_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I64>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_1dd09a473_asciiFold[static_cast<jule::I64>(_37015_r)]);;
	};
	jule::I64 _3806_lo = 0LL;;
	jule::I64 _3816_hi = _1dd09a75e_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I64 _3833_m = static_cast<jule::I64>((static_cast<jule::U64>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_1dd09a75e_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_1bd093436:;
	}
	_iter_end_1bd093436:;;
	if (((_3806_lo < _1dd09a75e_caseOrbit.len()) && (static_cast<jule::I32>(_1dd09a75e_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_1dd09a75e_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_1dd09e2e0_CaseRange> _3972_cr = _1dd0a2e70_lookupCaseRange(_37015_r, _1dd0980b9_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _1dd0a2aeb_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _1dd0a2aeb_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::Str _1dd0a3613_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I64 __jule_x = jule::MAX_I64; jule::I64 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("strings: repeat: integer buffer size overflow", 45) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1dd0b6912_Builder _186_ss = static__1dd0b74d4_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_1dd0c0dd3_WriteStr(&_186_ss, _1111_s);
		}
	_iter_next_1bd0b12bc:;
	}
	_iter_end_1bd0b12bc:;;
	return _1dd0c16ca_Str(&_186_ss);;
}



inline jule::Bool _1dd0a3976_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1dd0a3cea_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _1dd0a42a1_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1dd0a3976_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1bd0b4e80:;
	}
	_iter_end_1bd0b4e80:;;
	return -1LL;;
}



inline jule::I64 _1dd0a45e2_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1dd0a42a1_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _1dd0a4a21_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1bd0b71d5:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1bd0b69ed;
					};
				}
			_iter_next_1bd0b8956:;
			}
			_iter_end_1bd0b8956:;;
			return _636_j;;
		}
	_iter_next_1bd0b69ed:;
	}
	_iter_end_1bd0b69ed:;;
	return -1LL;;
}



inline jule::I64 _1dd0a4d95_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1dd0a4a21_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _1dd0a667c_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1dbe8d444_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _1dd0a6a01_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa9280_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1bd0c0ab2:;
	}
	_iter_end_1bd0c0ab2:;;
	return -1LL;;
}



inline jule::I64 _1dd0a742a_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa9280_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1dd0a6a01_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1bd0c3dc3:;
	}
	_iter_end_1bd0c3dc3:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1dd0a7abd_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _1dd0a42a1_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1bd0c90d7;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1bd0c90d7:;
	}
	_iter_end_1bd0c90d7:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Bool _1dd0a7e42_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_1dd0a42a1_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _1dd0a89ae_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_1dd0a742a_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _1dd0a8d33_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2686_n = 0LL;;
	jule::I64 _2696_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2713_j = _1dd0a42a1_FindAt(_26410_s, _26418_sub, _2696_i);;
			if ((_2713_j == -1LL)) {
				goto _iter_end_1bd0cdb58;
			};
			(_2686_n)++;
			_2696_i=(_2713_j + _26418_sub.len());
		}
	_iter_next_1bd0cdb58:;
	}
	_iter_end_1bd0cdb58:;;
	return _2686_n;;
}



inline jule::Str _1dd0a931c_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2892_m = _1dd0a8d33_Count(_28412_s, _28420_sub);;
	if ((_2892_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2892_m < _28444_n))) {
		_28444_n=_2892_m;
	};
	_1dd0b6912_Builder _2976_ss = static__1dd0b74d4_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2986_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3003_j = _1dd0a42a1_FindAt(_28412_s, _28420_sub, _2986_i);;
			if ((_3003_j == -1LL)) {
				goto _iter_end_1bd0d273e;
			};
			_1dd0c0dd3_WriteStr(&_2976_ss, _28412_s.slice(_2986_i, _3003_j));
			_1dd0c0dd3_WriteStr(&_2976_ss, _28430_new);
			_2986_i=(_3003_j + _28420_sub.len());
		}
	_iter_next_1bd0d273e:;
	}
	_iter_end_1bd0d273e:;;
	_1dd0c0dd3_WriteStr(&_2976_ss, _28412_s.slice(_2986_i));
	return _1dd0c16ca_Str(&_2976_ss);;
}



inline jule::Str _1dd0aa098_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3426_i = 0LL;;
	while ((_3426_i < _34117_s.len())) {
		{
			jule::I32 _3443_r;
			jule::I64 _3446_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa9280_DecodeRuneStr(_34117_s.slice(_3426_i));
				_3443_r = __jule_assign_result.__jule_result_arg0;
				_3446_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1dd0a6a01_FindRune(_34125_cutset, _3443_r) == -1LL)) {
				return _34117_s.slice(_3426_i);;
			};
			_3426_i+=_3446_n;
		}
	_iter_next_1bd0d76ab:;
	}
	_iter_end_1bd0d76ab:;;
	return jule::Str();;
}



inline jule::Str _1dd0aa41c_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3566_i = _35514_s.len();;
	while ((_3566_i > 0LL)) {
		{
			jule::I32 _3583_r;
			jule::I64 _3586_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa97d0_DecodeLastRuneStr(_35514_s.slice(0LL, _3566_i));
				_3583_r = __jule_assign_result.__jule_result_arg0;
				_3586_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1dd0a6a01_FindRune(_35522_cutset, _3583_r) == -1LL)) {
				return _35514_s.slice(0LL, _3566_i);;
			};
			_3566_i-=_3586_n;
		}
	_iter_next_1bd0d92c3:;
	}
	_iter_end_1bd0d92c3:;;
	return jule::Str();;
}



inline jule::Str _1dd0aa791_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _1dd0aa098_TrimLeft(_1dd0aa41c_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Str _1dd0aab15_Join(jule::Slice<jule::Str> _3759_parts, jule::Str _37523_sep) {
	{
		auto _match_expr{ _3759_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1bd0daba9:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1bd0db3c4:;
			{
				return _3759_parts[0LL];;
			}
		}
		_match_end_1bd0db33b:;
	};
	jule::I64 _3826_n = 0LL;;
	{
		auto expr = &(_3759_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd0db47e:;
		if (it != expr_end) {
			jule::Str *_3839_part = it;
			{
				_3826_n+=(*(_3839_part)).len();
				(_3826_n)++;
			}
			_iter_next_1bd0db47e:;
			++it;
			goto _iter_begin_1bd0db47e;
		}
		_iter_end_1bd0db47e:;
	};
	_1dd0b6912_Builder _3876_s = static__1dd0b74d4_New((_3826_n + 1LL));;
	_1dd0c0dd3_WriteStr(&_3876_s, _3759_parts[0LL]);
	{
		auto expr = _3759_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bd0dce86:;
		if (it != expr_end) {
			jule::Str *_3899_part = it;
			{
				_1dd0c0dd3_WriteStr(&_3876_s, _37523_sep);
				_1dd0c0dd3_WriteStr(&_3876_s, (*(_3899_part)));
			}
			_iter_next_1bd0dce86:;
			++it;
			goto _iter_begin_1bd0dce86;
		}
		_iter_end_1bd0dce86:;
	};
	return _1dd0c16ca_Str(&_3876_s);;
}



inline jule::Bool _1dd0c33ad_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I64 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_1bd0e1143;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_1bd0e1286;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_1bd0e1286;
			};
			return false;;
		}
	_iter_next_1bd0e1286:;
	}
	_iter_end_1bd0e1286:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_1bd0e1143:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_1bd0e3dc1:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I64 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa9280_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_1bd0e3dc1;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_1bd0e3dc1;
					};
					return false;;
				};
				jule::I32 _1237_r = _1dd0a3239_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_1dd0a3239_SimpleFold(_1237_r);
					}
				_iter_next_1bd0e7de7:;
				}
				_iter_end_1bd0e7de7:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_1bd0e3dc1;
				};
				return false;;
			}
			_iter_next_1bd0e3dc1:;
			it += len;
			goto _iter_begin_1bd0e3dc1;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Str _1dd0c4876_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _1dd0c758d_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _1dd0c6eb6_IsPathSep(_1102_originalPath[0LL])) && _1dd0c6eb6_IsPathSep(_1102_originalPath[1LL]))) {
			return _1dd0c4e4d_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _1dd0c6eb6_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_1dd0c3a1d_lazyBuff _1286_out = _1dd0c3a1d_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_1dd0c425a_append(&_1286_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_1dd0c6eb6_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1bd1070b0:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _1dd0c6eb6_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1bd104cc2:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _1dd0c6eb6_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1bd104d38:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1bd10b16e:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_1dd0c6eb6_IsPathSep(_1dd0c3ea2_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1bd10b900:;
									}
									_iter_end_1bd10b900:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1bd10b218:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_1dd0c425a_append(&_1286_out, 47LLU);
									};
									_1dd0c425a_append(&_1286_out, '.');
									_1dd0c425a_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1bd10acb7:;
						};
					}
				}
				else {
					_case_begin_1bd104c5b:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_1dd0c425a_append(&_1286_out, 47LLU);
						};
						;
						for (; ((_1336_r < _1272_n) && (!(_1dd0c6eb6_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_1dd0c425a_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1bd106147:;
						}
						_iter_end_1bd106147:;;
					}
				}
				_match_end_1bd10495e:;
			};
		}
	_iter_next_1bd104475:;
	}
	_iter_end_1bd104475:;;
	if ((_1286_out._field_w == 0LL)) {
		_1dd0c425a_append(&_1286_out, '.');
	};
	return _1dd0c4e4d_FromSlash(_1dd0c44e1_string(&_1286_out));;
}



inline jule::Str _1dd0c4e4d_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1dd0c528e_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1dd0c7b65_join(_2269_elem);;
}



inline jule::Str _1dd0c5525_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_1dd0c6eb6_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1bd110409:;
	}
	_iter_end_1bd110409:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1dd0c57de_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1dd0c78ce_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1dd0c5aa8_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1dd0c6eb6_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1bd111790:;
	}
	_iter_end_1bd111790:;;
	(_25213_path).mut_slice(_1dd0c61c4_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_1dd0c6eb6_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1bd111bad:;
	}
	_iter_end_1bd111bad:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1dd0c5e82_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _1dd0c61c4_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_1dd0c6eb6_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1bd115167:;
	}
	_iter_end_1bd115167:;;
	jule::Str _2892_dir = _1dd0c4876_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _1dd0c61c4_VolumeName(jule::Str _30115_path) {
	return _1dd0c4e4d_FromSlash(_30115_path.slice(0LL, _1dd0c758d_volumeNameLen(_30115_path)));;
}



inline jule::Bool _1dd0c6eb6_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1dd0c72c4_IsAbs(jule::Str _5310_path) {
	return _1dd0a3976_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I64 _1dd0c758d_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1dd0c78ce_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1dd0c72c4_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1dd0c4876_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _672_wd = ({
		auto except = _1dbc46c69_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1dd0c7b65_join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _672_wd; (*it++) = _638_path; __jule_collection; }));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1dd0c7b65_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd11d192:;
		if (it != expr_end) {
			jule::I64 _746_i = it - expr->begin();
			jule::Str *_749_e = it;
			{
				if (!((*(_749_e))).empty()) {
					return _1dd0c4876_Clean(_1dd0aab15_Join(_739_elem.slice(_746_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1bd11d192:;
			++it;
			_746_i++;
			goto _iter_begin_1bd11d192;
		}
		_iter_end_1bd11d192:;
	};
	return jule::Str();;
}



inline jule::I64 _1dbd02ad3_getLastFsError(void) {
	jule::I64 _412_err = _1db5d9695_GetLastErrno();;
	{
		auto &_match_expr{ _412_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1bd12b06d:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1bd12ae6e:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1bd12a897:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1bd12a90d:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bd12a974:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1bd12a9eb:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1bd12aa73:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1bd12aaea:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1bd12b216:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1bd12b28d:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1bd12b315:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1bd12b38c:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1bd12b414:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1bd12b48b:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1bd12b513:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1bd12b58a:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1bd12b612:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1bd12b689:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1bd12b711:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1bd12b788:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1bd12b810:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1bd12b887:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1bd12b90e:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1bd12b986:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1bd12ba0d:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1bd12ba85:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1bd12bb0c:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1bd12bb84:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1bd12a721:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1bd12a831:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1dd45592c_AtoiBp(jule::U8* _722_b, jule::I64 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _86_neg = ((*(_722_b)) == '-');;
	if (_86_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>((jule::U8)((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1bd157385:;
	}
	_iter_end_1bd157385:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_86_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _1dd45de74_Itoa(jule::I64 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1dd45e282_Utoa(static_cast<jule::U64>((-(_89_x)))));;
	};
	return _1dd45e282_Utoa(static_cast<jule::U64>(_89_x));;
}



inline jule::Str _1dd45e282_Utoa(jule::U64 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _206_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _216_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U64 _233_q = (_1613_x / 10LLU);;
			_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _1613_x) - (jule::U64)(_233_q * 10LLU)));
			(_216_i)++;
			_1613_x=_233_q;
		}
	_iter_next_1bd15ddc5:;
	}
	_iter_end_1bd15ddc5:;;
	_206_buf[_216_i]=static_cast<jule::U8>((jule::U64)('0' + _1613_x));
	(_206_buf).mut_slice(0LL, (_216_i + 1LL));;
	_1dd45e4b3_rev(&(_206_buf));
	return _1db9906d8_StrFromBytes(_206_buf);;
}



inline void _1dd45e4b3_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I64 _366_i = 0LL;;
	for (; (_366_i < ((*(_3513_b)).len() >> 1LL)); (_366_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_366_i];
				(*(_3513_b))[_366_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1bd1629cd:;
	}
	_iter_end_1bd1629cd:;;
}



inline jule::Slice<char*> _1dd463143_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs) {
	jule::Slice<char*> _376_cs = ({ auto __jule_collection = jule::Slice<char*>::alloc(((*(_3625_s)).len() + 1LL), ((*(_3625_s)).len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = nullptr; __jule_collection; });;
	(*(_3640_bargs))=({ auto __jule_collection = jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3625_s)).len(), (*(_3625_s)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::U8>(nullptr); __jule_collection; });
	{
		auto expr = _3625_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd180314:;
		if (it != expr_end) {
			jule::I64 _396_i = it - expr->begin();
			jule::Str *_399_arg = it;
			{
				jule::Slice<jule::U8> _407_barg = _1db93a0cd_StrToBytes((*(_399_arg)));;
				(*(_3640_bargs))[_396_i]=_407_barg;
				_376_cs[_396_i]=((char*)((&(_407_barg[0LL]))));
			}
			_iter_next_1bd180314:;
			++it;
			_396_i++;
			goto _iter_begin_1bd180314;
		}
		_iter_end_1bd180314:;
	};
	_376_cs[(_376_cs.len() - 1LL)]=nullptr;
	return _376_cs;;
}



inline jule::I64 _1dd4634b7_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv) {
	jule::Slice<jule::Slice<jule::U8>> _496_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _502_cargv = _1dd463143_strSliceToCstrSlice(_4824_argv, &(_496_bargs));;
	jule::Slice<jule::U8> _512_s = _1db93a0cd_StrToBytes((*(_4812_file)));;
	{
		return execvp(((char*)((&(_512_s[0LL])))), (char*const*)(&(_502_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _1dd4636e8_setenv(jule::Slice<jule::Str>* _5712_envv) {
	;
	{
		auto expr = _5712_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd18358c:;
		if (it != expr_end) {
			jule::Str *_599_env = it;
			{
				jule::I64 _603_i = _1dbe8d0c0_FindByteStr((*(_599_env)), '=');;
				if ((_603_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				{
					jule::Slice<jule::U8> _654_key = _1db93a0cd_StrToBytes((*(_599_env)).slice(0LL, _603_i));;
					if ((((*(_599_env)).len() - _603_i) == 1LL)) {
						jule::Str _675_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_675_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					} else {
						jule::Slice<jule::U8> _725_val = _1db93a0cd_StrToBytes((*(_599_env)).slice((_603_i + 1LL)));;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_725_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
						};
					};
				};
			}
			_iter_next_1bd18358c:;
			++it;
			goto _iter_begin_1bd18358c;
		}
		_iter_end_1bd18358c:;
	};
	return jule::VoidExceptional{};
}



inline jule::I64 _1dd4646e9_processErrorFromCode(jule::I64 _725_code) {
	{
		auto &_match_expr{ _725_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1bd18469d:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bd184714:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1bd189230:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1bd188e11:;
	};
}



inline jule::I64 _1dd464870_getLastProcessError(void) {
	return _1dd4646e9_processErrorFromCode(_1db5d9695_GetLastErrno());;
}



inline void _1dd465035_Exit(jule::I64 _109_code) {
	_1db95cd26_Exit(_109_code);
}



inline jule::Str _1dd465299_Executable(void) {
	return _1db996667_executable();;
}



inline jule::Bool _1dd348d2b_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1dd349106_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1dd346a71_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1b0d8e:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1bd1b0d8e:;
			++it;
			goto _iter_begin_1bd1b0d8e;
		}
		_iter_end_1bd1b0d8e:;
	};
	return false;;
}



inline jule::Bool _1dd3493c0_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1dd348765_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1b1bd6:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1bd1b1bd6:;
			++it;
			goto _iter_begin_1bd1b1bd6;
		}
		_iter_end_1bd1b1bd6:;
	};
	{
		auto expr = &(_1dd348a40_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1b1ad7:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1bd1b1ad7:;
			++it;
			goto _iter_begin_1bd1b1ad7;
		}
		_iter_end_1bd1b1ad7:;
	};
	return false;;
}



inline jule::Str _1dd3568d8_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args) {
	return _1dd357378_applyFmt(_3249_fmt, _32422_args);;
}



inline jule::Str _1dd356be6_argToStr(jule::Any _32813_arg) {
	{
		auto &_match_expr{ _32813_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bd1b3e80:;
			{
				return _32813_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1bd1b4227:;
			{
				return __jule_strFromByte(_32813_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bd1b428d:;
			{
				return __jule_strFromRune(_32813_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1bd1b41b1:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1bd1b414a:;
	};
}



inline jule::I64 _1dd356eb0_findNextFmt(jule::Str _34116_fmt) {
	{
		auto expr = &(_34116_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1b3666:;
		if (it != expr_end) {
			jule::I64 _3426_i = it - expr->begin();
			jule::U8 *_3429_b = it;
			{
				if (((*(_3429_b)) == '@')) {
					return _3426_i;;
				};
			}
			_iter_next_1bd1b3666:;
			++it;
			_3426_i++;
			goto _iter_begin_1bd1b3666;
		}
		_iter_end_1bd1b3666:;
	};
	return -1LL;;
}



inline jule::Str _1dd357378_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args) {
	_1dd0b6912_Builder _3516_s = static__1dd0b74d4_New(32LL);;
	{
		auto expr = &(_35027_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1b6bdb:;
		if (it != expr_end) {
			jule::Any *_3529_arg = it;
			{
				jule::I64 _3533_i = _1dd356eb0_findNextFmt(_35017_fmt);;
				if ((_3533_i == -1LL)) {
					goto _iter_end_1bd1b6bdb;
				};
				_1dd0c0dd3_WriteStr(&_3516_s, _35017_fmt.slice(0LL, _3533_i));
				_1dd0c0dd3_WriteStr(&_3516_s, _1dd356be6_argToStr((*(_3529_arg))));
				(_35017_fmt).mut_slice((_3533_i + 1LL));;
			}
			_iter_next_1bd1b6bdb:;
			++it;
			goto _iter_begin_1bd1b6bdb;
		}
		_iter_end_1bd1b6bdb:;
	};
	_1dd0c0dd3_WriteStr(&_3516_s, _35017_fmt);
	return _1dd0c16ca_Str(&_3516_s);;
}



inline jule::Bool _1dd35827a_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _1dd359699_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _1dd3599a7_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _1dd359c71_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _1dd35a0b2_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _1dd35a348_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _1dd35a612_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _1dd35a8cb_IsUnix(jule::Str _5511_os) {
	return (_1dd3599a7_IsDarwin(_5511_os) || _1dd359c71_IsLinux(_5511_os));;
}



inline jule::Bool _1dd35aca5_Is32Bit(jule::Str _5812_arch) {
	return _1dd35a0b2_IsI386(_5812_arch);;
}



inline jule::Bool _1dd35aee7_Is64Bit(jule::Str _6112_arch) {
	return (_1dd35a348_IsAmd64(_6112_arch) || _1dd35a612_IsArm64(_6112_arch));;
}



inline void _1dd466476_init(void) {
	jule::Str _256_path = _1dd465299_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("build: executable file cannot found", 35) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1dd4659c5_PathWd=({
			auto except = _1dbc46c69_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("build: working directory path cannot found", 42) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1dd46571c_PathExec=_1dd0c5e82_Dir(_256_path);
		_1dd46550d_PathStdlib=_1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _1dd46571c_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_1dd465cc2_PathApi=_1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _1dd46571c_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1c2d42d5c_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1c2d4316a_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1c2d43434_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1c2d43775_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1c2d45cd8_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1bd239489:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1c2d4bbe0_IsInf(_4714_f, 0LL) || _1c2d4b55d_IsNaN(_4714_f)) {
			_case_begin_1bd239533:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1bd23939b:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c2d4bea9_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1c2d43434_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1c2d43775_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1c2d4b250_NaN(void) {
	return _1c2d43775_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1c2d4b55d_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1c2d4b827_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1c2d43775_F64FromBits(9218868437227405312LLU);;
	};
	return _1c2d43775_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1c2d4bbe0_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1c2d4bea9_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1c2d4e363_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1c2d4d97d_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1c2d4b55d_IsNaN(_1118_x) || _1c2d4bbe0_IsInf(_1118_x, 1LL)) {
			_case_begin_1bd27575b:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1bd275805:;
			{
				return _1c2d4b250_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1bd27586b:;
			{
				return _1c2d4b827_Inf(-1LL);;
			}
		}
		_match_end_1bd275690:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c2d45cd8_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1c2d4e363_Abs(jule::F64 _438_x) {
	return _1c2d43775_F64FromBits((_1c2d43434_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1c2d55dd6_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1c2d4e363_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1bd2d83e5:;
		}
		_iter_end_1bd2d83e5:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1c2d566de_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c2d45cd8_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1c2d4d97d_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1ab146b28_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _1db9906d8_StrFromBytes(_1ab147211_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1ab14a5bb_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1ab147211_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1ab14596d_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bd4d2d92:;
			{
				_886_bits=static_cast<jule::U64>(_1c2d42d5c_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1ab14596d_floatInfo>)((&(_1ab145d14_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bd4d2ac8:;
			{
				_886_bits=_1c2d43434_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1ab14596d_floatInfo>)((&(_1ab146111_f64info))));
			}
		}
		else {
			_case_begin_1bd4d1885:;
			{
				__jule_panic_s(jule::Str::lit("conv: illegal bitSize", 21) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1bd4d2754:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (jule::U64)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>(({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_1bd4d6bdc:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1bd4d842a:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1bd4d8518:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1bd4d7ca9:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1bd4d7b99:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1bd4d6cca:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1bd4d5d95:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1bd4d603d:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1ab149741_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1ab149dc3_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1ab146595_decimalSlice _1376_digs = _1ab146595_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1ab155351_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bd4db1a8:;
				{
					_8758_prec=_1ab14a5bb_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bd4dc1ba:;
				{
					_8758_prec=_1ab14a5bb_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bd4dc231:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1bd4db3c8:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bd4de1bc:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bd4de288:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1bd4ddc27:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1bd4ddd37:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1ab154097_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1ab15453c_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1ab14791a_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1ab1480e1_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1ab14791a_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1ab14596d_floatInfo* _18824_flt) {
	_1ab159135_decimal _1896_d = _1ab159135_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1ab159520_assign(&_1896_d, _1882_mant);
	_1ab1597c8_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1ab146595_decimalSlice _1926_digs = _1ab146595_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1ab14850e_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1ab146595_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bd4e514b:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bd4e5e4e:;
				{
					_18733_prec=_1ab14a5bb_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bd4e5eb5:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1bd4e5cb7:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bd4e4d71:;
				{
					_1ab15a0e2_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bd4e4dd7:;
				{
					_1ab15a0e2_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bd4e4e4d:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1ab15a0e2_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1bd4e74a0:;
		};
		_1926_digs=_1ab146595_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1ab1480e1_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1ab1480e1_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1ab146595_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1bd4ea63a:;
			{
				return _1ab148aa3_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bd4ea6a1:;
			{
				return _1ab14908c_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1bd4ea717:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1ab148aa3_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1ab14908c_fmtF(_22418_dst, _22447_neg, _2252_digs, _1ab14a5bb_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1bd4ea580:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1ab14850e_roundShortest(_1ab159135_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1ab14596d_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1ab159135_decimal _2926_upper = _1ab159135_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1ab159520_assign(&_2926_upper, (jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1ab1597c8_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1ab159135_decimal _3116_lower = _1ab159135_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1ab159520_assign(&_3116_lower, (jule::U64)(({ jule::U64 __jule_x = _3026_mantlo; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1ab1597c8_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1bd506844;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1bd50b5e6:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1bd50b690:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1bd50b706:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1bd50b519:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1bd50e0aa:;
					{
						_1ab15a0e2_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1bd50e154:;
					{
						_1ab159a81_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1bd50e1ba:;
					{
						_1ab159d39_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1bd50b76c:;
			};
		}
	_iter_next_1bd506844:;
	}
	_iter_end_1bd506844:;;
}



inline jule::Slice<jule::U8> _1ab148aa3_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1ab146595_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1ab14a247_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1bd51309d:;
		}
		_iter_end_1bd51309d:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1bd515787:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1bd515941:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1bd515204:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _4306_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1bd5150a0:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1ab14908c_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1ab146595_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1ab14a247_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1bd51955a:;
		}
		_iter_end_1bd51955a:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1bd51a869:;
		}
		_iter_end_1bd51a869:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1ab149741_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1ab14596d_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ab15e327_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ab15e327_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1ab149dc3_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1ab14596d_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1bd520660:;
	}
	_iter_end_1bd520660:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>(({ jule::I64 __jule_x = _51126_prec; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1bd525a83:;
		}
		_iter_end_1bd525a83:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1bd527601:;
		}
		_iter_end_1bd527601:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1ab14b259_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1bd524983:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1bd52a0a4:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1bd5296e1:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1bd529559:;
	};
	return _51113_dst;;
}



inline jule::I64 _1ab14a247_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1ab14a5bb_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1ab14b259_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1a9c49771_ConvError _1ab14b6cc_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1a9c49771_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1bd53083a:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1bd53076e:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1ab14b259_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1bd5322dc:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1ab14b259_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1bd5323ca:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1ab14b259_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1bd531e8a:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1bd531e24:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1bd531d47:;
					};
				};
			}
		}
		else {
			_case_begin_1bd52eb8b:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1bd53021e:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1bd536302:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1bd535ed3:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1bd53153e:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1bd535e6c:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bd536049:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bd531a06:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1bd537446:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5383e2:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1bd5396ac:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1ab14b259_lower(_1099_c)) && (_1ab14b259_lower(_1099_c) <= 'z'))) {
						_case_begin_1bd5395e1:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1ab14b259_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1bd5391d4:;
						{
							goto _iter_next_1bd5383e2;
						}
					}
					else {
						_case_begin_1bd53916d:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1bd5390e6:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1bd5383e2:;
			++it;
			goto _iter_begin_1bd5383e2;
		}
		_iter_end_1bd5383e2:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1ab14bb0b_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1a9c49771_ConvError __jule_assign_result = _1ab14b6cc_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1ab14c0b2_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1a9c49771_ConvError __jule_assign_result = _1ab14b6cc_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = static_cast<jule::U64>((_17240_bitSize - 1LL)); ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1ab14cc72_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1c2d43775_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _1dbc08de6_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U64 __jule_y = static_cast<jule::U64>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbc13d24_Mul64(_4122_man, _1ab14da31_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbc13d24_Mul64(_4122_man, _1ab14da31_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1c2d43775_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1ab14d13a_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1c2d4316a_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _1dbc08de6_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U64 __jule_y = static_cast<jule::U64>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbc13d24_Mul64(_11022_man, _1ab14da31_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbc13d24_Mul64(_11022_man, _1ab14da31_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1c2d4316a_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1ab14ed62_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1bd55d428:;
	}
	_iter_end_1bd55d428:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1ab150170_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1bd561d11:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1bd561d88;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1bd561d88:;
			{
				jule::I64 _887_caseN = _1ab14ed62_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1c2d4b827_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1bd561dee:;
			{
				if ((_1ab14ed62_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1c2d4b250_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1bd561c67:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1ab150439_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1bd567113:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1bd56750e:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1bd56709c:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1ab14b259_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1bd56c4ae:;
					{
						goto _iter_next_1bd56b942;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1bd56c558:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1bd571172;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1bd56b942;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1bd56c5be:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1bd56b942;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bd56b942;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1ab14b259_lower(_1383_c))) && (_1ab14b259_lower(_1383_c) <= 'f'))) {
					_case_begin_1bd56c635:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1ab14b259_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bd56b942;
					}
				}
				_match_end_1bd56c3c1:;
			};
			goto _iter_end_1bd56b942;
		}
	_iter_next_1bd56b942:;
	}
	_iter_end_1bd56b942:;;
	_julec_label_1bd571172:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1ab14b259_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1bd574829;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1bd574829:;
		}
		_iter_end_1bd574829:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1ab151e85_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U64 __jule_y = _1ab146111_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1bd57c854:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1bd57c8ba:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1ab15134c_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1ab15134c_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1bd57c931:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1ab15134c_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bd57c766:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1ab1523b4_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U64 __jule_y = _1ab145d14_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1bd581abc:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1bd581b33:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1ab15167c_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1ab15167c_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1bd581b99:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1ab15167c_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bd5819ce:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1a9c49771_ConvError _1ab152958_atofHex(_1ab14596d_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1a9c49771_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1bd585472:;
	}
	_iter_end_1bd585472:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((jule::U64)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1bd58774e:;
	}
	_iter_end_1bd58774e:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1bd587b28:;
	}
	_iter_end_1bd587b28:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1ab14596d_floatInfo_eq(&(*(_55613_flt)), _1ab145d14_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c2d4316a_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1c2d43775_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a9c49771_ConvError _1ab152d32_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1a9c49771_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab150170_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab150439_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1a9c49771_ConvError __jule_assign_result = _1ab152958_atofHex(&(_1ab145d14_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ab1523b4_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ab14d13a_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ab14d13a_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ab159135_decimal _6676_d = _1ab159135_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1ab150aee_set(&_6676_d, _1db990188_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ab150e40_floatBits(&_6676_d, &(_1ab145d14_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1c2d4316a_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a9c49771_ConvError _1ab153074_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a9c49771_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab150170_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab150439_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1a9c49771_ConvError __jule_assign_result = _1ab152958_atofHex(&(_1ab146111_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ab151e85_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ab14cc72_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ab14cc72_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ab159135_decimal _7246_d = _1ab159135_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1ab150aee_set(&_7246_d, _1db990188_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ab150e40_floatBits(&_7246_d, &(_1ab146111_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1c2d43775_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a9c49771_ConvError _1ab1533e8_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a9c49771_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1a9c49771_ConvError __jule_assign_result = _1ab152d32_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1ab153074_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1ab15376c_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a9c49771_ConvError __jule_assign_result = _1ab1533e8_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1ab154097_ryuFtoaFixed32(_1ab146595_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with negative prec", 46) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with prec > 9", 41) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _1dbc114b4_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U64 __jule_y = static_cast<jule::U64>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1ab1555d7_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab156ece_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult64bitPow10", 54) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1ab157782_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _942_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U64 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1ab154d78_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1ab15453c_ryuFtoaFixed64(_1ab146595_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed64 called with prec > 18", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _1dbc1177d_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U64 __jule_y = static_cast<jule::U64>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1ab1555d7_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab15740d_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1ab157782_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _1662_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U64 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1ab154d78_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1ab154d78_formatDecimal(_1ab146595_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1ab15487d_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1bd5bca81:;
	}
	_iter_end_1bd5bca81:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((jule::U64)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1bd5c0c3d:;
	}
	_iter_end_1bd5c0c3d:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1bd5c6705:;
	}
	_iter_end_1bd5c6705:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1ab155351_ryuFtoaShortest(_1ab146595_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1ab14596d_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1dbc0a9db_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U64 __jule_y = static_cast<jule::U64>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1ab15642e_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1ab155cd0_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1ab15642e_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1ab1555d7_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1ab14596d_floatInfo_eq(&(*(_26168_flt)), _1ab145d14_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab156ece_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab156ece_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab156ece_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab15740d_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab15740d_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab15740d_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1ab157782_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1ab157782_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1ab157782_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _3252_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1ab15642e_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1ab1555d7_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1ab1558a1_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1ab155cd0_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1ab14596d_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1ab15642e_ryuDigits(_1ab146595_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ab157a4b_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ab157a4b_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ab157a4b_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1ab156aa0_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1ab156aa0_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1bd5e93a4:;
		}
		_iter_end_1bd5e93a4:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((jule::U64)(9LL - _4287_n));
		_1ab156aa0_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1bd5e9e65:;
	}
	_iter_end_1bd5e9e65:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1bd5ebc8b:;
	}
	_iter_end_1bd5ebc8b:;;
}



inline void _1ab156aa0_ryuDigits32(_1ab146595_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1bd5ee62e;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1bd5ee62e:;
	}
	_iter_end_1bd5ee62e:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1bd6056e0:;
	}
	_iter_end_1bd6056e0:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1ab156ece_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult64bitPow10: power of 10 is out of range", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1ab14da31_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbc13d24_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1ab1558a1_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1ab15740d_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult128bitPow10: power of 10 is out of range", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1ab14da31_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1ab1558a1_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbc13d24_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbc13d24_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dbc1251a_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ab157782_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1bd613764:;
	}
	_iter_end_1bd613764:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1ab157a4b_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1ab15a983_trim(_1ab159135_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1bd616bda:;
	}
	_iter_end_1bd616bda:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1ab15ac6e_rightShift(_1ab159135_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; (({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U64)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1bd619dca:;
				}
				_iter_end_1bd619dca:;;
				goto _iter_end_1bd6187e1;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1bd6187e1:;
	}
	_iter_end_1bd6187e1:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (jule::U64)(static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _28432_k; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1bd61b2c7:;
	}
	_iter_end_1bd61b2c7:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U64)(_2896_n * 10LLU);
		}
	_iter_next_1bd61d670:;
	}
	_iter_end_1bd61d670:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1ab15a983_trim(_28420_a);
}



inline jule::Bool _1ab15b225_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1bd6213a9:;
	}
	_iter_end_1bd6213a9:;;
	return false;;
}



inline void _1ab15b4cd_leftShift(_1ab159135_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1ab158a4c_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1ab15b225_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1ab158a4c_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U64 __jule_x = (jule::U64)(static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U64 __jule_y = _35231_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1bd6248c9:;
	}
	_iter_end_1bd6248c9:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1bd626e5e:;
	}
	_iter_end_1bd626e5e:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1ab15a983_trim(_35219_a);
}



inline jule::Bool _1ab15b852_shouldRoundUp(_1ab159135_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1ab15d029_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1ab15d9ec_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ab15e327_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1ab15d3e2_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1ab15d9ec_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ab15e327_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1ab15d6ab_Itoa(jule::I64 _819_i) {
	return _1ab15d3e2_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1ab15d9ec_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1db9906d8_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1ab15dc83_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1ab15e327_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("conv: illegal base", 18) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1bd65d319:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = ({ jule::U64 __jule_x = (_1547_us % 100LL); jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1bd65edcb:;
				}
				_iter_end_1bd65edcb:;;
				jule::U64 _1643_is = ({ jule::U64 __jule_x = _1547_us; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1ab15dc83_isPowerOfTwo(_10541_base)) {
			_case_begin_1bd65da23:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_1dbc09d3c_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (jule::U64)(static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1bd667983:;
				}
				_iter_end_1bd667983:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1bd65c37e:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1bd65d0e9:;
				}
				_iter_end_1bd65d0e9:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1bd65c66a:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1db9906d8_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline void _1ab160a32_Throw(jule::Str _910_msg) {
	jule::outln(_1bc355034_toStr(_910_msg));
	_1dd465035_Exit(1LL);
}



inline jule::Bool _1ad6d03ac_IsUnaryOp(jule::U64 _33314_id) {
	{
		auto expr = &(_1ad6361e2_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6c631b:;
		if (it != expr_end) {
			jule::U64 *_3349_op = it;
			{
				if ((_33314_id == (*(_3349_op)))) {
					return true;;
				};
			}
			_iter_next_1bd6c631b:;
			++it;
			goto _iter_begin_1bd6c631b;
		}
		_iter_end_1bd6c631b:;
	};
	return false;;
}



inline jule::Bool _1ad6d06ba_IsBinOp(jule::U64 _34312_id) {
	{
		auto expr = &(_1ad6c8b47_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6c6b13:;
		if (it != expr_end) {
			jule::U64 *_3449_op = it;
			{
				if ((_34312_id == (*(_3449_op)))) {
					return true;;
				};
			}
			_iter_next_1bd6c6b13:;
			++it;
			goto _iter_begin_1bd6c6b13;
		}
		_iter_end_1bd6c6b13:;
	};
	return false;;
}



inline jule::Bool _1ad6d0cc5_IsStr(jule::Str _36310_k) {
	return (!(_36310_k).empty() && ((_36310_k[0LL] == '\"') || _1ad6d105b_IsRawStr(_36310_k)));;
}



inline jule::Bool _1ad6d105b_IsRawStr(jule::Str _36613_k) {
	return (!(_36613_k).empty() && (_36613_k[0LL] == '`'));;
}



inline jule::Bool _1ad6d1325_IsRune(jule::Str _37011_k) {
	return (!(_37011_k).empty() && (_37011_k[0LL] == '\''));;
}



inline jule::Bool _1ad6d1c0a_IsFloat(jule::Str _37912_k) {
	if (_1dd0a3976_HasPrefix(_37912_k, jule::Str::lit("0x", 2))) {
		return _1dd0a89ae_ContainsAny(_37912_k, jule::Str::lit(".pP", 3));;
	};
	return _1dd0a89ae_ContainsAny(_37912_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1ad6d1ec4_IsNum(jule::Str _38710_k) {
	if ((_38710_k).empty()) {
		return false;;
	};
	jule::U8 _3922_b = _38710_k[0LL];;
	return ((_3922_b == '.') || (('0' <= _3922_b) && (_3922_b <= '9')));;
}



inline jule::Bool _1ad6d2557_IsIgnoreIdent(jule::Str _40218_ident) {
	return (_40218_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1ad6d2821_IsAnonIdent(jule::Str _40516_ident) {
	return (_40516_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1ad6d2da4_IsSpace(jule::I32 _41812_r) {
	{
		auto expr = &(_1ad635e06_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6ce203:;
		if (it != expr_end) {
			jule::I32 *_4199_cr = it;
			{
				if ((_41812_r == (*(_4199_cr)))) {
					return true;;
				};
			}
			_iter_next_1bd6ce203:;
			++it;
			goto _iter_begin_1bd6ce203;
		}
		_iter_end_1bd6ce203:;
	};
	return false;;
}



inline jule::Bool _1ad6d339e_IsLetter(jule::I32 _42813_r) {
	return _1dd035ab2_IsLetter(_42813_r);;
}



inline jule::Bool _1ad6d3822_IsKeyword(jule::Str _44814_s) {
	{
		auto expr = &(_1ad6d7958_keywords);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6d1678:;
		if (it != expr_end) {
			_1ad6d7529_kindPair *_4499_op = it;
			{
				if ((_44814_s == (*(_4499_op))._field_kind)) {
					return true;;
				};
			}
			_iter_next_1bd6d1678:;
			++it;
			goto _iter_begin_1bd6d1678;
		}
		_iter_end_1bd6d1678:;
	};
	return false;;
}



inline jule::Bool _1ad6d3adb_IsDecimal(jule::U8 _45814_b) {
	return (('0' <= _45814_b) && (_45814_b <= '9'));;
}



inline jule::Bool _1ad6d3da5_IsBinary(jule::U8 _46113_b) {
	return ((_46113_b == '0') || (_46113_b == '1'));;
}



inline jule::Bool _1ad6d416e_IsOctal(jule::U8 _46412_b) {
	return (('0' <= _46412_b) && (_46412_b <= '7'));;
}



inline jule::Bool _1ad6d4438_IsHex(jule::U8 _46710_b) {
	{
		
		if ((('0' <= _46710_b) && (_46710_b <= '9'))) {
			_case_begin_1bd6d36ad:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46710_b) && (_46710_b <= 'f'))) {
			_case_begin_1bd6d3757:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46710_b) && (_46710_b <= 'F'))) {
			_case_begin_1bd6d37ce:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bd6d3070:;
			{
				return false;;
			}
		}
		_match_end_1bd6d316e:;
	};
}



inline jule::Bool _1ad6d4702_IsAssign(jule::U64 _48213_id) {
	return ((((((((_48213_id == static_cast<jule::U64>(1LLU)) || (_48213_id == static_cast<jule::U64>(27LLU))) || (_48213_id == static_cast<jule::U64>(30LLU))) || (_48213_id == static_cast<jule::U64>(32LLU))) || (_48213_id == static_cast<jule::U64>(24LLU))) || (_48213_id == static_cast<jule::U64>(74LLU))) || (_48213_id == static_cast<jule::U64>(62LLU))) || (_48213_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1ad6d49bb_IsPostfixOp(jule::U64 _49416_id) {
	{
		auto expr = &(_1ad6c9153_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6d6a13:;
		if (it != expr_end) {
			jule::U64 *_4959_op = it;
			{
				if ((_49416_id == (*(_4959_op)))) {
					return true;;
				};
			}
			_iter_next_1bd6d6a13:;
			++it;
			goto _iter_begin_1bd6d6a13;
		}
		_iter_end_1bd6d6a13:;
	};
	return false;;
}



inline jule::Bool _1ad6d4c85_IsAssignOp(jule::U64 _50415_id) {
	if (_1ad6d49bb_IsPostfixOp(_50415_id)) {
		return true;;
	};
	{
		auto expr = &(_1ad6c943e_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6d6e86:;
		if (it != expr_end) {
			jule::U64 *_5089_op = it;
			{
				if ((_50415_id == (*(_5089_op)))) {
					return true;;
				};
			}
			_iter_next_1bd6d6e86:;
			++it;
			goto _iter_begin_1bd6d6e86;
		}
		_iter_end_1bd6d6e86:;
	};
	return false;;
}



inline _1dd356476_Log _1ad6d82c7_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1ad6d5527_Fileset>* _10033_f, jule::Str _10046_fmt, jule::Slice<jule::Any> _10066_args) {
	return _1dd356476_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1dd3568d8_Logf(_10046_fmt, _10066_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1ad6d8690_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6e2799:;
		if (it != expr_end) {
			jule::I64 _1146_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1146_i] != _11035_prefix[_1146_i])) {
					return false;;
				};
			}
			_iter_next_1bd6e2799:;
			++it;
			_1146_i++;
			goto _iter_begin_1bd6e2799;
		}
		_iter_end_1bd6e2799:;
	};
	return true;;
}



inline jule::Str _1ad6d8a14_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1286_b = (*(_12215_txt))[_12232_i];;
	if ((_1286_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1286_b == '+') || (_1286_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1422_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1286_b=(*(_12215_txt))[_12232_i];
			if (((_1286_b != '_') && (!(_1ad6d3adb_IsDecimal(_1286_b))))) {
				goto _iter_end_1bd6e5aaa;
			};
		}
	_iter_next_1bd6e5aaa:;
	}
	_iter_end_1bd6e5aaa:;;
	if ((_12232_i == _1422_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1ad6d8dcc_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1ad6d8a14_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1ad6d9251_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1bd6e7b23:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1683_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1683_b == '_') || _1ad6d3adb_IsDecimal(_1683_b)) {
					_case_begin_1bd6e8618:;
					{
						goto _iter_next_1bd6e5eea;
					}
				}
				else if (_1ad6daad2_isFloatFmtP(_1683_b, _16036_i)) {
					_case_begin_1bd6e86b2:;
					{
						return _1ad6d8dcc_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1bd6e8591:;
					{
						goto _iter_end_1bd6e5eea;
					}
				}
				_match_end_1bd6e852a:;
			};
		}
	_iter_next_1bd6e5eea:;
	}
	_iter_end_1bd6e5eea:;;
	return jule::Str();;
}



inline jule::Str _1ad6d95c5_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1ad6d8a14_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1ad6d9949_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1ad6d8a14_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1ad6d9dcd_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2013_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2013_b == 'e') || (_2013_b == 'E')))) {
				__jule_func_result = _1ad6d8a14_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2013_b != '_') && (!(_1ad6d3adb_IsDecimal(_2013_b))))) {
				goto _iter_end_1bd6eb3a7;
			};
		}
	_iter_next_1bd6eb3a7:;
	}
	_iter_end_1bd6eb3a7:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1ad6da120_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2176_i = 0LL;;
	_julec_label_1bd6ed431:;
	for (; (_2176_i < (*(_21615_txt)).len()); (_2176_i)++) {
		{
			jule::U8 _2203_b = (*(_21615_txt))[_2176_i];;
			{
				
				if ((_2203_b == '.')) {
					_case_begin_1bd6ee18a:;
					{
						__jule_func_result = _1ad6d9dcd_floatNum(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((_2203_b == '_')) {
					_case_begin_1bd6ee234:;
					{
						goto _iter_next_1bd6ed563;
					}
				}
				else if (_1ad6da75d_isFloatFmtE(_2203_b, _2176_i)) {
					_case_begin_1bd6ee29a:;
					{
						__jule_func_result = _1ad6d8a14_floatFmtE(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1ad6d3adb_IsDecimal(_2203_b)))) {
					_case_begin_1bd6ee311:;
					{
						goto _iter_end_1bd6ed563;
					}
				}
				_match_end_1bd6ee0ad:;
			};
		}
	_iter_next_1bd6ed563:;
	}
	_iter_end_1bd6ed563:;;
	if ((_2176_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_21615_txt)).slice(0LL, _2176_i));
	return __jule_func_result;;
}



inline jule::Str _1ad6da3d9_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1ad6d8690_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2486_i = 2LL;;
	for (; (_2486_i < (*(_23915_txt)).len()); (_2486_i)++) {
		{
			if ((((*(_23915_txt))[_2486_i] != '_') && (!(_1ad6d3da5_IsBinary((*(_23915_txt))[_2486_i]))))) {
				goto _iter_end_1bd701a3e;
			};
		}
	_iter_next_1bd701a3e:;
	}
	_iter_end_1bd701a3e:;;
	if ((_2486_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_23915_txt)).slice(0LL, _2486_i));
	return __jule_func_result;;
}



inline jule::Bool _1ad6da75d_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1ad6daad2_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1ad6dae56_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1bd704734:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2763_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2763_b == '_') || _1ad6d3adb_IsDecimal(_2763_b)) {
					_case_begin_1bd7055e2:;
					{
						goto _iter_next_1bd704415;
					}
				}
				else if (_1ad6daad2_isFloatFmtP(_2763_b, _26938_i)) {
					_case_begin_1bd70568b:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1bd70556a:;
					{
						goto _iter_end_1bd704415;
					}
				}
				_match_end_1bd705504:;
			};
		}
	_iter_next_1bd704415:;
	}
	_iter_end_1bd704415:;;
	return false;;
}



inline jule::Bool _1ad6db2ca_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1bd7065e3:;
			{
				goto _case_begin_1bd704d3e;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1bd704d3e:;
			{
				goto _case_begin_1bd70667b;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1bd70667b:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bd704c95:;
			{
				return true;;
			}
		}
		_match_end_1bd704bb8:;
	};
}



inline jule::Bool _1ad6db64e_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1bd70821b:;
			{
				goto _case_begin_1bd708282;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1bd708282:;
			{
				goto _case_begin_1bd7082e8;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1bd7082e8:;
			{
				goto _case_begin_1bd708370;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1bd708370:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bd708150:;
			{
				return true;;
			}
		}
		_match_end_1bd707bee:;
	};
}



inline jule::Str _1ad6dbb49_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3266_octalStart = 1LL;;
	jule::Bool _3286_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3266_octalStart)++;
		_3286_o=true;
	};
	jule::I64 _3376_i = _3266_octalStart;;
	for (; (_3376_i < (*(_31814_txt)).len()); (_3376_i)++) {
		{
			jule::U8 _3393_b = (*(_31814_txt))[_3376_i];;
			if ((_3393_b == '.')) {
				if (_3286_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1ad6d9dcd_floatNum(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (_1ad6da75d_isFloatFmtE(_3393_b, _3376_i)) {
				__jule_func_result = _1ad6d8a14_floatFmtE(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (((_3393_b != '_') && (!(_1ad6d416e_IsOctal(_3393_b))))) {
				goto _iter_end_1bd70c7c5;
			};
		}
	_iter_next_1bd70c7c5:;
	}
	_iter_end_1bd70c7c5:;;
	if ((_3376_i == _3266_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_31814_txt)).slice(0LL, _3376_i));
	return __jule_func_result;;
}



inline jule::Str _1ad6dbd25_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3696_i = 2LL;;
	_julec_label_1bd711389:;
	for (; (_3696_i < (*(_36012_txt)).len()); (_3696_i)++) {
		{
			jule::U8 _3723_b = (*(_36012_txt))[_3696_i];;
			{
				
				if (_1ad6db2ca_isFloatFmtDotp(_36012_txt, _3696_i)) {
					_case_begin_1bd712005:;
					{
						__jule_func_result = _1ad6d9949_floatFmtDotp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1ad6db64e_isFloatFmtDotfp(_36012_txt, _3696_i)) {
					_case_begin_1bd71209e:;
					{
						__jule_func_result = _1ad6d95c5_floatFmtDotfp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1ad6daad2_isFloatFmtP(_3723_b, _3696_i)) {
					_case_begin_1bd712115:;
					{
						__jule_func_result = _1ad6d8dcc_floatFmtP(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1ad6dae56_isFloatFmtDotnp(_36012_txt, _3696_i)) {
					_case_begin_1bd71217b:;
					{
						__jule_func_result = _1ad6d9251_floatFmtDotnp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (((_3723_b != '_') && (!(_1ad6d4438_IsHex(_3723_b))))) {
					_case_begin_1bd7121e2:;
					{
						goto _iter_end_1bd711433;
					}
				}
				_match_end_1bd711e17:;
			};
		}
	_iter_next_1bd711433:;
	}
	_iter_end_1bd711433:;;
	if ((_3696_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_36012_txt)).slice(0LL, _3696_i));
	return __jule_func_result;;
}



inline jule::Str _1ad6dc177_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3996_i = 2LL;;
	for (; (_3996_i < _39328_n); (_3996_i)++) {
		{
			if ((!(_1ad6d4438_IsHex((*(_39315_txt))[_3996_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1bd713d92:;
	}
	_iter_end_1bd713d92:;;
	__jule_func_result=__jule_bytesToStr((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1ad6dc441_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1ad6dc177_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1ad6dc70a_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1ad6dc177_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1ad6dc9c4_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1ad6dc177_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1ad6dcc8d_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1ad6d416e_IsOctal((*(_42616_txt))[1LL]))) || (!(_1ad6d416e_IsOctal((*(_42616_txt))[2LL])))) || (!(_1ad6d416e_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1dd356476_Log> _1ad6e2c82_Lex(jule::Ptr<_1ad6d5527_Fileset> _80612_f, jule::I64 _80625_mode) {
	if ((_80612_f == nullptr)) {
		return nullptr;;
	};
	_1ad6dd50d_lex _8116_lex = _1ad6dd50d_lex{._field_mode=_80625_mode, ._field_tokens=jule::Slice<jule::Ptr<_1ad6ceb70_Token>>(nullptr), ._field_file=_80612_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_1dd356476_Log>(nullptr)};;
	_1ad6e1357_newLine(&_8116_lex);
	_1ad6de135_lex(&_8116_lex);
	if ((_8116_lex._field_errors.len() > 0LL)) {
		return _8116_lex._field_errors;;
	};
	(*(_80612_f))._field_Tokens=_8116_lex._field_tokens;
	return nullptr;;
}



inline void _1ad7d7a36_lshiftUnsig(_1ad778ec2_Const* _58821_c, _1ad778ec2_Const* _58832_x) {
	jule::U64 _5892_l = _1ad7d147a_AsU64(_58821_c);;
	jule::U64 _5902_r = _1ad7d147a_AsU64(_58832_x);;
	_1ad7d1c72_SetU64(_58821_c, ({ jule::U64 __jule_x = _5892_l; jule::U64 __jule_y = _5902_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1ad7d7d66_rshiftUnsig(_1ad778ec2_Const* _59421_c, _1ad778ec2_Const* _59432_x) {
	jule::U64 _5952_l = _1ad7d147a_AsU64(_59421_c);;
	jule::U64 _5962_r = _1ad7d147a_AsU64(_59432_x);;
	_1ad7d1c72_SetU64(_59421_c, ({ jule::U64 __jule_x = _5952_l; jule::U64 __jule_y = _5962_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Str _1ad873c8c_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1bd81017a:;
			{
				return _1ad873363_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1bd813aa7:;
			{
				return _1ad873572_SysUint;;
			}
		}
		else {
			_case_begin_1bd810b81:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1bd813cd8:;
	};
}



inline jule::I64 _1ad874056_BitSizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1bd814a75:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1bd814ed7:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1bd81504d:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1bd814adb:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1bd814b52:;
			{
				return _1ad873110_BitSize;;
			}
		}
		else {
			_case_begin_1bd814de9:;
			{
				return -1LL;;
			}
		}
		_match_end_1bd8149ba:;
	};
}



inline jule::Str _1ad874397_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bd817ec9:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bd817ccb:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bd817d42:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bd818040:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1bd817bdd:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bd8177c0:;
	};
}



inline jule::Str _1ad87462d_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bd81978e:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bd819805:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bd81986b:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bd8198d2:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1bd8180b7:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bd8193a4:;
	};
}



inline jule::Str _1ad8748e7_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1bd81b2a7:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bd81b076:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1bd8183b4:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bd81ab69:;
	};
}



inline jule::Bool _1ad8754ec_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1ab15376c_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1ad8757b6_BitSizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1bd8211e1:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bd820333:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bd81e783:;
	};
}



inline jule::I64 _1ad875a80_BitSizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1bd821e39:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1bd821488:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1bd8214ee:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bd821411:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bd821a2c:;
	};
}



inline jule::I64 _1ad875d49_BitSizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1bd8239da:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1bd822bc6:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1bd822c3c:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bd822b60:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bd8230b1:;
	};
}



inline void _1ad875ee2_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1dd466333_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1bd824414:;
				{
					_1ad873110_BitSize=64LLU;
					_1ad873363_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1ad873572_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1bd824a41:;
				{
					_1ad873110_BitSize=32LLU;
					_1ad873363_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1ad873572_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1bd824953:;
		};
	};
}



inline void _1ad876168_init(void) {
	_1ad875ee2_UpdateTarget();
}



inline jule::I64 _1ad879c2c_MinI(jule::Str _6113_k) {
	_6113_k=_1ad873c8c_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1bd826eb6:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1bd8272c4:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1bd82733a:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1bd8273a1:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1bd823d70:;
			{
				return 0LL;;
			}
		}
		_match_end_1bd823e3b:;
	};
}



inline jule::I64 _1ad87a03a_MaxI(jule::Str _7913_k) {
	_7913_k=_1ad873c8c_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1bd8288e1:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1bd828c54:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1bd828ccb:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1bd828d53:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1bd82834c:;
			{
				return 0LL;;
			}
		}
		_match_end_1bd8282d6:;
	};
}



inline jule::U64 _1ad87a304_MaxU(jule::Str _9713_k) {
	_9713_k=_1ad873c8c_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1bd82a371:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1bd82a6d4:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1bd82a75b:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1bd82a7d3:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1bd829ccc:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bd829c66:;
	};
}



inline jule::F64 _1ad87a645_Min(jule::Str _11512_k) {
	_11512_k=_1ad873c8c_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1ad879c2c_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1bd82cdac:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1bd82c30c:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1bd82c571:;
			{
				return 0LL;;
			}
		}
		_match_end_1bd82c296:;
	};
}



inline jule::F64 _1ad87a8cb_Max(jule::Str _13312_k) {
	_13312_k=_1ad873c8c_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1ad87a03a_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1ad87a304_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1bd8303ba:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1bd82e793:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1bd82ea7e:;
			{
				return 0LL;;
			}
		}
		_match_end_1bd82e72c:;
	};
}



inline jule::Bool _1ad87b9ed_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1ad87bd0b_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1ad87c0c5_IsInt(jule::Str _4610_k) {
	return (_1ad87b9ed_IsSigInt(_4610_k) || _1ad87bd0b_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1ad87c416_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1ad87c69c_IsNum(jule::Str _5610_k) {
	return (_1ad87c0c5_IsInt(_5610_k) || _1ad87c416_IsFloat(_5610_k));;
}



inline jule::Bool _1ad87c966_IsSigNum(jule::Str _6113_k) {
	return (_1ad87b9ed_IsSigInt(_6113_k) || _1ad87c416_IsFloat(_6113_k));;
}



inline jule::Bool _1ad90b1ed_FindModuleFile(jule::Slice<jule::Ptr<_1dbd04750_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd836305:;
		if (it != expr_end) {
			jule::Ptr<_1dbd04750_DirEntry> *_149_d = it;
			{
				if (((!(_1dbd08952_IsDir((*((*(_149_d))))._field_Stat.ptr()))) && (*((*(_149_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1bd836305:;
			++it;
			goto _iter_begin_1bd836305;
		}
		_iter_end_1bd836305:;
	};
	return false;;
}



inline jule::Str _1ad90b50b_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1dbd04750_DirEntry>> _277_dirents = ({
				auto except = static__1dd0c8171_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1bd83604c;
				} jule::Slice<jule::Ptr<_1dbd04750_DirEntry>>(nullptr);});
			});;
			jule::Bool _313_exist = _1ad90b1ed_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I64 _363_n = _2527_path.len();;
			_2527_path=_1dd0c5e82_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1bd83604c;
			};
		}
	_iter_next_1bd83604c:;
	}
	_iter_end_1bd83604c:;;
	return jule::Str();;
}



inline jule::Slice<_1dd356476_Log> _1ad90b7c5_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__1dbd06e8e_Read(_1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4721_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_1dd356476_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1dd356476_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _1dd0aa791_Trim(_1db99041e_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_1dd356476_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1dd356476_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1ad90c078_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa9280_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1dd0a2403_IsUpper(_142_r);;
}



inline jule::Bool _1ad96c9ce_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1ad954c19_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1ad970262_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa9280_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1ad96e816_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1ad96eb57_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd84380c:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1bd84380c;
				};
			}
			_iter_next_1bd84380c:;
			++it;
			goto _iter_begin_1bd84380c;
		}
		_iter_end_1bd84380c:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1ad970608_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa9280_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1dbaaa32a_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1bd8449c8:;
	}
	_iter_end_1bd8449c8:;;
	return _1db9906d8_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1ad96eddd_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1bd847c0c:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bd848416:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bd84847c:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1bd8484e3:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1bd848559:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bd8485d1:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1bd848658:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1bd8486d0:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1bd848757:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1bd8487ce:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1bd84827e:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1ad970262_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1ad96eddd_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1bd84d7a1:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1ab14bb0b_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bd84caad:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1ab14bb0b_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bd84d4a4:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1ab14bb0b_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1bd84c01e:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1ab14bb0b_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1bd84c261:;
	};
}



inline void _1ad970608_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1ad970262_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1dbaaa32a_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _1ada3868d_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I64 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa8e3e_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1bd855d5d:;
	}
	_iter_end_1bd855d5d:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1ada3ecb0_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _292_start = (*(_2824_i));;
	jule::I64 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I64 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa8e3e_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1bd8587de:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1bd858855:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1bd8589a9:;
			};
		}
	_iter_next_1bd857a63:;
	}
	_iter_end_1bd857a63:;;
	return nullptr;;
}



inline void _1ada4009b_FmtByDefault(_1dd0b6912_Builder* _4822_buf, jule::Any* _4846_arg) {
	if (((*(_4846_arg)) == nullptr)) {
		_1dd0c0dd3_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4846_arg)) };
		
		if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1bd857d2c:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, _1ab146b28_FmtFloat(static_cast<jule::F64>((*(_4846_arg)).cast<jule::F32>(&__jule_any_type137)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bd85a989:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, _1ab146b28_FmtFloat((*(_4846_arg)).cast<jule::F64>(&__jule_any_type6), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1bd85aa00:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, _1ab15d3e2_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I8>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1bd85a15e:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, _1ab15d3e2_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I16>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bd85a1c5:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, _1ab15d3e2_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bd85a23b:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, _1ab15d3e2_FmtInt((*(_4846_arg)).cast<jule::I64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1bd85a2a2:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, _1ab15d029_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1bd85ac97:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, _1ab15d029_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U16>(&__jule_any_type140)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1bd85ad0d:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, _1ab15d029_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U32>(&__jule_any_type141)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bd85ad74:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, _1ab15d029_FmtUint((*(_4846_arg)).cast<jule::U64>(&__jule_any_type3), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bd85adda:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, (*(_4846_arg)).cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bd85ae51:;
			{
				if ((*(_4846_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					_1dd0c0dd3_WriteStr(_4822_buf, jule::Str::lit("true", 4));
				} else {
					_1dd0c0dd3_WriteStr(_4822_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1bd859aba:;
			{
				_1dd0c0dd3_WriteStr(_4822_buf, _1bc352d56_toStr((*(_4846_arg))));
			}
		}
		_match_end_1bd859a54:;
	};
}



inline void _1ada404b9_applyFmtByDefault(_1dd0b6912_Builder* _8727_buf, jule::I64* _8755_j, jule::Slice<jule::Any> _8763_args) {
	jule::Any _882_arg = _8763_args[(*(_8755_j))];;
	((*(_8755_j)))++;
	_1ada4009b_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1ada408d7_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1dd0b6912_Builder* _9536_buf, jule::I64* _9564_j, jule::Slice<jule::Any> _9572_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1ada404b9_applyFmtByDefault(_9536_buf, _9564_j, _9572_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_1dd0c0dd3_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_1dd0c0b2a_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Slice<jule::U8> _1ada40c5b_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _1db990188_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1216_i = _1ada3868d_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1256_j = 0LL;;
	jule::I64 _1266_last = 0LL;;
	_1dd0b6912_Builder _1276_buf = static__1dd0b74d4_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1ada3868d_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			_1dd0c0b2a_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
			jule::Slice<jule::U8> _1307_format = _1ada3ecb0_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1bd867ee6;
			};
			_1ada408d7_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				_1dd0c0b2a_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1bd867ee6;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1bd867ee6:;
	}
	_iter_end_1bd867ee6:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		_1dd0c0b2a_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
	};
	return _1dd0c217b_Buf(&_1276_buf);;
}



inline jule::Str _1ada9c9dd_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1db9906d8_StrFromBytes(_1ada40c5b_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ab307aca_runtimeFindFn(jule::Ptr<_1ad8e1bea_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1ad7e778d_Fn> _126_f = _1ad8e3306_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 109) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1ad7159ec_Struct> _1ab307338_runtimeFindStruct(jule::Ptr<_1ad8e1bea_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1ad7159ec_Struct> _256_f = _1ad8e2e0a_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 107) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1ad7ecb28_parameterUsesGenerics(jule::Ptr<_1ad7e96e6_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>* _39546_generics) {
	if (_1ad7e6418_IsSelf((*((*(_39531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1ad9d4749_kindUsesGenerics(&((*((*(_39531_p))))._field_Kind), _39546_generics);;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a7562_buildAsComptimeMethodData(jule::Ptr<_1ad7ea84b_FnIns>* _203035_f) {
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad8e1bea_ImportInfo> _1ad8a7771_findComptimePackage(jule::Ptr<_1ad90ed6c_sema>* _203829_s) {
	return _1ad910345_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1ad8e1bea_ImportInfo>>((void*)__jule_anon1bdba1681, nullptr, nullptr));;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a7ae5_buildComptimeTypeInfoData(jule::Ptr<_1ad90ed6c_sema>* _204435_s, jule::Ptr<_1ad9b8596_TypeKind>* _204450_t) {
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad90e6da_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1ad8a7e36_buildComptimeValue(jule::Ptr<_1ad985b90_Data>* _205228_d) {
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad899983_comptimeValue>(_1ad899983_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Str _1ad8aac5d_toStrConstraints(jule::Ptr<_1ad9b6de1_InsGeneric> _14321_g) {
	_1dd0b6912_Builder _1446_sb = static__1dd0b74d4_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdd95017:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1ad9b8596_TypeKind> *_1459_c = it;
			{
				_1dd0c0dd3_WriteStr(&_1446_sb, _1ad9b8992_Str((*(_1459_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					_1dd0c0dd3_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1bdd95017:;
			++it;
			_1456_i++;
			goto _iter_begin_1bdd95017;
		}
		_iter_end_1bdd95017:;
	};
	return _1dd0c16ca_Str(&_1446_sb);;
}



inline jule::Bool _1ad8ab126_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1ad9b8596_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1bdd96dc6:;
			{
				jule::Ptr<_1ad9c16ae_Prim> _1573_prim = _1ad9bac4c_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1ad87c966_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1bdd96e3c:;
			{
				jule::Ptr<_1ad9c16ae_Prim> _1633_prim = _1ad9bac4c_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1ad87bd0b_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1bdd96ea3:;
			{
				jule::Ptr<_1ad9c16ae_Prim> _1693_prim = _1ad9bac4c_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1ad87c416_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1bdd9702a:;
			{
				jule::Ptr<_1ad9c16ae_Prim> _1753_prim = _1ad9bac4c_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1ad87c69c_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1bdd97206:;
			{
				return _1ad9b9e7c_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1bdd9726c:;
			{
				return (!(_1ad9b9e7c_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1bdd972d3:;
			{
				return _1ad9b9be6_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1bdd97349:;
			{
				return _1ad9ba213_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1bdd957dc:;
			{
				return false;;
			}
		}
		_match_end_1bdd96c72:;
	};
}



inline jule::Bool _1ad8ab3e0_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1ad8a9124_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdd9cd55:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1bdd9cd55:;
			++it;
			goto _iter_begin_1bdd9cd55;
		}
		_iter_end_1bdd9cd55:;
	};
	return false;;
}



inline jule::Ptr<_1ad8b860b_scopeChecker> _1ad8adcc7_newScopeCheckerBase(jule::Ptr<_1ad90ed6c_sema>* _3229_s, jule::Ptr<_1ad7ea84b_FnIns> _3243_owner) {
	return jule::new_ptr<_1ad8b860b_scopeChecker>(_1ad8b860b_scopeChecker{._field_calledFrom=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_s=(*(_3229_s)), ._field_owner=_3243_owner, ._field_parent=jule::Ptr<_1ad8b860b_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1ad7eda91_SymTab>(_1ad7eda91_SymTab{._field_File=jule::Ptr<_1ad6d5527_Fileset>(nullptr), ._field_Passes=jule::Slice<_1ad8d11d4_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1ad7159ec_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1ad7e778d_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1ad802ea2_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1ad805658_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1ad806d63_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1ad8abc5e_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_tree=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1ad933a83_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1ad8b761b_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1ad8b452a_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1ad8b860b_scopeChecker> _1ad8ae190_newScopeChecker(jule::Ptr<_1ad90ed6c_sema>* _4025_s, jule::Ptr<_1ad7ea84b_FnIns> _4039_owner) {
	jule::Ptr<_1ad8b860b_scopeChecker> _416_base = _1ad8adcc7_newScopeCheckerBase(_4025_s, _4039_owner);;
	(*(_416_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ad8b761b_scopeLabel>>>(nullptr);
	(*_416_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ad8b452a_GotoSt>>>(nullptr);
	return _416_base;;
}



inline jule::Ptr<_1ad8b761b_scopeLabel> _1ad8ae514_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1ad8b860b_scopeChecker> _5037_scope) {
	jule::Ptr<_1ad8b761b_scopeLabel> _516_label = _1ad8bc9c8_findLabelScope(_5037_scope, _5021_ident);;
	while ((_516_label == nullptr)) {
		{
			if ((((*_5037_scope.alloc)._field_parent == nullptr) || ((*_5037_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_5037_scope=(*_5037_scope.alloc)._field_parent;
			_516_label=_1ad8bc9c8_findLabelScope(_5037_scope, _5021_ident);
		}
	_iter_next_1bddb87cc:;
	}
	_iter_end_1bddb87cc:;;
	return _516_label;;
}



inline jule::Slice<jule::Ptr<_1ad985b90_Data>> _1ad8ae855_getDatasFromTupleData(jule::Ptr<_1ad985b90_Data>* _6231_d) {
	if ((_1ad9bca73_Tup((*((*(_6231_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_6231_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type83) {
				_case_begin_1bddbd073:;
				{
					return (*((*((*(_6231_d))))._field_Model.unsafe_cast_ptr<_1ad7e0995_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1bddba625:;
				{
					jule::Ptr<_1ad9c67a2_Tuple> _688_t = _1ad9bca73_Tup((*((*(_6231_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1ad985b90_Data>> _698_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad985b90_Data>>::alloc(0LL, (*(_688_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad985b90_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_688_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bddbbe1d:;
						if (it != expr_end) {
							jule::Ptr<_1ad9b8596_TypeKind> _7016_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1ad985b90_Data>> &__jule_push_dest = _698_r; __jule_push_dest.push(jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_7016_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})); };
							}
							_iter_next_1bddbbe1d:;
							++it;
							goto _iter_begin_1bddbbe1d;
						}
						_iter_end_1bddbbe1d:;
					};
					return _698_r;;
				}
			}
			_match_end_1bddba5ae:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad985b90_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_6231_d)); __jule_collection; });;
	};
}



inline jule::Bool _1ad8b00c5_checkMut(jule::Ptr<_1ad90ed6c_sema>* _9718_s, jule::Ptr<_1ad985b90_Data>* _9729_left, jule::Ptr<_1ad985b90_Data> _9746_right, jule::Ptr<_1ad6ceb70_Token> _9760_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_9729_left))))._field_Mutable))) {
			_case_begin_1bddc6587:;
			{
				_1ad912c71_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_9746_right != nullptr) && (!((*_9746_right.alloc)._field_Mutable))) && _1ad9b9e7c_Mutable((*_9746_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1bddc6994:;
			{
				if ((((*(_9760_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1ad9bc2c0_Struct((*(_9746_right))._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1ad912c71_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_9746_right))._field_Kind), &__jule_any_type5); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bddc6521:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bddc6466:;
	};
}



inline jule::Bool _1ad8b05ae_checkAssign(jule::Ptr<_1ad90ed6c_sema>* _11621_s, jule::Ptr<_1ad985b90_Data>* _11636_left, jule::Ptr<_1ad985b90_Data> _11653_right, jule::Ptr<_1ad6ceb70_Token> _11667_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ad7ea84b_FnIns> _1172_f = _1ad9bc039_Fn((*((*(_11636_left))))._field_Kind.ptr());;
	if ((((_1172_f != nullptr) && ((*_1172_f.alloc)._field_Decl != nullptr)) && (*(*(_1172_f))._field_Decl.alloc)._field_Global)) {
		_1ad912c71_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1ad9865ca_IsConst((*(_11636_left)).ptr())) {
			_case_begin_1bddcc22a:;
			{
				_1ad912c71_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1ad9130d4_pushSuggestion((*(_11621_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_11636_left))))._field_Lvalue))) {
			_case_begin_1bddcc2c4:;
			{
				_1ad912c71_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1ad8b00c5_checkMut(_11621_s, _11636_left, _11653_right, _11667_op)))) {
			_case_begin_1bddcc34b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bddcc1b4:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bddcc060:;
	};
}



inline jule::Bool _1ad8b0988_isValidAstStForNextSt(jule::Any* _13831_n) {
	{
		auto &_match_expr{ (*(_13831_n)) };
		
		if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1bddbd2e8:;
			{
				return (!((*((*(_13831_n)).cast_ptr<_1ad703b61_AssignSt>(&__jule_any_type57)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bddce89d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bddce75a:;
			{
				return false;;
			}
		}
		_match_end_1bddce6e4:;
	};
}



inline jule::Bool _1ad8b0bca_isValidStForNextSt(jule::Any* _14924_st) {
	{
		auto &_match_expr{ (*(_14924_st)) };
		
		if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type43) {
			_case_begin_1bddd61e0:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bddd60be:;
			{
				{
					auto &_match_expr{ (*((*(_14924_st)).cast_ptr<_1ad985b90_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1bdddb998:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bdde263b:;
						{
							return false;;
						}
					}
					_match_end_1bdde133d:;
				};
			}
		}
		else {
			_case_begin_1bddd21b9:;
			{
				return false;;
			}
		}
		_match_end_1bddd41dd:;
	};
}



inline jule::U64 _1ad8cad5a_removeEqFromOp(jule::U64 _214019_op) {
	{
		auto &_match_expr{ _214019_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1bdde5e14:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1bdde5e7a:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1bdde1d33:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1bdde1d99:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1bdde2839:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1bdde28a0:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1bdde2916:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1bdde297c:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1bdde6046:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1bdde60ac:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1bddd4a18:;
			{
				return _214019_op;;
			}
		}
		_match_end_1bdde26a2:;
	};
}



inline void _1ad8cb08b_makeComptimeRange(jule::Ptr<_1ad985b90_Data>* _216927_d) {
	{
		
		if ((_1ad9bd090_comptimeStructFields((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bdde71ac:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad87db21_comptimeRange>(_1ad87db21_comptimeRange{._field_kind=jule::Trait(_1ad9bd090_comptimeStructFields((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data5)});
			}
		}
		else if ((_1ad9bd5ac_comptimeEnumFields((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bdde99ea:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad87db21_comptimeRange>(_1ad87db21_comptimeRange{._field_kind=jule::Trait(_1ad9bd5ac_comptimeEnumFields((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data5)});
			}
		}
		else if ((_1ad9be37c_comptimeTypeInfos((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bdde9a61:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad87db21_comptimeRange>(_1ad87db21_comptimeRange{._field_kind=jule::Trait(_1ad9be37c_comptimeTypeInfos((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data5)});
			}
		}
		else if ((_1ad9bdac9_comptimeParams((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bdde7223:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad87db21_comptimeRange>(_1ad87db21_comptimeRange{._field_kind=jule::Trait(_1ad9bdac9_comptimeParams((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data5)});
			}
		}
		else if ((_1ad9be899_comptimeStatics((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bdde7289:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad87db21_comptimeRange>(_1ad87db21_comptimeRange{._field_kind=jule::Trait(_1ad9be899_comptimeStatics((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data5)});
			}
		}
		else if ((_1ad9c0900_comptimeFiles((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bdde7300:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad87db21_comptimeRange>(_1ad87db21_comptimeRange{._field_kind=jule::Trait(_1ad9c0900_comptimeFiles((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data5)});
			}
		}
		else if ((_1ad9c03d3_comptimeDecls((*((*(_216927_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bddea0c2:;
			{
				(*((*(_216927_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad87db21_comptimeRange>(_1ad87db21_comptimeRange{._field_kind=jule::Trait(_1ad9c03d3_comptimeDecls((*((*(_216927_d))))._field_Kind), (jule::Trait::Type*)&_1ad87d901_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1bdde7146:;
			{
				(*((*(_216927_d))))._field_Decl=true;
			}
		}
		_match_end_1bdde96ba:;
	};
}



inline jule::Bool _1ad8cb355_canComptimeMatch(jule::Ptr<_1ad985b90_Data>* _219226_d) {
	if ((!(_1ad984364_isGoodValueToInfer(_219226_d)))) {
		return false;;
	};
	return (_1ad9865ca_IsConst((*(_219226_d)).ptr()) || (_1ad9be613_comptimeTypeInfo((*((*(_219226_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1ad8cb61e_stmtIsDef(jule::Any* _220015_stmt) {
	{
		auto &_match_expr{ (*(_220015_stmt)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bde03e66:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bde06551:;
			{
				jule::Ptr<_1ad8b5361_MultiAssign> _22053_ma = (*(_220015_stmt)).cast_ptr<_1ad8b5361_MultiAssign>(&__jule_any_type43);;
				return ((*(_22053_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1bde06111:;
			{
				return false;;
			}
		}
		_match_end_1bde06078:;
	};
}



inline jule::I64 _1ad8cb993_countMatchType(jule::Ptr<_1ad8b5a9d_Match>* _221220_m, jule::Ptr<_1ad9b8596_TypeKind>* _221232_t) {
	jule::I64 _22136_n = 0LL;;
	_julec_label_1bde07bb2:;
	{
		auto expr = &((*((*(_221220_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde080d0:;
		if (it != expr_end) {
			jule::Ptr<_1ad8b65c6_Case> *_22159_c = it;
			{
				if (((*(_22159_c)) == nullptr)) {
					goto _iter_next_1bde080d0;
				};
				{
					auto expr = &((*((*(_22159_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bde08dd3:;
					if (it != expr_end) {
						jule::Ptr<_1ad985b90_Data> *_221910_expr = it;
						{
							if (((*(_221910_expr)) == nullptr)) {
								goto _iter_end_1bde080d0;
							};
							if (_1ad9b8cd3_Equal((*(_221232_t)), (*((*(_221910_expr))))._field_Model.cast_ptr<_1ad9b8596_TypeKind>(&__jule_any_type86))) {
								(_22136_n)++;
							};
						}
						_iter_next_1bde08dd3:;
						++it;
						goto _iter_begin_1bde08dd3;
					}
					_iter_end_1bde08dd3:;
				};
			}
			_iter_next_1bde080d0:;
			++it;
			goto _iter_begin_1bde080d0;
		}
		_iter_end_1bde080d0:;
	};
	return _22136_n;;
}



inline jule::Ptr<_1ad9c0ca7_TypeSymbol> _1ad8d1547_buildType(jule::Ptr<_1ad6e51b3_TypeDecl> _6818_t) {
	if ((_6818_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=_6818_t, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr)});;
}



inline jule::Ptr<_1ad986d17_Value> _1ad8d1855_buildExpr(jule::Ptr<_1ad6e94e7_Expr> _7718_expr) {
	if ((_7718_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=_7718_expr, ._field_Data=jule::Ptr<_1ad985b90_Data>(nullptr)});;
}



inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad8d1b1e_buildTypeAlias(jule::Ptr<_1ad70bbd0_TypeAliasDecl> _8623_decl) {
	return jule::new_ptr<_1ad9b77a4_TypeAlias>(_1ad9b77a4_TypeAlias{._field_Scope=(*(_8623_decl))._field_Scope, ._field_Public=(*_8623_decl.alloc)._field_Public, ._field_Binded=(*_8623_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_8623_decl.alloc)._field_Token, ._field_Ident=(*_8623_decl.alloc)._field_Ident, ._field_Kind=_1ad8d1547_buildType((*_8623_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1ad712ac6_Field> _1ad8d1e60_buildField(jule::Ptr<_1ad7102ee_FieldDecl> _9719_decl) {
	return jule::new_ptr<_1ad712ac6_Field>(_1ad712ac6_Field{._field_Owner=jule::Ptr<_1ad7159ec_Struct>(nullptr), ._field_Token=(*(_9719_decl))._field_Token, ._field_Public=(*_9719_decl.alloc)._field_Public, ._field_Mutable=(*_9719_decl.alloc)._field_Mutable, ._field_Ident=(*_9719_decl.alloc)._field_Ident, ._field_Kind=_1ad8d1547_buildType((*_9719_decl.alloc)._field_Kind), ._field_Default=(*_9719_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1ad712ac6_Field>> _1ad8d21e6_buildFields(jule::Slice<jule::Ptr<_1ad7102ee_FieldDecl>>* _10821_decls) {
	jule::Slice<jule::Ptr<_1ad712ac6_Field>> _1096_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad712ac6_Field>>::alloc(0LL, (*(_10821_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad712ac6_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _10821_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be171d4e:;
		if (it != expr_end) {
			jule::Ptr<_1ad7102ee_FieldDecl> _11014_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ad712ac6_Field>> &__jule_push_dest = _1096_fields; __jule_push_dest.push(_1ad8d1e60_buildField(_11014_decl)); };
			}
			_iter_next_1be171d4e:;
			++it;
			goto _iter_begin_1be171d4e;
		}
		_iter_end_1be171d4e:;
	};
	return _1096_fields;;
}



inline jule::Ptr<_1ad7159ec_Struct> _1ad8d24b0_buildStruct(jule::Ptr<_1ad710be5_StructDecl> _11620_decl) {
	return jule::new_ptr<_1ad7159ec_Struct>(_1ad7159ec_Struct{._field_sema=jule::Ptr<_1ad90ed6c_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1ad7159ec_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1ad7159ec_Struct>>(nullptr), ._field_Token=(*(_11620_decl))._field_Token, ._field_Ident=(*_11620_decl.alloc)._field_Ident, ._field_Fields=_1ad8d21e6_buildFields(&((*_11620_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1ad7e778d_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr), ._field_Public=(*_11620_decl.alloc)._field_Public, ._field_Binded=(*_11620_decl.alloc)._field_Binded, ._field_Directives=(*_11620_decl.alloc)._field_Directives, ._field_Generics=(*_11620_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1ad802ea2_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1ad718857_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1ad7e5cb9_Param> _1ad8d2779_buildParam(jule::Ptr<_1ad705921_ParamDecl> _12819_decl) {
	return jule::new_ptr<_1ad7e5cb9_Param>(_1ad7e5cb9_Param{._field_Token=(*(_12819_decl))._field_Token, ._field_Mutable=(*_12819_decl.alloc)._field_Mutable, ._field_Variadic=(*_12819_decl.alloc)._field_Variadic, ._field_Reference=(*_12819_decl.alloc)._field_Reference, ._field_Kind=_1ad8d1547_buildType((*_12819_decl.alloc)._field_Kind), ._field_Ident=(*_12819_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1ad7e5cb9_Param>> _1ad8d2b53_buildParams(jule::Slice<jule::Ptr<_1ad705921_ParamDecl>>* _13921_decls) {
	jule::Slice<jule::Ptr<_1ad7e5cb9_Param>> _1406_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7e5cb9_Param>>::alloc(0LL, (*(_13921_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad7e5cb9_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _13921_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be175d75:;
		if (it != expr_end) {
			jule::Ptr<_1ad705921_ParamDecl> _14114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ad7e5cb9_Param>> &__jule_push_dest = _1406_params; __jule_push_dest.push(_1ad8d2779_buildParam(_14114_decl)); };
			}
			_iter_next_1be175d75:;
			++it;
			goto _iter_begin_1be175d75;
		}
		_iter_end_1be175d75:;
	};
	return _1406_params;;
}



inline jule::Ptr<_1ad7e5538_RetType> _1ad8d2d95_buildRetType(jule::Ptr<_1ad6e80a6_RetTypeDecl> _14721_decl) {
	if ((((*(_14721_decl))._field_Idents == nullptr) && ((*_14721_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1ad7e5538_RetType>(_1ad7e5538_RetType{._field_Kind=_1ad8d1547_buildType((*_14721_decl.alloc)._field_Kind), ._field_Idents=(*_14721_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ad8d315e_buildFunc(jule::Ptr<_1ad706d73_FnDecl> _15718_decl) {
	return jule::new_ptr<_1ad7e778d_Fn>(_1ad7e778d_Fn{._field_sema=jule::Ptr<_1ad90ed6c_sema>(nullptr), ._field_Token=(*(_15718_decl))._field_Token, ._field_Global=(*_15718_decl.alloc)._field_Global, ._field_Unsafety=(*_15718_decl.alloc)._field_Unsafety, ._field_Public=(*_15718_decl.alloc)._field_Public, ._field_Binded=(*_15718_decl.alloc)._field_Binded, ._field_Statically=(*_15718_decl.alloc)._field_Statically, ._field_Exceptional=(*_15718_decl.alloc)._field_Exceptional, ._field_Ident=(*_15718_decl.alloc)._field_Ident, ._field_Directives=(*_15718_decl.alloc)._field_Directives, ._field_Scope=(*_15718_decl.alloc)._field_Scope, ._field_Generics=(*_15718_decl.alloc)._field_Generics, ._field_Result=_1ad8d2d95_buildRetType((*_15718_decl.alloc)._field_Result), ._field_Params=_1ad8d2b53_buildParams(&((*_15718_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1ad7159ec_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1ad7e778d_Fn>> _1ad8d3428_buildMethods(jule::Slice<jule::Ptr<_1ad706d73_FnDecl>>* _17522_decls) {
	jule::Slice<jule::Ptr<_1ad7e778d_Fn>> _1766_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7e778d_Fn>>::alloc(0LL, (*(_17522_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad7e778d_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _17522_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be17ae02:;
		if (it != expr_end) {
			jule::Ptr<_1ad706d73_FnDecl> _17714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ad7e778d_Fn>> &__jule_push_dest = _1766_methods; __jule_push_dest.push(_1ad8d315e_buildFunc(_17714_decl)); };
			}
			_iter_next_1be17ae02:;
			++it;
			goto _iter_begin_1be17ae02;
		}
		_iter_end_1be17ae02:;
	};
	return _1766_methods;;
}



inline jule::Slice<jule::Ptr<_1ad9c0ca7_TypeSymbol>> _1ad8d36e2_buildTraitInherits(jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>* _18328_inherits) {
	jule::Slice<jule::Ptr<_1ad9c0ca7_TypeSymbol>> _1846_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9c0ca7_TypeSymbol>>::alloc(0LL, (*(_18328_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad9c0ca7_TypeSymbol>(nullptr); __jule_collection; });;
	{
		auto expr = _18328_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be17c046:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e51b3_TypeDecl> _18514_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1ad9c0ca7_TypeSymbol>> &__jule_push_dest = _1846_symbols; __jule_push_dest.push(_1ad8d1547_buildType(_18514_it)); };
			}
			_iter_next_1be17c046:;
			++it;
			goto _iter_begin_1be17c046;
		}
		_iter_end_1be17c046:;
	};
	return _1846_symbols;;
}



inline jule::Ptr<_1ad802ea2_Trait> _1ad8d39ab_buildTrait(jule::Ptr<_1ad711432_TraitDecl> _19119_decl) {
	return jule::new_ptr<_1ad802ea2_Trait>(_1ad802ea2_Trait{._field_Token=(*(_19119_decl))._field_Token, ._field_Ident=(*_19119_decl.alloc)._field_Ident, ._field_Public=(*_19119_decl.alloc)._field_Public, ._field_Inherits=_1ad8d36e2_buildTraitInherits(&((*_19119_decl.alloc)._field_Inherits)), ._field_Methods=_1ad8d3428_buildMethods(&((*_19119_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1ad7159ec_Struct>>(nullptr)});;
}



inline jule::Ptr<_1ad804b0d_EnumItem> _1ad8d3c75_buildEnumItem(jule::Ptr<_1ad70d4d9_EnumItemDecl> _20122_decl) {
	return jule::new_ptr<_1ad804b0d_EnumItem>(_1ad804b0d_EnumItem{._field_Token=(*(_20122_decl))._field_Token, ._field_Ident=(*_20122_decl.alloc)._field_Ident, ._field_Value=_1ad8d1855_buildExpr((*_20122_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1ad804b0d_EnumItem>> _1ad8d403e_buildEnumItems(jule::Slice<jule::Ptr<_1ad70d4d9_EnumItemDecl>>* _20924_decls) {
	jule::Slice<jule::Ptr<_1ad804b0d_EnumItem>> _2106_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad804b0d_EnumItem>>::alloc(0LL, (*(_20924_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad804b0d_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _20924_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be1802ad:;
		if (it != expr_end) {
			jule::Ptr<_1ad70d4d9_EnumItemDecl> _21114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ad804b0d_EnumItem>> &__jule_push_dest = _2106_items; __jule_push_dest.push(_1ad8d3c75_buildEnumItem(_21114_decl)); };
			}
			_iter_next_1be1802ad:;
			++it;
			goto _iter_begin_1be1802ad;
		}
		_iter_end_1be1802ad:;
	};
	return _2106_items;;
}



inline jule::Ptr<_1ad805658_Enum> _1ad8d4539_buildEnum(jule::Ptr<_1ad70e09a_EnumDecl> _21718_decl) {
	return jule::new_ptr<_1ad805658_Enum>(_1ad805658_Enum{._field_Token=(*(_21718_decl))._field_Token, ._field_Public=(*_21718_decl.alloc)._field_Public, ._field_Ident=(*_21718_decl.alloc)._field_Ident, ._field_Kind=_1ad8d1547_buildType((*_21718_decl.alloc)._field_Kind), ._field_Items=_1ad8d403e_buildEnumItems(&((*_21718_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1ad80678b_TypeEnumItem> _1ad8d4715_buildTypeEnumItem(jule::Ptr<_1ad70e8c5_TypeEnumItemDecl> _22726_decl) {
	return jule::new_ptr<_1ad80678b_TypeEnumItem>(_1ad80678b_TypeEnumItem{._field_Token=(*(_22726_decl))._field_Token, ._field_Ident=(*_22726_decl.alloc)._field_Ident, ._field_Kind=_1ad8d1547_buildType((*_22726_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1ad80678b_TypeEnumItem>> _1ad8d49ac_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ad70e8c5_TypeEnumItemDecl>>* _23528_decls) {
	jule::Slice<jule::Ptr<_1ad80678b_TypeEnumItem>> _2366_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad80678b_TypeEnumItem>>::alloc(0LL, (*(_23528_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad80678b_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23528_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be183525:;
		if (it != expr_end) {
			jule::Ptr<_1ad70e8c5_TypeEnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ad80678b_TypeEnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1ad8d4715_buildTypeEnumItem(_23714_decl)); };
			}
			_iter_next_1be183525:;
			++it;
			goto _iter_begin_1be183525;
		}
		_iter_end_1be183525:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1ad806d63_TypeEnum> _1ad8d4c76_buildTypeEnum(jule::Ptr<_1ad710035_TypeEnumDecl> _24322_decl) {
	return jule::new_ptr<_1ad806d63_TypeEnum>(_1ad806d63_TypeEnum{._field_Token=(*(_24322_decl))._field_Token, ._field_Public=(*_24322_decl.alloc)._field_Public, ._field_Ident=(*_24322_decl.alloc)._field_Ident, ._field_Items=_1ad8d49ac_buildTypeEnumItems(&((*_24322_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1ad933a83_Var> _1ad8d5040_buildVar(jule::Ptr<_1ad70802d_VarDecl> _25217_decl) {
	return jule::new_ptr<_1ad933a83_Var>(_1ad933a83_Var{._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Token=(*(_25217_decl))._field_Token, ._field_Ident=(*_25217_decl.alloc)._field_Ident, ._field_Binded=(*_25217_decl.alloc)._field_Binded, ._field_Constant=(*_25217_decl.alloc)._field_Constant, ._field_Mutable=(*_25217_decl.alloc)._field_Mutable, ._field_Public=(*_25217_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_25217_decl.alloc)._field_Statically, ._field_Reference=(*_25217_decl.alloc)._field_Reference, ._field_Kind=_1ad8d1547_buildType((*_25217_decl.alloc)._field_Kind), ._field_Value=_1ad8d1855_buildExpr((*_25217_decl.alloc)._field_Expr), ._field_Refers=static__1ad8d005c_new(), ._field_Directives=(*_25217_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1ad933a83_Var>> _1ad8d5309_buildVars(jule::Slice<jule::Ptr<_1ad70802d_VarDecl>> _26918_decls) {
	jule::Slice<jule::Ptr<_1ad933a83_Var>> _2706_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad933a83_Var>>::alloc(0LL, _26918_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad933a83_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_26918_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be187d43:;
		if (it != expr_end) {
			jule::Ptr<_1ad70802d_VarDecl> _27114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ad933a83_Var>> &__jule_push_dest = _2706_vars; __jule_push_dest.push(_1ad8d5040_buildVar(_27114_decl)); };
			}
			_iter_next_1be187d43:;
			++it;
			goto _iter_begin_1be187d43;
		}
		_iter_end_1be187d43:;
	};
	return _2706_vars;;
}



inline jule::Ptr<_1ad8abc5e_Impl> _1ad8d55c3_buildImpl(jule::Ptr<_1ad711a92_Impl> _27718_decl) {
	return jule::new_ptr<_1ad8abc5e_Impl>(_1ad8abc5e_Impl{._field_Base=(*(_27718_decl))._field_Base, ._field_Dest=(*_27718_decl.alloc)._field_Dest, ._field_Methods=_1ad8d3428_buildMethods(&((*_27718_decl.alloc)._field_Methods)), ._field_Statics=_1ad8d5309_buildVars((*_27718_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1ad8dbde3_isImplicitImport(jule::Ptr<_1ad8e1bea_ImportInfo> _79021_imp) {
	return ((*((*(_79021_imp))._field_Decl))._field_Token == nullptr);;
}



inline jule::Ptr<_1ad7eda91_SymTab> _1ad8de038_findVarFileInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _4430_files, jule::Ptr<_1ad933a83_Var>* _4449_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be21839b:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _4514_f = *it;
			{
				if ((_1ad801137_findVar1(_4514_f.ptr(), _4449_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1be21839b:;
			++it;
			goto _iter_begin_1be21839b;
		}
		_iter_end_1be21839b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad933a83_Var> _1ad8de4ab_findVarInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be219655:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _5614_f = *it;
			{
				jule::Ptr<_1ad933a83_Var> _577_v = _1ad7ee4a9_FindVar(_5614_f.ptr(), (*(_5545_ident)), _5557_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1be219655:;
			++it;
			goto _iter_begin_1be219655;
		}
		_iter_end_1be219655:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ad8de8da_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be21ac0b:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _6814_f = *it;
			{
				jule::Ptr<_1ad9b77a4_TypeAlias> _697_ta = _1ad7ee8a5_FindTypeAlias(_6814_f.ptr(), (*(_6751_ident)), _6763_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1be21ac0b:;
			++it;
			goto _iter_begin_1be21ac0b;
		}
		_iter_end_1be21ac0b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad7159ec_Struct> _1ad8ded91_findStructInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be21c23a:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _8014_f = *it;
			{
				jule::Ptr<_1ad7159ec_Struct> _817_s = _1ad7eeca1_FindStruct(_8014_f.ptr(), (*(_7948_ident)), _7960_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1be21c23a:;
			++it;
			goto _iter_begin_1be21c23a;
		}
		_iter_end_1be21c23a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad7e778d_Fn> _1ad8e028c_findFnInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be21d769:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _9214_file = *it;
			{
				jule::Ptr<_1ad7e778d_Fn> _937_f = _1ad80019c_FindFn(_9214_file.ptr(), (*(_9144_ident)), _9156_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1be21d769:;
			++it;
			goto _iter_begin_1be21d769;
		}
		_iter_end_1be21d769:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad802ea2_Trait> _1ad8e0611_findTraitInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _10328_files, jule::Str* _10347_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be21e65a:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _10414_f = *it;
			{
				jule::Ptr<_1ad802ea2_Trait> _1057_t = _1ad8004dd_FindTrait(_10414_f.ptr(), (*(_10347_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1be21e65a:;
			++it;
			goto _iter_begin_1be21e65a;
		}
		_iter_end_1be21e65a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad805658_Enum> _1ad8e0985_findEnumInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _11527_files, jule::Str* _11546_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be221085:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _11614_f = *it;
			{
				jule::Ptr<_1ad805658_Enum> _1177_e = _1ad80082e_FindEnum(_11614_f.ptr(), (*(_11546_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1be221085:;
			++it;
			goto _iter_begin_1be221085;
		}
		_iter_end_1be221085:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ad806d63_TypeEnum> _1ad8e0e19_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _12731_files, jule::Str* _12750_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2223d8:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _12814_f = *it;
			{
				jule::Ptr<_1ad806d63_TypeEnum> _1297_e = _1ad800b70_FindTypeEnum(_12814_f.ptr(), (*(_12750_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1be2223d8:;
			++it;
			goto _iter_begin_1be2223d8;
		}
		_iter_end_1be2223d8:;
	};
	return nullptr;;
}



inline jule::Bool _1ad8e6947_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p) {
	return _1dd0a3976_HasPrefix((*(_33318_f)), _1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1dd46550d_PathStdlib; (*it++) = _33326_p; __jule_collection; })));;
}



inline jule::Bool _1ad90c72c_isValidModelForRef(jule::Any* _1428_m) {
	{
		auto &_match_expr{ (*(_1428_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be230d42:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1be230da8:;
			{
				jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _197_model = (*(_1428_m)).cast_ptr<_1ad7dee28_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_197_model))._field_Field != nullptr) && _1ad90c72c_isValidModelForRef(&((*((*_197_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1be230e1e:;
			{
				jule::Ptr<_1ad7da781_UnaryExprModel> _227_unary = (*(_1428_m)).cast_ptr<_1ad7da781_UnaryExprModel>(&__jule_any_type112);;
				if (((*((*(_227_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1ad9bb269_Ptr((*((*_227_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1ad9baed3_Sptr((*((*(_227_unary))._field_Expr))._field_Kind) == nullptr)) {
					return false;;
				};
				return _1ad90c72c_isValidModelForRef(&((*(*(_227_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1be230e85:;
			{
				jule::Ptr<_1ad7dcc17_IndexingExprModel> _367_indexing = (*(_1428_m)).cast_ptr<_1ad7dcc17_IndexingExprModel>(&__jule_any_type42);;
				if ((_1ad9bba1c_Arr((*((*(_367_indexing))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1ad90c72c_isValidModelForRef(&((*(*(_367_indexing))._field_Expr.alloc)._field_Model));;
			}
		}
		else {
			_case_begin_1be230935:;
			{
				return false;;
			}
		}
		_match_end_1be230517:;
	};
}



inline _1dd356476_Log _1ad90cc5a_compilerErr(jule::Ptr<_1ad6ceb70_Token>* _4817_token, jule::Bool _4839_line, jule::Str _4851_fmt, jule::Slice<jule::Any> _4871_args) {
	_1dd356476_Log _496_log = _1dd356476_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4817_token))))._field_Row, ._field_Column=(*((*(_4817_token))))._field_Column, ._field_Path=(*((*((*(_4817_token))))._field_File))._field_Path, ._field_Text=_1dd3568d8_Logf(_4851_fmt, _4871_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4839_line) {
		_496_log._field_Line=_1ad6d6836_GetRow((*((*(_4817_token))))._field_File, (*((*(_4817_token))))._field_Row);
	};
	return _496_log;;
}



inline void _1ad90d046_appendRetVars(jule::Slice<jule::Ptr<_1ad933a83_Var>>* _6223_dest, jule::Ptr<_1ad7ea84b_FnIns>* _6242_f) {
	if ((_1ad7e7c44_IsVoid((*((*(_6242_f))))._field_Decl.ptr()) || ((*((*(_6242_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _676_types = _1ad7eba7d_Types((*(_6242_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6242_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be24122b:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> _6814_ident = *it;
			{
				if ((_1ad6d2557_IsIgnoreIdent((*(_6814_ident))._field_Kind) || _1ad6d2821_IsAnonIdent((*_6814_ident.alloc)._field_Kind))) {
					goto _iter_next_1be24122b;
				};
				{ jule::Slice<jule::Ptr<_1ad933a83_Var>> &__jule_push_dest = (*(_6223_dest)); __jule_push_dest.push(jule::new_ptr<_1ad933a83_Var>(_1ad933a83_Var{._field_Scope=(*((*(_6242_f))))._field_Scope, ._field_Token=_6814_ident, ._field_Ident=(*_6814_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=_676_types[_687_i]}), ._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_RetOrder=_687_i, ._field_Depends=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr)})); };
			}
			_iter_next_1be24122b:;
			++it;
			_687_i++;
			goto _iter_begin_1be24122b;
		}
		_iter_end_1be24122b:;
	};
	if ((((*(*((*((*(_6242_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6223_dest)).len() == 1LL))) {
		(*((*(_6223_dest))[((*(_6223_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1ad90d376_appendParamVars(jule::Slice<jule::Ptr<_1ad933a83_Var>>* _9225_dest, jule::Ptr<_1ad7ea84b_FnIns>* _9244_f) {
	if (((*((*(_9244_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9244_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be245a7c:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e96e6_ParamIns> _9714_p = *it;
			{
				if ((_1ad6d2557_IsIgnoreIdent((*((*(_9714_p))._field_Decl))._field_Ident) || _1ad6d2821_IsAnonIdent((*(*(_9714_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1be245a7c;
				};
				jule::Ptr<_1ad933a83_Var> _1027_v = jule::new_ptr<_1ad933a83_Var>(_1ad933a83_Var{._field_Scope=(*((*(_9244_f))))._field_Scope, ._field_Token=(*(*(_9714_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_9714_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_9714_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_9714_p))._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr)}), ._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr)});;
				{
					
					if (_1ad7e6418_IsSelf((*(_9714_p))._field_Decl)) {
						_case_begin_1be249960:;
						{
							(*((*(_1027_v))._field_Kind))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9244_f))))._field_Owner, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)});
							(*_1027_v.alloc)._field_Reference=(!(_1ad7e669e_IsRef((*(_9714_p))._field_Decl)));
							if (_1ad7e669e_IsRef((*(_9714_p))._field_Decl)) {
								((*(_1027_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1027_v))._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1ad9c51da_Sptr>(_1ad9c51da_Sptr{._field_Elem=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=(*(*((*(_1027_v))._field_Kind))._field_Kind.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1027_v))._field_Kind))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_9714_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1be249641:;
						{
							(*((*(_1027_v))._field_Kind))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad9c5bad_Slc>(_1ad9c5bad_Slc{._field_Elem=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=(*((*_9714_p.alloc)._field_Kind))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_9714_p))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1be2495ca:;
						{
							(*((*(_1027_v))._field_Kind))._field_Kind=(*_9714_p.alloc)._field_Kind;
						}
					}
					_match_end_1be249498:;
				};
				{ jule::Slice<jule::Ptr<_1ad933a83_Var>> &__jule_push_dest = (*(_9225_dest)); __jule_push_dest.push(_1027_v); };
			}
			_iter_next_1be245a7c:;
			++it;
			goto _iter_begin_1be245a7c;
		}
		_iter_end_1be245a7c:;
	};
}



inline void _1ad90d662_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>* _15234_dest, jule::Ptr<_1ad7ea84b_FnIns>* _15259_f) {
	jule::I64 _1536_size = (*((*(_15259_f))))._field_Generics.len();;
	if (((*((*((*(_15259_f))))._field_Decl))._field_Owner != nullptr)) {
		_1536_size+=(*(*((*((*(_15259_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1536_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15259_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be252d75:;
		if (it != expr_end) {
			jule::I64 _1627_i = it - expr->begin();
			jule::Ptr<_1ad9b6de1_InsGeneric> _16214_g = *it;
			{
				if ((_16214_g == nullptr)) {
					goto _iter_next_1be252d75;
				};
				jule::Ptr<_1ad7023bd_GenericDecl> _1667_decl = (*(*((*(_15259_f))))._field_Decl.alloc)._field_Generics[_1627_i];;
				{ jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> &__jule_push_dest = (*(_15234_dest)); __jule_push_dest.push(jule::new_ptr<_1ad9b77a4_TypeAlias>(_1ad9b77a4_TypeAlias{._field_Scope=(*(*((*(_15259_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1667_decl.alloc)._field_Token, ._field_Ident=(*(_1667_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=(*(_16214_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1be252d75:;
			++it;
			_1627_i++;
			goto _iter_begin_1be252d75;
		}
		_iter_end_1be252d75:;
	};
	if (((*(*((*(_15259_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1ad718857_StructIns> _1787_owner = (*((*(_15259_f))))._field_Owner;;
		{
			auto expr = &((*_1787_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be254717:;
			if (it != expr_end) {
				jule::I64 _1798_i = it - expr->begin();
				jule::Ptr<_1ad9b6de1_InsGeneric> _17915_g = *it;
				{
					jule::Ptr<_1ad7023bd_GenericDecl> _1808_decl = (*((*(_1787_owner))._field_Decl))._field_Generics[_1798_i];;
					{ jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>> &__jule_push_dest = (*(_15234_dest)); __jule_push_dest.push(jule::new_ptr<_1ad9b77a4_TypeAlias>(_1ad9b77a4_TypeAlias{._field_Scope=(*(*((*(_15259_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1808_decl.alloc)._field_Token, ._field_Ident=(*(_1808_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=(*(_17915_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1be254717:;
				++it;
				_1798_i++;
				goto _iter_begin_1be254717;
			}
			_iter_end_1be254717:;
		};
	};
}



inline jule::Ptr<_1ad7eda91_SymTab> _1ad90d9d6_findFile(jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>* _19318_files, jule::Ptr<_1ad6d5527_Fileset>* _19337_handler) {
	{
		auto expr = _19318_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2587e8:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _19414_fl = *it;
			{
				if (((*(_19414_fl))._field_File == (*(_19337_handler)))) {
					return _19414_fl;;
				};
			}
			_iter_next_1be2587e8:;
			++it;
			goto _iter_begin_1be2587e8;
		}
		_iter_end_1be2587e8:;
	};
	return nullptr;;
}



inline void _1ad90dd7c_pushSuggestion(_1dd356476_Log* _20230_log, jule::Str _20248_fmt, jule::Slice<jule::Any> _20268_args) {
	(*(_20230_log))._field_Suggestion=_1dd3568d8_Logf(_20248_fmt, _20268_args);
}



inline void _1ad9319d7_pushImplemented(jule::Ptr<_1ad802ea2_Trait> _280124_t, jule::Ptr<_1ad7159ec_Struct>* _280140_d) {
	_julec_label_1be2583b9:;
	{
		
		if (((*(_280124_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1be25b521:;
			{
				{
					auto expr = &((*_280124_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be25be7d:;
					if (it != expr_end) {
						jule::Ptr<_1ad7159ec_Struct> _280510_s = *it;
						{
							if ((_280510_s == (*(_280140_d)))) {
								goto _match_end_1be25a9a4;
							};
						}
						_iter_next_1be25be7d:;
						++it;
						goto _iter_begin_1be25be7d;
					}
					_iter_end_1be25be7d:;
				};
				goto _case_begin_1be25aa5e;
			}
		}
		else {
			_case_begin_1be25aa5e:;
			{
				(*(_280124_t))._field_Implemented=jule::append((*_280124_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7159ec_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_280140_d)); __jule_collection; }));
			}
		}
		_match_end_1be25a9a4:;
	};
	{
		auto expr = &((*(_280124_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be25c896:;
		if (it != expr_end) {
			jule::Ptr<_1ad9c0ca7_TypeSymbol> _281414_i = *it;
			{
				_1ad9319d7_pushImplemented(_1ad9bc556_Trait((*(_281414_i))._field_Kind.ptr()), _280140_d);
			}
			_iter_next_1be25c896:;
			++it;
			goto _iter_begin_1be25c896;
		}
		_iter_end_1be25c896:;
	};
}



inline void _1ad931cc3_pushImplements(jule::Ptr<_1ad7159ec_Struct>* _281924_s, jule::Ptr<_1ad802ea2_Trait> _281940_t) {
	_julec_label_1be25bb2b:;
	{
		
		if (((*((*(_281924_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1be25e0b2:;
			{
				{
					auto expr = &((*((*(_281924_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be25ea1e:;
					if (it != expr_end) {
						jule::Ptr<_1ad802ea2_Trait> _282310_b = *it;
						{
							if ((_282310_b == _281940_t)) {
								goto _match_end_1be25d545;
							};
						}
						_iter_next_1be25ea1e:;
						++it;
						goto _iter_begin_1be25ea1e;
					}
					_iter_end_1be25ea1e:;
				};
				goto _case_begin_1be25d600;
			}
		}
		else {
			_case_begin_1be25d600:;
			{
				{ jule::Slice<jule::Ptr<_1ad802ea2_Trait>> &__jule_push_dest = (*((*(_281924_s))))._field_Implements; __jule_push_dest.push(_281940_t); };
			}
		}
		_match_end_1be25d545:;
	};
	{
		auto expr = &((*(_281940_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be260437:;
		if (it != expr_end) {
			jule::Ptr<_1ad9c0ca7_TypeSymbol> _283214_i = *it;
			{
				_1ad931cc3_pushImplements(_281924_s, _1ad9bc556_Trait((*(_283214_i))._field_Kind.ptr()));
			}
			_iter_next_1be260437:;
			++it;
			goto _iter_begin_1be260437;
		}
		_iter_end_1be260437:;
	};
}



inline void _1ad932224_pushRuntimeToStr(jule::Ptr<_1ad90ed6c_sema>* _283726_s, jule::Ptr<_1ad9b8596_TypeKind>* _283741_t, jule::Ptr<_1ad6ceb70_Token>* _283760_token, jule::Ptr<_1ad8ced70_ReferenceStack> _28386_refers) {
	if ((((*((*((*(_283726_s))))._field_meta))._field_runtime == nullptr) || _1ad9b96c9_IsNil((*(_283741_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _28426_f = _1ad7e8c9a_instanceForce(_1ab307aca_runtimeFindFn(&((*(*((*(_283726_s))))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_28426_f))._field_Generics=jule::append((*_28426_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ad9b6de1_InsGeneric>(_1ad9b6de1_InsGeneric{._field_Kind=(*(_283741_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>(nullptr)}); __jule_collection; }));
	jule::Bool _28442_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad92a7c2_checkGenericFn((*(_283726_s)), &(_28426_f), _283760_token);
		_28442_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_28442_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:2846:3"));;
	};
	if ((_28386_refers != nullptr)) {
		_1ad8d09db_Push(_28386_refers, jule::Any(_28426_f, &__jule_any_type63));
	};
}



inline jule::Bool _1ad9324dd_isValidImpAlias(jule::Str _285524_alias) {
	jule::Bool __jule_func_result = false;
	if (_1ad6d2557_IsIgnoreIdent(_285524_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (_1ad6d3822_IsKeyword(_285524_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::I32 _28626_r;
	jule::I64 _286213_size;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa9280_DecodeRuneStr(_285524_alias);
		_28626_r = __jule_assign_result.__jule_result_arg0;
		_286213_size = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28626_r != '_') && (!(_1ad6d339e_IsLetter(_28626_r))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	for (;;) {
		{
			(_285524_alias).mut_slice(_286213_size);;
			if ((_285524_alias.len() == 0LL)) {
				goto _iter_end_1be267917;
			};
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1dbaa9280_DecodeRuneStr(_285524_alias);
				_28626_r = __jule_assign_result.__jule_result_arg0;
				_286213_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_28626_r != '_') && (!((('0' <= _28626_r) && (_28626_r <= '9'))))) && (!(_1ad6d339e_IsLetter(_28626_r))))) {
				__jule_func_result = false;
				return __jule_func_result;;
			};
		}
	_iter_next_1be267917:;
	}
	_iter_end_1be267917:;;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ad970c57_traitHasReferenceReceiver(jule::Ptr<_1ad802ea2_Trait>* _1631_t) {
	{
		auto expr = &((*((*(_1631_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be4d626d:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> *_179_f = it;
			{
				if ((*((*(_179_f))))._field_Statically) {
					goto _iter_next_1be4d626d;
				};
				jule::Ptr<_1ad7e5cb9_Param> _233_p = (*(*(_179_f)).alloc)._field_Params[0LL];;
				if ((_1ad7e669e_IsRef(_233_p.ptr()) && _1ad7e6418_IsSelf(_233_p))) {
					return true;;
				};
			}
			_iter_next_1be4d626d:;
			++it;
			goto _iter_begin_1be4d626d;
		}
		_iter_end_1be4d626d:;
	};
	return false;;
}



inline jule::Bool _1ad971120_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1ad985b90_Data>* _3133_d) {
	jule::Str _322_value = _1ab146b28_FmtFloat(_1ad7d1711_AsF64((*((*(_3133_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1ad8754ec_CheckBitFloat(_322_value, _1ad874056_BitSizeOf((*(_3121_kind))));;
}



inline jule::Bool _1ad971494_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1ad985b90_Data>* _3630_d) {
	jule::F64 _372_min = _1ad87a645_Min(_3618_kind);;
	jule::F64 _382_max = _1ad87a8cb_Max(_3618_kind);;
	{
		
		if (_1ad7d3559_IsF64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1be4d9d10:;
			{
				jule::F64 _413_x = _1ad7d0e5d_ReadF64((*((*(_3630_d))))._field_Constant);;
				jule::F64 _423_i;
				jule::F64 _426_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1c2d55dd6_Modf(_413_x);
					_423_i = __jule_assign_result.__jule_result_arg0;
					_426_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_426_frac != 0LL)) {
					return false;;
				};
				return ((_423_i >= _372_min) && (_423_i <= _382_max));;
			}
		}
		else if (_1ad7d2ca6_IsU64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1be4d9d76:;
			{
				jule::F64 _483_x = _1ad7d1711_AsF64((*((*(_3630_d))))._field_Constant);;
				if ((_483_x <= _382_max)) {
					return true;;
				};
			}
		}
		else if (_1ad7d2a20_IsI64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1be4d9ddc:;
			{
				jule::F64 _533_x = _1ad7d1711_AsF64((*((*(_3630_d))))._field_Constant);;
				return ((_372_min <= _533_x) && (_533_x <= _382_max));;
			}
		}
		_match_end_1be4d9bde:;
	};
	return false;;
}



inline jule::Bool _1ad97185c_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1ad985b90_Data>* _5932_d) {
	jule::F64 _602_max = _1ad87a8cb_Max(_5920_kind);;
	if (((*((*(_5932_d))))._field_IsRune && (_5920_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1ad96c9ce_IsAscii(static_cast<jule::I32>(_1ad7d0424_ReadI64((*((*(_5932_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1ad7d3559_IsF64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1be4e0a6e:;
			{
				jule::F64 _673_x = _1ad7d0e5d_ReadF64((*((*(_5932_d))))._field_Constant);;
				if ((_673_x < 0LL)) {
					return false;;
				};
				jule::F64 _713_i;
				jule::F64 _716_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1c2d55dd6_Modf(_673_x);
					_713_i = __jule_assign_result.__jule_result_arg0;
					_716_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_716_frac != 0LL)) {
					return false;;
				};
				return (_713_i <= _602_max);;
			}
		}
		else if (_1ad7d2ca6_IsU64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1be4e0ad5:;
			{
				jule::F64 _773_x = _1ad7d1711_AsF64((*((*(_5932_d))))._field_Constant);;
				if ((_773_x <= _602_max)) {
					return true;;
				};
			}
		}
		else if (_1ad7d2a20_IsI64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1be4e0b4b:;
			{
				jule::F64 _823_x = _1ad7d1711_AsF64((*((*(_5932_d))))._field_Constant);;
				return ((0LL <= _823_x) && (_823_x <= _602_max));;
			}
		}
		_match_end_1be4e00e0:;
	};
	return false;;
}



inline jule::Bool _1ad971bd1_intAssignable(jule::Str _8818_kind, jule::Ptr<_1ad985b90_Data>* _8830_d) {
	{
		
		if (_1ad87b9ed_IsSigInt(_8818_kind)) {
			_case_begin_1be4e569a:;
			{
				return _1ad971494_sigAssignable(_8818_kind, _8830_d);;
			}
		}
		else if (_1ad87bd0b_IsUnsigInt(_8818_kind)) {
			_case_begin_1be4e5733:;
			{
				return _1ad97185c_unsigAssignable(_8818_kind, _8830_d);;
			}
		}
		else {
			_case_begin_1be4e51c2:;
			{
				return false;;
			}
		}
		_match_end_1be4e50e5:;
	};
}



inline void _1ad97d1c6_checkMutRiskOfStructLit(jule::Ptr<_1ad90ed6c_sema>* _90933_s, jule::Ptr<_1ad7db155_StructLitExprModel>* _90944_m) {
	{
		auto expr = &((*((*(_90944_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be4e6811:;
		if (it != expr_end) {
			jule::Ptr<_1ad7dacae_StructArgExprModel> *_9109_arg = it;
			{
				if ((*((*((*((*(_9109_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1be4e6811;
				};
				if (((!((*((*(*(_9109_arg)).alloc)._field_Expr))._field_Mutable)) && _1ad9b9e7c_Mutable((*(*((*(_9109_arg))))._field_Expr.alloc)._field_Kind.ptr()))) {
					_1ad912c71_pushErr((*(_90933_s)).ptr(), (*(*(_9109_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*((*(_9109_arg))))._field_Expr))._field_Kind), &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1be4e6811:;
			++it;
			goto _iter_begin_1be4e6811;
		}
		_iter_end_1be4e6811:;
	};
}



inline jule::Ptr<_1ad9b8596_TypeKind> _1ad984012_lenKind(void) {
	return _1adaa00c8_primInt;;
}



inline jule::Bool _1ad984364_isGoodValueToInfer(jule::Ptr<_1ad985b90_Data>* _141424_d) {
	return (!(_1ad9860ad_IsNil((*(_141424_d)).ptr())));;
}



inline jule::Ptr<_1ad6e45d0_Directive> _1ad9b0192_findDirective(jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _435323_directives, jule::Str _435354_d) {
	{
		auto expr = _435323_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6395e1:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e45d0_Directive> _435414_dr = *it;
			{
				if (((*((*(_435414_dr))._field_Tag))._field_Kind == _435354_d)) {
					return _435414_dr;;
				};
			}
			_iter_next_1be6395e1:;
			++it;
			goto _iter_begin_1be6395e1;
		}
		_iter_end_1be6395e1:;
	};
	return nullptr;;
}



inline jule::Any _1ad9b055a_findBuiltinsImport(jule::Str* _436224_ident, jule::Ptr<_1ad8e1bea_ImportInfo> _436236_imp) {
	return _1adaa36d6_findPackageBuiltinDef(&((*(_436236_imp))._field_LinkPath), _436224_ident);;
}



inline void _1ad9b078b_fitBitsize(jule::Ptr<_1ad985b90_Data>* _437120_d) {
	jule::Ptr<_1ad9c16ae_Prim> _43726_prim = _1ad9bac4c_Prim((*((*(_437120_d))))._field_Kind.ptr());;
	jule::I64 _43732_z = _1ad874056_BitSizeOf(_1ad9c1a33_Str(_43726_prim.ptr()));;
	{
		
		if (_1ad7d2a20_IsI64((*((*(_437120_d))))._field_Constant.ptr())) {
			_case_begin_1be63bdda:;
			{
				jule::I64 _43763_k = _1ad875a80_BitSizeOfInt(_1ad7d0424_ReadI64((*((*(_437120_d))))._field_Constant));;
				if (((_43763_k > _43732_z) || _1ad87bd0b_IsUnsigInt((*_43726_prim.alloc)._field_Kind))) {
					(*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind=_1ad874397_IntFromBits(_43763_k);
					(*((*(_437120_d))))._field_Kind=(*((*(_1adaa242c_findBuiltinTypeAlias((*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1ad7d2ca6_IsU64((*((*(_437120_d))))._field_Constant.ptr())) {
			_case_begin_1be63be51:;
			{
				jule::I64 _43823_k = _1ad875d49_BitSizeOfUint(_1ad7d06aa_ReadU64((*((*(_437120_d))))._field_Constant));;
				if (((_43823_k > _43732_z) || _1ad87b9ed_IsSigInt((*_43726_prim.alloc)._field_Kind))) {
					(*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind=_1ad87462d_UintFromBits(_43823_k);
					(*((*(_437120_d))))._field_Kind=(*((*(_1adaa242c_findBuiltinTypeAlias((*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1ad7d3559_IsF64((*((*(_437120_d))))._field_Constant.ptr())) {
			_case_begin_1be63bec8:;
			{
				if ((_43732_z == 64LLU)) {
					return;;
				};
				jule::I64 _43923_k = _1ad8757b6_BitSizeOfFloat(_1ad7d0e5d_ReadF64((*((*(_437120_d))))._field_Constant));;
				if ((_43923_k > _43732_z)) {
					(*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind=_1ad8748e7_FloatFromBits(_43923_k);
					(*((*(_437120_d))))._field_Kind=(*((*(_1adaa242c_findBuiltinTypeAlias((*(*((*(_437120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1be63bcb9:;
	};
}



inline void _1ad9b0abb_makeStructLitAlloc(jule::Ptr<_1ad985b90_Data>* _440028_d, jule::Ptr<_1ad7db155_StructLitExprModel>* _440043_lit) {
	(*((*(_440028_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad9c51da_Sptr>(_1ad9c51da_Sptr{._field_Elem=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_440043_lit))))._field_Strct, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data23)});
	(*((*(_440028_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7db452_AllocStructLitExprModel>(_1ad7db452_AllocStructLitExprModel{._field_Lit=(*(_440043_lit))}), &__jule_any_type114);
}



inline jule::Ptr<_1ad933a83_Var> _1ad9b0e40_buildErrorVar(jule::Ptr<_1ad8b136d_Scope>* _441123_s, jule::Ptr<_1ad6ed221_FnCallExpr>* _441139_fc) {
	return jule::new_ptr<_1ad933a83_Var>(_1ad933a83_Var{._field_Scope=(*(_441123_s)), ._field_Token=(*((*(_441139_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_Kind, ._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr)});;
}



inline jule::Any _1ad9b12b4_findBuiltinsSema(jule::Str* _442622_ident, jule::Ptr<_1ad90ed6c_sema> _442638_s) {
	jule::Str _44286_ppath = _1ad6d5ec8_Dir((*((*(_442638_s))._field_file))._field_File.ptr());;
	if (_1dd0a3976_HasPrefix(_44286_ppath, _1dd46550d_PathStdlib)) {
		(_44286_ppath).mut_slice(_1dd46550d_PathStdlib.len());;
		_44286_ppath=(jule::Str::lit("std", 3) + _1dd0a931c_Replace(_44286_ppath, jule::Str::lit("/", 1), jule::Str::lit("/", 1), -1LL));
		return _1adaa36d6_findPackageBuiltinDef(&(_44286_ppath), _442622_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1ad9b157d_isOkForShifting(jule::Ptr<_1ad985b90_Data>* _444125_d) {
	if (_1ad9865ca_IsConst((*(_444125_d)).ptr())) {
		{
			
			if (_1ad7d2a20_IsI64((*((*(_444125_d))))._field_Constant.ptr())) {
				_case_begin_1be64cca8:;
				{
					return (_1ad7d0424_ReadI64((*((*(_444125_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1ad7d2ca6_IsU64((*((*(_444125_d))))._field_Constant.ptr())) {
				_case_begin_1be64cd52:;
				{
					return true;;
				}
			}
			else if (_1ad7d3559_IsF64((*((*(_444125_d))))._field_Constant.ptr())) {
				_case_begin_1be64cdc9:;
				{
					return (_1ad7d0e5d_ReadF64((*((*(_444125_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1be64cc20:;
				{
					return false;;
				}
			}
			_match_end_1be64cb43:;
		};
	};
	jule::Ptr<_1ad9c16ae_Prim> _44542_prim = _1ad9bac4c_Prim((*((*(_444125_d))))._field_Kind.ptr());;
	return ((_44542_prim != nullptr) && _1ad87c0c5_IsInt(_1ad9c1a33_Str(_44542_prim)));;
}



inline jule::Bool _1ad9b1957_isInstancedStruct(jule::Ptr<_1ad718857_StructIns> _445822_s) {
	return ((*((*(_445822_s))._field_Decl))._field_Generics.len() == (*_445822_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1ad9b1c54_isPtrArithmeticCompatible(jule::Ptr<_1ad985b90_Data>* _446235_l, jule::Ptr<_1ad985b90_Data>* _446250_r) {
	jule::Ptr<_1ad9c89a2_Ptr> _44632_ptr = _1ad9bb269_Ptr((*((*(_446250_r))))._field_Kind.ptr());;
	if ((_44632_ptr != nullptr)) {
		return _1ad9b8cd3_Equal((*(_1ad9bb269_Ptr((*((*(_446235_l))))._field_Kind)))._field_Elem, (*_44632_ptr.alloc)._field_Elem);;
	};
	if ((_1ad9865ca_IsConst((*(_446250_r)).ptr()) && (*((*(_446250_r))))._field_untyped)) {
		return (_1ad971bd1_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _446250_r) || _1ad971bd1_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _446250_r));;
	};
	_1ad9721ba_typeCompatibilityChecker _44726_tcc = _1ad9721ba_typeCompatibilityChecker{._field_s=jule::Ptr<_1ad90ed6c_sema>(nullptr), ._field_dest=_1adaa00c8_primInt, ._field_src=(*((*(_446250_r))))._field_Kind, ._field_errorToken=jule::Ptr<_1ad6ceb70_Token>(nullptr)};;
	if (_1ad9738b4_check(&_44726_tcc)) {
		return true;;
	};
	_44726_tcc._field_dest=_1ada9ec10_primUint;
	return _1ad9738b4_check(&_44726_tcc);;
}



inline void _1ad9b2260_applyRuntimeToStr(jule::Ptr<_1ad90ed6c_sema>* _448327_s, jule::Ptr<_1ad9b8596_TypeKind>* _448342_from, jule::Ptr<_1ad9b8596_TypeKind>* _448364_to, jule::Ptr<_1ad6ceb70_Token>* _44847_token, jule::Ptr<_1ad8ced70_ReferenceStack> _448433_refers) {
	jule::Ptr<_1ad9c16ae_Prim> _44852_prim = _1ad9bac4c_Prim((*(_448364_to)).ptr());;
	if ((_44852_prim != nullptr)) {
		if (_1ad9c4e10_IsAny(_44852_prim)) {
			_1ad932224_pushRuntimeToStr(_448327_s, _448342_from, _44847_token, _448433_refers);
		};
		return;;
	};
	if ((_1ad9bb786_TypeEnum((*(_448364_to)).ptr()) != nullptr)) {
		_1ad932224_pushRuntimeToStr(_448327_s, _448342_from, _44847_token, _448433_refers);
		return;;
	};
}



inline void _1ad9b276b_applyCastKindModel(jule::Ptr<_1ad90ed6c_sema>* _449828_s, jule::Ptr<_1ad985b90_Data>* _449843_d, jule::Ptr<_1ad9b8596_TypeKind>* _449858_t, jule::Ptr<_1ad6ceb70_Token>* _44997_token, jule::Ptr<_1ad8ced70_ReferenceStack> _449933_refers) {
	_1ad9b2260_applyRuntimeToStr(_449828_s, &((*((*(_449843_d))))._field_Kind), _449858_t, _44997_token, _449933_refers);
	(*((*(_449843_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7db9d5_CastingExprModel>(_1ad7db9d5_CastingExprModel{._field_Token=(*(_44997_token)), ._field_Expr=jule::new_ptr<_1ad985b90_Data>((*((*(_449843_d))))), ._field_Kind=(*(_449858_t)), ._field_ExprKind=(*((*(_449843_d))))._field_Kind}), &__jule_any_type95);
}



inline void _1ad9b2c77_applyCastKind(jule::Ptr<_1ad90ed6c_sema>* _450923_s, jule::Ptr<_1ad985b90_Data>* _450938_d, jule::Ptr<_1ad9b8596_TypeKind>* _450953_t, jule::Ptr<_1ad6ceb70_Token>* _45107_token, jule::Ptr<_1ad8ced70_ReferenceStack> _451033_refers) {
	_1ad9b276b_applyCastKindModel(_450923_s, _450938_d, _450953_t, _45107_token, _451033_refers);
	(*((*(_450938_d))))._field_Kind=(*(_450953_t));
}



inline jule::Ptr<_1ad985b90_Data> _1ad9b2e86_buildVoidData(void) {
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9dd41_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Str _1ad9b3470_checkDataForIntegerIndexing(jule::Ptr<_1ad90ed6c_sema>* _452137_s, jule::Ptr<_1ad985b90_Data>* _452152_d, jule::Ptr<_1ad6ceb70_Token>* _45227_token, jule::Ptr<_1ad8ced70_ReferenceStack> _452233_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_452152_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1ad9bac4c_Prim((*((*(_452152_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1be65e050:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1ad87c0c5_IsInt(_1ad9c1a33_Str(_1ad9bac4c_Prim((*((*(_452152_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1be65e0b6:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1ad9865ca_IsConst((*(_452152_d)).ptr())) {
			_case_begin_1be65e12c:;
			{
				if ((_1ad7d1711_AsF64((*((*(_452152_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1ad9bac4c_Prim((*((*(_452152_d))))._field_Kind.ptr()) == nullptr) || _1ad9865ca_IsConst((*(_452152_d)).ptr()) || (_1ad873c8c_RealKindOf(_1ad9c1a33_Str(_1ad9bac4c_Prim((*((*(_452152_d))))._field_Kind).ptr())) != _1ad873c8c_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1be65e193:;
			{
				_1ad9b2c77_applyCastKind(_452137_s, _452152_d, &(_1adaa00c8_primInt), _45227_token, _452233_refers);
			}
		}
		_match_end_1be65db32:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1ad9b397b_applyCastModelByEnum(jule::Ptr<_1ad90ed6c_sema>* _454730_s, jule::Ptr<_1ad985b90_Data>* _454745_d, jule::Ptr<_1ad805658_Enum> _454759_e, jule::Ptr<_1ad6ceb70_Token>* _45487_token, jule::Ptr<_1ad8ced70_ReferenceStack> _454833_refers) {
	if ((_454759_e == nullptr)) {
		return;;
	};
	_1ad9b276b_applyCastKindModel(_454730_s, _454745_d, &((*((*(_454759_e))._field_Kind))._field_Kind), _45487_token, _454833_refers);
}



inline void _1ad9b3e98_castConstByType(jule::Str* _455521_t, jule::Ptr<_1ad985b90_Data>* _455534_d) {
	{
		
		if (_1ad87b9ed_IsSigInt((*(_455521_t)))) {
			_case_begin_1be664ce2:;
			{
				{
					auto _match_expr{ _1ad874056_BitSizeOf(_1ad873c8c_RealKindOf((*(_455521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1be6658e7:;
						{
							_1ad7d19b9_SetI64((*((*(_455534_d))))._field_Constant.ptr(), _1ad7d11e4_AsI64((*((*(_455534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1be66595d:;
						{
							_1ad7d19b9_SetI64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1ad7d11e4_AsI64((*((*(_455534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1be6659c4:;
						{
							_1ad7d19b9_SetI64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1ad7d11e4_AsI64((*((*(_455534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1be665a3a:;
						{
							_1ad7d19b9_SetI64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1ad7d11e4_AsI64((*((*(_455534_d))))._field_Constant))));
						}
					}
					_match_end_1be665881:;
				};
			}
		}
		else if (_1ad87bd0b_IsUnsigInt((*(_455521_t)))) {
			_case_begin_1be664d8b:;
			{
				{
					auto _match_expr{ _1ad874056_BitSizeOf(_1ad873c8c_RealKindOf((*(_455521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1be669a94:;
						{
							_1ad7d1c72_SetU64((*((*(_455534_d))))._field_Constant.ptr(), _1ad7d147a_AsU64((*((*(_455534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1be669b0a:;
						{
							_1ad7d1c72_SetU64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1ad7d147a_AsU64((*((*(_455534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1be669b71:;
						{
							_1ad7d1c72_SetU64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1ad7d147a_AsU64((*((*(_455534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1be669bd7:;
						{
							_1ad7d1c72_SetU64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1ad7d147a_AsU64((*((*(_455534_d))))._field_Constant))));
						}
					}
					_match_end_1be669a2d:;
				};
			}
		}
		else if (_1ad87c416_IsFloat((*(_455521_t)))) {
			_case_begin_1be664e02:;
			{
				{
					auto _match_expr{ _1ad874056_BitSizeOf(_1ad873c8c_RealKindOf((*(_455521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1be669e7e:;
						{
							_1ad7d258b_SetF64((*((*(_455534_d))))._field_Constant.ptr(), _1ad7d1711_AsF64((*((*(_455534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1be66dc41:;
						{
							_1ad7d258b_SetF64((*((*(_455534_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1ad7d1711_AsF64((*((*(_455534_d))))._field_Constant))));
						}
					}
					_match_end_1be66dbca:;
				};
			}
		}
		_match_end_1be664b8d:;
	};
}



inline void _1ad9b4174_updateModelToGenericIns(jule::Any* _458933_m, jule::Ptr<_1ad7ea84b_FnIns>* _458952_f) {
	{
		auto &_match_expr{ (*(_458933_m)) };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1be66e0e8:;
			{
				(*(_458933_m))=jule::Any((*(_458952_f)), &__jule_any_type63);
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1be66e219:;
			{
				(*((*(_458933_m)).cast_ptr<_1ad7dee28_StructSubIdentExprModel>(&__jule_any_type100)))._field_Method=(*(_458952_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1be665d26:;
			{
				(*((*(_458933_m)).cast_ptr<_1ad7e02be_StructStaticIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_458952_f));
			}
		}
		_match_end_1be66e03d:;
	};
}



inline jule::Bool _1ad9b44e8_pushSubIdentFromExpr(jule::Any _460029_expr, jule::Ptr<_1ad6e5a87_SubIdentTypeDecl>* _460055_t) {
	{
		auto &_match_expr{ _460029_expr };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1be675011:;
			{
				jule::Ptr<_1ad6ead12_IdentExpr> _46037_e = _460029_expr.unsafe_cast_ptr<_1ad6ead12_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1ad6e57bd_IdentTypeDecl>> &__jule_push_dest = (*((*(_460055_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ad6e57bd_IdentTypeDecl>(_1ad6e57bd_IdentTypeDecl{._field_Token=(*(_46037_e))._field_Token, ._field_Ident=(*_46037_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1be67486d:;
			{
				jule::Ptr<_1ad6ec60a_SubIdentExpr> _46097_e = _460029_expr.unsafe_cast_ptr<_1ad6ec60a_SubIdentExpr>();;
				if ((!(_1ad9b44e8_pushSubIdentFromExpr((*((*(_46097_e))._field_Expr))._field_Kind, _460055_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1ad6e57bd_IdentTypeDecl>> &__jule_push_dest = (*((*(_460055_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1ad6e57bd_IdentTypeDecl>(_1ad6e57bd_IdentTypeDecl{._field_Token=(*_46097_e.alloc)._field_Ident, ._field_Ident=(*((*_46097_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1ad6e51b3_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1be6747e6:;
			{
				return false;;
			}
		}
		_match_end_1be675088:;
	};
	return true;;
}



inline jule::Str _1ad9b47b2_constoa(jule::Ptr<_1ad778ec2_Const>* _462313_c) {
	{
		
		if (_1ad7d2a20_IsI64((*(_462313_c)).ptr())) {
			_case_begin_1be67ad91:;
			{
				return _1ab15d3e2_FmtInt(_1ad7d0424_ReadI64((*(_462313_c)).ptr()), 10LL);;
			}
		}
		else if (_1ad7d2ca6_IsU64((*(_462313_c)).ptr())) {
			_case_begin_1be67b4e0:;
			{
				return _1ab15d029_FmtUint(_1ad7d06aa_ReadU64((*(_462313_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1be6765d9:;
			{
				return jule::Str();;
			}
		}
		_match_end_1be6748e5:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1ad9b4d56_evalEnumStatic(jule::Ptr<_1ad90ed6c_sema>* _463424_s, jule::Ptr<_1ad805658_Enum>* _463439_enm, jule::Ptr<_1ad804b0d_EnumItem>* _463456_item, jule::Ptr<_1ad6ceb70_Token>* _46357_token, jule::Ptr<_1ad8ced70_ReferenceStack> _463533_refers) {
	jule::Ptr<_1ad985b90_Data> _46366_d = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_463439_enm)), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
	if (((*(_463456_item)) != nullptr)) {
		(*(_46366_d))._field_Constant=jule::new_ptr<_1ad778ec2_Const>((*(*((*((*((*(_463456_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46366_d.alloc)._field_Model=jule::Any((*_46366_d.alloc)._field_Constant, &__jule_any_type15);
		_1ad9b397b_applyCastModelByEnum(_463424_s, &(_46366_d), (*(_463439_enm)), _46357_token, _463533_refers);
	};
	return _46366_d;;
}



inline jule::Ptr<_1ad7db155_StructLitExprModel> _1ad9b5120_isLitBased(jule::Any* _465220_m) {
	{
		auto &_match_expr{ (*(_465220_m)) };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1be680dda:;
			{
				return (*(_465220_m)).cast_ptr<_1ad7db155_StructLitExprModel>(&__jule_any_type97);;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1be680e51:;
			{
				return (*((*(_465220_m)).cast_ptr<_1ad7db452_AllocStructLitExprModel>(&__jule_any_type114)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1be680eb7:;
			{
				jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _46597_ssi = (*(_465220_m)).cast_ptr<_1ad7dee28_StructSubIdentExprModel>(&__jule_any_type100);;
				return _1ad9b5120_isLitBased(&((*((*(_46597_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1be68102d:;
			{
				jule::Ptr<_1ad7db9d5_CastingExprModel> _46627_c = (*(_465220_m)).cast_ptr<_1ad7db9d5_CastingExprModel>(&__jule_any_type95);;
				return _1ad9b5120_isLitBased(&((*((*(_46627_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1be680989:;
			{
				return nullptr;;
			}
		}
		_match_end_1be680923:;
	};
}



inline void _1ad9b540b_makeImplicitDeref(jule::Ptr<_1ad985b90_Data>* _466927_d, jule::Ptr<_1ad6ceb70_Token> _466941_baseToken) {
	jule::Ptr<_1ad7da781_UnaryExprModel> _46706_unary = jule::new_ptr<_1ad7da781_UnaryExprModel>(_1ad7da781_UnaryExprModel{._field_Expr=jule::new_ptr<_1ad985b90_Data>((*((*(_466927_d))))), ._field_Op=jule::new_ptr<_1ad6ceb70_Token>((*(_466941_baseToken)))});;
	(*((*(_46706_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_46706_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_466927_d))))._field_Model=jule::Any(_46706_unary, &__jule_any_type112);
}



inline void _1be79d4e1_updateRefer(jule::Ptr<_1ad8ced70_ReferenceStack> _468023_ref, jule::Ptr<_1ad7ea84b_FnIns>* _468046_old, jule::Ptr<_1ad7ea84b_FnIns>* _468059_new) {
	{
		auto expr = &((*(_468023_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be79ee2c:;
		if (it != expr_end) {
			jule::I64 _46816_i = it - expr->begin();
			jule::Any _46819_sym = *it;
			{
				if ((jule::Any((*(_468046_old)), &__jule_any_type63) == _46819_sym)) {
					(*(_468023_ref))._field_buffer[_46816_i]=jule::Any((*(_468059_new)), &__jule_any_type63);
				};
			}
			_iter_next_1be79ee2c:;
			++it;
			_46816_i++;
			goto _iter_begin_1be79ee2c;
		}
		_iter_end_1be79ee2c:;
	};
}



inline void _1ad9b5a8d_makeVariadic(jule::Ptr<_1ad985b90_Data>* _468822_d, jule::Ptr<_1ad9b8596_TypeKind> _468836_elem) {
	(*((*(_468822_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=(*_468836_elem.alloc)._field_BindIdent, ._field_Generic=(*(_468836_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_468836_elem.alloc)._field_Kind});
}



inline jule::Bool _1ad9b5ebc_isVarCaptured(jule::Ptr<_1ad8b860b_scopeChecker> _470218_r, jule::Ptr<_1ad8b860b_scopeChecker> _470240_s, jule::Ptr<_1ad933a83_Var> _470258_v) {
	if (((*(_470258_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_470240_s))._field_scope == (*_470258_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_470240_s.alloc)._field_parent == nullptr) || (_470240_s == _470218_r))) {
				goto _iter_end_1be68a0c0;
			};
			_470240_s=(*_470240_s.alloc)._field_parent;
		}
	_iter_next_1be68a0c0:;
	}
	_iter_end_1be68a0c0:;;
	return true;;
}



inline jule::Bool _1ad9d4749_kindUsesGenerics(jule::Ptr<_1ad9b8596_TypeKind>* _173426_k, jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>* _173441_generics) {
	{
		auto expr = _173441_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb013c1:;
		if (it != expr_end) {
			jule::Ptr<_1ad7023bd_GenericDecl> *_17359_g = it;
			{
				if (static__1ad9d434d_exist(&((*((*(_17359_g))))._field_Ident), _173426_k)) {
					return true;;
				};
			}
			_iter_next_1beb013c1:;
			++it;
			goto _iter_begin_1beb013c1;
		}
		_iter_end_1beb013c1:;
	};
	return false;;
}



inline jule::Bool _1ad9d4b12_hasDirective(jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _174422_directives, jule::Str _174453_tag) {
	{
		auto expr = _174422_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb01ba7:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e45d0_Directive> _174514_dr = *it;
			{
				if (((*((*(_174514_dr))._field_Tag))._field_Kind == _174453_tag)) {
					return true;;
				};
			}
			_iter_next_1beb01ba7:;
			++it;
			goto _iter_begin_1beb01ba7;
		}
		_iter_end_1beb01ba7:;
	};
	return false;;
}



inline jule::Bool _1ad9d4dcb_canGetPtr(jule::Ptr<_1ad985b90_Data>* _175319_d) {
	return (*((*(_175319_d))))._field_Lvalue;;
}



inline jule::Bool _1ad9d521c_isValidForSptrType(jule::Ptr<_1ad9b8596_TypeKind>* _175628_t) {
	jule::Ptr<_1ad718857_StructIns> _17576_s = _1ad9bc2c0_Struct((*(_175628_t)).ptr());;
	if ((((_17576_s != nullptr) && ((*_17576_s.alloc)._field_Decl != nullptr)) && (*(*(_17576_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1ad9d54a3_isValidForRef(jule::Ptr<_1ad9b8596_TypeKind>* _176523_t) {
	return (_1ad9bc039_Fn((*(_176523_t)).ptr()) == nullptr);;
}



inline jule::Bool _1ad9d576c_isBuiltinStrConvertable(jule::Ptr<_1ad9b8596_TypeKind>* _176833_t) {
	return ((((!(_1ad9b9960_Void((*(_176833_t)).ptr()))) && (_1ad9bc039_Fn((*(_176833_t)).ptr()) == nullptr)) && (_1ad9bca73_Tup((*(_176833_t)).ptr()) == nullptr)) && (!(_1ad9bcd09_comptime((*(_176833_t)).ptr()))));;
}



inline jule::Ptr<_1ad9c16ae_Prim> _1ad9d5a36_buildPrimType(jule::Str _177218_kind) {
	return jule::new_ptr<_1ad9c16ae_Prim>(_1ad9c16ae_Prim{._field_Kind=_177218_kind});;
}



inline void _1ad9d6394_applyImplicitCast(jule::Ptr<_1ad90ed6c_sema>* _180027_s, jule::Ptr<_1ad9b8596_TypeKind>* _180042_dest, jule::Ptr<_1ad985b90_Data>* _180064_d, jule::Ptr<_1ad6ceb70_Token>* _18017_token, jule::Ptr<_1ad8ced70_ReferenceStack> _180133_refers) {
	if (_1ad9b96c9_IsNil((*((*(_180064_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _18052_destPrim = _1ad9bac4c_Prim((*(_180042_dest)).ptr());;
	if (((_18052_destPrim != nullptr) && _1ad9c4e10_IsAny(_18052_destPrim))) {
		jule::Ptr<_1ad9c16ae_Prim> _18073_prim = _1ad9bac4c_Prim((*((*(_180064_d))))._field_Kind);;
		if (((_18073_prim == nullptr) || (!(_1ad9c4e10_IsAny(_18073_prim.ptr()))))) {
			_1ad9b2c77_applyCastKind(_180027_s, _180064_d, _180042_dest, _18017_token, _180133_refers);
		};
		return;;
	};
	jule::Ptr<_1ad802ea2_Trait> _18142_dt = _1ad9bc556_Trait((*(_180042_dest)).ptr());;
	if ((_18142_dt != nullptr)) {
		jule::Ptr<_1ad802ea2_Trait> _18163_bt = _1ad9bc556_Trait((*((*(_180064_d))))._field_Kind);;
		if (((_18163_bt == nullptr) || (_18163_bt != _18142_dt))) {
			_1ad9b276b_applyCastKindModel(_180027_s, _180064_d, _180042_dest, _18017_token, _180133_refers);
			return;;
		};
	};
	if (((_1ad9bb786_TypeEnum((*(_180042_dest)).ptr()) != nullptr) && (_1ad9bb786_TypeEnum((*((*(_180064_d))))._field_Kind) == nullptr))) {
		_1ad9b276b_applyCastKindModel(_180027_s, _180064_d, _180042_dest, _18017_token, _180133_refers);
		return;;
	};
}



inline jule::Bool _1ad9d665d_validTypeForXof(jule::Ptr<_1ad9b8596_TypeKind>* _182925_t) {
	return ((!(_1ad9b9960_Void((*(_182925_t)).ptr()))) && (_1ad9bc039_Fn((*(_182925_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1ad7eda91_SymTab__jule_tuple_s_1dd356476_Log _1ad9d9661_buildSymbols(jule::Ptr<_1ad6e325a_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1ad8d5b89_symBuilder> _1667_owner) {
	__jule_tuple_x_1ad7eda91_SymTab__jule_tuple_s_1dd356476_Log __jule_func_result;
	jule::Ptr<_1ad8d5b89_symBuilder> _176_sb = jule::new_ptr<_1ad8d5b89_symBuilder>(_1ad8d5b89_symBuilder{._field_owner=_1667_owner, ._field_importer=(*(_1643_importer)), ._field_errors=jule::Slice<_1dd356476_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1ad7eda91_SymTab>(nullptr)});;
	_1ad8dba2a_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1ad9d9991_collectImplicitImports(jule::Ptr<_1ad90ed6c_sema>* _3132_s, jule::Ptr<_1ad7eda91_SymTab>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec36a34:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1ad8dbde3_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1bec36a34;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std/runtime", 11)) {
						_case_begin_1bec37c22:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1bec372b5:;
						{
							__jule_panic_s(jule::Str::lit("sema: implementation mistake in implicit import collection, this panic call should be unreachable", 97) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1bec37859:;
				};
			}
			_iter_next_1bec36a34:;
			++it;
			goto _iter_begin_1bec36a34;
		}
		_iter_end_1bec36a34:;
	};
}



inline __jule_tuple_x_1ad8e446c_Package__jule_tuple_s_1dd356476_Log _1ad9dec2c_analyzePackage(jule::Slice<jule::Ptr<_1ad6e325a_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I64* _4570_flags) {
	__jule_tuple_x_1ad8e446c_Package__jule_tuple_s_1dd356476_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1ad7eda91_SymTab>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad7eda91_SymTab>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec38e54:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e325a_AST> _4814_f = *it;
			{
				jule::Ptr<_1ad7eda91_SymTab> _497_table;
				jule::Slice<_1dd356476_Log> _4918_errors;
				({
					__jule_tuple_x_1ad7eda91_SymTab__jule_tuple_s_1dd356476_Log __jule_assign_result = _1ad9d9661_buildSymbols(&(_4814_f), _4549_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1ad7eda91_SymTab>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1bec38e54:;
			++it;
			goto _iter_begin_1bec38e54;
		}
		_iter_end_1bec38e54:;
	};
	jule::Ptr<_1ad90ed6c_sema> _566_sema = jule::new_ptr<_1ad90ed6c_sema>(_1ad90ed6c_sema{._field_errors=jule::Slice<_1dd356476_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1ad7eda91_SymTab>>(nullptr), ._field_file=jule::Ptr<_1ad7eda91_SymTab>(nullptr), ._field_flags=(*(_4570_flags)), ._field_meta=jule::new_ptr<_1ad90e245_commonSemaMeta>(_1ad90e245_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1ad89387d_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1ad8e1bea_ImportInfo>(nullptr)})});;
	jule::Ptr<_1ad7eda91_SymTab> _636_firstTable = _476_tables[0LL];;
	_1ad9d9991_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1ad92eba0_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad8e446c_Package> _716_pkg = jule::new_ptr<_1ad8e446c_Package>(_1ad8e446c_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ad8e446c_Package__jule_tuple_s_1dd356476_Log _1ad9e01d3_AnalyzePackage(jule::Slice<jule::Ptr<_1ad6e325a_AST>> _9523_files, jule::Trait _9547_importer, jule::I64 _9567_flags) {
	__jule_tuple_x_1ad8e446c_Package__jule_tuple_s_1dd356476_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1ad9dec2c_analyzePackage(&(_9523_files), &(_9547_importer), &(_9567_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1ad7ea84b_FnIns> _1ada9d45b_findBuiltinFunc(jule::Str* _2021_ident) {
	{
		auto &_match_expr{ (*(_2021_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1bec439ca:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _2314_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa3e89_builtinCallerOut), ._field_reloaded=false});;
				return _2314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1bec43a41:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _2614_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa43b8_builtinCallerOutln), ._field_reloaded=false});;
				return _2614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1bec43aa7:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _2914_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa47e7_builtinCallerNew), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1bec43b2e:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _3214_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa4c26_builtinCallerPanic), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1bec43cc7:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _3514_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa5386_builtinCallerMake), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1bec43d3d:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _3814_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa56a5_builtinCallerAppend), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1bec43da4:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _4114_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa60bd_builtinCallerCopy), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1bec43e2b:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _4414_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa7762_builtinCallerLen), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1bec4405d:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _4714_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa8015_builtinCallerCap), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1bec440c4:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _5014_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa892d_builtinCallerDelete), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else {
			_case_begin_1bec434e1:;
			{
				return nullptr;;
			}
		}
		_match_end_1bec43854:;
	};
}



inline jule::Ptr<_1ad9b77a4_TypeAlias> _1ada9d736_primTypeAlias(jule::Ptr<_1ad9b8596_TypeKind>* _5723_k) {
	return jule::new_ptr<_1ad9b77a4_TypeAlias>(_1ad9b77a4_TypeAlias{._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=(*(_5723_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1ad933a83_Var> _1adaa20db_findBuiltinVar(jule::Str* _8520_ident) {
	{
		auto &_match_expr{ (*(_8520_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1bec4a905:;
			{
				static jule::Ptr<_1ad933a83_Var> _8814_v = jule::new_ptr<_1ad933a83_Var>(_1ad933a83_Var{._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=_1ada9da44_primNil}), ._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ad7cecb4_NewNil()})}), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr)});;
				return _8814_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1bec4a99e:;
			{
				static jule::Ptr<_1ad933a83_Var> _10314_v = jule::new_ptr<_1ad933a83_Var>(_1ad933a83_Var{._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ad7ce522_NewBool(true)})}), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr)});;
				return _10314_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1bec4aa26:;
			{
				static jule::Ptr<_1ad933a83_Var> _11614_v = jule::new_ptr<_1ad933a83_Var>(_1ad933a83_Var{._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1adaa242c_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1ad986d17_Value>(_1ad986d17_Value{._field_Expr=jule::Ptr<_1ad6e94e7_Expr>(nullptr), ._field_Data=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1ad7ce522_NewBool(false)})}), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1ad933a83_Var>>(nullptr)});;
				return _11614_v;;
			}
		}
		else {
			_case_begin_1bec4a174:;
			{
				return nullptr;;
			}
		}
		_match_end_1bec4502b:;
	};
}



inline jule::Ptr<_1ad9b77a4_TypeAlias> _1adaa242c_findBuiltinTypeAlias(jule::Str _13325_ident) {
	{
		auto &_match_expr{ _13325_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1bec507c8:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _13614_t = _1ada9d736_primTypeAlias(&(_1ada9e0e9_primAny));;
				return _13614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1bec5093d:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _13914_t = _1ada9d736_primTypeAlias(&(_1ada9e3e6_primStr));;
				return _13914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1bec509a4:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _14214_t = _1ada9d736_primTypeAlias(&(_1ada9e69e_primBool));;
				return _14214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1bec50a81:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _14514_t = _1ada9d736_primTypeAlias(&(_1ada9e957_primUintptr));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1bec50ae7:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _14814_t = _1ada9d736_primTypeAlias(&(_1ada9ec10_primUint));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1bec50b5d:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _15114_t = _1ada9d736_primTypeAlias(&(_1adaa00c8_primInt));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1bec50bc4:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _15414_t = _1ada9d736_primTypeAlias(&(_1adaa031a_primI8));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1bec50c3a:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _15714_t = _1ada9d736_primTypeAlias(&(_1adaa05b2_primI16));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1bec50d17:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _16014_t = _1ada9d736_primTypeAlias(&(_1adaa0b23_primI64));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1bec50d8e:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _16314_t = _1ada9d736_primTypeAlias(&(_1adaa1184_primU16));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1bec50e16:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _16614_t = _1ada9d736_primTypeAlias(&(_1adaa143c_primU32));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1bec50e8d:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _16914_t = _1ada9d736_primTypeAlias(&(_1adaa1926_primU64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1bec51015:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _17214_t = _1ada9d736_primTypeAlias(&(_1adaa1b68_primF32));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1bec5108c:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _17514_t = _1ada9d736_primTypeAlias(&(_1adaa1d77_primF64));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1bec51114:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _17814_t = _1ada9d736_primTypeAlias(&(_1adaa0dcb_primU8));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1bec5118b:;
			{
				static jule::Ptr<_1ad9b77a4_TypeAlias> _18114_t = _1ada9d736_primTypeAlias(&(_1adaa086a_primI32));;
				return _18114_t;;
			}
		}
		else {
			_case_begin_1bec4b065:;
			{
				return nullptr;;
			}
		}
		_match_end_1bec4b142:;
	};
}



inline jule::Any _1adaa26b3_findBuiltinDef(jule::Str* _18820_ident) {
	jule::Ptr<_1ad933a83_Var> _1896_v = _1adaa20db_findBuiltinVar(_18820_ident);;
	if ((_1896_v != nullptr)) {
		return jule::Any(_1896_v, &__jule_any_type7);;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _1936_f = _1ada9d45b_findBuiltinFunc(_18820_ident);;
	if ((_1936_f != nullptr)) {
		return jule::Any(_1936_f, &__jule_any_type63);;
	};
	jule::Ptr<_1ad9b77a4_TypeAlias> _1976_ta = _1adaa242c_findBuiltinTypeAlias((*(_18820_ident)));;
	if ((_1976_ta != nullptr)) {
		return jule::Any(_1976_ta, &__jule_any_type8);;
	};
	return nullptr;;
}



inline jule::Any _1adaa297c_findBuiltinDefStdDebug(jule::Str* _20428_ident) {
	{
		auto &_match_expr{ (*(_20428_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1bec5a8d2:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _20714_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaabc94_builtinCallerStdDebugOut), ._field_reloaded=false});;
				return jule::Any(_20714_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1bec5accd:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _21014_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaac1c3_builtinCallerStdDebugOutln), ._field_reloaded=false});;
				return jule::Any(_21014_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1bec592a4:;
			{
				return nullptr;;
			}
		}
		_match_end_1bec59716:;
	};
}



inline jule::Any _1adaa2c46_findBuiltinDefStdMem(jule::Str* _21726_ident) {
	{
		auto &_match_expr{ (*(_21726_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1bec5a97b:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _22014_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaaaac8_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_22014_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1bec5c64d:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _22314_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaab007_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_22314_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1bec5aa14:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _22614_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaab436_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_22614_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1bec5ad66:;
			{
				return nullptr;;
			}
		}
		_match_end_1bec5c395:;
	};
}



inline jule::Any _1adaa3120_findBuiltinDefStdComptime(jule::Str* _23331_ident) {
	{
		auto &_match_expr{ (*(_23331_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1bec5cad2:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _23614_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa8d5c_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_23614_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1bec5eb17:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _23914_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa928b_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_23914_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1bec5eb8e:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _24214_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa990c_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_24214_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1bec5cb59:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _24514_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaa9d3b_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_24514_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1bec5cbd1:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _24814_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaaa26a_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type63);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1bec5ecb0:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _25114_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1ad7e778d_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaaa699_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_25114_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1bec5aa7a:;
			{
				return nullptr;;
			}
		}
		_match_end_1bec5e870:;
	};
}



inline jule::Any _1adaa3362_findBuiltinDefStdJuleIntegrated(jule::Str* _25837_ident) {
	{
		auto &_match_expr{ (*(_25837_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1bec60057:;
			{
				static jule::Ptr<_1ad7ea84b_FnIns> _26114_f = jule::new_ptr<_1ad7ea84b_FnIns>(_1ad7ea84b_FnIns{._field_Owner=jule::Ptr<_1ad718857_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1ad7e778d_Fn>(_1ad7e778d_Fn{._field_sema=jule::Ptr<_1ad90ed6c_sema>(nullptr), ._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad7023bd_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad7023bd_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1ad7e5538_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e5cb9_Param>>(nullptr), ._field_Owner=jule::Ptr<_1ad7159ec_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1ad7ea84b_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b6de1_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ad7e96e6_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1ad9b8596_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1ad8b136d_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ad8ced70_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1ad985b90_Data>,jule::Ptr<_1ad9878b7_eval>*,jule::Ptr<_1ad6ed221_FnCallExpr>*,jule::Ptr<_1ad985b90_Data>*>(_1adaab865_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_26114_f, &__jule_any_type63);;
			}
		}
		else {
			_case_begin_1bec5ed48:;
			{
				return nullptr;;
			}
		}
		_match_end_1bec63e3a:;
	};
}



inline jule::Any _1adaa36d6_findPackageBuiltinDef(jule::Str* _27327_linkPath, jule::Str* _27343_ident) {
	{
		auto &_match_expr{ (*(_27327_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std/comptime", 12)) {
			_case_begin_1bec65dd7:;
			{
				return _1adaa3120_findBuiltinDefStdComptime(_27343_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/debug", 9)) {
			_case_begin_1bec65e4d:;
			{
				return _1adaa297c_findBuiltinDefStdDebug(_27343_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/mem", 7)) {
			_case_begin_1bec65aeb:;
			{
				return _1adaa2c46_findBuiltinDefStdMem(_27343_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/jule/integrated", 19)) {
			_case_begin_1bec65b62:;
			{
				return _1adaa3362_findBuiltinDefStdJuleIntegrated(_27343_ident);;
			}
		}
		else {
			_case_begin_1bec6559b:;
			{
				return nullptr;;
			}
		}
		_match_end_1bec64402:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1adaa3a5a_builtinCallerError(jule::Ptr<_1ad9878b7_eval>* _28828_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _28843_fc) {
	if (((*((*(_28843_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_28828_e)).ptr(), (*((*(_28843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_28843_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_28828_e)).ptr(), (*((*((*(_28843_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _2966_expr = _1ad9a672c_evalExpr((*(_28828_e)), (*((*(_28843_fc))))._field_Args[0LL]);;
	if ((_2966_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad6ceb70_Token> _3016_token = (*((*((*(_28843_fc))))._field_Args[0LL]))._field_Token;;
	if (_1ad9860ad_IsNil(_2966_expr.ptr())) {
		_1ad987e4a_pushErr((*(_28828_e)).ptr(), _3016_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1ad91e9e7_checkValidityForInitExpr((*((*(_28828_e))))._field_s, true, false, &(_1ada9e0e9_primAny), &(_2966_expr), &(_3016_token))))) {
		return nullptr;;
	};
	_1ad9b2260_applyRuntimeToStr(&((*((*(_28828_e))))._field_s), &((*(_2966_expr))._field_Kind), &(_1ada9e0e9_primAny), &(_3016_token), _1ad98ae4d_getOwnerRefers((*(_28828_e)).ptr()));
	jule::Ptr<_1ad985b90_Data> _3146_d = _1ad9b2e86_buildVoidData();;
	(*(_3146_d))._field_Model=jule::Any(jule::new_ptr<_1ad7e3602_BuiltinErrorCallExprModel>(_1ad7e3602_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1ad7ea84b_FnIns>(nullptr), ._field_Err=_2966_expr}), &__jule_any_type20);
	return _3146_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa3e89_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _31926_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _31941_fc, jule::Ptr<_1ad985b90_Data>* ) {
	if (((*((*(_31941_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_31926_e)).ptr(), (*((*(_31941_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_31941_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_31926_e)).ptr(), (*((*((*(_31941_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("out", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad6e94e7_Expr> _3286_arg = (*((*(_31941_fc))))._field_Args[0LL];;
	jule::Ptr<_1ad985b90_Data> _3296_expr = _1ad9a672c_evalExpr((*(_31926_e)), _3286_arg);;
	if ((_3296_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ad9d576c_isBuiltinStrConvertable(&((*(_3296_expr))._field_Kind))))) {
		_1ad987e4a_pushErr((*(_31926_e)).ptr(), (*(_3286_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1ad932224_pushRuntimeToStr(&((*((*(_31926_e))))._field_s), &((*(_3296_expr))._field_Kind), &((*_3286_arg.alloc)._field_Token), _1ad98ae4d_getOwnerRefers((*(_31926_e)).ptr()));
	jule::Ptr<_1ad985b90_Data> _3416_d = _1ad9b2e86_buildVoidData();;
	(*(_3416_d))._field_Model=jule::Any(jule::new_ptr<_1ad7e0d6e_BuiltinOutCallExprModel>(_1ad7e0d6e_BuiltinOutCallExprModel{._field_Expr=_3296_expr, ._field_Debug=false}), &__jule_any_type24);
	return _3416_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa43b8_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _34628_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _34643_fc, jule::Ptr<_1ad985b90_Data>* _34670_d) {
	(*(_34670_d))=_1adaa3e89_builtinCallerOut(nullptr, _34628_e, _34643_fc, _34670_d);
	if (((*(_34670_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34670_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7e1248_BuiltinOutlnCallExprModel>(_1ad7e1248_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34670_d))))._field_Model.cast_ptr<_1ad7e0d6e_BuiltinOutCallExprModel>(&__jule_any_type24)))._field_Expr, ._field_Debug=false}), &__jule_any_type25);
	return (*(_34670_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa47e7_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _35826_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _35841_fc, jule::Ptr<_1ad985b90_Data>* _35868_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1ad987e4a_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _3676_t = _1ad9a5c59_eval1((*(_35826_e)), (*((*(_35841_fc))))._field_Args[0LL]);;
	if ((_3676_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3676_t))._field_Decl))) {
		_1ad987e4a_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1ad9d521c_isValidForSptrType(&((*(_3676_t))._field_Kind))))) {
		jule::Ptr<_1ad718857_StructIns> _3787_s = _1ad9bc2c0_Struct((*(_3676_t))._field_Kind.ptr());;
		if ((((_3787_s != nullptr) && ((*_3787_s.alloc)._field_Decl != nullptr)) && (*(*(_3787_s))._field_Decl.alloc)._field_Binded)) {
			_1ad987e4a_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35868_d))))._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad9c51da_Sptr>(_1ad9c51da_Sptr{._field_Elem=(*(_3676_t))._field_Kind}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data23)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ad9b8596_TypeKind> _3927_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3676_t))._field_Kind;
		jule::Ptr<_1ad985b90_Data> _3957_init = _1ad9a672c_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_3927_old;
		if ((_3957_init != nullptr)) {
			jule::Ptr<_1ad6ceb70_Token> _4008_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1ad91e9e7_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3676_t))._field_Kind), &(_3957_init), &(_4008_token));
			_1ad91a262_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3676_t))._field_Kind), &(_3957_init), _4008_token, _1ad98ae4d_getOwnerRefers((*(_35826_e)).ptr()));
			(*((*(_35868_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7e1622_BuiltinNewCallExprModel>(_1ad7e1622_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, ._field_Init=(*_3957_init.alloc)._field_Model}), &__jule_any_type115);
		};
	} else {
		(*((*(_35868_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7e1622_BuiltinNewCallExprModel>(_1ad7e1622_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, ._field_Init=jule::Any(nullptr)}), &__jule_any_type115);
	};
	return (*(_35868_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa4c26_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _42028_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _42043_fc, jule::Ptr<_1ad985b90_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _4296_expr = _1ad9a672c_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4296_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1ad9bac4c_Prim((*(_4296_expr))._field_Kind.ptr()) == nullptr) || (!(_1ad9c4b79_IsStr(_1ad9bac4c_Prim((*(_4296_expr))._field_Kind).ptr()))))) {
		_1ad987e4a_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad985b90_Data> _4386_d = _1ad9b2e86_buildVoidData();;
	(*(_4386_d))._field_Model=jule::Any(jule::new_ptr<_1ad7e19eb_BuiltinPanicCallExprModel>(_1ad7e19eb_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4296_expr))._field_Model}), &__jule_any_type26);
	return _4386_d;;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa5386_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _44627_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _44642_fc, jule::Ptr<_1ad985b90_Data>* _44669_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1ad987e4a_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1ad987e4a_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1ad987e4a_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad985b90_Data> _4596_t = _1ad9a5918_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4596_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4596_t))._field_Decl))) {
		_1ad987e4a_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1ad9bbca3_Slc((*(_4596_t))._field_Kind.ptr()) == nullptr)) {
		_1ad987e4a_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_4596_t))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_44669_d))))._field_Kind=(*(_4596_t))._field_Kind;
	jule::Ptr<_1ad985b90_Data> _4746_lenExpr = _1ad9a672c_evalExpr(_1ad919805_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4746_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1ad991bbd_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4746_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1ad7e1ea2_BuiltinMakeCallExprModel> _4816_model = jule::new_ptr<_1ad7e1ea2_BuiltinMakeCallExprModel>(_1ad7e1ea2_BuiltinMakeCallExprModel{._field_Kind=(*(_4596_t))._field_Kind, ._field_Len=(*(_4746_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_44669_d))))._field_Model=jule::Any(_4816_model, &__jule_any_type116);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1ad985b90_Data> _4877_capExpr = _1ad9a672c_evalExpr(_1ad919805_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_4877_capExpr == nullptr)) {
			return (*(_44669_d));;
		};
		_1ad991bbd_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4877_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4816_model))._field_Cap=(*(_4877_capExpr))._field_Model;
	};
	return (*(_44669_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa56a5_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _49729_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _49744_fc, jule::Ptr<_1ad985b90_Data>* _49771_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1ad987e4a_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1ad987e4a_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad6e94e7_Expr> _5076_firstArg = (*((*(_49744_fc))))._field_Args[0LL];;
	jule::Ptr<_1ad985b90_Data> _5086_t = _1ad9a672c_evalExpr((*(_49729_e)), _5076_firstArg);;
	if ((_5086_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad9c5bad_Slc> _5136_s = _1ad9bbca3_Slc((*(_5086_t))._field_Kind.ptr());;
	if ((_5136_s == nullptr)) {
		_1ad987e4a_pushErr((*(_49729_e)).ptr(), (*(_5076_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1ad91e9e7_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5086_t))._field_Kind), &(_5086_t), &((*_5076_firstArg.alloc)._field_Token))) {
		_1ad91a262_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5086_t))._field_Kind), &(_5086_t), (*_5076_firstArg.alloc)._field_Token, _1ad98ae4d_getOwnerRefers((*(_49729_e)).ptr()));
	};
	jule::Ptr<_1ad9b8596_TypeKind> _5286_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5086_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5286_prefix;
	});;
	(*(_49771_d))=jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=(*(_5086_t))._field_Kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});
	jule::Ptr<_1ad6e94e7_Expr> _5366_secondArg = (*((*(_49744_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5366_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1bc823a63:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1ad987e4a_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ad985b90_Data> _5437_e1 = _1ad9a672c_evalExpr((*(_49729_e)), (*((*(_5366_secondArg))._field_Kind.unsafe_cast_ptr<_1ad6eb97d_VariadicExpr>()))._field_Expr);;
				if ((_5437_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1ad9bac4c_Prim((*(_5136_s))._field_Elem.ptr()) != nullptr) && _1ad9c30d9_IsU8(_1ad9bac4c_Prim((*(_5136_s))._field_Elem).ptr()))) {
					if (((_1ad9bac4c_Prim((*(_5437_e1))._field_Kind) != nullptr) && _1ad9c4b79_IsStr(_1ad9bac4c_Prim((*(_5437_e1))._field_Kind).ptr()))) {
						_1ad9b5a8d_makeVariadic(&(_5437_e1), _1adaa0dcb_primU8);
						(*((*(_49771_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7e237b_BuiltinAppendCallExprModel>(_1ad7e237b_BuiltinAppendCallExprModel{._field_Dest=(*(_5086_t))._field_Model, ._field_Elements=(*(_5437_e1))._field_Model}), &__jule_any_type23);
						return (*(_49771_d));;
					};
				};
				if ((!(_1ad9ba9b6_Variadicable((*(_5437_e1))._field_Kind)))) {
					_1ad987e4a_pushErr((*(_49729_e)).ptr(), (*(_5366_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_5437_e1))._field_Kind), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1ad9b5a8d_makeVariadic(&(_5437_e1), (*(_5136_s))._field_Elem);
				(*(*(_5437_e1))._field_Kind.alloc)._field_Variadic=false;
				if (_1ad91e9e7_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5136_s))._field_Elem), &(_5437_e1), &((*_5366_secondArg.alloc)._field_Token))) {
					(*(*(_5437_e1))._field_Kind.alloc)._field_Variadic=true;
					_1ad91a262_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5136_s))._field_Elem), &(_5437_e1), (*_5366_secondArg.alloc)._field_Token, _1ad98ae4d_getOwnerRefers((*(_49729_e)).ptr()));
				} else {
					(*(*(_5437_e1))._field_Kind.alloc)._field_Variadic=true;
				};
				(*((*(_49771_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7e237b_BuiltinAppendCallExprModel>(_1ad7e237b_BuiltinAppendCallExprModel{._field_Dest=(*(_5086_t))._field_Model, ._field_Elements=(*(_5437_e1))._field_Model}), &__jule_any_type23);
				return (*(_49771_d));;
			}
		}
		_match_end_1bc8239db:;
	};
	jule::Ptr<_1ad985b90_Data> _5866_e1 = _1ad9a672c_evalExpr((*(_49729_e)), _5366_secondArg);;
	if ((_5866_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad7dc761_SliceExprModel> _5916_slice = jule::new_ptr<_1ad7dc761_SliceExprModel>(_1ad7dc761_SliceExprModel{._field_ElemKind=(*(_5136_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bc830b91:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e94e7_Expr> _59514_arg = *it;
			{
				_5866_e1=_1ad9a672c_evalExpr((*(_49729_e)), _59514_arg);
				if ((_5866_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5866_e1))._field_Kind.alloc)._field_Variadic) {
					_1ad987e4a_pushErr((*(_49729_e)).ptr(), (*(_59514_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1ad91e9e7_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5136_s))._field_Elem), &(_5866_e1), &((*_59514_arg.alloc)._field_Token))) {
					_1ad91a262_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5136_s))._field_Elem), &(_5866_e1), (*_59514_arg.alloc)._field_Token, _1ad98ae4d_getOwnerRefers((*(_49729_e)).ptr()));
				};
				(*(_5916_slice))._field_Elems=jule::append((*_5916_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5866_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1bc830b91:;
			++it;
			goto _iter_begin_1bc830b91;
		}
		_iter_end_1bc830b91:;
	};
	(*((*(_49771_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7e237b_BuiltinAppendCallExprModel>(_1ad7e237b_BuiltinAppendCallExprModel{._field_Dest=(*(_5086_t))._field_Model, ._field_Elements=jule::Any(_5916_slice, &__jule_any_type79)}), &__jule_any_type23);
	return (*(_49771_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa5b8e_callerCopySlice(jule::Ptr<_1ad985b90_Data>* _61725_dest, jule::Ptr<_1ad9878b7_eval>* _61743_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _61758_fc, jule::Ptr<_1ad985b90_Data>* _61785_d) {
	if ((!((*((*(_61725_dest))))._field_Mutable))) {
		_1ad987e4a_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad985b90_Data> _6226_src = _1ad9a672c_evalExpr((*(_61743_e)), (*((*(_61758_fc))))._field_Args[1LL]);;
	if ((_6226_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad9c5bad_Slc> _6266_slc = _1ad9bbca3_Slc((*(_6226_src))._field_Kind.ptr());;
	if ((_6266_slc != nullptr)) {
		if (((!((*(_6226_src))._field_Mutable)) && _1ad9b9e7c_Mutable((*_6266_slc.alloc)._field_Elem.ptr()))) {
			_1ad987e4a_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1ad9b8cd3_Equal((*((*(_61725_dest))))._field_Kind, (*(_6226_src))._field_Kind)))) {
			_1ad987e4a_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_61725_dest))))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_6226_src))._field_Kind), &__jule_any_type5); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1ad9c16ae_Prim> _6363_destPrim = _1ad9bac4c_Prim((*(_1ad9bbca3_Slc((*((*(_61725_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1ad9c16ae_Prim> _6373_prim = _1ad9bac4c_Prim((*(_6226_src))._field_Kind);;
		if (((((_6363_destPrim == nullptr) || (_6373_prim == nullptr)) || (!(_1ad9c4b79_IsStr(_6373_prim.ptr())))) || (!(_1ad9c30d9_IsU8(_6363_destPrim.ptr()))))) {
			_1ad987e4a_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*((*(_61725_dest))))._field_Kind), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_6226_src))._field_Kind), &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*(_61785_d))))._field_Kind=_1ad984012_lenKind();
	(*((*(_61785_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7e3228_BuiltinCopyCallExprModel>(_1ad7e3228_BuiltinCopyCallExprModel{._field_Dest=(*(_61725_dest)), ._field_Src=_6226_src}), &__jule_any_type27);
	return (*(_61785_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa60bd_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _65127_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _65142_fc, jule::Ptr<_1ad985b90_Data>* _65169_d) {
	if (((*((*(_65142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_65142_fc))))._field_Args.len() == 1LL)) {
			_1ad987e4a_pushErr((*(_65127_e)).ptr(), (*((*(_65142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1ad987e4a_pushErr((*(_65127_e)).ptr(), (*((*(_65142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_65142_fc))))._field_Args.len() > 2LL)) {
		_1ad987e4a_pushErr((*(_65127_e)).ptr(), (*((*((*(_65142_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _6646_dest = _1ad9a672c_evalExpr((*(_65127_e)), (*((*(_65142_fc))))._field_Args[0LL]);;
	{
		
		if ((_6646_dest == nullptr)) {
			_case_begin_1bc846679:;
			{
				return nullptr;;
			}
		}
		else if ((_1ad9bbca3_Slc((*(_6646_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc84747c:;
			{
				return _1adaa5b8e_callerCopySlice(&(_6646_dest), _65127_e, _65142_fc, _65169_d);;
			}
		}
		else {
			_case_begin_1bc8462b1:;
			{
				_1ad987e4a_pushErr((*(_65127_e)).ptr(), (*((*((*(_65142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc844611:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1adaa6442_callerLenSlice(jule::Ptr<_1ad985b90_Data>* _67624_expr, jule::Ptr<_1ad985b90_Data>* _67642_d) {
	(*((*(_67642_d))))._field_Kind=_1ad984012_lenKind();
	(*((*(_67642_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7e2678_BuiltinLenCallExprModel>(_1ad7e2678_BuiltinLenCallExprModel{._field_Expr=(*(_67624_expr))}), &__jule_any_type117);
	return (*(_67642_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa67b6_callerLenMap(jule::Ptr<_1ad985b90_Data>* _68422_expr, jule::Ptr<_1ad985b90_Data>* _68440_d) {
	(*((*(_68440_d))))._field_Kind=_1ad984012_lenKind();
	(*((*(_68440_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7e2678_BuiltinLenCallExprModel>(_1ad7e2678_BuiltinLenCallExprModel{._field_Expr=(*(_68422_expr))}), &__jule_any_type117);
	return (*(_68440_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa6b3a_callerLenArr(jule::Ptr<_1ad985b90_Data>* _69222_expr, jule::Ptr<_1ad985b90_Data>* _69240_d) {
	(*((*(_69240_d))))._field_Kind=_1ad984012_lenKind();
	(*((*(_69240_d))))._field_Constant=static__1ad7ce07c_NewI64(static_cast<jule::I64>((*(_1ad9bba1c_Arr((*((*(_69222_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_69240_d))))._field_Model=jule::Any((*((*(_69240_d))))._field_Constant, &__jule_any_type15);
	return (*(_69240_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa6eae_callerLenStr(jule::Ptr<_1ad985b90_Data>* _69922_expr, jule::Ptr<_1ad985b90_Data>* _69940_d) {
	(*((*(_69940_d))))._field_Kind=_1ad984012_lenKind();
	if (_1ad9865ca_IsConst((*(_69922_expr)).ptr())) {
		(*((*(_69940_d))))._field_Constant=static__1ad7ce07c_NewI64(static_cast<jule::I64>(_1ad7d0bc7_ReadStr((*((*(_69922_expr))))._field_Constant.ptr()).len()));
		(*((*(_69940_d))))._field_Model=jule::Any((*((*(_69940_d))))._field_Constant, &__jule_any_type15);
	} else {
		(*((*(_69940_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7e2678_BuiltinLenCallExprModel>(_1ad7e2678_BuiltinLenCallExprModel{._field_Expr=(*(_69922_expr))}), &__jule_any_type117);
	};
	return (*(_69940_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa7333_callerLenComptime(jule::Ptr<_1ad985b90_Data>* _71227_d, jule::I64 _71237_n) {
	(*((*(_71227_d))))._field_Kind=_1ad984012_lenKind();
	(*((*(_71227_d))))._field_Constant=static__1ad7ce07c_NewI64(static_cast<jule::I64>(_71237_n));
	(*((*(_71227_d))))._field_Model=jule::Any((*((*(_71227_d))))._field_Constant, &__jule_any_type15);
	return (*(_71227_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa7762_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _71926_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _71941_fc, jule::Ptr<_1ad985b90_Data>* _71968_d) {
	if (((*((*(_71941_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_71926_e)).ptr(), (*((*(_71941_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_71941_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_71926_e)).ptr(), (*((*((*(_71941_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _7276_dest = _1ad9a63db_evalExpr1((*(_71926_e)), (*((*(_71941_fc))))._field_Args[0LL]);;
	{
		
		if ((_7276_dest == nullptr)) {
			_case_begin_1bc856865:;
			{
				return nullptr;;
			}
		}
		else if ((_1ad9bbca3_Slc((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc857668:;
			{
				return _1adaa6442_callerLenSlice(&(_7276_dest), _71968_d);;
			}
		}
		else if ((_1ad9bba1c_Arr((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc8576ce:;
			{
				return _1adaa6b3a_callerLenArr(&(_7276_dest), _71968_d);;
			}
		}
		else if ((_1ad9bc7dc_Map((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc856513:;
			{
				return _1adaa67b6_callerLenMap(&(_7276_dest), _71968_d);;
			}
		}
		else if (((_1ad9bac4c_Prim((*(_7276_dest))._field_Kind.ptr()) != nullptr) && _1ad9c4b79_IsStr(_1ad9bac4c_Prim((*(_7276_dest))._field_Kind).ptr()))) {
			_case_begin_1bc856579:;
			{
				return _1adaa6eae_callerLenStr(&(_7276_dest), _71968_d);;
			}
		}
		else if ((_1ad9bd090_comptimeStructFields((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc8565e0:;
			{
				return _1adaa7333_callerLenComptime(_71968_d, (*(_1ad9bd090_comptimeStructFields((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1ad9bd5ac_comptimeEnumFields((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc856656:;
			{
				return _1adaa7333_callerLenComptime(_71968_d, (*(_1ad9bd5ac_comptimeEnumFields((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1ad9be37c_comptimeTypeInfos((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc8577bc:;
			{
				return _1adaa7333_callerLenComptime(_71968_d, (*(_1ad9be37c_comptimeTypeInfos((*(_7276_dest))._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1ad9bdac9_comptimeParams((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc857833:;
			{
				return _1adaa7333_callerLenComptime(_71968_d, (*(_1ad9bdac9_comptimeParams((*(_7276_dest))._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1ad9be899_comptimeStatics((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc857899:;
			{
				return _1adaa7333_callerLenComptime(_71968_d, (*(_1ad9be899_comptimeStatics((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1ad9c0900_comptimeFiles((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc857910:;
			{
				return _1adaa7333_callerLenComptime(_71968_d, (*(_1ad9c0900_comptimeFiles((*(_7276_dest))._field_Kind)))._field_files.len());;
			}
		}
		else if ((_1ad9c03d3_comptimeDecls((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bc857976:;
			{
				return _1adaa7333_callerLenComptime(_71968_d, (*(_1ad9c03d3_comptimeDecls((*(_7276_dest))._field_Kind)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1bc85649c:;
			{
				_1ad987e4a_pushErr((*(_71926_e)).ptr(), (*((*((*(_71941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bc8547ec:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1adaa7ad6_callerCapSlice(jule::Ptr<_1ad985b90_Data>* _75924_expr, jule::Ptr<_1ad985b90_Data>* _75942_d) {
	(*((*(_75942_d))))._field_Kind=_1ad984012_lenKind();
	(*((*(_75942_d))))._field_Model=jule::Any(jule::new_ptr<_1ad7e2975_BuiltinCapCallExprModel>(_1ad7e2975_BuiltinCapCallExprModel{._field_Expr=(*(_75924_expr))}), &__jule_any_type118);
	return (*(_75942_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa8015_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _76726_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _76741_fc, jule::Ptr<_1ad985b90_Data>* _76768_d) {
	if (((*((*(_76741_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_76726_e)).ptr(), (*((*(_76741_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_76741_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _7756_dest = _1ad9a672c_evalExpr((*(_76726_e)), (*((*(_76741_fc))))._field_Args[0LL]);;
	{
		
		if ((_7756_dest == nullptr)) {
			_case_begin_1becec446:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7756_dest))._field_Decl) {
			_case_begin_1beced249:;
			{
				_1ad987e4a_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ad9bbca3_Slc((*(_7756_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1beced2b0:;
			{
				return _1adaa7ad6_callerCapSlice(&(_7756_dest), _76768_d);;
			}
		}
		else {
			_case_begin_1becec07d:;
			{
				_1ad987e4a_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1becea3cd:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1adaa84ee_callerDeleteMap(jule::Ptr<_1ad9878b7_eval>* _79025_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _79040_fc, jule::Ptr<_1ad985b90_Data>* _79067_expr, jule::Ptr<_1ad985b90_Data>* _79085_d) {
	if ((!((*((*(_79067_expr))))._field_Mutable))) {
		_1ad987e4a_pushErr((*(_79025_e)).ptr(), (*((*((*(_79040_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_79085_d))=_1ad9b2e86_buildVoidData();
	jule::Ptr<_1ad7e2d4e_BuiltinDeleteCallExprModel> _7956_model = jule::new_ptr<_1ad7e2d4e_BuiltinDeleteCallExprModel>(_1ad7e2d4e_BuiltinDeleteCallExprModel{._field_Dest=(*(_79067_expr)), ._field_Key=jule::Ptr<_1ad985b90_Data>(nullptr)});;
	if (((*((*(_79040_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1ad985b90_Data> _7997_key = _1ad9a672c_evalExpr((*(_79025_e)), (*((*(_79040_fc))))._field_Args[1LL]);;
		{
			
			if ((_7997_key == nullptr)) {
				_case_begin_1bed04371:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7997_key))._field_Decl) {
				_case_begin_1bed02ec9:;
				{
					_1ad987e4a_pushErr((*(_79025_e)).ptr(), (*((*((*(_79040_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1bed02e63:;
				{
					;
					jule::Ptr<_1ad9b8596_TypeKind> _8088_keyType = (*(_1ad9bc7dc_Map((*((*(_79067_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1ad91a262_checkAssignType((*((*(_79025_e))))._field_s, false, &(_8088_keyType), &(_7997_key), (*((*((*(_79040_fc))))._field_Args[1LL]))._field_Token, _1ad98ae4d_getOwnerRefers((*(_79025_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1bed02dec:;
		};
		(*(_7956_model))._field_Key=_7997_key;
	};
	(*((*(_79085_d))))._field_Model=jule::Any(_7956_model, &__jule_any_type28);
	return (*(_79085_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa892d_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _81929_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _81944_fc, jule::Ptr<_1ad985b90_Data>* _81971_d) {
	if (((*((*(_81944_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_81929_e)).ptr(), (*((*(_81944_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_81944_fc))))._field_Args.len() > 2LL)) {
		_1ad987e4a_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _8276_dest = _1ad9a672c_evalExpr((*(_81929_e)), (*((*(_81944_fc))))._field_Args[0LL]);;
	{
		
		if ((_8276_dest == nullptr)) {
			_case_begin_1bed0ad28:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8276_dest))._field_Decl) {
			_case_begin_1bed0bb2b:;
			{
				_1ad987e4a_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1ad9bc7dc_Map((*(_8276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1bed0bb92:;
			{
				return _1adaa84ee_callerDeleteMap(_81929_e, _81944_fc, &(_8276_dest), _81971_d);;
			}
		}
		else {
			_case_begin_1bed0a960:;
			{
				_1ad987e4a_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bed08cb0:;
	};
}



inline jule::Ptr<_1ad985b90_Data> _1adaa8d5c_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _84240_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _84255_fc, jule::Ptr<_1ad985b90_Data>* ) {
	if (((*((*(_84255_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_84240_e)).ptr(), (*((*(_84255_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_84255_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_84240_e)).ptr(), (*((*((*(_84255_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _8516_d = _1ad9a5918_evalExprKind((*(_84240_e)), (*((*((*(_84255_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8516_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _8552_f = _1ad9bc039_Fn((*(_8516_d))._field_Kind.ptr());;
	if ((_8552_f != nullptr)) {
		if (_1ad7ebd14_IsBuiltin(_8552_f)) {
			_1ad987e4a_pushErr((*(_84240_e)).ptr(), (*((*((*(_84255_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8552_f.alloc)._field_Generics.len() != (*((*_8552_f.alloc)._field_Decl))._field_Generics.len())) {
			_1ad987e4a_pushErr((*(_84240_e)).ptr(), (*((*((*(_84255_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1ad718857_StructIns> _8662_s = _1ad9bc2c0_Struct((*(_8516_d))._field_Kind);;
	if (((_8662_s != nullptr) && ((*_8662_s.alloc)._field_Generics.len() != (*((*_8662_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1ad987e4a_pushErr((*(_84240_e)).ptr(), (*((*((*(_84255_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1ad9bcd09_comptime((*(_8516_d))._field_Kind)) {
		_1ad987e4a_pushErr((*(_84240_e)).ptr(), (*((*((*(_84255_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_8516_d))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ad8a7ae5_buildComptimeTypeInfoData(&((*((*(_84240_e))))._field_s), &((*(_8516_d))._field_Kind));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa928b_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _87841_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _87856_fc, jule::Ptr<_1ad985b90_Data>* ) {
	if (((*((*(_87856_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_87841_e)).ptr(), (*((*(_87856_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_87856_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_87841_e)).ptr(), (*((*((*(_87856_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _8866_d = _1ad9a672c_evalExpr((*(_87841_e)), (*((*(_87856_fc))))._field_Args[0LL]);;
	if ((_8866_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ad984364_isGoodValueToInfer(&(_8866_d))))) {
		_1ad987e4a_pushErr((*(_87841_e)).ptr(), (*((*((*(_87856_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_8866_d))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ad8a7e36_buildComptimeValue(&(_8866_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa990c_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _89838_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _89853_fc, jule::Ptr<_1ad985b90_Data>* ) {
	if (((*((*(_89853_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_89838_e)).ptr(), (*((*((*(_89853_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad778ec2_Const> _9026_constant = static__1ad7ce07c_NewI64(static_cast<jule::I64>((*((*((*(_89853_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1adaa00c8_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9026_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9026_constant});;
}



inline jule::Ptr<_1ad985b90_Data> _1adaa9d3b_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _91038_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _91053_fc, jule::Ptr<_1ad985b90_Data>* ) {
	if (((*((*(_91053_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_91038_e)).ptr(), (*((*((*(_91053_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad89e15d_comptimeFile>(_1ad89e15d_comptimeFile{._field_file=(*((*((*(_91038_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1adaaa26a_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _92339_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _92354_fc, jule::Ptr<_1ad985b90_Data>* ) {
	if (((*((*(_92354_fc))))._field_Args.len() > 0LL)) {
		_1ad987e4a_pushErr((*(_92339_e)).ptr(), (*((*((*(_92354_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad89c6de_comptimeFiles>(_1ad89c6de_comptimeFiles{._field_files=(*((*((*(_92339_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
}



inline jule::Ptr<_1ad985b90_Data> _1adaaa699_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _93643_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _93658_fc, jule::Ptr<_1ad985b90_Data>* ) {
	if (((*((*(_93658_fc))))._field_Args.len() > 2LL)) {
		_1ad987e4a_pushErr((*(_93643_e)).ptr(), (*((*((*(_93658_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_93658_fc))))._field_Args.len() == 0LL)) {
		_1ad987e4a_pushErr((*(_93643_e)).ptr(), (*((*(_93658_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_93658_fc))))._field_Args.len() == 1LL)) {
		_1ad987e4a_pushErr((*(_93643_e)).ptr(), (*((*(_93658_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_93658_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bed2cc6d:;
			{
				goto _match_end_1bed2b4a8;
			}
		}
		else {
			_case_begin_1bed2b530:;
			{
				_1ad987e4a_pushErr((*(_93643_e)).ptr(), (*((*((*(_93658_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ad9882ad_pushSuggestion((*(_93643_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bed2b4a8:;
	};
	jule::Ptr<_1ad6ceb70_Token> _9576_ident = (*((*((*((*(_93658_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1ad6ead12_IdentExpr>(&__jule_any_type41)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_93643_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1)) {
			_case_begin_1bed2dab5:;
			{
				goto _match_end_1bed2dce6;
			}
		}
		else {
			_case_begin_1bed2dd5c:;
			{
				_1ad987e4a_pushErr((*(_93643_e)).ptr(), (*((*(_93658_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bed2dce6:;
	};
	jule::Ptr<_1ad8b860b_scopeChecker> _9666_sc = (*((*(_93643_e))))._field_lookup.cast_ptr<_1ad8b860b_scopeChecker>((jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data1);;
	jule::Ptr<_1ad9b77a4_TypeAlias> _9676_alias = jule::new_ptr<_1ad9b77a4_TypeAlias>(_1ad9b77a4_TypeAlias{._field_Scope=(*(_9666_sc))._field_tree, ._field_Public=_1ad90c078_IsPub((*(_9576_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9576_ident, ._field_Ident=(*_9576_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1ad9c0ca7_TypeSymbol>(_1ad9c0ca7_TypeSymbol{._field_Decl=jule::Ptr<_1ad6e51b3_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1ad9b8596_TypeKind>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>(nullptr)});;
	jule::Ptr<_1ad985b90_Data> _9776_t = _1ad9a5c59_eval1((*(_93643_e)), (*((*(_93658_fc))))._field_Args[1LL]);;
	if ((_9776_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9776_t))._field_Decl) {
		(*((*(_9676_alias))._field_Kind))._field_Kind=(*(_9776_t))._field_Kind;
	} else {
		jule::Ptr<_1ad89387d_comptimeTypeInfo> _9847_cti = _1ad9be613_comptimeTypeInfo((*(_9776_t))._field_Kind.ptr());;
		if ((_9847_cti == nullptr)) {
			_1ad987e4a_pushErr((*(_93643_e)).ptr(), (*((*((*(_93658_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1ad9882ad_pushSuggestion((*(_93643_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9676_alias))._field_Kind))._field_Kind=(*(_9847_cti))._field_base;
	};
	_1ad8bd776_checkTypeAlias(_9666_sc, &(_9676_alias));
	return _1ad9b2e86_buildVoidData();;
}



inline jule::Ptr<_1ad985b90_Data> _1adaaaac8_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _99635_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _99650_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<_1ad985b90_Data> _9976_result = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9ec10_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
	if (((*((*(_99650_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_99635_e)).ptr(), (*((*(_99650_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9976_result;;
	};
	if (((*((*(_99650_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_99635_e)).ptr(), (*((*((*(_99650_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _10096_d = _1ad9a5918_evalExprKind((*(_99635_e)), (*((*((*(_99650_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10096_d == nullptr)) {
		return _9976_result;;
	};
	if ((!(_1ad9d665d_validTypeForXof(&((*(_10096_d))._field_Kind))))) {
		_1ad987e4a_pushErr((*(_99635_e)).ptr(), (*((*((*(_99650_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_10096_d))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9976_result))._field_Model=jule::Any(jule::new_ptr<_1ad7e38ee_SizeofExprModel>(_1ad7e38ee_SizeofExprModel{._field_Expr=(*(_10096_d))._field_Model}), &__jule_any_type119);
	return _9976_result;;
}



inline jule::Ptr<_1ad985b90_Data> _1adaab007_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _102136_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _102151_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<_1ad985b90_Data> _10226_result = jule::new_ptr<_1ad985b90_Data>(_1ad985b90_Data{._field_untyped=false, ._field_Kind=_1ada9ec10_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1ad778ec2_Const>(nullptr)});;
	if (((*((*(_102151_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_102136_e)).ptr(), (*((*(_102151_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _10226_result;;
	};
	if (((*((*(_102151_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_102136_e)).ptr(), (*((*((*(_102151_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _10346_d = _1ad9a5918_evalExprKind((*(_102136_e)), (*((*((*(_102151_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10346_d == nullptr)) {
		return _10226_result;;
	};
	if ((!(_1ad9d665d_validTypeForXof(&((*(_10346_d))._field_Kind))))) {
		_1ad987e4a_pushErr((*(_102136_e)).ptr(), (*((*((*(_102151_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ad9b8992_Str((*(_10346_d))._field_Kind.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	(*(_10226_result))._field_Model=jule::Any(jule::new_ptr<_1ad7e40a3_AlignofExprModel>(_1ad7e40a3_AlignofExprModel{._field_Expr=(*(_10346_d))._field_Model}), &__jule_any_type120);
	return _10226_result;;
}



inline jule::Ptr<_1ad985b90_Data> _1adaab436_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _104633_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _104648_fc, jule::Ptr<_1ad985b90_Data>* ) {
	if (((*((*(_104648_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_104633_e)).ptr(), (*((*(_104648_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104648_fc))))._field_Args.len() > 1LL)) {
		_1ad987e4a_pushErr((*(_104633_e)).ptr(), (*((*((*(_104648_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ad985b90_Data> _10556_d = _1ad9a672c_evalExpr((*(_104633_e)), (*((*(_104648_fc))))._field_Args[0LL]);;
	if ((_10556_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ad9ba730_GC((*(_10556_d))._field_Kind.ptr())))) {
		_1ad987e4a_pushErr((*(_104633_e)).ptr(), (*((*((*(_104648_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ad985b90_Data> _10646_result = _1ad9b2e86_buildVoidData();;
	(*(_10646_result))._field_Model=jule::Any(jule::new_ptr<_1ad7e4911_FreeExprModel>(_1ad7e4911_FreeExprModel{._field_Expr=(*(_10556_d))._field_Model}), &__jule_any_type29);
	return _10646_result;;
}



inline jule::Ptr<_1ad985b90_Data> _1adaab865_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _106944_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _106959_fc, jule::Ptr<_1ad985b90_Data>* _106986_d) {
	if ((!(_1ad988940_isUnsafe((*(_106944_e)).ptr())))) {
		_1ad987e4a_pushErr((*(_106944_e)).ptr(), (*((*(_106959_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_106959_fc))))._field_Args.len() < 1LL)) {
		_1ad987e4a_pushErr((*(_106944_e)).ptr(), (*((*(_106959_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ad985b90_Data> _10796_argd = _1ad9a672c_evalExpr((*(_106944_e)), (*((*(_106959_fc))))._field_Args[0LL]);;
	if ((_10796_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1ad9bac4c_Prim((*(_10796_argd))._field_Kind.ptr()) == nullptr) || (!(_1ad9c4b79_IsStr(_1ad9bac4c_Prim((*(_10796_argd))._field_Kind).ptr()))))) {
		_1ad987e4a_pushErr((*(_106944_e)).ptr(), (*((*((*(_106959_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type5); (*it++) = jule::Any(_1ad9b8992_Str((*(_10796_argd))._field_Kind), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1ad9865ca_IsConst(_10796_argd.ptr()))) || (!(_1ad7d32c3_IsStr((*(_10796_argd))._field_Constant.ptr()))))) {
		_1ad987e4a_pushErr((*(_106944_e)).ptr(), (*((*((*(_106959_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ad985b90_Data> _10946_r = _1ad9b2e86_buildVoidData();;
	jule::Ptr<_1ad7ea84b_FnIns> _10966_f = _1ad9bc039_Fn((*((*(_106986_d))))._field_Kind);;
	if (((*(_10966_f))._field_Generics.len() > 0LL)) {
		(*(_10946_r))._field_Kind=(*((*(_10966_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1ad7e4614_BackendEmitExprModel> _11016_model = jule::new_ptr<_1ad7e4614_BackendEmitExprModel>(_1ad7e4614_BackendEmitExprModel{._field_Code=_1ad7d0bc7_ReadStr((*(_10796_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_106959_fc))))._field_Args.len() > 1LL)) {
		(*(_11016_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_106959_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_106959_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1bed5ad78:;
			if (it != expr_end) {
				jule::Ptr<_1ad6e94e7_Expr> _110715_arg = *it;
				{
					_10796_argd=_1ad9a5c59_eval1((*(_106944_e)), _110715_arg);
					if ((_10796_argd == nullptr)) {
						return nullptr;;
					};
					(*_11016_model.alloc)._field_Exprs=jule::append((*_11016_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10796_argd))._field_Model; __jule_collection; }));
				}
				_iter_next_1bed5ad78:;
				++it;
				goto _iter_begin_1bed5ad78;
			}
			_iter_end_1bed5ad78:;
		};
	};
	(*_10946_r.alloc)._field_Model=jule::Any(_11016_model, &__jule_any_type22);
	return _10946_r;;
}



inline jule::Ptr<_1ad985b90_Data> _1adaabc94_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _112034_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _112049_fc, jule::Ptr<_1ad985b90_Data>* _112076_d) {
	(*(_112076_d))=_1adaa3e89_builtinCallerOut(nullptr, _112034_e, _112049_fc, _112076_d);
	if (((*(_112076_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_112076_d))))._field_Model.cast_ptr<_1ad7e0d6e_BuiltinOutCallExprModel>(&__jule_any_type24)))._field_Debug=true;
	return (*(_112076_d));;
}



inline jule::Ptr<_1ad985b90_Data> _1adaac1c3_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _112936_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _112951_fc, jule::Ptr<_1ad985b90_Data>* _112978_d) {
	(*(_112978_d))=_1adaa43b8_builtinCallerOutln(nullptr, _112936_e, _112951_fc, _112978_d);
	if (((*(_112978_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_112978_d))))._field_Model.cast_ptr<_1ad7e1248_BuiltinOutlnCallExprModel>(&__jule_any_type25)))._field_Debug=true;
	return (*(_112978_d));;
}



inline jule::Ptr<_1bb01b25c_FileInfo> _1bb0651eb_ParseFile(jule::Ptr<_1ad6d5527_Fileset> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bb01b25c_FileInfo> _276_finf = jule::new_ptr<_1bb01b25c_FileInfo>(_1bb01b25c_FileInfo{._field_Ast=jule::Ptr<_1ad6e325a_AST>(nullptr), ._field_Errors=jule::Slice<_1dd356476_Log>(nullptr)});;
	({
		__jule_tuple_x_1ad6e325a_AST__jule_tuple_s_1dd356476_Log __jule_assign_result = _1bb0657c3_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1ad6e325a_AST__jule_tuple_s_1dd356476_Log _1bb0657c3_parseFileset(jule::Ptr<_1ad6d5527_Fileset> _5521_f) {
	__jule_tuple_x_1ad6e325a_AST__jule_tuple_s_1dd356476_Log __jule_func_result;
	jule::Ptr<_1bb085e64_parser> _566_p = jule::new_ptr<_1bb085e64_parser>(_1bb085e64_parser{._field_ast=jule::Ptr<_1ad6e325a_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>(nullptr), ._field_errors=jule::Slice<_1dd356476_Log>(nullptr), ._field_ep=jule::Ptr<_1bb0756a1_exprBuilder>(nullptr)});;
	_1bb095e96_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1ad7051d4_ScopeTree> _1bb066164_newScope(void) {
	return jule::new_ptr<_1ad7051d4_ScopeTree>(_1ad7051d4_ScopeTree{._field_Parent=jule::Ptr<_1ad7051d4_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1ad704a74_Stmt>(nullptr), ._field_End=jule::Ptr<_1ad6ceb70_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1bb0664d8_isSt(jule::Ptr<_1ad6ceb70_Token> _149_current, jule::Ptr<_1ad6ceb70_Token> _1433_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_149_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_1433_prev))._field_Row < (*_149_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_149_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1bb06685c_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _2026_tokens, jule::I64* _2052_i) {
	if ((((*(_2052_i)) > 1LL) && ((*((*(_2026_tokens))[((*(_2052_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1ad6ceb70_Token> _263_prev = (*(_2026_tokens))[((*(_2052_i)) - 1LL)];;
		return (((*(_263_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1ad6d06ba_IsBinOp((*_263_prev.alloc)._field_Id) && ((*_263_prev.alloc)._field_Row < (*((*(_2026_tokens))[(*(_2052_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1bb066c25_nextStPos(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _3315_tokens, jule::I64 _3340_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _346_braceN = 0LL;;
	jule::I64 _356_i = _3340_start;;
	for (; (_356_i < (*(_3315_tokens)).len()); (_356_i)++) {
		{
			jule::Bool _377_ok = false;;
			jule::Bool _387_terminated = false;;
			jule::Ptr<_1ad6ceb70_Token> _393_tok = (*(_3315_tokens))[_356_i];;
			{
				auto &_match_expr{ (*(_393_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1bedd80d1:;
					{
						if (((_346_braceN == 0LL) && (_356_i > _3340_start))) {
							if ((!(_1bb06685c_prevIsIncompleteExpr(_3315_tokens, &(_356_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bb0664d8_isSt(_393_tok, (*(_3315_tokens))[(_356_i - 1LL)]);
									_377_ok = __jule_assign_result.__jule_result_arg0;
									_387_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_377_ok) {
									goto _julec_label_1beddbc72;
								};
							};
						};
						(_346_braceN)++;
						goto _iter_next_1bedd6b6d;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1bedd8323:;
					{
						(_346_braceN)--;
						if (((_346_braceN == 0LL) && ((_356_i + 1LL) < (*(_3315_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bb0664d8_isSt((*(_3315_tokens))[(_356_i + 1LL)], _393_tok);
								_377_ok = __jule_assign_result.__jule_result_arg0;
								_387_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_377_ok) {
								(_356_i)++;
								goto _julec_label_1beddbc72;
							};
						};
						goto _iter_next_1bedd6b6d;
					}
				}
				_match_end_1bedd8279:;
			};
			if ((_346_braceN != 0LL)) {
				goto _iter_next_1bedd6b6d;
			};
			if ((_356_i > _3340_start)) {
				if (_1bb06685c_prevIsIncompleteExpr(_3315_tokens, &(_356_i))) {
					goto _iter_next_1bedd6b6d;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bb0664d8_isSt(_393_tok, (*(_3315_tokens))[(_356_i - 1LL)]);
					_377_ok = __jule_assign_result.__jule_result_arg0;
					_387_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bb0664d8_isSt(_393_tok, _393_tok);
					_377_ok = __jule_assign_result.__jule_result_arg0;
					_387_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_377_ok))) {
				goto _iter_next_1bedd6b6d;
			};
			_julec_label_1beddbc72:;
			if (_387_terminated) {
				(_356_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _356_i;
			__jule_func_result.__jule_result_arg1 = _387_terminated;
			return __jule_func_result;;
		}
	_iter_next_1bedd6b6d:;
	}
	_iter_end_1bedd6b6d:;;
	__jule_func_result.__jule_result_arg0 = _356_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ad6ceb70_Token__jule_tuple_bool _1bb067099_skipSt(jule::I64* _9516_i, jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _9528_tokens) {
	__jule_tuple_sx_1ad6ceb70_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _962_start = (*(_9516_i));;
	jule::Bool _976_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bb066c25_nextStPos(&(_9528_tokens), _962_start);
		(*(_9516_i)) = __jule_assign_result.__jule_result_arg0;
		_976_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _996_stTokens = _9528_tokens.slice(_962_start, (*(_9516_i)));;
	if (_976_terminated) {
		if ((_996_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1bb067099_skipSt(_9516_i, _9528_tokens));
return __jule_func_result;;
		};
		(_996_stTokens).mut_slice(0LL, (_996_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _996_stTokens;
	__jule_func_result.__jule_result_arg1 = _976_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1bb0673c9_stmt>> _1bb067781_splitStmts(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _11620_tokens) {
	jule::Slice<jule::Ptr<_1bb0673c9_stmt>> _1176_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bb0673c9_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bb0673c9_stmt>(nullptr); __jule_collection; });;
	jule::I64 _1186_pos = 0LL;;
	while ((_1186_pos < (*(_11620_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _1207_stmt;
			jule::Bool _12013_terminated;
			({
				__jule_tuple_sx_1ad6ceb70_Token__jule_tuple_bool __jule_assign_result = _1bb067099_skipSt(&(_1186_pos), (*(_11620_tokens)));
				_1207_stmt = __jule_assign_result.__jule_result_arg0;
				_12013_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1bb0673c9_stmt>> &__jule_push_dest = _1176_stmts; __jule_push_dest.push(jule::new_ptr<_1bb0673c9_stmt>(_1bb0673c9_stmt{._field_tokens=_1207_stmt, ._field_terminated=_12013_terminated})); };
		}
	_iter_next_1bede09e0:;
	}
	_iter_end_1bede09e0:;;
	return _1176_stmts;;
}



inline jule::Bool _1bb080cc7_isTypeOp(jule::U64* _87114_id) {
	return ((((*(_87114_id)) == static_cast<jule::U64>(65LLU)) || ((*(_87114_id)) == static_cast<jule::U64>(54LLU))) || ((*(_87114_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1bb0810d5_isTypeRange(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _87821_tokens) {
	jule::Bool _8796_op = false;;
	{
		auto expr = _87821_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beebb901:;
		if (it != expr_end) {
			jule::I64 _8806_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> _8809_token = *it;
			{
				if (((*(_8809_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_8796_op) {
						return true;;
					};
					jule::I64 _8858_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _8868_lTokens = (*(_87821_tokens)).slice(_8806_i);;
					{
						auto expr = &(_8868_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1beebd2b5:;
						if (it != expr_end) {
							jule::Ptr<_1ad6ceb70_Token> _88711_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_88711_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1beebda68:;
										{
											(_8858_rangeN)++;
											goto _iter_next_1beebd2b5;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1beebde53:;
										{
											(_8858_rangeN)--;
											goto _iter_next_1beebd2b5;
										}
									}
									_match_end_1beebdd54:;
								};
								if ((_8858_rangeN == 0LL)) {
									return _1bb080cc7_isTypeOp(&((*(_88711_lToken))._field_Id));;
								};
							}
							_iter_next_1beebd2b5:;
							++it;
							goto _iter_begin_1beebd2b5;
						}
						_iter_end_1beebd2b5:;
					};
					return true;;
				};
				if ((!(_1bb080cc7_isTypeOp(&((*_8809_token.alloc)._field_Id))))) {
					return false;;
				};
				_8796_op=true;
			}
			_iter_next_1beebb901:;
			++it;
			_8806_i++;
			goto _iter_begin_1beebb901;
		}
		_iter_end_1beebb901:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _1bb08139e_getBlockExpr(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _91122_tokens) {
	jule::I64 _9126_braceN = 0LL;;
	jule::I64 _9136_skipToNextBraceClose = 0LL;;
	{
		auto expr = _91122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beebc5e4:;
		if (it != expr_end) {
			jule::I64 _9146_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> _9149_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9149_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1beec1b59:;
						{
							if (((((*(_91122_tokens)).len() - _9146_i) > 1LL) && ((*((*(_91122_tokens))[(_9146_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9136_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1beec1be2:;
						{
							if (((_9126_braceN > 0LL) || (_9136_skipToNextBraceClose > 0LL))) {
								if ((_9136_skipToNextBraceClose > 0LL)) {
									(_9136_skipToNextBraceClose)--;
								};
								(_9126_braceN)++;
								goto _match_end_1beec1a8d;
							};
							return (*(_91122_tokens)).slice(0LL, _9146_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1beec1c58:;
						{
							(_9126_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1beec1cbe:;
						{
							(_9126_braceN)--;
						}
					}
					_match_end_1beec1a8d:;
				};
			}
			_iter_next_1beebc5e4:;
			++it;
			_9146_i++;
			goto _iter_begin_1beebc5e4;
		}
		_iter_end_1beebc5e4:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ad6ceb70_Token__jule_tuple_sx_1ad6ceb70_Token _1bb081767_splitDelim(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _94320_tokens, jule::U64 _94345_delim) {
	__jule_tuple_sx_1ad6ceb70_Token__jule_tuple_sx_1ad6ceb70_Token __jule_func_result;
	jule::I64 _9446_func = -1LL;;
	jule::I64 _9456_rangeN = 0LL;;
	jule::I64 _9466_i = 0LL;;
	for (; (_9466_i < (*(_94320_tokens)).len()); (_9466_i)++) {
		{
			jule::Ptr<_1ad6ceb70_Token> _9483_token = (*(_94320_tokens))[_9466_i];;
			{
				auto &_match_expr{ (*(_9483_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1beec67a7:;
					{
						_9446_func=_9456_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1beec682e:;
					{
						(_9456_rangeN)++;
						goto _iter_next_1beec5003;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1beec6895:;
					{
						(_9456_rangeN)--;
						if ((_9446_func == _9456_rangeN)) {
							_9446_func=-1LL;
							if (((((*(_94320_tokens)).len() - _9466_i) > 1LL) && ((*((*(_94320_tokens))[(_9466_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9466_i)++;
								goto _iter_next_1beec5003;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1beec690b:;
					{
						(_9456_rangeN)--;
					}
				}
				_match_end_1beec6521:;
			};
			if ((((*(_9483_token))._field_Id == _94345_delim) && (_9456_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _9728_l = (*(_94320_tokens)).slice(0LL, _9466_i);;
				jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _9738_r = (*(_94320_tokens)).slice((_9466_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9728_l;
				__jule_func_result.__jule_result_arg1 = _9738_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1beec5003:;
	}
	_iter_end_1beec5003:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1bb081a31_findLowestPrecOp(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _98222_tokens) {
	jule::U8 _9876_prec = 255LLU;;
	jule::I64 _9886_precPos = -1LL;;
	jule::I64 _9906_braceN = 0LL;;
	jule::Bool _9916_skipToNextBraceOpen = false;;
	{
		auto expr = _98222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beecba98:;
		if (it != expr_end) {
			jule::I64 _9926_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> *_9929_token = it;
			{
				{
					auto &_match_expr{ (*((*(_9929_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1beecc846:;
						{
							_9916_skipToNextBraceOpen=false;
							goto _case_begin_1beecc8ce;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1beecc8ce:;
						{
							(_9906_braceN)++;
							goto _iter_next_1beecba98;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1beecc945:;
						{
							(_9906_braceN)--;
							goto _iter_next_1beecba98;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1beecc9ab:;
						{
							_9916_skipToNextBraceOpen=true;
							goto _iter_next_1beecba98;
						}
					}
					_match_end_1beecc77a:;
				};
				{
					
					if (_9916_skipToNextBraceOpen) {
						_case_begin_1beece20a:;
						{
							goto _iter_next_1beecba98;
						}
					}
					else if ((_9926_i == 0LL)) {
						_case_begin_1beece271:;
						{
							goto _iter_next_1beecba98;
						}
					}
					else if ((_9906_braceN > 0LL)) {
						_case_begin_1beece2d7:;
						{
							goto _iter_next_1beecba98;
						}
					}
					else if ((!(_1ad6d06ba_IsBinOp((*((*(_9929_token))))._field_Id)))) {
						_case_begin_1beece34d:;
						{
							goto _iter_next_1beecba98;
						}
					}
					_match_end_1beece084:;
				};
				jule::Ptr<_1ad6ceb70_Token> _10213_left = (*(_98222_tokens))[(_9926_i - 1LL)];;
				if ((_1ad6d03ac_IsUnaryOp((*(_10213_left))._field_Id) || ((*_10213_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1beecba98;
				};
				if (((_9926_i > 1LL) && ((*_10213_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1ad6ceb70_Token> _10294_lleft = (*(_98222_tokens))[(_9926_i - 2LL)];;
					if (((*(_10294_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_9929_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_9929_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1beecba98;
						};
					};
				};
				jule::U8 _10383_p = _1ad6d0027_Prec((*(_9929_token)));;
				if (((_10383_p != 0LLU) && (_10383_p <= _9876_prec))) {
					_9876_prec=_10383_p;
					_9886_precPos=_9926_i;
				};
			}
			_iter_next_1beecba98:;
			++it;
			_9926_i++;
			goto _iter_begin_1beecba98;
		}
		_iter_end_1beecba98:;
	};
	return _9886_precPos;;
}



inline jule::Ptr<_1ad6ead12_IdentExpr> _1bb081cea_buildIdentExpr(jule::Ptr<_1ad6ceb70_Token>* _104724_token) {
	return jule::new_ptr<_1ad6ead12_IdentExpr>(_1ad6ead12_IdentExpr{._field_Token=(*(_104724_token)), ._field_Ident=(*((*(_104724_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1ad6ceb70_Token__jule_tuple_int _1bb0820b4_getRangeExprTokens(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _105528_tokens) {
	__jule_tuple_sx_1ad6ceb70_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10566_rangeN = 0LL;;
	jule::I64 _10576_i = ((*(_105528_tokens)).len() - 1LL);;
	for (; (_10576_i >= 0LL); (_10576_i)--) {
		{
			jule::Ptr<_1ad6ceb70_Token> _10593_tok = (*(_105528_tokens))[_10576_i];;
			{
				auto &_match_expr{ (*(_10593_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1beed619b:;
					{
						(_10566_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1beed64cb:;
					{
						(_10566_rangeN)--;
					}
				}
				_match_end_1beed6223:;
			};
			if ((_10566_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105528_tokens)).slice(0LL, _10576_i);
				__jule_func_result.__jule_result_arg1 = _10566_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1beed5673:;
	}
	_iter_end_1beed5673:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10566_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1bb08248d_isAnonFnHead(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _107818_tokens) {
	{
		auto &_match_expr{ (*((*(_107818_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1beed7e7d:;
			{
				if ((((*(_107818_tokens)).len() == 1LL) || ((*((*(_107818_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1beed83ac;
				};
				goto _case_begin_1beed8500;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1beed8500:;
			{
				if (((*((*(_107818_tokens))[((*(_107818_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1beed83ac;
				};
				return true;;
			}
		}
		_match_end_1beed83ac:;
	};
	return false;;
}



inline jule::Bool _1bb08313c_checkAssignTokens(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1ad6d4702_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c007e4ec:;
		if (it != expr_end) {
			jule::Ptr<_1ad6ceb70_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c007ebb2:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c0080047:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1c007ee48:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1c0081213:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1c008129b:;
						{
							goto _iter_next_1c007e4ec;
						}
					}
					else if (_1ad6d4c85_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1c0081312:;
						{
							return true;;
						}
					}
					_match_end_1c0081169:;
				};
			}
			_iter_next_1c007e4ec:;
			++it;
			goto _iter_begin_1c007e4ec;
		}
		_iter_end_1c007e4ec:;
	};
	return false;;
}



inline _1dd356476_Log _1bb08410a_makeErr(jule::I64 _1212_row, jule::I64 _1222_col, jule::Ptr<_1ad6d5527_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args) {
	return _1dd356476_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_1212_row, ._field_Column=_1222_col, ._field_Path=(*((*(_1233_f))))._field_Path, ._field_Text=_1dd3568d8_Logf(_1253_fmt, _1273_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _1bb084616_range(jule::I64* _3015_i, jule::U64 _3023_open, jule::U64 _3040_close, jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _3063_tokens) {
	if (((*(_3015_i)) >= (*(_3063_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1ad6ceb70_Token> _342_tok = (*(_3063_tokens))[(*(_3015_i))];;
	if (((*(_342_tok))._field_Id != _3023_open)) {
		return nullptr;;
	};
	((*(_3015_i)))++;
	jule::I64 _396_rangeN = 1LL;;
	jule::I64 _402_start = (*(_3015_i));;
	for (; ((_396_rangeN != 0LL) && ((*(_3015_i)) < (*(_3063_tokens)).len())); ((*(_3015_i)))++) {
		{
			jule::Ptr<_1ad6ceb70_Token> _423_token = (*(_3063_tokens))[(*(_3015_i))];;
			{
				auto &_match_expr{ (*(_423_token))._field_Id };
				
				if (_match_expr == _3023_open) {
					_case_begin_1c0086306:;
					{
						(_396_rangeN)++;
					}
				}
				else if (_match_expr == _3040_close) {
					_case_begin_1c0086669:;
					{
						(_396_rangeN)--;
					}
				}
				_match_end_1c00865d1:;
			};
		}
	_iter_next_1c0083e08:;
	}
	_iter_end_1c0083e08:;;
	return (*(_3063_tokens)).slice(_402_start, ((*(_3015_i)) - 1LL));;
}



inline __jule_tuple_sx_1ad6ceb70_Token__jule_tuple_sx_1ad6ceb70_Token _1bb0848d0_rangeLast(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _6019_tokens) {
	__jule_tuple_sx_1ad6ceb70_Token__jule_tuple_sx_1ad6ceb70_Token __jule_func_result;
	if (((*(_6019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _642_first = (*((*(_6019_tokens))[((*(_6019_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_642_first != static_cast<jule::U64>(73LLU)) && (_642_first != static_cast<jule::U64>(76LLU))) && (_642_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _706_braceN = 0LL;;
	jule::I64 _716_i = ((*(_6019_tokens)).len() - 1LL);;
	for (; (_716_i >= 0LL); (_716_i)--) {
		{
			jule::Ptr<_1ad6ceb70_Token> _733_token = (*(_6019_tokens))[_716_i];;
			{
				auto &_match_expr{ (*(_733_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1c008a4d6:;
					{
						(_706_braceN)++;
						goto _iter_next_1c0089826;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1c008a816:;
					{
						(_706_braceN)--;
					}
				}
				_match_end_1c008a55d:;
			};
			if ((_706_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_6019_tokens)).slice(0LL, _716_i);
				__jule_func_result.__jule_result_arg1 = (*(_6019_tokens)).slice(_716_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1c0089826:;
	}
	_iter_end_1c0089826:;;
	__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log _1bb084d86_parts(jule::Slice<jule::Ptr<_1ad6ceb70_Token>>* _9815_tokens, jule::U64 _9840_id, jule::Bool _9855_exprMust) {
	__jule_tuple_ssx_1ad6ceb70_Token__jule_tuple_s_1dd356476_Log __jule_func_result;
	if (((*(_9815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1026_rangeN = 0LL;;
	jule::I64 _1036_last = 0LL;;
	{
		auto expr = _9815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c008d6a4:;
		if (it != expr_end) {
			jule::I64 _1046_i = it - expr->begin();
			jule::Ptr<_1ad6ceb70_Token> _1049_token = *it;
			{
				{
					auto &_match_expr{ (*(_1049_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1c008e6d8:;
						{
							(_1026_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1c008e760:;
						{
							(_1026_rangeN)--;
						}
					}
					else if (_match_expr == _9840_id) {
						_case_begin_1c008e7c6:;
						{
							if ((_1026_rangeN > 0LL)) {
								goto _iter_next_1c008d6a4;
							};
							if ((_9855_exprMust && ((_1046_i - _1036_last) <= 0LL))) {
								_1dd356476_Log _1155_err = _1bb08410a_makeErr((*(_1049_token))._field_Row, (*_1049_token.alloc)._field_Column, &((*_1049_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_1dd356476_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1155_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last, _1046_i)); };
							_1036_last=(_1046_i + 1LL);
						}
					}
					_match_end_1c008e61c:;
				};
			}
			_iter_next_1c008d6a4:;
			++it;
			_1046_i++;
			goto _iter_begin_1c008d6a4;
		}
		_iter_end_1c008d6a4:;
	};
	if ((_1036_last < (*(_9815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1ad6ceb70_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1bb08511c_getCloseOfBrace(jule::U64 _12820_left) {
	{
		auto &_match_expr{ _12820_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1c0092d18:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1c0092db2:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1c0092e39:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1c008e0de:;
			{
				return _12820_left;;
			}
		}
		_match_end_1c008e1bb:;
	};
}



inline _1dd356476_Log _1bb08554b_compilerErr(jule::Ptr<_1ad6ceb70_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args) {
	return _1dd356476_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_14117_token))))._field_Row, ._field_Column=(*((*(_14117_token))))._field_Column, ._field_Path=(*((*((*(_14117_token))))._field_File))._field_Path, ._field_Text=_1dd3568d8_Logf((*(_14140_fmt)), _14160_args), ._field_Line=_1ad6d6836_GetRow((*((*(_14117_token))))._field_File, (*((*(_14117_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1bb0858e2_pushSuggestion(_1dd356476_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args) {
	(*(_15230_log))._field_Suggestion=_1dd3568d8_Logf(_15248_fmt, _15268_args);
}



inline jule::Ptr<_1ad6e51b3_TypeDecl> _1bb09686a_buildVoidType(void) {
	return jule::new_ptr<_1ad6e51b3_TypeDecl>(_1ad6e51b3_TypeDecl{._field_Token=jule::Ptr<_1ad6ceb70_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1adb42423_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1c02546b1:;
			{
				__jule_func_result.__jule_result_arg0=_1dd359699_IsWindows(_1dd46607a_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1c0254727:;
			{
				__jule_func_result.__jule_result_arg0=_1dd3599a7_IsDarwin(_1dd46607a_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1c0254392:;
			{
				__jule_func_result.__jule_result_arg0=_1dd359c71_IsLinux(_1dd46607a_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1c0254408:;
			{
				__jule_func_result.__jule_result_arg0=_1dd35a8cb_IsUnix(_1dd46607a_Os);
			}
		}
		else {
			_case_begin_1c0253ced:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c0254271:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1adb3c3eb_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1c0256c24:;
			{
				__jule_func_result.__jule_result_arg0=_1dd35a0b2_IsI386(_1dd466333_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1c0256c8a:;
			{
				__jule_func_result.__jule_result_arg0=_1dd35a348_IsAmd64(_1dd466333_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1c0256905:;
			{
				__jule_func_result.__jule_result_arg0=_1dd35a612_IsArm64(_1dd466333_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1c025696b:;
			{
				__jule_func_result.__jule_result_arg0=_1dd35aee7_Is64Bit(_1dd466333_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1c02569d2:;
			{
				__jule_func_result.__jule_result_arg0=_1dd35aca5_Is32Bit(_1dd466333_Arch);
			}
		}
		else {
			_case_begin_1c0256361:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c02567d4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1adb3c5c7_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1dd0c5aa8_Base(_5029_p);
	jule::I64 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _1dd0c5525_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I64 _646_i = _1dd0a667c_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1adb42423_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1adb3c3eb_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_1dd0a667c_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1adb42423_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1adb3c3eb_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1adb3c3eb_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1adb42423_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1adb42423_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1adb5c9c1_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1dd46607a_Os); };
	if (_1dd35a8cb_IsUnix(_1dd46607a_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1adb5cc46_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1dd466333_Arch); };
	if (_1dd35aee7_Is64Bit(_1dd466333_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1dd35aca5_Is32Bit(_1dd466333_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1adb5d032_initVars(jule::Slice<jule::Str>* _5518_vars, _1adb5c6a2_CompileInfo* _5532_info) {
	_1adb5c9c1_setOsVars(_5518_vars);
	_1adb5cc46_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1c0262bb9:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1c0262658:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1c02625e2:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1c0262702:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1c0263ba9:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1c0263c20:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1c0263b21:;
	};
}



inline jule::Slice<jule::U8> _1bb09a84c_readBuff(jule::Str _1713_path) {
	return ({
		auto except = static__1dbd06e8e_Read(_1713_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(_1bc355034_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_1dd465035_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1dd356476_Log _1bb09ac6a_flatCompilerErr(jule::Str _2820_text) {
	return _1dd356476_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_2820_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1ad7e778d_Fn> _1adaacb41_RuntimeFindFn(jule::Ptr<_1ad8e1bea_ImportInfo>* _1823_runtime, jule::Str _1851_ident) {
	;
	jule::Ptr<_1ad7e778d_Fn> _206_f = _1ad8e3306_FindFn((*(_1823_runtime)).ptr(), _1851_ident, false);;
	if ((_206_f == nullptr)) {
		jule::outln(_1c02a4348_toStr(_1851_ident));
		__jule_panic_s(jule::Str::lit("obj: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 108) + jule::Str("\nlocation: julec/obj/runtime.jule:23:3"));;
	};
	return _206_f;;
}



inline jule::Ptr<_1ad7159ec_Struct> _1adaad23a_RuntimeFindStruct(jule::Ptr<_1ad8e1bea_ImportInfo>* _3327_runtime, jule::Str _3355_ident) {
	;
	jule::Ptr<_1ad7159ec_Struct> _356_f = _1ad8e2e0a_FindStruct((*(_3327_runtime)).ptr(), _3355_ident, false);;
	if ((_356_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 106) + jule::Str("\nlocation: julec/obj/runtime.jule:37:3"));;
	};
	return _356_f;;
}



inline void _1bb0a0687_pushPasses(jule::Ptr<_1ad8e446c_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes) {
	{
		auto expr = &((*((*(_12320_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02a6ed8:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _12414_f = *it;
			{
				_julec_label_1c02a64c1:;
				{
					auto expr = &((*(_12414_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c02a6900:;
					if (it != expr_end) {
						_1ad8d11d4_Pass _12610_pass = *it;
						{
							if ((_12610_pass._field_Text).empty()) {
								goto _iter_next_1c02a6900;
							};
							{
								auto expr = _12344_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c02a8b33:;
								if (it != expr_end) {
									jule::Str _13011_cpass = *it;
									{
										if ((_13011_cpass == _12610_pass._field_Text)) {
											goto _iter_next_1c02a6900;
										};
									}
									_iter_next_1c02a8b33:;
									++it;
									goto _iter_begin_1c02a8b33;
								}
								_iter_end_1c02a8b33:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12344_passes)); __jule_push_dest.push(_12610_pass._field_Text); };
						}
						_iter_next_1c02a6900:;
						++it;
						goto _iter_begin_1c02a6900;
					}
					_iter_end_1c02a6900:;
				};
			}
			_iter_next_1c02a6ed8:;
			++it;
			goto _iter_begin_1c02a6ed8;
		}
		_iter_end_1c02a6ed8:;
	};
}



inline jule::Slice<jule::Str> _1bb0a0a50_getAllUniquePasses(jule::Ptr<_1ad8e446c_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1ad8e1bea_ImportInfo>> _14053_uses) {
	jule::Slice<jule::Str> _14110_passes = nullptr;;
	_1bb0a0687_pushPasses(_14028_pkg, &(_14110_passes));
	{
		auto expr = &(_14053_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02a9a8a:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _14414_u = *it;
			{
				if ((!((*(_14414_u))._field_Binded))) {
					_1bb0a0687_pushPasses(&((*_14414_u.alloc)._field_Package), &(_14110_passes));
				};
			}
			_iter_next_1c02a9a8a:;
			++it;
			goto _iter_begin_1c02a9a8a;
		}
		_iter_end_1c02a9a8a:;
	};
	return _14110_passes;;
}



inline _1adb5c6a2_CompileInfo _1bb0a0c5e_buildCompileInfo(void) {
	_1adb5c6a2_CompileInfo _1546_info = _1adb5c6a2_CompileInfo{._field_Prod=_1dd46d659_Production, ._field_Test=_1dd46cc96_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _1dd46ade8_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1c02aadaa:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1c02aaeed:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1c02aae87:;
	};
	{
		auto &_match_expr{ _1dd46c504_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1c02ab086:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1c02abcbd:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1c02ab53c:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1c02ac0ba:;
	};
	return _1546_info;;
}



inline void _1bb0a1017_pushRuntimeToAST(jule::Ptr<_1ad6e325a_AST>* _17926_f) {
	jule::Ptr<_1ad70d033_UseDecl> _1806_decl = jule::new_ptr<_1ad70d033_UseDecl>(_1ad70d033_UseDecl{._field_Token=nullptr, ._field_Path=jule::new_ptr<_1ad6ceb70_Token>(_1ad6ceb70_Token{._field_File=jule::Ptr<_1ad6d5527_Fileset>(nullptr), ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str::lit("\"std/runtime\"", 13), ._field_Id=static_cast<jule::U64>(4LLU)}), ._field_Alias=nullptr, ._field_Binded=false});;
	{ jule::Slice<jule::Ptr<_1ad70d033_UseDecl>> &__jule_push_dest = (*((*(_17926_f))))._field_UseDecls; __jule_push_dest.push(_1806_decl); };
	if (((*((*(_17926_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17926_f))))._field_UseDecls[((*((*(_17926_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17926_f))))._field_UseDecls[0LL];
		(*((*(_17926_f))))._field_UseDecls[0LL]=_1806_decl;
	};
}



inline void _1bb0a1776_IterPackages(jule::Ptr<_1bb09dcd4_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1ad8e446c_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02c4841:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1c02c4841:;
			++it;
			goto _iter_begin_1c02c4841;
		}
		_iter_end_1c02c4841:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1bb0a19da_IterFiles(jule::Ptr<_1ad8e446c_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1ad7eda91_SymTab>*> _1640_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02ccbe0:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _1714_file = *it;
			{
				_1640_f(&(_1714_file));
			}
			_iter_next_1c02ccbe0:;
			++it;
			goto _iter_begin_1c02ccbe0;
		}
		_iter_end_1c02ccbe0:;
	};
}



inline void _1bb0a1d81_iterTraitInheritMethods(jule::Ptr<_1ad802ea2_Trait>* _2233_base, jule::Ptr<_1ad802ea2_Trait>* _2258_t, jule::Fn<void,jule::Ptr<_1ad7e778d_Fn>*> _2275_f) {
	_1bb0a229e_iterTraitInheritMethods1(_2233_base, _2258_t, _2275_f);
	{
		auto expr = &((*((*(_2258_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02cdd34:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _2414_m = *it;
			{
				if ((!(_1bb0a7084_ContainsTraitMethod(_2233_base, &((*(_2414_m))._field_Ident))))) {
					_2275_f(&(_2414_m));
				};
			}
			_iter_next_1c02cdd34:;
			++it;
			goto _iter_begin_1c02cdd34;
		}
		_iter_end_1c02cdd34:;
	};
}



inline void _1bb0a229e_iterTraitInheritMethods1(jule::Ptr<_1ad802ea2_Trait>* _3134_base, jule::Ptr<_1ad802ea2_Trait>* _3159_t, jule::Fn<void,jule::Ptr<_1ad7e778d_Fn>*> _3176_f) {
	{
		auto expr = &((*((*(_3159_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02d01cb:;
		if (it != expr_end) {
			jule::Ptr<_1ad9c0ca7_TypeSymbol> _3214_inh = *it;
			{
				jule::Ptr<_1ad802ea2_Trait> _337_t2 = _1ad9bc556_Trait((*(_3214_inh))._field_Kind.ptr());;
				_1bb0a1d81_iterTraitInheritMethods(_3134_base, &(_337_t2), _3176_f);
			}
			_iter_next_1c02d01cb:;
			++it;
			goto _iter_begin_1c02d01cb;
		}
		_iter_end_1c02d01cb:;
	};
}



inline void _1bb0a2557_IterTraitMethods(jule::Ptr<_1ad802ea2_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1ad7e778d_Fn>*> _3943_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02d1672:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _4014_m = *it;
			{
				_3943_f(&(_4014_m));
			}
			_iter_next_1c02d1672:;
			++it;
			goto _iter_begin_1c02d1672;
		}
		_iter_end_1c02d1672:;
	};
	_1bb0a229e_iterTraitInheritMethods1(_3926_t, _3926_t, _3943_f);
}



inline jule::Bool _1bb0a4746_IsForwarded(jule::Ptr<_1ad8b136d_Scope>* _1217_s) {
	jule::Any _132_last = (*((*(_1217_s))))._field_Stmts[((*((*(_1217_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _132_last };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c03064bb:;
			{
				{
					auto &_match_expr{ (*(_132_last.cast_ptr<_1ad985b90_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1c030670d:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c0307379:;
						{
							return false;;
						}
					}
					_match_end_1c0307313:;
				};
			}
		}
		else {
			_case_begin_1c0306642:;
			{
				return true;;
			}
		}
		_match_end_1c03065cb:;
	};
}



inline jule::Bool _1bb0a4922_IsExprComesFromBind(jule::Ptr<_1ad985b90_Data>* _2825_d) {
	{
		auto &_match_expr{ (*((*(_2825_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c0307dc4:;
			{
				return (*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1ad933a83_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c03080d3:;
			{
				return (*((*((*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1ad7dee28_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1c0306e39:;
			{
				return false;;
			}
		}
		_match_end_1c0306dc3:;
	};
}



inline jule::Bool _1bb0a4bdb_IsAny(jule::Ptr<_1ad9b8596_TypeKind>* _4015_t) {
	if ((_1ad9bb786_TypeEnum((*(_4015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _442_prim = _1ad9bac4c_Prim((*(_4015_t)).ptr());;
	return ((_442_prim != nullptr) && _1ad9c4e10_IsAny(_442_prim));;
}



inline jule::Bool _1bb0a502c_IsClosure(jule::Ptr<_1ad7dd1bd_AnonFnExprModel>* _4915_m) {
	return ((*((*(_4915_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1bb0a52b3_IsOpMethod(jule::Ptr<_1ad7e778d_Fn>* _5216_m) {
	if ((((*((*(_5216_m))))._field_Generics.len() > 0LL) || ((*((*(_5216_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _562_mi = (*((*(_5216_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1bb0a5637_IsTraitMethod(jule::Ptr<_1ad718857_StructIns>* _6823_owner, jule::Ptr<_1ad7ea84b_FnIns>* _6849_f) {
	{
		auto expr = &((*((*((*(_6823_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c030d8ad:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> _6914_t = *it;
			{
				if ((_1ad803b84_FindMethod(_6914_t.ptr(), (*((*((*(_6849_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1c030d8ad:;
			++it;
			goto _iter_begin_1c030d8ad;
		}
		_iter_end_1c030d8ad:;
	};
	return false;;
}



inline jule::Bool _1bb0a59ab_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p) {
	return _1dd0a3976_HasPrefix(_8217_f, _1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1dd46550d_PathStdlib; (*it++) = _8225_p; __jule_collection; })));;
}



inline jule::Ptr<_1ad6e45d0_Directive> _1bb0a6847_FindDirective(jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c031a06d:;
		if (it != expr_end) {
			jule::Ptr<_1ad6e45d0_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1c031a06d:;
			++it;
			goto _iter_begin_1c031a06d;
		}
		_iter_end_1c031a06d:;
	};
	return nullptr;;
}



inline jule::Bool _1bb0a6c10_HasDirective(jule::Slice<jule::Ptr<_1ad6e45d0_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1bb0a6847_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::Bool _1bb0a7084_ContainsTraitMethod(jule::Ptr<_1ad802ea2_Trait>* _2629_t, jule::Str* _2647_ident) {
	{
		auto expr = &((*((*(_2629_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c031bba7:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _279_m = *it;
			{
				if (((*(_279_m))._field_Ident == (*(_2647_ident)))) {
					return true;;
				};
			}
			_iter_next_1c031bba7:;
			++it;
			goto _iter_begin_1c031bba7;
		}
		_iter_end_1c031bba7:;
	};
	return false;;
}



inline jule::I64 _1bb0a7749_FindTraitTypeOffsetS(jule::Ptr<_1ad802ea2_Trait> _3925_t, jule::Ptr<_1ad718857_StructIns> _3946_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c031d8bd:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> *_449_si = it;
			{
				if (((*(_3946_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c031e7ae:;
						if (it != expr_end) {
							jule::Ptr<_1ad718857_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3946_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1c031e7ae:;
							++it;
							goto _iter_begin_1c031e7ae;
						}
						_iter_end_1c031e7ae:;
					};
					goto _iter_end_1c031d8bd;
				} else {
					_436_i+=(*((*(_449_si))))._field_Instances.len();
				};
			}
			_iter_next_1c031d8bd:;
			++it;
			goto _iter_begin_1c031d8bd;
		}
		_iter_end_1c031d8bd:;
	};
	return -1LL;;
}



inline jule::I64 _1bb0a7abd_FindTraitTypeOffset(jule::Ptr<_1ad802ea2_Trait> _6224_t, jule::Ptr<_1ad9b8596_TypeKind> _6245_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1ad718857_StructIns> _6610_s = nullptr;;
	if ((_1ad9baed3_Sptr(_6245_k.ptr()) != nullptr)) {
		_6245_k=(*(_1ad9baed3_Sptr(_6245_k)))._field_Elem;
	};
	_6610_s=_1ad9bc2c0_Struct(_6245_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1bb0a7749_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1ad7ea84b_FnIns> _1bb0a7eec_FindOperator(jule::Ptr<_1ad718857_StructIns>* _7822_s, jule::U64 _7843_op, jule::Bool _7858_unary) {
	{
		auto &_match_expr{ _7843_op };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1c03232a7:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1c03230a9:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c0323120:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1c032331d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1c0323395:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1c032341c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1c032353d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1c03235a4:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1c032361a:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1c0323681:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1c03236e7:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1c032376e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c03237e6:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1c032386d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c03238e5:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1c032396c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1c03239e4:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1c0323a6b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1c0323ae3:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1c0323b6a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1c0323be2:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1c0323c69:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1c0323ce1:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1c0323d68:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1c0323de0:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1c0322be1:;
			{
				return nullptr;;
			}
		}
		_match_end_1c0322d23:;
	};
}



inline jule::Ptr<_1ad7ea84b_FnIns> _1bb0a8371_FindFnGenericInstance(jule::Ptr<_1ad7e778d_Fn>* _14731_f, jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _14745_generics) {
	_julec_label_1c032c998:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0330836:;
		if (it != expr_end) {
			jule::Ptr<_1ad7ea84b_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c033123d:;
					if (it != expr_end) {
						jule::I64 _1507_i = it - expr->begin();
						{
							if ((!(_1ad9b8cd3_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Kind, _14745_generics[_1507_i])))) {
								goto _iter_next_1c0330836;
							};
						}
						_iter_next_1c033123d:;
						++it;
						_1507_i++;
						goto _iter_begin_1c033123d;
					}
					_iter_end_1c033123d:;
				};
				return _14914_ins;;
			}
			_iter_next_1c0330836:;
			++it;
			goto _iter_begin_1c0330836;
		}
		_iter_end_1c0330836:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_1ad718857_StructIns> _1bb0a8805_FindStructGenericInstance(jule::Ptr<_1ad7159ec_Struct>* _16335_s, jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>> _16353_generics) {
	_julec_label_1c03316b1:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0332937:;
		if (it != expr_end) {
			jule::Ptr<_1ad718857_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c033333e:;
					if (it != expr_end) {
						jule::I64 _1667_i = it - expr->begin();
						{
							if ((!(_1ad9b8cd3_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Kind, _16353_generics[_1667_i])))) {
								goto _iter_next_1c0332937;
							};
						}
						_iter_next_1c033333e:;
						++it;
						_1667_i++;
						goto _iter_begin_1c033333e;
					}
					_iter_end_1c033333e:;
				};
				return _16514_ins;;
			}
			_iter_next_1c0332937:;
			++it;
			goto _iter_begin_1c0332937;
		}
		_iter_end_1c0332937:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Bool _1c02c2740_isOrdered(jule::Ptr<_1ad933a83_Var>* _1418_t, jule::Slice<jule::Ptr<_1ad933a83_Var>> _1425_s) {
	_julec_label_1c02c4b71:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02c50c2:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1c02c58ca:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1c02c50c2;
							};
						}
					}
					_match_end_1c02c5853:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c02c60b2:;
					if (it != expr_end) {
						jule::Ptr<_1ad933a83_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1c02c50c2;
							};
						}
						_iter_next_1c02c60b2:;
						++it;
						goto _iter_begin_1c02c60b2;
					}
					_iter_end_1c02c60b2:;
				};
				return false;;
			}
			_iter_next_1c02c50c2:;
			++it;
			goto _iter_begin_1c02c50c2;
		}
		_iter_end_1c02c50c2:;
	};
	return true;;
}

inline jule::Bool _1c02c84b0_isOrdered(jule::Ptr<_1ad7159ec_Struct>* _1418_t, jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _1425_s) {
	_julec_label_1c02ca89c:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02caced:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c02cb419:;
					if (it != expr_end) {
						jule::Ptr<_1ad7159ec_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1c02caced;
							};
						}
						_iter_next_1c02cb419:;
						++it;
						goto _iter_begin_1c02cb419;
					}
					_iter_end_1c02cb419:;
				};
				return false;;
			}
			_iter_next_1c02caced:;
			++it;
			goto _iter_begin_1c02caced;
		}
		_iter_end_1c02caced:;
	};
	return true;;
}



inline void _1c02bed69_order(jule::Slice<jule::Ptr<_1ad933a83_Var>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1c02c0331:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1c02c10bd:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1ad933a83_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1c02c22ab:;
				if (it != expr_end) {
					jule::Ptr<_1ad933a83_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1c02c1673;
						};
					}
					_iter_next_1c02c22ab:;
					++it;
					goto _iter_begin_1c02c22ab;
				}
				_iter_end_1c02c22ab:;
			};
			if (_1c02c2740_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1c02c1673:;
	}
	_iter_end_1c02c1673:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1c02c0331;
	};
}

inline void _1c02c094c_order(jule::Slice<jule::Ptr<_1ad7159ec_Struct>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1c02c18d7:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1c02c5622:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1ad7159ec_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1c02c802b:;
				if (it != expr_end) {
					jule::Ptr<_1ad7159ec_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1c02c73e3;
						};
					}
					_iter_next_1c02c802b:;
					++it;
					goto _iter_begin_1c02c802b;
				}
				_iter_end_1c02c802b:;
			};
			if (_1c02c84b0_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1c02c73e3:;
	}
	_iter_end_1c02c73e3:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1c02c18d7;
	};
}



inline void _1bbedea15_EliminateDefines(jule::Ptr<_1bb09dcd4_IR>* _39126_ir) {
	jule::Ptr<_1bbedb627_ObjectDeadCode> _3926_ocd = static__1bbedbb99_new(_39126_ir);;
	_1bbede75c_elimanate(_3926_ocd);
}



inline void _1bbee38c6_eliminateDeadCodeOfScope(jule::Ptr<_1ad8b136d_Scope> _21833_s) {
	jule::Slice<jule::Ptr<_1ad8b3dba_Label>> _2192_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8b3dba_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad8b3dba_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1ad8b452a_GotoSt>> _2202_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad8b452a_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad8b452a_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1bbee0692_scopeDeadCode> _2216_sdc = jule::new_ptr<_1bbee0692_scopeDeadCode>(_1bbee0692_scopeDeadCode{._field_parent=jule::Ptr<_1bbee0692_scopeDeadCode>(nullptr), ._field_s=_21833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1ad8b3dba_Label>>>)((&(_2192_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1ad8b452a_GotoSt>>>)((&(_2202_gotos)))), ._field_except=false});;
	{
		_1bbee35c9_optimizeStmts(_2216_sdc);
	};
}



inline void _1bbee3b4b_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1ad7e778d_Fn>>* _23033_funcs) {
	{
		auto expr = _23033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c03b9eec:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _23114_func = *it;
			{
				{
					auto expr = &((*(_23114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c03bc9a0:;
					if (it != expr_end) {
						jule::Ptr<_1ad7ea84b_FnIns> _23215_ins = *it;
						{
							_1bbee38c6_eliminateDeadCodeOfScope((*(_23215_ins))._field_Scope);
						}
						_iter_next_1c03bc9a0:;
						++it;
						goto _iter_begin_1c03bc9a0;
					}
					_iter_end_1c03bc9a0:;
				};
			}
			_iter_next_1c03b9eec:;
			++it;
			goto _iter_begin_1c03b9eec;
		}
		_iter_end_1c03b9eec:;
	};
}



inline void _1bbee3d7c_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1ad7159ec_Struct>>* _23937_structs) {
	{
		auto expr = _23937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c03bc917:;
		if (it != expr_end) {
			jule::Ptr<_1ad7159ec_Struct> _24014_s = *it;
			{
				{
					auto expr = &((*(_24014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c03bdab1:;
					if (it != expr_end) {
						jule::Ptr<_1ad718857_StructIns> _24115_ins = *it;
						{
							_1bbee3b4b_eliminateScopeFunctions(&((*(_24115_ins))._field_Methods));
						}
						_iter_next_1c03bdab1:;
						++it;
						goto _iter_begin_1c03bdab1;
					}
					_iter_end_1c03bdab1:;
				};
			}
			_iter_next_1c03bc917:;
			++it;
			goto _iter_begin_1c03bc917;
		}
		_iter_end_1c03bc917:;
	};
}



inline void _1bbee4135_eliminateFunctionsScopePackage(jule::Ptr<_1ad8e446c_Package>* _24740_pkg) {
	{
		auto expr = &((*((*(_24740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c03be870:;
		if (it != expr_end) {
			jule::Ptr<_1ad7eda91_SymTab> _24814_f = *it;
			{
				_1bbee3b4b_eliminateScopeFunctions(&((*(_24814_f))._field_Funcs));
				_1bbee3d7c_eliminateScopeStructMethods(&((*_24814_f.alloc)._field_Structs));
			}
			_iter_next_1c03be870:;
			++it;
			goto _iter_begin_1c03be870;
		}
		_iter_end_1c03be870:;
	};
}



inline void _1bbee4333_eliminateScopePackage(jule::Ptr<_1ad8e446c_Package>* _25431_pkg) {
	_1bbee4135_eliminateFunctionsScopePackage(_25431_pkg);
}



inline void _1bbee4564_EliminateScopes(jule::Ptr<_1bb09dcd4_IR>* _25925_ir) {
	jule::I64 _2606_i = ((*((*(_25925_ir))))._field_Used.len() - 1LL);;
	for (; (_2606_i >= 0LL); (_2606_i)--) {
		{
			jule::Ptr<_1ad8e1bea_ImportInfo> _2627_u = (*((*(_25925_ir))))._field_Used[_2606_i];;
			if ((!((*(_2627_u))._field_Binded))) {
				_1bbee4333_eliminateScopePackage(&((*_2627_u.alloc)._field_Package));
			};
		}
	_iter_next_1c03c107a:;
	}
	_iter_end_1c03c107a:;;
	_1bbee4333_eliminateScopePackage(&((*((*(_25925_ir))))._field_Main));
}



inline jule::Uintptr _1bbd92dd5_typeData(jule::Any* _914_m) {
	return ((jule::Uintptr)(((*(_914_m))).type));;
}



inline jule::Bool _1bbd93237_equalConst(jule::Ptr<_1ad778ec2_Const> _1315_l, jule::Ptr<_1ad778ec2_Const> _1336_r) {
	{
		
		if (_1ad7d2a20_IsI64(_1315_l.ptr())) {
			_case_begin_1c0433890:;
			{
				return (_1ad7d2a20_IsI64(_1336_r.ptr()) && (_1ad7d0424_ReadI64(_1315_l) == _1ad7d0424_ReadI64(_1336_r)));;
			}
		}
		else if (_1ad7d2ca6_IsU64(_1315_l.ptr())) {
			_case_begin_1c0433917:;
			{
				return (_1ad7d2ca6_IsU64(_1336_r.ptr()) && (_1ad7d06aa_ReadU64(_1315_l) == _1ad7d06aa_ReadU64(_1336_r)));;
			}
		}
		else if (_1ad7d3559_IsF64(_1315_l.ptr())) {
			_case_begin_1c043398e:;
			{
				return (_1ad7d3559_IsF64(_1336_r.ptr()) && (_1ad7d0e5d_ReadF64(_1315_l) == _1ad7d0e5d_ReadF64(_1336_r)));;
			}
		}
		else if (_1ad7d32c3_IsStr(_1315_l.ptr())) {
			_case_begin_1c0433a16:;
			{
				return (_1ad7d32c3_IsStr(_1336_r.ptr()) && (_1ad7d0bc7_ReadStr(_1315_l) == _1ad7d0bc7_ReadStr(_1336_r)));;
			}
		}
		else if (_1ad7d303c_IsBool(_1315_l.ptr())) {
			_case_begin_1c0433a8d:;
			{
				return (_1ad7d303c_IsBool(_1336_r.ptr()) && (_1ad7d0941_ReadBool(_1315_l) == _1ad7d0941_ReadBool(_1336_r)));;
			}
		}
		else if (_1ad7d37e0_IsNil(_1315_l.ptr())) {
			_case_begin_1c0433c36:;
			{
				return _1ad7d37e0_IsNil(_1336_r.ptr());;
			}
		}
		else {
			_case_begin_1c04337a2:;
			{
				return false;;
			}
		}
		_match_end_1c0433065:;
	};
}



inline jule::Bool _1bbd935ab_equalCasting(jule::Ptr<_1ad7db9d5_CastingExprModel> _3217_l, jule::Ptr<_1ad7db9d5_CastingExprModel> _3245_r) {
	if ((!(_1ad9b8cd3_Equal((*(_3217_l))._field_Kind, (*(_3245_r))._field_Kind)))) {
		return false;;
	};
	return _1bbd944e1_equalModels((*((*_3217_l.alloc)._field_Expr))._field_Model, (*(*(_3245_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1bbd93974_equalUnary(jule::Ptr<_1ad7da781_UnaryExprModel> _3915_l, jule::Ptr<_1ad7da781_UnaryExprModel> _3941_r) {
	if ((((*((*(_3915_l))._field_Op))._field_Id != (*(*(_3941_r))._field_Op.alloc)._field_Id) || ((*(*(_3915_l))._field_Op.alloc)._field_Kind != (*(*(_3941_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1bbd944e1_equalModels((*((*_3915_l.alloc)._field_Expr))._field_Model, (*(*(_3941_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1bbd93ce8_equalIndexing(jule::Ptr<_1ad7dcc17_IndexingExprModel> _4618_l, jule::Ptr<_1ad7dcc17_IndexingExprModel> _4647_r) {
	return (_1bbd944e1_equalModels((*((*(_4618_l))._field_Expr))._field_Model, (*(*(_4647_r))._field_Expr.alloc)._field_Model) && _1bbd944e1_equalModels((*((*_4618_l.alloc)._field_Index))._field_Model, (*(*(_4647_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1bbd9416c_equalBinary(jule::Ptr<_1ad7da3a7_BinaryExprModel> _5116_l, jule::Ptr<_1ad7da3a7_BinaryExprModel> _5143_r) {
	if ((((*((*(_5116_l))._field_Op))._field_Id != (*(*(_5143_r))._field_Op.alloc)._field_Id) || ((*(*(_5116_l))._field_Op.alloc)._field_Kind != (*(*(_5143_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1bbd944e1_equalModels((*((*_5116_l.alloc)._field_Left))._field_Model, (*(*(_5143_r))._field_Left.alloc)._field_Model) && _1bbd944e1_equalModels((*((*_5116_l.alloc)._field_Right))._field_Model, (*(*(_5143_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1bbd944e1_equalModels(jule::Any _6216_l, jule::Any _6236_r) {
	if ((_1bbd92dd5_typeData(&(_6216_l)) != _1bbd92dd5_typeData(&(_6236_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6216_l };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c04425b3:;
			{
				return (_6216_l.unsafe_cast_ptr<_1ad933a83_Var>() == _6236_r.cast_ptr<_1ad933a83_Var>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c0443152:;
			{
				jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _703_li = _6216_l.unsafe_cast_ptr<_1ad7dee28_StructSubIdentExprModel>();;
				jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _713_ri = _6236_r.cast_ptr<_1ad7dee28_StructSubIdentExprModel>(&__jule_any_type100);;
				return (((*(_703_li))._field_Field == (*(_713_ri))._field_Field) && _1bbd944e1_equalModels((*((*_703_li.alloc)._field_Expr))._field_Model, (*(*(_713_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c04431b8:;
			{
				return _1bbd93237_equalConst(_6216_l.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15), _6236_r.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c0442c78:;
			{
				return _1bbd935ab_equalCasting(_6216_l.cast_ptr<_1ad7db9d5_CastingExprModel>(&__jule_any_type95), _6236_r.cast_ptr<_1ad7db9d5_CastingExprModel>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c0442cde:;
			{
				return _1bbd93974_equalUnary(_6216_l.cast_ptr<_1ad7da781_UnaryExprModel>(&__jule_any_type112), _6236_r.cast_ptr<_1ad7da781_UnaryExprModel>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c0442d55:;
			{
				return _1bbd93ce8_equalIndexing(_6216_l.cast_ptr<_1ad7dcc17_IndexingExprModel>(&__jule_any_type42), _6236_r.cast_ptr<_1ad7dcc17_IndexingExprModel>(&__jule_any_type42));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c0442dbb:;
			{
				return _1bbd9416c_equalBinary(_6216_l.cast_ptr<_1ad7da3a7_BinaryExprModel>(&__jule_any_type113), _6236_r.cast_ptr<_1ad7da3a7_BinaryExprModel>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1c0442c12:;
			{
				return false;;
			}
		}
		_match_end_1c0442805:;
	};
}



inline void _1bbd99d98_possibleNilRemove(jule::Ptr<_1bbd98db9_nils>* _7227_n, jule::Any _7237_m) {
	if (((*(_7227_n)) != nullptr)) {
		_1bbd996a0_removeVar((*(_7227_n)).ptr(), _1bbd9a86b_getNilVar(_7237_m));
	};
}



inline jule::Bool _1bbd9a261_isGuaranteedNonNilExpr(jule::Ptr<_1bbd98db9_nils>* _7832_n, jule::Any _7842_m) {
	{
		auto &_match_expr{ _7842_m };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c044909d:;
			{
				return true;;
			}
		}
		_match_end_1c0449037:;
	};
	return (((*(_7832_n)) != nullptr) && _1bbd999e1_isSafe((*(_7832_n)).ptr(), _1bbd9a86b_getNilVar(_7842_m)));;
}



inline jule::Bool _1bbd9a52a_isNilValidType(jule::Ptr<_1ad9b8596_TypeKind> _8623_t) {
	return (_1ad9baed3_Sptr(_8623_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1bbd9a86b_getNilVar(jule::Any _8814_m) {
	if ((!(_1bbdb14db_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _8814_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c044a654:;
			{
				jule::Ptr<_1ad933a83_Var> _943_v = _8814_m.unsafe_cast_ptr<_1ad933a83_Var>();;
				if ((!((*(_943_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_8814_m.unsafe_cast_ptr<_1ad933a83_Var>());;
				};
				return _1bbd9a86b_getNilVar((*((*((*_943_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c044aaa5:;
			{
				return static_cast<jule::Uintptr>((*(_8814_m.unsafe_cast_ptr<_1ad7dee28_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1c044a5dd:;
	};
	return 0LLU;;
}



inline jule::Bool _1bbda1586_isConstantValidConditionalCase(jule::Ptr<_1ad8b178b_If>* _65936_i) {
	{
		auto &_match_expr{ (*((*(_65936_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0452a9b:;
			{
				jule::Ptr<_1ad778ec2_Const> _6623_c = (*((*(_65936_i))))._field_Expr.unsafe_cast_ptr<_1ad778ec2_Const>();;
				return (_1ad7d303c_IsBool(_6623_c.ptr()) && _1ad7d0941_ReadBool(_6623_c));;
			}
		}
		_match_end_1c0453261:;
	};
	return false;;
}



inline jule::Bool _1bbda1894_isUnreachableExpr(jule::Any* _66823_expr) {
	{
		auto &_match_expr{ (*(_66823_expr)) };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0453a03:;
			{
				jule::Ptr<_1ad778ec2_Const> _6713_c = (*(_66823_expr)).cast_ptr<_1ad778ec2_Const>(&__jule_any_type15);;
				return (_1ad7d303c_IsBool(_6713_c.ptr()) && (!(_1ad7d0941_ReadBool(_6713_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c0452b34:;
			{
				jule::Ptr<_1ad7da3a7_BinaryExprModel> _6743_m = (*(_66823_expr)).cast_ptr<_1ad7da3a7_BinaryExprModel>(&__jule_any_type113);;
				if (((*((*(_6743_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1bbda1894_isUnreachableExpr(&((*((*_6743_m.alloc)._field_Left))._field_Model)) || _1bbda1894_isUnreachableExpr(&((*((*_6743_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1c0454471:;
	};
	return false;;
}



inline jule::Bool _1bbda1b5d_isConstantValidMatchCase(jule::Ptr<_1ad8b65c6_Case>* _68330_case) {
	{
		auto expr = &((*((*(_68330_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0457c16:;
		if (it != expr_end) {
			jule::Ptr<_1ad985b90_Data> *_6849_expr = it;
			{
				if (((_1ad9865ca_IsConst((*(_6849_expr)).ptr()) && _1ad7d303c_IsBool((*(*(_6849_expr)).alloc)._field_Constant.ptr())) && _1ad7d0941_ReadBool((*((*(_6849_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1c0457c16:;
			++it;
			goto _iter_begin_1c0457c16;
		}
		_iter_end_1c0457c16:;
	};
	return false;;
}



inline jule::Bool _1bbda1e9e_isUnreachableConditionalCase(jule::Ptr<_1ad8b178b_If>* _69234_i) {
	return _1bbda1894_isUnreachableExpr(&((*((*(_69234_i))))._field_Expr));;
}



inline jule::Bool _1bbda2235_isUnreachableMatchCase(jule::Ptr<_1ad8b65c6_Case>* _69628_case) {
	{
		auto expr = &((*((*(_69628_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0459c29:;
		if (it != expr_end) {
			jule::Ptr<_1ad985b90_Data> *_6979_expr = it;
			{
				if ((!(_1bbda1894_isUnreachableExpr(&((*((*(_6979_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1c0459c29:;
			++it;
			goto _iter_begin_1c0459c29;
		}
		_iter_end_1c0459c29:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1bbda73e4_checkForBitShiftOpt(jule::Ptr<_1ad7d9dac_OperandExprModel>* _58125_l, jule::Ptr<_1ad7d9dac_OperandExprModel>* _58154_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1ad87c0c5_IsInt(_1ad9b8992_Str((*((*(_58125_l))))._field_Kind.ptr())))) || (!(_1ad87c0c5_IsInt(_1ad9b8992_Str((*((*(_58154_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1ad7d147a_AsU64((*((*(_58154_r))))._field_Model.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _5892_j = _1c2d566de_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _5902_z = static_cast<jule::U64>(_5892_j);;
	if ((static_cast<jule::F64>(_5902_z) != _5892_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _5902_z;
	return __jule_func_result;;
}



inline jule::Bool _1bbda77ac_areSameLvalueExprModel(jule::Any* _59828_l, jule::Any* _59849_r) {
	{
		auto &_match_expr{ (*(_59828_l)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c05143ee:;
			{
				return ((*(_59849_r)) == (*(_59828_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c0514212:;
			{
				{
					auto &_match_expr{ (*(_59849_r)) };
					
					if (_match_expr.type == &__jule_any_type100) {
						_case_begin_1c0514c90:;
						{
							goto _match_end_1c0515224;
						}
					}
					else {
						_case_begin_1c051528a:;
						{
							return false;;
						}
					}
					_match_end_1c0515224:;
				};
				jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _6113_lsi = (*(_59828_l)).cast_ptr<_1ad7dee28_StructSubIdentExprModel>(&__jule_any_type100);;
				jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _6123_rsi = (*(_59849_r)).cast_ptr<_1ad7dee28_StructSubIdentExprModel>(&__jule_any_type100);;
				if (((*(_6113_lsi))._field_Field != (*(_6123_rsi))._field_Field)) {
					return false;;
				};
				return _1bbda77ac_areSameLvalueExprModel(&((*((*_6113_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6123_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c0514476:;
			{
				{
					auto &_match_expr{ (*(_59849_r)) };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1c0516a83:;
						{
							jule::Ptr<_1ad7da781_UnaryExprModel> _6244_ul = (*(_59828_l)).cast_ptr<_1ad7da781_UnaryExprModel>(&__jule_any_type112);;
							jule::Ptr<_1ad7da781_UnaryExprModel> _6254_ur = (*(_59849_r)).cast_ptr<_1ad7da781_UnaryExprModel>(&__jule_any_type112);;
							if ((((*((*(_6244_ul))._field_Op))._field_Id != (*(*(_6254_ur))._field_Op.alloc)._field_Id) || ((*(*(_6244_ul))._field_Op.alloc)._field_Kind != (*(*(_6254_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1bbda77ac_areSameLvalueExprModel(&((*((*_6244_ul.alloc)._field_Expr))._field_Model), &((*(*(_6254_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1c0516a0b:;
				};
			}
		}
		_match_end_1c0514388:;
	};
	return false;;
}



inline void _1bbda9869_possibleDynamicRemove(jule::Ptr<_1bbda87d0_dynamic>* _7331_d, jule::Any _7344_m) {
	if (((*(_7331_d)) != nullptr)) {
		_1bbda90b6_removeVar((*(_7331_d)).ptr(), _1bbdaa3e7_getDynamicVar(_7344_m));
	};
}



inline jule::Bool _1bbda9b77_isDynamicValidType(jule::Ptr<_1ad9b8596_TypeKind> _7927_t) {
	return _1bb0a4bdb_IsAny(&(_7927_t));;
}



inline jule::Ptr<_1ad9b8596_TypeKind> _1bbdaa0a6_isTypeGuaranteedDynamicData(jule::Ptr<_1bbda87d0_dynamic>* _8137_dy, jule::Ptr<_1ad9b8596_TypeKind> _8155_t, jule::Any _8179_m) {
	jule::Bool _822_isAny = _1bb0a4bdb_IsAny(&(_8155_t));;
	if (((!(_822_isAny)) && (_1ad9bc556_Trait(_8155_t.ptr()) == nullptr))) {
		return _8155_t;;
	};
	if ((!(_822_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8179_m };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c05a53a2:;
			{
				jule::Ptr<_1ad7db9d5_CastingExprModel> _917_cem = _8179_m.unsafe_cast_ptr<_1ad7db9d5_CastingExprModel>();;
				return _1bbdaa0a6_isTypeGuaranteedDynamicData(_8137_dy, (*(_917_cem))._field_ExprKind, (*((*_917_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1c05a5924:;
	};
	jule::Uintptr _942_var = _1bbdaa3e7_getDynamicVar(_8179_m);;
	if ((_942_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8137_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05a72a5:;
		if (it != expr_end) {
			_1bbda848e_dynamicVar _9814_v = *it;
			{
				if ((_9814_v._field_var == _942_var)) {
					return _9814_v._field_kind;;
				};
			}
			_iter_next_1c05a72a5:;
			++it;
			goto _iter_begin_1c05a72a5;
		}
		_iter_end_1c05a72a5:;
	};
	return nullptr;;
}



inline jule::Uintptr _1bbdaa3e7_getDynamicVar(jule::Any _10618_m) {
	if ((!(_1bbdb2ec1_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _10618_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c05a797b:;
			{
				jule::Ptr<_1ad933a83_Var> _1123_v = _10618_m.unsafe_cast_ptr<_1ad933a83_Var>();;
				if ((!((*(_1123_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_10618_m.unsafe_cast_ptr<_1ad933a83_Var>());;
				};
				return _1bbdaa3e7_getDynamicVar((*((*((*_1123_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c05a8608:;
			{
				return static_cast<jule::Uintptr>((*(_10618_m.unsafe_cast_ptr<_1ad7dee28_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c05a7a03:;
			{
				jule::Ptr<_1ad7da781_UnaryExprModel> _1233_uem = _10618_m.unsafe_cast_ptr<_1ad7da781_UnaryExprModel>();;
				if (((*((*(_1233_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1bbdaa3e7_getDynamicVar((*((*_1233_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1c05a7915:;
	};
	return 0LLU;;
}



inline jule::Bool _1bbdadc58_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1bbdae495_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1bbdae121_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05b7a57:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1bbdae495_fitsSize((*(_909_m)), _8940_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1c05b7a57:;
			++it;
			_906_i++;
			goto _iter_begin_1c05b7a57;
		}
		_iter_end_1c05b7a57:;
	};
	return -1LL;;
}



inline jule::Bool _1bbdae495_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2) {
	if ((_1bbd92dd5_typeData(&(_9813_e1)) != _1bbd92dd5_typeData(&(_9834_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c05b95d6:;
			{
				jule::Ptr<_1ad778ec2_Const> _1043_exprConst = _9834_e2.cast_ptr<_1ad778ec2_Const>(&__jule_any_type15);;
				return ((_1ad7d1711_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1ad7d5418_GtEq(_9813_e1.unsafe_cast_ptr<_1ad778ec2_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c05b964c:;
			{
				return (_9834_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c05b96b3:;
			{
				jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1ad7dee28_StructSubIdentExprModel>();;
				jule::Ptr<_1ad7dee28_StructSubIdentExprModel> _1103_ssi2 = _9834_e2.cast_ptr<_1ad7dee28_StructSubIdentExprModel>(&__jule_any_type100);;
				return (_1bbd944e1_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c05b9262:;
			{
				jule::Ptr<_1ad7da781_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1ad7da781_UnaryExprModel>();;
				jule::Ptr<_1ad7da781_UnaryExprModel> _1143_uem2 = _9834_e2.cast_ptr<_1ad7da781_UnaryExprModel>(&__jule_any_type112);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1bbdae495_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1c05b91eb:;
			{
				return false;;
			}
		}
		_match_end_1c05b9130:;
	};
}



inline void _1bbdae7c5_possibleBoundaryRemove(jule::Ptr<_1bbdacbe1_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05b9a37:;
		if (it != expr_end) {
			_1bbdac8a0_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c05c1566:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1bbd944e1_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1c05c1566;
							};
						}
						_iter_next_1c05c1566:;
						++it;
						_1277_i++;
						goto _iter_begin_1c05c1566;
					}
					_iter_end_1c05c1566:;
				};
			}
			_iter_next_1c05b9a37:;
			++it;
			goto _iter_begin_1c05b9a37;
		}
		_iter_end_1c05b9a37:;
	};
}



inline jule::Bool _1bbdaea8e_isBoundaryRiskyType(jule::Ptr<_1ad9b8596_TypeKind> _13628_t) {
	return (_1ad9bba1c_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1bbdaed58_isBoundaryValidType(jule::Ptr<_1ad9b8596_TypeKind> _14128_t) {
	return ((_1ad9bbca3_Slc(_14128_t.ptr()) != nullptr) || (_1ad9bba1c_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1bbdb0122_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1bbdb14db_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c05c3931:;
			{
				jule::Ptr<_1ad933a83_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1ad933a83_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1ad933a83_Var>());;
				};
				return _1bbdb0122_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c05c3db5:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1ad7dee28_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c05c3997:;
			{
				jule::Ptr<_1ad7da781_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1ad7da781_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1bbdb0122_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1c05c3cd8:;
	};
	return 0LLU;;
}



inline void _1bbdb319c_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _332_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1bbdb0881_Copy=_332_l1;
	_1bbdb0b7d_Deadcode=_332_l1;
	_1bbdb0e36_Append=_332_l1;
	_1bbdb1233_Math=_332_l1;
	_1bbdb14db_Access=_332_l1;
	_1bbdb1794_Inline=_332_l1;
	_1bbdb1a4c_Ptr=_332_l1;
	_1bbdb1e15_Cond=_332_l1;
	_1bbdb2157_Str=_332_l1;
	_1bbdb23ee_Slice=_332_l1;
	_1bbdb26a7_Assign=_332_l1;
	_1bbdb2960_Exceptional=_332_l1;
	_1bbdb2c18_Iter=_332_l1;
	_1bbdb2ec1_Dynamic=_332_l1;
}



inline void _1bbee7b50_detectEnabled(void) {
	_1bbee59a5_exprEnabled=(((_1bbdb1a4c_Ptr || _1bbdb1233_Math) || _1bbdb14db_Access) || _1bbdb1e15_Cond);
	_1bbee5bb4_scopeEnabled=((((((((_1bbdb1e15_Cond || _1bbdb0e36_Append) || _1bbdb0881_Copy) || _1bbdb2157_Str) || _1bbdb23ee_Slice) || _1bbdb26a7_Assign) || _1bbdb2960_Exceptional) || _1bbdb2c18_Iter) || _1bbdb2ec1_Dynamic);
}



inline jule::U64 _1bc0c4116_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1bc0030cd_isCopyOptimizable(jule::Ptr<_1ad985b90_Data>* _115523_expr) {
	if ((!((*((*(_115523_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_115523_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c0759556:;
			{
				return false;;
			}
		}
		_match_end_1c07594e0:;
	};
	return true;;
}



inline jule::Bool _1bc003496_isIterCopyOptimizable(jule::Ptr<_1ad985b90_Data>* _116627_expr, jule::Ptr<_1ad933a83_Var>* _116647_v) {
	if (((!((*((*(_116627_expr))))._field_Lvalue)) && (!(_1ad9b9e7c_Mutable((*((*(_116627_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_116647_v))))._field_Mutable)) && (!((*((*(_116627_expr))))._field_Mutable)));;
}



inline jule::Bool _1bc0038c5_captureVarHandling(jule::Ptr<_1bc0cdd35_ObjectCoder>* _117328_oc, jule::Ptr<_1ad7dd1bd_AnonFnExprModel>* _117351_m, jule::Ptr<_1ad933a83_Var>* _117383_v) {
	{
		auto expr = &((*((*(_117351_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c075b723:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _11749_cv = *it;
			{
				if ((_11749_cv == (*(_117383_v)))) {
					_1bc0ce550_write((*(_117328_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1bc01d68c_var(&((*((*(_117328_oc))))._field_Buf), (*(_117383_v)));
					return true;;
				};
			}
			_iter_next_1c075b723:;
			++it;
			goto _iter_begin_1c075b723;
		}
		_iter_end_1c075b723:;
	};
	return false;;
}



inline jule::Str _1bc015b4b_decomposeCommonEsq(jule::U8 _190823_b) {
	{
		auto &_match_expr{ _190823_b };
		
		if (_match_expr == '\\') {
			_case_begin_1c08cd675:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c08cd4dd:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c08cd554:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1c08cd048:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1c08cd0ae:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1c08cd136:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1c08cd1ad:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1c08cd235:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1c08cd6db:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1c08cd752:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1c08caa18:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c08cce8d:;
	};
}



inline jule::Str _1bc015e59_sbtoa(jule::U8 _193510_b) {
	if ((_193510_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_193510_b < 128LLU)) {
		jule::Str _19403_seq = _1bc015b4b_decomposeCommonEsq(_193510_b);;
		if (!(_19403_seq).empty()) {
			return _19403_seq;;
		};
		if (((32LL <= _193510_b) && (_193510_b <= 126LLU))) {
			return __jule_strFromByte(_193510_b);;
		};
	};
	jule::Str _19482_seq = _1ab15d029_FmtUint(static_cast<jule::U64>(_193510_b), 8LL);;
	if ((_19482_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19482_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19482_seq);;
}



inline void _1bc016245_cstrBytes(_1dd0b6912_Builder* _195519_s, jule::Str _195540_ctx) {
	{
		auto expr = &(_195540_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08d3317:;
		if (it != expr_end) {
			jule::U8 *_19569_b = it;
			{
				_1dd0c0dd3_WriteStr(_195519_s, _1bc015e59_sbtoa((*(_19569_b))));
			}
			_iter_next_1c08d3317:;
			++it;
			goto _iter_begin_1c08d3317;
		}
		_iter_end_1c08d3317:;
	};
}



inline void _1bc016575_cstrLit(_1dd0b6912_Builder* _196117_s, jule::Str _196138_ctx) {
	_1dd0c118b_WriteByte(_196117_s, '\"');
	_1bc016245_cstrBytes(_196117_s, _196138_ctx);
	_1dd0c118b_WriteByte(_196117_s, '\"');
}



inline void _1bc01691b_ftoa(_1dd0b6912_Builder* _196714_s, jule::F64 _196735_f, jule::I64 _196743_bitsize) {
	if ((_196743_bitsize != 32LL)) {
		if ((_196735_f == static_cast<jule::F64>(static_cast<jule::I64>(_196735_f)))) {
			_1bc016c07_itoa(_196714_s, static_cast<jule::I64>(_196735_f));
			return;;
		};
		if ((_196735_f == static_cast<jule::F64>(static_cast<jule::U64>(_196735_f)))) {
			_1bc016ee3_utoa(_196714_s, static_cast<jule::U64>(_196735_f));
			return;;
		};
	};
	jule::Str _19782_m = _1ab146b28_FmtFloat(_196735_f, 'f', -1LL, _196743_bitsize);;
	_1dd0c0dd3_WriteStr(_196714_s, _19782_m);
	if ((!(_1dd0a7e42_Contains(_19782_m, jule::Str::lit(".", 1))))) {
		_1dd0c0dd3_WriteStr(_196714_s, jule::Str::lit(".0", 2));
	};
}



inline void _1bc016c07_itoa(_1dd0b6912_Builder* _198514_s, jule::I64 _198535_x) {
	{
		
		if ((_198535_x == jule::MAX_I64)) {
			_case_begin_1c08d78b0:;
			{
				_1dd0c0dd3_WriteStr(_198514_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_198535_x == jule::MIN_I64)) {
			_case_begin_1c08d7959:;
			{
				_1dd0c0dd3_WriteStr(_198514_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1c08d778e:;
	};
	_1dd0c0dd3_WriteStr(_198514_s, _1ab15d3e2_FmtInt(_198535_x, 10LL));
	if (_1dd35aee7_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1dd0c118b_WriteByte(_198514_s, 'L');
	};
	_1dd0c118b_WriteByte(_198514_s, 'L');
}



inline void _1bc016ee3_utoa(_1dd0b6912_Builder* _200214_s, jule::U64 _200235_x) {
	{
		
		if ((_200235_x == jule::MAX_U64)) {
			_case_begin_1c08d9a49:;
			{
				_1dd0c0dd3_WriteStr(_200214_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1c08d9906:;
	};
	_1dd0c0dd3_WriteStr(_200214_s, _1ab15d029_FmtUint(_200235_x, 10LL));
	if (_1dd35aee7_Is64Bit(jule::Str::lit("arm64", 5))) {
		_1dd0c118b_WriteByte(_200214_s, 'L');
	};
	_1dd0c0dd3_WriteStr(_200214_s, jule::Str::lit("LU", 2));
}



inline void _1bc017642_operatorOverloadingBinary(_1dd0b6912_Builder* _201635_buf, jule::Ptr<_1ad718857_StructIns>* _201663_s, jule::Str* _201685_l, jule::Str* _20173_r, jule::U64 _201711_op, jule::Str _201726_kind) {
	;
	jule::Ptr<_1ad7ea84b_FnIns> _20196_f = static_cast<jule::Ptr<_1ad7ea84b_FnIns>>(nullptr);;
	if ((_201711_op == static_cast<jule::U64>(51LLU))) {
		_20196_f=_1bb0a7eec_FindOperator(_201663_s, static_cast<jule::U64>(50LLU), false);
		_1dd0c118b_WriteByte(_201635_buf, '!');
	} else {
		_20196_f=_1bb0a7eec_FindOperator(_201663_s, _201711_op, false);
	};
	if ((_20196_f == nullptr)) {
		if (((_201711_op == static_cast<jule::U64>(50LLU)) || (_201711_op == static_cast<jule::U64>(51LLU)))) {
			static__1bc01d0b5_structureIns(_201635_buf, _201663_s);
			_1dd0c0dd3_WriteStr(_201635_buf, jule::Str::lit("_eq", 3));
			goto _julec_label_1c08dd553;
		};
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2033:3"));;
	};
	static__1bc01c416_funcIns(_201635_buf, &(_20196_f));
	_julec_label_1c08dd553:;
	_1dd0c0dd3_WriteStr(_201635_buf, jule::Str::lit("(&", 2));
	_1dd0c0dd3_WriteStr(_201635_buf, (*(_201685_l)));
	_1dd0c0dd3_WriteStr(_201635_buf, jule::Str::lit(", ", 2));
	_1dd0c0dd3_WriteStr(_201635_buf, (*(_20173_r)));
	_1dd0c118b_WriteByte(_201635_buf, ')');
}



inline jule::Slice<jule::U8> _1bc0db67d_concatAllParts(jule::Slice<jule::Ptr<_1ad6ceb70_Token>> _137619_parts) {
	jule::I64 _13776_n = 0LL;;
	{
		auto expr = &(_137619_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b9db65:;
		if (it != expr_end) {
			jule::Ptr<_1ad6ceb70_Token> *_13789_part = it;
			{
				_13776_n+=(*((*(_13789_part))))._field_Kind.len();
			}
			_iter_next_1c0b9db65:;
			++it;
			goto _iter_begin_1c0b9db65;
		}
		_iter_end_1c0b9db65:;
	};
	if ((_13776_n == 0LL)) {
		return nullptr;;
	};
	_1dd0b6912_Builder _13846_s = static__1dd0b74d4_New(_13776_n);;
	{
		auto expr = &(_137619_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b9ca65:;
		if (it != expr_end) {
			jule::Ptr<_1ad6ceb70_Token> *_13859_p = it;
			{
				_1dd0c0dd3_WriteStr(&_13846_s, (*((*(_13859_p))))._field_Kind);
			}
			_iter_next_1c0b9ca65:;
			++it;
			goto _iter_begin_1c0b9ca65;
		}
		_iter_end_1c0b9ca65:;
	};
	return _1dd0c217b_Buf(&_13846_s);;
}



inline jule::Bool _1bc0db98b_isHeadDecl(jule::Ptr<_1ad7e778d_Fn>* _139220_m) {
	if ((((*((*(_139220_m))))._field_Generics.len() > 0LL) || ((*((*(_139220_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1bb0a52b3_IsOpMethod(_139220_m)) {
		return true;;
	};
	jule::Ptr<_1ad7ea84b_FnIns> _13996_mi = (*((*(_139220_m))))._field_Instances[0LL];;
	;
	return static__1ad93505c_Dispose(_1ad719902_FindMethod((*(_13996_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1bc0dbc55_defaultEq(jule::Ptr<_1ad718857_StructIns>* _140515_s) {
	return ((*((*(_140515_s))))._field_Comparable && ((*((*(_140515_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1bc0eab43_ableToInit(jule::Ptr<_1ad9b8596_TypeKind>* _44920_t) {
	return (!(_1ad9b9443_Binded((*(_44920_t)).ptr())));;
}



inline jule::Bool _1bc0eae1d_shouldInitialized(jule::Ptr<_1ad9b8596_TypeKind>* _45627_t) {
	if ((!(_1bc0eab43_ableToInit(_45627_t)))) {
		return false;;
	};
	jule::Ptr<_1ad9c16ae_Prim> _4602_prim = _1ad9bac4c_Prim((*(_45627_t)).ptr());;
	if ((_4602_prim != nullptr)) {
		return ((!(_1ad9c4e10_IsAny(_4602_prim))) && (!(_1ad9c4b79_IsStr(_4602_prim))));;
	};
	{
		
		if ((_1ad9baed3_Sptr((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1c0ce31b6:;
			{
				return false;;
			}
		}
		else if ((_1ad9bc7dc_Map((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1c0ce3e42:;
			{
				return false;;
			}
		}
		else if ((_1ad9bbca3_Slc((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1c0ce324e:;
			{
				return false;;
			}
		}
		else if ((_1ad9bc556_Trait((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1c0ce32b5:;
			{
				return false;;
			}
		}
		else if ((_1ad9bc039_Fn((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1c0ce40c9:;
			{
				return false;;
			}
		}
		else if ((_1ad9bba1c_Arr((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1c0ce4140:;
			{
				jule::Ptr<_1ad9c7ece_Arr> _4767_arr = _1ad9bba1c_Arr((*(_45627_t)).ptr());;
				return _1bc0eab43_ableToInit(&((*(_4767_arr))._field_Elem));;
			}
		}
		else if ((_1ad9bc2c0_Struct((*(_45627_t)).ptr()) != nullptr)) {
			_case_begin_1c0ce41a6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c0ce30b7:;
			{
				return true;;
			}
		}
		_match_end_1c0ce34a2:;
	};
}



inline void _1dd46ea89_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_1bc355034_toStr(_3022_msg));
}



inline void _1dd46ed0e_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1dd46ea89_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _1dd46e8ad_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1dd46e8ad_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d90dac:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1c0d90dac:;
			++it;
			goto _iter_begin_1c0d90dac;
		}
		_iter_end_1c0d90dac:;
	};
	_1dd0b6912_Builder _496_s = static__1dd0b74d4_New(32LL);;
	;
	{
		auto expr = &(_1dd46e8ad_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d91e9b:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				_1dd0c0dd3_WriteStr(&_496_s, (*(_519_part))[0LL]);
				_1dd0c0dd3_WriteStr(&_496_s, _1dd0a3613_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
				_1dd0c0dd3_WriteStr(&_496_s, (*(_519_part))[1LL]);
				if (((_516_i + 1LL) < 5LL)) {
					_1dd0c118b_WriteByte(&_496_s, '\n');
				};
			}
			_iter_next_1c0d91e9b:;
			++it;
			_516_i++;
			goto _iter_begin_1c0d91e9b;
		}
		_iter_end_1c0d91e9b:;
	};
	jule::outln(_1c0d92e69_toStr(_496_s));
}



inline void _1dd470040_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1dd46ea89_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(_1bc355034_toStr(jule::Str::lit("jule0.1.1 @master", 17)));
}



inline void _1dd47024e_toolDistos(void) {
	jule::out(_1bc355034_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::out(_1c0d9708e_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::out(_1bc355034_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1c0d9708e_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::out(_1bc355034_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1c0d9708e_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::outln(_1bc355034_toStr(jule::Str()));
}



inline void _1dd4703b4_toolDistarch(void) {
	jule::out(_1bc355034_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::out(_1c0da67da_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::out(_1bc355034_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1c0da67da_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::out(_1bc355034_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1c0da67da_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::outln(_1bc355034_toStr(jule::Str()));
}



inline void _1dd4705b2_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(_1bc355034_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1dd46ea89_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1c0daa39e:;
			{
				_1dd47024e_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1c0da88a8:;
			{
				_1dd4703b4_toolDistarch();
			}
		}
		else {
			_case_begin_1c0da86aa:;
			{
				_1dd46ea89_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1c0da8787:;
	};
}



inline void _1dd4707e3_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1dd46ea89_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(_1bc355034_toStr(jule::Str::lit("julec version: jule0.1.1 @master", 32)));
	jule::outln(_1bc355034_toStr(jule::Str::lit("architecture: arm64", 19)));
	jule::outln(_1bc355034_toStr(jule::Str::lit("operating system: darwin", 24)));
	jule::outln(_1bc355034_toStr((jule::Str::lit("default compiler: ", 18) + _1dd46ade8_Compiler)));
	jule::outln(_1bc355034_toStr((jule::Str::lit("default C++ standard: ", 22) + _1dd46c504_CppStd)));
}



inline void _1dd470b34_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(_1bc355034_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1dd46ea89_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1c0dadd64:;
			{
				({
					auto except = static__1dbd07335_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1dd46ea89_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1c0dad1a4:;
			{
				_1dd46ea89_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1c0dad7c0:;
	};
}



inline jule::Bool _1dd470d76_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1c0db030a:;
			{
				_1dd46ed0e_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1c0db0371:;
			{
				_1dd470040_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1c0db03d7:;
			{
				_1dd4705b2_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1c0daeace:;
			{
				_1dd4707e3_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1c0daeb45:;
			{
				_1dd470b34_mod(_15320_args);
			}
		}
		else {
			_case_begin_1c0dad946:;
			{
				return false;;
			}
		}
		_match_end_1c0dae42a:;
	};
	return true;;
}



inline void _1dd47101e_showInfo(void) {
	jule::outln(_1bc355034_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1896_args = _1dbc4676e_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1dd47101e_showInfo();
		return;;
	};
	if (_1dd470d76_processCommand(&(_1896_args))) {
		return;;
	};
	_1bc16a520_compileCommand(&(_1896_args));
}



inline void _1bc167440_init(void) {
	_1dd46ade8_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1dbd064aa_File> _1bc167709_openOutput(jule::Str* _3016_path) {
	jule::Str _312_dir = _1dd0c5e82_Dir((*(_3016_path)));;
	({
		auto except = static__1dbd05322_Of(_312_dir);
		if (!except.ok()) {
			({
				auto except = static__1dd0c83a2_Create(_312_dir);
				if (!except.ok()) {
					_1ab160a32_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1dbd06bc5_Create((*(_3016_path)));
		(except.ok()) ? (except.result) : ({
			_1ab160a32_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1bc1678a2_clearObjects(void) {
	({
		auto except = static__1dbd038d6_Remove(_1bc168a07_getCompilePath());
		if (!except.ok()) {
			jule::outln(_1bc355034_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__1dd0c85d3_Remove(_1bc166cad_OutDir);
}



inline void _1bc167bb0_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd) {
	jule::Ptr<_1dd40e1bb_Cmd> _606_cmd = static__1dd40e60b_New(_5914_compiler);;
	(*(_606_cmd))._field_Args=_1dd0a7abd_Split(_5929_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1dd40e809_Spawn(_606_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1c0db62cd:;
					{
						static__1dd49a268_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1c0db63cc:;
					{
						static__1dd49a268_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1c0db5cb1:;
					{
						static__1dd49a268_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1c0db5dc1:;
			};
			_1ab160a32_Throw(jule::Str());
		}
	});
	jule::I64 _732_status = ({
		auto except = _1dd40ec8d_Wait(_606_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:73:12"));
		(except.result);
	});;
	if ((_732_status != 0LL)) {
		jule::Str _753_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _1dd46ade8_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1dd49a268_Print(jule::Str::lit("\033[31m", 5), _753_errorMessage);
		_1ab160a32_Throw(jule::Str());
	};
	_1bc1678a2_clearObjects();
}



inline jule::Bool _1bc167e79_isCppSourceFile(jule::Str _8620_path) {
	jule::I64 _872_offset = _1dd0a667c_FindLastByte(_8620_path, '.');;
	if ((_872_offset == -1LL)) {
		return false;;
	};
	return _1dd3493c0_IsValidCppExt(_8620_path.slice(_872_offset));;
}



inline void _1bc1681aa_pushCompCmdClang(_1dd0b6912_Builder* _9426_cmd) {
	_1dd0c0dd3_WriteStr(_9426_cmd, jule::Str::lit("-Wno-everything ", 16));
	_1dd0c0dd3_WriteStr(_9426_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1dd46c504_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c0db90d3:;
			{
				_1dd0c0dd3_WriteStr(_9426_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c0dba1d3:;
			{
				_1dd0c0dd3_WriteStr(_9426_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c0dba249:;
			{
				_1dd0c0dd3_WriteStr(_9426_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1c0dba0b2:;
	};
	_1dd0c118b_WriteByte(_9426_cmd, ' ');
	if (_1dd46d659_Production) {
		_1dd0c0dd3_WriteStr(_9426_cmd, jule::Str::lit("-O3 ", 4));
		_1dd0c0dd3_WriteStr(_9426_cmd, jule::Str::lit("-flto ", 6));
		_1dd0c0dd3_WriteStr(_9426_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1dd0c0dd3_WriteStr(_9426_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1dd0c0dd3_WriteStr(_9426_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1bc1683db_pushCompCmdGcc(_1dd0b6912_Builder* _12024_cmd) {
	_1dd0c0dd3_WriteStr(_12024_cmd, jule::Str::lit("-w ", 3));
	_1dd0c0dd3_WriteStr(_12024_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1dd46c504_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c0dbb68a:;
			{
				_1dd0c0dd3_WriteStr(_12024_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c0dbd219:;
			{
				_1dd0c0dd3_WriteStr(_12024_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c0dbd280:;
			{
				_1dd0c0dd3_WriteStr(_12024_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1c0dbd0e8:;
	};
	_1dd0c118b_WriteByte(_12024_cmd, ' ');
	if (_1dd46d659_Production) {
		_1dd0c0dd3_WriteStr(_12024_cmd, jule::Str::lit("-O3 ", 4));
		_1dd0c0dd3_WriteStr(_12024_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_1dd0c0dd3_WriteStr(_12024_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_1dd0c0dd3_WriteStr(_12024_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1bc168870_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1bb09dcd4_IR>* _14636_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1473_compiler = &(_1dd46c2e5_CompilerPath);;
	_1dd0b6912_Builder _1486_cmd = static__1dd0b74d4_New(64LL);;
	{
		auto &_match_expr{ _1dd46ade8_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c0dc0e0e:;
			{
				_1bc1683db_pushCompCmdGcc(&(_1486_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c0dc143c:;
			{
				_1bc1681aa_pushCompCmdClang(&(_1486_cmd));
			}
		}
		_match_end_1c0dc130a:;
	};
	{
		auto expr = &((*((*(_14636_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0dc16e5:;
		if (it != expr_end) {
			jule::Ptr<_1ad8e1bea_ImportInfo> *_1589_u = it;
			{
				if (((*((*(_1589_u))))._field_Binded && _1bc167e79_isCppSourceFile((*(*(_1589_u)).alloc)._field_Path))) {
					_1dd0c0dd3_WriteStr(&_1486_cmd, (*(*(_1589_u)).alloc)._field_Path);
					_1dd0c118b_WriteByte(&_1486_cmd, ' ');
				};
			}
			_iter_next_1c0dc16e5:;
			++it;
			goto _iter_begin_1c0dc16e5;
		}
		_iter_end_1c0dc16e5:;
	};
	if (!(_1bc167286_Out).empty()) {
		_1dd0c0dd3_WriteStr(&_1486_cmd, jule::Str::lit("-o ", 3));
		_1dd0c0dd3_WriteStr(&_1486_cmd, _1bc167286_Out);
		_1dd0c118b_WriteByte(&_1486_cmd, ' ');
	};
	_1dd0c0dd3_WriteStr(&_1486_cmd, _14618_sourcePath);
	{
		auto expr = &((*((*(_14636_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0dc4286:;
		if (it != expr_end) {
			jule::Str *_1739_pass = it;
			{
				_1dd0c118b_WriteByte(&_1486_cmd, ' ');
				_1dd0c0dd3_WriteStr(&_1486_cmd, (*(_1739_pass)));
			}
			_iter_next_1c0dc4286:;
			++it;
			goto _iter_begin_1c0dc4286;
		}
		_iter_end_1c0dc4286:;
	};
	if ((_1dd46607a_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		_1dd0c0dd3_WriteStr(&_1486_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1473_compiler));
	__jule_func_result.__jule_result_arg1 = _1dd0c16ca_Str(&_1486_cmd);
	return __jule_func_result;;
}



inline jule::Str _1bc168a07_getCompilePath(void) {
	return _1dd0c528e_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1bc166cad_OutDir; (*it++) = _1bc166ecd_OutName; __jule_collection; }));;
}



inline void _1bc168c38_applyTargetIndependentOptimizations(jule::Ptr<_1bb09dcd4_IR>* _19245_ir) {
	jule::Ptr<_1bbee5d4b_Optimizer> _1936_opt = static__1bbee6302_New(_19245_ir);;
	_1bbee78db_Optimize(_1936_opt.ptr());
}



inline void _1bc168dd1_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1dd46ade8_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c0dc6a4c:;
			{
				_1ab160a32_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c0dc6981:;
			{
				if ((_1dd46c2e5_CompilerPath).empty()) {
					_1dd46c2e5_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c0dc6640:;
			{
				if ((_1dd46c2e5_CompilerPath).empty()) {
					_1dd46c2e5_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1c0dc55ea:;
			{
				_1ab160a32_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1dd46ade8_Compiler));
			}
		}
		_match_end_1c0dc6475:;
	};
}



inline void _1bc1690e0_checkTargetArch(jule::Str _21420_arch) {
	if ((((_21420_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1ab160a32_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _21420_arch));
	};
}



inline void _1bc169321_checkTargetOs(jule::Str _22218_os) {
	if ((((_22218_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1ab160a32_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _22218_os));
	};
}



inline void _1bc169552_checkTargetFlag(jule::Str* _23021_target) {
	if (((*(_23021_target))).empty()) {
		_1ab160a32_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2352_parts = _1dd0a7abd_Split((*(_23021_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2352_parts.len() != 2LL)) {
		_1ab160a32_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_23021_target))));
	};
	jule::Str _2402_os;
	jule::Str _2406_arch;
	({
		jule::Str ___jule_assign_arg = _2352_parts[0LL];
		jule::Str _1___jule_assign_arg = _2352_parts[1LL];
		_2402_os = ___jule_assign_arg;
		_2406_arch = _1___jule_assign_arg;
	});
	if ((!_2402_os.equal("native", 6))) {
		_1bc169321_checkTargetOs(_2402_os);
		_1dd46607a_Os=_2402_os;
	};
	if ((!_2406_arch.equal("native", 6))) {
		_1bc1690e0_checkTargetArch(_2406_arch);
		_1dd466333_Arch=_2406_arch;
	};
	_1ad875ee2_UpdateTarget();
}



inline void _1bc169783_checkOptFlag(jule::Str* _25318_opt) {
	if (((*(_25318_opt))).empty()) {
		_1ab160a32_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_25318_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1c0dcd977:;
			{
				goto _match_end_1c0dcd218;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1c0dcda65:;
			{
				_1bbdb319c_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1c0dcd306:;
			{
				_1ab160a32_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_25318_opt))));
			}
		}
		_match_end_1c0dcd218:;
	};
}



inline void _1bc169b4b_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1dd46c504_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c0dce8ce:;
			{
				goto _match_end_1c0dce417;
			}
		}
		else {
			_case_begin_1c0dcd37d:;
			{
				_1ab160a32_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1dd46c504_CppStd));
			}
		}
		_match_end_1c0dce417:;
	};
}



inline jule::Slice<jule::Str> _1bc169d16_checkFlags(jule::Slice<jule::Str>* _27916_args) {
	jule::Str _2806_opt = jule::Str::lit("L0", 2);;
	jule::Str _2816_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1bc161ea6_FlagSet> _2836_fs = static__1bc1622c5_New();;
	_1c0dd1282_AddVar(_2836_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2806_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1c0dd1282_AddVar(_2836_fs, ((jule::Ptr<jule::Str>)((&(_2816_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1c0dd1282_AddVar(_2836_fs, ((jule::Ptr<jule::Str>)((&(_1bc167286_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1dd46c735_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1dd46c9dd_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1c0dd1282_AddVar(_2836_fs, ((jule::Ptr<jule::Str>)((&(_1dd46ade8_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1c0dd1282_AddVar(_2836_fs, ((jule::Ptr<jule::Str>)((&(_1dd46c2e5_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1dd46d659_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1dd46d04e_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1dd46d417_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1c0dd1282_AddVar(_2836_fs, ((jule::Ptr<jule::Str>)((&(_1dd46c504_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb0881_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb0b7d_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb0e36_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb1233_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb14db_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb1794_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb1a4c_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb1e15_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb2157_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb23ee_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb26a7_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb2960_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb2c18_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1c0dda38a_AddVar(_2836_fs, ((jule::Ptr<jule::Bool>)((&(_1bbdb2ec1_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3116_content = ({
		auto except = _1bc163194_Parse(_2836_fs, (*(_27916_args)));
		(except.ok()) ? (except.result) : ({
			_1ab160a32_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1bc168dd1_checkCompilerFlag();
	_1bc169b4b_checkCppStdFlag();
	_1bc169552_checkTargetFlag(&(_2816_target));
	_1bc169783_checkOptFlag(&(_2806_opt));
	return _3116_content;;
}



inline void _1bc16a025_setupSemaFlags(jule::I64* _32424_flags) {
	if (_1dd46c735_Shadowing) {
		(*(_32424_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1bb09dcd4_IR> _1bc16a2de_buildIr(jule::Slice<jule::Str>* _33013_args) {
	jule::Slice<jule::Str> _3312_content = _1bc169d16_checkFlags(_33013_args);;
	jule::I64 _3336_semaFlags = static_cast<jule::I64>(0LL);;
	_1bc16a025_setupSemaFlags(&(_3336_semaFlags));
	if ((_3312_content.len() == 0LL)) {
		_1ab160a32_Throw(_1dd3568d8_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3312_content.len() > 1LL)) {
		_1ab160a32_Throw((jule::Str::lit("undefined content: ", 19) + _3312_content[1LL]));
	};
	jule::Str _3416_path;
	jule::Bool _34112_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1dd0c57de_Abs(_3312_content[0LL]);
		_3416_path = __jule_assign_result.__jule_result_arg0;
		_34112_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34112_ok))) {
		_1ab160a32_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1dbd08545_Status> _3472_inf = ({
		auto except = static__1dbd05322_Of(_1dd46550d_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ab160a32_Throw(_1dd3568d8_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_1dbd08545_Status>(nullptr);});
	});;
	if ((!(_1dbd08952_IsDir(_3472_inf.ptr())))) {
		_1ab160a32_Throw(_1dd3568d8_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1bb09dcd4_IR> _3556_ir;
	jule::Slice<_1dd356476_Log> _35510_logs;
	({
		__jule_tuple_x_1bb09dcd4_IR__jule_tuple_s_1dd356476_Log __jule_assign_result = static__1bb09e2ac_Build(_3416_path, _3336_semaFlags);
		_3556_ir = __jule_assign_result.__jule_result_arg0;
		_35510_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3556_ir == nullptr) && (_35510_logs == nullptr))) {
		_1ab160a32_Throw(_1dd3568d8_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3416_path, &__jule_any_type5); __jule_collection; })));
	};
	if ((_35510_logs != nullptr)) {
		static__1ab160108_PrintLogs(&(_35510_logs));
		_1ab160a32_Throw(jule::Str());
	};
	return _3556_ir;;
}



inline void _1bc16a520_compileCommand(jule::Slice<jule::Str>* _37024_args) {
	((*(_37024_args))).mut_slice(1LL);;
	if ((*(_37024_args))[0LL].equal("test", 4)) {
		_1dd46cc96_Test=true;
		((*(_37024_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1bb09dcd4_IR> _3766_ir = _1bc16a2de_buildIr(_37024_args);;
	;
	if ((!(_1dd46cc96_Test))) {
		jule::Ptr<_1ad7e778d_Fn> _3817_main = _1ad8e5a34_FindFn((*(_3766_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_3817_main == nullptr)) {
			_1ab160a32_Throw(_1dd3568d8_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1bc168c38_applyTargetIndependentOptimizations(&(_3766_ir));
	_1bb0a0324_Order(_3766_ir);
	jule::Str _3922_compPath = _1bc168a07_getCompilePath();;
	jule::Str _3932_compiler;
	jule::Str _39312_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1bc168870_genCompileCmd(_3922_compPath, &(_3766_ir));
		_3932_compiler = __jule_assign_result.__jule_result_arg0;
		_39312_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1bc0cdd35_ObjectCoder> _3956_oc = static__1bc0ce297_New(&(_3766_ir), _1bc0cba36_SerializationInfo{._field_Compiler=_3932_compiler, ._field_CompilerCommand=_39312_compilerCmd});;
	if (_1dd46cc96_Test) {
		jule::Ptr<_1bc0183ac_TestCoder> _4007_tc = static__1bc018863_New(&(_3956_oc));;
		_1bc019bd8_Serialize(_4007_tc);
	} else {
		_1bc0db2e8_Serialize(_3956_oc);
	};
	jule::Ptr<_1dbd064aa_File> _4066_file = _1bc167709_openOutput(&(_3922_compPath));;
	({
		auto except = _1dbd03d6a_Write(_4066_file.ptr(), _1dd0c217b_Buf(&(*(_3956_oc))._field_Buf));
		if (!except.ok()) {
			_1ab160a32_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1dbd07a72_Close(_4066_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:410:2"));
	});
	if ((!(_1dd46c9dd_Transpilation))) {
		_1bc167bb0_compileIr(_3932_compiler, _39312_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1dd466476_init();
	_1ad876168_init();
	_1bc167440_init();

}

inline jule::Bool __jule_anon1bdb42479(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e96e6_ParamIns> _25021_p1, jule::Ptr<_1ad7e96e6_ParamIns> _25036_p2) {
	if (((*((*(_25021_p1))._field_Decl))._field_Mutable != (*(*(_25036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1ad7e6418_IsSelf((*(_25021_p1))._field_Decl)) {
		if ((!(_1ad7e6418_IsSelf((*(_25036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1ad7e669e_IsRef((*(_25021_p1))._field_Decl) != _1ad7e669e_IsRef((*(_25036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Reference != (*(*(_25036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_25036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1ad9b8cd3_Equal((*_25021_p1.alloc)._field_Kind, (*(_25036_p2))._field_Kind);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbacd1e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _6521_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _6536_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdbacd1e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbacd1e_ctx>();
	return _1ad8851dd__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbaec99(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _7221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _7236_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdbaec99_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbaec99_ctx>();
	return _1ad8855d9__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbc3807(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _17821_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _17836_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdbc3807_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbc3807_ctx>();
	return _1ad888411__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbc5782(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _18521_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _18536_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdbc5782_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbc5782_ctx>();
	return _1ad88880c__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbd6ba0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _28321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _28336_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdbd6ba0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbd6ba0_ctx>();
	return _1ad88b623__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdbede3c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _40221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _40236_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdbede3c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdbede3c_ctx>();
	return _1ad88e45b__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc00db7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _40921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _40936_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdc00db7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc00db7_ctx>();
	return _1ad88ec53__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc02d42(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _41621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _41636_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdc02d42_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc02d42_ctx>();
	return _1ad88e857__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc8c805(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _97421_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _97436_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdc8c805_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc8c805_ctx>();
	return _1ad8946b4__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc8e780(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _98121_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _98136_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdc8e780_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc8e780_ctx>();
	return _1ad894ab0__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc9170a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _98821_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _98836_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdc9170a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc9170a_ctx>();
	return _1ad8953a7__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc93685(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _99521_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _99536_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdc93685_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc93685_ctx>();
	return _1ad8957a3__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc95610(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _100221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _100236_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdc95610_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc95610_ctx>();
	return _1ad895b9e__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc9758a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _100921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _100936_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdc9758a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc9758a_ctx>();
	return _1ad89609a__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc99515(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _101621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _101636_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdc99515_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc99515_ctx>();
	return _1ad896496__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc9b490(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _102321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _102336_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdc9b490_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc9b490_ctx>();
	return _1ad896892__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdc9d55d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _103021_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _103036_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdc9d55d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdc9d55d_ctx>();
	return _1ad896c8d__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdca04d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _103721_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _103736_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdca04d8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdca04d8_ctx>();
	return _1ad899367__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdca2463(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _104421_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _104436_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdca2463_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdca2463_ctx>();
	return _1ad898278__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdca43dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _105121_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _105136_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdca43dd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdca43dd_ctx>();
	return _1ad897189__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdca6368(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _105821_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _105836_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdca6368_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdca6368_ctx>();
	return _1ad897585__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdca82e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _106521_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _106536_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdca82e3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdca82e3_ctx>();
	return _1ad897981__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcaa26d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _107221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _107236_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdcaa26d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdcaa26d_ctx>();
	return _1ad897d7c__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcac1e8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _107921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _107936_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdcac1e8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdcac1e8_ctx>();
	return _1ad898674__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcae173(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _108621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _108636_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdcae173_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdcae173_ctx>();
	return _1ad898a70__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcb10ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _109321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _109336_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdcb10ed_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdcb10ed_ctx>();
	return _1ad898e6b__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcb3078(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _110021_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _110036_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdcb3078_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdcb3078_ctx>();
	return _1ad894eab__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdce41b9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _126221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _126236_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdce41b9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdce41b9_ctx>();
	return _1ad89a6dc__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdce6144(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _126921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _126936_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdce6144_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdce6144_ctx>();
	return _1ad89aad8__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdce80be(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _127621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _127636_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdce80be_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdce80be_ctx>();
	return _1ad89aed4__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcea049(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _128321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _128336_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdcea049_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdcea049_ctx>();
	return _1ad89b3d0__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcebec4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _129021_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _129036_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdcebec4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdcebec4_ctx>();
	return _1ad89b7cb__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdcede4e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _129721_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _129736_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdcede4e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdcede4e_ctx>();
	return _1ad89bbc7__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd00dc9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _130421_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _130436_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd00dc9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd00dc9_ctx>();
	return _1ad89c0c3__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd15ae2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _142921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _142936_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd15ae2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd15ae2_ctx>();
	return _1ad89ed73__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd17a6c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _143621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _143636_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd17a6c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd17a6c_ctx>();
	return _1ad8a026e__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd199e7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _144321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _144336_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd199e7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd199e7_ctx>();
	return _1ad8a066a__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd7d8d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _194921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _194936_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd7d8d5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd7d8d5_ctx>();
	return _1ad8a40b9__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd80860(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _195621_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _195636_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd80860_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd80860_ctx>();
	return _1ad8a44b5__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd827da(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _196321_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _196336_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd827da_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd827da_ctx>();
	return _1ad8a48b1__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd84765(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _197021_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _197036_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd84765_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd84765_ctx>();
	return _1ad8a4cac__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd866e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _197721_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _197736_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd866e0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd866e0_ctx>();
	return _1ad8a51a8__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd8866a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _198421_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _198436_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd8866a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd8866a_ctx>();
	return _1ad8a55a4__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd8a5e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _199121_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _199136_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd8a5e5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd8a5e5_ctx>();
	return _1ad8a59a0__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd8c570(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _199821_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _199836_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd8c570_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd8c570_ctx>();
	return _1ad8a5d9b__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd8e63d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _200521_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _200536_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd8e63d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd8e63d_ctx>();
	return _1ad8a6297__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd915b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _201221_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _201236_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd915b8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd915b8_ctx>();
	return _1ad8a6693__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_1ad985b90_Data> __jule_anon_1bdd93543(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad9878b7_eval>* _201921_e, jule::Ptr<_1ad6ed221_FnCallExpr>* _201936_fc, jule::Ptr<_1ad985b90_Data>* ) {
	jule::Ptr<__jule_anon_1bdd93543_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd93543_ctx>();
	return _1ad8a6a8e__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_1bdd9e818(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad90ed6c_sema>* _6415_sema, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1bdd9e818_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdd9e818_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdda08c4:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1ad7023bd_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1ad9b6de1_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1bdda08c4;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad9b8596_TypeKind>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdda3663:;
					if (it != expr_end) {
						jule::Ptr<_1ad6e51b3_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1ad9b8596_TypeKind> _7310_kind = _1ad917171_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1ad9d897e_Lookup_mptr_data4), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type77) {
										_case_begin_1bdda54bc:;
										{
											jule::Ptr<_1ad6e57bd_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1ad6e57bd_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1ad8ab3e0_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1bdda6006;
											};
										}
									}
									_match_end_1bdda5445:;
								};
								return false;;
							};
							_julec_label_1bdda6006:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad9b8596_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1bdda3663:;
						++it;
						goto _iter_begin_1bdda3663;
					}
					_iter_end_1bdda3663:;
				};
			}
			_iter_next_1bdda08c4:;
			++it;
			_659_i++;
			goto _iter_begin_1bdda08c4;
		}
		_iter_end_1bdda08c4:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1be1b3830(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e1bea_ImportInfo> _48635_spkg) {
	jule::Ptr<__jule_anon_1be1b3830_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be1b3830_ctx>();
	return ((!(_1ad8dbde3_isImplicitImport(_48635_spkg))) && ((*((*(__jule_closure_ctx.alloc->_48528_pkg))))._field_Path == (*(_48635_spkg))._field_Path));;
}

inline jule::Bool __jule_anon_1be2c4710(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad90ed6c_sema>* _83342_sema) {
	jule::Ptr<__jule_anon_1be2c4710_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be2c4710_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_82647_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2c5711:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e96e6_ParamIns> _83516_p = *it;
			{
				if ((!(_1ad7e6418_IsSelf((*(_83516_p))._field_Decl.ptr())))) {
					(*_83516_p.alloc)._field_Kind=_1ad91ba49_buildNonGenericTypeKind((*(_83342_sema)), &((*((*(*(_83516_p))._field_Decl.alloc)._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_82711_generics), __jule_closure_ctx.alloc->_82663_ignored);
					__jule_func_result=(__jule_func_result && ((*_83516_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1be2c5711:;
			++it;
			goto _iter_begin_1be2c5711;
		}
		_iter_end_1be2c5711:;
	};
	if ((!(_1ad7e7c44_IsVoid((*__jule_closure_ctx.alloc->_82647_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_82647_f.alloc)._field_Result=_1ad91ba49_buildNonGenericTypeKind((*(_83342_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_82647_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_82711_generics), __jule_closure_ctx.alloc->_82663_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_82647_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1be2dc6d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad90ed6c_sema>* _93642_sema) {
	jule::Ptr<__jule_anon_1be2dc6d4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be2dc6d4_ctx>();
	return __jule_closure_ctx.alloc->_92946_algo(_93642_sema, &(__jule_closure_ctx.alloc->_9347_generics));;
}

inline jule::Bool __jule_anon_1be2e1ebe(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad90ed6c_sema>* _95237_sema, jule::Slice<jule::Ptr<_1ad9b77a4_TypeAlias>>* _95255_generics) {
	jule::Ptr<__jule_anon_1be2e1ebe_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be2e1ebe_ctx>();
	jule::Bool _9538_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2e3465:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e96e6_ParamIns> _95416_p = *it;
			{
				if (_1ad7e6418_IsSelf((*(_95416_p))._field_Decl.ptr())) {
					if (((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner == nullptr)) {
						goto _iter_next_1be2e3465;
					};
					if (_1ad7e669e_IsRef((*(_95416_p))._field_Decl)) {
						(*_95416_p.alloc)._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad9c51da_Sptr>(_1ad9c51da_Sptr{._field_Elem=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data23)});
					} else {
						(*_95416_p.alloc)._field_Kind=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Owner, (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data0)});
					};
				} else {
					(*(_95416_p))._field_Kind=_1ad9187c1_buildTypeWithGenerics((*(_95237_sema)), &((*((*((*_95416_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_95255_generics)), (*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Refers);
					if (((*_95416_p.alloc)._field_Kind != nullptr)) {
						_1ad91d793_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_95416_p));
					} else {
						_9538_ok=false;
					};
				};
			}
			_iter_next_1be2e3465:;
			++it;
			goto _iter_begin_1be2e3465;
		}
		_iter_end_1be2e3465:;
	};
	if ((!(_1ad7e7c44_IsVoid((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Result=_1ad9187c1_buildTypeWithGenerics((*(_95237_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_94837_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_95255_generics)), (*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Refers);
		_9538_ok=(((*__jule_closure_ctx.alloc->_94837_f.alloc)._field_Result != nullptr) && _9538_ok);
	};
	return _9538_ok;;
}

inline jule::Bool __jule_anon_1be85087e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e1bea_ImportInfo> _187243_imp) {
	jule::Ptr<__jule_anon_1be85087e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be85087e_ctx>();
	return ((*(_187243_imp))._field_Alias == (*((*(__jule_closure_ctx.alloc->_187133_s))._field_Namespace))._field_Kind);;
}

inline jule::Str __jule_anon1beb75533(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def) {
	{
		auto &_match_expr{ (*(_85519_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1beb76633:;
			{
				return (*((*(_85519_def)).cast_ptr<_1ad9b77a4_TypeAlias>(&__jule_any_type8)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1beb76457:;
			{
				return (*((*(_85519_def)).cast_ptr<_1ad7159ec_Struct>(&__jule_any_type9)))._field_Ident;;
			}
		}
		else {
			_case_begin_1beb76017:;
			{
				return jule::Str();;
			}
		}
		_match_end_1beb75ea1:;
	};
}

inline jule::Bool __jule_anon_1bec0e04a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e1bea_ImportInfo> _154143_imp) {
	jule::Ptr<__jule_anon_1bec0e04a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bec0e04a_ctx>();
	return ((*(_154143_imp))._field_Alias == (*((*(__jule_closure_ctx.alloc->_154034_ns))._field_Namespace))._field_Kind);;
}

inline void __jule_anon_1c03935e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _21031_file) {
	jule::Ptr<__jule_anon_1c03935e1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c03935e1_ctx>();
	{
		auto expr = &((*((*(_21031_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0394070:;
		if (it != expr_end) {
			jule::Ptr<_1ad933a83_Var> _21116_v = *it;
			{
				if (_1bb0a6c10_HasDirective(&((*(_21116_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1c0389296_isLive(__jule_closure_ctx.alloc->_self_, &(_21116_v))))) {
						_1c038c70b_pushLive(__jule_closure_ctx.alloc->_self_, _21116_v);
						_1bbedc7c1_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_21116_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1c0394070:;
			++it;
			goto _iter_begin_1c0394070;
		}
		_iter_end_1c0394070:;
	};
	{
		auto expr = &((*((*(_21031_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0395060:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _21916_f = *it;
			{
				if (_1bb0a6c10_HasDirective(&((*(_21916_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_21916_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c0396a23:;
						if (it != expr_end) {
							jule::Ptr<_1ad7ea84b_FnIns> _22118_ins = *it;
							{
								if ((!(_1c03525d3_isLive(__jule_closure_ctx.alloc->_self_, &(_22118_ins))))) {
									_1c0355cbd_pushLive(__jule_closure_ctx.alloc->_self_, _22118_ins);
									_1bbedc7c1_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_22118_ins))._field_Refers));
								};
							}
							_iter_next_1c0396a23:;
							++it;
							goto _iter_begin_1c0396a23;
						}
						_iter_end_1c0396a23:;
					};
				};
			}
			_iter_next_1c0395060:;
			++it;
			goto _iter_begin_1c0395060;
		}
		_iter_end_1c0395060:;
	};
}

inline void __jule_anon_1c03eb6c1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr) {
	jule::Ptr<__jule_anon_1c03eb6c1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c03eb6c1_ctx>();
	{
		auto &_match_expr{ (*(_2236_expr)) };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c03ec11c:;
			{
				jule::Ptr<_1ad7dc387_FnCallExprModel> _259_m = (*(_2236_expr)).cast_ptr<_1ad7dc387_FnCallExprModel>(&__jule_any_type30);;
				if (((*(_259_m))._field_Except != nullptr)) {
					{
						_1bbee0e67_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_259_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c03ebe63:;
			{
				jule::Ptr<_1ad7dd1bd_AnonFnExprModel> _309_m = (*(_2236_expr)).cast_ptr<_1ad7dd1bd_AnonFnExprModel>(&__jule_any_type102);;
				_1bbee38c6_eliminateDeadCodeOfScope((*((*(_309_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1c03ec095:;
	};
}

inline void __jule_anon_1c059d741(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _54947_m) {
	jule::Ptr<__jule_anon_1c059d741_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c059d741_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_54947_m));
	};
	{
		auto &_match_expr{ (*(_54947_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c059e0c1:;
			{
				{
					_1bbda5557_binary(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1ad7da3a7_BinaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c059e324:;
			{
				{
					_1bbda5810_unary(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1ad7da781_UnaryExprModel>(&__jule_any_type112));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c059e137:;
			{
				{
					_1bbda5ab8_structureLit(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1ad7db155_StructLitExprModel>(&__jule_any_type97));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c059e19d:;
			{
				{
					_1bbda5d71_casting(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1ad7db9d5_CastingExprModel>(&__jule_any_type95));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c059e214:;
			{
				{
					_1bbda6745_funcCall(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1ad7dc387_FnCallExprModel>(&__jule_any_type30));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c059ea2d:;
			{
				{
					_1bbda69ed_indexing(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1ad7dcc17_IndexingExprModel>(&__jule_any_type42));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c059ea94:;
			{
				{
					_1bbda6ca6_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_54947_m)).cast_ptr<_1ad7dd1bd_AnonFnExprModel>(&__jule_any_type102));
				};
			}
		}
		_match_end_1c059dec2:;
	};
}

inline void __jule_anon_1c077111c(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c077111c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c077111c_ctx>();
	if (__jule_closure_ctx.alloc->_1017_ref) {
		_1bc0ce550_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1bc0ce550_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1c0774b26(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c0774b26_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0774b26_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_9336_it))))._field_KeyB.alloc)._field_Reference) {
			_1bc0ce550_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1bc0ce550_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1c079a069(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c079a069_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c079a069_ctx>();
	_1bc0ce550_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1c079c555(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c079c555_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c079c555_ctx>();
	_1bc0ce550_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1c07b6519(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c07b6519_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c07b6519_ctx>();
	_1bc0ce550_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1c08511ca(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c08511ca_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c08511ca_ctx>();
	_1bc0ce550_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1c085250b(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c085250b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c085250b_ctx>();
	_1bc00a547_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_74030_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1c08c2dc8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad933a83_Var> _111667_v) {
	jule::Ptr<__jule_anon_1c08c2dc8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c08c2dc8_ctx>();
	return _1bc0038c5_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_111034_m), &(_111667_v));;
}

inline void __jule_anon_1c0c630d1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _85338_pkg) {
	jule::Ptr<__jule_anon_1c0c630d1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c630d1_ctx>();
	_1bb0a19da_IterFiles(_85338_pkg, jule::__new_closure<void,jule::Ptr<_1ad7eda91_SymTab>*>((void*)__jule_anon_1c0c63ee4, jule::Ptr<__jule_anon_1c0c63ee4_ctx>::make(__jule_anon_1c0c63ee4_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c0c63ee4_ctx_handler));
}

inline void __jule_anon_1c0c645aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn>* _86636_m) {
	jule::Ptr<__jule_anon_1c0c645aa_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c645aa_ctx>();
	jule::Ptr<_1ad7ea84b_FnIns> _8678_ins = (*((*(_86636_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_8678_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c0c67778:;
		if (it != expr_end) {
			jule::I64 _8689_i = it - expr.begin();
			jule::Ptr<_1ad7e96e6_ParamIns> _86816_ip = *it;
			{
				if (_1ad6d2821_IsAnonIdent((*((*(_86816_ip))._field_Decl))._field_Ident)) {
					(*(*(_86816_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1ab15d6ab_Itoa(_8689_i));
				};
			}
			_iter_next_1c0c67778:;
			++it;
			_8689_i++;
			goto _iter_begin_1c0c67778;
		}
		_iter_end_1c0c67778:;
	};
	_1bc0d15b8_pushResult(__jule_closure_ctx.alloc->_self_, _86636_m);
	_1bc0d529d_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _86636_m);
}

inline void __jule_anon_1c0c69c20(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _87938_pkg) {
	jule::Ptr<__jule_anon_1c0c69c20_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c69c20_ctx>();
	_1bb0a19da_IterFiles(_87938_pkg, jule::__new_closure<void,jule::Ptr<_1ad7eda91_SymTab>*>((void*)__jule_anon_1c0c6ab33, jule::Ptr<__jule_anon_1c0c6ab33_ctx>::make(__jule_anon_1c0c6ab33_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c0c6ab33_ctx_handler));
}

inline void __jule_anon_1c0c7a3c3(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c0c7a3c3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c7a3c3_ctx>();
	_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1bc0145ea_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_94624_v))._field_Value))._field_Data.alloc)._field_Model);
	_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1c0c7c4b3(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c0c7c4b3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c7c4b3_ctx>();
	_1bc00a547_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_94624_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1c0c7ebbe(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c0c7ebbe_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c7ebbe_ctx>();
	_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1c0c80d68(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c0c80d68_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c80d68_ctx>();
	_1bc0157b6_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_94624_v))._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1c0c9e02e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _108938_pkg) {
	jule::Ptr<__jule_anon_1c0c9e02e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c9e02e_ctx>();
	_1bb0a19da_IterFiles(_108938_pkg, jule::__new_closure<void,jule::Ptr<_1ad7eda91_SymTab>*>((void*)__jule_anon_1c0c9ee31, jule::Ptr<__jule_anon_1c0c9ee31_ctx>::make(__jule_anon_1c0c9ee31_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c0c9ee31_ctx_handler));
}

inline void __jule_anon_1c0ca03a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn>* _110436_m) {
	jule::Ptr<__jule_anon_1c0ca03a4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0ca03a4_ctx>();
	_1bc0cee02_indent(__jule_closure_ctx.alloc->_self_);
	_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1bc01c12a_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _110436_m);
	_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1ad7ea84b_FnIns> _11094_mepf;
	jule::Bool _110910_exist;
	({
		__jule_tuple_x_1ad7ea84b_FnIns__jule_tuple_bool __jule_assign_result = _1bc0d7bda_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _110436_m);
		_11094_mepf = __jule_assign_result.__jule_result_arg0;
		_110910_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_110910_exist))) {
		__jule_panic_s(jule::Str::lit("cxx: implementation mistake, [traitDataMethods] could not found MepMap record", 77) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1111:5"));;
	};
	_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, _1ab15d029_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_11094_mepf)), 15LL));
	_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, _1ab15d029_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_110355_s)), 15LL));
	_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1c0cacc30(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _114138_pkg) {
	jule::Ptr<__jule_anon_1c0cacc30_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0cacc30_ctx>();
	_1bb0a19da_IterFiles(_114138_pkg, jule::__new_closure<void,jule::Ptr<_1ad7eda91_SymTab>*>((void*)__jule_anon_1c0cadb43, jule::Ptr<__jule_anon_1c0cadb43_ctx>::make(__jule_anon_1c0cadb43_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c0cadb43_ctx_handler));
}

inline void __jule_anon_1c0cbd35b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _121338_pkg) {
	jule::Ptr<__jule_anon_1c0cbd35b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0cbd35b_ctx>();
	_1bb0a19da_IterFiles(_121338_pkg, jule::__new_closure<void,jule::Ptr<_1ad7eda91_SymTab>*>((void*)__jule_anon_1c0cbe26e, jule::Ptr<__jule_anon_1c0cbe26e_ctx>::make(__jule_anon_1c0cbe26e_ctx{._121338_pkg=_121338_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c0cbe26e_ctx_handler));
}

inline void __jule_anon_1c0cbe835(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _123631_file) {
	jule::Ptr<__jule_anon_1c0cbe835_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0cbe835_ctx>();
	{
		auto expr = &((*((*(_123631_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cc3a8c:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _123716_f = *it;
			{
				if ((*(_123716_f))._field_Ident.equal("init", 4)) {
					_1bc0cee02_indent(__jule_closure_ctx.alloc->_self_);
					static__1bc01c12a_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_123716_f));
					_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1c0cc3a8c:;
			++it;
			goto _iter_begin_1c0cc3a8c;
		}
		_iter_end_1c0cc3a8c:;
	};
}

inline void __jule_anon_1c0ccabc6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e446c_Package>* _127538_pkg) {
	jule::Ptr<__jule_anon_1c0ccabc6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0ccabc6_ctx>();
	_1bc0da094_pushInit(__jule_closure_ctx.alloc->_self_, _127538_pkg);
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1c0d6d582(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1ab14c0b2_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1c0d761e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1ab14bb0b_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1bdba1681(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad8e1bea_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std/comptime", 12);;
}

inline void __jule_anon_1c0c63ee4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _85432_file) {
	jule::Ptr<__jule_anon_1c0c63ee4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c63ee4_ctx>();
	{
		auto expr = &((*((*(_85432_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c64973:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _85517_f = *it;
			{
				if (((!((*(_85517_f))._field_Binded)) && ((*_85517_f.alloc)._field_Token != nullptr))) {
					_1bc0d15b8_pushResult(__jule_closure_ctx.alloc->_self_, &(_85517_f));
					_1bc0d4ee5_funcDecl(__jule_closure_ctx.alloc->_self_, &(_85517_f), false);
				};
			}
			_iter_next_1c0c64973:;
			++it;
			goto _iter_begin_1c0c64973;
		}
		_iter_end_1c0c64973:;
	};
}

inline void __jule_anon_1c0c6ab33(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _88032_file) {
	jule::Ptr<__jule_anon_1c0c6ab33_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c6ab33_ctx>();
	{
		auto expr = &((*((*(_88032_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c6b5b2:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> _88117_t = *it;
			{
				if (((*(_88117_t))._field_Token == nullptr)) {
					goto _iter_next_1c0c6b5b2;
				};
				_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1bc01c702_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _88117_t);
				_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1bc0cea06_addIndent(__jule_closure_ctx.alloc->_self_);
				_1bc0cee02_indent(__jule_closure_ctx.alloc->_self_);
				_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1bc0d5754_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_88117_t));
				_1bc0cec04_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1bc0cee02_indent(__jule_closure_ctx.alloc->_self_);
				_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1c0c6b5b2:;
			++it;
			goto _iter_begin_1c0c6b5b2;
		}
		_iter_end_1c0c6b5b2:;
	};
}

inline void __jule_anon_1c0c9ee31(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _109032_file) {
	jule::Ptr<__jule_anon_1c0c9ee31_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c9ee31_ctx>();
	{
		auto expr = &((*((*(_109032_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ca08b0:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> _109117_t = *it;
			{
				if (((*(_109117_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1c0ca08b0;
				};
				_1bb0a2557_IterTraitMethods(&(_109117_t), jule::__new_closure<void,jule::Ptr<_1ad7e778d_Fn>*>((void*)__jule_anon_1c0ca1e11, jule::Ptr<__jule_anon_1c0ca1e11_ctx>::make(__jule_anon_1c0ca1e11_ctx{._self_=__jule_closure_ctx.alloc->_self_,._109117_t=_109117_t}).as<jule::Uintptr>(), __jule_anon_1c0ca1e11_ctx_handler));
			}
			_iter_next_1c0ca08b0:;
			++it;
			goto _iter_begin_1c0ca08b0;
		}
		_iter_end_1c0ca08b0:;
	};
}

inline void __jule_anon_1c0cadb43(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _114232_file) {
	jule::Ptr<__jule_anon_1c0cadb43_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0cadb43_ctx>();
	{
		auto expr = &((*((*(_114232_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cae5c2:;
		if (it != expr_end) {
			jule::Ptr<_1ad802ea2_Trait> _114317_t = *it;
			{
				jule::I64 _114410_i = 0LL;;
				{
					auto expr = &((*(_114317_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0cb0408:;
					if (it != expr_end) {
						jule::Ptr<_1ad7159ec_Struct> _114518_s = *it;
						{
							{
								auto expr = &((*(_114518_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c0cb0caa:;
								if (it != expr_end) {
									jule::Ptr<_1ad718857_StructIns> _114619_ins = *it;
									{
										_1bc0d89cc_traitData(__jule_closure_ctx.alloc->_self_, &(_114317_t), _114410_i, &(_114619_ins));
										(_114410_i)++;
									}
									_iter_next_1c0cb0caa:;
									++it;
									goto _iter_begin_1c0cb0caa;
								}
								_iter_end_1c0cb0caa:;
							};
						}
						_iter_next_1c0cb0408:;
						++it;
						goto _iter_begin_1c0cb0408;
					}
					_iter_end_1c0cb0408:;
				};
			}
			_iter_next_1c0cae5c2:;
			++it;
			goto _iter_begin_1c0cae5c2;
		}
		_iter_end_1c0cae5c2:;
	};
}

inline void __jule_anon_1c0cbe26e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7eda91_SymTab>* _121432_file) {
	jule::Ptr<__jule_anon_1c0cbe26e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0cbe26e_ctx>();
	{
		auto expr = &((*((*(_121432_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cbebed:;
		if (it != expr_end) {
			jule::Ptr<_1ad7e778d_Fn> _121517_f = *it;
			{
				if (((!(_1dd46cc96_Test)) && _1bb0a6c10_HasDirective(&((*(_121517_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1c0cbebed;
				};
				if (((*(__jule_closure_ctx.alloc->_121338_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_121517_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1c0cc1628:;
							{
								goto _iter_next_1c0cbebed;
							}
						}
						_match_end_1c0cc155c:;
					};
				};
				if (((!((*_121517_f.alloc)._field_Binded)) && ((*_121517_f.alloc)._field_Token != nullptr))) {
					_1bc0d7536_func(__jule_closure_ctx.alloc->_self_, &(_121517_f));
					_1bc0ce550_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1c0cbebed:;
			++it;
			goto _iter_begin_1c0cbebed;
		}
		_iter_end_1c0cbebed:;
	};
}

inline void __jule_anon_1c0ca1e11(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ad7e778d_Fn>* _109539_m) {
	jule::Ptr<__jule_anon_1c0ca1e11_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0ca1e11_ctx>();
	_1bc0d804d_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_109117_t), _109539_m);
}

inline void __jule_RCAdd(jule::U64* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U64 __jule_RCLoad(jule::U64* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U64* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_1dd46e8ad_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1bc166cad_OutDir = jule::Str::lit("dist", 4);
	_1bc166ecd_OutName = jule::Str::lit("ir.cpp", 6);
	_1bc167286_Out = jule::Str();
	_1db948493_STDIN = 0LLU;
	_1db9487c3_STDOUT = 1LLU;
	_1db948aae_STDERR = 2LLU;
	_1dbaa7ba7_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_1dbaa8603_acceptRanges = ({ auto __jule_collection = jule::Array<_1dbaa825c_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _1dbaa825c_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _1dbaa825c_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _1dbaa825c_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _1dbaa825c_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _1dbaa825c_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _1dbaa825c_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_1dbc09534__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_1dbc09ac8__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_1dd037b91__L = jule::new_ptr<_1dd0a0247_RangeTable>(_1dd0a0247_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1dd09e796_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _1dd09e796_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1dd09ecc4_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _1dd09ecc4_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_1dd038aa4__LU = jule::new_ptr<_1dd0a0247_RangeTable>(_1dd0a0247_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1dd09e796_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _1dd09e796_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _1dd09e796_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1dd09ecc4_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _1dd09ecc4_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _1dd09ecc4_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_1dd03ea88_Letter = _1dd037b91__L;
	_1dd045d58_Upper = _1dd038aa4__LU;
	_1dd0983a5__CaseRanges = ({ auto __jule_collection = jule::Slice<_1dd09e2e0_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _1dd09e2e0_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1dd09e2e0_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_1dd098691__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_1dd09a473_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_1dd09a75e_caseOrbit = ({ auto __jule_collection = jule::Slice<_1dd09dce5_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _1dd09dce5_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _1dd09dce5_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_1dd346a71_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_1dd348765_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_1dd348a40_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_1dd46550d_PathStdlib = jule::Str();
	_1dd46571c_PathExec = jule::Str();
	_1dd4659c5_PathWd = jule::Str();
	_1dd465cc2_PathApi = jule::Str();
	_1dd46607a_Os = jule::Str::lit("darwin", 6);
	_1dd466333_Arch = jule::Str::lit("arm64", 5);
	_1dd46ade8_Compiler = jule::Str();
	_1dd46c2e5_CompilerPath = jule::Str();
	_1dd46c504_CppStd = jule::Str::lit("cpp17", 5);
	_1dd46c735_Shadowing = false;
	_1dd46c9dd_Transpilation = false;
	_1dd46cc96_Test = false;
	_1dd46d04e_RC = true;
	_1dd46d417_Safety = true;
	_1dd46d659_Production = false;
	_1ab145d14_f32info = _1ab14596d_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1ab146111_f64info = _1ab14596d_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1ab14da31_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1ab15078b_powtab = ({ auto __jule_collection = jule::Slice<jule::I64>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1ab15134c_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1ab15167c_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1ab15487d_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1ab158a4c_leftCheats = ({ auto __jule_collection = jule::Slice<_1ab15861d_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1ab15861d_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1ab15861d_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1ab15861d_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1ab15861d_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1ab15861d_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1ab15861d_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1ab15861d_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1ab15861d_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1ab15861d_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1ab15861d_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1ab15861d_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1ab15861d_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1ab15861d_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1ab15861d_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1ab15861d_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1ab15861d_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1ab15861d_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1ab15861d_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1ab15861d_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1ab15861d_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1ab15861d_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1ab15861d_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1ab15861d_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1ab15861d_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1ab15861d_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1ab15861d_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1ab15861d_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1ab15861d_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1ab15861d_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1ab15861d_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1ab15861d_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1ab15861d_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1ab15861d_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1ab15861d_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1ab15861d_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1ab15861d_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1ab15861d_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1ab15861d_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1ab15861d_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1ab15861d_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1ab15861d_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1ab15861d_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1ab15861d_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1ab15861d_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1ab15861d_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1ab15861d_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1ab15861d_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1ab15861d_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1ab15861d_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1ab15861d_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1ab15861d_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1ab15861d_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1ab15861d_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1ab15861d_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1ab15861d_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1ab15861d_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1ab15861d_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1ab15861d_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1ab15861d_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1ab15861d_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1ab15861d_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1ad635e06_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1ad6361e2_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U64,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(68LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(65LLU); __jule_collection; });
	_1ad6c8b47_BinOps = ({ auto __jule_collection = jule::Array<jule::U64,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(63LLU); (*it++) = static_cast<jule::U64>(64LLU); (*it++) = static_cast<jule::U64>(65LLU); (*it++) = static_cast<jule::U64>(66LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(56LLU); (*it++) = static_cast<jule::U64>(57LLU); (*it++) = static_cast<jule::U64>(69LLU); (*it++) = static_cast<jule::U64>(70LLU); (*it++) = static_cast<jule::U64>(53LLU); (*it++) = static_cast<jule::U64>(52LLU); (*it++) = static_cast<jule::U64>(54LLU); (*it++) = static_cast<jule::U64>(55LLU); (*it++) = static_cast<jule::U64>(50LLU); (*it++) = static_cast<jule::U64>(51LLU); __jule_collection; });
	_1ad6c9153_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(58LLU); (*it++) = static_cast<jule::U64>(59LLU); __jule_collection; });
	_1ad6c943e_AssignOps = ({ auto __jule_collection = jule::Array<jule::U64,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(71LLU); (*it++) = static_cast<jule::U64>(40LLU); (*it++) = static_cast<jule::U64>(41LLU); (*it++) = static_cast<jule::U64>(43LLU); (*it++) = static_cast<jule::U64>(42LLU); (*it++) = static_cast<jule::U64>(44LLU); (*it++) = static_cast<jule::U64>(46LLU); (*it++) = static_cast<jule::U64>(45LLU); (*it++) = static_cast<jule::U64>(49LLU); (*it++) = static_cast<jule::U64>(48LLU); (*it++) = static_cast<jule::U64>(47LLU); __jule_collection; });
	_1ad6d7958_keywords = ({ auto __jule_collection = jule::Array<_1ad6d7529_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U64>(6LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U64>(2LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U64>(7LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U64>(9LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U64>(10LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U64>(11LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U64>(12LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U64>(13LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U64>(14LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U64>(16LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U64>(18LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U64>(20LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U64>(21LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U64>(22LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U64>(23LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U64>(24LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U64>(25LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U64>(26LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U64>(27LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U64>(28LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U64>(29LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U64>(30LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U64>(31LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U64>(32LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U64>(33LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U64>(34LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U64>(36LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U64>(37LLU)}; __jule_collection; });
	_1ad6d7c88_basicOps = ({ auto __jule_collection = jule::Array<_1ad6d7529_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U64>(19LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U64>(38LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U64>(8LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U64>(3LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U64>(5LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U64>(39LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U64>(17LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U64>(40LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U64>(41LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U64>(42LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U64>(43LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U64>(44LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U64>(45LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U64>(46LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U64>(47LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U64>(48LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U64>(49LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U64>(50LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U64>(51LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U64>(52LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U64>(53LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U64>(54LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U64>(55LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U64>(56LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U64>(57LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U64>(58LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U64>(59LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U64>(60LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U64>(61LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U64>(62LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U64>(63LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U64>(64LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U64>(65LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U64>(66LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U64>(67LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U64>(68LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U64>(69LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U64>(70LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U64>(71LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U64>(35LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U64>(72LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U64>(73LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U64>(76LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U64>(77LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U64>(74LLU)}; (*it++) = _1ad6d7529_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U64>(75LLU)}; __jule_collection; });
	_1ad873110_BitSize = 0LL;
	_1ad873363_SysInt = jule::Str();
	_1ad873572_SysUint = jule::Str();
	_1ad8a9124_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1ada9da44_primNil = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1ada9dd41_primVoid = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1ada9e0e9_primAny = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1ada9e3e6_primStr = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1ada9e69e_primBool = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1ada9e957_primUintptr = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1ada9ec10_primUint = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1adaa00c8_primInt = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1adaa031a_primI8 = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1adaa05b2_primI16 = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1adaa086a_primI32 = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1adaa0b23_primI64 = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1adaa0dcb_primU8 = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1adaa1184_primU16 = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1adaa143c_primU32 = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1adaa1926_primU64 = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1adaa1b68_primF32 = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1adaa1d77_primF64 = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ad9d5a36_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)});
	_1bbdaaaac_emptyData = jule::new_ptr<_1bbdab409_data>(_1bbdab409_data{._field_boundary=jule::Ptr<_1bbdacbe1_boundary>(nullptr), ._field_nils=jule::Ptr<_1bbd98db9_nils>(nullptr), ._field_dynamic=jule::Ptr<_1bbda87d0_dynamic>(nullptr)});
	_1bbdb0881_Copy = false;
	_1bbdb0b7d_Deadcode = false;
	_1bbdb0e36_Append = false;
	_1bbdb1233_Math = false;
	_1bbdb14db_Access = false;
	_1bbdb1794_Inline = false;
	_1bbdb1a4c_Ptr = false;
	_1bbdb1e15_Cond = false;
	_1bbdb2157_Str = false;
	_1bbdb23ee_Slice = false;
	_1bbdb26a7_Assign = false;
	_1bbdb2960_Exceptional = false;
	_1bbdb2c18_Iter = false;
	_1bbdb2ec1_Dynamic = false;
	_1bbee59a5_exprEnabled = false;
	_1bbee5bb4_scopeEnabled = false;
	_1bc0c0cb1_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1bbee9448_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1bc0cb75b_generalGCPtr = jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad9c51da_Sptr>(_1ad9c51da_Sptr{._field_Elem=jule::new_ptr<_1ad9b8596_TypeKind>(_1ad9b8596_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ad9c16ae_Prim>(_1ad9c16ae_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1ad9b80e0_Kind_mptr_data23)});
	_1dd0980b9_CaseRanges = _1dd0983a5__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	entry_point();

	return EXIT_SUCCESS;
}