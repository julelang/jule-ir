// Auto generated by JuleC.
// JuleC version: beta 0.0.6 @master
// Date: 19/10/2023 21.50 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -O0 -Wno-everything --std=c++17 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   
#include "std/sys/syscall_unix.hpp"                                   

struct _225615962_Importer;
struct _23e2b5818_Kind;
struct _225e7723a_Lookup;
struct _2265d88ce_Reader;
struct _2265d88ce_Writer;
struct _2265d88ce_Stream;
struct _23d0249a7_CommonFlag;

struct _23ce97bb1_AnsiEscape;


struct _23ce97bb1_Logger;


struct _23d08e2c4_LazyBuff;


struct _23ceb0c1d_Log;


struct _23d12cd35_FloatInfo;


struct _23d12cd35_DecimalSlice;


struct _23e026524_LeftCheat;


struct _23e026524_Decimal;


struct _224dacb88_FoldPair;


struct _224dacb88_CaseRange;


struct _224dacb88_Range16;


struct _224dacb88_Range32;


struct _224dacb88_RangeTable;


struct _23e9950d5_accept_range;


struct _224ea5599_DirEntry;


struct _224ea5599_Directory;


struct _224eb1ee0_File;


struct _224eb5730_Status;


struct _23e730c0b_Token;


struct _23e4593c4_File;


struct _23e45a13e_KindPair;


struct _23e45a13e_Lex;


struct _23e249d96_Ast;


struct _23e45734a_CommentGroup;


struct _23e45734a_NamespaceTypeDecl;


struct _23e45734a_SptrTypeDecl;


struct _23e45734a_SlcTypeDecl;


struct _23e45734a_TupleTypeDecl;


struct _23e45734a_PtrTypeDecl;


struct _23e45734a_ArrTypeDecl;


struct _23e45734a_MapTypeDecl;


struct _23e45734a_RetTypeDecl;


struct _23e45734a_TupleExpr;


struct _23e45734a_CastExpr;


struct _23e45734a_StructLit;


struct _23e45734a_ScopeTree;


struct _23e45734a_Conditional;


struct _225036949_FileInfo;


struct _225036949_PackageInfo;


struct _225040a63_Stmt;


struct _225040a63_ScopeParser;


struct _225059ab0_CallData;


struct _225059ab0_ExprBuilder;


struct _225247b9e_Parser;


struct _225272404_TypeBuilder;


struct _226100d86_Const;


struct _225036509_FieldIns;


struct _225036509_StructIns;


struct _2252d6a73_RetType;


struct _2252d6a73_ParamIns;


struct _2252d6a73_FnIns;


struct _22551ab31_ReferenceStack;


struct _22551ab31_SymbolBuilder;


struct _2255ba3ea_Scope;


struct _2255ba3ea_If;


struct _2255ba3ea_Else;


struct _2255ba3ea_Conditional;


struct _2255ba3ea_InfIter;


struct _2255ba3ea_WhileIter;


struct _2255ba3ea_RangeIter;


struct _2255ba3ea_ContSt;


struct _2255ba3ea_BreakSt;


struct _2255ba3ea_Label;


struct _2255ba3ea_GotoSt;


struct _2255ba3ea_Postfix;


struct _2255ba3ea_Assign;


struct _2255ba3ea_MultiAssign;


struct _2255ba3ea_Match;


struct _2255ba3ea_Case;


struct _2255ba3ea_FallSt;


struct _2255ba3ea_RetSt;


struct _2255ba3ea_ScopeGoto;


struct _2255ba3ea_ScopeChecker;


struct _2255b85b3_BinopExprModel;


struct _2255b85b3_UnaryExprModel;


struct _2255b85b3_StructArgExprModel;


struct _2255b85b3_StructLitExprModel;


struct _2255b85b3_AllocStructLitExprModel;


struct _2255b85b3_CastingExprModel;


struct _2255b85b3_SliceExprModel;


struct _2255b85b3_IndexigExprModel;


struct _2255b85b3_AnonFnExprModel;


struct _2255b85b3_KeyValPairExprModel;


struct _2255b85b3_MapExprModel;


struct _2255b85b3_SlicingExprModel;


struct _2255b85b3_TraitSubIdentExprModel;


struct _2255b85b3_StructSubIdentExprModel;


struct _2255b85b3_StructStaticIdentExprModel;


struct _2255b85b3_ArrayExprModel;


struct _2255b85b3_CommonIdentExprModel;


struct _2255b85b3_CommonSubIdentExprModel;


struct _2255b85b3_TupleExprModel;


struct _2255b85b3_BuiltinOutCallExprModel;


struct _2255b85b3_BuiltinOutlnCallExprModel;


struct _2255b85b3_BuiltinCloneCallExprModel;


struct _2255b85b3_BuiltinNewCallExprModel;


struct _2255b85b3_BuiltinMakeCallExprModel;


struct _2255b85b3_BuiltinAppendCallExprModel;


struct _2255b85b3_BuiltinErrorCallExprModel;


struct _2255b85b3_SizeofExprModel;


struct _2255b85b3_AlignofExprModel;


struct _2255b85b3_RuneExprModel;


struct _2255b85b3_IntegratedToStrExprModel;


struct _2255b85b3_TernaryExprModel;


struct _225613894_DirectiveChecker;


struct _225615962_Package;


struct _22579574b_Sema;


struct _2258258db_IterRelation;


struct _22582290a_RangeChecker;


struct _225a097a1_SymbolTable;


struct _225aa4a5a_Data;


struct _225aa4a5a_Value;


struct _225aa4a5a_Eval;


struct _23e2b5818_TypeKind;


struct _23e2b5818_TypeSymbol;


struct _23e2b5818_Prim;


struct _23e2b5818_Sptr;


struct _23e2b5818_Slc;


struct _23e2b5818_Tuple;


struct _23e2b5818_Map;


struct _23e2b5818_Arr;


struct _23e2b5818_Ptr;


struct _23e2b5818_Referencer;


struct _23e12e1ba_DirectiveEval;


struct _23e3748d8_PlainImporter;


struct _23e1d6b35_OrderedDefines;


struct _23e1d6b35_DefineOrderer;


struct _23d0477ee_ScopeDeadCode;


struct _2265d88ce_FileStream;


struct _22660706d_Scanner;


struct _226630371_AbsTime;


struct _226630371_Time;


struct _226630371_Duration;


struct _23d0249a7_Flag_0;

struct _23d0249a7_Flag_1;

struct _23d0249a7_Flag_2;

struct _23d0249a7_Flag_3;

struct _23d0249a7_Flag_4;


struct _23d0249a7_FlagSet;


struct _23e45734a_BreakSt;


struct _23e45734a_ContSt;


struct _23e45734a_If;


struct _23e45734a_Else;


struct _23e45734a_Directive;


struct _23e45734a_TypeAliasDecl;


struct _2255b85b3_FnCallExprModel;


struct _23e45734a_Case;


struct _23e45734a_MatchCase;


struct _23e45734a_UseDecl;


struct _23e45734a_EnumItemDecl;


struct _23e45734a_EnumDecl;


struct _23e45734a_FieldDecl;


struct _23e45734a_StructDecl;


struct _23e45734a_TraitDecl;


struct _23e45734a_Impl;


struct _23e45734a_Expr;


struct _23e45734a_UseExpr;


struct _23e45734a_TypeDecl;


struct _23e45734a_LitExpr;


struct _23e45734a_UnsafeExpr;


struct _23e45734a_CoExpr;


struct _225146a37_AssignInfo;


struct _23e45734a_IdentExpr;


struct _2255b85b3_BuiltinPanicCallExprModel;


struct _23e45734a_UnaryExpr;


struct _23e45734a_VariadicExpr;


struct _225036509_Field;


struct _225036509_Struct;


struct _23e45734a_IdentTypeDecl;


struct _23e45734a_NsSelectionExpr;


struct _23e45734a_SubIdentExpr;


struct _2252d6a73_Param;


struct _2252d6a73_Fn;


struct _225615962_ImportInfo;


struct _23e45734a_BinopExpr;


struct _23e45734a_FnCallExpr;


struct _23e45734a_FieldExprPair;


struct _2258258db_Var;


struct _22582290a_TypeCompatibilityChecker;


struct _22582290a_AssignTypeChecker;


struct _22582290a_DynamicTypeAnnotation;


struct _22582290a_FnCallArgChecker;


struct _22582290a_StructLitChecker;


struct _22551ab31_Pass;


struct _22582290a_RetTypeChecker;


struct _23e45734a_Node;


struct _2255ab70a_Trait;


struct _2255aae79_EnumItem;


struct _2255aae79_Enum;


struct _225aa4a5a_BinopSolver;


struct _23e2b5818_TypeAlias;


struct _2255b811d_Impl;


struct _23e45734a_BraceLit;


struct _23e45734a_KeyValPair;


struct _23e45734a_SliceExpr;


struct _23e45734a_IndexingExpr;


struct _23e45734a_SlicingExpr;


struct _23e45734a_TernaryExpr;


struct _23e45734a_GenericDecl;


struct _23e45734a_LabelSt;


struct _23e45734a_GotoSt;


struct _23e2b5818_TypeChecker;


struct _23e45734a_FallSt;


struct _23e45734a_AssignLeft;


struct _23de59556_IR;


struct _23e45734a_AssignSt;


struct _23e45734a_Comment;


struct _23e45734a_ParamDecl;


struct _23e45734a_FnDecl;


struct _23e45734a_VarDecl;


struct _23e45734a_RetSt;


struct _23e45734a_Iter;


struct _2255ba3ea_ScopeLabel;


struct _23e45734a_WhileKind;


struct _23e45734a_RangeKind;


struct _23d0249a7_ArgParser;

struct _225615962_Importer {
	virtual ~_225615962_Importer(void) {}

	virtual jule::Ptr<_225615962_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ptr<_23e249d96_Ast>>,jule::Slice<_23ceb0c1d_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ptr<_225615962_ImportInfo>) {}
};

struct _23e2b5818_Kind {
	virtual ~_23e2b5818_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind> _4722_other) { return {}; }
};

struct _225e7723a_Lookup {
	virtual ~_225e7723a_Lookup(void) {}

	virtual jule::Ptr<_225615962_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ptr<_225615962_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ptr<_2258258db_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ptr<_23e2b5818_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ptr<_225036509_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ptr<_2252d6a73_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ptr<_2255ab70a_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ptr<_2255aae79_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _2265d88ce_Reader {
	virtual ~_2265d88ce_Reader(void) {}

	virtual jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8> _1331_buff) { return {}; }
};

struct _2265d88ce_Writer {
	virtual ~_2265d88ce_Writer(void) {}

	virtual jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8> _2028_buff) { return {}; }
};

struct _2265d88ce_Stream {
	virtual ~_2265d88ce_Stream(void) {}

	virtual jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8> _2631_buff) { return {}; }
	virtual jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8> _2828_buff) { return {}; }
};

struct _23d0249a7_CommonFlag {
	virtual ~_23d0249a7_CommonFlag(void) {}

	virtual jule::Str _method_name(void) { return {}; }
	virtual jule::I32 _method_short(void) { return {}; }
	virtual jule::Str _method_what(void) { return {}; }
	virtual void _method_reset(void) {}
};


struct _23ce97bb1_AnsiEscape {
	

	_23ce97bb1_AnsiEscape(void) = default;

	static inline void _static_method_reset(void);


	static inline void _static_method_print(jule::Str,jule::Str);


	inline bool operator==(const _23ce97bb1_AnsiEscape &_Src) const { return true; }

	inline bool operator!=(const _23ce97bb1_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _23ce97bb1_Logger {
	

	_23ce97bb1_Logger(void) = default;

	static inline void _static_method_log_flat(_23ceb0c1d_Log&);


	static inline void _static_method_log_error(_23ceb0c1d_Log&);


	static inline void _static_method_log(_23ceb0c1d_Log&);


	static inline void _static_method_print_logs(jule::Slice<_23ceb0c1d_Log>&);


	inline bool operator==(const _23ce97bb1_Logger &_Src) const { return true; }

	inline bool operator!=(const _23ce97bb1_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _23d08e2c4_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::Int _field_w = jule::Int();
	jule::Str _field_vol_and_path = jule::Str();
	jule::Int _field_vol_len = jule::Int();


	_23d08e2c4_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_23d08e2c4_LazyBuff(void) = default;

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _23d08e2c4_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _23d08e2c4_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _23ceb0c1d_Log {
	jule::Int _field_kind = 0LLU;
	jule::Int _field_row = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();


	_23ceb0c1d_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_23ceb0c1d_Log(void) = default;

	inline bool operator==(const _23ceb0c1d_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggestion == _Src._field_suggestion;
	}

	inline bool operator!=(const _23ceb0c1d_Log &_Src) const { return !this->operator==(_Src); }
};


struct _23d12cd35_FloatInfo {
	jule::Uint _field_mantbits = jule::Uint();
	jule::Uint _field_expbits = jule::Uint();
	jule::Int _field_bias = jule::Int();


	_23d12cd35_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_23d12cd35_FloatInfo(void) = default;

	inline bool operator==(const _23d12cd35_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _23d12cd35_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _23d12cd35_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::Int _field_nd = jule::Int();
	jule::Int _field_dp = jule::Int();
	jule::Bool _field_neg = jule::Bool();


	_23d12cd35_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_23d12cd35_DecimalSlice(void) = default;

	inline bool operator==(const _23d12cd35_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _23d12cd35_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _23e026524_LeftCheat {
	jule::Int _field_delta = jule::Int();
	jule::Str _field_cutoff = jule::Str();


	_23e026524_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_23e026524_LeftCheat(void) = default;

	inline bool operator==(const _23e026524_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _23e026524_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _23e026524_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::Int _field_nd = jule::Int();
	jule::Int _field_dp = jule::Int();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();


	_23e026524_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_23e026524_Decimal(void) = default;

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_23d12cd35_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _23e026524_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _23e026524_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _224dacb88_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();


	_224dacb88_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_224dacb88_FoldPair(void) = default;

	inline bool operator==(const _224dacb88_FoldPair &_Src) const {
		return 
			this->_field_from == _Src._field_from &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _224dacb88_FoldPair &_Src) const { return !this->operator==(_Src); }
};


struct _224dacb88_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();


	_224dacb88_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_224dacb88_CaseRange(void) = default;

	inline bool operator==(const _224dacb88_CaseRange &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_delta == _Src._field_delta;
	}

	inline bool operator!=(const _224dacb88_CaseRange &_Src) const { return !this->operator==(_Src); }
};


struct _224dacb88_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();


	_224dacb88_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_224dacb88_Range16(void) = default;

	inline bool operator==(const _224dacb88_Range16 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _224dacb88_Range16 &_Src) const { return !this->operator==(_Src); }
};


struct _224dacb88_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();


	_224dacb88_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_224dacb88_Range32(void) = default;

	inline bool operator==(const _224dacb88_Range32 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	inline bool operator!=(const _224dacb88_Range32 &_Src) const { return !this->operator==(_Src); }
};


struct _224dacb88_RangeTable {
	jule::Slice<_224dacb88_Range16> _field_r16 = jule::Slice<_224dacb88_Range16>();
	jule::Slice<_224dacb88_Range32> _field_r32 = jule::Slice<_224dacb88_Range32>();
	jule::Int _field_latin_offset = jule::Int();


	_224dacb88_RangeTable(jule::Slice<_224dacb88_Range16> __param_r16, jule::Slice<_224dacb88_Range32> __param_r32, jule::Int __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_224dacb88_RangeTable(void) = default;

	inline bool operator==(const _224dacb88_RangeTable &_Src) const {
		return 
			this->_field_r16 == _Src._field_r16 &&
			this->_field_r32 == _Src._field_r32 &&
			this->_field_latin_offset == _Src._field_latin_offset;
	}

	inline bool operator!=(const _224dacb88_RangeTable &_Src) const { return !this->operator==(_Src); }
};


struct _23e9950d5_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();


	_23e9950d5_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_23e9950d5_accept_range(void) = default;

	inline bool operator==(const _23e9950d5_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _23e9950d5_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _224ea5599_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_224eb5730_Status> _field_stat = jule::Ptr<_224eb5730_Status>();


	_224ea5599_DirEntry(jule::Str __param_name, jule::Ptr<_224eb5730_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_224ea5599_DirEntry(void) = default;

	inline bool operator==(const _224ea5599_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _224ea5599_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _224ea5599_Directory {
	

	_224ea5599_Directory(void) = default;

	static inline jule::Exceptional<jule::Slice<jule::Ptr<_224ea5599_DirEntry>>> _static_method_read(jule::Str);


	static inline jule::VoidExceptional _static_method_create(jule::Str);


	static inline jule::VoidExceptional _static_method_remove(jule::Str);


	inline bool operator==(const _224ea5599_Directory &_Src) const { return true; }

	inline bool operator!=(const _224ea5599_Directory &_Src) const { return !this->operator==(_Src); }
};


struct _224eb1ee0_File {
	jule::Uintptr _field_handle = jule::Uintptr();


	_224eb1ee0_File(jule::Uintptr __param_handle): _field_handle(__param_handle) {}

	

	_224eb1ee0_File(void) = default;

	static inline jule::Exceptional<jule::Ptr<_224eb1ee0_File>> _static_method_open(jule::Str,jule::Int,jule::Int);


	static inline jule::VoidExceptional _static_method_remove(jule::Str);


	inline jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8>);


	inline jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8>);


	static inline jule::Ptr<_224eb1ee0_File> _static_method_new(jule::Uintptr);


	static inline jule::Exceptional<jule::Ptr<_224eb1ee0_File>> _static_method_create(jule::Str);


	static inline jule::Exceptional<jule::Slice<jule::U8>> _static_method_read(jule::Str);


	static inline jule::VoidExceptional _static_method_write(jule::Str,jule::Slice<jule::U8>,jule::Int);


	inline jule::Exceptional<jule::I64> _method_seek(jule::I64,jule::Int);


	inline jule::VoidExceptional _method_close(void);


	inline bool operator==(const _224eb1ee0_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _224eb1ee0_File &_Src) const { return !this->operator==(_Src); }
};


struct _224eb5730_Status {
	jule::Uint _field_mode = jule::Uint();
	jule::Uint _field_size = jule::Uint();


	_224eb5730_Status(jule::Uint __param_mode, jule::Uint __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_224eb5730_Status(void) = default;

	static inline jule::Exceptional<jule::Ptr<_224eb5730_Status>> _static_method_of(jule::Str);


	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _224eb5730_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _224eb5730_Status &_Src) const { return !this->operator==(_Src); }
};


struct _23e730c0b_Token {
	jule::Ptr<_23e4593c4_File> _field_file = jule::Ptr<_23e4593c4_File>();
	jule::Int _field_row = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Str _field_kind = jule::Str();
	jule::Uint _field_id = 0LLU;


	_23e730c0b_Token(jule::Ptr<_23e4593c4_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_23e730c0b_Token(void) = default;

	inline jule::U8 _method_prec(void);


	inline bool operator==(const _23e730c0b_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _23e730c0b_Token &_Src) const { return !this->operator==(_Src); }
};


struct _23e4593c4_File {
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Str _field__path = jule::Str();
	jule::Slice<_23e730c0b_Token> _field__tokens = jule::Slice<_23e730c0b_Token>();


	_23e4593c4_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_23e730c0b_Token> __param__tokens): _field_data(__param_data), _field__path(__param__path), _field__tokens(__param__tokens) {}

	

	_23e4593c4_File(void) = default;

	inline jule::Bool _method_is_ok(void);


	inline void _method_fill(jule::Slice<jule::U8>);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline jule::Slice<_23e730c0b_Token> _method_tokens(void);


	inline jule::Str _method_get_row(jule::Int);


	inline bool operator==(const _23e4593c4_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _23e4593c4_File &_Src) const { return !this->operator==(_Src); }
};


struct _23e45a13e_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::Uint _field_id = 0LLU;


	_23e45a13e_KindPair(jule::Str __param_kind, jule::Uint __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_23e45a13e_KindPair(void) = default;

	inline bool operator==(const _23e45a13e_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _23e45a13e_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _23e45a13e_Lex {
	jule::Slice<_23e730c0b_Token> _field_tokens = jule::Slice<_23e730c0b_Token>();
	jule::Ptr<_23e4593c4_File> _field_file = jule::Ptr<_23e4593c4_File>();
	jule::Int _field_pos = jule::Int();
	jule::Int _field_column = jule::Int();
	jule::Int _field_row = jule::Int();
	jule::Slice<_23ceb0c1d_Log> _field_errors = jule::Slice<_23ceb0c1d_Log>();


	_23e45a13e_Lex(jule::Slice<_23e730c0b_Token> __param_tokens, jule::Ptr<_23e4593c4_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_23ceb0c1d_Log> __param_errors): _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_23e45a13e_Lex(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_23e730c0b_Token&,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>&);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_23e730c0b_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>&);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>&);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>&,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>&);


	inline jule::Str _method_lex_str(void);


	inline jule::Bool _method_is_first_token_of_line(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>&,jule::Str,jule::Uint,_23e730c0b_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_23e730c0b_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>&,_23e730c0b_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>&,_23e730c0b_Token&);


	inline _23e730c0b_Token _method_token(void);


	inline bool operator==(const _23e45a13e_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _23e45a13e_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _23e249d96_Ast {
	jule::Ptr<_23e4593c4_File> _field_file = jule::Ptr<_23e4593c4_File>();
	jule::Slice<jule::Ptr<_23e45734a_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_23e45734a_Directive>>();
	jule::Slice<jule::Ptr<_23e45734a_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_23e45734a_UseDecl>>();
	jule::Slice<jule::Ptr<_23e45734a_Impl>> _field_impls = jule::Slice<jule::Ptr<_23e45734a_Impl>>();
	jule::Slice<jule::Ptr<_23e45734a_Comment>> _field_comments = jule::Slice<jule::Ptr<_23e45734a_Comment>>();
	jule::Slice<_23e45734a_Node> _field_decls = jule::Slice<_23e45734a_Node>();


	_23e249d96_Ast(jule::Ptr<_23e4593c4_File> __param_file, jule::Slice<jule::Ptr<_23e45734a_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_23e45734a_UseDecl>> __param_use_decls, jule::Slice<jule::Ptr<_23e45734a_Impl>> __param_impls, jule::Slice<jule::Ptr<_23e45734a_Comment>> __param_comments, jule::Slice<_23e45734a_Node> __param_decls): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_impls(__param_impls), _field_comments(__param_comments), _field_decls(__param_decls) {}

	

	_23e249d96_Ast(void) = default;

	inline bool operator==(const _23e249d96_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _23e249d96_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_CommentGroup {
	jule::Slice<jule::Ptr<_23e45734a_Comment>> _field_comments = jule::Slice<jule::Ptr<_23e45734a_Comment>>();


	_23e45734a_CommentGroup(jule::Slice<jule::Ptr<_23e45734a_Comment>> __param_comments): _field_comments(__param_comments) {}

	

	_23e45734a_CommentGroup(void) = default;

	inline bool operator==(const _23e45734a_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _23e45734a_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_NamespaceTypeDecl {
	jule::Slice<_23e730c0b_Token> _field_idents = jule::Slice<_23e730c0b_Token>();
	jule::Ptr<_23e45734a_IdentTypeDecl> _field_kind = jule::Ptr<_23e45734a_IdentTypeDecl>();


	_23e45734a_NamespaceTypeDecl(jule::Slice<_23e730c0b_Token> __param_idents, jule::Ptr<_23e45734a_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_23e45734a_NamespaceTypeDecl(void) = default;

	inline bool operator==(const _23e45734a_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _23e45734a_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_SptrTypeDecl {
	jule::Ptr<_23e45734a_TypeDecl> _field_elem = jule::Ptr<_23e45734a_TypeDecl>();


	_23e45734a_SptrTypeDecl(jule::Ptr<_23e45734a_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_23e45734a_SptrTypeDecl(void) = default;

	inline bool operator==(const _23e45734a_SptrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _23e45734a_SptrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_SlcTypeDecl {
	jule::Ptr<_23e45734a_TypeDecl> _field_elem = jule::Ptr<_23e45734a_TypeDecl>();


	_23e45734a_SlcTypeDecl(jule::Ptr<_23e45734a_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_23e45734a_SlcTypeDecl(void) = default;

	inline bool operator==(const _23e45734a_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _23e45734a_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_TupleTypeDecl {
	jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_23e45734a_TypeDecl>>();


	_23e45734a_TupleTypeDecl(jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_23e45734a_TupleTypeDecl(void) = default;

	inline bool operator==(const _23e45734a_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _23e45734a_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_PtrTypeDecl {
	jule::Ptr<_23e45734a_TypeDecl> _field_elem = jule::Ptr<_23e45734a_TypeDecl>();


	_23e45734a_PtrTypeDecl(jule::Ptr<_23e45734a_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_23e45734a_PtrTypeDecl(void) = default;

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _23e45734a_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _23e45734a_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_ArrTypeDecl {
	jule::Ptr<_23e45734a_TypeDecl> _field_elem = jule::Ptr<_23e45734a_TypeDecl>();
	jule::Ptr<_23e45734a_Expr> _field_size = jule::Ptr<_23e45734a_Expr>();


	_23e45734a_ArrTypeDecl(jule::Ptr<_23e45734a_TypeDecl> __param_elem, jule::Ptr<_23e45734a_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_23e45734a_ArrTypeDecl(void) = default;

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _23e45734a_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _23e45734a_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_MapTypeDecl {
	jule::Ptr<_23e45734a_TypeDecl> _field_key = jule::Ptr<_23e45734a_TypeDecl>();
	jule::Ptr<_23e45734a_TypeDecl> _field_val = jule::Ptr<_23e45734a_TypeDecl>();


	_23e45734a_MapTypeDecl(jule::Ptr<_23e45734a_TypeDecl> __param_key, jule::Ptr<_23e45734a_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_23e45734a_MapTypeDecl(void) = default;

	inline bool operator==(const _23e45734a_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _23e45734a_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_RetTypeDecl {
	jule::Ptr<_23e45734a_TypeDecl> _field_kind = jule::Ptr<_23e45734a_TypeDecl>();
	jule::Slice<_23e730c0b_Token> _field_idents = jule::Slice<_23e730c0b_Token>();


	_23e45734a_RetTypeDecl(jule::Ptr<_23e45734a_TypeDecl> __param_kind, jule::Slice<_23e730c0b_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_23e45734a_RetTypeDecl(void) = default;

	inline bool operator==(const _23e45734a_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _23e45734a_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_TupleExpr {
	jule::Slice<jule::Ptr<_23e45734a_Expr>> _field_expr = jule::Slice<jule::Ptr<_23e45734a_Expr>>();


	_23e45734a_TupleExpr(jule::Slice<jule::Ptr<_23e45734a_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_23e45734a_TupleExpr(void) = default;

	inline bool operator==(const _23e45734a_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_CastExpr {
	jule::Ptr<_23e45734a_TypeDecl> _field_kind = jule::Ptr<_23e45734a_TypeDecl>();
	jule::Any _field_expr = jule::Any();


	_23e45734a_CastExpr(jule::Ptr<_23e45734a_TypeDecl> __param_kind, jule::Any __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_23e45734a_CastExpr(void) = default;

	inline bool operator==(const _23e45734a_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_StructLit {
	jule::Ptr<_23e45734a_TypeDecl> _field_kind = jule::Ptr<_23e45734a_TypeDecl>();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_23e45734a_StructLit(jule::Ptr<_23e45734a_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs): _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_23e45734a_StructLit(void) = default;

	inline bool operator==(const _23e45734a_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _23e45734a_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_ScopeTree {
	jule::Ptr<_23e45734a_ScopeTree> _field_parent = jule::Ptr<_23e45734a_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_23e45734a_ScopeTree(jule::Ptr<_23e45734a_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_23e45734a_ScopeTree(void) = default;

	inline bool operator==(const _23e45734a_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _23e45734a_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_Conditional {
	jule::Ptr<_23e45734a_If> _field_head = jule::Ptr<_23e45734a_If>();
	jule::Slice<jule::Ptr<_23e45734a_If>> _field_tail = jule::Slice<jule::Ptr<_23e45734a_If>>();
	jule::Ptr<_23e45734a_Else> _field_default = jule::Ptr<_23e45734a_Else>();


	_23e45734a_Conditional(jule::Ptr<_23e45734a_If> __param_head, jule::Slice<jule::Ptr<_23e45734a_If>> __param_tail, jule::Ptr<_23e45734a_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_23e45734a_Conditional(void) = default;

	inline bool operator==(const _23e45734a_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _23e45734a_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _225036949_FileInfo {
	jule::Ptr<_23e249d96_Ast> _field_ast = jule::Ptr<_23e249d96_Ast>();
	jule::Slice<_23ceb0c1d_Log> _field_errors = jule::Slice<_23ceb0c1d_Log>();


	_225036949_FileInfo(jule::Ptr<_23e249d96_Ast> __param_ast, jule::Slice<_23ceb0c1d_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_225036949_FileInfo(void) = default;

	inline bool operator==(const _225036949_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _225036949_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _225036949_PackageInfo {
	jule::Slice<jule::Ptr<_225036949_FileInfo>> _field_files = jule::Slice<jule::Ptr<_225036949_FileInfo>>();


	_225036949_PackageInfo(jule::Slice<jule::Ptr<_225036949_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_225036949_PackageInfo(void) = default;

	inline bool operator==(const _225036949_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _225036949_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _225040a63_Stmt {
	jule::Slice<_23e730c0b_Token> _field_tokens = jule::Slice<_23e730c0b_Token>();
	jule::Bool _field_terminated = jule::Bool();


	_225040a63_Stmt(jule::Slice<_23e730c0b_Token> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_225040a63_Stmt(void) = default;

	inline bool operator==(const _225040a63_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _225040a63_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _225040a63_ScopeParser {
	jule::Ptr<_225247b9e_Parser> _field_p = jule::Ptr<_225247b9e_Parser>();
	jule::Ptr<_23e45734a_ScopeTree> _field_s = jule::Ptr<_23e45734a_ScopeTree>();
	jule::Slice<jule::Ptr<_225040a63_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_225040a63_Stmt>>();
	jule::Int _field_pos = jule::Int();


	_225040a63_ScopeParser(jule::Ptr<_225247b9e_Parser> __param_p, jule::Ptr<_23e45734a_ScopeTree> __param_s, jule::Slice<jule::Ptr<_225040a63_Stmt>> __param_stmts, jule::Int __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stmts(__param_stmts), _field_pos(__param_pos) {}

	

	_225040a63_ScopeParser(void) = default;

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_23e730c0b_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_insert_as_next(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_225040a63_Stmt> _method_next(void);


	inline jule::Ptr<_23e45734a_ScopeTree> _method_build_scope(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_var_st(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_ret_st(jule::Slice<_23e730c0b_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ptr<_225040a63_Stmt>&);


	inline jule::Ptr<_23e45734a_WhileKind> _method_build_while_iter_kind(jule::Slice<_23e730c0b_Token>&);


	inline jule::Slice<jule::Slice<_23e730c0b_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_VarDecl> _method_build_range_kind_key(jule::Slice<_23e730c0b_Token>&);


	inline jule::Slice<jule::Ptr<_23e45734a_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_23e730c0b_Token>>&);


	inline void _method_setup_range_kind_keys_plain(jule::Ptr<_23e45734a_RangeKind>&,jule::Slice<_23e730c0b_Token>&);


	inline void _method_setup_range_kind_keys_explicit(jule::Ptr<_23e45734a_RangeKind>&,jule::Slice<_23e730c0b_Token>&);


	inline void _method_setup_range_kind_keys(jule::Ptr<_23e45734a_RangeKind>&,jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_RangeKind> _method_build_range_iter_kind(jule::Slice<_23e730c0b_Token>&,jule::Slice<_23e730c0b_Token>&,_23e730c0b_Token&);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_23e730c0b_Token>&,_23e730c0b_Token&);


	inline jule::Any _method_build_common_iter(jule::Slice<_23e730c0b_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ptr<_225040a63_Stmt>&);


	inline jule::Any _method_build_break_st(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_cont_st(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_If> _method_build_if(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_Else> _method_build_else(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_23e730c0b_Token>);


	inline jule::Any _method_build_comment_st(_23e730c0b_Token&);


	inline jule::Any _method_build_co_call_st(jule::Slice<_23e730c0b_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_fall_st(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_23e730c0b_Token>&);


	inline void _method_push_case_expr(jule::Slice<_23e730c0b_Token>,_23e730c0b_Token,jule::Bool,jule::Slice<jule::Ptr<_23e45734a_Expr>>&);


	inline jule::Slice<jule::Ptr<_23e45734a_Expr>> _method_build_case_exprs(jule::Slice<_23e730c0b_Token>&,jule::Bool);


	inline jule::Ptr<_23e45734a_ScopeTree> _method_build_case_scope(jule::Slice<_23e730c0b_Token>&);


	inline std::tuple<jule::Ptr<_23e45734a_Case>,jule::Bool> _method_build_case(jule::Slice<_23e730c0b_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ptr<_23e45734a_Case>>,jule::Ptr<_23e45734a_Else>> _method_build_cases(jule::Slice<_23e730c0b_Token>,jule::Bool);


	inline jule::Ptr<_23e45734a_MatchCase> _method_build_match_case(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_ScopeTree> _method_build_scope_st(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_LabelSt> _method_build_label_st(jule::Slice<_23e730c0b_Token>&);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_225146a37_AssignInfo> _method_build_assign_info(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_AssignLeft> _method_build_assign_l(jule::Slice<_23e730c0b_Token>&);


	inline jule::Slice<jule::Ptr<_23e45734a_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_23e730c0b_Token>>&);


	inline std::tuple<jule::Ptr<_23e45734a_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_23e730c0b_Token>&);


	inline std::tuple<jule::Ptr<_23e45734a_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_23e730c0b_Token>);


	inline std::tuple<jule::Ptr<_23e45734a_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_use_expr(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_st(jule::Ptr<_225040a63_Stmt>&);


	inline void _method_build(jule::Slice<_23e730c0b_Token>&,jule::Ptr<_23e45734a_ScopeTree>&);


	inline bool operator==(const _225040a63_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _225040a63_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _225059ab0_CallData {
	jule::Slice<_23e730c0b_Token> _field_expr_tokens = jule::Slice<_23e730c0b_Token>();
	jule::Slice<_23e730c0b_Token> _field_args_tokens = jule::Slice<_23e730c0b_Token>();
	jule::Slice<_23e730c0b_Token> _field_generics_tokens = jule::Slice<_23e730c0b_Token>();


	_225059ab0_CallData(jule::Slice<_23e730c0b_Token> __param_expr_tokens, jule::Slice<_23e730c0b_Token> __param_args_tokens, jule::Slice<_23e730c0b_Token> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_225059ab0_CallData(void) = default;

	inline bool operator==(const _225059ab0_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _225059ab0_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _225059ab0_ExprBuilder {
	jule::Ptr<_225247b9e_Parser> _field_p = jule::Ptr<_225247b9e_Parser>();


	_225059ab0_ExprBuilder(jule::Ptr<_225247b9e_Parser> __param_p): _field_p(__param_p) {}

	

	_225059ab0_ExprBuilder(void) = default;

	inline void _method_push_err(_23e730c0b_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_23e45734a_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_23e730c0b_Token>>&);


	inline jule::Ptr<_23e45734a_LitExpr> _method_build_lit(_23e730c0b_Token);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_primitive_type(_23e730c0b_Token&);


	inline jule::Any _method_build_single(_23e730c0b_Token);


	inline jule::Ptr<_23e45734a_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_UnaryExpr> _method_build_unary(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_type(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_sub_ident(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_VariadicExpr> _method_build_variadic(jule::Slice<_23e730c0b_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_CastExpr> _method_try_build_cast(jule::Slice<_23e730c0b_Token>&);


	inline void _method_push_arg(jule::Slice<jule::Ptr<_23e45734a_Expr>>&,jule::Slice<_23e730c0b_Token>,_23e730c0b_Token);


	inline jule::Slice<jule::Ptr<_23e45734a_Expr>> _method_build_args(jule::Slice<_23e730c0b_Token>);


	inline jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> _method_build_call_generics(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_FnCallExpr> _method_build_fn_call(_23e730c0b_Token&,jule::Ptr<_225059ab0_CallData>&);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_FnDecl> _method_build_anon_fn(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_unsafe(jule::Slice<_23e730c0b_Token>&);


	inline void _method_push_range_lit_part(jule::Slice<_23e730c0b_Token>,_23e730c0b_Token,jule::Slice<jule::Slice<_23e730c0b_Token>>&);


	inline jule::Slice<jule::Slice<_23e730c0b_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_23e730c0b_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_23e730c0b_Token>&);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_StructLit> _method_build_typed_struct_literal(jule::Slice<_23e730c0b_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_BraceLit> _method_build_brace_lit(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_brace_range(jule::Slice<_23e730c0b_Token>&);


	inline jule::Slice<jule::Slice<_23e730c0b_Token>> _method_get_enumerable_parts(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_SliceExpr> _method_build_slice(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_IndexingExpr> _method_build_indexing(jule::Slice<_23e730c0b_Token>,jule::Slice<_23e730c0b_Token>,_23e730c0b_Token);


	inline jule::Ptr<_23e45734a_SlicingExpr> _method_build_slicing(jule::Slice<_23e730c0b_Token>&,jule::Slice<_23e730c0b_Token>&,jule::Int&,_23e730c0b_Token&);


	inline jule::Any _method_build_bracket_range(jule::Slice<_23e730c0b_Token>);


	inline jule::Any _method_build_ternary(jule::Slice<_23e730c0b_Token>);


	inline jule::Any _method_build_data(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_BinopExpr> _method_build_binop(jule::Slice<_23e730c0b_Token>&,jule::Int);


	inline jule::Any _method_build(jule::Slice<_23e730c0b_Token>&);


	inline jule::Any _method_build_kind(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_Expr> _method_build_from_tokens(jule::Slice<_23e730c0b_Token>);


	inline bool operator==(const _225059ab0_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _225059ab0_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _225247b9e_Parser {
	jule::Ptr<_225247b9e_Parser> self;

	jule::Ptr<_23e249d96_Ast> _field_ast = jule::Ptr<_23e249d96_Ast>();
	jule::Slice<jule::Ptr<_23e45734a_Directive>> _field_directives = jule::Slice<jule::Ptr<_23e45734a_Directive>>();
	jule::Ptr<_23e45734a_CommentGroup> _field_comment_group = jule::Ptr<_23e45734a_CommentGroup>();
	jule::Slice<_23ceb0c1d_Log> _field_errors = jule::Slice<_23ceb0c1d_Log>();


	_225247b9e_Parser(jule::Ptr<_23e249d96_Ast> __param_ast, jule::Slice<jule::Ptr<_23e45734a_Directive>> __param_directives, jule::Ptr<_23e45734a_CommentGroup> __param_comment_group, jule::Slice<_23ceb0c1d_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_comment_group(__param_comment_group), _field_errors(__param_errors) {
		this->self = jule::Ptr<_225247b9e_Parser>::make(this, nullptr);

	}

	~_225247b9e_Parser(void) { this->self.ref = nullptr; }

	_225247b9e_Parser(void) { this->self = jule::Ptr<_225247b9e_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_23e730c0b_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_23e45734a_Expr> _method_build_expr(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_Directive> _method_build_directive(jule::Slice<_23e730c0b_Token>);


	inline void _method_push_directive(jule::Ptr<_23e45734a_Directive>);


	inline void _method_process_comment(jule::Ptr<_23e45734a_Comment>&);


	inline jule::Ptr<_23e45734a_ScopeTree> _method_build_scope(jule::Slice<_23e730c0b_Token>&);


	inline std::tuple<jule::Ptr<_23e45734a_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_23e730c0b_Token>&,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ptr<_23e45734a_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_23e730c0b_Token>&,jule::Int*,jule::Bool);


	inline jule::Ptr<_23e45734a_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_23e730c0b_Token>&);


	inline void _method_build_var_type_and_expr(jule::Ptr<_23e45734a_VarDecl>&,jule::Slice<_23e730c0b_Token>&);


	inline void _method_build_var_common(jule::Ptr<_23e45734a_VarDecl>&,jule::Slice<_23e730c0b_Token>);


	inline void _method_build_var_begin(jule::Ptr<_23e45734a_VarDecl>&,jule::Ptr<jule::Int>,jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_VarDecl> _method_build_var(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_GenericDecl> _method_build_generic(jule::Slice<_23e730c0b_Token>&);


	inline jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> _method_build_generics(jule::Slice<_23e730c0b_Token>&,_23e730c0b_Token&);


	inline jule::Ptr<_23e45734a_ParamDecl> _method_build_self_param(jule::Slice<_23e730c0b_Token>);


	inline void _method_param_type_begin(jule::Ptr<_23e45734a_ParamDecl>&,jule::Int&,jule::Slice<_23e730c0b_Token>&);


	inline void _method_build_param_type(jule::Ptr<_23e45734a_ParamDecl>&,jule::Slice<_23e730c0b_Token>&);


	inline void _method_param_body_id(jule::Ptr<_23e45734a_ParamDecl>,_23e730c0b_Token);


	inline void _method_build_param_body(jule::Ptr<_23e45734a_ParamDecl>&,jule::Ptr<jule::Int>,jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_ParamDecl> _method_build_param(jule::Slice<_23e730c0b_Token>);


	inline void _method_check_params(jule::Slice<jule::Ptr<_23e45734a_ParamDecl>>&);


	inline jule::Slice<jule::Ptr<_23e45734a_ParamDecl>> _method_build_params(jule::Slice<_23e730c0b_Token>&,jule::Bool);


	inline std::tuple<jule::Ptr<_23e45734a_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_23e730c0b_Token>&,jule::Int&);


	inline std::tuple<jule::Ptr<_23e45734a_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_23e730c0b_Token>&,jule::Int&);


	inline jule::Ptr<_23e45734a_FnDecl> _method_build_fn_prototype(jule::Slice<_23e730c0b_Token>&,jule::Int&,jule::Bool);


	inline jule::Ptr<_23e45734a_FnDecl> _method_build_fn(jule::Slice<_23e730c0b_Token>&,jule::Bool,jule::Bool);


	inline jule::Slice<_23e730c0b_Token> _method_get_use_decl_selectors(jule::Slice<_23e730c0b_Token>);


	inline void _method_build_cpp_use_decl(jule::Ptr<_23e45734a_UseDecl>&,jule::Slice<_23e730c0b_Token>&);


	inline void _method_build_std_use_decl(jule::Ptr<_23e45734a_UseDecl>&,jule::Slice<_23e730c0b_Token>);


	inline void _method_build_ident_use_decl(jule::Ptr<_23e45734a_UseDecl>&,jule::Slice<_23e730c0b_Token>);


	inline void _method_parse_use_decl(jule::Ptr<_23e45734a_UseDecl>&,jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_UseDecl> _method_build_use_decl(jule::Slice<_23e730c0b_Token>,jule::Bool);


	inline jule::Ptr<_23e45734a_Expr> _method_build_enum_item_expr(jule::Ptr<jule::Int>,jule::Slice<_23e730c0b_Token>&);


	inline jule::Slice<jule::Ptr<_23e45734a_EnumItemDecl>> _method_build_enum_items(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_EnumDecl> _method_build_enum_decl(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_FieldDecl> _method_build_field(jule::Slice<_23e730c0b_Token>);


	inline jule::Slice<jule::Ptr<_23e45734a_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_StructDecl> _method_build_struct_decl(jule::Slice<_23e730c0b_Token>&);


	inline void _method_check_method_receiver(jule::Ptr<_23e45734a_FnDecl>&);


	inline jule::Slice<jule::Ptr<_23e45734a_FnDecl>> _method_build_trait_methods(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_TraitDecl> _method_build_trait_decl(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_FnDecl> _method_build_cpp_link_fn(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_VarDecl> _method_build_cpp_link_var(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_StructDecl> _method_build_cpp_link_struct(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_23e730c0b_Token>);


	inline jule::Ptr<_23e45734a_UseDecl> _method_build_cpp_link_use(jule::Slice<_23e730c0b_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_FnDecl> _method_get_method(jule::Slice<_23e730c0b_Token>&);


	inline void _method_parse_impl_body(jule::Ptr<_23e45734a_Impl>&,jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_Impl> _method_build_impl(jule::Slice<_23e730c0b_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_23e730c0b_Token>&);


	inline void _method_check_comment_group(_23e45734a_Node&);


	inline void _method_check_directive(_23e45734a_Node&);


	inline void _method_apply_meta(_23e45734a_Node&,jule::Bool);


	inline void _method_check_use_decl(_23e45734a_Node&);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_23e730c0b_Token>);


	inline _23e45734a_Node _method_parse_node(jule::Slice<_23e730c0b_Token>&);


	inline void _method_append_node(jule::Slice<_23e730c0b_Token>&);


	inline void _method_remove_range(jule::Int,jule::Str,jule::Slice<_23e730c0b_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_wrong_order_close_err(_23e730c0b_Token&,jule::Slice<_23e730c0b_Token>&,jule::Slice<jule::Int>&);


	inline void _method_push_range_close(_23e730c0b_Token,jule::Str,jule::Slice<_23e730c0b_Token>&,jule::Slice<jule::Int>&);


	inline void _method_check_ranges(jule::Slice<_23e730c0b_Token>&);


	inline void _method_parse(jule::Ptr<_23e4593c4_File>&);


	inline bool operator==(const _225247b9e_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _225247b9e_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _225272404_TypeBuilder {
	jule::Ptr<_225247b9e_Parser> _field_p = jule::Ptr<_225247b9e_Parser>();
	jule::Slice<_23e730c0b_Token> _field_tokens = jule::Slice<_23e730c0b_Token>();
	jule::Int* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();


	_225272404_TypeBuilder(jule::Ptr<_225247b9e_Parser> __param_p, jule::Slice<_23e730c0b_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_225272404_TypeBuilder(void) = default;

	inline void _method_push_err(_23e730c0b_Token,jule::Str);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_prim(void);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_23e730c0b_Token>> _method_ident_generics(void);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_ident(void);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_fn(void);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_ptr(void);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_sptr(void);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_op(void);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_slc(void);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_arr(void);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_map(jule::Int,jule::Slice<_23e730c0b_Token>&);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_build_enumerable(void);


	inline jule::Ptr<_23e45734a_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ptr<_23e45734a_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _225272404_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _225272404_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _226100d86_Const {
	jule::Any _field_data = jule::Any();


	_226100d86_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_226100d86_Const(void) = default;

	static inline jule::Ptr<_226100d86_Const> _static_method_new_i64(jule::I64);


	static inline jule::Ptr<_226100d86_Const> _static_method_new_u64(jule::U64);


	static inline jule::Ptr<_226100d86_Const> _static_method_new_bool(jule::Bool);


	static inline jule::Ptr<_226100d86_Const> _static_method_new_str(jule::Str);


	static inline jule::Ptr<_226100d86_Const> _static_method_new_f64(jule::F64);


	static inline jule::Ptr<_226100d86_Const> _static_method_new_nil(void);


	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_226100d86_Const);


	inline jule::Bool _method_and(_226100d86_Const);


	inline jule::Bool _method_or(_226100d86_Const);


	inline jule::Bool _method_eqs(_226100d86_Const);


	inline jule::Bool _method_lt(_226100d86_Const);


	inline jule::Bool _method_gt(_226100d86_Const);


	inline jule::Bool _method_add(_226100d86_Const);


	inline jule::Bool _method_sub(_226100d86_Const);


	inline jule::Bool _method_mul(_226100d86_Const);


	inline jule::Bool _method_div(_226100d86_Const);


	inline jule::Bool _method_mod(_226100d86_Const);


	inline jule::Bool _method_bitwise_and(_226100d86_Const);


	inline jule::Bool _method_bitwise_or(_226100d86_Const);


	inline jule::Bool _method_xor(_226100d86_Const);


	inline jule::Bool _method_lshift(_226100d86_Const);


	inline jule::Bool _method_rshift(_226100d86_Const);


	inline bool operator==(const _226100d86_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _226100d86_Const &_Src) const { return !this->operator==(_Src); }
};


struct _225036509_FieldIns {
	jule::Ptr<_225036509_Field> _field_decl = jule::Ptr<_225036509_Field>();
	jule::Ptr<_23e2b5818_TypeKind> _field_kind = jule::Ptr<_23e2b5818_TypeKind>();


	_225036509_FieldIns(jule::Ptr<_225036509_Field> __param_decl, jule::Ptr<_23e2b5818_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_225036509_FieldIns(void) = default;

	inline bool operator==(const _225036509_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _225036509_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _225036509_StructIns: public _23e2b5818_Kind {
	jule::Ptr<_225036509_StructIns> self;

	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_225036509_Struct> _field_decl = jule::Ptr<_225036509_Struct>();
	jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>();
	jule::Slice<jule::Ptr<_225036509_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_225036509_FieldIns>>();
	jule::Slice<jule::Ptr<_2252d6a73_Fn>> _field_methods = jule::Slice<jule::Ptr<_2252d6a73_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_22551ab31_ReferenceStack> _field_references = jule::Ptr<_22551ab31_ReferenceStack>();


	_225036509_StructIns(jule::Bool __param_checked, jule::Ptr<_225036509_Struct> __param_decl, jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_225036509_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_2252d6a73_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_22551ab31_ReferenceStack> __param_references): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references) {
		this->self = jule::Ptr<_225036509_StructIns>::make(this, nullptr);

	}

	~_225036509_StructIns(void) { this->self.ref = nullptr; }

	_225036509_StructIns(void) { this->self = jule::Ptr<_225036509_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline jule::Bool _method_same(jule::Ptr<_225036509_StructIns>);


	inline jule::Ptr<_2252d6a73_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ptr<_225036509_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _225036509_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_references == _Src._field_references;
	}

	inline bool operator!=(const _225036509_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _2252d6a73_RetType {
	jule::Ptr<_23e2b5818_TypeSymbol> _field_kind = jule::Ptr<_23e2b5818_TypeSymbol>();
	jule::Slice<_23e730c0b_Token> _field_idents = jule::Slice<_23e730c0b_Token>();


	_2252d6a73_RetType(jule::Ptr<_23e2b5818_TypeSymbol> __param_kind, jule::Slice<_23e730c0b_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_2252d6a73_RetType(void) = default;

	inline bool operator==(const _2252d6a73_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _2252d6a73_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _2252d6a73_ParamIns {
	jule::Ptr<_2252d6a73_Param> _field_decl = jule::Ptr<_2252d6a73_Param>();
	jule::Ptr<_23e2b5818_TypeKind> _field_kind = jule::Ptr<_23e2b5818_TypeKind>();


	_2252d6a73_ParamIns(jule::Ptr<_2252d6a73_Param> __param_decl, jule::Ptr<_23e2b5818_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_2252d6a73_ParamIns(void) = default;

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _2252d6a73_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _2252d6a73_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _2252d6a73_FnIns: public _23e2b5818_Kind {
	jule::Ptr<_2252d6a73_FnIns> self;

	jule::Ptr<_225036509_StructIns> _field_owner = jule::Ptr<_225036509_StructIns>();
	jule::Ptr<_2252d6a73_Fn> _field_decl = jule::Ptr<_2252d6a73_Fn>();
	jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>();
	jule::Slice<jule::Ptr<_2252d6a73_ParamIns>> _field_params = jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>();
	jule::Ptr<_23e2b5818_TypeKind> _field_result = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Ptr<_2255ba3ea_Scope> _field_scope = jule::Ptr<_2255ba3ea_Scope>();
	jule::Ptr<_22551ab31_ReferenceStack> _field_references = jule::Ptr<_22551ab31_ReferenceStack>();
	jule::Ptr<_22551ab31_ReferenceStack> _field_refers = jule::Ptr<_22551ab31_ReferenceStack>();
	jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)> _field_caller = jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();
	jule::Bool _field_anon = jule::Bool();


	_2252d6a73_FnIns(jule::Ptr<_225036509_StructIns> __param_owner, jule::Ptr<_2252d6a73_Fn> __param_decl, jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_2252d6a73_ParamIns>> __param_params, jule::Ptr<_23e2b5818_TypeKind> __param_result, jule::Ptr<_2255ba3ea_Scope> __param_scope, jule::Ptr<_22551ab31_ReferenceStack> __param_references, jule::Ptr<_22551ab31_ReferenceStack> __param_refers, jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_refers(__param_refers), _field_caller(__param_caller), _field_reloaded(__param_reloaded), _field_anon(__param_anon) {
		this->self = jule::Ptr<_2252d6a73_FnIns>::make(this, nullptr);

	}

	~_2252d6a73_FnIns(void) { this->self.ref = nullptr; }

	_2252d6a73_FnIns(void) { this->self = jule::Ptr<_2252d6a73_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_same(jule::Ptr<_2252d6a73_FnIns>);


	inline jule::Str _method_get_kind_str(jule::Bool);


	inline bool operator==(const _2252d6a73_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _2252d6a73_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _22551ab31_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();


	_22551ab31_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_22551ab31_ReferenceStack(void) = default;

	static inline jule::Ptr<_22551ab31_ReferenceStack> _static_method_new(void);


	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline jule::Bool _method_exist_0(jule::Ptr<_2258258db_Var>);
	inline jule::Bool _method_exist_1(jule::Ptr<_2252d6a73_FnIns>);
	inline jule::Bool _method_exist_2(jule::Ptr<_225036509_StructIns>);


	inline bool operator==(const _22551ab31_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _22551ab31_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _22551ab31_SymbolBuilder {
	jule::Ptr<_22551ab31_SymbolBuilder> self;

	jule::Ptr<_22551ab31_SymbolBuilder> _field_owner = jule::Ptr<_22551ab31_SymbolBuilder>();
	jule::Trait<_225615962_Importer> _field_importer = jule::Trait<_225615962_Importer>();
	jule::Slice<_23ceb0c1d_Log> _field_errors = jule::Slice<_23ceb0c1d_Log>();
	jule::Ptr<_23e249d96_Ast> _field_ast = jule::Ptr<_23e249d96_Ast>();
	jule::Ptr<_225a097a1_SymbolTable> _field_table = jule::Ptr<_225a097a1_SymbolTable>();


	_22551ab31_SymbolBuilder(jule::Ptr<_22551ab31_SymbolBuilder> __param_owner, jule::Trait<_225615962_Importer> __param_importer, jule::Slice<_23ceb0c1d_Log> __param_errors, jule::Ptr<_23e249d96_Ast> __param_ast, jule::Ptr<_225a097a1_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {
		this->self = jule::Ptr<_22551ab31_SymbolBuilder>::make(this, nullptr);

	}

	~_22551ab31_SymbolBuilder(void) { this->self.ref = nullptr; }

	_22551ab31_SymbolBuilder(void) { this->self = jule::Ptr<_22551ab31_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ptr<_22551ab31_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_23e730c0b_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_text(_23e730c0b_Token&,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ptr<_23e45734a_UseDecl>&);


	inline jule::Ptr<_225615962_ImportInfo> _method_build_cpp_header_import(jule::Ptr<_23e45734a_UseDecl>&);


	inline jule::Ptr<_225615962_ImportInfo> _method_build_std_import(jule::Ptr<_23e45734a_UseDecl>&);


	inline jule::Ptr<_225615962_ImportInfo> _method_build_ident_import(jule::Ptr<_23e45734a_UseDecl>&);


	inline jule::Ptr<_225615962_ImportInfo> _method_build_import(jule::Ptr<_23e45734a_UseDecl>&);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ptr<_225615962_ImportInfo>&);


	inline void _method_impl_import_selections(jule::Ptr<_225615962_ImportInfo>&,jule::Ptr<_23e45734a_UseDecl>&);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cycle_error(jule::Ptr<_22551ab31_SymbolBuilder>&,jule::Str,jule::Str&);


	inline void _method_push_cross_cycle_error(jule::Ptr<_22551ab31_SymbolBuilder>&,jule::Ptr<_225615962_ImportInfo>&,_23e730c0b_Token&);


	inline jule::Bool _method_check_import_cycles(jule::Ptr<_225615962_ImportInfo>,jule::Ptr<_23e45734a_UseDecl>&);


	inline jule::Bool _method_import_package(jule::Ptr<_225615962_ImportInfo>&,jule::Ptr<_23e45734a_UseDecl>&);


	inline jule::Ptr<_225615962_ImportInfo> _method_import_use_decl(jule::Ptr<_23e45734a_UseDecl>&);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_23e45734a_Node&);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ptr<_23e45734a_Directive>&);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _22551ab31_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _22551ab31_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_Scope {
	jule::Ptr<_2255ba3ea_Scope> _field_parent = jule::Ptr<_2255ba3ea_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_2255ba3ea_Scope(jule::Ptr<_2255ba3ea_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_2255ba3ea_Scope(void) = default;

	inline bool operator==(const _2255ba3ea_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _2255ba3ea_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_2255ba3ea_Scope> _field_scope = jule::Ptr<_2255ba3ea_Scope>();


	_2255ba3ea_If(jule::Any __param_expr, jule::Ptr<_2255ba3ea_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_2255ba3ea_If(void) = default;

	inline bool operator==(const _2255ba3ea_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _2255ba3ea_If &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_Else {
	jule::Ptr<_2255ba3ea_Scope> _field_scope = jule::Ptr<_2255ba3ea_Scope>();


	_2255ba3ea_Else(jule::Ptr<_2255ba3ea_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_2255ba3ea_Else(void) = default;

	inline bool operator==(const _2255ba3ea_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _2255ba3ea_Else &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_Conditional {
	jule::Slice<jule::Ptr<_2255ba3ea_If>> _field_elifs = jule::Slice<jule::Ptr<_2255ba3ea_If>>();
	jule::Ptr<_2255ba3ea_Else> _field_default = jule::Ptr<_2255ba3ea_Else>();


	_2255ba3ea_Conditional(jule::Slice<jule::Ptr<_2255ba3ea_If>> __param_elifs, jule::Ptr<_2255ba3ea_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_2255ba3ea_Conditional(void) = default;

	inline bool operator==(const _2255ba3ea_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _2255ba3ea_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_InfIter {
	jule::Ptr<_2255ba3ea_Scope> _field_scope = jule::Ptr<_2255ba3ea_Scope>();


	_2255ba3ea_InfIter(jule::Ptr<_2255ba3ea_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_2255ba3ea_InfIter(void) = default;

	inline bool operator==(const _2255ba3ea_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _2255ba3ea_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_2255ba3ea_Scope> _field_scope = jule::Ptr<_2255ba3ea_Scope>();


	_2255ba3ea_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_2255ba3ea_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_2255ba3ea_WhileIter(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _2255ba3ea_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _2255ba3ea_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_RangeIter {
	jule::Ptr<_225aa4a5a_Data> _field_expr = jule::Ptr<_225aa4a5a_Data>();
	jule::Ptr<_2255ba3ea_Scope> _field_scope = jule::Ptr<_2255ba3ea_Scope>();
	jule::Ptr<_2258258db_Var> _field_key_a = jule::Ptr<_2258258db_Var>();
	jule::Ptr<_2258258db_Var> _field_key_b = jule::Ptr<_2258258db_Var>();


	_2255ba3ea_RangeIter(jule::Ptr<_225aa4a5a_Data> __param_expr, jule::Ptr<_2255ba3ea_Scope> __param_scope, jule::Ptr<_2258258db_Var> __param_key_a, jule::Ptr<_2258258db_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_2255ba3ea_RangeIter(void) = default;

	inline bool operator==(const _2255ba3ea_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _2255ba3ea_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_ContSt {
	jule::Uintptr _field_it = jule::Uintptr();


	_2255ba3ea_ContSt(jule::Uintptr __param_it): _field_it(__param_it) {}

	

	_2255ba3ea_ContSt(void) = default;

	inline bool operator==(const _2255ba3ea_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _2255ba3ea_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_BreakSt {
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_mtch = jule::Uintptr();


	_2255ba3ea_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_2255ba3ea_BreakSt(void) = default;

	inline bool operator==(const _2255ba3ea_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _2255ba3ea_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_Label {
	jule::Str _field_ident = jule::Str();


	_2255ba3ea_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_2255ba3ea_Label(void) = default;

	inline bool operator==(const _2255ba3ea_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2255ba3ea_Label &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_GotoSt {
	jule::Str _field_ident = jule::Str();


	_2255ba3ea_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_2255ba3ea_GotoSt(void) = default;

	inline bool operator==(const _2255ba3ea_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2255ba3ea_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_2255ba3ea_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_2255ba3ea_Postfix(void) = default;

	inline bool operator==(const _2255ba3ea_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _2255ba3ea_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_Assign {
	jule::Any _field_l = jule::Any();
	jule::Any _field_r = jule::Any();
	jule::Str _field_op = jule::Str();


	_2255ba3ea_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_2255ba3ea_Assign(void) = default;

	inline bool operator==(const _2255ba3ea_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _2255ba3ea_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();


	_2255ba3ea_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_2255ba3ea_MultiAssign(void) = default;

	inline bool operator==(const _2255ba3ea_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _2255ba3ea_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_Match {
	jule::Ptr<_225aa4a5a_Data> _field_expr = jule::Ptr<_225aa4a5a_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_2255ba3ea_Case>> _field_cases = jule::Slice<jule::Ptr<_2255ba3ea_Case>>();
	jule::Ptr<_2255ba3ea_Case> _field_default = jule::Ptr<_2255ba3ea_Case>();


	_2255ba3ea_Match(jule::Ptr<_225aa4a5a_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_2255ba3ea_Case>> __param_cases, jule::Ptr<_2255ba3ea_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_2255ba3ea_Match(void) = default;

	inline jule::Bool _method_is_generic_type_match(void);


	inline bool operator==(const _2255ba3ea_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _2255ba3ea_Match &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_Case {
	jule::Ptr<_2255ba3ea_Match> _field_owner = jule::Ptr<_2255ba3ea_Match>();
	jule::Ptr<_2255ba3ea_Scope> _field_scope = jule::Ptr<_2255ba3ea_Scope>();
	jule::Slice<jule::Ptr<_225aa4a5a_Data>> _field_exprs = jule::Slice<jule::Ptr<_225aa4a5a_Data>>();
	jule::Ptr<_2255ba3ea_Case> _field_next = jule::Ptr<_2255ba3ea_Case>();


	_2255ba3ea_Case(jule::Ptr<_2255ba3ea_Match> __param_owner, jule::Ptr<_2255ba3ea_Scope> __param_scope, jule::Slice<jule::Ptr<_225aa4a5a_Data>> __param_exprs, jule::Ptr<_2255ba3ea_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_2255ba3ea_Case(void) = default;

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _2255ba3ea_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _2255ba3ea_Case &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_FallSt {
	jule::Uintptr _field_dest_case = jule::Uintptr();


	_2255ba3ea_FallSt(jule::Uintptr __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_2255ba3ea_FallSt(void) = default;

	inline bool operator==(const _2255ba3ea_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _2255ba3ea_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_RetSt {
	jule::Ptr<_2252d6a73_FnIns> _field_func = jule::Ptr<_2252d6a73_FnIns>();
	jule::Slice<jule::Ptr<_2258258db_Var>> _field_vars = jule::Slice<jule::Ptr<_2258258db_Var>>();
	jule::Any _field_expr = jule::Any();


	_2255ba3ea_RetSt(jule::Ptr<_2252d6a73_FnIns> __param_func, jule::Slice<jule::Ptr<_2258258db_Var>> __param_vars, jule::Any __param_expr): _field_func(__param_func), _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_2255ba3ea_RetSt(void) = default;

	inline bool operator==(const _2255ba3ea_RetSt &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2255ba3ea_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_ScopeGoto {
	jule::Ptr<_23e45734a_GotoSt> _field_gt = jule::Ptr<_23e45734a_GotoSt>();
	jule::Ptr<_2255ba3ea_ScopeChecker> _field_scope = jule::Ptr<_2255ba3ea_ScopeChecker>();
	jule::Int _field_pos = jule::Int();


	_2255ba3ea_ScopeGoto(jule::Ptr<_23e45734a_GotoSt> __param_gt, jule::Ptr<_2255ba3ea_ScopeChecker> __param_scope, jule::Int __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_2255ba3ea_ScopeGoto(void) = default;

	inline bool operator==(const _2255ba3ea_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _2255ba3ea_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_ScopeChecker: public _225e7723a_Lookup {
	jule::Ptr<_2255ba3ea_ScopeChecker> self;

	jule::Ptr<_22579574b_Sema> _field_s = jule::Ptr<_22579574b_Sema>();
	jule::Ptr<_2252d6a73_FnIns> _field_owner = jule::Ptr<_2252d6a73_FnIns>();
	jule::Ptr<_2255ba3ea_ScopeChecker> _field_parent = jule::Ptr<_2255ba3ea_ScopeChecker>();
	jule::Int _field_child_index = jule::Int();
	jule::Ptr<_225a097a1_SymbolTable> _field_table = jule::Ptr<_225a097a1_SymbolTable>();
	jule::Ptr<_2255ba3ea_Scope> _field_scope = jule::Ptr<_2255ba3ea_Scope>();
	jule::Ptr<_23e45734a_ScopeTree> _field_tree = jule::Ptr<_23e45734a_ScopeTree>();
	jule::Ptr<_23e2b5818_TypeKind> _field_result = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Uintptr _field_it = jule::Uintptr();
	jule::Uintptr _field_cse = jule::Uintptr();
	jule::Ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeGoto>>>();
	jule::Int _field_i = jule::Int();


	_2255ba3ea_ScopeChecker(jule::Ptr<_22579574b_Sema> __param_s, jule::Ptr<_2252d6a73_FnIns> __param_owner, jule::Ptr<_2255ba3ea_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ptr<_225a097a1_SymbolTable> __param_table, jule::Ptr<_2255ba3ea_Scope> __param_scope, jule::Ptr<_23e45734a_ScopeTree> __param_tree, jule::Ptr<_23e2b5818_TypeKind> __param_result, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeGoto>>> __param_gotos, jule::Int __param_i): _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_result(__param_result), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {
		this->self = jule::Ptr<_2255ba3ea_ScopeChecker>::make(this, nullptr);

	}

	~_2255ba3ea_ScopeChecker(void) { this->self.ref = nullptr; }

	_2255ba3ea_ScopeChecker(void) { this->self = jule::Ptr<_2255ba3ea_ScopeChecker>::make(this, nullptr); }

	inline jule::Ptr<_225615962_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_225615962_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)>);


	inline jule::Ptr<_2258258db_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_23e2b5818_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_225036509_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_2252d6a73_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_2255ab70a_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_2255aae79_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Bool _method_is_deferred(void);


	inline jule::Ptr<_2255ba3ea_ScopeChecker> _method_get_root(void);


	inline jule::Ptr<_2255ba3ea_Label> _method_find_label(jule::Str);


	inline jule::Ptr<_2255ba3ea_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ptr<_2255ba3ea_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ptr<_23e45734a_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ptr<_23e45734a_TypeAliasDecl>);


	inline jule::Ptr<_2255ba3ea_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ptr<_23e45734a_ScopeTree>&,jule::Ptr<_2255ba3ea_Scope>&,jule::Ptr<_2255ba3ea_ScopeChecker>&);


	inline jule::Ptr<_2255ba3ea_Scope> _method_check_child_sc(jule::Ptr<_23e45734a_ScopeTree>&,jule::Ptr<_2255ba3ea_ScopeChecker>&);


	inline jule::Ptr<_2255ba3ea_Scope> _method_check_child(jule::Ptr<_23e45734a_ScopeTree>&);


	inline void _method_check_anon_scope(jule::Ptr<_23e45734a_ScopeTree>);


	inline void _method_process_error_call(jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>&,_23e730c0b_Token);


	inline void _method_check_expr(jule::Ptr<_23e45734a_Expr>);


	inline void _method_check_co_expr(jule::Ptr<_23e45734a_CoExpr>);


	inline jule::Ptr<_2255ba3ea_If> _method_check_if(jule::Ptr<_23e45734a_If>);


	inline jule::Ptr<_2255ba3ea_Else> _method_check_else(jule::Ptr<_23e45734a_Else>);


	inline void _method_check_conditional(jule::Ptr<_23e45734a_Conditional>);


	inline jule::Ptr<_2255ba3ea_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ptr<_23e45734a_ScopeTree>,jule::Ptr<_2255ba3ea_ScopeChecker>);


	inline jule::Ptr<_2255ba3ea_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ptr<_23e45734a_ScopeTree>&);


	inline void _method_check_inf_iter(jule::Ptr<_23e45734a_Iter>&);


	inline void _method_check_while_iter(jule::Ptr<_23e45734a_Iter>&);


	inline void _method_check_range_iter(jule::Ptr<_23e45734a_Iter>&);


	inline void _method_check_iter(jule::Ptr<_23e45734a_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ptr<_2255ba3ea_ContSt> _method_check_cont_valid_scope(jule::Ptr<_23e45734a_ContSt>);


	inline void _method_check_cont(jule::Ptr<_23e45734a_ContSt>);


	inline void _method_check_label(jule::Ptr<_23e45734a_LabelSt>);


	inline void _method_push_goto(jule::Ptr<_23e45734a_GotoSt>);


	inline void _method_check_postfix(jule::Ptr<_23e45734a_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ptr<_23e45734a_AssignSt>&);


	inline void _method___process_end_part_of_multi_assign(jule::Ptr<_2255ba3ea_MultiAssign>,jule::Ptr<_23e45734a_AssignSt>,jule::Ptr<_23e45734a_AssignLeft>,jule::Ptr<_225aa4a5a_Data>,jule::Ptr<_225aa4a5a_Data>);


	inline void _method_check_ret_multi_assign(jule::Ptr<_23e45734a_AssignSt>&);


	inline void _method_check_multi_assign(jule::Ptr<_23e45734a_AssignSt>&);


	inline void _method_check_assign_st(jule::Ptr<_23e45734a_AssignSt>);


	inline jule::Ptr<_2255ba3ea_Scope> _method_check_case_scope(jule::Ptr<_2255ba3ea_Case>&,jule::Ptr<_23e45734a_ScopeTree>&);


	inline jule::Ptr<_2255ba3ea_Case> _method_check_case(jule::Ptr<_2255ba3ea_Match>,jule::Int,jule::Ptr<_23e45734a_Case>,jule::Ptr<_225aa4a5a_Data>);


	inline void _method_check_cases(jule::Ptr<_23e45734a_MatchCase>&,jule::Ptr<_2255ba3ea_Match>,jule::Ptr<_225aa4a5a_Data>);


	inline jule::Ptr<_2255ba3ea_Case> _method_check_default(jule::Ptr<_2255ba3ea_Match>,jule::Ptr<_23e45734a_Else>);


	inline void _method_check_comptime_panic(jule::Ptr<_2255ba3ea_Scope>&,_23e730c0b_Token);


	inline void _method_push_type_match(jule::Ptr<_2255ba3ea_Match>,jule::Ptr<_23e45734a_MatchCase>&);


	inline void _method_check_type_match(jule::Ptr<_23e45734a_MatchCase>&);


	inline void _method_check_common_match(jule::Ptr<_23e45734a_MatchCase>&);


	inline void _method_check_match(jule::Ptr<_23e45734a_MatchCase>);


	inline void _method_check_fall(jule::Ptr<_23e45734a_FallSt>);


	inline jule::Ptr<_2255ba3ea_BreakSt> _method_check_break_with_label(jule::Ptr<_23e45734a_BreakSt>);


	inline jule::Ptr<_2255ba3ea_BreakSt> _method_check_plain_break(jule::Ptr<_23e45734a_BreakSt>);


	inline void _method_check_break(jule::Ptr<_23e45734a_BreakSt>);


	inline void _method_check_ret(jule::Ptr<_23e45734a_RetSt>);


	inline void _method_check_use_expr(jule::Ptr<_23e45734a_UseExpr>);


	inline void _method_check_node(jule::Any&);


	inline void _method_check_result(void);


	inline void _method_check_tree(void);


	inline void _method_check_goto(jule::Ptr<_2255ba3ea_ScopeGoto>&,jule::Ptr<_2255ba3ea_ScopeLabel>&);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ptr<_23e45734a_ScopeTree>&,jule::Ptr<_2255ba3ea_Scope>&);


	inline jule::Ptr<_2255ba3ea_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _2255ba3ea_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_result == _Src._field_result &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _2255ba3ea_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_BinopExprModel {
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	jule::Str _field_op = jule::Str();


	_2255b85b3_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_2255b85b3_BinopExprModel(void) = default;

	inline bool operator==(const _2255b85b3_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _2255b85b3_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_UnaryExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_2255b85b3_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_2255b85b3_UnaryExprModel(void) = default;

	inline bool operator==(const _2255b85b3_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _2255b85b3_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_StructArgExprModel {
	jule::Ptr<_225036509_FieldIns> _field_field = jule::Ptr<_225036509_FieldIns>();
	jule::Any _field_expr = jule::Any();


	_2255b85b3_StructArgExprModel(jule::Ptr<_225036509_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_2255b85b3_StructArgExprModel(void) = default;

	inline bool operator==(const _2255b85b3_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2255b85b3_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_StructLitExprModel {
	jule::Ptr<_225036509_StructIns> _field_strct = jule::Ptr<_225036509_StructIns>();
	jule::Slice<jule::Ptr<_2255b85b3_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_2255b85b3_StructArgExprModel>>();


	_2255b85b3_StructLitExprModel(jule::Ptr<_225036509_StructIns> __param_strct, jule::Slice<jule::Ptr<_2255b85b3_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_2255b85b3_StructLitExprModel(void) = default;

	inline bool operator==(const _2255b85b3_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _2255b85b3_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_AllocStructLitExprModel {
	jule::Ptr<_2255b85b3_StructLitExprModel> _field_lit = jule::Ptr<_2255b85b3_StructLitExprModel>();


	_2255b85b3_AllocStructLitExprModel(jule::Ptr<_2255b85b3_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_2255b85b3_AllocStructLitExprModel(void) = default;

	inline bool operator==(const _2255b85b3_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _2255b85b3_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_CastingExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_23e2b5818_TypeKind> _field_kind = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Ptr<_23e2b5818_TypeKind> _field_expr_kind = jule::Ptr<_23e2b5818_TypeKind>();


	_2255b85b3_CastingExprModel(jule::Any __param_expr, jule::Ptr<_23e2b5818_TypeKind> __param_kind, jule::Ptr<_23e2b5818_TypeKind> __param_expr_kind): _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_2255b85b3_CastingExprModel(void) = default;

	inline bool operator==(const _2255b85b3_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _2255b85b3_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_SliceExprModel {
	jule::Ptr<_23e2b5818_TypeKind> _field_elem_kind = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_2255b85b3_SliceExprModel(jule::Ptr<_23e2b5818_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_2255b85b3_SliceExprModel(void) = default;

	inline bool operator==(const _2255b85b3_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _2255b85b3_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_IndexigExprModel {
	jule::Ptr<_225aa4a5a_Data> _field_expr = jule::Ptr<_225aa4a5a_Data>();
	jule::Ptr<_225aa4a5a_Data> _field_index = jule::Ptr<_225aa4a5a_Data>();


	_2255b85b3_IndexigExprModel(jule::Ptr<_225aa4a5a_Data> __param_expr, jule::Ptr<_225aa4a5a_Data> __param_index): _field_expr(__param_expr), _field_index(__param_index) {}

	

	_2255b85b3_IndexigExprModel(void) = default;

	inline bool operator==(const _2255b85b3_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _2255b85b3_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_AnonFnExprModel {
	jule::Ptr<_2252d6a73_FnIns> _field_func = jule::Ptr<_2252d6a73_FnIns>();
	jule::Bool _field_global = jule::Bool();


	_2255b85b3_AnonFnExprModel(jule::Ptr<_2252d6a73_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_2255b85b3_AnonFnExprModel(void) = default;

	inline bool operator==(const _2255b85b3_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _2255b85b3_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();


	_2255b85b3_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_2255b85b3_KeyValPairExprModel(void) = default;

	inline bool operator==(const _2255b85b3_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _2255b85b3_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_MapExprModel {
	jule::Ptr<_23e2b5818_TypeKind> _field_key_kind = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Ptr<_23e2b5818_TypeKind> _field_val_kind = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Slice<jule::Ptr<_2255b85b3_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_2255b85b3_KeyValPairExprModel>>();


	_2255b85b3_MapExprModel(jule::Ptr<_23e2b5818_TypeKind> __param_key_kind, jule::Ptr<_23e2b5818_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_2255b85b3_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_2255b85b3_MapExprModel(void) = default;

	inline bool operator==(const _2255b85b3_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _2255b85b3_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_SlicingExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_2255b85b3_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_2255b85b3_SlicingExprModel(void) = default;

	inline bool operator==(const _2255b85b3_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _2255b85b3_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_TraitSubIdentExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_ident = jule::Str();


	_2255b85b3_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident): _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_2255b85b3_TraitSubIdentExprModel(void) = default;

	inline bool operator==(const _2255b85b3_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2255b85b3_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_StructSubIdentExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_23e2b5818_TypeKind> _field_expr_kind = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Ptr<_2252d6a73_FnIns> _field_method = jule::Ptr<_2252d6a73_FnIns>();
	jule::Ptr<_225036509_FieldIns> _field_field = jule::Ptr<_225036509_FieldIns>();


	_2255b85b3_StructSubIdentExprModel(jule::Any __param_expr, jule::Ptr<_23e2b5818_TypeKind> __param_expr_kind, jule::Ptr<_2252d6a73_FnIns> __param_method, jule::Ptr<_225036509_FieldIns> __param_field): _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_2255b85b3_StructSubIdentExprModel(void) = default;

	inline bool operator==(const _2255b85b3_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _2255b85b3_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_StructStaticIdentExprModel {
	jule::Ptr<_225036509_StructIns> _field_structure = jule::Ptr<_225036509_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_2252d6a73_FnIns> _field_method = jule::Ptr<_2252d6a73_FnIns>();


	_2255b85b3_StructStaticIdentExprModel(jule::Ptr<_225036509_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_2252d6a73_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_2255b85b3_StructStaticIdentExprModel(void) = default;

	inline bool operator==(const _2255b85b3_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _2255b85b3_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_ArrayExprModel {
	jule::Ptr<_23e2b5818_Arr> _field_kind = jule::Ptr<_23e2b5818_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_2255b85b3_ArrayExprModel(jule::Ptr<_23e2b5818_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_2255b85b3_ArrayExprModel(void) = default;

	inline bool operator==(const _2255b85b3_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _2255b85b3_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();


	_2255b85b3_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_2255b85b3_CommonIdentExprModel(void) = default;

	inline bool operator==(const _2255b85b3_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2255b85b3_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_CommonSubIdentExprModel {
	jule::Ptr<_23e2b5818_TypeKind> _field_expr_kind = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_ident = jule::Str();


	_2255b85b3_CommonSubIdentExprModel(jule::Ptr<_23e2b5818_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_2255b85b3_CommonSubIdentExprModel(void) = default;

	inline bool operator==(const _2255b85b3_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2255b85b3_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_TupleExprModel {
	jule::Slice<jule::Ptr<_225aa4a5a_Data>> _field_datas = jule::Slice<jule::Ptr<_225aa4a5a_Data>>();


	_2255b85b3_TupleExprModel(jule::Slice<jule::Ptr<_225aa4a5a_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_2255b85b3_TupleExprModel(void) = default;

	inline bool operator==(const _2255b85b3_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _2255b85b3_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();


	_2255b85b3_BuiltinOutCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2255b85b3_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(const _2255b85b3_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2255b85b3_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();


	_2255b85b3_BuiltinOutlnCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2255b85b3_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(const _2255b85b3_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2255b85b3_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();


	_2255b85b3_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2255b85b3_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(const _2255b85b3_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2255b85b3_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_BuiltinNewCallExprModel {
	jule::Ptr<_23e2b5818_TypeKind> _field_kind = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Any _field_init = jule::Any();


	_2255b85b3_BuiltinNewCallExprModel(jule::Ptr<_23e2b5818_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_2255b85b3_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(const _2255b85b3_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _2255b85b3_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_BuiltinMakeCallExprModel {
	jule::Ptr<_23e2b5818_TypeKind> _field_kind = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();


	_2255b85b3_BuiltinMakeCallExprModel(jule::Ptr<_23e2b5818_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_2255b85b3_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(const _2255b85b3_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _2255b85b3_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();


	_2255b85b3_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_2255b85b3_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(const _2255b85b3_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	inline bool operator!=(const _2255b85b3_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_BuiltinErrorCallExprModel {
	jule::Ptr<_2252d6a73_FnIns> _field_func = jule::Ptr<_2252d6a73_FnIns>();
	jule::Any _field_err = jule::Any();


	_2255b85b3_BuiltinErrorCallExprModel(jule::Ptr<_2252d6a73_FnIns> __param_func, jule::Any __param_err): _field_func(__param_func), _field_err(__param_err) {}

	

	_2255b85b3_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(const _2255b85b3_BuiltinErrorCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _2255b85b3_BuiltinErrorCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_SizeofExprModel {
	jule::Any _field_expr = jule::Any();


	_2255b85b3_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2255b85b3_SizeofExprModel(void) = default;

	inline bool operator==(const _2255b85b3_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2255b85b3_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_AlignofExprModel {
	jule::Any _field_expr = jule::Any();


	_2255b85b3_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2255b85b3_AlignofExprModel(void) = default;

	inline bool operator==(const _2255b85b3_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2255b85b3_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_RuneExprModel {
	jule::I32 _field_code = jule::I32();


	_2255b85b3_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_2255b85b3_RuneExprModel(void) = default;

	inline bool operator==(const _2255b85b3_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _2255b85b3_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();


	_2255b85b3_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2255b85b3_IntegratedToStrExprModel(void) = default;

	inline bool operator==(const _2255b85b3_IntegratedToStrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2255b85b3_IntegratedToStrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_TernaryExprModel {
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_2255b85b3_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_2255b85b3_TernaryExprModel(void) = default;

	inline bool operator==(const _2255b85b3_TernaryExprModel &_Src) const {
		return 
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _2255b85b3_TernaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _225613894_DirectiveChecker {
	jule::Ptr<_22579574b_Sema> _field_s = jule::Ptr<_22579574b_Sema>();
	jule::Slice<jule::Ptr<_23e45734a_Directive>> _field_d = jule::Slice<jule::Ptr<_23e45734a_Directive>>();
	jule::Any _field_o = jule::Any();


	_225613894_DirectiveChecker(jule::Ptr<_22579574b_Sema> __param_s, jule::Slice<jule::Ptr<_23e45734a_Directive>> __param_d, jule::Any __param_o): _field_s(__param_s), _field_d(__param_d), _field_o(__param_o) {}

	

	_225613894_DirectiveChecker(void) = default;

	inline void _method_check_cdef(jule::Ptr<_23e45734a_Directive>&);


	inline void _method_check_typedef(jule::Ptr<_23e45734a_Directive>&);


	inline void _method_check_derive(jule::Ptr<_23e45734a_Directive>&);


	inline void _method_check_namespace(jule::Ptr<_23e45734a_Directive>&);


	inline void _method_check_directive(jule::Ptr<_23e45734a_Directive>&);


	inline void _method_check(void);


	inline bool operator==(const _225613894_DirectiveChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_d == _Src._field_d &&
			this->_field_o == _Src._field_o;
	}

	inline bool operator!=(const _225613894_DirectiveChecker &_Src) const { return !this->operator==(_Src); }
};


struct _225615962_Package: public _225e7723a_Lookup {
	jule::Slice<jule::Ptr<_225a097a1_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>();


	_225615962_Package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_225615962_Package(void) = default;

	inline jule::Ptr<_225615962_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_225615962_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)>);


	inline jule::Ptr<_2258258db_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_23e2b5818_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_225036509_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_2252d6a73_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_2255ab70a_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_2255aae79_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _225615962_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _225615962_Package &_Src) const { return !this->operator==(_Src); }
};


struct _22579574b_Sema: public _225e7723a_Lookup {
	jule::Ptr<_22579574b_Sema> self;

	jule::Slice<_23ceb0c1d_Log> _field_errors = jule::Slice<_23ceb0c1d_Log>();
	jule::Slice<jule::Ptr<_225a097a1_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>();
	jule::Ptr<_225a097a1_SymbolTable> _field_file = jule::Ptr<_225a097a1_SymbolTable>();
	jule::Int _field_flags = 0LL;


	_22579574b_Sema(jule::Slice<_23ceb0c1d_Log> __param_errors, jule::Slice<jule::Ptr<_225a097a1_SymbolTable>> __param_files, jule::Ptr<_225a097a1_SymbolTable> __param_file, jule::Int __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {
		this->self = jule::Ptr<_22579574b_Sema>::make(this, nullptr);

	}

	~_22579574b_Sema(void) { this->self.ref = nullptr; }

	_22579574b_Sema(void) { this->self = jule::Ptr<_22579574b_Sema>::make(this, nullptr); }

	inline jule::Ptr<_225615962_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_225615962_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)>);


	inline jule::Ptr<_2258258db_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_23e2b5818_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_225036509_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_2252d6a73_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_2255ab70a_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_2255aae79_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_flag(jule::Int);


	inline void _method_set_current_file(jule::Ptr<_225a097a1_SymbolTable>);


	inline void _method_push_err(_23e730c0b_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_23e730c0b_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline void _method_check_directives(jule::Slice<jule::Ptr<_23e45734a_Directive>>&,jule::Any);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_23e730c0b_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline jule::Any _method_get_import_def(jule::Str,jule::Ptr<_225615962_ImportInfo>&);


	inline void _method_check_import_selections(jule::Ptr<_225615962_ImportInfo>&);


	inline jule::Bool _method_is_use_alias_duplication(jule::Ptr<_225615962_ImportInfo>&);


	inline jule::Bool _method_check_import(jule::Ptr<_225615962_ImportInfo>&);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ptr<_23e2b5818_TypeSymbol>&,jule::Trait<_225e7723a_Lookup>,jule::Ptr<_23e2b5818_Referencer>);


	inline jule::Bool _method_check_type(jule::Ptr<_23e2b5818_TypeSymbol>&,jule::Trait<_225e7723a_Lookup>);


	inline jule::Ptr<_23e2b5818_TypeKind> _method_build_type_with_generics(jule::Ptr<_23e45734a_TypeDecl>&,jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>);


	inline jule::Ptr<_23e2b5818_TypeKind> _method_build_type(jule::Ptr<_23e45734a_TypeDecl>&);


	inline jule::Ptr<_225aa4a5a_Eval> _method_evalpd(jule::Trait<_225e7723a_Lookup>,jule::Ptr<_23e2b5818_TypeKind>,jule::Ptr<_2258258db_Var>);


	inline jule::Ptr<_225aa4a5a_Eval> _method_evalp(jule::Trait<_225e7723a_Lookup>,jule::Ptr<_23e2b5818_TypeKind>);


	inline jule::Ptr<_225aa4a5a_Eval> _method_eval(jule::Trait<_225e7723a_Lookup>);


	inline void _method_check_assign_type(jule::Bool,jule::Ptr<_23e2b5818_TypeKind>&,jule::Ptr<_225aa4a5a_Data>&,_23e730c0b_Token);


	inline jule::Bool _method_check_type_compatibility(jule::Ptr<_23e2b5818_TypeKind>&,jule::Ptr<_23e2b5818_TypeKind>&,_23e730c0b_Token&);


	inline jule::Ptr<_23e2b5818_TypeKind> _method_build_non_generic_type_kind(jule::Ptr<_23e45734a_TypeDecl>&,jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>&);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ptr<_2252d6a73_FnIns>&);


	inline jule::Ptr<_2252d6a73_FnIns> _method_get_trait_check_fn_kind(jule::Ptr<_2252d6a73_Fn>&);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ptr<_2252d6a73_FnIns>&);


	inline void _method_check_ref_validity_for_init_expr(jule::Bool,jule::Ptr<_225aa4a5a_Data>&,_23e730c0b_Token&);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ptr<_23e2b5818_TypeKind>&,jule::Ptr<_225aa4a5a_Data>&,_23e730c0b_Token&);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ptr<_23e2b5818_TypeAlias>&,jule::Trait<_225e7723a_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ptr<_23e2b5818_TypeAlias>&,jule::Trait<_225e7723a_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ptr<_23e2b5818_TypeAlias>&);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ptr<_2255aae79_Enum>);


	inline void _method_check_enum_items_str(jule::Ptr<_2255aae79_Enum>&);


	inline void _method_check_enum_items_int(jule::Ptr<_2255aae79_Enum>&);


	inline void _method_check_enum_decl(jule::Ptr<_2255aae79_Enum>&);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>&);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ptr<_2252d6a73_Fn>&);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ptr<_2252d6a73_Fn>&);


	inline jule::Bool _method_check_fn_decl_types(jule::Ptr<_2252d6a73_Fn>&);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ptr<_2252d6a73_Fn>&);


	inline void _method_check_trait_decl_method(jule::Ptr<_2252d6a73_Fn>&);


	inline void _method_check_trait_decl_methods(jule::Ptr<_2255ab70a_Trait>&);


	inline void _method_check_trait_decl(jule::Ptr<_2255ab70a_Trait>&);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ptr<_2255ab70a_Trait>&,jule::Ptr<_2255b811d_Impl>&);


	inline jule::Bool _method_impl_to_struct(jule::Ptr<_225036509_Struct>&,jule::Ptr<_2255b811d_Impl>&);


	inline void _method_impl_trait(jule::Ptr<_2255b811d_Impl>&);


	inline void _method_impl_struct(jule::Ptr<_2255b811d_Impl>&);


	inline void _method_impl_impl(jule::Ptr<_2255b811d_Impl>&);


	inline void _method_check_var_decl(jule::Ptr<_2258258db_Var>&,jule::Trait<_225e7723a_Lookup>);


	inline void _method_check_global_var_decl(jule::Ptr<_2258258db_Var>&);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ptr<_225036509_Struct>&,jule::Ptr<_2255ab70a_Trait>&);


	inline jule::Bool _method_check_struct_impls(jule::Ptr<_225036509_Struct>&);


	inline jule::Bool _method_check_struct_fields(jule::Ptr<_225036509_Struct>&);


	inline jule::Bool _method_check_struct_decl_methods(jule::Ptr<_225036509_Struct>&);


	inline void _method_check_struct_decl(jule::Ptr<_225036509_Struct>&);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ptr<_2252d6a73_Fn>&);


	inline jule::Bool _method_check_fn_decls(void);


	inline void _method_push_cycle_error(jule::Ptr<_225036509_Struct>&,jule::Ptr<_225036509_Struct>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ptr<_225036509_Struct>&,jule::Ptr<_225036509_Struct>&,jule::Str&);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ptr<_225036509_Struct>&,jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ptr<_225036509_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ptr<_225036509_Struct>&);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_type_inference(jule::Ptr<_225aa4a5a_Data>&,_23e730c0b_Token&);


	inline void _method_check_var(jule::Ptr<_2258258db_Var>&);


	inline void _method_check_type_var(jule::Ptr<_2258258db_Var>&,jule::Trait<_225e7723a_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ptr<_225036509_StructIns>&,jule::Ptr<_2252d6a73_Fn>&);


	inline void _method_check_type_struct(jule::Ptr<_225036509_Struct>&);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ptr<_2252d6a73_FnIns>&);


	inline void _method_check_fn_ins_sc(jule::Ptr<_2252d6a73_FnIns>&,jule::Ptr<_2255ba3ea_ScopeChecker>&);


	inline void _method_check_fn_ins(jule::Ptr<_2252d6a73_FnIns>&);


	inline void _method_check_type_fn(jule::Ptr<_2252d6a73_Fn>&);


	inline void _method_precheck_type_fn(jule::Ptr<_2252d6a73_Fn>&);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>&);


	inline bool operator==(const _22579574b_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file &&
			this->_field_flags == _Src._field_flags;
	}

	inline bool operator!=(const _22579574b_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _2258258db_IterRelation {
	jule::Ptr<_2258258db_Var> _field_range = jule::Ptr<_2258258db_Var>();


	_2258258db_IterRelation(jule::Ptr<_2258258db_Var> __param_range): _field_range(__param_range) {}

	

	_2258258db_IterRelation(void) = default;

	inline bool operator==(const _2258258db_IterRelation &_Src) const {
		return 
			this->_field_range == _Src._field_range;
	}

	inline bool operator!=(const _2258258db_IterRelation &_Src) const { return !this->operator==(_Src); }
};


struct _22582290a_RangeChecker {
	jule::Ptr<_2255ba3ea_ScopeChecker> _field_sc = jule::Ptr<_2255ba3ea_ScopeChecker>();
	jule::Ptr<_23e45734a_RangeKind> _field_rang = jule::Ptr<_23e45734a_RangeKind>();
	jule::Ptr<_2255ba3ea_RangeIter> _field_kind = jule::Ptr<_2255ba3ea_RangeIter>();
	jule::Ptr<_225aa4a5a_Data> _field_d = jule::Ptr<_225aa4a5a_Data>();


	_22582290a_RangeChecker(jule::Ptr<_2255ba3ea_ScopeChecker> __param_sc, jule::Ptr<_23e45734a_RangeKind> __param_rang, jule::Ptr<_2255ba3ea_RangeIter> __param_kind, jule::Ptr<_225aa4a5a_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_22582290a_RangeChecker(void) = default;

	inline jule::Ptr<_2258258db_Var> _method_build_var(jule::Ptr<_23e45734a_VarDecl>&);


	inline void _method_set_size_key(void);


	inline void _method_check_range_expr_validity(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_2258258db_Var>&,jule::Ptr<_23e2b5818_TypeKind>&);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _22582290a_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _22582290a_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _225a097a1_SymbolTable: public _225e7723a_Lookup {
	jule::Ptr<_23e4593c4_File> _field_file = jule::Ptr<_23e4593c4_File>();
	jule::Slice<_22551ab31_Pass> _field_passes = jule::Slice<_22551ab31_Pass>();
	jule::Slice<jule::Ptr<_225615962_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_225615962_ImportInfo>>();
	jule::Slice<jule::Ptr<_2258258db_Var>> _field_vars = jule::Slice<jule::Ptr<_2258258db_Var>>();
	jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>();
	jule::Slice<jule::Ptr<_225036509_Struct>> _field_structs = jule::Slice<jule::Ptr<_225036509_Struct>>();
	jule::Slice<jule::Ptr<_2252d6a73_Fn>> _field_funcs = jule::Slice<jule::Ptr<_2252d6a73_Fn>>();
	jule::Slice<jule::Ptr<_2255ab70a_Trait>> _field_traits = jule::Slice<jule::Ptr<_2255ab70a_Trait>>();
	jule::Slice<jule::Ptr<_2255aae79_Enum>> _field_enums = jule::Slice<jule::Ptr<_2255aae79_Enum>>();
	jule::Slice<jule::Ptr<_2255b811d_Impl>> _field_impls = jule::Slice<jule::Ptr<_2255b811d_Impl>>();


	_225a097a1_SymbolTable(jule::Ptr<_23e4593c4_File> __param_file, jule::Slice<_22551ab31_Pass> __param_passes, jule::Slice<jule::Ptr<_225615962_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_2258258db_Var>> __param_vars, jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_225036509_Struct>> __param_structs, jule::Slice<jule::Ptr<_2252d6a73_Fn>> __param_funcs, jule::Slice<jule::Ptr<_2255ab70a_Trait>> __param_traits, jule::Slice<jule::Ptr<_2255aae79_Enum>> __param_enums, jule::Slice<jule::Ptr<_2255b811d_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_225a097a1_SymbolTable(void) = default;

	inline jule::Ptr<_225615962_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_225615962_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)>);


	inline jule::Ptr<_2258258db_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_23e2b5818_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_225036509_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_2252d6a73_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_2255ab70a_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_2255aae79_Enum> _method_find_enum(jule::Str);


	inline jule::Ptr<_2258258db_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ptr<_23e2b5818_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _225a097a1_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _225a097a1_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


struct _225aa4a5a_Data {
	jule::Ptr<_23e2b5818_TypeKind> _field_kind = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Ptr<_23e2b5818_TypeKind> _field_cast_kind = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_226100d86_Const> _field_constant = jule::Ptr<_226100d86_Const>();


	_225aa4a5a_Data(jule::Ptr<_23e2b5818_TypeKind> __param_kind, jule::Ptr<_23e2b5818_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_226100d86_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_225aa4a5a_Data(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline jule::Bool _method_good_operand(jule::Ptr<_225aa4a5a_Data>&);


	inline bool operator==(const _225aa4a5a_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _225aa4a5a_Data &_Src) const { return !this->operator==(_Src); }
};


struct _225aa4a5a_Value {
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();
	jule::Ptr<_225aa4a5a_Data> _field_data = jule::Ptr<_225aa4a5a_Data>();


	_225aa4a5a_Value(jule::Ptr<_23e45734a_Expr> __param_expr, jule::Ptr<_225aa4a5a_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_225aa4a5a_Value(void) = default;

	inline bool operator==(const _225aa4a5a_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _225aa4a5a_Value &_Src) const { return !this->operator==(_Src); }
};


struct _225aa4a5a_Eval {
	jule::Ptr<_225aa4a5a_Eval> self;

	jule::Ptr<_22579574b_Sema> _field_s = jule::Ptr<_22579574b_Sema>();
	jule::Trait<_225e7723a_Lookup> _field_lookup = jule::Trait<_225e7723a_Lookup>();
	jule::Ptr<_23e2b5818_TypeKind> _field_prefix = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Ptr<_2258258db_Var> _field_owner = jule::Ptr<_2258258db_Var>();


	_225aa4a5a_Eval(jule::Ptr<_22579574b_Sema> __param_s, jule::Trait<_225e7723a_Lookup> __param_lookup, jule::Ptr<_23e2b5818_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Bool __param_ignored, jule::Ptr<_2258258db_Var> __param_owner): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_ignored(__param_ignored), _field_owner(__param_owner) {
		this->self = jule::Ptr<_225aa4a5a_Eval>::make(this, nullptr);

	}

	~_225aa4a5a_Eval(void) { this->self.ref = nullptr; }

	_225aa4a5a_Eval(void) { this->self = jule::Ptr<_225aa4a5a_Eval>::make(this, nullptr); }

	inline void _method_push_err(_23e730c0b_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_lit_nil(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_lit_str(jule::Ptr<_23e45734a_LitExpr>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_lit_bool(jule::Ptr<_23e45734a_LitExpr>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_lit_rune(jule::Ptr<_23e45734a_LitExpr>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_lit_float(jule::Ptr<_23e45734a_LitExpr>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_lit_int(jule::Ptr<_23e45734a_LitExpr>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_lit_num(jule::Ptr<_23e45734a_LitExpr>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_lit(jule::Ptr<_23e45734a_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ptr<_22551ab31_ReferenceStack>&);


	inline void _method_push_reference_to_fn(jule::Ptr<_2252d6a73_FnIns>&);


	inline void _method_push_reference_to_var(jule::Ptr<_2258258db_Var>&);


	inline void _method_push_reference_to_struct(jule::Ptr<_225036509_StructIns>&);


	inline jule::Ptr<_225aa4a5a_Data> _method___eval_enum(jule::Ptr<_2255aae79_Enum>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_enum(jule::Ptr<_2255aae79_Enum>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method___eval_struct(jule::Ptr<_225036509_StructIns>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_struct(jule::Ptr<_225036509_StructIns>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_fn_ins(jule::Ptr<_2252d6a73_FnIns>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_fn(jule::Ptr<_2252d6a73_Fn>,_23e730c0b_Token);


	inline void _method_push_illegal_cycle_error(jule::Ptr<_2258258db_Var>&,jule::Ptr<_2258258db_Var>&,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Ptr<_2258258db_Var>&,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ptr<_2258258db_Var>&,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_var(jule::Ptr<_2258258db_Var>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_type_alias(jule::Ptr<_23e2b5818_TypeAlias>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_def(jule::Any,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_ident(jule::Ptr<_23e45734a_IdentExpr>);


	inline void _method_eval_unary_minus(jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_eval_unary_plus(jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_eval_unary_caret(jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_eval_unary_excl(jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_eval_unary_star(jule::Ptr<_225aa4a5a_Data>&,_23e730c0b_Token&);


	inline void _method_eval_unary_amper(jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_eval_unary_type_decl(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_23e45734a_UnaryExpr>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_unary(jule::Ptr<_23e45734a_UnaryExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_variadic(jule::Ptr<_23e45734a_VariadicExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_unsafe(jule::Ptr<_23e45734a_UnsafeExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_arr(jule::Ptr<_23e45734a_SliceExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_exp_slc(jule::Ptr<_23e45734a_SliceExpr>,jule::Ptr<_23e2b5818_TypeKind>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_slice_expr(jule::Ptr<_23e45734a_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ptr<_225aa4a5a_Data>&,_23e730c0b_Token);


	inline void _method_indexing_ptr(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_23e45734a_IndexingExpr>&);


	inline void _method_indexing_arr(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_23e45734a_IndexingExpr>&);


	inline void _method_indexing_slc(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_23e45734a_IndexingExpr>&);


	inline void _method_indexing_map(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_23e45734a_IndexingExpr>&);


	inline void _method_indexing_str(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_23e45734a_IndexingExpr>&);


	inline void _method_to_indexing(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_23e45734a_IndexingExpr>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_ident_decl_from_indexing(jule::Ptr<_23e45734a_IndexingExpr>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_indexing(jule::Ptr<_23e45734a_IndexingExpr>);


	inline std::tuple<jule::Ptr<_225aa4a5a_Data>,jule::Ptr<_225aa4a5a_Data>> _method_eval_slicing_exprs(jule::Ptr<_23e45734a_SlicingExpr>&);


	inline void _method_slicing_arr(jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_slicing_slc(jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_slicing_str(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_check_slicing(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_23e45734a_SlicingExpr>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_slicing(jule::Ptr<_23e45734a_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ptr<_23e2b5818_TypeKind>,jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline void _method_cast_struct(jule::Ptr<_23e2b5818_TypeKind>,jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline void _method_cast_ref(jule::Ptr<_23e2b5818_TypeKind>,jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline void _method_cast_slc(jule::Ptr<_23e2b5818_TypeKind>,jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline void _method_cast_str(jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline void _method_cast_int(jule::Ptr<_23e2b5818_TypeKind>,jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline void _method_cast_num(jule::Ptr<_23e2b5818_TypeKind>,jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline void _method_cast_prim(jule::Ptr<_23e2b5818_TypeKind>,jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline void _method_cast_constant(jule::Ptr<_23e2b5818_TypeKind>&,jule::Ptr<_225aa4a5a_Data>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_cast_by_type_n_data(jule::Ptr<_23e2b5818_TypeKind>,jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_cast(jule::Ptr<_23e45734a_CastExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_ns_selection(jule::Ptr<_23e45734a_NsSelectionExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_struct_lit_explicit(jule::Ptr<_225036509_StructIns>,jule::Slice<jule::Any>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_struct_lit(jule::Ptr<_23e45734a_StructLit>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_type(jule::Ptr<_23e45734a_TypeDecl>);


	inline void _method_call_type_fn(jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ptr<_2252d6a73_FnIns>,jule::Ptr<_23e45734a_FnCallExpr>);


	inline void _method_call_builtin_fn(jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_check_fn_of_concurrent_call(jule::Ptr<_2252d6a73_FnIns>&,_23e730c0b_Token);


	inline void _method_process_exceptional_handler(jule::Ptr<_2252d6a73_FnIns>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_call_fn(jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_fn_call(jule::Ptr<_23e45734a_FnCallExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_enum_static(jule::Ptr<_2255aae79_Enum>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_struct_static(jule::Ptr<_225036509_StructIns>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_trait_sub_ident(jule::Ptr<_225aa4a5a_Data>,jule::Ptr<_2255ab70a_Trait>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_struct_sub_ident(jule::Ptr<_225aa4a5a_Data>,jule::Ptr<_225036509_StructIns>,jule::Ptr<_23e45734a_SubIdentExpr>,jule::Bool);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_slice_sub_ident(jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_array_sub_ident(jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_map_sub_ident(jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_str_sub_ident(jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_int_type_static(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_uint_type_static(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_i8_type_static(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_i16_type_static(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_i32_type_static(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_i64_type_static(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_u8_type_static(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_u16_type_static(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_u32_type_static(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_u64_type_static(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_f32_type_tatic(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_f64_type_static(_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_prim_static(jule::Str,_23e730c0b_Token);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_type_static(jule::Ptr<_225aa4a5a_Data>,jule::Ptr<_23e45734a_SubIdentExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_obj_sub_ident(jule::Ptr<_225aa4a5a_Data>,jule::Ptr<_23e45734a_SubIdentExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_sub_ident(jule::Ptr<_23e45734a_SubIdentExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_tuple(jule::Ptr<_23e45734a_TupleExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_map(jule::Ptr<_23e2b5818_Map>,jule::Ptr<_23e45734a_BraceLit>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_brace_lit(jule::Ptr<_23e45734a_BraceLit>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_anon_fn(jule::Ptr<_23e45734a_FnDecl>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_binop(jule::Ptr<_23e45734a_BinopExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_ternary(jule::Ptr<_23e45734a_TernaryExpr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval(jule::Ptr<_23e45734a_Expr>);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_expr(jule::Ptr<_23e45734a_Expr>);


	inline bool operator==(const _225aa4a5a_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_immutable == _Src._field_immutable &&
			this->_field_ignored == _Src._field_ignored &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _225aa4a5a_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_TypeKind: public _23e2b5818_Kind {
	jule::Ptr<_23e2b5818_TypeKind> self;

	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_23e2b5818_Kind> _field_kind = jule::Trait<_23e2b5818_Kind>();


	_23e2b5818_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_23e2b5818_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {
		this->self = jule::Ptr<_23e2b5818_TypeKind>::make(this, nullptr);

	}

	~_23e2b5818_TypeKind(void) { this->self.ref = nullptr; }

	_23e2b5818_TypeKind(void) { this->self = jule::Ptr<_23e2b5818_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline jule::Bool _method_cpp_linked(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_void(void);


	inline jule::Bool _method_mutable(void);


	inline jule::Bool _method_nil_compatible(void);


	inline jule::Bool _method_supports_cloning(void);


	inline jule::Bool _method_variadicable(void);


	inline jule::Ptr<_23e2b5818_Prim> _method_prim(void);


	inline jule::Ptr<_23e2b5818_Sptr> _method_sptr(void);


	inline jule::Ptr<_23e2b5818_Ptr> _method_ptr(void);


	inline jule::Ptr<_2255aae79_Enum> _method_enm(void);


	inline jule::Ptr<_23e2b5818_Arr> _method_arr(void);


	inline jule::Ptr<_23e2b5818_Slc> _method_slc(void);


	inline jule::Ptr<_2252d6a73_FnIns> _method_fnc(void);


	inline jule::Ptr<_225036509_StructIns> _method_strct(void);


	inline jule::Ptr<_2255ab70a_Trait> _method_trt(void);


	inline jule::Ptr<_23e2b5818_Map> _method_map(void);


	inline jule::Ptr<_23e2b5818_Tuple> _method_tup(void);


	inline bool operator==(const _23e2b5818_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_generic == _Src._field_generic &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _23e2b5818_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_TypeSymbol {
	jule::Ptr<_23e45734a_TypeDecl> _field_decl = jule::Ptr<_23e45734a_TypeDecl>();
	jule::Ptr<_23e2b5818_TypeKind> _field_kind = jule::Ptr<_23e2b5818_TypeKind>();


	_23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl> __param_decl, jule::Ptr<_23e2b5818_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_23e2b5818_TypeSymbol(void) = default;

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _23e2b5818_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _23e2b5818_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_Prim: public _23e2b5818_Kind {
	jule::Ptr<_23e2b5818_Prim> self;

	jule::Str _field_kind = jule::Str();


	_23e2b5818_Prim(jule::Str __param_kind): _field_kind(__param_kind) {
		this->self = jule::Ptr<_23e2b5818_Prim>::make(this, nullptr);

	}

	~_23e2b5818_Prim(void) { this->self.ref = nullptr; }

	_23e2b5818_Prim(void) { this->self = jule::Ptr<_23e2b5818_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _23e2b5818_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _23e2b5818_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_Sptr: public _23e2b5818_Kind {
	jule::Ptr<_23e2b5818_Sptr> self;

	jule::Ptr<_23e2b5818_TypeKind> _field_elem = jule::Ptr<_23e2b5818_TypeKind>();


	_23e2b5818_Sptr(jule::Ptr<_23e2b5818_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_23e2b5818_Sptr>::make(this, nullptr);

	}

	~_23e2b5818_Sptr(void) { this->self.ref = nullptr; }

	_23e2b5818_Sptr(void) { this->self = jule::Ptr<_23e2b5818_Sptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline bool operator==(const _23e2b5818_Sptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _23e2b5818_Sptr &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_Slc: public _23e2b5818_Kind {
	jule::Ptr<_23e2b5818_Slc> self;

	jule::Ptr<_23e2b5818_TypeKind> _field_elem = jule::Ptr<_23e2b5818_TypeKind>();


	_23e2b5818_Slc(jule::Ptr<_23e2b5818_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_23e2b5818_Slc>::make(this, nullptr);

	}

	~_23e2b5818_Slc(void) { this->self.ref = nullptr; }

	_23e2b5818_Slc(void) { this->self = jule::Ptr<_23e2b5818_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline bool operator==(const _23e2b5818_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _23e2b5818_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_Tuple: public _23e2b5818_Kind {
	jule::Ptr<_23e2b5818_Tuple> self;

	jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> _field_types = jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>();


	_23e2b5818_Tuple(jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> __param_types): _field_types(__param_types) {
		this->self = jule::Ptr<_23e2b5818_Tuple>::make(this, nullptr);

	}

	~_23e2b5818_Tuple(void) { this->self.ref = nullptr; }

	_23e2b5818_Tuple(void) { this->self = jule::Ptr<_23e2b5818_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline bool operator==(const _23e2b5818_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _23e2b5818_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_Map: public _23e2b5818_Kind {
	jule::Ptr<_23e2b5818_Map> self;

	jule::Ptr<_23e2b5818_TypeKind> _field_key = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Ptr<_23e2b5818_TypeKind> _field_val = jule::Ptr<_23e2b5818_TypeKind>();


	_23e2b5818_Map(jule::Ptr<_23e2b5818_TypeKind> __param_key, jule::Ptr<_23e2b5818_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {
		this->self = jule::Ptr<_23e2b5818_Map>::make(this, nullptr);

	}

	~_23e2b5818_Map(void) { this->self.ref = nullptr; }

	_23e2b5818_Map(void) { this->self = jule::Ptr<_23e2b5818_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline bool operator==(const _23e2b5818_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _23e2b5818_Map &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_Arr: public _23e2b5818_Kind {
	jule::Ptr<_23e2b5818_Arr> self;

	jule::Bool _field_auto = jule::Bool();
	jule::Int _field_n = jule::Int();
	jule::Ptr<_23e2b5818_TypeKind> _field_elem = jule::Ptr<_23e2b5818_TypeKind>();


	_23e2b5818_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ptr<_23e2b5818_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {
		this->self = jule::Ptr<_23e2b5818_Arr>::make(this, nullptr);

	}

	~_23e2b5818_Arr(void) { this->self.ref = nullptr; }

	_23e2b5818_Arr(void) { this->self = jule::Ptr<_23e2b5818_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline bool operator==(const _23e2b5818_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _23e2b5818_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_Ptr: public _23e2b5818_Kind {
	jule::Ptr<_23e2b5818_Ptr> self;

	jule::Ptr<_23e2b5818_TypeKind> _field_elem = jule::Ptr<_23e2b5818_TypeKind>();


	_23e2b5818_Ptr(jule::Ptr<_23e2b5818_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_23e2b5818_Ptr>::make(this, nullptr);

	}

	~_23e2b5818_Ptr(void) { this->self.ref = nullptr; }

	_23e2b5818_Ptr(void) { this->self = jule::Ptr<_23e2b5818_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _23e2b5818_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _23e2b5818_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;


	_23e2b5818_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_23e2b5818_Referencer(void) = default;

	inline bool operator==(const _23e2b5818_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _23e2b5818_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _23e12e1ba_DirectiveEval {
	jule::Slice<_23ceb0c1d_Log> _field_logs = jule::Slice<_23ceb0c1d_Log>();
	jule::Ptr<_23e45734a_Directive> _field_d = jule::Ptr<_23e45734a_Directive>();


	_23e12e1ba_DirectiveEval(jule::Slice<_23ceb0c1d_Log> __param_logs, jule::Ptr<_23e45734a_Directive> __param_d): _field_logs(__param_logs), _field_d(__param_d) {}

	

	_23e12e1ba_DirectiveEval(void) = default;

	inline void _method_push_err(_23e730c0b_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Slice<_23e730c0b_Token>> _method_split_operans(jule::Str,jule::Slice<_23e730c0b_Token>&);


	inline jule::Bool _method_eval_directive_ident(jule::Str);


	inline jule::Bool _method_eval_directive_part(jule::Slice<_23e730c0b_Token>);


	inline jule::Bool _method_eval(void);


	inline bool operator==(const _23e12e1ba_DirectiveEval &_Src) const {
		return 
			this->_field_logs == _Src._field_logs &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _23e12e1ba_DirectiveEval &_Src) const { return !this->operator==(_Src); }
};


struct _23e3748d8_PlainImporter: public _225615962_Importer {
	jule::Slice<jule::Ptr<_225615962_ImportInfo>> _field_all_packages = jule::Slice<jule::Ptr<_225615962_ImportInfo>>();


	_23e3748d8_PlainImporter(jule::Slice<jule::Ptr<_225615962_ImportInfo>> __param_all_packages): _field_all_packages(__param_all_packages) {}

	

	_23e3748d8_PlainImporter(void) = default;

	inline jule::Ptr<_225615962_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ptr<_23e249d96_Ast>>,jule::Slice<_23ceb0c1d_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ptr<_225615962_ImportInfo>);


	inline bool operator==(const _23e3748d8_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _23e3748d8_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _23e1d6b35_OrderedDefines {
	jule::Slice<jule::Ptr<_225036509_Struct>> _field_structs = jule::Slice<jule::Ptr<_225036509_Struct>>();
	jule::Slice<jule::Ptr<_2258258db_Var>> _field_globals = jule::Slice<jule::Ptr<_2258258db_Var>>();


	_23e1d6b35_OrderedDefines(jule::Slice<jule::Ptr<_225036509_Struct>> __param_structs, jule::Slice<jule::Ptr<_2258258db_Var>> __param_globals): _field_structs(__param_structs), _field_globals(__param_globals) {}

	

	_23e1d6b35_OrderedDefines(void) = default;

	inline bool operator==(const _23e1d6b35_OrderedDefines &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _23e1d6b35_OrderedDefines &_Src) const { return !this->operator==(_Src); }
};


struct _23e1d6b35_DefineOrderer {
	

	_23e1d6b35_DefineOrderer(void) = default;

	static inline jule::Bool _static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_2258258db_Var>>&,jule::Ptr<_2258258db_Var>);
	static inline jule::Bool _static_method_is_common_ordered_1(jule::Slice<jule::Ptr<_225036509_Struct>>&,jule::Ptr<_225036509_Struct>);


	static inline void _static_method_order_common_0(jule::Slice<jule::Ptr<_2258258db_Var>>&);
	static inline void _static_method_order_common_1(jule::Slice<jule::Ptr<_225036509_Struct>>&);


	static inline void _static_method_order_variables(jule::Slice<jule::Ptr<_2258258db_Var>>&);


	static inline void _static_method_order_structures(jule::Slice<jule::Ptr<_225036509_Struct>>&);


	inline bool operator==(const _23e1d6b35_DefineOrderer &_Src) const { return true; }

	inline bool operator!=(const _23e1d6b35_DefineOrderer &_Src) const { return !this->operator==(_Src); }
};


struct _23d0477ee_ScopeDeadCode {
	jule::Ptr<_23d0477ee_ScopeDeadCode> self;

	jule::Ptr<_23d0477ee_ScopeDeadCode> _field_parent = jule::Ptr<_23d0477ee_ScopeDeadCode>();
	jule::Ptr<_2255ba3ea_Scope> _field_s = jule::Ptr<_2255ba3ea_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::Int _field_i = jule::Int();


	_23d0477ee_ScopeDeadCode(jule::Ptr<_23d0477ee_ScopeDeadCode> __param_parent, jule::Ptr<_2255ba3ea_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {
		this->self = jule::Ptr<_23d0477ee_ScopeDeadCode>::make(this, nullptr);

	}

	~_23d0477ee_ScopeDeadCode(void) { this->self.ref = nullptr; }

	_23d0477ee_ScopeDeadCode(void) { this->self = jule::Ptr<_23d0477ee_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ptr<_2255ba3ea_Scope>&);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _23d0477ee_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _23d0477ee_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _2265d88ce_FileStream: public _2265d88ce_Reader,public _2265d88ce_Writer,public _2265d88ce_Stream {
	jule::Ptr<_224eb1ee0_File> _field_buff = jule::Ptr<_224eb1ee0_File>();


	_2265d88ce_FileStream(jule::Ptr<_224eb1ee0_File> __param_buff): _field_buff(__param_buff) {}

	

	_2265d88ce_FileStream(void) = default;

	static inline jule::Ptr<_2265d88ce_FileStream> _static_method_new(jule::Ptr<_224eb1ee0_File>);


	inline jule::Exceptional<jule::Int> _method_read(jule::Slice<jule::U8>);


	inline jule::Exceptional<jule::Int> _method_write(jule::Slice<jule::U8>);


	inline jule::Exceptional<jule::Slice<jule::U8>> _method_read_line(void);


	inline bool operator==(const _2265d88ce_FileStream &_Src) const {
		return 
			this->_field_buff == _Src._field_buff;
	}

	inline bool operator!=(const _2265d88ce_FileStream &_Src) const { return !this->operator==(_Src); }
};


struct _22660706d_Scanner {
	jule::Trait<_2265d88ce_Reader> _field_r = jule::Trait<_2265d88ce_Reader>();
	jule::Slice<jule::U8> _field_b = jule::Slice<jule::U8>();


	_22660706d_Scanner(jule::Trait<_2265d88ce_Reader> __param_r, jule::Slice<jule::U8> __param_b): _field_r(__param_r), _field_b(__param_b) {}

	

	_22660706d_Scanner(void) = default;

	static inline jule::Ptr<_22660706d_Scanner> _static_method_new(jule::Trait<_2265d88ce_Reader>);


	static inline jule::Ptr<_22660706d_Scanner> _static_method_newf(jule::Ptr<_224eb1ee0_File>);


	inline void _method_reset(void);


	inline jule::Slice<jule::U8> _method_bytes(void);


	inline jule::Str _method_text(void);


	inline jule::Exceptional<jule::Bool> _method_scan(void);


	inline bool operator==(const _22660706d_Scanner &_Src) const {
		return 
			this->_field_r == _Src._field_r &&
			this->_field_b == _Src._field_b;
	}

	inline bool operator!=(const _22660706d_Scanner &_Src) const { return !this->operator==(_Src); }
};


struct _226630371_AbsTime {
	jule::Uint _field_day = jule::Uint();
	jule::Uint _field_week_day = jule::Uint();
	jule::Uint _field_year_day = jule::Uint();
	jule::Uint _field_month = jule::Uint();
	jule::Uint _field_year = jule::Uint();
	jule::Uint _field_second = jule::Uint();
	jule::Uint _field_minute = jule::Uint();
	jule::Uint _field_hour = jule::Uint();


	_226630371_AbsTime(jule::Uint __param_day, jule::Uint __param_week_day, jule::Uint __param_year_day, jule::Uint __param_month, jule::Uint __param_year, jule::Uint __param_second, jule::Uint __param_minute, jule::Uint __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_226630371_AbsTime(void) = default;

	inline jule::U64 _method_unix(void);


	inline bool operator==(const _226630371_AbsTime &_Src) const {
		return 
			this->_field_day == _Src._field_day &&
			this->_field_week_day == _Src._field_week_day &&
			this->_field_year_day == _Src._field_year_day &&
			this->_field_month == _Src._field_month &&
			this->_field_year == _Src._field_year &&
			this->_field_second == _Src._field_second &&
			this->_field_minute == _Src._field_minute &&
			this->_field_hour == _Src._field_hour;
	}

	inline bool operator!=(const _226630371_AbsTime &_Src) const { return !this->operator==(_Src); }
};


struct _226630371_Time {
	jule::U64 _field_sec = jule::U64();


	_226630371_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_226630371_Time(void) = default;

	static inline _226630371_Time _static_method_unix(jule::U64);


	static inline _226630371_Time _static_method_now(void);


	inline jule::U64 _method_unix(void);


	inline jule::Uint _method_day(void);


	inline jule::Uint _method_month(void);


	inline jule::Uint _method_year(void);


	inline jule::Uint _method_second(void);


	inline jule::Uint _method_minute(void);


	inline jule::Uint _method_hour(void);


	inline _226630371_AbsTime _method_abs(void);


	inline bool operator==(const _226630371_Time &_Src) const {
		return 
			this->_field_sec == _Src._field_sec;
	}

	inline bool operator!=(const _226630371_Time &_Src) const { return !this->operator==(_Src); }
};


struct _226630371_Duration {
	

	_226630371_Duration(void) = default;

	static inline jule::I64 _static_method_nanoseconds(jule::I64);


	static inline jule::I64 _static_method_microseconds(jule::I64);


	static inline jule::I64 _static_method_milliseconds(jule::I64);


	static inline jule::I64 _static_method_seconds(jule::I64);


	static inline jule::I64 _static_method_minutes(jule::I64);


	static inline jule::I64 _static_method_hours(jule::I64);


	inline bool operator==(const _226630371_Duration &_Src) const { return true; }

	inline bool operator!=(const _226630371_Duration &_Src) const { return !this->operator==(_Src); }
};


struct _23d0249a7_Flag_0: public _23d0249a7_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Int _field__default = jule::Int();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Int> _field__data = jule::Ptr<jule::Int>();


	_23d0249a7_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::Int __param__default, jule::Str __param__what, jule::Ptr<jule::Int> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_23d0249a7_Flag_0(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _23d0249a7_Flag_0 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _23d0249a7_Flag_0 &_Src) const { return !this->operator==(_Src); }
};

struct _23d0249a7_Flag_1: public _23d0249a7_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Uint _field__default = jule::Uint();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Uint> _field__data = jule::Ptr<jule::Uint>();


	_23d0249a7_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::Uint __param__default, jule::Str __param__what, jule::Ptr<jule::Uint> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_23d0249a7_Flag_1(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _23d0249a7_Flag_1 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _23d0249a7_Flag_1 &_Src) const { return !this->operator==(_Src); }
};

struct _23d0249a7_Flag_2: public _23d0249a7_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();


	_23d0249a7_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_23d0249a7_Flag_2(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _23d0249a7_Flag_2 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _23d0249a7_Flag_2 &_Src) const { return !this->operator==(_Src); }
};

struct _23d0249a7_Flag_3: public _23d0249a7_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();


	_23d0249a7_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_23d0249a7_Flag_3(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _23d0249a7_Flag_3 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _23d0249a7_Flag_3 &_Src) const { return !this->operator==(_Src); }
};

struct _23d0249a7_Flag_4: public _23d0249a7_CommonFlag {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();


	_23d0249a7_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_23d0249a7_Flag_4(void) = default;

	inline jule::Str _method_name(void);


	inline jule::Str _method_what(void);


	inline void _method_reset(void);


	inline jule::I32 _method_short(void);


	inline bool operator==(const _23d0249a7_Flag_4 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	inline bool operator!=(const _23d0249a7_Flag_4 &_Src) const { return !this->operator==(_Src); }
};


struct _23d0249a7_FlagSet {
	jule::Slice<jule::Trait<_23d0249a7_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_23d0249a7_CommonFlag>>();


	_23d0249a7_FlagSet(jule::Slice<jule::Trait<_23d0249a7_CommonFlag>> __param__flags): _field__flags(__param__flags) {}

	

	_23d0249a7_FlagSet(void) = default;

	static inline jule::Ptr<_23d0249a7_FlagSet> _static_method_new(void);


	inline jule::Trait<_23d0249a7_CommonFlag> _method_find_flag(jule::Str);


	inline jule::Trait<_23d0249a7_CommonFlag> _method_find_flag_short(jule::I32);


	inline jule::Slice<jule::Trait<_23d0249a7_CommonFlag>> _method_flags(void);


	inline jule::Exceptional<jule::Slice<jule::Str>> _method_parse(jule::Slice<jule::Str>);


	inline void _method_reset(void);


	inline jule::Ptr<_23d0249a7_Flag_3> _method_add_flag_common_0(jule::Str,jule::I32,jule::Str);
	inline jule::Ptr<_23d0249a7_Flag_4> _method_add_flag_common_1(jule::Str,jule::I32,jule::Str);




	inline void _method_add_var_0(jule::Ptr<jule::Bool>,jule::Str,jule::I32,jule::Str);
	inline void _method_add_var_1(jule::Ptr<jule::Str>,jule::Str,jule::I32,jule::Str);


	inline bool operator==(const _23d0249a7_FlagSet &_Src) const {
		return 
			this->_field__flags == _Src._field__flags;
	}

	inline bool operator!=(const _23d0249a7_FlagSet &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_BreakSt {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	_23e730c0b_Token _field_label = _23e730c0b_Token();


	_23e45734a_BreakSt(_23e730c0b_Token __param_token, _23e730c0b_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_23e45734a_BreakSt(void) = default;

	inline bool operator==(const _23e45734a_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _23e45734a_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_ContSt {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	_23e730c0b_Token _field_label = _23e730c0b_Token();


	_23e45734a_ContSt(_23e730c0b_Token __param_token, _23e730c0b_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_23e45734a_ContSt(void) = default;

	inline bool operator==(const _23e45734a_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _23e45734a_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_If {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();
	jule::Ptr<_23e45734a_ScopeTree> _field_scope = jule::Ptr<_23e45734a_ScopeTree>();


	_23e45734a_If(_23e730c0b_Token __param_token, jule::Ptr<_23e45734a_Expr> __param_expr, jule::Ptr<_23e45734a_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_23e45734a_If(void) = default;

	inline bool operator==(const _23e45734a_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _23e45734a_If &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_Else {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Ptr<_23e45734a_ScopeTree> _field_scope = jule::Ptr<_23e45734a_ScopeTree>();


	_23e45734a_Else(_23e730c0b_Token __param_token, jule::Ptr<_23e45734a_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_23e45734a_Else(void) = default;

	inline bool operator==(const _23e45734a_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _23e45734a_Else &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_Directive {
	_23e730c0b_Token _field_tag = _23e730c0b_Token();
	jule::Slice<_23e730c0b_Token> _field_args = jule::Slice<_23e730c0b_Token>();


	_23e45734a_Directive(_23e730c0b_Token __param_tag, jule::Slice<_23e730c0b_Token> __param_args): _field_tag(__param_tag), _field_args(__param_args) {}

	

	_23e45734a_Directive(void) = default;

	inline bool operator==(const _23e45734a_Directive &_Src) const {
		return 
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _23e45734a_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_TypeAliasDecl {
	jule::Ptr<_23e45734a_ScopeTree> _field_scope = jule::Ptr<_23e45734a_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_23e45734a_TypeDecl> _field_kind = jule::Ptr<_23e45734a_TypeDecl>();
	jule::Ptr<_23e45734a_CommentGroup> _field_doc_comments = jule::Ptr<_23e45734a_CommentGroup>();


	_23e45734a_TypeAliasDecl(jule::Ptr<_23e45734a_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _23e730c0b_Token __param_token, jule::Str __param_ident, jule::Ptr<_23e45734a_TypeDecl> __param_kind, jule::Ptr<_23e45734a_CommentGroup> __param_doc_comments): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc_comments(__param_doc_comments) {}

	

	_23e45734a_TypeAliasDecl(void) = default;

	inline bool operator==(const _23e45734a_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _23e45734a_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_FnCallExprModel {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Ptr<_2252d6a73_FnIns> _field_func = jule::Ptr<_2252d6a73_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_2255ba3ea_Scope> _field_except = jule::Ptr<_2255ba3ea_Scope>();
	jule::Bool _field_assigned = jule::Bool();


	_2255b85b3_FnCallExprModel(_23e730c0b_Token __param_token, jule::Ptr<_2252d6a73_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args, jule::Ptr<_2255ba3ea_Scope> __param_except, jule::Bool __param_assigned): _field_token(__param_token), _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args), _field_except(__param_except), _field_assigned(__param_assigned) {}

	

	_2255b85b3_FnCallExprModel(void) = default;

	inline bool operator==(const _2255b85b3_FnCallExprModel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args &&
			this->_field_except == _Src._field_except &&
			this->_field_assigned == _Src._field_assigned;
	}

	inline bool operator!=(const _2255b85b3_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_Case {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Ptr<_23e45734a_ScopeTree> _field_scope = jule::Ptr<_23e45734a_ScopeTree>();
	jule::Slice<jule::Ptr<_23e45734a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_23e45734a_Expr>>();


	_23e45734a_Case(_23e730c0b_Token __param_token, jule::Ptr<_23e45734a_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_23e45734a_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_23e45734a_Case(void) = default;

	inline bool operator==(const _23e45734a_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _23e45734a_Case &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_MatchCase {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();
	jule::Slice<jule::Ptr<_23e45734a_Case>> _field_cases = jule::Slice<jule::Ptr<_23e45734a_Case>>();
	jule::Ptr<_23e45734a_Else> _field_default = jule::Ptr<_23e45734a_Else>();


	_23e45734a_MatchCase(_23e730c0b_Token __param_token, jule::Bool __param_type_match, jule::Ptr<_23e45734a_Expr> __param_expr, jule::Slice<jule::Ptr<_23e45734a_Case>> __param_cases, jule::Ptr<_23e45734a_Else> __param_default): _field_token(__param_token), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_23e45734a_MatchCase(void) = default;

	inline bool operator==(const _23e45734a_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _23e45734a_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_UseDecl {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<_23e730c0b_Token> _field_selected = jule::Slice<_23e730c0b_Token>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();


	_23e45734a_UseDecl(_23e730c0b_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_23e730c0b_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_23e45734a_UseDecl(void) = default;

	inline bool operator==(const _23e45734a_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_alias == _Src._field_alias &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _23e45734a_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_EnumItemDecl {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();


	_23e45734a_EnumItemDecl(_23e730c0b_Token __param_token, jule::Str __param_ident, jule::Ptr<_23e45734a_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_23e45734a_EnumItemDecl(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _23e45734a_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_EnumDecl {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_23e45734a_TypeDecl> _field_kind = jule::Ptr<_23e45734a_TypeDecl>();
	jule::Slice<jule::Ptr<_23e45734a_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_23e45734a_EnumItemDecl>>();
	jule::Ptr<_23e45734a_CommentGroup> _field_doc_comments = jule::Ptr<_23e45734a_CommentGroup>();


	_23e45734a_EnumDecl(_23e730c0b_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_23e45734a_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_23e45734a_EnumItemDecl>> __param_items, jule::Ptr<_23e45734a_CommentGroup> __param_doc_comments): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc_comments(__param_doc_comments) {}

	

	_23e45734a_EnumDecl(void) = default;

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _23e45734a_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _23e45734a_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_FieldDecl {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_23e45734a_TypeDecl> _field_kind = jule::Ptr<_23e45734a_TypeDecl>();


	_23e45734a_FieldDecl(_23e730c0b_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_23e45734a_TypeDecl> __param_kind): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_23e45734a_FieldDecl(void) = default;

	inline bool operator==(const _23e45734a_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _23e45734a_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_StructDecl {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_23e45734a_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_23e45734a_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_23e45734a_Directive>> _field_directives = jule::Slice<jule::Ptr<_23e45734a_Directive>>();
	jule::Ptr<_23e45734a_CommentGroup> _field_doc_comments = jule::Ptr<_23e45734a_CommentGroup>();
	jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>();


	_23e45734a_StructDecl(_23e730c0b_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_23e45734a_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_23e45734a_Directive>> __param_directives, jule::Ptr<_23e45734a_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_generics(__param_generics) {}

	

	_23e45734a_StructDecl(void) = default;

	inline bool operator==(const _23e45734a_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _23e45734a_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_TraitDecl {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Ptr<_23e45734a_CommentGroup> _field_doc_comments = jule::Ptr<_23e45734a_CommentGroup>();
	jule::Slice<jule::Ptr<_23e45734a_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_23e45734a_FnDecl>>();


	_23e45734a_TraitDecl(_23e730c0b_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ptr<_23e45734a_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_23e45734a_FnDecl>> __param_methods): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_doc_comments(__param_doc_comments), _field_methods(__param_methods) {}

	

	_23e45734a_TraitDecl(void) = default;

	inline bool operator==(const _23e45734a_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _23e45734a_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_Impl {
	_23e730c0b_Token _field_base = _23e730c0b_Token();
	_23e730c0b_Token _field_dest = _23e730c0b_Token();
	jule::Slice<jule::Ptr<_23e45734a_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_23e45734a_FnDecl>>();
	jule::Slice<jule::Ptr<_23e45734a_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_23e45734a_VarDecl>>();


	_23e45734a_Impl(_23e730c0b_Token __param_base, _23e730c0b_Token __param_dest, jule::Slice<jule::Ptr<_23e45734a_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_23e45734a_VarDecl>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_23e45734a_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _23e45734a_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _23e45734a_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_Expr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Any _field_kind = jule::Any();


	_23e45734a_Expr(_23e730c0b_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_23e45734a_Expr(void) = default;

	inline bool operator==(const _23e45734a_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _23e45734a_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_UseExpr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();


	_23e45734a_UseExpr(_23e730c0b_Token __param_token, jule::Ptr<_23e45734a_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_23e45734a_UseExpr(void) = default;

	inline bool operator==(const _23e45734a_UseExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_UseExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_TypeDecl {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Any _field_kind = jule::Any();


	_23e45734a_TypeDecl(_23e730c0b_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_23e45734a_TypeDecl(void) = default;

	inline bool operator==(const _23e45734a_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _23e45734a_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_LitExpr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_value = jule::Str();


	_23e45734a_LitExpr(_23e730c0b_Token __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_23e45734a_LitExpr(void) = default;

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _23e45734a_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _23e45734a_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_UnsafeExpr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Any _field_expr = jule::Any();


	_23e45734a_UnsafeExpr(_23e730c0b_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_23e45734a_UnsafeExpr(void) = default;

	inline bool operator==(const _23e45734a_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_CoExpr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();


	_23e45734a_CoExpr(_23e730c0b_Token __param_token, jule::Ptr<_23e45734a_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_23e45734a_CoExpr(void) = default;

	inline bool operator==(const _23e45734a_CoExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_CoExpr &_Src) const { return !this->operator==(_Src); }
};


struct _225146a37_AssignInfo {
	jule::Slice<_23e730c0b_Token> _field_l = jule::Slice<_23e730c0b_Token>();
	jule::Slice<_23e730c0b_Token> _field_r = jule::Slice<_23e730c0b_Token>();
	_23e730c0b_Token _field_setter = _23e730c0b_Token();
	jule::Bool _field_ok = jule::Bool();


	_225146a37_AssignInfo(jule::Slice<_23e730c0b_Token> __param_l, jule::Slice<_23e730c0b_Token> __param_r, _23e730c0b_Token __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_225146a37_AssignInfo(void) = default;

	inline bool operator==(const _225146a37_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _225146a37_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_IdentExpr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();


	_23e45734a_IdentExpr(_23e730c0b_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_23e45734a_IdentExpr(void) = default;

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _23e45734a_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _23e45734a_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2255b85b3_BuiltinPanicCallExprModel {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Any _field_expr = jule::Any();


	_2255b85b3_BuiltinPanicCallExprModel(_23e730c0b_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_2255b85b3_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(const _2255b85b3_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _2255b85b3_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_UnaryExpr {
	_23e730c0b_Token _field_op = _23e730c0b_Token();
	jule::Any _field_expr = jule::Any();


	_23e45734a_UnaryExpr(_23e730c0b_Token __param_op, jule::Any __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_23e45734a_UnaryExpr(void) = default;

	inline bool operator==(const _23e45734a_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_VariadicExpr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Any _field_expr = jule::Any();


	_23e45734a_VariadicExpr(_23e730c0b_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_23e45734a_VariadicExpr(void) = default;

	inline bool operator==(const _23e45734a_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _225036509_Field {
	jule::Ptr<_225036509_Field> self;

	jule::Ptr<_225036509_Struct> _field_owner = jule::Ptr<_225036509_Struct>();
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_23e2b5818_TypeSymbol> _field_kind = jule::Ptr<_23e2b5818_TypeSymbol>();


	_225036509_Field(jule::Ptr<_225036509_Struct> __param_owner, _23e730c0b_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_23e2b5818_TypeSymbol> __param_kind): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {
		this->self = jule::Ptr<_225036509_Field>::make(this, nullptr);

	}

	~_225036509_Field(void) { this->self.ref = nullptr; }

	_225036509_Field(void) { this->self = jule::Ptr<_225036509_Field>::make(this, nullptr); }

	inline jule::Ptr<_225036509_FieldIns> _method_instance(void);


	inline bool operator==(const _225036509_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _225036509_Field &_Src) const { return !this->operator==(_Src); }
};


struct _225036509_Struct {
	jule::Ptr<_225036509_Struct> self;

	jule::Ptr<_22579574b_Sema> _field_sema = jule::Ptr<_22579574b_Sema>();
	jule::Slice<jule::Ptr<_225036509_Struct>> _field_depends = jule::Slice<jule::Ptr<_225036509_Struct>>();
	jule::Slice<jule::Ptr<_225036509_Struct>> _field_uses = jule::Slice<jule::Ptr<_225036509_Struct>>();
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_225036509_Field>> _field_fields = jule::Slice<jule::Ptr<_225036509_Field>>();
	jule::Slice<jule::Ptr<_2252d6a73_Fn>> _field_methods = jule::Slice<jule::Ptr<_2252d6a73_Fn>>();
	jule::Slice<jule::Ptr<_2258258db_Var>> _field_statics = jule::Slice<jule::Ptr<_2258258db_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_23e45734a_Directive>> _field_directives = jule::Slice<jule::Ptr<_23e45734a_Directive>>();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>();
	jule::Slice<jule::Ptr<_2255ab70a_Trait>> _field_implements = jule::Slice<jule::Ptr<_2255ab70a_Trait>>();
	jule::Slice<jule::Ptr<_225036509_StructIns>> _field_instances = jule::Slice<jule::Ptr<_225036509_StructIns>>();


	_225036509_Struct(jule::Ptr<_22579574b_Sema> __param_sema, jule::Slice<jule::Ptr<_225036509_Struct>> __param_depends, jule::Slice<jule::Ptr<_225036509_Struct>> __param_uses, _23e730c0b_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_225036509_Field>> __param_fields, jule::Slice<jule::Ptr<_2252d6a73_Fn>> __param_methods, jule::Slice<jule::Ptr<_2258258db_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_23e45734a_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_2255ab70a_Trait>> __param_implements, jule::Slice<jule::Ptr<_225036509_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc(__param_doc), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {
		this->self = jule::Ptr<_225036509_Struct>::make(this, nullptr);

	}

	~_225036509_Struct(void) { this->self.ref = nullptr; }

	_225036509_Struct(void) { this->self = jule::Ptr<_225036509_Struct>::make(this, nullptr); }

	inline jule::Ptr<_225036509_StructIns> _method_instance(void);


	inline jule::Ptr<_225036509_StructIns> _method_append_instance(jule::Ptr<_225036509_StructIns>&);


	inline jule::Ptr<_2252d6a73_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ptr<_2258258db_Var> _method_find_static(jule::Str);


	inline jule::Ptr<_225036509_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ptr<_2255ab70a_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ptr<_225036509_Struct>);


	inline jule::Bool _method_has_ref_accessible(void);


	inline bool operator==(const _225036509_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _225036509_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_IdentTypeDecl {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_23e45734a_TypeDecl>>();


	_23e45734a_IdentTypeDecl(_23e730c0b_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_23e45734a_IdentTypeDecl(void) = default;

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _23e45734a_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _23e45734a_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_NsSelectionExpr {
	jule::Slice<_23e730c0b_Token> _field_ns = jule::Slice<_23e730c0b_Token>();
	_23e730c0b_Token _field_ident = _23e730c0b_Token();


	_23e45734a_NsSelectionExpr(jule::Slice<_23e730c0b_Token> __param_ns, _23e730c0b_Token __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_23e45734a_NsSelectionExpr(void) = default;

	inline bool operator==(const _23e45734a_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _23e45734a_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Any _field_expr = jule::Any();
	_23e730c0b_Token _field_ident = _23e730c0b_Token();


	_23e45734a_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _23e730c0b_Token __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_23e45734a_SubIdentExpr(void) = default;

	inline bool operator==(const _23e45734a_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _23e45734a_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2252d6a73_Param {
	jule::Ptr<_2252d6a73_Param> self;

	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_23e2b5818_TypeSymbol> _field_kind = jule::Ptr<_23e2b5818_TypeSymbol>();
	jule::Str _field_ident = jule::Str();


	_2252d6a73_Param(_23e730c0b_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_23e2b5818_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {
		this->self = jule::Ptr<_2252d6a73_Param>::make(this, nullptr);

	}

	~_2252d6a73_Param(void) { this->self.ref = nullptr; }

	_2252d6a73_Param(void) { this->self = jule::Ptr<_2252d6a73_Param>::make(this, nullptr); }

	inline jule::Ptr<_2252d6a73_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _2252d6a73_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _2252d6a73_Param &_Src) const { return !this->operator==(_Src); }
};


struct _2252d6a73_Fn {
	jule::Ptr<_2252d6a73_Fn> self;

	jule::Ptr<_22579574b_Sema> _field_sema = jule::Ptr<_22579574b_Sema>();
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_23e45734a_Directive>> _field_directives = jule::Slice<jule::Ptr<_23e45734a_Directive>>();
	jule::Str _field_doc = jule::Str();
	jule::Ptr<_23e45734a_ScopeTree> _field_scope = jule::Ptr<_23e45734a_ScopeTree>();
	jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>();
	jule::Ptr<_2252d6a73_RetType> _field_result = jule::Ptr<_2252d6a73_RetType>();
	jule::Slice<jule::Ptr<_2252d6a73_Param>> _field_params = jule::Slice<jule::Ptr<_2252d6a73_Param>>();
	jule::Ptr<_225036509_Struct> _field_owner = jule::Ptr<_225036509_Struct>();
	jule::Slice<jule::Ptr<_2252d6a73_FnIns>> _field_instances = jule::Slice<jule::Ptr<_2252d6a73_FnIns>>();


	_2252d6a73_Fn(jule::Ptr<_22579574b_Sema> __param_sema, _23e730c0b_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_23e45734a_Directive>> __param_directives, jule::Str __param_doc, jule::Ptr<_23e45734a_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> __param_generics, jule::Ptr<_2252d6a73_RetType> __param_result, jule::Slice<jule::Ptr<_2252d6a73_Param>> __param_params, jule::Ptr<_225036509_Struct> __param_owner, jule::Slice<jule::Ptr<_2252d6a73_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc(__param_doc), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {
		this->self = jule::Ptr<_2252d6a73_Fn>::make(this, nullptr);

	}

	~_2252d6a73_Fn(void) { this->self.ref = nullptr; }

	_2252d6a73_Fn(void) { this->self = jule::Ptr<_2252d6a73_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ptr<_2252d6a73_FnIns> _method_instance_force(void);


	inline jule::Ptr<_2252d6a73_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ptr<_2252d6a73_FnIns>&);


	inline bool operator==(const _2252d6a73_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_exceptional == _Src._field_exceptional &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _2252d6a73_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _225615962_ImportInfo: public _225e7723a_Lookup {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<_23e730c0b_Token> _field_selected = jule::Slice<_23e730c0b_Token>();
	jule::Ptr<_225615962_Package> _field_package = jule::Ptr<_225615962_Package>();


	_225615962_ImportInfo(_23e730c0b_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_23e730c0b_Token> __param_selected, jule::Ptr<_225615962_Package> __param_package): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package) {}

	

	_225615962_ImportInfo(void) = default;

	inline jule::Ptr<_225615962_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ptr<_225615962_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)>);


	inline jule::Ptr<_2258258db_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ptr<_23e2b5818_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ptr<_225036509_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ptr<_2252d6a73_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ptr<_2255ab70a_Trait> _method_find_trait(jule::Str);


	inline jule::Ptr<_2255aae79_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _225615962_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_alias == _Src._field_alias &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _225615962_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_BinopExpr {
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();
	_23e730c0b_Token _field_op = _23e730c0b_Token();


	_23e45734a_BinopExpr(jule::Any __param_left, jule::Any __param_right, _23e730c0b_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_23e45734a_BinopExpr(void) = default;

	inline bool operator==(const _23e45734a_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _23e45734a_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_FnCallExpr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();
	jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_23e45734a_TypeDecl>>();
	jule::Slice<jule::Ptr<_23e45734a_Expr>> _field_args = jule::Slice<jule::Ptr<_23e45734a_Expr>>();
	jule::Ptr<_23e45734a_ScopeTree> _field_exception = jule::Ptr<_23e45734a_ScopeTree>();


	_23e45734a_FnCallExpr(_23e730c0b_Token __param_token, jule::Ptr<_23e45734a_Expr> __param_expr, jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_23e45734a_Expr>> __param_args, jule::Ptr<_23e45734a_ScopeTree> __param_exception): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_exception(__param_exception) {}

	

	_23e45734a_FnCallExpr(void) = default;

	inline jule::Bool _method_unhandled(void);


	inline jule::Bool _method_ignored(void);


	inline bool operator==(const _23e45734a_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_exception == _Src._field_exception;
	}

	inline bool operator!=(const _23e45734a_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_FieldExprPair {
	_23e730c0b_Token _field_field = _23e730c0b_Token();
	jule::Any _field_expr = jule::Any();


	_23e45734a_FieldExprPair(_23e730c0b_Token __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_23e45734a_FieldExprPair(void) = default;

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _23e45734a_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _2258258db_Var {
	jule::Ptr<_2255ba3ea_Scope> _field_scope = jule::Ptr<_2255ba3ea_Scope>();
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_doc = jule::Str();
	jule::Ptr<_23e2b5818_TypeSymbol> _field_kind = jule::Ptr<_23e2b5818_TypeSymbol>();
	jule::Ptr<_225aa4a5a_Value> _field_value = jule::Ptr<_225aa4a5a_Value>();
	jule::Ptr<_22551ab31_ReferenceStack> _field_references = jule::Ptr<_22551ab31_ReferenceStack>();
	jule::Slice<jule::Ptr<_23e45734a_Directive>> _field_directives = jule::Slice<jule::Ptr<_23e45734a_Directive>>();
	jule::Ptr<_2258258db_IterRelation> _field_iter_relation = jule::Ptr<_2258258db_IterRelation>();
	jule::Slice<jule::Ptr<_2258258db_Var>> _field_depends = jule::Slice<jule::Ptr<_2258258db_Var>>();


	_2258258db_Var(jule::Ptr<_2255ba3ea_Scope> __param_scope, _23e730c0b_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ptr<_23e2b5818_TypeSymbol> __param_kind, jule::Ptr<_225aa4a5a_Value> __param_value, jule::Ptr<_22551ab31_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_23e45734a_Directive>> __param_directives, jule::Ptr<_2258258db_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_2258258db_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_doc(__param_doc), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_2258258db_Var(void) = default;

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_type_inferred(void);


	inline bool operator==(const _2258258db_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_iter_relation == _Src._field_iter_relation &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _2258258db_Var &_Src) const { return !this->operator==(_Src); }
};


struct _22582290a_TypeCompatibilityChecker {
	jule::Ptr<_22579574b_Sema> _field_s = jule::Ptr<_22579574b_Sema>();
	jule::Ptr<_23e2b5818_TypeKind> _field_dest = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Ptr<_23e2b5818_TypeKind> _field_src = jule::Ptr<_23e2b5818_TypeKind>();
	_23e730c0b_Token _field_error_token = _23e730c0b_Token();


	_22582290a_TypeCompatibilityChecker(jule::Ptr<_22579574b_Sema> __param_s, jule::Ptr<_23e2b5818_TypeKind> __param_dest, jule::Ptr<_23e2b5818_TypeKind> __param_src, _23e730c0b_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token) {}

	

	_22582290a_TypeCompatibilityChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_prim(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _22582290a_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token;
	}

	inline bool operator!=(const _22582290a_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


struct _22582290a_AssignTypeChecker {
	jule::Ptr<_22579574b_Sema> _field_s = jule::Ptr<_22579574b_Sema>();
	jule::Ptr<_23e2b5818_TypeKind> _field_dest = jule::Ptr<_23e2b5818_TypeKind>();
	jule::Ptr<_225aa4a5a_Data> _field_d = jule::Ptr<_225aa4a5a_Data>();
	_23e730c0b_Token _field_error_token = _23e730c0b_Token();


	_22582290a_AssignTypeChecker(jule::Ptr<_22579574b_Sema> __param_s, jule::Ptr<_23e2b5818_TypeKind> __param_dest, jule::Ptr<_225aa4a5a_Data> __param_d, _23e730c0b_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_22582290a_AssignTypeChecker(void) = default;

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_is_prim(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _22582290a_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token;
	}

	inline bool operator!=(const _22582290a_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _22582290a_DynamicTypeAnnotation {
	jule::Ptr<_225aa4a5a_Eval> _field_e = jule::Ptr<_225aa4a5a_Eval>();
	jule::Ptr<_2252d6a73_FnIns> _field_f = jule::Ptr<_2252d6a73_FnIns>();
	jule::Ptr<_2252d6a73_ParamIns> _field_p = jule::Ptr<_2252d6a73_ParamIns>();
	jule::Ptr<_225aa4a5a_Data> _field_a = jule::Ptr<_225aa4a5a_Data>();
	_23e730c0b_Token _field_error_token = _23e730c0b_Token();
	jule::Ptr<_23e2b5818_TypeKind>* _field_k = nullptr;


	_22582290a_DynamicTypeAnnotation(jule::Ptr<_225aa4a5a_Eval> __param_e, jule::Ptr<_2252d6a73_FnIns> __param_f, jule::Ptr<_2252d6a73_ParamIns> __param_p, jule::Ptr<_225aa4a5a_Data> __param_a, _23e730c0b_Token __param_error_token, jule::Ptr<_23e2b5818_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_22582290a_DynamicTypeAnnotation(void) = default;

	inline void _method_push_generic(jule::Ptr<_23e2b5818_TypeKind>&,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Bool _method_annotate_slc(jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Bool _method_check_map_key(jule::Ptr<_23e2b5818_TypeKind>*,jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Bool _method_annotate_map(jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Bool _method_annotate_fn(jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Bool _method_annotate_ptr(jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Bool _method_annotate_sptr(jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Bool _method_annotate_any(jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Bool _method_annotate_kind(jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _22582290a_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _22582290a_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _22582290a_FnCallArgChecker {
	jule::Ptr<_225aa4a5a_Eval> _field_e = jule::Ptr<_225aa4a5a_Eval>();
	jule::Slice<jule::Ptr<_23e45734a_Expr>> _field_args = jule::Slice<jule::Ptr<_23e45734a_Expr>>();
	_23e730c0b_Token _field_error_token = _23e730c0b_Token();
	jule::Ptr<_2252d6a73_FnIns> _field_f = jule::Ptr<_2252d6a73_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();


	_22582290a_FnCallArgChecker(jule::Ptr<_225aa4a5a_Eval> __param_e, jule::Slice<jule::Ptr<_23e45734a_Expr>> __param_args, _23e730c0b_Token __param_error_token, jule::Ptr<_2252d6a73_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_22582290a_FnCallArgChecker(void) = default;

	inline void _method_push_err_token(_23e730c0b_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ptr<_2252d6a73_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>&);


	inline jule::Bool _method_check_arg(jule::Ptr<_2252d6a73_ParamIns>&,jule::Ptr<_225aa4a5a_Data>&,_23e730c0b_Token&);


	inline jule::Bool _method_push(jule::Ptr<_2252d6a73_ParamIns>&,jule::Ptr<_23e45734a_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ptr<_2252d6a73_ParamIns>&,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>&);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _22582290a_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _22582290a_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _22582290a_StructLitChecker {
	jule::Ptr<_225aa4a5a_Eval> _field_e = jule::Ptr<_225aa4a5a_Eval>();
	_23e730c0b_Token _field_error_token = _23e730c0b_Token();
	jule::Ptr<_225036509_StructIns> _field_s = jule::Ptr<_225036509_StructIns>();
	jule::Slice<jule::Ptr<_2255b85b3_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_2255b85b3_StructArgExprModel>>();


	_22582290a_StructLitChecker(jule::Ptr<_225aa4a5a_Eval> __param_e, _23e730c0b_Token __param_error_token, jule::Ptr<_225036509_StructIns> __param_s, jule::Slice<jule::Ptr<_2255b85b3_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_22582290a_StructLitChecker(void) = default;

	inline void _method_push_err(_23e730c0b_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ptr<_225036509_FieldIns>&,jule::Ptr<_225aa4a5a_Data>&,_23e730c0b_Token&);


	inline void _method_check_pair(jule::Ptr<_23e45734a_FieldExprPair>&,jule::Slice<jule::Any>&);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>&);


	inline void _method_check(jule::Slice<jule::Any>&);


	inline bool operator==(const _22582290a_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _22582290a_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _22551ab31_Pass {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_text = jule::Str();


	_22551ab31_Pass(_23e730c0b_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_22551ab31_Pass(void) = default;

	inline bool operator==(const _22551ab31_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _22551ab31_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _22582290a_RetTypeChecker {
	jule::Ptr<_2255ba3ea_ScopeChecker> _field_sc = jule::Ptr<_2255ba3ea_ScopeChecker>();
	jule::Ptr<_2252d6a73_FnIns> _field_f = jule::Ptr<_2252d6a73_FnIns>();
	jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> _field_types = jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>();
	jule::Slice<jule::Ptr<_23e45734a_Expr>> _field_exprs = jule::Slice<jule::Ptr<_23e45734a_Expr>>();
	jule::Slice<jule::Ptr<_2258258db_Var>> _field_vars = jule::Slice<jule::Ptr<_2258258db_Var>>();
	_23e730c0b_Token _field_error_token = _23e730c0b_Token();
	jule::Any _field_model = jule::Any();


	_22582290a_RetTypeChecker(jule::Ptr<_2255ba3ea_ScopeChecker> __param_sc, jule::Ptr<_2252d6a73_FnIns> __param_f, jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> __param_types, jule::Slice<jule::Ptr<_23e45734a_Expr>> __param_exprs, jule::Slice<jule::Ptr<_2258258db_Var>> __param_vars, _23e730c0b_Token __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_22582290a_RetTypeChecker(void) = default;

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ptr<_23e45734a_Expr>&);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ptr<_23e45734a_Expr>&);


	inline bool operator==(const _22582290a_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	inline bool operator!=(const _22582290a_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_Node {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Any _field_data = jule::Any();


	_23e45734a_Node(_23e730c0b_Token __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_23e45734a_Node(void) = default;

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_directive(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _23e45734a_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _23e45734a_Node &_Src) const { return !this->operator==(_Src); }
};


struct _2255ab70a_Trait: public _23e2b5818_Kind {
	jule::Ptr<_2255ab70a_Trait> self;

	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Ptr<_2252d6a73_Fn>> _field_methods = jule::Slice<jule::Ptr<_2252d6a73_Fn>>();
	jule::Slice<jule::Ptr<_225036509_Struct>> _field_implemented = jule::Slice<jule::Ptr<_225036509_Struct>>();


	_2255ab70a_Trait(_23e730c0b_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_doc, jule::Slice<jule::Ptr<_2252d6a73_Fn>> __param_methods, jule::Slice<jule::Ptr<_225036509_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_doc(__param_doc), _field_methods(__param_methods), _field_implemented(__param_implemented) {
		this->self = jule::Ptr<_2255ab70a_Trait>::make(this, nullptr);

	}

	~_2255ab70a_Trait(void) { this->self.ref = nullptr; }

	_2255ab70a_Trait(void) { this->self = jule::Ptr<_2255ab70a_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ptr<_2252d6a73_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _2255ab70a_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _2255ab70a_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _2255aae79_EnumItem {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_225aa4a5a_Value> _field_value = jule::Ptr<_225aa4a5a_Value>();


	_2255aae79_EnumItem(_23e730c0b_Token __param_token, jule::Str __param_ident, jule::Ptr<_225aa4a5a_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_2255aae79_EnumItem(void) = default;

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _2255aae79_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _2255aae79_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _2255aae79_Enum: public _23e2b5818_Kind {
	jule::Ptr<_2255aae79_Enum> self;

	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_23e2b5818_TypeSymbol> _field_kind = jule::Ptr<_23e2b5818_TypeSymbol>();
	jule::Slice<jule::Ptr<_2255aae79_EnumItem>> _field_items = jule::Slice<jule::Ptr<_2255aae79_EnumItem>>();
	jule::Str _field_doc = jule::Str();


	_2255aae79_Enum(_23e730c0b_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_23e2b5818_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_2255aae79_EnumItem>> __param_items, jule::Str __param_doc): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc(__param_doc) {
		this->self = jule::Ptr<_2255aae79_Enum>::make(this, nullptr);

	}

	~_2255aae79_Enum(void) { this->self.ref = nullptr; }

	_2255aae79_Enum(void) { this->self = jule::Ptr<_2255aae79_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ptr<_23e2b5818_TypeKind>);


	inline jule::Ptr<_2255aae79_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _2255aae79_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _2255aae79_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _225aa4a5a_BinopSolver {
	jule::Ptr<_225aa4a5a_Eval> _field_e = jule::Ptr<_225aa4a5a_Eval>();
	jule::Ptr<_225aa4a5a_Data> _field_l = jule::Ptr<_225aa4a5a_Data>();
	jule::Ptr<_225aa4a5a_Data> _field_r = jule::Ptr<_225aa4a5a_Data>();
	_23e730c0b_Token _field_op = _23e730c0b_Token();


	_225aa4a5a_BinopSolver(jule::Ptr<_225aa4a5a_Eval> __param_e, jule::Ptr<_225aa4a5a_Data> __param_l, jule::Ptr<_225aa4a5a_Data> __param_r, _23e730c0b_Token __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_225aa4a5a_BinopSolver(void) = default;

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_nil(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_enum(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_sptr(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_ptr(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_arr(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_slc(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_fn(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_struct(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_trait(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_any(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_bool(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_check_mod_data(jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_mod(void);


	inline jule::Bool _method_numbers_are_compatibile(jule::Str&,jule::Str&);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_float(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_unsig_int(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_sig_int(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval_prim(void);


	inline jule::Ptr<_225aa4a5a_Data> _method_eval(void);


	inline void _method_solve_const(jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_post_const(jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_check_data(jule::Ptr<_225aa4a5a_Data>&);


	inline void _method_check_datas(void);


	inline void _method_set_model(jule::Ptr<_225aa4a5a_Data>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_solve_explicit(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>&);


	inline jule::Ptr<_225aa4a5a_Data> _method_solve(jule::Ptr<_23e45734a_BinopExpr>&);


	inline bool operator==(const _225aa4a5a_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _225aa4a5a_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_TypeAlias {
	jule::Ptr<_23e45734a_ScopeTree> _field_scope = jule::Ptr<_23e45734a_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_23e2b5818_TypeSymbol> _field_kind = jule::Ptr<_23e2b5818_TypeSymbol>();
	jule::Str _field_doc = jule::Str();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();


	_23e2b5818_TypeAlias(jule::Ptr<_23e45734a_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, _23e730c0b_Token __param_token, jule::Str __param_ident, jule::Ptr<_23e2b5818_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc(__param_doc), _field_refers(__param_refers) {}

	

	_23e2b5818_TypeAlias(void) = default;

	inline bool operator==(const _23e2b5818_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_generic == _Src._field_generic &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _23e2b5818_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _2255b811d_Impl {
	_23e730c0b_Token _field_base = _23e730c0b_Token();
	_23e730c0b_Token _field_dest = _23e730c0b_Token();
	jule::Slice<jule::Ptr<_2252d6a73_Fn>> _field_methods = jule::Slice<jule::Ptr<_2252d6a73_Fn>>();
	jule::Slice<jule::Ptr<_2258258db_Var>> _field_statics = jule::Slice<jule::Ptr<_2258258db_Var>>();


	_2255b811d_Impl(_23e730c0b_Token __param_base, _23e730c0b_Token __param_dest, jule::Slice<jule::Ptr<_2252d6a73_Fn>> __param_methods, jule::Slice<jule::Ptr<_2258258db_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_2255b811d_Impl(void) = default;

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _2255b811d_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	inline bool operator!=(const _2255b811d_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_BraceLit {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_23e45734a_BraceLit(_23e730c0b_Token __param_token, jule::Slice<jule::Any> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_23e45734a_BraceLit(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _23e45734a_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _23e45734a_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_KeyValPair {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();
	_23e730c0b_Token _field_colon = _23e730c0b_Token();


	_23e45734a_KeyValPair(jule::Any __param_key, jule::Any __param_val, _23e730c0b_Token __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_23e45734a_KeyValPair(void) = default;

	inline bool operator==(const _23e45734a_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _23e45734a_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_SliceExpr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_23e45734a_SliceExpr(_23e730c0b_Token __param_token, jule::Slice<jule::Any> __param_elems): _field_token(__param_token), _field_elems(__param_elems) {}

	

	_23e45734a_SliceExpr(void) = default;

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _23e45734a_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _23e45734a_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_IndexingExpr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_index = jule::Any();


	_23e45734a_IndexingExpr(_23e730c0b_Token __param_token, jule::Any __param_expr, jule::Any __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_23e45734a_IndexingExpr(void) = default;

	inline bool operator==(const _23e45734a_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _23e45734a_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_SlicingExpr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_start = jule::Any();
	jule::Any _field_to = jule::Any();


	_23e45734a_SlicingExpr(_23e730c0b_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to): _field_token(__param_token), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_23e45734a_SlicingExpr(void) = default;

	inline bool operator==(const _23e45734a_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _23e45734a_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_TernaryExpr {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_23e45734a_TernaryExpr(_23e730c0b_Token __param_token, jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_token(__param_token), _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_23e45734a_TernaryExpr(void) = default;

	inline bool operator==(const _23e45734a_TernaryExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	inline bool operator!=(const _23e45734a_TernaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_GenericDecl {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();


	_23e45734a_GenericDecl(_23e730c0b_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_23e45734a_GenericDecl(void) = default;

	inline bool operator==(const _23e45734a_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _23e45734a_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_LabelSt {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();


	_23e45734a_LabelSt(_23e730c0b_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_23e45734a_LabelSt(void) = default;

	inline bool operator==(const _23e45734a_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _23e45734a_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_GotoSt {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	_23e730c0b_Token _field_label = _23e730c0b_Token();


	_23e45734a_GotoSt(_23e730c0b_Token __param_token, _23e730c0b_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_23e45734a_GotoSt(void) = default;

	inline bool operator==(const _23e45734a_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _23e45734a_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _23e2b5818_TypeChecker {
	jule::Ptr<_22579574b_Sema> _field_s = jule::Ptr<_22579574b_Sema>();
	jule::Trait<_225e7723a_Lookup> _field_lookup = jule::Trait<_225e7723a_Lookup>();
	jule::Ptr<_23e2b5818_Referencer> _field_referencer = jule::Ptr<_23e2b5818_Referencer>();
	_23e730c0b_Token _field_error_token = _23e730c0b_Token();
	jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>();
	jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();


	_23e2b5818_TypeChecker(jule::Ptr<_22579574b_Sema> __param_s, jule::Trait<_225e7723a_Lookup> __param_lookup, jule::Ptr<_23e2b5818_Referencer> __param_referencer, _23e730c0b_Token __param_error_token, jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain) {}

	

	_23e2b5818_TypeChecker(void) = default;

	inline void _method_push_err(_23e730c0b_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ptr<_23e2b5818_Prim> _method_build_prim(jule::Ptr<_23e45734a_IdentTypeDecl>&);


	inline void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	inline jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	inline jule::Bool _method_check_illegal_cycles(jule::Ptr<_23e45734a_IdentTypeDecl>&,jule::Any);


	inline jule::Trait<_23e2b5818_Kind> _method_from_type_alias(jule::Ptr<_23e45734a_IdentTypeDecl>&,jule::Ptr<_23e2b5818_TypeAlias>&);


	inline jule::Ptr<_2255aae79_Enum> _method_from_enum(jule::Ptr<_23e45734a_IdentTypeDecl>&,jule::Ptr<_2255aae79_Enum>&);


	inline jule::Bool _method_check_struct_ins(jule::Ptr<_225036509_StructIns>&,_23e730c0b_Token&);


	inline void _method_append_used_struct_reference(jule::Ptr<_225036509_Struct>&);


	inline jule::Ptr<_225036509_StructIns> _method_from_struct(jule::Ptr<_23e45734a_IdentTypeDecl>&,jule::Ptr<_225036509_Struct>&);


	inline jule::Trait<_23e2b5818_Kind> _method_get_def(jule::Ptr<_23e45734a_IdentTypeDecl>&);


	inline jule::Trait<_23e2b5818_Kind> _method_build_ident(jule::Ptr<_23e45734a_IdentTypeDecl>);


	inline jule::Ptr<_23e2b5818_Sptr> _method_build_sptr_from_type(jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Ptr<_23e2b5818_Sptr> _method_build_sptr(jule::Ptr<_23e45734a_SptrTypeDecl>);


	inline jule::Ptr<_23e2b5818_Ptr> _method_build_ptr_from_type(jule::Ptr<_23e2b5818_TypeKind>&);


	inline jule::Ptr<_23e2b5818_Ptr> _method_build_ptr(jule::Ptr<_23e45734a_PtrTypeDecl>);


	inline jule::Ptr<_23e2b5818_Slc> _method_build_slc(jule::Ptr<_23e45734a_SlcTypeDecl>);


	inline jule::Ptr<_23e2b5818_Arr> _method_build_arr(jule::Ptr<_23e45734a_ArrTypeDecl>);


	inline jule::Ptr<_23e2b5818_Map> _method_build_map(jule::Ptr<_23e45734a_MapTypeDecl>);


	inline jule::Ptr<_23e2b5818_Tuple> _method_build_tuple(jule::Ptr<_23e45734a_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ptr<_2252d6a73_FnIns>&);


	inline jule::Ptr<_2252d6a73_FnIns> _method_build_fn(jule::Ptr<_23e45734a_FnDecl>);


	inline jule::Trait<_23e2b5818_Kind> _method_build_by_namespace(jule::Ptr<_23e45734a_NamespaceTypeDecl>);


	inline jule::Ptr<_23e2b5818_TypeKind> _method_build(jule::Any&);


	inline jule::Ptr<_23e2b5818_TypeKind> _method_check_decl(jule::Ptr<_23e45734a_TypeDecl>&);


	inline void _method_check(jule::Ptr<_23e2b5818_TypeSymbol>&);


	inline bool operator==(const _23e2b5818_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _23e2b5818_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_FallSt {
	_23e730c0b_Token _field_token = _23e730c0b_Token();


	_23e45734a_FallSt(_23e730c0b_Token __param_token): _field_token(__param_token) {}

	

	_23e45734a_FallSt(void) = default;

	inline bool operator==(const _23e45734a_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _23e45734a_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_AssignLeft {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();


	_23e45734a_AssignLeft(_23e730c0b_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_23e45734a_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_23e45734a_AssignLeft(void) = default;

	inline bool operator==(const _23e45734a_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _23de59556_IR {
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_225615962_Package> _field_main = jule::Ptr<_225615962_Package>();
	jule::Slice<jule::Ptr<_225615962_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_225615962_ImportInfo>>();
	_23e1d6b35_OrderedDefines _field_ordered = _23e1d6b35_OrderedDefines();


	_23de59556_IR(jule::Slice<jule::Str> __param_passes, jule::Ptr<_225615962_Package> __param_main, jule::Slice<jule::Ptr<_225615962_ImportInfo>> __param_used, _23e1d6b35_OrderedDefines __param_ordered): _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_23de59556_IR(void) = default;

	static inline std::tuple<jule::Ptr<_23de59556_IR>,jule::Slice<_23ceb0c1d_Log>> _static_method_build(jule::Str,jule::Int);


	inline void _method_append_structs(jule::Ptr<_225615962_Package>&,jule::Slice<jule::Ptr<_225036509_Struct>>&);


	inline jule::Slice<jule::Ptr<_225036509_Struct>> _method_get_all_structures(void);


	inline void _method_append_vars(jule::Ptr<_225615962_Package>&,jule::Slice<jule::Ptr<_2258258db_Var>>&);


	inline jule::Slice<jule::Ptr<_2258258db_Var>> _method_get_all_variables(void);


	inline void _method_order(void);


	inline bool operator==(const _23de59556_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used &&
			this->_field_ordered == _Src._field_ordered;
	}

	inline bool operator!=(const _23de59556_IR &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	_23e730c0b_Token _field_setter = _23e730c0b_Token();
	jule::Slice<jule::Ptr<_23e45734a_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_23e45734a_AssignLeft>>();
	jule::Ptr<_23e45734a_Expr> _field_right = jule::Ptr<_23e45734a_Expr>();


	_23e45734a_AssignSt(jule::Bool __param_declarative, _23e730c0b_Token __param_setter, jule::Slice<jule::Ptr<_23e45734a_AssignLeft>> __param_left, jule::Ptr<_23e45734a_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_23e45734a_AssignSt(void) = default;

	inline bool operator==(const _23e45734a_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _23e45734a_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_Comment {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_text = jule::Str();


	_23e45734a_Comment(_23e730c0b_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_23e45734a_Comment(void) = default;

	inline bool operator==(const _23e45734a_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _23e45734a_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_ParamDecl {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_23e45734a_TypeDecl> _field_kind = jule::Ptr<_23e45734a_TypeDecl>();
	jule::Str _field_ident = jule::Str();


	_23e45734a_ParamDecl(_23e730c0b_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_23e45734a_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_23e45734a_ParamDecl(void) = default;

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _23e45734a_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _23e45734a_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_FnDecl {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_23e45734a_Directive>> _field_directives = jule::Slice<jule::Ptr<_23e45734a_Directive>>();
	jule::Ptr<_23e45734a_CommentGroup> _field_doc_comments = jule::Ptr<_23e45734a_CommentGroup>();
	jule::Ptr<_23e45734a_ScopeTree> _field_scope = jule::Ptr<_23e45734a_ScopeTree>();
	jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>();
	jule::Ptr<_23e45734a_RetTypeDecl> _field_result = jule::Ptr<_23e45734a_RetTypeDecl>();
	jule::Slice<jule::Ptr<_23e45734a_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_23e45734a_ParamDecl>>();


	_23e45734a_FnDecl(_23e730c0b_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_23e45734a_Directive>> __param_directives, jule::Ptr<_23e45734a_CommentGroup> __param_doc_comments, jule::Ptr<_23e45734a_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> __param_generics, jule::Ptr<_23e45734a_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_23e45734a_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_23e45734a_FnDecl(void) = default;

	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _23e45734a_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_exceptional == _Src._field_exceptional &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _23e45734a_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_VarDecl {
	jule::Ptr<_23e45734a_ScopeTree> _field_scope = jule::Ptr<_23e45734a_ScopeTree>();
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_23e45734a_Directive>> _field_directives = jule::Slice<jule::Ptr<_23e45734a_Directive>>();
	jule::Ptr<_23e45734a_CommentGroup> _field_doc_comments = jule::Ptr<_23e45734a_CommentGroup>();
	jule::Ptr<_23e45734a_TypeDecl> _field_kind = jule::Ptr<_23e45734a_TypeDecl>();
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();


	_23e45734a_VarDecl(jule::Ptr<_23e45734a_ScopeTree> __param_scope, _23e730c0b_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_23e45734a_Directive>> __param_directives, jule::Ptr<_23e45734a_CommentGroup> __param_doc_comments, jule::Ptr<_23e45734a_TypeDecl> __param_kind, jule::Ptr<_23e45734a_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_23e45734a_VarDecl(void) = default;

	inline bool operator==(const _23e45734a_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_RetSt {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();


	_23e45734a_RetSt(_23e730c0b_Token __param_token, jule::Ptr<_23e45734a_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_23e45734a_RetSt(void) = default;

	inline bool operator==(const _23e45734a_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _23e45734a_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_Iter {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_23e45734a_ScopeTree> _field_scope = jule::Ptr<_23e45734a_ScopeTree>();


	_23e45734a_Iter(_23e730c0b_Token __param_token, jule::Any __param_kind, jule::Ptr<_23e45734a_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_23e45734a_Iter(void) = default;

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _23e45734a_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _23e45734a_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _2255ba3ea_ScopeLabel {
	_23e730c0b_Token _field_token = _23e730c0b_Token();
	jule::Ptr<_2255ba3ea_Label> _field_label = jule::Ptr<_2255ba3ea_Label>();
	jule::Int _field_pos = jule::Int();
	jule::Ptr<_2255ba3ea_ScopeChecker> _field_scope = jule::Ptr<_2255ba3ea_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();


	_2255ba3ea_ScopeLabel(_23e730c0b_Token __param_token, jule::Ptr<_2255ba3ea_Label> __param_label, jule::Int __param_pos, jule::Ptr<_2255ba3ea_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_2255ba3ea_ScopeLabel(void) = default;

	inline bool operator==(const _2255ba3ea_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _2255ba3ea_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_WhileKind {
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();
	jule::Any _field_next = jule::Any();
	_23e730c0b_Token _field_next_token = _23e730c0b_Token();


	_23e45734a_WhileKind(jule::Ptr<_23e45734a_Expr> __param_expr, jule::Any __param_next, _23e730c0b_Token __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_23e45734a_WhileKind(void) = default;

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _23e45734a_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _23e45734a_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _23e45734a_RangeKind {
	_23e730c0b_Token _field_in_token = _23e730c0b_Token();
	jule::Ptr<_23e45734a_Expr> _field_expr = jule::Ptr<_23e45734a_Expr>();
	jule::Ptr<_23e45734a_VarDecl> _field_key_a = jule::Ptr<_23e45734a_VarDecl>();
	jule::Ptr<_23e45734a_VarDecl> _field_key_b = jule::Ptr<_23e45734a_VarDecl>();


	_23e45734a_RangeKind(_23e730c0b_Token __param_in_token, jule::Ptr<_23e45734a_Expr> __param_expr, jule::Ptr<_23e45734a_VarDecl> __param_key_a, jule::Ptr<_23e45734a_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_23e45734a_RangeKind(void) = default;

	inline bool operator==(const _23e45734a_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _23e45734a_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _23d0249a7_ArgParser {
	_23d0249a7_FlagSet _field_set = _23d0249a7_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::Int _field_i = jule::Int();


	_23d0249a7_ArgParser(_23d0249a7_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_content, jule::Int __param_i): _field_set(__param_set), _field_args(__param_args), _field_content(__param_content), _field_i(__param_i) {}

	

	_23d0249a7_ArgParser(void) = default;

	inline std::tuple<jule::Int,jule::Bool> _method_parse_integer_0(jule::Str&,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>);
	inline std::tuple<jule::Uint,jule::Bool> _method_parse_integer_1(jule::Str&,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>);


	inline jule::Str _method_get_data(void);


	inline jule::VoidExceptional _method_process_flag(jule::Trait<_23d0249a7_CommonFlag>&);


	inline jule::VoidExceptional _method_single_dash(jule::Str&);


	inline jule::VoidExceptional _method_double_dash(jule::Str&);


	inline jule::VoidExceptional _method_try_arg(void);


	inline jule::VoidExceptional _method_parse(void);


	inline bool operator==(const _23d0249a7_ArgParser &_Src) const {
		return 
			this->_field_set == _Src._field_set &&
			this->_field_args == _Src._field_args &&
			this->_field_content == _Src._field_content &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _23d0249a7_ArgParser &_Src) const { return !this->operator==(_Src); }
};


inline void _23d15835a_free(void*);
inline jule::Str _23d175344_byte_ptr_to_str(jule::U8*);
inline jule::Int _23d108294_get_last_errno(void);
inline jule::Int _23d108c56_stat(jule::U8*,struct stat*);
inline jule::Int _23d108c56_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _23d108c56_getcwd(jule::U8*,jule::Uint);
inline DIR* _23d108c56_opendir(jule::U8*);
inline struct dirent* _23d108c56_readdir(DIR*);
inline jule::Int _23d108c56_closedir(DIR*);
inline jule::Int _23d108c56_mkdir(jule::U8*,jule::Int);
inline jule::Int _23d108c56_rmdir(jule::U8*);
inline jule::Int _23d108c56_unlink(jule::U8*);
inline jule::I64 _23d12181d_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _23d12181d_read(jule::Int,void*,jule::Uint);
inline jule::Int _23d12181d_close(jule::Int);
inline jule::Int _23d12181d_write(jule::Int,void*,jule::Uint);
inline void _23d12181d_exit(jule::Int);
inline jule::Int _23d0e2c2e_get_last_os_error(void);
inline jule::Slice<jule::Str> _23d0e4923_args(void);
inline jule::Exceptional<jule::Str> _23d0e4923_working_dir(void);
inline jule::Exceptional<jule::Str> _23d103d3e___getwd(void);
inline jule::Str _23d08e2c4_clean(jule::Str);
inline jule::Str _23d08e2c4_from_slash(jule::Str);
inline jule::Str _23d08e2c4_join(jule::Slice<jule::Str>);
inline jule::Str _23d08e2c4_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _23d08e2c4_abs(jule::Str);
inline jule::Str _23d08e2c4_base(jule::Str);
inline jule::Str _23d08e2c4_dir(jule::Str);
inline jule::Str _23d08e2c4_volume_name(jule::Str);
inline jule::Bool _23d08c7ab_is_path_sep(jule::U8);
inline jule::Bool _23d08c7ab_is_abs(jule::Str);
inline jule::Int _23d08c7ab_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _23d08c7ab___abs(jule::Str);
inline jule::Str _23d08c7ab_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _23d08c7ab___join(jule::Slice<jule::Str>);
inline void _23d07c4e3_exit(jule::Int);
inline jule::Str _23d07c4e3_executable(void);
inline jule::Bool _23ceb0954_is_std_header_path(jule::Str);
inline jule::Bool _23ceb0954_is_valid_header_ext(jule::Str);
inline jule::Bool _23ceb0954_is_valid_cpp_ext(jule::Str);
inline jule::Str _23ceb0c1d_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _23ceb0c1d_arg_to_str(jule::Any);
inline jule::Int _23ceb0c1d_find_next_fmt(jule::Str);
inline jule::Str _23ceb0c1d_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _23d01326a_is_top_directive(jule::Str);
inline jule::Bool _23d049526_is_windows(jule::Str);
inline jule::Bool _23d049526_is_darwin(jule::Str);
inline jule::Bool _23d049526_is_linux(jule::Str);
inline jule::Bool _23d049526_is_i386(jule::Str);
inline jule::Bool _23d049526_is_amd64(jule::Str);
inline jule::Bool _23d049526_is_arm64(jule::Str);
inline jule::Bool _23d049526_is_unix(jule::Str);
inline jule::Bool _23d049526_is_32bit(jule::Str);
inline jule::Bool _23d049526_is_64bit(jule::Str);
inline void _23d049669_exit_err(jule::Str);
inline void _23d049669_init(void);
inline jule::Int _23e648b02_leading_zeros64(jule::U64);
inline jule::Int _23e648b02_trailing_zeros(jule::Uint);
inline jule::Int _23e648b02_trailing_zeros32(jule::U32);
inline jule::Int _23e648b02_trailing_zeros64(jule::U64);
inline jule::Int _23e648b02_len32(jule::U32);
inline jule::Int _23e648b02_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _23e648b02_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _23e648b02_mul64(jule::U64,jule::U64);
inline jule::U32 _23e0ae58a_f32_bits(jule::F32);
inline jule::F32 _23e0ae58a_f32_from_bits(jule::U32);
inline jule::U64 _23e0ae58a_f64_bits(jule::F64);
inline jule::F64 _23e0ae58a_f64_from_bits(jule::U64);
inline jule::F64 _23e148602_nan(void);
inline jule::Bool _23e148602_is_nan(jule::F64);
inline jule::F64 _23e148602_inf(jule::Int);
inline jule::Bool _23e148602_is_inf(jule::F64,jule::Int);
inline jule::F64 _23e206eb8_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _23e29a699_modf(jule::F64);
inline jule::Str _23d12cd35_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _23d12cd35_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _23d12cd35_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_23d12cd35_FloatInfo&);
inline jule::Slice<jule::U8> _23d12cd35_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_23d12cd35_DecimalSlice,jule::Int,jule::U8);
inline void _23d12cd35_round_shortest(_23e026524_Decimal&,jule::U64,jule::Int,_23d12cd35_FloatInfo&);
inline jule::Slice<jule::U8> _23d12cd35_fmt_e(jule::Slice<jule::U8>,jule::Bool,_23d12cd35_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _23d12cd35_fmt_f(jule::Slice<jule::U8>,jule::Bool,_23d12cd35_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _23d12cd35_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_23d12cd35_FloatInfo&);
inline jule::Slice<jule::U8> _23d12cd35_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_23d12cd35_FloatInfo&);
inline jule::Int _23d12cd35_min(jule::Int,jule::Int);
inline jule::Int _23d12cd35_max(jule::Int,jule::Int);
inline jule::U8 _23d01eb8e_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _23d01eb8e_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _23d01eb8e_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _23dd51c56_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _23dd51c56_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _23d225b97_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _23d225b97_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _23d225b97_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _23d225b97_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _23d225b97_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _23d225b97_atof_hex(jule::Str,_23d12cd35_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _23d225b97_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _23d225b97_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _23d225b97_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _23d225b97_parse_float(jule::Str,jule::Int);
inline void _23de8c457_ryu_ftoa_fixed32(_23d12cd35_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _23de8c457_ryu_ftoa_fixed64(_23d12cd35_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _23de8c457_format_decimal(_23d12cd35_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _23de8c457_ryu_ftoa_shortest(_23d12cd35_DecimalSlice&,jule::U64,jule::Int,_23d12cd35_FloatInfo&);
inline jule::Int _23de8c457_mul_by_log2_log10(jule::Int);
inline jule::Int _23de8c457_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _23de8c457_compute_bounds(jule::U64,jule::Int,_23d12cd35_FloatInfo&);
inline void _23de8c457_ryu_digits(_23d12cd35_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _23de8c457_ryu_digits32(_23d12cd35_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _23de8c457_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _23de8c457_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _23de8c457_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _23de8c457_divmod1e9(jule::U64);
inline void _23e026524_trim(_23e026524_Decimal&);
inline void _23e026524_right_shift(_23e026524_Decimal&,jule::Uint);
inline jule::Bool _23e026524_prefix_is_less_than(jule::Array<jule::U8,800>,jule::Int,jule::Str);
inline void _23e026524_left_shift(_23e026524_Decimal&,jule::Uint);
inline jule::Bool _23e026524_should_round_up(_23e026524_Decimal&,jule::Int);
inline jule::Str _23e028108_fmt_uint(jule::U64,jule::Int);
inline jule::Str _23e028108_fmt_int(jule::I64,jule::Int);
inline jule::Str _23e028108_itoa(jule::Int);
inline jule::Str _23e028108_small(jule::Int);
inline jule::Bool _23e028108_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _23e028108_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _23d01979e_push_opt_level(jule::Int);
inline jule::Bool _23e995ec6_is_letter(jule::I32);
inline jule::Bool _224dacb88_is16(jule::Slice<_224dacb88_Range16>,jule::U16);
inline jule::Bool _224dacb88_is32(jule::Slice<_224dacb88_Range32>,jule::U32);
inline jule::Bool _224dacb88_is_excluding_latin(jule::Ptr<_224dacb88_RangeTable>,jule::I32);
inline std::tuple<jule::I32,jule::Int> _23e9950d5_decode_rune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _23e9950d5_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _23e9950d5_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::Int _224977555_get_last_fs_error(void);
inline jule::Bool _23e730c0b_is_unary_op(jule::Str);
inline jule::Bool _23e730c0b_is_bin_op(jule::Str);
inline jule::Bool _23e730c0b_is_str(jule::Str);
inline jule::Bool _23e730c0b_is_raw_str(jule::Str);
inline jule::Bool _23e730c0b_is_rune(jule::Str);
inline jule::Bool _23e730c0b_is_bool(jule::Str);
inline jule::Bool _23e730c0b_contains_any(jule::Str,jule::Str);
inline jule::Bool _23e730c0b_is_float(jule::Str);
inline jule::Bool _23e730c0b_is_num(jule::Str);
inline jule::Bool _23e730c0b_is_ignore_ident(jule::Str);
inline jule::Bool _23e730c0b_is_anon_ident(jule::Str);
inline jule::Bool _23e730c0b_is_space(jule::I32);
inline jule::Bool _23e730c0b_is_letter(jule::I32);
inline jule::Bool _23e730c0b_is_decimal(jule::U8);
inline jule::Bool _23e730c0b_is_binary(jule::U8);
inline jule::Bool _23e730c0b_is_octal(jule::U8);
inline jule::Bool _23e730c0b_is_hex(jule::U8);
inline jule::Bool _23e730c0b_is_assign(jule::Uint);
inline jule::Bool _23e730c0b_is_postfix_op(jule::Str);
inline jule::Bool _23e730c0b_is_assign_op(jule::Str);
inline jule::Ptr<_23e4593c4_File> _23e4593c4_new_file_set(jule::Str);
inline _23ceb0c1d_Log _23e45a13e_make_err(jule::Int,jule::Int,jule::Ptr<_23e4593c4_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _23e45a13e_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _23e45a13e_float_fmt_e(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _23e45a13e_float_fmt_p(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _23e45a13e_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _23e45a13e_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _23e45a13e_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _23e45a13e_float_num(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _23e45a13e_common_num(jule::Slice<jule::U8>&);
inline jule::Str _23e45a13e_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _23e45a13e_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _23e45a13e_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _23e45a13e_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _23e45a13e_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Bool _23e45a13e_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _23e45a13e_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _23e45a13e_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _23e45a13e_hex_escape(jule::Slice<jule::U8>&,jule::Int);
inline jule::Str _23e45a13e_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _23e45a13e_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _23e45a13e_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _23e45a13e_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_23ceb0c1d_Log> _23e45a13e_lex(jule::Ptr<_23e4593c4_File>);
inline jule::Ptr<_225036949_FileInfo> _225036949_parse_file(jule::Ptr<_23e4593c4_File>);
inline std::tuple<jule::Ptr<_23e249d96_Ast>,jule::Slice<_23ceb0c1d_Log>> _225036949_parse_fileset(jule::Ptr<_23e4593c4_File>);
inline jule::Ptr<_23e45734a_ScopeTree> _225040a63_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _225040a63_is_st(_23e730c0b_Token,_23e730c0b_Token);
inline jule::Bool _225040a63_prev_is_incomplete_expr(jule::Slice<_23e730c0b_Token>&,jule::Int&);
inline std::tuple<jule::Int,jule::Bool> _225040a63_next_st_pos(jule::Slice<_23e730c0b_Token>&,jule::Int);
inline std::tuple<jule::Slice<_23e730c0b_Token>,jule::Bool> _225040a63_skip_st(jule::Int&,jule::Slice<_23e730c0b_Token>);
inline jule::Slice<jule::Ptr<_225040a63_Stmt>> _225040a63_split_stmts(jule::Slice<_23e730c0b_Token>&);
inline jule::Ptr<_225059ab0_CallData> _225059ab0_get_call_data(jule::Slice<_23e730c0b_Token>&);
inline jule::Slice<_23e730c0b_Token> _225059ab0_get_block_expr(jule::Slice<_23e730c0b_Token>&);
inline std::tuple<jule::Slice<_23e730c0b_Token>,jule::Slice<_23e730c0b_Token>> _225059ab0_split_colon(jule::Slice<_23e730c0b_Token>&);
inline jule::Slice<_23e730c0b_Token> _225059ab0_eliminate_comments(jule::Slice<_23e730c0b_Token>&);
inline jule::Int _225059ab0_find_lowest_prec_op(jule::Slice<_23e730c0b_Token>&);
inline jule::Ptr<_23e45734a_IdentExpr> _225059ab0_build_ident_expr(_23e730c0b_Token&);
inline std::tuple<jule::Slice<_23e730c0b_Token>,jule::Int> _225059ab0_get_range_expr_tokens(jule::Slice<_23e730c0b_Token>&);
inline jule::Bool _225146a37_check_assign_tokens(jule::Slice<_23e730c0b_Token>&);
inline _23ceb0c1d_Log _225247b9e_make_err(jule::Int,jule::Int,jule::Ptr<_23e4593c4_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_23e730c0b_Token> _225247b9e_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_23e730c0b_Token>&);
inline std::tuple<jule::Slice<_23e730c0b_Token>,jule::Slice<_23e730c0b_Token>> _225247b9e_range_last(jule::Slice<_23e730c0b_Token>&);
inline std::tuple<jule::Slice<jule::Slice<_23e730c0b_Token>>,jule::Slice<_23ceb0c1d_Log>> _225247b9e_parts(jule::Slice<_23e730c0b_Token>&,jule::Uint,jule::Bool);
inline jule::Str _225247b9e_get_close_kind_of_brace(jule::Str);
inline _23ceb0c1d_Log _225247b9e_compiler_err(_23e730c0b_Token&,jule::Str&,jule::Slice<jule::Any>);
inline void _225247b9e_push_suggestion(_23ceb0c1d_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_23e45734a_Comment> _225247b9e_build_comment(_23e730c0b_Token&);
inline jule::Str _225247b9e_tokstoa(jule::Slice<_23e730c0b_Token>&);
inline jule::Ptr<_23e45734a_TypeDecl> _225272404_build_void_type(void);
inline jule::Ptr<_23e45734a_TypeDecl> _225272404_build_prim_type(_23e730c0b_Token);
inline std::tuple<jule::Slice<_23e730c0b_Token>,jule::Int> _225272404_split_map_range(jule::Slice<_23e730c0b_Token>&,jule::Int&);
inline void _226100d86_lshift_unsig(_226100d86_Const&,_226100d86_Const&);
inline void _226100d86_rshift_unsig(_226100d86_Const&,_226100d86_Const&);
inline jule::Str _226103eee_real_kind_of(jule::Str);
inline jule::Int _226103eee_bitsize_of(jule::Str);
inline jule::Str _226103eee_int_from_bits(jule::U64);
inline jule::Str _226103eee_uint_from_bits(jule::U64);
inline jule::Str _226103eee_float_from_bits(jule::U64);
inline jule::Bool _226103eee_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _226103eee_bitsize_of_float(jule::F64);
inline jule::U64 _226103eee_bitsize_of_int(jule::I64);
inline jule::U64 _226103eee_bitsize_of_uint(jule::U64);
inline jule::F64 _226108454_min(jule::Str);
inline jule::F64 _226108454_max(jule::Str);
inline jule::Bool _22610564e_is_i8_compatible(jule::Str);
inline jule::Bool _22610564e_is_i16_compatible(jule::Str);
inline jule::Bool _22610564e_is_i32_compatible(jule::Str);
inline jule::Bool _22610564e_is_i64_compatible(jule::Str);
inline jule::Bool _22610564e_is_u8_compatible(jule::Str);
inline jule::Bool _22610564e_is_u16_compatible(jule::Str);
inline jule::Bool _22610564e_is_u32_compatible(jule::Str);
inline jule::Bool _22610564e_is_u64_compatible(jule::Str);
inline jule::Bool _22610564e_is_f32_compatible(jule::Str);
inline jule::Bool _22610564e_is_f64_compatible(jule::Str);
inline jule::Bool _22610564e_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _22610564e_is_i16_greater(jule::Str);
inline jule::Bool _22610564e_is_i32_greater(jule::Str);
inline jule::Bool _22610564e_is_i64_greater(jule::Str);
inline jule::Bool _22610564e_is_u8_greater(jule::Str);
inline jule::Bool _22610564e_is_u16_greater(jule::Str);
inline jule::Bool _22610564e_is_u32_greater(jule::Str);
inline jule::Bool _22610564e_is_u64_greater(jule::Str);
inline jule::Bool _22610564e_is_f32_greater(jule::Str);
inline jule::Bool _22610564e_is_f64_greater(jule::Str);
inline jule::Bool _22610564e_is_greater(jule::Str,jule::Str);
inline jule::Bool _2261088d8_is_sig_int(jule::Str);
inline jule::Bool _2261088d8_is_unsig_int(jule::Str);
inline jule::Bool _2261088d8_is_int(jule::Str);
inline jule::Bool _2261088d8_is_float(jule::Str);
inline jule::Bool _2261088d8_is_num(jule::Str);
inline jule::Bool _22625b3ed_is_ascii(jule::I32);
inline jule::I32 _22625b3ed_to_rune(jule::Slice<jule::U8>);
inline jule::Str _22625b3ed_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _22625b3ed_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _22625b3ed_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _22625b3ed_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Slice<jule::U8> _22625b3ed_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Bool _2252d6a73_kind_uses_generics(jule::Ptr<_23e2b5818_TypeKind>,jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>&);
inline jule::Bool _2252d6a73_parameter_uses_generics(jule::Ptr<_2252d6a73_Param>&,jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>&);
inline jule::Str _22551ab31_str_repeat(jule::Str,jule::Int);
inline jule::Str _22551ab31_build_doc(jule::Ptr<_23e45734a_CommentGroup>);
inline jule::Ptr<_23e2b5818_TypeSymbol> _22551ab31_build_type(jule::Ptr<_23e45734a_TypeDecl>);
inline jule::Ptr<_225aa4a5a_Value> _22551ab31_build_expr(jule::Ptr<_23e45734a_Expr>);
inline jule::Ptr<_23e2b5818_TypeAlias> _22551ab31_build_type_alias(jule::Ptr<_23e45734a_TypeAliasDecl>);
inline jule::Ptr<_225036509_Field> _22551ab31_build_field(jule::Ptr<_23e45734a_FieldDecl>);
inline jule::Slice<jule::Ptr<_225036509_Field>> _22551ab31_build_fields(jule::Slice<jule::Ptr<_23e45734a_FieldDecl>>&);
inline jule::Ptr<_225036509_Struct> _22551ab31_build_struct(jule::Ptr<_23e45734a_StructDecl>);
inline jule::Ptr<_2252d6a73_Param> _22551ab31_build_param(jule::Ptr<_23e45734a_ParamDecl>);
inline jule::Slice<jule::Ptr<_2252d6a73_Param>> _22551ab31_build_params(jule::Slice<jule::Ptr<_23e45734a_ParamDecl>>&);
inline jule::Ptr<_2252d6a73_RetType> _22551ab31_build_ret_type(jule::Ptr<_23e45734a_RetTypeDecl>);
inline jule::Ptr<_2252d6a73_Fn> _22551ab31_build_fn(jule::Ptr<_23e45734a_FnDecl>);
inline jule::Slice<jule::Ptr<_2252d6a73_Fn>> _22551ab31_build_methods(jule::Slice<jule::Ptr<_23e45734a_FnDecl>>&);
inline jule::Ptr<_2255ab70a_Trait> _22551ab31_build_trait(jule::Ptr<_23e45734a_TraitDecl>);
inline jule::Ptr<_2255aae79_EnumItem> _22551ab31_build_enum_item(jule::Ptr<_23e45734a_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_2255aae79_EnumItem>> _22551ab31_build_enum_items(jule::Slice<jule::Ptr<_23e45734a_EnumItemDecl>>&);
inline jule::Ptr<_2255aae79_Enum> _22551ab31_build_enum(jule::Ptr<_23e45734a_EnumDecl>);
inline jule::Ptr<_2258258db_Var> _22551ab31_build_var(jule::Ptr<_23e45734a_VarDecl>);
inline jule::Slice<jule::Ptr<_2258258db_Var>> _22551ab31_build_vars(jule::Slice<jule::Ptr<_23e45734a_VarDecl>>);
inline jule::Ptr<_2255b811d_Impl> _22551ab31_build_impl(jule::Ptr<_23e45734a_Impl>);
inline jule::Ptr<_2255ba3ea_ScopeChecker> _2255ba3ea_new_scope_checker_base(jule::Ptr<_22579574b_Sema>&,jule::Ptr<_2252d6a73_FnIns>);
inline jule::Ptr<_2255ba3ea_ScopeChecker> _2255ba3ea_new_scope_checker(jule::Ptr<_22579574b_Sema>&,jule::Ptr<_2252d6a73_FnIns>);
inline jule::Ptr<_2255ba3ea_ScopeLabel> _2255ba3ea_find_label_parent(jule::Str,jule::Ptr<_2255ba3ea_ScopeChecker>);
inline jule::Bool _2255ba3ea_stmt_is_goto_scope(jule::Any&,jule::Ptr<_2255ba3ea_Scope>&);
inline jule::Int _2255ba3ea_count_match_type(jule::Ptr<_2255ba3ea_Match>&,jule::Ptr<_23e2b5818_TypeKind>&);
inline jule::Slice<jule::Ptr<_225aa4a5a_Data>> _2255ba3ea_get_datas_from_tuple_data(jule::Ptr<_225aa4a5a_Data>&);
inline jule::Slice<jule::Any> _2255ba3ea_get_expr_models(jule::Any&);
inline jule::Bool _2255ba3ea_check_mut(jule::Ptr<_22579574b_Sema>&,jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);
inline jule::Bool _2255ba3ea_check_assign(jule::Ptr<_22579574b_Sema>&,jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_225aa4a5a_Data>,_23e730c0b_Token);
inline jule::Bool _2255ba3ea_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _2255ba3ea_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _2255ba3ea_st_is_def(jule::Any&);
inline jule::Ptr<_2258258db_Var> _225615962_find_var_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_23e2b5818_TypeAlias> _225615962_find_type_alias_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_225036509_Struct> _225615962_find_struct_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_2252d6a73_Fn> _225615962_find_fn_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_2255ab70a_Trait> _225615962_find_trait_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>&,jule::Str);
inline jule::Ptr<_2255aae79_Enum> _225615962_find_enum_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>&,jule::Str);
inline jule::Bool _22579574b_is_valid_model_for_ref(jule::Any);
inline _23ceb0c1d_Log _22579574b_compiler_err(_23e730c0b_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _22579574b_imp_is_lookupable(jule::Ptr<_225615962_ImportInfo>&,jule::Str);
inline jule::Slice<jule::Ptr<_2258258db_Var>> _22579574b_build_ret_vars(jule::Ptr<_2252d6a73_FnIns>&);
inline jule::Slice<jule::Ptr<_2258258db_Var>> _22579574b_build_param_vars(jule::Ptr<_2252d6a73_FnIns>&);
inline jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>> _22579574b_build_generic_type_aliases(jule::Ptr<_2252d6a73_FnIns>&);
inline jule::Ptr<_225a097a1_SymbolTable> _22579574b_find_file(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>&,jule::Ptr<_23e4593c4_File>&);
inline std::tuple<jule::Bool,jule::Bool> _22579574b_conditional_has_ret(jule::Ptr<_2255ba3ea_Conditional>);
inline jule::Bool _22579574b_match_has_ret(jule::Ptr<_2255ba3ea_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _22579574b___has_ret(jule::Ptr<_2255ba3ea_Scope>);
inline jule::Bool _22579574b_has_ret(jule::Ptr<_2255ba3ea_Scope>);
inline void _22579574b_push_suggestion(_23ceb0c1d_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> _22582290a_get_result_types(jule::Ptr<_23e2b5818_TypeKind>&);
inline jule::Bool _22582290a_trait_has_reference_receiver(jule::Ptr<_2255ab70a_Trait>&);
inline jule::Bool _22582290a_float_assignable(jule::Str,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Bool _22582290a_sig_assignable(jule::Str,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Bool _22582290a_unsig_assignable(jule::Str,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Bool _22582290a_int_assignable(jule::Str,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Any _225aa4a5a_find_builtins_import(jule::Str,jule::Ptr<_225615962_ImportInfo>);
inline void _225aa4a5a_make_struct_lit_alloc(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_2255b85b3_StructLitExprModel>&);
inline jule::Ptr<_2258258db_Var> _225aa4a5a_build_error_var(jule::Ptr<_2255ba3ea_Scope>&,jule::Ptr<_23e45734a_FnCallExpr>&);
inline jule::Any _225aa4a5a_find_builtins_sema(jule::Str,jule::Ptr<_22579574b_Sema>);
inline jule::Bool _225aa4a5a_is_ok_for_shifting(jule::Ptr<_225aa4a5a_Data>&);
inline jule::Bool _225aa4a5a_is_instanced_struct(jule::Ptr<_225036509_StructIns>);
inline jule::Bool _225aa4a5a_is_ptr_arithmetic_compatible_int(jule::Ptr<_225aa4a5a_Data>&);
inline void _225aa4a5a_normalize_bitsize(jule::Ptr<_225aa4a5a_Data>&);
inline void _225aa4a5a_normalize_type(jule::Ptr<_225aa4a5a_Data>&);
inline void _225aa4a5a_apply_cast_kind_model(jule::Ptr<_225aa4a5a_Data>&);
inline void _225aa4a5a_apply_cast_kind(jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_build_void_data(void);
inline jule::Str _225aa4a5a_kind_by_bitsize(jule::Any);
inline jule::Str _225aa4a5a_check_data_for_integer_indexing(jule::Ptr<_225aa4a5a_Data>&);
inline jule::Bool _23e2b5818_can_get_ptr(jule::Ptr<_225aa4a5a_Data>&);
inline jule::Bool _23e2b5818_is_valid_for_sptr_type(jule::Ptr<_23e2b5818_TypeKind>&);
inline jule::Bool _23e2b5818_is_valid_for_ref(jule::Ptr<_23e2b5818_TypeKind>&);
inline jule::Bool _23e2b5818_is_builtin_str_convertable(jule::Ptr<_23e2b5818_TypeKind>&);
inline jule::Str _23e2b5818_build_link_path_by_tokens(jule::Slice<_23e730c0b_Token>&);
inline jule::Ptr<_23e2b5818_Prim> _23e2b5818_build_prim_type(jule::Str);
inline jule::Ptr<_225036509_Struct> _23e2b5818_get_struct_from_kind(jule::Ptr<_23e2b5818_TypeKind>);
inline jule::Bool _23e2b5818_is_prim(jule::Str);
inline std::tuple<jule::Ptr<_225a097a1_SymbolTable>,jule::Slice<_23ceb0c1d_Log>> _225e03282_build_symbols(jule::Ptr<_23e249d96_Ast>&,jule::Trait<_225615962_Importer>&,jule::Ptr<_22551ab31_SymbolBuilder>);
inline std::tuple<jule::Ptr<_225615962_Package>,jule::Slice<_23ceb0c1d_Log>> _225e03282___analyze_package(jule::Slice<jule::Ptr<_23e249d96_Ast>>&,jule::Trait<_225615962_Importer>&,jule::Int&);
inline std::tuple<jule::Ptr<_225615962_Package>,jule::Slice<_23ceb0c1d_Log>> _225e03282_analyze_package(jule::Slice<jule::Ptr<_23e249d96_Ast>>,jule::Trait<_225615962_Importer>,jule::Int);
inline void _22602dc1a_init(void);
inline jule::Ptr<_2252d6a73_FnIns> _22602dc1a_find_builtin_fn(jule::Str);
inline jule::Ptr<_23e2b5818_TypeAlias> _22602dc1a_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_2255ab70a_Trait> _22602dc1a_find_builtin_trait(jule::Str);
inline jule::Any _22602dc1a_find_builtin_def(jule::Str);
inline jule::Any _22602dc1a_find_builtin_def_std_mem(jule::Str);
inline jule::Any _22602dc1a_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _22602dc1a_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_common_plain(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_common(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_common_mut(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_error(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_out(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_outln(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_new(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_panic(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_make(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_append(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_copy(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_clone(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_std_mem_size_of(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_std_mem_align_of(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _23e0e568c_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _23e0e568c_check_arch(jule::Str);
inline jule::Bool _23e0e568c_is_pass_file_annotation(jule::Str);
inline void _23e1c54b4_set_os_flags(void);
inline void _23e1c54b4_set_arch_flags(void);
inline void _23e1c54b4_init_flags(void);
inline void _23e3748d8_exit_err(jule::Str);
inline jule::Slice<jule::U8> _23e3748d8_read_buff(jule::Str);
inline _23ceb0c1d_Log _23e3748d8_flat_compiler_err(jule::Str);
inline jule::Exceptional<jule::Slice<jule::Ptr<_224ea5599_DirEntry>>> _23e3748d8_read_package_dirents(jule::Str);
inline std::tuple<jule::Bool,jule::Slice<_23ceb0c1d_Log>> _23e3748d8_is_pass_build_directives(jule::Ptr<_23e249d96_Ast>&);
inline void _23de59556_push_passes(jule::Ptr<_225615962_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _23de59556_get_all_unique_passes(jule::Ptr<_225615962_Package>&,jule::Slice<jule::Ptr<_225615962_ImportInfo>>);
inline jule::Bool _23d019073_is_exist(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _23d019073_is_dead(jule::Any);
inline void _23d019073_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _23d019073_is_all_references_are_dead(jule::Ptr<_22551ab31_ReferenceStack>);
inline jule::Bool _23d019073_is_fn_dead(jule::Ptr<_2252d6a73_FnIns>);
inline jule::Bool _23d019073_is_var_dead(jule::Ptr<_2258258db_Var>);
inline jule::Bool _23d019073_is_struct_dead(jule::Ptr<_225036509_StructIns>);
inline jule::Bool _23d019073_is_trait_dead(jule::Ptr<_2255ab70a_Trait>);
inline void _23d019073_eliminate_dead_functions(jule::Slice<jule::Ptr<_2252d6a73_Fn>>&);
inline void _23d019073_eliminate_dead_globals(jule::Ptr<_225615962_Package>&);
inline void _23d019073_eliminate_dead_functions_package(jule::Ptr<_225615962_Package>&);
inline void _23d019073_catch_alive_init(jule::Ptr<_225615962_Package>&);
inline void _23d019073_eliminate_package(jule::Ptr<_225615962_Package>&);
inline void _23d019073_eliminate(jule::Ptr<_23de59556_IR>&);
inline void _23d0477ee_eliminate_dead_code_of_scope(jule::Ptr<_2255ba3ea_Scope>);
inline jule::Int _2265c1279_find_format_prefix(jule::Slice<jule::U8>&,jule::Int&);
inline jule::Slice<jule::U8> _2265c1279_get_format_range(jule::Int&,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _2265c1279_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _2265c1279_apply_fmt_by_default(jule::Int&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _2265c1279_apply_fmt(jule::Slice<jule::U8>&,jule::Int&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _2265c1279_format_bytes(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _2265c1279_format(jule::Str,jule::Slice<jule::Any>);
inline jule::U64 _226630371_unix(void);
inline jule::U64 _226630371_unix_year_to_seconds(jule::Uint,jule::Bool&);
inline jule::U64 _226630371_unix_month_to_seconds(jule::Uint,jule::Bool);
inline jule::Bool _23d057e3b_iter_expr_is_copy_optimizable(jule::Ptr<_225aa4a5a_Data>&,jule::Ptr<_2258258db_Var>&);
inline jule::Str _23d057e3b_gen_range_index_iter(jule::Ptr<_2255ba3ea_RangeIter>&);
inline jule::Str _23d057e3b_gen_range_hashmap_iter(jule::Ptr<_2255ba3ea_RangeIter>&);
inline jule::Str _23d057e3b_gen_if(jule::Ptr<_2255ba3ea_If>);
inline jule::Str _23d057e3b_gen_conditional(jule::Ptr<_2255ba3ea_Conditional>);
inline jule::Str _23d057e3b_gen_inf_iter(jule::Ptr<_2255ba3ea_InfIter>);
inline jule::Str _23d057e3b_gen_while_iter(jule::Ptr<_2255ba3ea_WhileIter>);
inline jule::Str _23d057e3b_gen_range_iter(jule::Ptr<_2255ba3ea_RangeIter>);
inline jule::Str _23d057e3b_gen_cont(jule::Ptr<_2255ba3ea_ContSt>);
inline jule::Str _23d057e3b_gen_label(jule::Ptr<_2255ba3ea_Label>);
inline jule::Str _23d057e3b_gen_goto(jule::Ptr<_2255ba3ea_GotoSt>);
inline jule::Str _23d057e3b_gen_postfix(jule::Ptr<_2255ba3ea_Postfix>);
inline jule::Str _23d057e3b_gen_div_by_zero_assign(jule::Ptr<_2255ba3ea_Assign>);
inline jule::Str _23d057e3b_gen_assign(jule::Ptr<_2255ba3ea_Assign>);
inline jule::Str _23d057e3b_gen_multi_assign(jule::Ptr<_2255ba3ea_MultiAssign>);
inline jule::Str _23d057e3b_get_case_match_expr(jule::Ptr<_2255ba3ea_Match>&);
inline jule::Str _23d057e3b_gen_case(jule::Ptr<_2255ba3ea_Match>,jule::Ptr<_2255ba3ea_Case>);
inline jule::Str _23d057e3b_gen_match(jule::Ptr<_2255ba3ea_Match>);
inline jule::Str _23d057e3b_gen_fall_st(jule::Ptr<_2255ba3ea_FallSt>);
inline jule::Str _23d057e3b_gen_break_st(jule::Ptr<_2255ba3ea_BreakSt>);
inline jule::Str _23d057e3b_gen_ret_vars(jule::Ptr<_2255ba3ea_RetSt>);
inline jule::Str _23d057e3b_gen_ret_expr_tuple(jule::Ptr<_2255ba3ea_RetSt>);
inline jule::Str _23d057e3b_gen_ret_expr(jule::Ptr<_2255ba3ea_RetSt>);
inline jule::Str _23d057e3b_gen_ret_st(jule::Ptr<_2255ba3ea_RetSt>);
inline jule::Str _23d057e3b_gen_data_expr(jule::Ptr<_225aa4a5a_Data>);
inline jule::Str _23d057e3b_gen_scope_var(jule::Ptr<_2258258db_Var>);
inline jule::Str _23d057e3b_gen_st(jule::Any);
inline jule::Str _23d057e3b_gen_scope(jule::Ptr<_2255ba3ea_Scope>);
inline jule::Str _23d057e3b_gen_fn_scope(jule::Ptr<_2252d6a73_FnIns>);
inline jule::Str _23d057e3b_gen_method_scope(jule::Ptr<_2252d6a73_FnIns>);
inline jule::Str _23d1d4c66_concat_all_parts(jule::Slice<_23e730c0b_Token>);
inline jule::Str _23d1d4c66_get_accessor(jule::Ptr<_23e2b5818_TypeKind>&);
inline jule::Str _23d1d4c66_decompose_common_esq(jule::U8);
inline jule::Str _23d1d4c66_sbtoa(jule::U8);
inline jule::Str _23d1d4c66_get_cstr_model(jule::Slice<jule::U8>);
inline jule::Str _23d1d4c66_get_str_model(jule::Ptr<_226100d86_Const>&);
inline jule::Str _23d1d4c66_get_bool_model(jule::Ptr<_226100d86_Const>&);
inline jule::Str _23d1d4c66_get_nil_model(void);
inline jule::Str _23d1d4c66_gen_float_special_cases(jule::F64&);
inline jule::Str _23d1d4c66_ftoa(jule::F64,jule::Int);
inline jule::Str _23d1d4c66_get_f32_model(jule::Ptr<_226100d86_Const>&);
inline jule::Str _23d1d4c66_get_f64_model(jule::Ptr<_226100d86_Const>&);
inline jule::Str _23d1d4c66_get_float_model(jule::Ptr<_225aa4a5a_Data>&);
inline jule::Str _23d1d4c66_i64toa(jule::I64);
inline jule::Str _23d1d4c66_get_i64_model(jule::Ptr<_226100d86_Const>&);
inline jule::Str _23d1d4c66_u64toa(jule::U64);
inline jule::Str _23d1d4c66_get_u64_model(jule::Ptr<_226100d86_Const>);
inline jule::Str _23d1d4c66_gen_const_expr(jule::Ptr<_225aa4a5a_Data>);
inline jule::Str _23d1d4c66_gen_const_expr_model(jule::Ptr<_226100d86_Const>);
inline jule::Str _23d1d4c66_gen_div_by_zero_binop_expr_model(jule::Str,jule::Any,jule::Any);
inline jule::Str _23d1d4c66_gen_binop_expr_model(jule::Ptr<_2255b85b3_BinopExprModel>);
inline jule::Str _23d1d4c66_gen_var_expr_model(jule::Ptr<_2258258db_Var>);
inline jule::Str _23d1d4c66_gen_struct_expr_model(jule::Ptr<_225036509_Struct>);
inline jule::Str _23d1d4c66_gen_struct_ins_expr_model(jule::Ptr<_225036509_StructIns>);
inline jule::Str _23d1d4c66_gen_unary_expr_model(jule::Ptr<_2255b85b3_UnaryExprModel>);
inline jule::Str _23d1d4c66_gen_cpp_struct_lit_expr_model(jule::Ptr<_2255b85b3_StructLitExprModel>);
inline jule::Str _23d1d4c66_gen_struct_lit_expr_model(jule::Ptr<_2255b85b3_StructLitExprModel>);
inline jule::Str _23d1d4c66_gen_alloc_struct_lit_expr_model(jule::Ptr<_2255b85b3_AllocStructLitExprModel>);
inline jule::Str _23d1d4c66_gen_casting_expr_model(jule::Ptr<_2255b85b3_CastingExprModel>);
inline jule::Str _23d1d4c66_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _23d1d4c66_gen_expr_model_for_call(jule::Any);
inline jule::Str _23d1d4c66_gen_pure_fn_call_expr_model(jule::Ptr<_2255b85b3_FnCallExprModel>&);
inline jule::Bool _23d1d4c66_is_forwarded(jule::Ptr<_2255ba3ea_Scope>&);
inline jule::Str _23d1d4c66_gen_fn_call_expr_model(jule::Ptr<_2255b85b3_FnCallExprModel>);
inline jule::Str _23d1d4c66_gen_slice_expr_model(jule::Ptr<_2255b85b3_SliceExprModel>);
inline jule::Str _23d1d4c66_gen_indexing_expr_model(jule::Ptr<_2255b85b3_IndexigExprModel>);
inline jule::Str _23d1d4c66_gen_anon_fn_expr_model(jule::Ptr<_2255b85b3_AnonFnExprModel>);
inline jule::Str _23d1d4c66_gen_map_expr_model(jule::Ptr<_2255b85b3_MapExprModel>);
inline jule::Str _23d1d4c66_gen_slicing_expr_model(jule::Ptr<_2255b85b3_SlicingExprModel>);
inline jule::Str _23d1d4c66_gen_trait_sub_ident_expr_model(jule::Ptr<_2255b85b3_TraitSubIdentExprModel>);
inline jule::Str _23d1d4c66_gen_struct_sub_ident_expr_model(jule::Ptr<_2255b85b3_StructSubIdentExprModel>);
inline jule::Str _23d1d4c66_gen_common_ident_expr_model(jule::Ptr<_2255b85b3_CommonIdentExprModel>);
inline jule::Str _23d1d4c66_gen_common_sub_ident_expr_model(jule::Ptr<_2255b85b3_CommonSubIdentExprModel>);
inline jule::Str _23d1d4c66_gen_array_expr_model(jule::Ptr<_2255b85b3_ArrayExprModel>);
inline jule::Str _23d1d4c66_gen_fn_ins_expr_model_common(jule::Ptr<_2252d6a73_FnIns>);
inline jule::Str _23d1d4c66_gen_fn_ins_expr_model(jule::Ptr<_2252d6a73_FnIns>);
inline jule::Str _23d1d4c66_gen_tuple_expr_model(jule::Ptr<_2255b85b3_TupleExprModel>);
inline jule::Str _23d1d4c66_gen_builtin_new_call_expr_model(jule::Ptr<_2255b85b3_BuiltinNewCallExprModel>);
inline jule::Str _23d1d4c66_gen_builtin_out_call_expr_model(jule::Ptr<_2255b85b3_BuiltinOutCallExprModel>);
inline jule::Str _23d1d4c66_gen_builtin_outln_call_expr_model(jule::Ptr<_2255b85b3_BuiltinOutlnCallExprModel>);
inline jule::Str _23d1d4c66_gen_builtin_panic_call_expr_model(jule::Ptr<_2255b85b3_BuiltinPanicCallExprModel>);
inline jule::Str _23d1d4c66_gen_builtin_error_call_expr_model(jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>);
inline jule::Str _23d1d4c66_gen_builtin_make_call_expr_model(jule::Ptr<_2255b85b3_BuiltinMakeCallExprModel>);
inline jule::Str _23d1d4c66_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ptr<_23e2b5818_TypeKind>&,jule::Ptr<_2255b85b3_SliceExprModel>&,jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel>&);
inline std::tuple<jule::Str,jule::Bool> _23d1d4c66_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel>);
inline jule::Str _23d1d4c66_gen_builtin_append_call_expr_model(jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel>);
inline jule::Str _23d1d4c66_gen_builtin_clone_call_expr_model(jule::Ptr<_2255b85b3_BuiltinCloneCallExprModel>);
inline jule::Str _23d1d4c66_gen_sizeof_expr_model(jule::Ptr<_2255b85b3_SizeofExprModel>);
inline jule::Str _23d1d4c66_gen_alignof_expr_model(jule::Ptr<_2255b85b3_AlignofExprModel>);
inline jule::Str _23d1d4c66_gen_rune_expr_model(jule::Ptr<_2255b85b3_RuneExprModel>);
inline jule::Str _23d1d4c66_gen_struct_static_ident_expr_model(jule::Ptr<_2255b85b3_StructStaticIdentExprModel>);
inline jule::Str _23d1d4c66_gen_integrated_to_str_expr_model(jule::Ptr<_2255b85b3_IntegratedToStrExprModel>);
inline jule::Str _23d1d4c66_gen_ternary_expr_model(jule::Ptr<_2255b85b3_TernaryExprModel>);
inline jule::Str _23d1d4c66_gen_expr_model(jule::Any);
inline jule::Str _23d1d4c66_gen_expr(jule::Any);
inline jule::Str _23d1d4c66_gen_val(jule::Ptr<_225aa4a5a_Value>);
inline jule::Str _23d1d4c66_get_init_expr(jule::Ptr<_23e2b5818_TypeKind>);
inline jule::Str _226470579_get_derive_fn_decl_clone(jule::Ptr<_225036509_Struct>&);
inline jule::Str _226470579_get_derive_fn_def_clone(jule::Ptr<_225036509_Struct>&);
inline jule::Str _22635bd4a_as_ident(jule::Str);
inline jule::Str _22635bd4a_as_jt(jule::Str);
inline jule::Str _22635bd4a_get_addr_as_ident(jule::Uintptr);
inline jule::Str _22635bd4a_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _22635bd4a_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _22635bd4a_fn_out_ident(jule::Ptr<_2252d6a73_Fn>&);
inline jule::Str _22635bd4a_fn_ins_out_ident(jule::Ptr<_2252d6a73_FnIns>&);
inline jule::Str _22635bd4a_trait_out_ident(jule::Ptr<_2255ab70a_Trait>);
inline jule::Str _22635bd4a_param_out_ident(jule::Ptr<_2252d6a73_Param>&);
inline jule::Str _22635bd4a_struct_out_ident(jule::Ptr<_225036509_Struct>&);
inline jule::Str _22635bd4a_struct_ins_out_ident(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _22635bd4a_field_out_ident(jule::Ptr<_225036509_Field>&);
inline jule::Str _22635bd4a_var_out_ident(jule::Ptr<_2258258db_Var>);
inline jule::Str _22635bd4a_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _22635bd4a_iter_end_label_ident(jule::Uintptr);
inline jule::Str _22635bd4a_iter_next_label_ident(jule::Uintptr);
inline jule::Str _22635bd4a_label_ident(jule::Str);
inline jule::Str _22635bd4a_match_end_label_ident(jule::Uintptr);
inline jule::Str _22635bd4a_case_begin_label_ident(jule::Uintptr);
inline jule::Ptr<_23e45734a_Directive> _22649998d_find_directive(jule::Slice<jule::Ptr<_23e45734a_Directive>>&,jule::Str);
inline jule::Bool _22649998d_has_directive(jule::Slice<jule::Ptr<_23e45734a_Directive>>&,jule::Str);
inline jule::Str _22649998d_gen_prim_kind(jule::Ptr<_23e2b5818_Prim>);
inline jule::Str _22649998d_gen_tuple_kind(jule::Ptr<_23e2b5818_Tuple>);
inline jule::Str _22649998d_as_sptr_kind(jule::Str);
inline jule::Str _22649998d_gen_sptr_kind(jule::Ptr<_23e2b5818_Sptr>);
inline jule::Str _22649998d_gen_ptr_kind(jule::Ptr<_23e2b5818_Ptr>);
inline jule::Str _22649998d_gen_enum_kind(jule::Ptr<_2255aae79_Enum>);
inline jule::Str _22649998d_as_slice_kind(jule::Ptr<_23e2b5818_TypeKind>);
inline jule::Str _22649998d_gen_slice_kind(jule::Ptr<_23e2b5818_Slc>);
inline jule::Str _22649998d_gen_map_kind(jule::Ptr<_23e2b5818_Map>);
inline jule::Str _22649998d_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _22649998d_gen_trait_kind(jule::Ptr<_2255ab70a_Trait>);
inline jule::Str _22649998d_gen_struct_kind(jule::Ptr<_225036509_Struct>);
inline jule::Str _22649998d_gen_struct_kind_ins(jule::Ptr<_225036509_StructIns>);
inline jule::Str _22649998d_gen_array_kind(jule::Ptr<_23e2b5818_Arr>);
inline jule::Str _22649998d_gen_fn_anon_decl(jule::Ptr<_2252d6a73_FnIns>);
inline jule::Str _22649998d_gen_fn_kind(jule::Ptr<_2252d6a73_FnIns>);
inline jule::Str _22649998d_gen_type_kind(jule::Ptr<_23e2b5818_TypeKind>);
inline void _2264c2c91_add_indent(void);
inline void _2264c2c91_done_indent(void);
inline jule::Str _2264c2c91_indent(void);
inline jule::Bool _2264c2c91_is_cpp_header_file(jule::Str);
inline jule::Str _2264c2c91_gen_links(jule::Ptr<_23de59556_IR>&);
inline jule::Str _2264c2c91_gen_fn_result(jule::Ptr<_2252d6a73_Fn>&);
inline jule::Str _2264c2c91_gen_fn_ins_result(jule::Ptr<_2252d6a73_FnIns>&);
inline jule::Str _2264c2c91_gen_param_prototype(jule::Ptr<_2252d6a73_Param>&);
inline jule::Str _2264c2c91_gen_param_ins(jule::Ptr<_2252d6a73_ParamIns>&);
inline jule::Str _2264c2c91_gen_param_ins_prototype(jule::Ptr<_2252d6a73_ParamIns>&);
inline jule::Str _2264c2c91_gen_param(jule::Ptr<_2252d6a73_Param>&);
inline jule::Str _2264c2c91_gen_params(jule::Slice<jule::Ptr<_2252d6a73_Param>>&);
inline jule::Str _2264c2c91_gen_params_ins(jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>&);
inline jule::Str _2264c2c91_gen_params_prototypes(jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>&);
inline jule::Str _2264c2c91_gen_trait(jule::Ptr<_2255ab70a_Trait>&);
inline jule::Str _2264c2c91_gen_traits_tbl(jule::Ptr<_225a097a1_SymbolTable>&);
inline jule::Str _2264c2c91_gen_traits_pkg(jule::Ptr<_225615962_Package>&);
inline jule::Str _2264c2c91_gen_traits(jule::Ptr<_23de59556_IR>&);
inline jule::Str _2264c2c91_gen_trait_prototype(jule::Ptr<_2255ab70a_Trait>&);
inline jule::Str _2264c2c91_gen_trait_prototypes(jule::Ptr<_225615962_Package>&);
inline jule::Str _2264c2c91_gen_struct_plain_prototype(jule::Ptr<_225036509_Struct>&);
inline jule::Str _2264c2c91_gen_struct_plain_prototypes(jule::Slice<jule::Ptr<_225036509_Struct>>&);
inline jule::Str _2264c2c91_gen_struct_traits(jule::Ptr<_225036509_Struct>&);
inline jule::Str _2264c2c91_gen_field_decl(jule::Ptr<_225036509_FieldIns>&);
inline jule::Str _2264c2c91_gen_struct_self_field_type_kind(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct_self_field(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct_self_field_init_st(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct_constructor(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct_destructor(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct_operators(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct_derive_defs_prototypes(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct_ins_prototype(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct_prototype(jule::Ptr<_225036509_Struct>&);
inline jule::Str _2264c2c91_gen_struct_prototypes(jule::Slice<jule::Ptr<_225036509_Struct>>&);
inline jule::Str _2264c2c91_gen_fn_decl_head(jule::Ptr<_2252d6a73_FnIns>&,jule::Bool);
inline jule::Str _2264c2c91_gen_fn_prototype(jule::Ptr<_2252d6a73_Fn>&,jule::Bool);
inline jule::Str _2264c2c91_gen_fn_prototypes(jule::Ptr<_225615962_Package>&);
inline jule::Str _2264c2c91_gen_prototypes(jule::Ptr<_23de59556_IR>&);
inline jule::Str _2264c2c91_gen_var_init_expr(jule::Ptr<_2258258db_Var>&,jule::Str);
inline jule::Str _2264c2c91_gen_var(jule::Ptr<_2258258db_Var>);
inline jule::Str _2264c2c91_gen_globals(jule::Slice<jule::Ptr<_2258258db_Var>>&);
inline jule::Str _2264c2c91_gen_fn(jule::Ptr<_2252d6a73_Fn>&);
inline jule::Str _2264c2c91_gen_pkg_fns(jule::Ptr<_225615962_Package>&);
inline jule::Str _2264c2c91_gen_struct_method_defs(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct_ostream(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct_derive_defs(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct_ins(jule::Ptr<_225036509_StructIns>&);
inline jule::Str _2264c2c91_gen_struct(jule::Ptr<_225036509_Struct>&);
inline jule::Str _2264c2c91_gen_structs(jule::Slice<jule::Ptr<_225036509_Struct>>&);
inline jule::Str _2264c2c91_gen_fns(jule::Ptr<_23de59556_IR>&);
inline void _2264c2c91_push_init(jule::Ptr<_225615962_Package>&,jule::Str&);
inline jule::Str _2264c2c91_gen_init_caller(jule::Ptr<_23de59556_IR>&);
inline void _2264c2c91_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _2264c2c91_gen(jule::Ptr<_23de59556_IR>&);
inline jule::Str _23ce7c756_str_repeat(jule::Str,jule::Int);
inline void _23ce7c756_print_error_message(jule::Str);
inline void _23ce7c756_help(jule::Slice<jule::Str>&);
inline void _23ce7c756_version(jule::Slice<jule::Str>&);
inline void _23ce7c756_tool_distos(void);
inline void _23ce7c756_tool_distarch(void);
inline void _23ce7c756_tool(jule::Slice<jule::Str>&);
inline void _23ce7c756_julenv(void);
inline jule::Bool _23ce7c756_process_command(jule::Slice<jule::Str>&);
inline void _23ce7c756_exit_err(jule::Str);
void entry_point(void);
inline void _23ce7ce1b___init_common(void);
inline void _23ceb3825_init(void);
inline jule::Int _23ceb479e_system(jule::Str);
inline void _23ceb479e_write_output(jule::Str,jule::Str);
inline void _23ceb479e_clear_objects(void);
inline void _23ceb479e_compile_ir(jule::Str,jule::Str);
inline void _23ceb479e_do_spell(jule::Str,jule::Str,jule::Str);
inline jule::Bool _23ceb479e_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _23ceb479e_gen_compile_cmd(jule::Str,jule::Ptr<_23de59556_IR>&);
inline jule::Str _23ceb479e_get_compile_path(void);
inline void _23ceb479e_apply_target_independent_optimizations(jule::Ptr<_23de59556_IR>&);
inline void _23ceb479e_check_compiler_flag(void);
inline void _23ceb479e_check_target_arch(jule::Str);
inline void _23ceb479e_check_target_os(jule::Str);
inline void _23ceb479e_check_target_flag(jule::Str&);
inline void _23ceb479e_check_opt_flag(jule::Str&);
inline jule::Slice<jule::Str> _23ceb479e_check_flags(jule::Slice<jule::Str>&);
inline void _23ceb479e_setup_sema_flags(jule::Int&);
inline jule::Ptr<_23de59556_IR> _23ceb479e_build_ir(jule::Slice<jule::Str>&);
inline void _23ceb479e_compile_command(jule::Slice<jule::Str>&);


static jule::Str _23ceb479e_COMPILER = jule::Str();
static jule::Str _23ceb479e_COMPILER_PATH = jule::Str();
static jule::Str _23ceb479e_OUT_DIR = jule::Str("dist", 4);
static jule::Str _23ceb479e_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _23ceb479e_OUT = jule::Str();
static jule::Str _23ceb479e_CPP_STD = jule::Str("c++17", 5);
static jule::Bool _23ceb479e_SHADOWING = false;
static jule::Bool _23ceb479e_TRANSPILATION = false;
static jule::Array<jule::Str,4> _23ceb0954_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _23ceb0954_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _23ceb0954_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,3> _23d049526_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _23d049526_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _23d049669_PATH_STDLIB = jule::Str();
static jule::Str _23d049669_PATH_EXEC = jule::Str();
static jule::Str _23d049669_PATH_WD = jule::Str();
static jule::Str _23d049669_PATH_API = jule::Str();
static jule::Array<jule::U8,32> _23e648b02_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _23e648b02_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static _23d12cd35_FloatInfo _23d12cd35_F32_INFO = _23d12cd35_FloatInfo(23LLU,8LLU,-127LL);
static _23d12cd35_FloatInfo _23d12cd35_F64_INFO = _23d12cd35_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _23dd51c56_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _23d225b97_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _23d225b97_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _23d225b97_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _23de8c457_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_23e026524_LeftCheat> _23e026524_LEFTCHEATS = jule::Slice<_23e026524_LeftCheat>({_23e026524_LeftCheat(0LL,jule::Str()),_23e026524_LeftCheat(1LL,jule::Str("5", 1)),_23e026524_LeftCheat(1LL,jule::Str("25", 2)),_23e026524_LeftCheat(1LL,jule::Str("125", 3)),_23e026524_LeftCheat(2LL,jule::Str("625", 3)),_23e026524_LeftCheat(2LL,jule::Str("3125", 4)),_23e026524_LeftCheat(2LL,jule::Str("15625", 5)),_23e026524_LeftCheat(3LL,jule::Str("78125", 5)),_23e026524_LeftCheat(3LL,jule::Str("390625", 6)),_23e026524_LeftCheat(3LL,jule::Str("1953125", 7)),_23e026524_LeftCheat(4LL,jule::Str("9765625", 7)),_23e026524_LeftCheat(4LL,jule::Str("48828125", 8)),_23e026524_LeftCheat(4LL,jule::Str("244140625", 9)),_23e026524_LeftCheat(4LL,jule::Str("1220703125", 10)),_23e026524_LeftCheat(5LL,jule::Str("6103515625", 10)),_23e026524_LeftCheat(5LL,jule::Str("30517578125", 11)),_23e026524_LeftCheat(5LL,jule::Str("152587890625", 12)),_23e026524_LeftCheat(6LL,jule::Str("762939453125", 12)),_23e026524_LeftCheat(6LL,jule::Str("3814697265625", 13)),_23e026524_LeftCheat(6LL,jule::Str("19073486328125", 14)),_23e026524_LeftCheat(7LL,jule::Str("95367431640625", 14)),_23e026524_LeftCheat(7LL,jule::Str("476837158203125", 15)),_23e026524_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_23e026524_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_23e026524_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_23e026524_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_23e026524_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_23e026524_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_23e026524_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_23e026524_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_23e026524_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_23e026524_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_23e026524_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_23e026524_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_23e026524_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_23e026524_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_23e026524_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_23e026524_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_23e026524_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_23e026524_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_23e026524_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_23e026524_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_23e026524_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_23e026524_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_23e026524_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_23e026524_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_23e026524_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_23e026524_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_23e026524_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_23e026524_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_23e026524_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_23e026524_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_23e026524_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_23e026524_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_23e026524_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_23e026524_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_23e026524_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_23e026524_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_23e026524_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_23e026524_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_23e026524_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Bool _23d01979e_OPT_COPY = false;
static jule::Bool _23d01979e_OPT_DEADCODE = false;
static jule::Bool _23d01979e_OPT_APPEND = false;
static jule::Bool _23d01979e_OPT_MATH = false;
static jule::Bool _23d01979e_OPT_ACCESS = false;
static jule::Bool _23d01979e_OPT_INLINE = false;
static jule::Bool _23d01979e_OPT_PTR = false;
static jule::Ptr<_224dacb88_RangeTable> _23e9aa1e9__L = jule::new_struct<_224dacb88_RangeTable>(new( std::nothrow ) _224dacb88_RangeTable(jule::Slice<_224dacb88_Range16>({_224dacb88_Range16(65LLU,90LLU,1LLU),_224dacb88_Range16(97LLU,122LLU,1LLU),_224dacb88_Range16(170LLU,181LLU,11LLU),_224dacb88_Range16(186LLU,192LLU,6LLU),_224dacb88_Range16(193LLU,214LLU,1LLU),_224dacb88_Range16(216LLU,246LLU,1LLU),_224dacb88_Range16(248LLU,705LLU,1LLU),_224dacb88_Range16(710LLU,721LLU,1LLU),_224dacb88_Range16(736LLU,740LLU,1LLU),_224dacb88_Range16(748LLU,750LLU,2LLU),_224dacb88_Range16(880LLU,884LLU,1LLU),_224dacb88_Range16(886LLU,887LLU,1LLU),_224dacb88_Range16(890LLU,893LLU,1LLU),_224dacb88_Range16(895LLU,902LLU,7LLU),_224dacb88_Range16(904LLU,906LLU,1LLU),_224dacb88_Range16(908LLU,910LLU,2LLU),_224dacb88_Range16(911LLU,929LLU,1LLU),_224dacb88_Range16(931LLU,1013LLU,1LLU),_224dacb88_Range16(1015LLU,1153LLU,1LLU),_224dacb88_Range16(1162LLU,1327LLU,1LLU),_224dacb88_Range16(1329LLU,1366LLU,1LLU),_224dacb88_Range16(1369LLU,1376LLU,7LLU),_224dacb88_Range16(1377LLU,1416LLU,1LLU),_224dacb88_Range16(1488LLU,1514LLU,1LLU),_224dacb88_Range16(1519LLU,1522LLU,1LLU),_224dacb88_Range16(1568LLU,1610LLU,1LLU),_224dacb88_Range16(1646LLU,1647LLU,1LLU),_224dacb88_Range16(1649LLU,1747LLU,1LLU),_224dacb88_Range16(1749LLU,1765LLU,16LLU),_224dacb88_Range16(1766LLU,1774LLU,8LLU),_224dacb88_Range16(1775LLU,1786LLU,11LLU),_224dacb88_Range16(1787LLU,1788LLU,1LLU),_224dacb88_Range16(1791LLU,1808LLU,17LLU),_224dacb88_Range16(1810LLU,1839LLU,1LLU),_224dacb88_Range16(1869LLU,1957LLU,1LLU),_224dacb88_Range16(1969LLU,1994LLU,25LLU),_224dacb88_Range16(1995LLU,2026LLU,1LLU),_224dacb88_Range16(2036LLU,2037LLU,1LLU),_224dacb88_Range16(2042LLU,2048LLU,6LLU),_224dacb88_Range16(2049LLU,2069LLU,1LLU),_224dacb88_Range16(2074LLU,2084LLU,10LLU),_224dacb88_Range16(2088LLU,2112LLU,24LLU),_224dacb88_Range16(2113LLU,2136LLU,1LLU),_224dacb88_Range16(2144LLU,2154LLU,1LLU),_224dacb88_Range16(2160LLU,2183LLU,1LLU),_224dacb88_Range16(2185LLU,2190LLU,1LLU),_224dacb88_Range16(2208LLU,2249LLU,1LLU),_224dacb88_Range16(2308LLU,2361LLU,1LLU),_224dacb88_Range16(2365LLU,2384LLU,19LLU),_224dacb88_Range16(2392LLU,2401LLU,1LLU),_224dacb88_Range16(2417LLU,2432LLU,1LLU),_224dacb88_Range16(2437LLU,2444LLU,1LLU),_224dacb88_Range16(2447LLU,2448LLU,1LLU),_224dacb88_Range16(2451LLU,2472LLU,1LLU),_224dacb88_Range16(2474LLU,2480LLU,1LLU),_224dacb88_Range16(2482LLU,2486LLU,4LLU),_224dacb88_Range16(2487LLU,2489LLU,1LLU),_224dacb88_Range16(2493LLU,2510LLU,17LLU),_224dacb88_Range16(2524LLU,2525LLU,1LLU),_224dacb88_Range16(2527LLU,2529LLU,1LLU),_224dacb88_Range16(2544LLU,2545LLU,1LLU),_224dacb88_Range16(2556LLU,2565LLU,9LLU),_224dacb88_Range16(2566LLU,2570LLU,1LLU),_224dacb88_Range16(2575LLU,2576LLU,1LLU),_224dacb88_Range16(2579LLU,2600LLU,1LLU),_224dacb88_Range16(2602LLU,2608LLU,1LLU),_224dacb88_Range16(2610LLU,2611LLU,1LLU),_224dacb88_Range16(2613LLU,2614LLU,1LLU),_224dacb88_Range16(2616LLU,2617LLU,1LLU),_224dacb88_Range16(2649LLU,2652LLU,1LLU),_224dacb88_Range16(2654LLU,2674LLU,20LLU),_224dacb88_Range16(2675LLU,2676LLU,1LLU),_224dacb88_Range16(2693LLU,2701LLU,1LLU),_224dacb88_Range16(2703LLU,2705LLU,1LLU),_224dacb88_Range16(2707LLU,2728LLU,1LLU),_224dacb88_Range16(2730LLU,2736LLU,1LLU),_224dacb88_Range16(2738LLU,2739LLU,1LLU),_224dacb88_Range16(2741LLU,2745LLU,1LLU),_224dacb88_Range16(2749LLU,2768LLU,19LLU),_224dacb88_Range16(2784LLU,2785LLU,1LLU),_224dacb88_Range16(2809LLU,2821LLU,12LLU),_224dacb88_Range16(2822LLU,2828LLU,1LLU),_224dacb88_Range16(2831LLU,2832LLU,1LLU),_224dacb88_Range16(2835LLU,2856LLU,1LLU),_224dacb88_Range16(2858LLU,2864LLU,1LLU),_224dacb88_Range16(2866LLU,2867LLU,1LLU),_224dacb88_Range16(2869LLU,2873LLU,1LLU),_224dacb88_Range16(2877LLU,2908LLU,31LLU),_224dacb88_Range16(2909LLU,2911LLU,2LLU),_224dacb88_Range16(2912LLU,2913LLU,1LLU),_224dacb88_Range16(2929LLU,2947LLU,18LLU),_224dacb88_Range16(2949LLU,2954LLU,1LLU),_224dacb88_Range16(2958LLU,2960LLU,1LLU),_224dacb88_Range16(2962LLU,2965LLU,1LLU),_224dacb88_Range16(2969LLU,2970LLU,1LLU),_224dacb88_Range16(2972LLU,2974LLU,2LLU),_224dacb88_Range16(2975LLU,2979LLU,4LLU),_224dacb88_Range16(2980LLU,2984LLU,4LLU),_224dacb88_Range16(2985LLU,2986LLU,1LLU),_224dacb88_Range16(2990LLU,3001LLU,1LLU),_224dacb88_Range16(3024LLU,3077LLU,53LLU),_224dacb88_Range16(3078LLU,3084LLU,1LLU),_224dacb88_Range16(3086LLU,3088LLU,1LLU),_224dacb88_Range16(3090LLU,3112LLU,1LLU),_224dacb88_Range16(3114LLU,3129LLU,1LLU),_224dacb88_Range16(3133LLU,3160LLU,27LLU),_224dacb88_Range16(3161LLU,3162LLU,1LLU),_224dacb88_Range16(3165LLU,3168LLU,3LLU),_224dacb88_Range16(3169LLU,3200LLU,31LLU),_224dacb88_Range16(3205LLU,3212LLU,1LLU),_224dacb88_Range16(3214LLU,3216LLU,1LLU),_224dacb88_Range16(3218LLU,3240LLU,1LLU),_224dacb88_Range16(3242LLU,3251LLU,1LLU),_224dacb88_Range16(3253LLU,3257LLU,1LLU),_224dacb88_Range16(3261LLU,3293LLU,32LLU),_224dacb88_Range16(3294LLU,3296LLU,2LLU),_224dacb88_Range16(3297LLU,3313LLU,16LLU),_224dacb88_Range16(3314LLU,3332LLU,18LLU),_224dacb88_Range16(3333LLU,3340LLU,1LLU),_224dacb88_Range16(3342LLU,3344LLU,1LLU),_224dacb88_Range16(3346LLU,3386LLU,1LLU),_224dacb88_Range16(3389LLU,3406LLU,17LLU),_224dacb88_Range16(3412LLU,3414LLU,1LLU),_224dacb88_Range16(3423LLU,3425LLU,1LLU),_224dacb88_Range16(3450LLU,3455LLU,1LLU),_224dacb88_Range16(3461LLU,3478LLU,1LLU),_224dacb88_Range16(3482LLU,3505LLU,1LLU),_224dacb88_Range16(3507LLU,3515LLU,1LLU),_224dacb88_Range16(3517LLU,3520LLU,3LLU),_224dacb88_Range16(3521LLU,3526LLU,1LLU),_224dacb88_Range16(3585LLU,3632LLU,1LLU),_224dacb88_Range16(3634LLU,3635LLU,1LLU),_224dacb88_Range16(3648LLU,3654LLU,1LLU),_224dacb88_Range16(3713LLU,3714LLU,1LLU),_224dacb88_Range16(3716LLU,3718LLU,2LLU),_224dacb88_Range16(3719LLU,3722LLU,1LLU),_224dacb88_Range16(3724LLU,3747LLU,1LLU),_224dacb88_Range16(3749LLU,3751LLU,2LLU),_224dacb88_Range16(3752LLU,3760LLU,1LLU),_224dacb88_Range16(3762LLU,3763LLU,1LLU),_224dacb88_Range16(3773LLU,3776LLU,3LLU),_224dacb88_Range16(3777LLU,3780LLU,1LLU),_224dacb88_Range16(3782LLU,3804LLU,22LLU),_224dacb88_Range16(3805LLU,3807LLU,1LLU),_224dacb88_Range16(3840LLU,3904LLU,64LLU),_224dacb88_Range16(3905LLU,3911LLU,1LLU),_224dacb88_Range16(3913LLU,3948LLU,1LLU),_224dacb88_Range16(3976LLU,3980LLU,1LLU),_224dacb88_Range16(4096LLU,4138LLU,1LLU),_224dacb88_Range16(4159LLU,4176LLU,17LLU),_224dacb88_Range16(4177LLU,4181LLU,1LLU),_224dacb88_Range16(4186LLU,4189LLU,1LLU),_224dacb88_Range16(4193LLU,4197LLU,4LLU),_224dacb88_Range16(4198LLU,4206LLU,8LLU),_224dacb88_Range16(4207LLU,4208LLU,1LLU),_224dacb88_Range16(4213LLU,4225LLU,1LLU),_224dacb88_Range16(4238LLU,4256LLU,18LLU),_224dacb88_Range16(4257LLU,4293LLU,1LLU),_224dacb88_Range16(4295LLU,4301LLU,6LLU),_224dacb88_Range16(4304LLU,4346LLU,1LLU),_224dacb88_Range16(4348LLU,4680LLU,1LLU),_224dacb88_Range16(4682LLU,4685LLU,1LLU),_224dacb88_Range16(4688LLU,4694LLU,1LLU),_224dacb88_Range16(4696LLU,4698LLU,2LLU),_224dacb88_Range16(4699LLU,4701LLU,1LLU),_224dacb88_Range16(4704LLU,4744LLU,1LLU),_224dacb88_Range16(4746LLU,4749LLU,1LLU),_224dacb88_Range16(4752LLU,4784LLU,1LLU),_224dacb88_Range16(4786LLU,4789LLU,1LLU),_224dacb88_Range16(4792LLU,4798LLU,1LLU),_224dacb88_Range16(4800LLU,4802LLU,2LLU),_224dacb88_Range16(4803LLU,4805LLU,1LLU),_224dacb88_Range16(4808LLU,4822LLU,1LLU),_224dacb88_Range16(4824LLU,4880LLU,1LLU),_224dacb88_Range16(4882LLU,4885LLU,1LLU),_224dacb88_Range16(4888LLU,4954LLU,1LLU),_224dacb88_Range16(4992LLU,5007LLU,1LLU),_224dacb88_Range16(5024LLU,5109LLU,1LLU),_224dacb88_Range16(5112LLU,5117LLU,1LLU),_224dacb88_Range16(5121LLU,5740LLU,1LLU),_224dacb88_Range16(5743LLU,5759LLU,1LLU),_224dacb88_Range16(5761LLU,5786LLU,1LLU),_224dacb88_Range16(5792LLU,5866LLU,1LLU),_224dacb88_Range16(5873LLU,5880LLU,1LLU),_224dacb88_Range16(5888LLU,5905LLU,1LLU),_224dacb88_Range16(5919LLU,5937LLU,1LLU),_224dacb88_Range16(5952LLU,5969LLU,1LLU),_224dacb88_Range16(5984LLU,5996LLU,1LLU),_224dacb88_Range16(5998LLU,6000LLU,1LLU),_224dacb88_Range16(6016LLU,6067LLU,1LLU),_224dacb88_Range16(6103LLU,6108LLU,5LLU),_224dacb88_Range16(6176LLU,6264LLU,1LLU),_224dacb88_Range16(6272LLU,6276LLU,1LLU),_224dacb88_Range16(6279LLU,6312LLU,1LLU),_224dacb88_Range16(6314LLU,6320LLU,6LLU),_224dacb88_Range16(6321LLU,6389LLU,1LLU),_224dacb88_Range16(6400LLU,6430LLU,1LLU),_224dacb88_Range16(6480LLU,6509LLU,1LLU),_224dacb88_Range16(6512LLU,6516LLU,1LLU),_224dacb88_Range16(6528LLU,6571LLU,1LLU),_224dacb88_Range16(6576LLU,6601LLU,1LLU),_224dacb88_Range16(6656LLU,6678LLU,1LLU),_224dacb88_Range16(6688LLU,6740LLU,1LLU),_224dacb88_Range16(6823LLU,6917LLU,94LLU),_224dacb88_Range16(6918LLU,6963LLU,1LLU),_224dacb88_Range16(6981LLU,6988LLU,1LLU),_224dacb88_Range16(7043LLU,7072LLU,1LLU),_224dacb88_Range16(7086LLU,7087LLU,1LLU),_224dacb88_Range16(7098LLU,7141LLU,1LLU),_224dacb88_Range16(7168LLU,7203LLU,1LLU),_224dacb88_Range16(7245LLU,7247LLU,1LLU),_224dacb88_Range16(7258LLU,7293LLU,1LLU),_224dacb88_Range16(7296LLU,7304LLU,1LLU),_224dacb88_Range16(7312LLU,7354LLU,1LLU),_224dacb88_Range16(7357LLU,7359LLU,1LLU),_224dacb88_Range16(7401LLU,7404LLU,1LLU),_224dacb88_Range16(7406LLU,7411LLU,1LLU),_224dacb88_Range16(7413LLU,7414LLU,1LLU),_224dacb88_Range16(7418LLU,7424LLU,6LLU),_224dacb88_Range16(7425LLU,7615LLU,1LLU),_224dacb88_Range16(7680LLU,7957LLU,1LLU),_224dacb88_Range16(7960LLU,7965LLU,1LLU),_224dacb88_Range16(7968LLU,8005LLU,1LLU),_224dacb88_Range16(8008LLU,8013LLU,1LLU),_224dacb88_Range16(8016LLU,8023LLU,1LLU),_224dacb88_Range16(8025LLU,8031LLU,2LLU),_224dacb88_Range16(8032LLU,8061LLU,1LLU),_224dacb88_Range16(8064LLU,8116LLU,1LLU),_224dacb88_Range16(8118LLU,8124LLU,1LLU),_224dacb88_Range16(8126LLU,8130LLU,4LLU),_224dacb88_Range16(8131LLU,8132LLU,1LLU),_224dacb88_Range16(8134LLU,8140LLU,1LLU),_224dacb88_Range16(8144LLU,8147LLU,1LLU),_224dacb88_Range16(8150LLU,8155LLU,1LLU),_224dacb88_Range16(8160LLU,8172LLU,1LLU),_224dacb88_Range16(8178LLU,8180LLU,1LLU),_224dacb88_Range16(8182LLU,8188LLU,1LLU),_224dacb88_Range16(8305LLU,8319LLU,14LLU),_224dacb88_Range16(8336LLU,8348LLU,1LLU),_224dacb88_Range16(8450LLU,8455LLU,5LLU),_224dacb88_Range16(8458LLU,8467LLU,1LLU),_224dacb88_Range16(8469LLU,8473LLU,4LLU),_224dacb88_Range16(8474LLU,8477LLU,1LLU),_224dacb88_Range16(8484LLU,8490LLU,2LLU),_224dacb88_Range16(8491LLU,8493LLU,1LLU),_224dacb88_Range16(8495LLU,8505LLU,1LLU),_224dacb88_Range16(8508LLU,8511LLU,1LLU),_224dacb88_Range16(8517LLU,8521LLU,1LLU),_224dacb88_Range16(8526LLU,8579LLU,53LLU),_224dacb88_Range16(8580LLU,11264LLU,2684LLU),_224dacb88_Range16(11265LLU,11492LLU,1LLU),_224dacb88_Range16(11499LLU,11502LLU,1LLU),_224dacb88_Range16(11506LLU,11507LLU,1LLU),_224dacb88_Range16(11520LLU,11557LLU,1LLU),_224dacb88_Range16(11559LLU,11565LLU,6LLU),_224dacb88_Range16(11568LLU,11623LLU,1LLU),_224dacb88_Range16(11631LLU,11648LLU,17LLU),_224dacb88_Range16(11649LLU,11670LLU,1LLU),_224dacb88_Range16(11680LLU,11686LLU,1LLU),_224dacb88_Range16(11688LLU,11694LLU,1LLU),_224dacb88_Range16(11696LLU,11702LLU,1LLU),_224dacb88_Range16(11704LLU,11710LLU,1LLU),_224dacb88_Range16(11712LLU,11718LLU,1LLU),_224dacb88_Range16(11720LLU,11726LLU,1LLU),_224dacb88_Range16(11728LLU,11734LLU,1LLU),_224dacb88_Range16(11736LLU,11742LLU,1LLU),_224dacb88_Range16(11823LLU,12293LLU,470LLU),_224dacb88_Range16(12294LLU,12337LLU,43LLU),_224dacb88_Range16(12338LLU,12341LLU,1LLU),_224dacb88_Range16(12347LLU,12348LLU,1LLU),_224dacb88_Range16(12353LLU,12438LLU,1LLU),_224dacb88_Range16(12445LLU,12447LLU,1LLU),_224dacb88_Range16(12449LLU,12538LLU,1LLU),_224dacb88_Range16(12540LLU,12543LLU,1LLU),_224dacb88_Range16(12549LLU,12591LLU,1LLU),_224dacb88_Range16(12593LLU,12686LLU,1LLU),_224dacb88_Range16(12704LLU,12735LLU,1LLU),_224dacb88_Range16(12784LLU,12799LLU,1LLU),_224dacb88_Range16(13312LLU,19903LLU,1LLU),_224dacb88_Range16(19968LLU,42124LLU,1LLU),_224dacb88_Range16(42192LLU,42237LLU,1LLU),_224dacb88_Range16(42240LLU,42508LLU,1LLU),_224dacb88_Range16(42512LLU,42527LLU,1LLU),_224dacb88_Range16(42538LLU,42539LLU,1LLU),_224dacb88_Range16(42560LLU,42606LLU,1LLU),_224dacb88_Range16(42623LLU,42653LLU,1LLU),_224dacb88_Range16(42656LLU,42725LLU,1LLU),_224dacb88_Range16(42775LLU,42783LLU,1LLU),_224dacb88_Range16(42786LLU,42888LLU,1LLU),_224dacb88_Range16(42891LLU,42954LLU,1LLU),_224dacb88_Range16(42960LLU,42961LLU,1LLU),_224dacb88_Range16(42963LLU,42965LLU,2LLU),_224dacb88_Range16(42966LLU,42969LLU,1LLU),_224dacb88_Range16(42994LLU,43009LLU,1LLU),_224dacb88_Range16(43011LLU,43013LLU,1LLU),_224dacb88_Range16(43015LLU,43018LLU,1LLU),_224dacb88_Range16(43020LLU,43042LLU,1LLU),_224dacb88_Range16(43072LLU,43123LLU,1LLU),_224dacb88_Range16(43138LLU,43187LLU,1LLU),_224dacb88_Range16(43250LLU,43255LLU,1LLU),_224dacb88_Range16(43259LLU,43261LLU,2LLU),_224dacb88_Range16(43262LLU,43274LLU,12LLU),_224dacb88_Range16(43275LLU,43301LLU,1LLU),_224dacb88_Range16(43312LLU,43334LLU,1LLU),_224dacb88_Range16(43360LLU,43388LLU,1LLU),_224dacb88_Range16(43396LLU,43442LLU,1LLU),_224dacb88_Range16(43471LLU,43488LLU,17LLU),_224dacb88_Range16(43489LLU,43492LLU,1LLU),_224dacb88_Range16(43494LLU,43503LLU,1LLU),_224dacb88_Range16(43514LLU,43518LLU,1LLU),_224dacb88_Range16(43520LLU,43560LLU,1LLU),_224dacb88_Range16(43584LLU,43586LLU,1LLU),_224dacb88_Range16(43588LLU,43595LLU,1LLU),_224dacb88_Range16(43616LLU,43638LLU,1LLU),_224dacb88_Range16(43642LLU,43646LLU,4LLU),_224dacb88_Range16(43647LLU,43695LLU,1LLU),_224dacb88_Range16(43697LLU,43701LLU,4LLU),_224dacb88_Range16(43702LLU,43705LLU,3LLU),_224dacb88_Range16(43706LLU,43709LLU,1LLU),_224dacb88_Range16(43712LLU,43714LLU,2LLU),_224dacb88_Range16(43739LLU,43741LLU,1LLU),_224dacb88_Range16(43744LLU,43754LLU,1LLU),_224dacb88_Range16(43762LLU,43764LLU,1LLU),_224dacb88_Range16(43777LLU,43782LLU,1LLU),_224dacb88_Range16(43785LLU,43790LLU,1LLU),_224dacb88_Range16(43793LLU,43798LLU,1LLU),_224dacb88_Range16(43808LLU,43814LLU,1LLU),_224dacb88_Range16(43816LLU,43822LLU,1LLU),_224dacb88_Range16(43824LLU,43866LLU,1LLU),_224dacb88_Range16(43868LLU,43881LLU,1LLU),_224dacb88_Range16(43888LLU,44002LLU,1LLU),_224dacb88_Range16(44032LLU,55203LLU,1LLU),_224dacb88_Range16(55216LLU,55238LLU,1LLU),_224dacb88_Range16(55243LLU,55291LLU,1LLU),_224dacb88_Range16(63744LLU,64109LLU,1LLU),_224dacb88_Range16(64112LLU,64217LLU,1LLU),_224dacb88_Range16(64256LLU,64262LLU,1LLU),_224dacb88_Range16(64275LLU,64279LLU,1LLU),_224dacb88_Range16(64285LLU,64287LLU,2LLU),_224dacb88_Range16(64288LLU,64296LLU,1LLU),_224dacb88_Range16(64298LLU,64310LLU,1LLU),_224dacb88_Range16(64312LLU,64316LLU,1LLU),_224dacb88_Range16(64318LLU,64320LLU,2LLU),_224dacb88_Range16(64321LLU,64323LLU,2LLU),_224dacb88_Range16(64324LLU,64326LLU,2LLU),_224dacb88_Range16(64327LLU,64433LLU,1LLU),_224dacb88_Range16(64467LLU,64829LLU,1LLU),_224dacb88_Range16(64848LLU,64911LLU,1LLU),_224dacb88_Range16(64914LLU,64967LLU,1LLU),_224dacb88_Range16(65008LLU,65019LLU,1LLU),_224dacb88_Range16(65136LLU,65140LLU,1LLU),_224dacb88_Range16(65142LLU,65276LLU,1LLU),_224dacb88_Range16(65313LLU,65338LLU,1LLU),_224dacb88_Range16(65345LLU,65370LLU,1LLU),_224dacb88_Range16(65382LLU,65470LLU,1LLU),_224dacb88_Range16(65474LLU,65479LLU,1LLU),_224dacb88_Range16(65482LLU,65487LLU,1LLU),_224dacb88_Range16(65490LLU,65495LLU,1LLU),_224dacb88_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_224dacb88_Range32>({_224dacb88_Range32(65536LLU,65547LLU,1LLU),_224dacb88_Range32(65549LLU,65574LLU,1LLU),_224dacb88_Range32(65576LLU,65594LLU,1LLU),_224dacb88_Range32(65596LLU,65597LLU,1LLU),_224dacb88_Range32(65599LLU,65613LLU,1LLU),_224dacb88_Range32(65616LLU,65629LLU,1LLU),_224dacb88_Range32(65664LLU,65786LLU,1LLU),_224dacb88_Range32(66176LLU,66204LLU,1LLU),_224dacb88_Range32(66208LLU,66256LLU,1LLU),_224dacb88_Range32(66304LLU,66335LLU,1LLU),_224dacb88_Range32(66349LLU,66368LLU,1LLU),_224dacb88_Range32(66370LLU,66377LLU,1LLU),_224dacb88_Range32(66384LLU,66421LLU,1LLU),_224dacb88_Range32(66432LLU,66461LLU,1LLU),_224dacb88_Range32(66464LLU,66499LLU,1LLU),_224dacb88_Range32(66504LLU,66511LLU,1LLU),_224dacb88_Range32(66560LLU,66717LLU,1LLU),_224dacb88_Range32(66736LLU,66771LLU,1LLU),_224dacb88_Range32(66776LLU,66811LLU,1LLU),_224dacb88_Range32(66816LLU,66855LLU,1LLU),_224dacb88_Range32(66864LLU,66915LLU,1LLU),_224dacb88_Range32(66928LLU,66938LLU,1LLU),_224dacb88_Range32(66940LLU,66954LLU,1LLU),_224dacb88_Range32(66956LLU,66962LLU,1LLU),_224dacb88_Range32(66964LLU,66965LLU,1LLU),_224dacb88_Range32(66967LLU,66977LLU,1LLU),_224dacb88_Range32(66979LLU,66993LLU,1LLU),_224dacb88_Range32(66995LLU,67001LLU,1LLU),_224dacb88_Range32(67003LLU,67004LLU,1LLU),_224dacb88_Range32(67072LLU,67382LLU,1LLU),_224dacb88_Range32(67392LLU,67413LLU,1LLU),_224dacb88_Range32(67424LLU,67431LLU,1LLU),_224dacb88_Range32(67456LLU,67461LLU,1LLU),_224dacb88_Range32(67463LLU,67504LLU,1LLU),_224dacb88_Range32(67506LLU,67514LLU,1LLU),_224dacb88_Range32(67584LLU,67589LLU,1LLU),_224dacb88_Range32(67592LLU,67594LLU,2LLU),_224dacb88_Range32(67595LLU,67637LLU,1LLU),_224dacb88_Range32(67639LLU,67640LLU,1LLU),_224dacb88_Range32(67644LLU,67647LLU,3LLU),_224dacb88_Range32(67648LLU,67669LLU,1LLU),_224dacb88_Range32(67680LLU,67702LLU,1LLU),_224dacb88_Range32(67712LLU,67742LLU,1LLU),_224dacb88_Range32(67808LLU,67826LLU,1LLU),_224dacb88_Range32(67828LLU,67829LLU,1LLU),_224dacb88_Range32(67840LLU,67861LLU,1LLU),_224dacb88_Range32(67872LLU,67897LLU,1LLU),_224dacb88_Range32(67968LLU,68023LLU,1LLU),_224dacb88_Range32(68030LLU,68031LLU,1LLU),_224dacb88_Range32(68096LLU,68112LLU,16LLU),_224dacb88_Range32(68113LLU,68115LLU,1LLU),_224dacb88_Range32(68117LLU,68119LLU,1LLU),_224dacb88_Range32(68121LLU,68149LLU,1LLU),_224dacb88_Range32(68192LLU,68220LLU,1LLU),_224dacb88_Range32(68224LLU,68252LLU,1LLU),_224dacb88_Range32(68288LLU,68295LLU,1LLU),_224dacb88_Range32(68297LLU,68324LLU,1LLU),_224dacb88_Range32(68352LLU,68405LLU,1LLU),_224dacb88_Range32(68416LLU,68437LLU,1LLU),_224dacb88_Range32(68448LLU,68466LLU,1LLU),_224dacb88_Range32(68480LLU,68497LLU,1LLU),_224dacb88_Range32(68608LLU,68680LLU,1LLU),_224dacb88_Range32(68736LLU,68786LLU,1LLU),_224dacb88_Range32(68800LLU,68850LLU,1LLU),_224dacb88_Range32(68864LLU,68899LLU,1LLU),_224dacb88_Range32(69248LLU,69289LLU,1LLU),_224dacb88_Range32(69296LLU,69297LLU,1LLU),_224dacb88_Range32(69376LLU,69404LLU,1LLU),_224dacb88_Range32(69415LLU,69424LLU,9LLU),_224dacb88_Range32(69425LLU,69445LLU,1LLU),_224dacb88_Range32(69488LLU,69505LLU,1LLU),_224dacb88_Range32(69552LLU,69572LLU,1LLU),_224dacb88_Range32(69600LLU,69622LLU,1LLU),_224dacb88_Range32(69635LLU,69687LLU,1LLU),_224dacb88_Range32(69745LLU,69746LLU,1LLU),_224dacb88_Range32(69749LLU,69763LLU,14LLU),_224dacb88_Range32(69764LLU,69807LLU,1LLU),_224dacb88_Range32(69840LLU,69864LLU,1LLU),_224dacb88_Range32(69891LLU,69926LLU,1LLU),_224dacb88_Range32(69956LLU,69959LLU,3LLU),_224dacb88_Range32(69968LLU,70002LLU,1LLU),_224dacb88_Range32(70006LLU,70019LLU,13LLU),_224dacb88_Range32(70020LLU,70066LLU,1LLU),_224dacb88_Range32(70081LLU,70084LLU,1LLU),_224dacb88_Range32(70106LLU,70108LLU,2LLU),_224dacb88_Range32(70144LLU,70161LLU,1LLU),_224dacb88_Range32(70163LLU,70187LLU,1LLU),_224dacb88_Range32(70207LLU,70208LLU,1LLU),_224dacb88_Range32(70272LLU,70278LLU,1LLU),_224dacb88_Range32(70280LLU,70282LLU,2LLU),_224dacb88_Range32(70283LLU,70285LLU,1LLU),_224dacb88_Range32(70287LLU,70301LLU,1LLU),_224dacb88_Range32(70303LLU,70312LLU,1LLU),_224dacb88_Range32(70320LLU,70366LLU,1LLU),_224dacb88_Range32(70405LLU,70412LLU,1LLU),_224dacb88_Range32(70415LLU,70416LLU,1LLU),_224dacb88_Range32(70419LLU,70440LLU,1LLU),_224dacb88_Range32(70442LLU,70448LLU,1LLU),_224dacb88_Range32(70450LLU,70451LLU,1LLU),_224dacb88_Range32(70453LLU,70457LLU,1LLU),_224dacb88_Range32(70461LLU,70480LLU,19LLU),_224dacb88_Range32(70493LLU,70497LLU,1LLU),_224dacb88_Range32(70656LLU,70708LLU,1LLU),_224dacb88_Range32(70727LLU,70730LLU,1LLU),_224dacb88_Range32(70751LLU,70753LLU,1LLU),_224dacb88_Range32(70784LLU,70831LLU,1LLU),_224dacb88_Range32(70852LLU,70853LLU,1LLU),_224dacb88_Range32(70855LLU,71040LLU,185LLU),_224dacb88_Range32(71041LLU,71086LLU,1LLU),_224dacb88_Range32(71128LLU,71131LLU,1LLU),_224dacb88_Range32(71168LLU,71215LLU,1LLU),_224dacb88_Range32(71236LLU,71296LLU,60LLU),_224dacb88_Range32(71297LLU,71338LLU,1LLU),_224dacb88_Range32(71352LLU,71424LLU,72LLU),_224dacb88_Range32(71425LLU,71450LLU,1LLU),_224dacb88_Range32(71488LLU,71494LLU,1LLU),_224dacb88_Range32(71680LLU,71723LLU,1LLU),_224dacb88_Range32(71840LLU,71903LLU,1LLU),_224dacb88_Range32(71935LLU,71942LLU,1LLU),_224dacb88_Range32(71945LLU,71948LLU,3LLU),_224dacb88_Range32(71949LLU,71955LLU,1LLU),_224dacb88_Range32(71957LLU,71958LLU,1LLU),_224dacb88_Range32(71960LLU,71983LLU,1LLU),_224dacb88_Range32(71999LLU,72001LLU,2LLU),_224dacb88_Range32(72096LLU,72103LLU,1LLU),_224dacb88_Range32(72106LLU,72144LLU,1LLU),_224dacb88_Range32(72161LLU,72163LLU,2LLU),_224dacb88_Range32(72192LLU,72203LLU,11LLU),_224dacb88_Range32(72204LLU,72242LLU,1LLU),_224dacb88_Range32(72250LLU,72272LLU,22LLU),_224dacb88_Range32(72284LLU,72329LLU,1LLU),_224dacb88_Range32(72349LLU,72368LLU,19LLU),_224dacb88_Range32(72369LLU,72440LLU,1LLU),_224dacb88_Range32(72704LLU,72712LLU,1LLU),_224dacb88_Range32(72714LLU,72750LLU,1LLU),_224dacb88_Range32(72768LLU,72818LLU,50LLU),_224dacb88_Range32(72819LLU,72847LLU,1LLU),_224dacb88_Range32(72960LLU,72966LLU,1LLU),_224dacb88_Range32(72968LLU,72969LLU,1LLU),_224dacb88_Range32(72971LLU,73008LLU,1LLU),_224dacb88_Range32(73030LLU,73056LLU,26LLU),_224dacb88_Range32(73057LLU,73061LLU,1LLU),_224dacb88_Range32(73063LLU,73064LLU,1LLU),_224dacb88_Range32(73066LLU,73097LLU,1LLU),_224dacb88_Range32(73112LLU,73440LLU,328LLU),_224dacb88_Range32(73441LLU,73458LLU,1LLU),_224dacb88_Range32(73474LLU,73476LLU,2LLU),_224dacb88_Range32(73477LLU,73488LLU,1LLU),_224dacb88_Range32(73490LLU,73523LLU,1LLU),_224dacb88_Range32(73648LLU,73728LLU,80LLU),_224dacb88_Range32(73729LLU,74649LLU,1LLU),_224dacb88_Range32(74880LLU,75075LLU,1LLU),_224dacb88_Range32(77712LLU,77808LLU,1LLU),_224dacb88_Range32(77824LLU,78895LLU,1LLU),_224dacb88_Range32(78913LLU,78918LLU,1LLU),_224dacb88_Range32(82944LLU,83526LLU,1LLU),_224dacb88_Range32(92160LLU,92728LLU,1LLU),_224dacb88_Range32(92736LLU,92766LLU,1LLU),_224dacb88_Range32(92784LLU,92862LLU,1LLU),_224dacb88_Range32(92880LLU,92909LLU,1LLU),_224dacb88_Range32(92928LLU,92975LLU,1LLU),_224dacb88_Range32(92992LLU,92995LLU,1LLU),_224dacb88_Range32(93027LLU,93047LLU,1LLU),_224dacb88_Range32(93053LLU,93071LLU,1LLU),_224dacb88_Range32(93760LLU,93823LLU,1LLU),_224dacb88_Range32(93952LLU,94026LLU,1LLU),_224dacb88_Range32(94032LLU,94099LLU,67LLU),_224dacb88_Range32(94100LLU,94111LLU,1LLU),_224dacb88_Range32(94176LLU,94177LLU,1LLU),_224dacb88_Range32(94179LLU,94208LLU,29LLU),_224dacb88_Range32(94209LLU,100343LLU,1LLU),_224dacb88_Range32(100352LLU,101589LLU,1LLU),_224dacb88_Range32(101632LLU,101640LLU,1LLU),_224dacb88_Range32(110576LLU,110579LLU,1LLU),_224dacb88_Range32(110581LLU,110587LLU,1LLU),_224dacb88_Range32(110589LLU,110590LLU,1LLU),_224dacb88_Range32(110592LLU,110882LLU,1LLU),_224dacb88_Range32(110898LLU,110928LLU,30LLU),_224dacb88_Range32(110929LLU,110930LLU,1LLU),_224dacb88_Range32(110933LLU,110948LLU,15LLU),_224dacb88_Range32(110949LLU,110951LLU,1LLU),_224dacb88_Range32(110960LLU,111355LLU,1LLU),_224dacb88_Range32(113664LLU,113770LLU,1LLU),_224dacb88_Range32(113776LLU,113788LLU,1LLU),_224dacb88_Range32(113792LLU,113800LLU,1LLU),_224dacb88_Range32(113808LLU,113817LLU,1LLU),_224dacb88_Range32(119808LLU,119892LLU,1LLU),_224dacb88_Range32(119894LLU,119964LLU,1LLU),_224dacb88_Range32(119966LLU,119967LLU,1LLU),_224dacb88_Range32(119970LLU,119973LLU,3LLU),_224dacb88_Range32(119974LLU,119977LLU,3LLU),_224dacb88_Range32(119978LLU,119980LLU,1LLU),_224dacb88_Range32(119982LLU,119993LLU,1LLU),_224dacb88_Range32(119995LLU,119997LLU,2LLU),_224dacb88_Range32(119998LLU,120003LLU,1LLU),_224dacb88_Range32(120005LLU,120069LLU,1LLU),_224dacb88_Range32(120071LLU,120074LLU,1LLU),_224dacb88_Range32(120077LLU,120084LLU,1LLU),_224dacb88_Range32(120086LLU,120092LLU,1LLU),_224dacb88_Range32(120094LLU,120121LLU,1LLU),_224dacb88_Range32(120123LLU,120126LLU,1LLU),_224dacb88_Range32(120128LLU,120132LLU,1LLU),_224dacb88_Range32(120134LLU,120138LLU,4LLU),_224dacb88_Range32(120139LLU,120144LLU,1LLU),_224dacb88_Range32(120146LLU,120485LLU,1LLU),_224dacb88_Range32(120488LLU,120512LLU,1LLU),_224dacb88_Range32(120514LLU,120538LLU,1LLU),_224dacb88_Range32(120540LLU,120570LLU,1LLU),_224dacb88_Range32(120572LLU,120596LLU,1LLU),_224dacb88_Range32(120598LLU,120628LLU,1LLU),_224dacb88_Range32(120630LLU,120654LLU,1LLU),_224dacb88_Range32(120656LLU,120686LLU,1LLU),_224dacb88_Range32(120688LLU,120712LLU,1LLU),_224dacb88_Range32(120714LLU,120744LLU,1LLU),_224dacb88_Range32(120746LLU,120770LLU,1LLU),_224dacb88_Range32(120772LLU,120779LLU,1LLU),_224dacb88_Range32(122624LLU,122654LLU,1LLU),_224dacb88_Range32(122661LLU,122666LLU,1LLU),_224dacb88_Range32(122928LLU,122989LLU,1LLU),_224dacb88_Range32(123136LLU,123180LLU,1LLU),_224dacb88_Range32(123191LLU,123197LLU,1LLU),_224dacb88_Range32(123214LLU,123536LLU,322LLU),_224dacb88_Range32(123537LLU,123565LLU,1LLU),_224dacb88_Range32(123584LLU,123627LLU,1LLU),_224dacb88_Range32(124112LLU,124139LLU,1LLU),_224dacb88_Range32(124896LLU,124902LLU,1LLU),_224dacb88_Range32(124904LLU,124907LLU,1LLU),_224dacb88_Range32(124909LLU,124910LLU,1LLU),_224dacb88_Range32(124912LLU,124926LLU,1LLU),_224dacb88_Range32(124928LLU,125124LLU,1LLU),_224dacb88_Range32(125184LLU,125251LLU,1LLU),_224dacb88_Range32(125259LLU,126464LLU,1205LLU),_224dacb88_Range32(126465LLU,126467LLU,1LLU),_224dacb88_Range32(126469LLU,126495LLU,1LLU),_224dacb88_Range32(126497LLU,126498LLU,1LLU),_224dacb88_Range32(126500LLU,126503LLU,3LLU),_224dacb88_Range32(126505LLU,126514LLU,1LLU),_224dacb88_Range32(126516LLU,126519LLU,1LLU),_224dacb88_Range32(126521LLU,126523LLU,2LLU),_224dacb88_Range32(126530LLU,126535LLU,5LLU),_224dacb88_Range32(126537LLU,126541LLU,2LLU),_224dacb88_Range32(126542LLU,126543LLU,1LLU),_224dacb88_Range32(126545LLU,126546LLU,1LLU),_224dacb88_Range32(126548LLU,126551LLU,3LLU),_224dacb88_Range32(126553LLU,126561LLU,2LLU),_224dacb88_Range32(126562LLU,126564LLU,2LLU),_224dacb88_Range32(126567LLU,126570LLU,1LLU),_224dacb88_Range32(126572LLU,126578LLU,1LLU),_224dacb88_Range32(126580LLU,126583LLU,1LLU),_224dacb88_Range32(126585LLU,126588LLU,1LLU),_224dacb88_Range32(126590LLU,126592LLU,2LLU),_224dacb88_Range32(126593LLU,126601LLU,1LLU),_224dacb88_Range32(126603LLU,126619LLU,1LLU),_224dacb88_Range32(126625LLU,126627LLU,1LLU),_224dacb88_Range32(126629LLU,126633LLU,1LLU),_224dacb88_Range32(126635LLU,126651LLU,1LLU),_224dacb88_Range32(131072LLU,173791LLU,1LLU),_224dacb88_Range32(173824LLU,177977LLU,1LLU),_224dacb88_Range32(177984LLU,178205LLU,1LLU),_224dacb88_Range32(178208LLU,183969LLU,1LLU),_224dacb88_Range32(183984LLU,191456LLU,1LLU),_224dacb88_Range32(194560LLU,195101LLU,1LLU),_224dacb88_Range32(196608LLU,201546LLU,1LLU),_224dacb88_Range32(201552LLU,205743LLU,1LLU)}),6LL));
static jule::Array<jule::I32,5> _23e730c0b_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _23e730c0b_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,12> _23e730c0b_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _23e730c0b_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _23e730c0b_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_23e45a13e_KindPair,47> _23e45a13e_KEYWORDS = jule::Array<_23e45a13e_KindPair,47>({_23e45a13e_KindPair(jule::Str("i8", 2),1LLU),_23e45a13e_KindPair(jule::Str("i16", 3),1LLU),_23e45a13e_KindPair(jule::Str("i32", 3),1LLU),_23e45a13e_KindPair(jule::Str("i64", 3),1LLU),_23e45a13e_KindPair(jule::Str("u8", 2),1LLU),_23e45a13e_KindPair(jule::Str("u16", 3),1LLU),_23e45a13e_KindPair(jule::Str("u32", 3),1LLU),_23e45a13e_KindPair(jule::Str("u64", 3),1LLU),_23e45a13e_KindPair(jule::Str("f32", 3),1LLU),_23e45a13e_KindPair(jule::Str("f64", 3),1LLU),_23e45a13e_KindPair(jule::Str("uint", 4),1LLU),_23e45a13e_KindPair(jule::Str("int", 3),1LLU),_23e45a13e_KindPair(jule::Str("uintptr", 7),1LLU),_23e45a13e_KindPair(jule::Str("bool", 4),1LLU),_23e45a13e_KindPair(jule::Str("str", 3),1LLU),_23e45a13e_KindPair(jule::Str("any", 3),1LLU),_23e45a13e_KindPair(jule::Str("true", 4),6LLU),_23e45a13e_KindPair(jule::Str("false", 5),6LLU),_23e45a13e_KindPair(jule::Str("nil", 3),6LLU),_23e45a13e_KindPair(jule::Str("const", 5),9LLU),_23e45a13e_KindPair(jule::Str("ret", 3),4LLU),_23e45a13e_KindPair(jule::Str("type", 4),10LLU),_23e45a13e_KindPair(jule::Str("for", 3),12LLU),_23e45a13e_KindPair(jule::Str("break", 5),13LLU),_23e45a13e_KindPair(jule::Str("continue", 8),14LLU),_23e45a13e_KindPair(jule::Str("in", 2),15LLU),_23e45a13e_KindPair(jule::Str("if", 2),16LLU),_23e45a13e_KindPair(jule::Str("else", 4),17LLU),_23e45a13e_KindPair(jule::Str("use", 3),19LLU),_23e45a13e_KindPair(jule::Str("pub", 3),21LLU),_23e45a13e_KindPair(jule::Str("goto", 4),22LLU),_23e45a13e_KindPair(jule::Str("enum", 4),24LLU),_23e45a13e_KindPair(jule::Str("struct", 6),25LLU),_23e45a13e_KindPair(jule::Str("co", 2),26LLU),_23e45a13e_KindPair(jule::Str("match", 5),27LLU),_23e45a13e_KindPair(jule::Str("self", 4),28LLU),_23e45a13e_KindPair(jule::Str("trait", 5),29LLU),_23e45a13e_KindPair(jule::Str("impl", 4),30LLU),_23e45a13e_KindPair(jule::Str("cpp", 3),31LLU),_23e45a13e_KindPair(jule::Str("fall", 4),32LLU),_23e45a13e_KindPair(jule::Str("fn", 2),33LLU),_23e45a13e_KindPair(jule::Str("let", 3),34LLU),_23e45a13e_KindPair(jule::Str("unsafe", 6),35LLU),_23e45a13e_KindPair(jule::Str("mut", 3),36LLU),_23e45a13e_KindPair(jule::Str("defer", 5),37LLU),_23e45a13e_KindPair(jule::Str("static", 6),38LLU),_23e45a13e_KindPair(jule::Str("error", 5),40LLU)});
static jule::Array<_23e45a13e_KindPair,39> _23e45a13e_BASIC_OPS = jule::Array<_23e45a13e_KindPair,39>({_23e45a13e_KindPair(jule::Str("::", 2),23LLU),_23e45a13e_KindPair(jule::Str(":", 1),11LLU),_23e45a13e_KindPair(jule::Str(";", 1),5LLU),_23e45a13e_KindPair(jule::Str(",", 1),8LLU),_23e45a13e_KindPair(jule::Str("...", 3),7LLU),_23e45a13e_KindPair(jule::Str(".", 1),20LLU),_23e45a13e_KindPair(jule::Str("+=", 2),7LLU),_23e45a13e_KindPair(jule::Str("-=", 2),7LLU),_23e45a13e_KindPair(jule::Str("*=", 2),7LLU),_23e45a13e_KindPair(jule::Str("/=", 2),7LLU),_23e45a13e_KindPair(jule::Str("%=", 2),7LLU),_23e45a13e_KindPair(jule::Str("<<=", 3),7LLU),_23e45a13e_KindPair(jule::Str(">>=", 3),7LLU),_23e45a13e_KindPair(jule::Str("^=", 2),7LLU),_23e45a13e_KindPair(jule::Str("&=", 2),7LLU),_23e45a13e_KindPair(jule::Str("|=", 2),7LLU),_23e45a13e_KindPair(jule::Str("==", 2),7LLU),_23e45a13e_KindPair(jule::Str("!=", 2),7LLU),_23e45a13e_KindPair(jule::Str(">=", 2),7LLU),_23e45a13e_KindPair(jule::Str("<=", 2),7LLU),_23e45a13e_KindPair(jule::Str("&&", 2),7LLU),_23e45a13e_KindPair(jule::Str("||", 2),7LLU),_23e45a13e_KindPair(jule::Str("<<", 2),7LLU),_23e45a13e_KindPair(jule::Str(">>", 2),7LLU),_23e45a13e_KindPair(jule::Str("++", 2),7LLU),_23e45a13e_KindPair(jule::Str("--", 2),7LLU),_23e45a13e_KindPair(jule::Str("+", 1),7LLU),_23e45a13e_KindPair(jule::Str("-", 1),7LLU),_23e45a13e_KindPair(jule::Str("*", 1),7LLU),_23e45a13e_KindPair(jule::Str("/", 1),7LLU),_23e45a13e_KindPair(jule::Str("%", 1),7LLU),_23e45a13e_KindPair(jule::Str("&", 1),7LLU),_23e45a13e_KindPair(jule::Str("|", 1),7LLU),_23e45a13e_KindPair(jule::Str("^", 1),7LLU),_23e45a13e_KindPair(jule::Str("!", 1),7LLU),_23e45a13e_KindPair(jule::Str("<", 1),7LLU),_23e45a13e_KindPair(jule::Str(">", 1),7LLU),_23e45a13e_KindPair(jule::Str("=", 1),7LLU),_23e45a13e_KindPair(jule::Str("#", 1),39LLU)});
static jule::Ptr<_2252d6a73_FnIns> _22602dc1a_BUILTIN_FN_OUT = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns());
static jule::Ptr<_2252d6a73_FnIns> _22602dc1a_BUILTIN_FN_OUTLN = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns());
static jule::Ptr<_2252d6a73_FnIns> _22602dc1a_BUILTIN_FN_NEW = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns());
static jule::Ptr<_2252d6a73_FnIns> _22602dc1a_BUILTIN_FN_PANIC = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns());
static jule::Ptr<_2252d6a73_FnIns> _22602dc1a_BUILTIN_FN_MAKE = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns());
static jule::Ptr<_2252d6a73_FnIns> _22602dc1a_BUILTIN_FN_APPEND = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns());
static jule::Ptr<_2252d6a73_FnIns> _22602dc1a_BUILTIN_FN_CLONE = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns());
static jule::Ptr<_2252d6a73_FnIns> _22602dc1a_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns());
static jule::Ptr<_2252d6a73_FnIns> _22602dc1a_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns());
static jule::Ptr<_2252d6a73_FnIns> _22602dc1a_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns());
static jule::Ptr<_2252d6a73_FnIns> _22602dc1a_BUILTIN_FN_COPY = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>(),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ptr<_23e2b5818_TypeAlias> _22602dc1a_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_23e2b5818_TypeAlias>(new( std::nothrow ) _23e2b5818_TypeAlias(jule::Ptr<_23e45734a_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_23e730c0b_Token(),jule::Str(),jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ptr<_23e2b5818_TypeAlias> _22602dc1a_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_23e2b5818_TypeAlias>(new( std::nothrow ) _23e2b5818_TypeAlias(jule::Ptr<_23e45734a_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_23e730c0b_Token(),jule::Str(),jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ptr<_2255ab70a_Trait> _22602dc1a_BUILTIN_TRAIT_DISPOSE = jule::new_struct_ptr<_2255ab70a_Trait>(new( std::nothrow ) _2255ab70a_Trait(_23e730c0b_Token(),jule::Str("Dispose", 7),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_2252d6a73_Fn>>({jule::new_struct_ptr<_2252d6a73_Fn>(new( std::nothrow ) _2252d6a73_Fn(jule::Ptr<_22579574b_Sema>(),_23e730c0b_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Str("dispose", 7),jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Str(),jule::Ptr<_23e45734a_ScopeTree>(),jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>(),jule::Ptr<_2252d6a73_RetType>(),jule::Slice<jule::Ptr<_2252d6a73_Param>>({jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ptr<_225036509_Struct>(),jule::Slice<jule::Ptr<_2252d6a73_FnIns>>()))}),jule::Slice<jule::Ptr<_225036509_Struct>>()));
static jule::Slice<jule::Str> _23e1c54b4_FLAGS = nullptr;
static jule::Slice<jule::Any> _23d019073_deads = nullptr;
static jule::Slice<jule::Any> _23d019073_checking = nullptr;
static jule::Any _23d019073_current = jule::Any(nullptr);
static jule::Any _23d019073_main_current = jule::Any(nullptr);
static jule::Array<jule::Int,12> _226630371_MDAYS = jule::Array<jule::Int,12>({31LL,30LL,31LL,30LL,31LL,31LL,30LL,31LL,30LL,31LL,31LL,29LL});
static jule::Slice<jule::U8> _2264c2c91_INDENT = nullptr;
static jule::Str _23d0184a1_ARCH = jule::Str("arm64", 5);
static jule::Array<jule::Array<jule::Str,2>,4> _23ce7c756_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});
static jule::Str _23d0184a1_OS = jule::Str("darwin", 6);
static jule::Ptr<_224dacb88_RangeTable> _23e9aa1e9_LETTER = _23e9aa1e9__L;
static jule::Array<_23e9950d5_accept_range,16> _23e9950d5_ACCEPT_RANGES = jule::Array<_23e9950d5_accept_range,16>({_23e9950d5_accept_range(128LLU,191LLU),_23e9950d5_accept_range(160LLU,191LLU),_23e9950d5_accept_range(128LLU,159LLU),_23e9950d5_accept_range(144LLU,191LLU),_23e9950d5_accept_range(128LLU,143LLU)});
static jule::Array<jule::U8,256> _23e9950d5_FIRST = jule::Array<jule::U8,256>({});
static jule::Array<jule::U8,256> _23e9aa1e9__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});

inline void _23ce97bb1_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void _23ce97bb1_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_23ce97bb1_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _23ce97bb1_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void _23ce97bb1_Logger::_static_method_log_flat(_23ceb0c1d_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



inline void _23ce97bb1_Logger::_static_method_log_error(_23ceb0c1d_Log& _3426_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_3426_l._field_text);
	_23ce97bb1_AnsiEscape::_static_method_reset();
	if (_3426_l._field_path.len() != 0LL) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_3426_l._field_path);
	}
	if ((_3426_l._field_row != 0LL) && (_3426_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_23e028108_itoa(_3426_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_23e028108_itoa(_3426_l._field_column));
	}
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _5121_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _5221_offset = (_3426_l._field_line.len() - _5121_line.len()) + 1LL;
		jule::I64 _5321_old_len = _5121_line.len();
		_5121_line=_5121_line.ltrim(jule::Str("\t", 1));
		if (_5321_old_len != _5121_line.len()) {
			_5221_offset+=static_cast<jule::I64>((_5321_old_len - _5121_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _5917_row = _23e028108_itoa(_3426_l._field_row);
		jule::out(_5917_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_5121_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_23ce7c756_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_23ce7c756_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _5221_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_23ce7c756_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
			jule::out(jule::Str(" | ", 3));
			_23ce97bb1_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_3426_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void _23ce97bb1_Logger::_static_method_log(_23ceb0c1d_Log& _8020_l) {
	{
		auto &_match_expr{ _8020_l._field_kind };
		if (_match_expr == 0LLU) {
			_case_begin_5563572320:;
			{
				_23ce97bb1_Logger::_static_method_log_flat(_8020_l);
			}
		}
		else if (_match_expr == 1LLU) {
			_case_begin_5563572416:;
			{
				_23ce97bb1_Logger::_static_method_log_error(_8020_l);
			}
		}
		_match_end_5563572192:;
	}
}



inline void _23ce97bb1_Logger::_static_method_print_logs(jule::Slice<_23ceb0c1d_Log>& _8827_logs) {
	{
		auto &expr = _8827_logs;
		auto it = expr.begin();
		_iter_begin_5563576320:;
		if (it != expr.end()) {
			_23ceb0c1d_Log &_23ce97bb1_l = *it;
			{
				_23ce97bb1_Logger::_static_method_log(_23ce97bb1_l);
			}
			_iter_next_5563576320:;
			++it;
			goto _iter_begin_5563576320;
		}
		_iter_end_5563576320:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_23e028108_itoa(static_cast<jule::I64>(_8827_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _23ce97bb1_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _23d08e2c4_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[_5324_i];
	}
	return (*this)._field_path[_5324_i];
}



inline void _23d08e2c4_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[(*this)._field_w] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*this)._field_path.len()));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,(*this)._field_w)));
	}
	(*this)._field_buff[(*this)._field_w]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _23d08e2c4_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len + (*this)._field_w);
	}
	return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,(*this)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, const _23d08e2c4_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23ceb0c1d_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23d12cd35_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23d12cd35_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e026524_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e026524_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (_22922_s[_23017_i] == '+') {
			_case_begin_5544970320:;
			{
				(_23017_i)++;
			}
		}
		else if (_22922_s[_23017_i] == '-') {
			_case_begin_5544970416:;
			{
				(*this)._field_neg=true;
				(_23017_i)++;
			}
		}
		_match_end_5544969552:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	for (; _23017_i < _22922_s.len(); (_23017_i)++) {
		{
			{
				if (_22922_s[_23017_i] == '.') {
					_case_begin_5544976512:;
					{
						if (_24717_sawdot) {
							return _22932_ok;
						}
						_24717_sawdot=true;
						(*this)._field_dp=(*this)._field_nd;
						goto _iter_next_5544974656;
					}
				}
				else if (('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')) {
					_case_begin_5544976624:;
					{
						_24817_sawdigits=true;
						if ((_22922_s[_23017_i] == '0') && ((*this)._field_nd == 0LL)) {
							((*this)._field_dp)--;
							goto _iter_next_5544974656;
						}
						if ((*this)._field_nd < 800LL) {
							(*this)._field_d[(*this)._field_nd]=_22922_s[_23017_i];
							((*this)._field_nd)++;
						} else if (_22922_s[_23017_i] != '0') {
							(*this)._field_trunc=true;
						}
						goto _iter_next_5544974656;
					}
				}
				_match_end_5544976288:;
			}
			goto _iter_end_5544974656;
		}
	_iter_next_5544974656:;
	}
	_iter_end_5544974656:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_23d01eb8e_lower(_22922_s[_23017_i]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[_23017_i] == '+') {
			(_23017_i)++;
		} else if (_22922_s[_23017_i] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[_23017_i] < '0')) || (_22922_s[_23017_i] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		for (; (_23017_i < _22922_s.len()) && (('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')); (_23017_i)++) {
			{
				if (_30121_e < 10000LL) {
					_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[_23017_i])) - '0');
				}
			}
		_iter_next_5544991344:;
		}
		_iter_end_5544991344:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _23e026524_Decimal::_method_float_bits(_23d12cd35_FloatInfo& _31830_flt) {
	jule::U64 _31848_b = jule::U64();
	jule::Bool _31856_overflow = jule::Bool();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	while ((*this)._field_dp > 0LL) {
		{
			jule::Int _34521_n = 0LL;
			if ((*this)._field_dp >= _23d225b97_POWTAB.len()) {
				_34521_n=27LL;
			} else {
				_34521_n=_23d225b97_POWTAB[(*this)._field_dp];
			}
			(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
			_31917_exp+=_34521_n;
		}
	_iter_next_5545007840:;
	}
	_iter_end_5545007840:;
	while (((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d.__at(0LL) < '5'))) {
		{
			jule::Int _35521_n = 0LL;
			if ((-((*this)._field_dp)) >= _23d225b97_POWTAB.len()) {
				_35521_n=27LL;
			} else {
				_35521_n=_23d225b97_POWTAB[(-((*this)._field_dp))];
			}
			(*this)._method_shift(_35521_n);
			_31917_exp-=_35521_n;
		}
	_iter_next_5545010704:;
	}
	_iter_end_5545010704:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _23e026524_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>();
	jule::Int _15617_n = 0LL;
	while (_15229_v > 0LL) {
		{
			jule::U64 _15817_v1 = jule::unsafe_div(_15229_v,10LL);
			_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
			_15317_buf[_15617_n]=static_cast<jule::U8>(_15229_v + '0');
			(_15617_n)++;
			_15229_v=_15817_v1;
		}
	_iter_next_5545040176:;
	}
	_iter_end_5545040176:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	for (; _15617_n >= 0LL; (_15617_n)--) {
		{
			(*this)._field_d[(*this)._field_nd]=_15317_buf[_15617_n];
			((*this)._field_nd)++;
		}
	_iter_next_5545044032:;
	}
	_iter_end_5545044032:;
	(*this)._field_dp=(*this)._field_nd;
	_23e026524_trim((*this));
}



inline void _23e026524_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if ((*this)._field_nd == 0LL) {
			_case_begin_5545047776:;
		}
		else if (_17728_k > 0LL) {
			_case_begin_5545047888:;
			{
				while (_17728_k > 60LLU) {
					{
						_23e026524_left_shift((*this),60LLU);
						_17728_k-=60LLU;
					}
				_iter_next_5545048720:;
				}
				_iter_end_5545048720:;
				_23e026524_left_shift((*this),static_cast<jule::Uint>(_17728_k));
			}
		}
		else if (_17728_k < 0LL) {
			_case_begin_5545048000:;
			{
				while (_17728_k < -60LL) {
					{
						_23e026524_right_shift((*this),60LLU);
						_17728_k+=60LLU;
					}
				_iter_next_5545051984:;
				}
				_iter_end_5545051984:;
				_23e026524_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
			}
		}
		_match_end_5545047536:;
	}
}



inline void _23e026524_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_23e026524_trim((*this));
}



inline void _23e026524_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	for (; _21217_i >= 0LL; (_21217_i)--) {
		{
			jule::U8 _21417_c = (*this)._field_d[_21217_i];
			if (_21417_c < '9') {
				((*this)._field_d[_21217_i])++;
				(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
				return;
			}
		}
	_iter_next_5545059264:;
	}
	_iter_end_5545059264:;
	(*this)._field_d.__at(0LL)='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _23e026524_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_23e026524_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _23e026524_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	for (; (_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd); (_25017_i)++) {
		{
			_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[_25017_i] - '0'));
		}
	_iter_next_5545065312:;
	}
	_iter_end_5545065312:;
	for (; _25017_i < (*this)._field_dp; (_25017_i)++) {
		{
			_25117_n*=10LL;
		}
	_iter_next_5545075328:;
	}
	_iter_end_5545075328:;
	if (_23e026524_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e026524_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _224dacb88_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _224dacb88_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _224dacb88_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _224dacb88_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _224dacb88_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e9950d5_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _224ea5599_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_224ea5599_DirEntry>>> _224ea5599_Directory::_static_method_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_224ea5599_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_224ea5599_DirEntry>>();
	DIR* _1617_dir = _23d108c56_opendir((&(_1524_path[0LL])));
	if (_1617_dir == nullptr) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_224ea5599_DirEntry>>>(_224977555_get_last_fs_error());
	}
	for (;;) {
		{
			struct dirent* _2117_dirent = _23d108c56_readdir(_1617_dir);
			if (_2117_dirent == nullptr) {
				goto _iter_end_5549536848;
			}
			jule::Str _2517_name = _23d175344_byte_ptr_to_str(((jule::U8*)(_2117_dirent->d_name)));
			jule::Ptr<_224eb5730_Status> _2621_stat = ({
				auto except = _224eb5730_Status::_static_method_of(_23d08e2c4_join(jule::Slice<jule::Str>({_1524_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_224ea5599_DirEntry>>>(except.error);
					return jule::Exceptional<jule::Slice<jule::Ptr<_224ea5599_DirEntry>>>(except.error);
				} jule::Ptr<_224eb5730_Status>();});
			});
			_1538_dirents.push(jule::new_struct<_224ea5599_DirEntry>(new( std::nothrow ) _224ea5599_DirEntry(_2517_name,_2621_stat)));
		}
	_iter_next_5549536848:;
	}
	_iter_end_5549536848:;
	_23d108c56_closedir(_1617_dir);
	return jule::Exceptional(jule::Any(),_1538_dirents);
}



inline jule::VoidExceptional _224ea5599_Directory::_static_method_create(jule::Str _3926_path) {
	if (_23d108c56_mkdir((&(_3926_path[0LL])),448LL) != 0LL) {
		return jule::VoidExceptional(_224977555_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _224ea5599_Directory::_static_method_remove(jule::Str _5126_path) {
	if (_23d108c56_rmdir((&(_5126_path[0LL]))) != 0LL) {
		return jule::VoidExceptional(_224977555_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, const _224ea5599_Directory &_Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_224eb1ee0_File>> _224eb1ee0_File::_static_method_open(jule::Str _1824_path,jule::Int _1835_flag,jule::Int _1848_mode) {
	jule::Int _1913_handle = _23d108c56_open((&(_1824_path[0LL])),static_cast<jule::Int>(_1835_flag),_1848_mode);
	if (_1913_handle == -1LL) {
		return jule::Exceptional<jule::Ptr<_224eb1ee0_File>>(_224977555_get_last_fs_error());
	}
	return jule::Exceptional(jule::Any(),_224eb1ee0_File::_static_method_new(static_cast<jule::Uintptr>(_1913_handle)));
}



inline jule::VoidExceptional _224eb1ee0_File::_static_method_remove(jule::Str _3026_path) {
	if (_23d108c56_unlink((&(_3026_path[0LL]))) != 0LL) {
		return jule::VoidExceptional(_224977555_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::Exceptional<jule::Int> _224eb1ee0_File::_method_write(jule::Slice<jule::U8> _4428_buff) {
	jule::Int _4445_n = jule::Int();
	if (_4428_buff.len() == 0LL) {
		_4445_n = 0LL;
		return jule::Exceptional(jule::Any(),_4445_n);
	}
	_4445_n=static_cast<jule::Int>(static_cast<jule::Int>(_23d12181d_write(static_cast<jule::Int>((*this)._field_handle),(&(_4428_buff[0LL])),static_cast<jule::Uint>(_4428_buff.len()))));
	if (_4445_n == -1LL) {
		return jule::Exceptional<jule::Int>(_224977555_get_last_fs_error());
	}
	return jule::Exceptional(jule::Any(),_4445_n);
}



inline jule::Exceptional<jule::Int> _224eb1ee0_File::_method_read(jule::Slice<jule::U8> _6531_buff) {
	jule::Int _6548_n = jule::Int();
	if (_6531_buff.len() == 0LL) {
		_6548_n = 0LL;
		return jule::Exceptional(jule::Any(),_6548_n);
	}
	_6548_n=static_cast<jule::Int>(static_cast<jule::Int>(_23d12181d_read(static_cast<jule::Int>((*this)._field_handle),(&(_6531_buff[0LL])),static_cast<jule::Uint>(_6531_buff.len()))));
	if (_6548_n == -1LL) {
		return jule::Exceptional<jule::Int>(_224977555_get_last_fs_error());
	}
	return jule::Exceptional(jule::Any(),_6548_n);
}



inline jule::Ptr<_224eb1ee0_File> _224eb1ee0_File::_static_method_new(jule::Uintptr _4523_handle) {
	return jule::new_struct<_224eb1ee0_File>(new( std::nothrow ) _224eb1ee0_File(_4523_handle));
}



inline jule::Exceptional<jule::Ptr<_224eb1ee0_File>> _224eb1ee0_File::_static_method_create(jule::Str _5526_path) {
	return jule::Exceptional(jule::Any(),({
		auto except = _224eb1ee0_File::_static_method_open(_5526_path,1538LL,438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_224eb1ee0_File>>(except.error);
			return jule::Exceptional<jule::Ptr<_224eb1ee0_File>>(except.error);
		} jule::Ptr<_224eb1ee0_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> _224eb1ee0_File::_static_method_read(jule::Str _6724_path) {
	jule::Ptr<_224eb5730_Status> _6813_s = ({
		auto except = _224eb5730_Status::_static_method_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_224eb5730_Status>();});
	});
	if ((!(_6813_s->_method_is_reg()))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(14LLU);
	}
	if (_6813_s->_field_size == 0LL) {
		return jule::Exceptional(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	}
	jule::Ptr<_224eb1ee0_File> _7817_f = ({
		auto except = _224eb1ee0_File::_static_method_open(_6724_path,0LL,0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_224eb1ee0_File>();});
	});
	__JULE_DEFER({
		({
			auto except = _7817_f->_method_close();
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/fs/file.jule:79:17"));
		});
	});
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_6813_s->_field_size));
	jule::Int _8213_n = ({
		auto except = _7817_f->_method_read(_8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Int();});
	});
	return jule::Exceptional(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional _224eb1ee0_File::_static_method_write(jule::Str _9125_path,jule::Slice<jule::U8> _9136_data,jule::Int _9150_perm) {
	jule::Ptr<_224eb1ee0_File> _9217_f = ({
		auto except = _224eb1ee0_File::_static_method_open(_9125_path,1537LL,_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_224eb1ee0_File>();});
	});
	({
		auto except = _9217_f->_method_write(_9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _9217_f->_method_close();
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I64> _224eb1ee0_File::_method_seek(jule::I64 _10527_offset,jule::Int _10540_origin) {
	jule::I64 _10613_pos = _23d12181d_seek(static_cast<jule::Int>((*this)._field_handle),_10527_offset,static_cast<jule::Int>(_10540_origin));
	if (_10613_pos == -1LL) {
		return jule::Exceptional<jule::I64>(_224977555_get_last_fs_error());
	}
	return jule::Exceptional(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _224eb1ee0_File::_method_close(void) {
	if (_23d12181d_close(static_cast<jule::Int>((*this)._field_handle)) == -1LL) {
		return jule::VoidExceptional(_224977555_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, const _224eb1ee0_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_224eb5730_Status>> _224eb5730_Status::_static_method_of(jule::Str _1122_path) {
	struct stat _1217_handle = (struct stat){};
	jule::Int _1313_code = _23d108c56_stat((&(_1122_path[0LL])),(&(_1217_handle)));
	if (_1313_code != -1LL) {
		return jule::Exceptional(jule::Any(),jule::new_struct<_224eb5730_Status>(new( std::nothrow ) _224eb5730_Status(static_cast<jule::Uint>(_1217_handle.st_mode),static_cast<jule::Uint>(_1217_handle.st_size))));
	}
	return jule::Exceptional<jule::Ptr<_224eb5730_Status>>(_224977555_get_last_fs_error());
}



inline jule::Bool _224eb5730_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _224eb5730_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _224eb5730_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _23e730c0b_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return 0LL;
	}
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_5550007408:;
			{
				return 5LL;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_5550007744:;
			{
				return 4LL;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_5550007840:;
			{
				return 3LL;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_5550007936:;
			{
				return 2LL;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_5550007040:;
			{
				return 1LL;
			}
		}
		else {
			_case_begin_5550006528:;
			{
				return 0LL;
			}
		}
		_match_end_5550006816:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _23e730c0b_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e4593c4_File::_method_is_ok(void) {
	({
		auto except = _224eb5730_Status::_static_method_of((*this)._field__path);
		if (!except.ok()) {
			return false;
		}
	});
	return true;
}



inline void _23e4593c4_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



inline jule::Str _23e4593c4_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _23e4593c4_File::_method_dir(void) {
	return _23d08e2c4_dir((*this)._field__path);
}



inline jule::Str _23e4593c4_File::_method_name(void) {
	return _23d08e2c4_base((*this)._field__path);
}



inline jule::Uintptr _23e4593c4_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline jule::Slice<_23e730c0b_Token> _23e4593c4_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



inline jule::Str _23e4593c4_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	for (; _4717_i < (*this)._field_data.len(); (_4717_i)++) {
		{
			if ((*this)._field_data[_4717_i] != '\n') {
				goto _iter_next_5550031712;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*this)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
		}
	_iter_next_5550031712:;
	}
	_iter_end_5550031712:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, const _23e4593c4_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45a13e_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _23e45a13e_Lex::_method_push_err(jule::Str _40427_fmt,jule::Slice<jule::Any> _40440_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_23e45a13e_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40427_fmt,_40440_args));
}



inline void _23e45a13e_Lex::_method_push_err_tok(_23e730c0b_Token& _40932_token,jule::Str _40946_fmt) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_23e45a13e_make_err(_40932_token._field_row,_40932_token._field_column,(*this)._field_file,_40946_fmt,jule::Slice<jule::Any>()));
}



inline void _23e45a13e_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			_23e730c0b_Token _41921_token = (*this)._method_token();
			if (_41921_token._field_id != 0LLU) {
				(*this)._field_tokens = jule::alloc_for_append((*this)._field_tokens,1);(*this)._field_tokens.push(_41921_token);
			}
		}
	_iter_next_5550043856:;
	}
	_iter_end_5550043856:;
}



inline jule::Str _23e45a13e_Lex::_method_id(jule::Slice<jule::U8>& _42822_ln) {
	if (_42822_ln.len() == 0LL) {
		return jule::Str();
	}
	jule::I32 _43214_r;
	jule::Int _43221_i;
	std::tie(_43214_r,_43221_i) = _23e9950d5_decode_rune(_42822_ln);
	if ((_43214_r != '_') && (!(_23e730c0b_is_letter(_43214_r)))) {
		return jule::Str();
	}
	while (_43221_i < _42822_ln.len()) {
		{
			jule::I32 _43818_r;
			jule::Int _43821_n;
			std::tie(_43818_r,_43821_n) = _23e9950d5_decode_rune(_42822_ln.slice(_43221_i));
			if (((_43818_r != '_') && (!(_23e730c0b_is_decimal(static_cast<jule::U8>(_43818_r))))) && (!(_23e730c0b_is_letter(_43818_r)))) {
				(*this)._field_pos+=_43221_i;
				return static_cast<jule::Str>(_42822_ln.slice(0LL,_43221_i));
			}
			_43221_i+=_43821_n;
		}
	_iter_next_5550056752:;
	}
	_iter_end_5550056752:;
	(*this)._field_pos+=static_cast<jule::I64>(_42822_ln.len());
	return static_cast<jule::Str>(_42822_ln);
}



inline jule::Slice<jule::U8> _23e45a13e_Lex::_method_resume(void) {
	jule::Int _45317_i = (*this)._field_pos;
	for (; _45317_i < (*this)._field_file->_field_data.len(); (_45317_i)++) {
		{
			jule::I32 _45517_r = static_cast<jule::I32>((*this)._field_file->_field_data[_45317_i]);
			if (_23e730c0b_is_space(_45517_r)) {
				((*this)._field_pos)++;
				{
					auto &_match_expr{ _45517_r };
					if (_match_expr == '\n') {
						_case_begin_5550069104:;
						{
							(*this)._method_new_line();
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_5550069200:;
						{
							(*this)._field_column+=8LL;
						}
					}
					else {
						_case_begin_5550067376:;
						{
							((*this)._field_column)++;
						}
					}
					_match_end_5550067712:;
				}
				goto _iter_next_5550063776;
			}
			jule::Int _46621_j = _45317_i;
			for (; _46621_j < (*this)._field_file->_field_data.len(); (_46621_j)++) {
				{
					if ((*this)._field_file->_field_data[_46621_j] == '\n') {
						goto _iter_end_5550066144;
					}
				}
			_iter_next_5550066144:;
			}
			_iter_end_5550066144:;
			return (*this)._field_file->_field_data.slice(_45317_i,_46621_j);
		}
	_iter_next_5550063776:;
	}
	_iter_end_5550063776:;
	return nullptr;
}



inline void _23e45a13e_Lex::_method_lex_line_comment(_23e730c0b_Token& _47840_token) {
	jule::Int _47913_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _48317_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if ((_48317_r == '\n') || (_48317_r == '\r')) {
				if ((*this)._method_is_first_token_of_line()) {
					_47840_token._field_id=18LLU;
					_47840_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47913_start,(*this)._field_pos));
				}
				return;
			}
		}
	_iter_next_5550076752:;
	}
	_iter_end_5550076752:;
	if ((*this)._method_is_first_token_of_line()) {
		_47840_token._field_id=18LLU;
		_47840_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47913_start));
	}
}



inline void _23e45a13e_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _50217_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_50217_r == '\r') {
				goto _iter_next_5550085168;
			}
			if (_50217_r == '\n') {
				(*this)._method_new_line();
				goto _iter_next_5550085168;
			}
			(*this)._field_column+=1LL;
			if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_50217_r == '*')) && ((*this)._field_file->_field_data[(*this)._field_pos + 1LL] == '/')) {
				(*this)._field_column+=2LL;
				(*this)._field_pos+=2LL;
				return;
			}
		}
	_iter_next_5550085168:;
	}
	_iter_end_5550085168:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _23e45a13e_Lex::_method_num(jule::Slice<jule::U8>& _52323_txt) {
	jule::Str _52338_lit = jule::Str();
	_52338_lit=_23e45a13e_hex_num(_52323_txt);
	if (_52338_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52338_lit=_23e45a13e_octal_num(_52323_txt);
	if (_52338_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52338_lit=_23e45a13e_binary_num(_52323_txt);
	if (_52338_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52338_lit=_23e45a13e_common_num(_52323_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52338_lit.len());
	return _52338_lit;
}



inline jule::Str _23e45a13e_Lex::_method_escape_seq(jule::Slice<jule::U8>& _54230_txt) {
	jule::Str _54317_seq = jule::Str();
	if (_54230_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _54230_txt[1LL] };
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_5550110560:;
			{
				(*this)._field_pos+=2LL;
				return static_cast<jule::Str>(_54230_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_5550111408:;
			{
				_54317_seq=_23e45a13e_big_unicode_point_escape(_54230_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_5550111504:;
			{
				_54317_seq=_23e45a13e_little_unicode_point_escape(_54230_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_5550110000:;
			{
				_54317_seq=_23e45a13e_hex_byte_escape(_54230_txt);
			}
		}
		else {
			_case_begin_5550108496:;
			{
				_54317_seq=_23e45a13e_byte_escape(_54230_txt);
			}
		}
		_match_end_5550109328:;
	}
	_julec_label_end:;
	if (_54317_seq == jule::Str()) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54317_seq.len());
	return _54317_seq;
}



inline jule::Str _23e45a13e_Lex::_method_get_rune(jule::Slice<jule::U8>& _57628_txt,jule::Bool _57641_raw) {
	if ((!(_57641_raw)) && (_57628_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57628_txt);
	}
	jule::I32 _58114_r;
	jule::Int _58117_n;
	std::tie(_58114_r,_58117_n) = _23e9950d5_decode_rune(_57628_txt);
	(*this)._field_pos+=_58117_n;
	return static_cast<jule::Str>(_58114_r);
}



inline jule::Str _23e45a13e_Lex::_method_lex_rune(jule::Slice<jule::U8>& _58628_txt) {
	jule::Str _58717_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58917_n = 0LL;
	jule::Int _59017_i = 1LL;
	for (; _59017_i < _58628_txt.len(); (_59017_i)++) {
		{
			if (_58628_txt[_59017_i] == '\r') {
				goto _iter_next_5550150992;
			}
			if (_58628_txt[_59017_i] == '\n') {
				(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*this)._field_pos)++;
				(*this)._method_new_line();
				return jule::Str();
			}
			jule::Slice<jule::U8> _60217_part = _58628_txt.slice(_59017_i);
			jule::Str _60317_r = (*this)._method_get_rune(_60217_part,false);
			_58717_run+=_60317_r;
			jule::I64 _60517_length = _60317_r.len();
			(*this)._field_column+=_60517_length;
			if (_60317_r == jule::Str("'", 1)) {
				((*this)._field_pos)++;
				goto _iter_end_5550150992;
			}
			if (_60517_length > 1LL) {
				_59017_i+=static_cast<jule::I64>(_60517_length - 1LL);
			}
			(_58917_n)++;
		}
	_iter_next_5550150992:;
	}
	_iter_end_5550150992:;
	if (_58917_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if (_58917_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	}
	return _58717_run;
}



inline jule::Str _23e45a13e_Lex::_method_lex_str(void) {
	jule::Str _62717_s = jule::Str();
	jule::U8 _62813_mark = (*this)._field_file->_field_data[(*this)._field_pos];
	((*this)._field_pos)++;
	jule::Bool _63013_raw = _62813_mark == '`';
	_62717_s+=static_cast<jule::Str>(_62813_mark);
	((*this)._field_column)++;
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			jule::U8 _63517_ch = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_63517_ch == '\r') {
				goto _iter_next_5550168736;
			}
			if (_63517_ch == '\n') {
				(*this)._method_new_line();
				if ((!(_63013_raw))) {
					(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*this)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _64721_part = (*this)._field_file->_field_data.slice((*this)._field_pos);
			jule::Str _64817_r = (*this)._method_get_rune(_64721_part,_63013_raw);
			_62717_s+=_64817_r;
			(*this)._field_column+=static_cast<jule::I64>(_64817_r.len());
			if (_63517_ch == _62813_mark) {
				goto _iter_end_5550168736;
			}
		}
	_iter_next_5550168736:;
	}
	_iter_end_5550168736:;
	return _62717_s;
}



inline jule::Bool _23e45a13e_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



inline void _23e45a13e_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _23e45a13e_Lex::_method_is_op(jule::Slice<jule::U8>& _66825_txt,jule::Str _66838_kind,jule::Uint _66849_id,_23e730c0b_Token& _66867_t) {
	if ((!(_23e45a13e_bytes_has_prefix(_66825_txt,_66838_kind)))) {
		return false;
	}
	_66867_t._field_kind=_66838_kind;
	_66867_t._field_id=_66849_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66838_kind.len());
	return true;
}



inline jule::Bool _23e45a13e_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67932_txt,_23e730c0b_Token& _67950_tok) {
	{
		auto &expr = _23e45a13e_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_5550189504:;
		if (it != expr.end()) {
			_23e45a13e_KindPair &_23e45a13e_pair = *it;
			{
				if ((*this)._method_is_op(_67932_txt,_23e45a13e_pair._field_kind,_23e45a13e_pair._field_id,_67950_tok)) {
					return true;
				}
			}
			_iter_next_5550189504:;
			++it;
			goto _iter_begin_5550189504;
		}
		_iter_end_5550189504:;
	}
	return false;
}



inline jule::Bool _23e45a13e_Lex::_method_lex_id(jule::Slice<jule::U8>& _68926_txt,_23e730c0b_Token& _68944_t) {
	jule::Str _69013_lex = (*this)._method_id(_68926_txt);
	if (_69013_lex == jule::Str()) {
		return false;
	}
	_68944_t._field_kind=_69013_lex;
	_68944_t._field_id=2LLU;
	return true;
}



inline jule::Bool _23e45a13e_Lex::_method_lex_num(jule::Slice<jule::U8>& _70027_txt,_23e730c0b_Token& _70045_t) {
	jule::Str _70113_lex = (*this)._method_num(_70027_txt);
	if (_70113_lex == jule::Str()) {
		return false;
	}
	_70045_t._field_kind=_70113_lex;
	_70045_t._field_id=6LLU;
	return true;
}



inline _23e730c0b_Token _23e45a13e_Lex::_method_token(void) {
	_23e730c0b_Token _71317_t = _23e730c0b_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71513_txt = (*this)._method_resume();
	if (_71513_txt == nullptr) {
		return _71317_t;
	}
	_71317_t._field_column=(*this)._field_column;
	_71317_t._field_row=(*this)._field_row;
	{
		if ((*this)._method_lex_num(_71513_txt,_71317_t)) {
			_case_begin_5550211744:;
		}
		else if (_71513_txt[0LL] == '\'') {
			_case_begin_5550208080:;
			{
				_71317_t._field_kind=(*this)._method_lex_rune(_71513_txt);
				_71317_t._field_id=6LLU;
				return _71317_t;
			}
		}
		else if ((_71513_txt[0LL] == '\"') || (_71513_txt[0LL] == '`')) {
			_case_begin_5550208176:;
			{
				_71317_t._field_kind=(*this)._method_lex_str();
				_71317_t._field_id=6LLU;
				return _71317_t;
			}
		}
		else if (_23e45a13e_bytes_has_prefix(_71513_txt,jule::Str("//", 2))) {
			_case_begin_5550208272:;
			{
				(*this)._method_lex_line_comment(_71317_t);
				return _71317_t;
			}
		}
		else if (_23e45a13e_bytes_has_prefix(_71513_txt,jule::Str("/*", 2))) {
			_case_begin_5550208368:;
			{
				(*this)._method_lex_range_comment();
				return _71317_t;
			}
		}
		else if ((*this)._method_is_op(_71513_txt,jule::Str("(", 1),3LLU,_71317_t) || (*this)._method_is_op(_71513_txt,jule::Str(")", 1),3LLU,_71317_t) || (*this)._method_is_op(_71513_txt,jule::Str("{", 1),3LLU,_71317_t) || (*this)._method_is_op(_71513_txt,jule::Str("}", 1),3LLU,_71317_t) || (*this)._method_is_op(_71513_txt,jule::Str("[", 1),3LLU,_71317_t) || (*this)._method_is_op(_71513_txt,jule::Str("]", 1),3LLU,_71317_t) || (*this)._method_lex_basic_ops(_71513_txt,_71317_t)) {
			_case_begin_5550212240:;
		}
		else if ((*this)._method_lex_id(_71513_txt,_71317_t)) {
			_case_begin_5550212336:;
			{
				{
					auto &expr = _23e45a13e_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_5550226736:;
					if (it != expr.end()) {
						_23e45a13e_KindPair &_23e45a13e_pair = *it;
						{
							if (_23e45a13e_pair._field_kind == _71317_t._field_kind) {
								_71317_t._field_id=_23e45a13e_pair._field_id;
								goto _iter_end_5550226736;
							}
						}
						_iter_next_5550226736:;
						++it;
						goto _iter_begin_5550226736;
					}
					_iter_end_5550226736:;
				}
			}
		}
		else {
			_case_begin_5550206288:;
			{
				jule::I32 _76518_r;
				jule::Int _76521_sz;
				std::tie(_76518_r,_76521_sz) = _23e9950d5_decode_rune(_71513_txt);
				(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_76518_r)}));
				((*this)._field_column)++;
				(*this)._field_pos+=_76521_sz;
				return _71317_t;
			}
		}
		_match_end_5550206208:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_71317_t._field_kind.len());
	return _71317_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45a13e_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e249d96_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_SptrTypeDecl &_Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_PtrTypeDecl::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_ArrTypeDecl::_method_auto_sized(void) {
	return (*this)._field_size == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _225036949_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _225036949_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _225040a63_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _225040a63_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _225040a63_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _225040a63_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stmts.len();
}



inline jule::Bool _225040a63_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stmts.len();
}



inline void _225040a63_ScopeParser::_method_push_err(_23e730c0b_Token _17827_token,jule::Str _17841_fmt) {
	(*this)._field_p->_method_push_err(_17827_token,_17841_fmt,jule::Slice<jule::Any>());
}



inline void _225040a63_ScopeParser::_method_push_suggestion(jule::Str _18134_fmt,jule::Slice<jule::Any> _18147_args) {
	(*this)._field_p->_method_push_suggestion(_18134_fmt,_18147_args);
}



inline void _225040a63_ScopeParser::_method_insert_as_next(jule::Slice<_23e730c0b_Token>& _18538_tokens) {
	(*this)._field_stmts=jule::append((*this)._field_stmts.slice(0LL,(*this)._field_pos + 1LL),(*this)._field_stmts.slice((*this)._field_pos));
	(*this)._field_stmts[(*this)._field_pos + 1LL]=jule::new_struct<_225040a63_Stmt>(new( std::nothrow ) _225040a63_Stmt(_18538_tokens,jule::Bool()));
}



inline jule::Ptr<_225040a63_Stmt> _225040a63_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stmts[(*this)._field_pos];
}



inline jule::Ptr<_23e45734a_ScopeTree> _225040a63_ScopeParser::_method_build_scope(jule::Slice<_23e730c0b_Token>& _19535_tokens) {
	jule::Ptr<_23e45734a_ScopeTree> _19617_s = _225040a63_new_scope();
	_19617_s->_field_parent=(*this)._field_s;
	_225040a63_ScopeParser _19817_ssp = _225040a63_ScopeParser((*this)._field_p,jule::Ptr<_23e45734a_ScopeTree>(),jule::Slice<jule::Ptr<_225040a63_Stmt>>(),jule::Int());
	_19817_ssp._method_build(_19535_tokens,_19617_s);
	return _19617_s;
}



inline jule::Any _225040a63_ScopeParser::_method_build_var_st(jule::Slice<_23e730c0b_Token>& _20536_tokens) {
	jule::Ptr<_23e45734a_VarDecl> _20617_v = (*this)._field_p->_method_build_var(_20536_tokens);
	_20617_v->_field_scope=(*this)._field_s;
	return jule::Any(_20617_v);
}



inline jule::Any _225040a63_ScopeParser::_method_build_ret_st(jule::Slice<_23e730c0b_Token> _21135_tokens) {
	jule::Ptr<_23e45734a_RetSt> _21217_st = jule::new_struct<_23e45734a_RetSt>(new( std::nothrow ) _23e45734a_RetSt(_21135_tokens[0LL],jule::Ptr<_23e45734a_Expr>()));
	if (_21135_tokens.len() > 1LL) {
		_21135_tokens=_21135_tokens.slice(1LL);
		_21217_st->_field_expr=(*this)._field_p->_method_build_expr(_21135_tokens);
	}
	return jule::Any(_21217_st);
}



inline jule::Any _225040a63_ScopeParser::_method_build_while_next_iter(jule::Ptr<_225040a63_Stmt>& _22245_s) {
	jule::Ptr<_23e45734a_Iter> _22317_it = jule::new_struct<_23e45734a_Iter>(new( std::nothrow ) _23e45734a_Iter(_22245_s->_field_tokens[0LL],jule::Any(),jule::Ptr<_23e45734a_ScopeTree>()));
	jule::Slice<_23e730c0b_Token> _22617_tokens = _22245_s->_field_tokens.slice(1LL);
	jule::Ptr<_23e45734a_WhileKind> _22717_kind = jule::new_struct<_23e45734a_WhileKind>(new( std::nothrow ) _23e45734a_WhileKind());
	if (_22617_tokens.len() > 0LL) {
		_22717_kind->_field_expr=(*this)._field_p->_method_build_expr(_22617_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_22317_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_22617_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_23e730c0b_Token> _23917_st_tokens = _225059ab0_get_block_expr(_22617_tokens);
	if (_23917_st_tokens.len() > 0LL) {
		jule::Ptr<_225040a63_Stmt> _24121_stmt = jule::new_struct<_225040a63_Stmt>(new( std::nothrow ) _225040a63_Stmt(_23917_st_tokens,_22245_s->_field_terminated));
		_22717_kind->_field_next_token=_23917_st_tokens[0LL];
		_22717_kind->_field_next=(*this)._method_build_st(_24121_stmt);
	}
	jule::I64 _24917_i = _23917_st_tokens.len();
	jule::Slice<_23e730c0b_Token> _25017_block_tokens = _225247b9e_range(_24917_i,jule::Str("{", 1),jule::Str("}", 1),_22617_tokens);
	if (_25017_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_22317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_24917_i < _22617_tokens.len()) {
		(*this)._method_push_err(_22617_tokens[_24917_i],jule::Str("invalid syntax", 14));
	}
	_22317_it->_field_scope=(*this)._method_build_scope(_25017_block_tokens);
	_22317_it->_field_kind=jule::Any(_22717_kind);
	return jule::Any(_22317_it);
}



inline jule::Ptr<_23e45734a_WhileKind> _225040a63_ScopeParser::_method_build_while_iter_kind(jule::Slice<_23e730c0b_Token>& _26745_tokens) {
	return jule::new_struct<_23e45734a_WhileKind>(new( std::nothrow ) _23e45734a_WhileKind((*this)._field_p->_method_build_expr(_26745_tokens),jule::Any(),_23e730c0b_Token()));
}



inline jule::Slice<jule::Slice<_23e730c0b_Token>> _225040a63_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_23e730c0b_Token>& _27350_toks) {
	jule::Slice<jule::Slice<_23e730c0b_Token>> _27418_vars;
	jule::Slice<_23ceb0c1d_Log> _27424_errs;
	std::tie(_27418_vars,_27424_errs) = _225247b9e_parts(_27350_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_27424_errs);
	return _27418_vars;
}



inline jule::Ptr<_23e45734a_VarDecl> _225040a63_ScopeParser::_method_build_range_kind_key(jule::Slice<_23e730c0b_Token>& _27944_tokens) {
	if (_27944_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_23e45734a_VarDecl> _28317_key = jule::new_struct<_23e45734a_VarDecl>(new( std::nothrow ) _23e45734a_VarDecl(jule::Ptr<_23e45734a_ScopeTree>(),_27944_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Ptr<_23e45734a_CommentGroup>(),jule::Ptr<_23e45734a_TypeDecl>(),jule::Ptr<_23e45734a_Expr>()));
	if (_28317_key->_field_token._field_id == 36LLU) {
		_28317_key->_field_mutable=true;
		if (_27944_tokens.len() == 1LL) {
			(*this)._method_push_err(_28317_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_28317_key->_field_token=_27944_tokens[1LL];
	} else if (_27944_tokens.len() > 1LL) {
		(*this)._method_push_err(_27944_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_28317_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_28317_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_28317_key->_field_ident=_28317_key->_field_token._field_kind;
	return _28317_key;
}



inline jule::Slice<jule::Ptr<_23e45734a_VarDecl>> _225040a63_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_23e730c0b_Token>>& _30445_parts) {
	jule::Slice<jule::Ptr<_23e45734a_VarDecl>> _30517_keys = nullptr;
	{
		auto &expr = _30445_parts;
		auto it = expr.begin();
		_iter_begin_5550934192:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225040a63_tokens = *it;
			{
				_30517_keys.push((*this)._method_build_range_kind_key(_225040a63_tokens));
			}
			_iter_next_5550934192:;
			++it;
			goto _iter_begin_5550934192;
		}
		_iter_end_5550934192:;
	}
	return _30517_keys;
}



inline void _225040a63_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ptr<_23e45734a_RangeKind>& _31251_rng,jule::Slice<_23e730c0b_Token>& _31273_tokens) {
	jule::Slice<jule::Slice<_23e730c0b_Token>> _31317_key_tokens = (*this)._method_get_range_kind_keys_tokens(_31273_tokens);
	if (_31317_key_tokens.len() == 0LL) {
		return;
	}
	if (_31317_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_31251_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ptr<_23e45734a_VarDecl>> _32017_keys = (*this)._method_build_range_kind_keys(_31317_key_tokens);
	_31251_rng->_field_key_a=_32017_keys[0LL];
	if (_32017_keys.len() > 1LL) {
		_31251_rng->_field_key_b=_32017_keys[1LL];
	}
}



inline void _225040a63_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ptr<_23e45734a_RangeKind>& _32754_rng,jule::Slice<_23e730c0b_Token>& _32776_tokens) {
	jule::Int _32817_i = 0LL;
	jule::Slice<_23e730c0b_Token> _32917_rang = _225247b9e_range(_32817_i,jule::Str("(", 1),jule::Str(")", 1),_32776_tokens);
	if (_32817_i < _32776_tokens.len()) {
		(*this)._method_push_err(_32754_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_32754_rng,_32917_rang);
}



inline void _225040a63_ScopeParser::_method_setup_range_kind_keys(jule::Ptr<_23e45734a_RangeKind>& _33645_rng,jule::Slice<_23e730c0b_Token>& _33667_tokens) {
	if (_33667_tokens[0LL]._field_id == 3LLU) {
		if (_33667_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_33667_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_33645_rng,_33667_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_33645_rng,_33667_tokens);
}



inline jule::Ptr<_23e45734a_RangeKind> _225040a63_ScopeParser::_method_build_range_iter_kind(jule::Slice<_23e730c0b_Token>& _34845_var_tokens,jule::Slice<_23e730c0b_Token>& _34914_expr_tokens,_23e730c0b_Token& _34941_in_token) {
	jule::Ptr<_23e45734a_RangeKind> _35017_rng = jule::new_struct<_23e45734a_RangeKind>(new( std::nothrow ) _23e45734a_RangeKind(_34941_in_token,jule::Ptr<_23e45734a_Expr>(),jule::Ptr<_23e45734a_VarDecl>(),jule::Ptr<_23e45734a_VarDecl>()));
	if (_34914_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_35017_rng->_field_in_token,jule::Str("expression missing", 18));
		return _35017_rng;
	}
	_35017_rng->_field_expr=(*this)._field_p->_method_build_expr(_34914_expr_tokens);
	if (_34845_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_35017_rng,_34845_var_tokens);
	}
	return _35017_rng;
}



inline jule::Any _225040a63_ScopeParser::_method_build_common_iter_kind(jule::Slice<_23e730c0b_Token>& _36446_tokens,_23e730c0b_Token& _36464_err_tok) {
	jule::Int _36517_brace_n = 0LL;
	{
		auto &expr = _36446_tokens;
		auto it = expr.begin();
		_iter_begin_5550973728:;
		if (it != expr.end()) {
			jule::Int _225040a63_i = it - expr.begin();
			_23e730c0b_Token _225040a63_tok = *it;
			{
				if (_225040a63_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _225040a63_tok._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_5550978160:;
							{
								(_36517_brace_n)++;
								goto _iter_next_5550973728;
							}
						}
						else {
							_case_begin_5550976384:;
							{
								(_36517_brace_n)--;
							}
						}
						_match_end_5550976480:;
					}
				}
				if (_36517_brace_n != 0LL) {
					goto _iter_next_5550973728;
				}
				{
					auto &_match_expr{ _225040a63_tok._field_id };
					if (_match_expr == 15LLU) {
						_case_begin_5550975792:;
						{
							jule::Slice<_23e730c0b_Token> _38425_decl_tokens = _36446_tokens.slice(0LL,_225040a63_i);
							jule::Slice<_23e730c0b_Token> _38525_expr_tokens = _36446_tokens.slice(_225040a63_i + 1LL);
							return jule::Any((*this)._method_build_range_iter_kind(_38425_decl_tokens,_38525_expr_tokens,_225040a63_tok));
						}
					}
					_match_end_5550975968:;
				}
			}
			_iter_next_5550973728:;
			++it;
			_225040a63_i++;
			goto _iter_begin_5550973728;
		}
		_iter_end_5550973728:;
	}
	return jule::Any((*this)._method_build_while_iter_kind(_36446_tokens));
}



inline jule::Any _225040a63_ScopeParser::_method_build_common_iter(jule::Slice<_23e730c0b_Token> _39240_tokens) {
	jule::Ptr<_23e45734a_Iter> _39317_it = jule::new_struct<_23e45734a_Iter>(new( std::nothrow ) _23e45734a_Iter(_39240_tokens[0LL],jule::Any(),jule::Ptr<_23e45734a_ScopeTree>()));
	_39240_tokens=_39240_tokens.slice(1LL);
	if (_39240_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_39317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	jule::Slice<_23e730c0b_Token> _40317_expr_tokens = _225059ab0_get_block_expr(_39240_tokens);
	if (_40317_expr_tokens.len() > 0LL) {
		_39317_it->_field_kind=(*this)._method_build_common_iter_kind(_40317_expr_tokens,_39317_it->_field_token);
	}
	jule::I64 _40717_i = _40317_expr_tokens.len();
	jule::Slice<_23e730c0b_Token> _40817_scope_tokens = _225247b9e_range(_40717_i,jule::Str("{", 1),jule::Str("}", 1),_39240_tokens);
	if (_40817_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_39317_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_40717_i < _39240_tokens.len()) {
		(*this)._method_push_err(_39240_tokens[_40717_i],jule::Str("invalid syntax", 14));
	}
	_39317_it->_field_scope=(*this)._method_build_scope(_40817_scope_tokens);
	return jule::Any(_39317_it);
}



inline jule::Any _225040a63_ScopeParser::_method_buid_iter_st(jule::Ptr<_225040a63_Stmt>& _42236_st) {
	if (_42236_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_42236_st);
	}
	return (*this)._method_build_common_iter(_42236_st->_field_tokens);
}



inline jule::Any _225040a63_ScopeParser::_method_build_break_st(jule::Slice<_23e730c0b_Token>& _42938_tokens) {
	jule::Ptr<_23e45734a_BreakSt> _43017_brk = jule::new_struct<_23e45734a_BreakSt>(new( std::nothrow ) _23e45734a_BreakSt(_42938_tokens[0LL],_23e730c0b_Token()));
	if (_42938_tokens.len() > 1LL) {
		if (_42938_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42938_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_43017_brk->_field_label=_42938_tokens[1LL];
			if (_42938_tokens.len() > 2LL) {
				(*this)._method_push_err(_42938_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_43017_brk);
}



inline jule::Any _225040a63_ScopeParser::_method_build_cont_st(jule::Slice<_23e730c0b_Token>& _44737_tokens) {
	jule::Ptr<_23e45734a_ContSt> _44817_cont = jule::new_struct<_23e45734a_ContSt>(new( std::nothrow ) _23e45734a_ContSt(_44737_tokens[0LL],_23e730c0b_Token()));
	if (_44737_tokens.len() > 1LL) {
		if (_44737_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_44737_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44817_cont->_field_label=_44737_tokens[1LL];
			if (_44737_tokens.len() > 2LL) {
				(*this)._method_push_err(_44737_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44817_cont);
}



inline jule::Ptr<_23e45734a_If> _225040a63_ScopeParser::_method_build_if(jule::Slice<_23e730c0b_Token>& _46532_tokens) {
	jule::Ptr<_23e45734a_If> _46617_model = jule::new_struct<_23e45734a_If>(new( std::nothrow ) _23e45734a_If(_46532_tokens[0LL],jule::Ptr<_23e45734a_Expr>(),jule::Ptr<_23e45734a_ScopeTree>()));
	_46532_tokens=_46532_tokens.slice(1LL);
	jule::Slice<_23e730c0b_Token> _47017_expr_tokens = _225059ab0_get_block_expr(_46532_tokens);
	jule::Int _47117_i = 0LL;
	if (_47017_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_46617_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_47117_i=static_cast<jule::I64>(_47017_expr_tokens.len());
	}
	jule::Slice<_23e730c0b_Token> _47717_scope_tokens = _225247b9e_range(_47117_i,jule::Str("{", 1),jule::Str("}", 1),_46532_tokens);
	if (_47717_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_46617_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_47117_i < _46532_tokens.len()) {
		if (_46532_tokens[_47117_i]._field_id == 17LLU) {
			_46532_tokens=_46532_tokens.slice(_47117_i);
		} else {
			(*this)._method_push_err(_46532_tokens[_47117_i],jule::Str("invalid syntax", 14));
			_46532_tokens=nullptr;
		}
	}
	_46617_model->_field_expr=(*this)._field_p->_method_build_expr(_47017_expr_tokens);
	_46617_model->_field_scope=(*this)._method_build_scope(_47717_scope_tokens);
	return _46617_model;
}



inline jule::Ptr<_23e45734a_Else> _225040a63_ScopeParser::_method_build_else(jule::Slice<_23e730c0b_Token>& _49734_tokens) {
	jule::Ptr<_23e45734a_Else> _49817_els = jule::new_struct<_23e45734a_Else>(new( std::nothrow ) _23e45734a_Else(_49734_tokens[0LL],jule::Ptr<_23e45734a_ScopeTree>()));
	_49734_tokens=_49734_tokens.slice(1LL);
	jule::Int _50217_i = 0LL;
	jule::Slice<_23e730c0b_Token> _50317_scope_tokens = _225247b9e_range(_50217_i,jule::Str("{", 1),jule::Str("}", 1),_49734_tokens);
	if (_50317_scope_tokens == nullptr) {
		if (_50217_i < _49734_tokens.len()) {
			(*this)._method_push_err(_49817_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_49817_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	if (_50217_i < _49734_tokens.len()) {
		(*this)._method_push_err(_49734_tokens[_50217_i],jule::Str("invalid syntax", 14));
	}
	_49817_els->_field_scope=(*this)._method_build_scope(_50317_scope_tokens);
	return _49817_els;
}



inline jule::Any _225040a63_ScopeParser::_method_build_if_else_chain(jule::Slice<_23e730c0b_Token> _52142_tokens) {
	jule::Ptr<_23e45734a_Conditional> _52217_chain = jule::new_struct<_23e45734a_Conditional>(new( std::nothrow ) _23e45734a_Conditional((*this)._method_build_if(_52142_tokens),jule::Slice<jule::Ptr<_23e45734a_If>>(),jule::Ptr<_23e45734a_Else>()));
	if (_52217_chain->_field_head == nullptr) {
		return jule::Any(nullptr);
	}
	while (_52142_tokens.len() != 0LL) {
		{
			if (_52142_tokens[0LL]._field_id != 17LLU) {
				goto _iter_end_5551062720;
			}
			if ((_52142_tokens.len() > 1LL) && (_52142_tokens[1LL]._field_id == 16LLU)) {
				_52142_tokens=_52142_tokens.slice(1LL);
				jule::Ptr<_23e45734a_If> _53425_elif = (*this)._method_build_if(_52142_tokens);
				_52217_chain->_field_tail = jule::alloc_for_append(_52217_chain->_field_tail,1);_52217_chain->_field_tail.push(_53425_elif);
				goto _iter_next_5551062720;
			}
			_52217_chain->_field_default=(*this)._method_build_else(_52142_tokens);
			goto _iter_end_5551062720;
		}
	_iter_next_5551062720:;
	}
	_iter_end_5551062720:;
	return jule::Any(_52217_chain);
}



inline jule::Any _225040a63_ScopeParser::_method_build_comment_st(_23e730c0b_Token& _54436_token) {
	return jule::Any(_225247b9e_build_comment(_54436_token));
}



inline jule::Any _225040a63_ScopeParser::_method_build_co_call_st(jule::Slice<_23e730c0b_Token> _54839_tokens) {
	jule::Ptr<_23e45734a_CoExpr> _54917_c = jule::new_struct<_23e45734a_CoExpr>(new( std::nothrow ) _23e45734a_CoExpr(_54839_tokens[0LL],jule::Ptr<_23e45734a_Expr>()));
	_54839_tokens=_54839_tokens.slice(1LL);
	_54917_c->_field_expr=(*this)._field_p->_method_build_expr(_54839_tokens);
	return jule::Any(_54917_c);
}



inline jule::Any _225040a63_ScopeParser::_method_build_goto_st(jule::Slice<_23e730c0b_Token>& _55737_tokens) {
	jule::Ptr<_23e45734a_GotoSt> _55817_gt = jule::new_struct<_23e45734a_GotoSt>(new( std::nothrow ) _23e45734a_GotoSt(_55737_tokens[0LL],_23e730c0b_Token()));
	if (_55737_tokens.len() == 1LL) {
		(*this)._method_push_err(_55817_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_55737_tokens.len() > 2LL) {
		(*this)._method_push_err(_55737_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_23e730c0b_Token _56717_ident_token = _55737_tokens[1LL];
	if (_56717_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_56717_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_55817_gt);
	}
	_55817_gt->_field_label=_56717_ident_token;
	return jule::Any(_55817_gt);
}



inline jule::Any _225040a63_ScopeParser::_method_build_fall_st(jule::Slice<_23e730c0b_Token>& _57737_tokens) {
	jule::Ptr<_23e45734a_FallSt> _57817_fll = jule::new_struct<_23e45734a_FallSt>(new( std::nothrow ) _23e45734a_FallSt(_57737_tokens[0LL]));
	if (_57737_tokens.len() > 1LL) {
		(*this)._method_push_err(_57737_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_57817_fll);
}



inline jule::Any _225040a63_ScopeParser::_method_build_type_alias_st(jule::Slice<_23e730c0b_Token>& _58743_tokens) {
	jule::Ptr<_23e45734a_TypeAliasDecl> _58817_tad = (*this)._field_p->_method_build_type_alias_decl(_58743_tokens);
	_58817_tad->_field_scope=(*this)._field_s;
	return jule::Any(_58817_tad);
}



inline void _225040a63_ScopeParser::_method_push_case_expr(jule::Slice<_23e730c0b_Token> _59337_tokens,_23e730c0b_Token _59358_token,jule::Bool _5949_type_match,jule::Slice<jule::Ptr<_23e45734a_Expr>>& _59432_exprs) {
	if (_59337_tokens.len() == 0LL) {
		return;
	}
	if (_5949_type_match) {
		jule::Int _60021_i = 0LL;
		jule::Ptr<_23e45734a_TypeDecl> _60122_t;
		jule::Bool _60125_ok;
		std::tie(_60122_t,_60125_ok) = (*this)._field_p->_method_build_type(_59337_tokens,(&(_60021_i)),true);
		if (_60125_ok) {
			_59432_exprs.push(jule::new_struct<_23e45734a_Expr>(new( std::nothrow ) _23e45734a_Expr(_59358_token,jule::Any(_60122_t))));
		}
		if (_60021_i < _59337_tokens.len()) {
			(*this)._method_push_err(_59337_tokens[_60021_i],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_59432_exprs.push((*this)._field_p->_method_build_expr(_59337_tokens));
}



inline jule::Slice<jule::Ptr<_23e45734a_Expr>> _225040a63_ScopeParser::_method_build_case_exprs(jule::Slice<_23e730c0b_Token>& _61640_tokens,jule::Bool _61657_type_match) {
	jule::Slice<jule::Ptr<_23e45734a_Expr>> _61717_exprs = jule::Slice<jule::Ptr<_23e45734a_Expr>>::alloc(0LL,1LL);
	jule::Int _61917_brace_n = 0LL;
	jule::Int _62017_j = 0LL;
	{
		auto &expr = _61640_tokens;
		auto it = expr.begin();
		_iter_begin_5551119360:;
		if (it != expr.end()) {
			jule::Int _225040a63_i = it - expr.begin();
			_23e730c0b_Token _225040a63_tok = *it;
			{
				if (_225040a63_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _225040a63_tok._field_kind };
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_5551123824:;
							{
								(_61917_brace_n)++;
							}
						}
						else {
							_case_begin_5551122048:;
							{
								(_61917_brace_n)--;
							}
						}
						_match_end_5551122144:;
					}
					goto _iter_next_5551119360;
				} else if (_61917_brace_n != 0LL) {
					goto _iter_next_5551119360;
				}
				{
					if ((_225040a63_tok._field_id == 7LLU) && (_225040a63_tok._field_kind == jule::Str("|", 1))) {
						_case_begin_5551124960:;
						{
							jule::Slice<_23e730c0b_Token> _63821_expr_tokens = _61640_tokens.slice(_62017_j,_225040a63_i);
							if (_63821_expr_tokens.len() == 0LL) {
								(*this)._method_push_err(_225040a63_tok,jule::Str("expression missing", 18));
							} else {
								(*this)._method_push_case_expr(_61640_tokens.slice(_62017_j,_225040a63_i),_225040a63_tok,_61657_type_match,_61717_exprs);
							}
							_62017_j=static_cast<jule::Int>(_225040a63_i + 1LL);
						}
					}
					else if (_225040a63_tok._field_id == 11LLU) {
						_case_begin_5551125056:;
						{
							(*this)._method_push_case_expr(_61640_tokens.slice(_62017_j,_225040a63_i),_225040a63_tok,_61657_type_match,_61717_exprs);
							_61640_tokens=_61640_tokens.slice(_225040a63_i + 1LL);
							return _61717_exprs;
						}
					}
					_match_end_5551124832:;
				}
			}
			_iter_next_5551119360:;
			++it;
			_225040a63_i++;
			goto _iter_begin_5551119360;
		}
		_iter_end_5551119360:;
	}
	(*this)._method_push_err(_61640_tokens[0LL],jule::Str("invalid syntax", 14));
	_61640_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_23e45734a_ScopeTree> _225040a63_ScopeParser::_method_build_case_scope(jule::Slice<_23e730c0b_Token>& _65740_tokens) {
	jule::Int _65817_n = 0LL;
	for (;;) {
		{
			jule::Int _66021_i = 0LL;
			jule::Slice<_23e730c0b_Token> _66122_next;
			std::tie(_66122_next,std::ignore) = _225040a63_skip_st(_66021_i,_65740_tokens.slice(_65817_n));
			if (_66122_next.len() == 0LL) {
				goto _iter_end_5551136720;
			}
			_23e730c0b_Token _66517_tok = _66122_next[0LL];
			if ((_66517_tok._field_id != 7LLU) || (_66517_tok._field_kind != jule::Str("|", 1))) {
				_65817_n+=_66021_i;
				goto _iter_next_5551136720;
			}
			jule::Slice<_23e730c0b_Token> _67021_scope_tokens = _65740_tokens.slice(0LL,_65817_n);
			jule::Ptr<_23e45734a_ScopeTree> _67121_scope = (*this)._method_build_scope(_67021_scope_tokens);
			_65740_tokens=_65740_tokens.slice(_65817_n);
			return _67121_scope;
		}
	_iter_next_5551136720:;
	}
	_iter_end_5551136720:;
	jule::Ptr<_23e45734a_ScopeTree> _67517_scope = (*this)._method_build_scope(_65740_tokens);
	_65740_tokens=nullptr;
	return _67517_scope;
}



inline std::tuple<jule::Ptr<_23e45734a_Case>,jule::Bool> _225040a63_ScopeParser::_method_build_case(jule::Slice<_23e730c0b_Token>& _68034_tokens,jule::Bool _68051_type_match) {
	jule::Ptr<_23e45734a_Case> _68117_c = jule::new_struct<_23e45734a_Case>(new( std::nothrow ) _23e45734a_Case(_68034_tokens[0LL],jule::Ptr<_23e45734a_ScopeTree>(),jule::Slice<jule::Ptr<_23e45734a_Expr>>()));
	_68034_tokens=_68034_tokens.slice(1LL);
	_68117_c->_field_exprs=(*this)._method_build_case_exprs(_68034_tokens,_68051_type_match);
	_68117_c->_field_scope=(*this)._method_build_case_scope(_68034_tokens);
	jule::Bool _68713_is_default = _68117_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_68117_c,_68713_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_23e45734a_Case>>,jule::Ptr<_23e45734a_Else>> _225040a63_ScopeParser::_method_build_cases(jule::Slice<_23e730c0b_Token> _69134_tokens,jule::Bool _69151_type_match) {
	jule::Slice<jule::Ptr<_23e45734a_Case>> _69217_cases = nullptr;
	jule::Ptr<_23e45734a_Else> _69317_def = nullptr;
	jule::Bool _69417_def_not_last = false;
	while (_69134_tokens.len() > 0LL) {
		{
			_23e730c0b_Token _69621_tok = _69134_tokens[0LL];
			if (_69621_tok._field_id == 18LLU) {
				_69134_tokens=_69134_tokens.slice(1LL);
				goto _iter_next_5551159600;
			}
			if ((_69621_tok._field_id != 7LLU) || (_69621_tok._field_kind != jule::Str("|", 1))) {
				(*this)._method_push_err(_69621_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_5551159600;
			}
			jule::Ptr<_23e45734a_Case> _70722_c;
			jule::Bool _70725_is_default;
			std::tie(_70722_c,_70725_is_default) = (*this)._method_build_case(_69134_tokens,_69151_type_match);
			if (_70725_is_default) {
				_70722_c->_field_token=_69621_tok;
				if (_69317_def == nullptr) {
					_69317_def=jule::new_struct<_23e45734a_Else>(new( std::nothrow ) _23e45734a_Else(_70722_c->_field_token,_70722_c->_field_scope));
				} else {
					(*this)._method_push_err(_69621_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_69417_def_not_last=_69417_def_not_last || (_69317_def != nullptr);
				_69217_cases.push(_70722_c);
			}
		}
	_iter_next_5551159600:;
	}
	_iter_end_5551159600:;
	if (_69417_def_not_last) {
		(*this)._method_push_err(_69317_def->_field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_69217_cases,_69317_def);
}



inline jule::Ptr<_23e45734a_MatchCase> _225040a63_ScopeParser::_method_build_match_case(jule::Slice<_23e730c0b_Token> _73139_tokens) {
	jule::Ptr<_23e45734a_MatchCase> _73217_m = jule::new_struct<_23e45734a_MatchCase>(new( std::nothrow ) _23e45734a_MatchCase(_73139_tokens[0LL],jule::Bool(),jule::Ptr<_23e45734a_Expr>(),jule::Slice<jule::Ptr<_23e45734a_Case>>(),jule::Ptr<_23e45734a_Else>()));
	_73139_tokens=_73139_tokens.slice(1LL);
	if ((_73139_tokens.len() > 0LL) && (_73139_tokens[0LL]._field_id == 10LLU)) {
		_73217_m->_field_type_match=true;
		_73139_tokens=_73139_tokens.slice(1LL);
	}
	jule::Slice<_23e730c0b_Token> _74217_expr_tokens = _225059ab0_get_block_expr(_73139_tokens);
	if (_74217_expr_tokens.len() > 0LL) {
		_73217_m->_field_expr=(*this)._field_p->_method_build_expr(_74217_expr_tokens);
	} else if (_73217_m->_field_type_match) {
		(*this)._method_push_err(_73217_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _74917_i = _74217_expr_tokens.len();
	jule::Slice<_23e730c0b_Token> _75017_block_toks = _225247b9e_range(_74917_i,jule::Str("{", 1),jule::Str("}", 1),_73139_tokens);
	if (_75017_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_73217_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie(_73217_m->_field_cases,_73217_m->_field_default) = (*this)._method_build_cases(_75017_block_toks,_73217_m->_field_type_match);
	return _73217_m;
}



inline jule::Ptr<_23e45734a_ScopeTree> _225040a63_ScopeParser::_method_build_scope_st(jule::Slice<_23e730c0b_Token> _76237_tokens) {
	jule::Bool _76317_is_unsafe = false;
	jule::Bool _76417_is_deferred = false;
	_23e730c0b_Token _76517_token = _76237_tokens[0LL];
	if (_76517_token._field_id == 35LLU) {
		_76317_is_unsafe=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if (_76237_tokens.len() == 0LL) {
			(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		_76517_token=_76237_tokens[0LL];
		if (_76517_token._field_id == 37LLU) {
			_76417_is_deferred=true;
			_76237_tokens=_76237_tokens.slice(1LL);
			if (_76237_tokens.len() == 0LL) {
				(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
	} else if (_76517_token._field_id == 37LLU) {
		_76417_is_deferred=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if (_76237_tokens.len() == 0LL) {
			(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
	}
	jule::Int _79117_i = 0LL;
	jule::Slice<_23e730c0b_Token> _79217_scope_tokens = _225247b9e_range(_79117_i,jule::Str("{", 1),jule::Str("}", 1),_76237_tokens);
	if (_79217_scope_tokens == nullptr) {
		(*this)._method_push_err(_76517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if (_79117_i < _76237_tokens.len()) {
		(*this)._method_push_err(_76237_tokens[_79117_i],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_23e45734a_ScopeTree> _79917_scope = (*this)._method_build_scope(_79217_scope_tokens);
	_79917_scope->_field_unsafety=_76317_is_unsafe;
	_79917_scope->_field_deferred=_76417_is_deferred;
	return _79917_scope;
}



inline jule::Ptr<_23e45734a_LabelSt> _225040a63_ScopeParser::_method_build_label_st(jule::Slice<_23e730c0b_Token>& _80538_tokens) {
	jule::Ptr<_23e45734a_LabelSt> _80617_lbl = jule::new_struct<_23e45734a_LabelSt>(new( std::nothrow ) _23e45734a_LabelSt(_80538_tokens[0LL],_80538_tokens[0LL]._field_kind));
	if (_80538_tokens.len() > 2LL) {
		_80538_tokens=_80538_tokens.slice(2LL);
		(*this)._method_insert_as_next(_80538_tokens);
	}
	return _80617_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _225040a63_ScopeParser::_method_build_id_st(jule::Slice<_23e730c0b_Token>& _82035_tokens) {
	jule::Bool _82064_ok = jule::Bool();
	if (_82035_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_82064_ok);
	}
	_23e730c0b_Token _82517_token = _82035_tokens[1LL];
	{
		auto &_match_expr{ _82517_token._field_id };
		if (_match_expr == 11LLU) {
			_case_begin_5551237392:;
			{
				_82064_ok = true;
				return std::make_tuple(jule::Any((*this)._method_build_label_st(_82035_tokens)),_82064_ok);
			}
		}
		_match_end_5551238992:;
	}
	return std::make_tuple(jule::Any(),_82064_ok);
}



inline jule::Ptr<_225146a37_AssignInfo> _225040a63_ScopeParser::_method_build_assign_info(jule::Slice<_23e730c0b_Token>& _83441_tokens) {
	jule::Ptr<_225146a37_AssignInfo> _83517_info = jule::new_struct<_225146a37_AssignInfo>(new( std::nothrow ) _225146a37_AssignInfo(jule::Slice<_23e730c0b_Token>(),jule::Slice<_23e730c0b_Token>(),_23e730c0b_Token(),true));
	jule::Int _83817_brace_n = 0LL;
	{
		auto &expr = _83441_tokens;
		auto it = expr.begin();
		_iter_begin_5551246272:;
		if (it != expr.end()) {
			jule::Int _225040a63_i = it - expr.begin();
			_23e730c0b_Token _225040a63_token = *it;
			{
				if (_225040a63_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _225040a63_token._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_5551250832:;
							{
								(_83817_brace_n)++;
							}
						}
						else {
							_case_begin_5551249056:;
							{
								(_83817_brace_n)--;
							}
						}
						_match_end_5551249152:;
					}
				}
				{
					if (_83817_brace_n > 0LL) {
						_case_begin_5551248848:;
						{
							goto _iter_next_5551246272;
						}
					}
					else if (_225040a63_token._field_id != 7LLU) {
						_case_begin_5551251792:;
						{
							goto _iter_next_5551246272;
						}
					}
					else if ((!(_23e730c0b_is_assign_op(_225040a63_token._field_kind)))) {
						_case_begin_5551251888:;
						{
							goto _iter_next_5551246272;
						}
					}
					_match_end_5551248592:;
				}
				_83517_info->_field_l=_83441_tokens.slice(0LL,_225040a63_i);
				if (_83517_info->_field_l.len() == 0LL) {
					_83517_info->_field_ok=false;
				}
				_83517_info->_field_setter=_225040a63_token;
				if ((_225040a63_i + 1LL) >= _83441_tokens.len()) {
					_83517_info->_field_r=nullptr;
					_83517_info->_field_ok=_23e730c0b_is_postfix_op(_83517_info->_field_setter._field_kind);
					goto _iter_end_5551246272;
				}
				_83517_info->_field_r=_83441_tokens.slice(_225040a63_i + 1LL);
				if (_23e730c0b_is_postfix_op(_83517_info->_field_setter._field_kind)) {
					if (_83517_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_83517_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_83517_info->_field_r=nullptr;
					}
				}
				goto _iter_end_5551246272;
			}
			_iter_next_5551246272:;
			++it;
			_225040a63_i++;
			goto _iter_begin_5551246272;
		}
		_iter_end_5551246272:;
	}
	return _83517_info;
}



inline jule::Ptr<_23e45734a_AssignLeft> _225040a63_ScopeParser::_method_build_assign_l(jule::Slice<_23e730c0b_Token>& _88138_tokens) {
	jule::Ptr<_23e45734a_AssignLeft> _88217_l = jule::new_struct<_23e45734a_AssignLeft>(new( std::nothrow ) _23e45734a_AssignLeft(_88138_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_23e45734a_Expr>()));
	if (_88138_tokens[0LL]._field_id == 2LLU) {
		_88217_l->_field_ident=_88217_l->_field_token._field_kind;
	}
	_88217_l->_field_expr=(*this)._field_p->_method_build_expr(_88138_tokens);
	return _88217_l;
}



inline jule::Slice<jule::Ptr<_23e45734a_AssignLeft>> _225040a63_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_23e730c0b_Token>>& _89439_parts) {
	jule::Slice<jule::Ptr<_23e45734a_AssignLeft>> _89517_lefts = nullptr;
	{
		auto &expr = _89439_parts;
		auto it = expr.begin();
		_iter_begin_5551271520:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225040a63_part = *it;
			{
				jule::Ptr<_23e45734a_AssignLeft> _89721_l = (*this)._method_build_assign_l(_225040a63_part);
				_89517_lefts.push(_89721_l);
			}
			_iter_next_5551271520:;
			++it;
			goto _iter_begin_5551271520;
		}
		_iter_end_5551271520:;
	}
	return _89517_lefts;
}



inline std::tuple<jule::Ptr<_23e45734a_AssignSt>,jule::Bool> _225040a63_ScopeParser::_method_build_plain_assign(jule::Slice<_23e730c0b_Token>& _90442_tokens) {
	jule::Ptr<_225146a37_AssignInfo> _90517_info = (*this)._method_build_assign_info(_90442_tokens);
	if ((!(_90517_info->_field_ok))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_23e45734a_AssignSt> _91017_assign = jule::new_struct<_23e45734a_AssignSt>(new( std::nothrow ) _23e45734a_AssignSt(jule::Bool(),_90517_info->_field_setter,jule::Slice<jule::Ptr<_23e45734a_AssignLeft>>(),jule::Ptr<_23e45734a_Expr>()));
	jule::Slice<jule::Slice<_23e730c0b_Token>> _91418_parts;
	jule::Slice<_23ceb0c1d_Log> _91425_errs;
	std::tie(_91418_parts,_91425_errs) = _225247b9e_parts(_90517_info->_field_l,8LLU,true);
	if (_91425_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_91425_errs);
		return std::make_tuple(nullptr,false);
	}
	_91017_assign->_field_left=(*this)._method_build_assign_ls(_91418_parts);
	if (_90517_info->_field_r != nullptr) {
		_91017_assign->_field_right=(*this)._field_p->_method_build_expr(_90517_info->_field_r);
	}
	return std::make_tuple(_91017_assign,true);
}



inline std::tuple<jule::Ptr<_23e45734a_AssignSt>,jule::Bool> _225040a63_ScopeParser::_method_build_decl_assign(jule::Slice<_23e730c0b_Token> _92840_tokens) {
	if (_92840_tokens.len() < 1LL) {
		return std::make_tuple(nullptr,false);
	}
	_92840_tokens=_92840_tokens.slice(1LL);
	_23e730c0b_Token _93417_token = _92840_tokens[0LL];
	if ((_93417_token._field_id != 3LLU) || (_93417_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_23e45734a_AssignSt> _93917_assign = jule::new_struct<_23e45734a_AssignSt>(new( std::nothrow ) _23e45734a_AssignSt(true,_23e730c0b_Token(),jule::Slice<jule::Ptr<_23e45734a_AssignLeft>>(),jule::Ptr<_23e45734a_Expr>()));
	jule::Int _94317_i = 0LL;
	jule::Slice<_23e730c0b_Token> _94417_rang = _225247b9e_range(_94317_i,jule::Str("(", 1),jule::Str(")", 1),_92840_tokens);
	if (_94417_rang == nullptr) {
		(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if ((_94317_i + 1LL) < _92840_tokens.len()) {
		_93917_assign->_field_setter=_92840_tokens[_94317_i];
		(_94317_i)++;
		jule::Slice<_23e730c0b_Token> _95121_expr_tokens = _92840_tokens.slice(_94317_i);
		_93917_assign->_field_right=(*this)._field_p->_method_build_expr(_95121_expr_tokens);
	}
	jule::Slice<jule::Slice<_23e730c0b_Token>> _95618_parts;
	jule::Slice<_23ceb0c1d_Log> _95625_errs;
	std::tie(_95618_parts,_95625_errs) = _225247b9e_parts(_94417_rang,8LLU,true);
	if (_95625_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_95625_errs);
		return std::make_tuple(nullptr,false);
	}
	{
		auto &expr = _95618_parts;
		auto it = expr.begin();
		_iter_begin_5551305216:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225040a63_part = *it;
			{
				jule::Bool _96321_is_mut = false;
				jule::Bool _96421_is_ref = false;
				_93417_token=_225040a63_part[0LL];
				if (_93417_token._field_id == 36LLU) {
					_96321_is_mut=true;
					_225040a63_part=_225040a63_part.slice(1LL);
					if (_225040a63_part.len() == 0LL) {
						(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
						goto _iter_next_5551305216;
					}
				}
				if ((_225040a63_part[0LL]._field_id == 7LLU) && (_225040a63_part[0LL]._field_kind == jule::Str("&", 1))) {
					_96421_is_ref=true;
					_225040a63_part=_225040a63_part.slice(1LL);
					if (_225040a63_part.len() == 0LL) {
						(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
						goto _iter_next_5551305216;
					}
				}
				if (((_225040a63_part[0LL]._field_id != 2LLU) && (_225040a63_part[0LL]._field_id != 3LLU)) && (_225040a63_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_93417_token,jule::Str("invalid syntax", 14));
					goto _iter_next_5551305216;
				}
				jule::Ptr<_23e45734a_AssignLeft> _99221_l = (*this)._method_build_assign_l(_225040a63_part);
				_99221_l->_field_mutable=_96321_is_mut;
				_99221_l->_field_reference=_96421_is_ref;
				_93917_assign->_field_left = jule::alloc_for_append(_93917_assign->_field_left,1);_93917_assign->_field_left.push(_99221_l);
			}
			_iter_next_5551305216:;
			++it;
			goto _iter_begin_5551305216;
		}
		_iter_end_5551305216:;
	}
	return std::make_tuple(_93917_assign,true);
}



inline std::tuple<jule::Ptr<_23e45734a_AssignSt>,jule::Bool> _225040a63_ScopeParser::_method_build_assign_st(jule::Slice<_23e730c0b_Token>& _100139_tokens) {
	jule::Ptr<_23e45734a_AssignSt> _100158_st = jule::Ptr<_23e45734a_AssignSt>();
	jule::Bool _100173_ok = jule::Bool();
	if ((!(_225146a37_check_assign_tokens(_100139_tokens)))) {
		_100158_st = nullptr;
		_100173_ok = false;
		return std::make_tuple(_100158_st,_100173_ok);
	}
	{
		auto &_match_expr{ _100139_tokens[0LL]._field_id };
		if (_match_expr == 34LLU) {
			_case_begin_5551330704:;
			{
				std::tie(_100158_st,_100173_ok) = (*this)._method_build_decl_assign(_100139_tokens);
			}
		}
		else {
			_case_begin_5551328208:;
			{
				std::tie(_100158_st,_100173_ok) = (*this)._method_build_plain_assign(_100139_tokens);
			}
		}
		_match_end_5551329344:;
	}
	return std::make_tuple(_100158_st,_100173_ok);
}



inline jule::Any _225040a63_ScopeParser::_method_build_use_expr(jule::Slice<_23e730c0b_Token>& _101438_tokens) {
	if (_101438_tokens.len() == 1LL) {
		(*this)._method_push_err(_101438_tokens[0LL],jule::Str("expression missing", 18));
		return jule::Any(nullptr);
	}
	jule::Ptr<_23e45734a_UseExpr> _102017_ue = jule::new_struct<_23e45734a_UseExpr>(new( std::nothrow ) _23e45734a_UseExpr(_101438_tokens[0LL],jule::Ptr<_23e45734a_Expr>()));
	_101438_tokens=_101438_tokens.slice(1LL);
	_102017_ue->_field_expr=(*this)._field_p->_method_build_expr(_101438_tokens);
	return jule::Any(_102017_ue);
}



inline jule::Any _225040a63_ScopeParser::_method_build_st(jule::Ptr<_225040a63_Stmt>& _102932_st) {
	_23e730c0b_Token _103017_token = _102932_st->_field_tokens[0LL];
	if (_103017_token._field_id == 2LLU) {
		jule::Any _103222_s;
		jule::Bool _103225_ok;
		std::tie(_103222_s,_103225_ok) = (*this)._method_build_id_st(_102932_st->_field_tokens);
		if (_103225_ok) {
			return _103222_s;
		}
	}
	jule::Ptr<_23e45734a_AssignSt> _103818_s;
	jule::Bool _103821_ok;
	std::tie(_103818_s,_103821_ok) = (*this)._method_build_assign_st(_102932_st->_field_tokens);
	if (_103821_ok) {
		return jule::Any(_103818_s);
	}
	{
		auto &_match_expr{ _103017_token._field_id };
		if (_match_expr == 19LLU) {
			_case_begin_5551349792:;
			{
				return (*this)._method_build_use_expr(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 38LLU || _match_expr == 9LLU || _match_expr == 34LLU || _match_expr == 36LLU) {
			_case_begin_5551351536:;
			{
				return (*this)._method_build_var_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 4LLU) {
			_case_begin_5551351056:;
			{
				return (*this)._method_build_ret_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 12LLU) {
			_case_begin_5551350032:;
			{
				return (*this)._method_buid_iter_st(_102932_st);
			}
		}
		else if (_match_expr == 13LLU) {
			_case_begin_5551350128:;
			{
				return (*this)._method_build_break_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 14LLU) {
			_case_begin_5551350224:;
			{
				return (*this)._method_build_cont_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_5551350320:;
			{
				return (*this)._method_build_if_else_chain(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 18LLU) {
			_case_begin_5551347120:;
			{
				return (*this)._method_build_comment_st(_103017_token);
			}
		}
		else if (_match_expr == 26LLU) {
			_case_begin_5551347216:;
			{
				return (*this)._method_build_co_call_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 22LLU) {
			_case_begin_5551347312:;
			{
				return (*this)._method_build_goto_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_5551347408:;
			{
				return (*this)._method_build_fall_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 10LLU) {
			_case_begin_5551351760:;
			{
				return (*this)._method_build_type_alias_st(_102932_st->_field_tokens);
			}
		}
		else if (_match_expr == 27LLU) {
			_case_begin_5551351856:;
			{
				return jule::Any((*this)._method_build_match_case(_102932_st->_field_tokens));
			}
		}
		else if (_match_expr == 35LLU || _match_expr == 37LLU) {
			_case_begin_5551351952:;
			{
				return jule::Any((*this)._method_build_scope_st(_102932_st->_field_tokens));
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5551352048:;
			{
				if (_103017_token._field_kind == jule::Str("{", 1)) {
					return jule::Any((*this)._method_build_scope_st(_102932_st->_field_tokens));
				}
			}
		}
		else {
			_case_begin_5551347904:;
			{
				jule::Ptr<_23e45734a_Expr> _109921_expr = (*this)._field_p->_method_build_expr(_102932_st->_field_tokens);
				if (_109921_expr != nullptr) {
					return jule::Any(_109921_expr);
				}
			}
		}
		_match_end_5551347744:;
	}
	(*this)._method_push_err(_103017_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _225040a63_ScopeParser::_method_build(jule::Slice<_23e730c0b_Token>& _110929_tokens,jule::Ptr<_23e45734a_ScopeTree>& _110951_s) {
	if (_110951_s == nullptr) {
		return;
	}
	(*this)._field_stmts=_225040a63_split_stmts(_110929_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_110951_s;
	while ((!((*this)._method_is_last_st())) && (!((*this)._method_finished()))) {
		{
			jule::Ptr<_225040a63_Stmt> _111821_st = (*this)._method_next();
			jule::Any _111921_data = (*this)._method_build_st(_111821_st);
			if (_111921_data != nullptr) {
				(*this)._field_s->_field_stmts = jule::alloc_for_append((*this)._field_s->_field_stmts,1);(*this)._field_s->_field_stmts.push(_111921_data);
			}
			if ((*this)._method_stopped()) {
				goto _iter_end_5551374592;
			}
		}
	_iter_next_5551374592:;
	}
	_iter_end_5551374592:;
}







std::ostream &operator<<(std::ostream &_Stream, const _225040a63_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _225059ab0_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _225059ab0_ExprBuilder::_method_push_err(_23e730c0b_Token _24227_token,jule::Str _24241_fmt,jule::Slice<jule::Any> _24254_args) {
	(*this)._field_p->_method_push_err(_24227_token,_24241_fmt,_24254_args);
}



inline void _225059ab0_ExprBuilder::_method_push_suggestion(jule::Str _24734_fmt,jule::Slice<jule::Any> _24747_args) {
	(*this)._field_p->_method_push_suggestion(_24734_fmt,_24747_args);
}



inline jule::Ptr<_23e45734a_TupleExpr> _225059ab0_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_23e730c0b_Token>>& _25135_parts) {
	jule::Ptr<_23e45734a_TupleExpr> _25217_tuple = jule::new_struct<_23e45734a_TupleExpr>(new( std::nothrow ) _23e45734a_TupleExpr(jule::Slice<jule::Ptr<_23e45734a_Expr>>::alloc(0LL,static_cast<jule::I64>(_25135_parts.len()))));
	{
		auto &expr = _25135_parts;
		auto it = expr.begin();
		_iter_begin_5551410912:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225059ab0_part = *it;
			{
				_25217_tuple->_field_expr = jule::alloc_for_append(_25217_tuple->_field_expr,1);_25217_tuple->_field_expr.push((*this)._method_build_from_tokens(_225059ab0_part));
			}
			_iter_next_5551410912:;
			++it;
			goto _iter_begin_5551410912;
		}
		_iter_end_5551410912:;
	}
	return _25217_tuple;
}



inline jule::Ptr<_23e45734a_LitExpr> _225059ab0_ExprBuilder::_method_build_lit(_23e730c0b_Token _26128_token) {
	return jule::new_struct<_23e45734a_LitExpr>(new( std::nothrow ) _23e45734a_LitExpr(_26128_token,_26128_token._field_kind));
}



inline jule::Ptr<_23e45734a_TypeDecl> _225059ab0_ExprBuilder::_method_build_primitive_type(_23e730c0b_Token& _26840_token) {
	return _225272404_build_prim_type(_26840_token);
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_single(_23e730c0b_Token _27235_token) {
	{
		auto &_match_expr{ _27235_token._field_id };
		if (_match_expr == 6LLU) {
			_case_begin_5551421488:;
			{
				return jule::Any((*this)._method_build_lit(_27235_token));
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5551421584:;
			{
				if (_27235_token._field_kind == jule::Str("...", 3)) {
					return jule::Any(jule::new_struct<_23e45734a_VariadicExpr>(new( std::nothrow ) _23e45734a_VariadicExpr(_27235_token,jule::Any())));
				}
			}
		}
		else if (_match_expr == 2LLU || _match_expr == 28LLU || _match_expr == 40LLU) {
			_case_begin_5551421728:;
			{
				return jule::Any(_225059ab0_build_ident_expr(_27235_token));
			}
		}
		else if (_match_expr == 1LLU) {
			_case_begin_5551421824:;
			{
				return jule::Any((*this)._method_build_primitive_type(_27235_token));
			}
		}
		_match_end_5551421264:;
	}
	(*this)._method_push_err(_27235_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_23e45734a_IdentExpr> _225059ab0_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_23e730c0b_Token>& _29646_tokens) {
	if (_29646_tokens[0LL]._field_id != 31LLU) {
		return nullptr;
	} else if (_29646_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_29646_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_23e730c0b_Token _30417_token = _29646_tokens[2LL];
	if (_30417_token._field_id != 2LLU) {
		(*this)._method_push_err(_29646_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_23e45734a_IdentExpr> _31017_expr = _225059ab0_build_ident_expr(_30417_token);
	_31017_expr->_field_cpp_linked=true;
	return _31017_expr;
}



inline jule::Ptr<_23e45734a_UnaryExpr> _225059ab0_ExprBuilder::_method_build_unary(jule::Slice<_23e730c0b_Token> _31534_tokens) {
	_23e730c0b_Token _31617_op = _31534_tokens[0LL];
	if (_31534_tokens.len() == 1LL) {
		(*this)._method_push_err(_31617_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_23e730c0b_is_unary_op(_31617_op._field_kind)))) {
		(*this)._method_push_err(_31617_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_31617_op._field_kind)}));
		return nullptr;
	}
	_31534_tokens=_31534_tokens.slice(1LL);
	return jule::new_struct<_23e45734a_UnaryExpr>(new( std::nothrow ) _23e45734a_UnaryExpr(_31617_op,(*this)._method_build(_31534_tokens)));
}



inline jule::Ptr<_23e45734a_SubIdentExpr> _225059ab0_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_23e730c0b_Token> _33642_tokens) {
	jule::I64 _33717_i = _33642_tokens.len() - 1LL;
	_23e730c0b_Token _33817_ident_token = _33642_tokens[_33717_i];
	(_33717_i)--;
	_33642_tokens=_33642_tokens.slice(0LL,_33717_i);
	if (_33642_tokens.len() == 0LL) {
		(*this)._method_push_err(_33817_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_23e45734a_SubIdentExpr>(new( std::nothrow ) _23e45734a_SubIdentExpr(jule::Bool(),(*this)._method_build(_33642_tokens),_33817_ident_token));
}



inline jule::Ptr<_23e45734a_NsSelectionExpr> _225059ab0_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_23e730c0b_Token>& _35142_tokens) {
	jule::Ptr<_23e45734a_NsSelectionExpr> _35217_ns = jule::new_struct<_23e45734a_NsSelectionExpr>(new( std::nothrow ) _23e45734a_NsSelectionExpr());
	{
		auto &expr = _35142_tokens;
		auto it = expr.begin();
		_iter_begin_5551462720:;
		if (it != expr.end()) {
			jule::Int _225059ab0_i = it - expr.begin();
			_23e730c0b_Token _225059ab0_token = *it;
			{
				if (jule::unsafe_mod(_225059ab0_i,2LL) == 0LL) {
					if (_225059ab0_token._field_id != 2LLU) {
						(*this)._method_push_err(_225059ab0_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					}
					_35217_ns->_field_ns = jule::alloc_for_append(_35217_ns->_field_ns,1);_35217_ns->_field_ns.push(_225059ab0_token);
				} else if (_225059ab0_token._field_id != 23LLU) {
					(*this)._method_push_err(_225059ab0_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				}
			}
			_iter_next_5551462720:;
			++it;
			_225059ab0_i++;
			goto _iter_begin_5551462720;
		}
		_iter_end_5551462720:;
	}
	_35217_ns->_field_ident=_35217_ns->_field_ns[_35217_ns->_field_ns.len() - 1LL];
	_35217_ns->_field_ns=_35217_ns->_field_ns.slice(0LL,_35217_ns->_field_ns.len() - 1LL);
	return _35217_ns;
}



inline jule::Ptr<_23e45734a_TypeDecl> _225059ab0_ExprBuilder::_method_build_type(jule::Slice<_23e730c0b_Token>& _37034_tokens) {
	jule::Int _37117_i = 0LL;
	jule::Ptr<_23e45734a_TypeDecl> _37218_t;
	jule::Bool _37221_ok;
	std::tie(_37218_t,_37221_ok) = (*this)._field_p->_method_build_type(_37034_tokens,(&(_37117_i)),false);
	if ((!(_37221_ok))) {
		(*this)._method_push_err(_37034_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_37117_i < _37034_tokens.len()) {
		(*this)._method_push_err(_37034_tokens[_37117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _37218_t;
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_sub_ident(jule::Slice<_23e730c0b_Token>& _38439_tokens) {
	jule::I64 _38513_i = _38439_tokens.len() - 2LL;
	_23e730c0b_Token _38613_token = _38439_tokens[_38513_i];
	{
		auto &_match_expr{ _38613_token._field_id };
		if (_match_expr == 20LLU) {
			_case_begin_5551484512:;
			{
				return jule::Any((*this)._method_build_obj_sub_ident(_38439_tokens));
			}
		}
		else if (_match_expr == 23LLU) {
			_case_begin_5551486128:;
			{
				return jule::Any((*this)._method_build_ns_sub_ident(_38439_tokens));
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5551486224:;
			{
				if (_38613_token._field_kind == jule::Str("]", 1)) {
					return jule::Any((*this)._method_build_type(_38439_tokens));
				}
			}
		}
		_match_end_5551485536:;
	}
	(*this)._method_push_err(_38613_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_23e45734a_VariadicExpr> _225059ab0_ExprBuilder::_method_build_variadic(jule::Slice<_23e730c0b_Token> _40537_tokens) {
	_23e730c0b_Token _40617_token = _40537_tokens[_40537_tokens.len() - 1LL];
	_40537_tokens=_40537_tokens.slice(0LL,_40537_tokens.len() - 1LL);
	return jule::new_struct<_23e45734a_VariadicExpr>(new( std::nothrow ) _23e45734a_VariadicExpr(_40617_token,(*this)._method_build(_40537_tokens)));
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_op_right(jule::Slice<_23e730c0b_Token>& _41438_tokens) {
	_23e730c0b_Token _41517_token = _41438_tokens[_41438_tokens.len() - 1LL];
	{
		auto &_match_expr{ _41517_token._field_kind };
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_5551500912:;
			{
				_41438_tokens=_41438_tokens.slice(0LL,_41438_tokens.len() - 1LL);
				jule::Any _41921_d = (*this)._method_build(_41438_tokens);
				if (_41921_d == nullptr) {
					return jule::Any(nullptr);
				}
				{
					auto &_match_expr{ _41921_d };
					if (_match_expr.type_is<jule::Ptr<_23e45734a_FnCallExpr>>()) {
						_case_begin_5551504208:;
						{
							_41921_d.operator jule::Ptr<_23e45734a_FnCallExpr>()->_field_exception=jule::new_struct<_23e45734a_ScopeTree>(new( std::nothrow ) _23e45734a_ScopeTree(jule::Ptr<_23e45734a_ScopeTree>(),jule::Bool(),true,jule::Slice<jule::Any>()));
							return _41921_d;
						}
					}
					_match_end_5551505024:;
				}
			}
		}
		else if (_match_expr == jule::Str("...", 3)) {
			_case_begin_5551501008:;
			{
				return jule::Any((*this)._method_build_variadic(_41438_tokens));
			}
		}
		_match_end_5551500832:;
	}
	(*this)._method_push_err(_41517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_between_parentheses(jule::Slice<_23e730c0b_Token> _43948_tokens) {
	_23e730c0b_Token _44013_token = _43948_tokens[0LL];
	_43948_tokens=_43948_tokens.slice(1LL,_43948_tokens.len() - 1LL);
	if (_43948_tokens.len() == 0LL) {
		(*this)._method_push_err(_44013_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_43948_tokens);
}



inline jule::Ptr<_23e45734a_CastExpr> _225059ab0_ExprBuilder::_method_try_build_cast(jule::Slice<_23e730c0b_Token>& _45038_tokens) {
	jule::Int _45117_range_n = 0LL;
	{
		auto &expr = _45038_tokens;
		auto it = expr.begin();
		_iter_begin_5551519360:;
		if (it != expr.end()) {
			jule::Int _225059ab0_i = it - expr.begin();
			_23e730c0b_Token &_225059ab0_token = *it;
			{
				if (_225059ab0_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _225059ab0_token._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_5551523792:;
							{
								(_45117_range_n)++;
								goto _iter_next_5551519360;
							}
						}
						else {
							_case_begin_5551522016:;
							{
								(_45117_range_n)--;
							}
						}
						_match_end_5551522112:;
					}
				}
				if (_45117_range_n > 0LL) {
					goto _iter_next_5551519360;
				} else if ((_225059ab0_i + 1LL) == _45038_tokens.len()) {
					return nullptr;
				}
				jule::Slice<_23e730c0b_Token> _47221_type_tokens = _45038_tokens.slice(0LL,_225059ab0_i + 1LL);
				jule::Slice<_23e730c0b_Token> _47321_expr_tokens = _45038_tokens.slice(_225059ab0_i + 1LL);
				if (_47321_expr_tokens.len() == 0LL) {
					return nullptr;
				}
				_23e730c0b_Token _48017_tok = _47321_expr_tokens[0LL];
				if ((_48017_tok._field_id != 3LLU) || (_48017_tok._field_kind != jule::Str("(", 1))) {
					return nullptr;
				}
				jule::Ptr<_23e45734a_CastExpr> _48521_cast = jule::new_struct<_23e45734a_CastExpr>(new( std::nothrow ) _23e45734a_CastExpr());
				if (_47321_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_47321_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				}
				if (_47221_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_47221_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_47221_type_tokens=_47221_type_tokens.slice(1LL,_47221_type_tokens.len() - 1LL);
					jule::Int _49925_type_index = 0LL;
					jule::Ptr<_23e45734a_TypeDecl> _50026_t;
					jule::Bool _50029_ok;
					std::tie(_50026_t,_50029_ok) = (*this)._field_p->_method_build_type(_47221_type_tokens,(&(_49925_type_index)),true);
					if (_50029_ok && (_49925_type_index < _47221_type_tokens.len())) {
						(*this)._method_push_err(_47221_type_tokens[_49925_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_50029_ok))) {
						return _48521_cast;
					}
					_48521_cast->_field_kind=_50026_t;
					if (_47321_expr_tokens.len() > 2LL) {
						jule::Int _51029_j = 0LL;
						_225247b9e_range(_51029_j,jule::Str("(", 1),jule::Str(")", 1),_47321_expr_tokens);
						if (_51029_j < _47321_expr_tokens.len()) {
							return nullptr;
						}
						_47321_expr_tokens=_47321_expr_tokens.slice(0LL,_51029_j);
						_48521_cast->_field_expr=(*this)._method_build(_47321_expr_tokens);
					}
				}
				return _48521_cast;
			}
			_iter_next_5551519360:;
			++it;
			_225059ab0_i++;
			goto _iter_begin_5551519360;
		}
		_iter_end_5551519360:;
	}
	return nullptr;
}



inline void _225059ab0_ExprBuilder::_method_push_arg(jule::Slice<jule::Ptr<_23e45734a_Expr>>& _52532_args,jule::Slice<_23e730c0b_Token> _52551_tokens,_23e730c0b_Token _52568_err_token) {
	if (_52551_tokens.len() == 0LL) {
		(*this)._method_push_err(_52568_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_52532_args.push((*this)._method_build_from_tokens(_52551_tokens));
}



inline jule::Slice<jule::Ptr<_23e45734a_Expr>> _225059ab0_ExprBuilder::_method_build_args(jule::Slice<_23e730c0b_Token> _53433_tokens) {
	if (_53433_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_23e45734a_Expr>> _54017_args = nullptr;
	jule::Int _54117_last = 0LL;
	jule::Int _54217_range_n = 0LL;
	_53433_tokens=_53433_tokens.slice(1LL,_53433_tokens.len() - 1LL);
	{
		auto &expr = _53433_tokens;
		auto it = expr.begin();
		_iter_begin_5551560704:;
		if (it != expr.end()) {
			jule::Int _225059ab0_i = it - expr.begin();
			_23e730c0b_Token &_225059ab0_token = *it;
			{
				if (_225059ab0_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _225059ab0_token._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_5551565840:;
							{
								(_54217_range_n)++;
							}
						}
						else {
							_case_begin_5551564064:;
							{
								(_54217_range_n)--;
							}
						}
						_match_end_5551564160:;
					}
				}
				if ((_54217_range_n > 0LL) || (_225059ab0_token._field_id != 8LLU)) {
					goto _iter_next_5551560704;
				}
				(*this)._method_push_arg(_54017_args,_53433_tokens.slice(_54117_last,_225059ab0_i),_225059ab0_token);
				_54117_last=static_cast<jule::Int>(_225059ab0_i + 1LL);
			}
			_iter_next_5551560704:;
			++it;
			_225059ab0_i++;
			goto _iter_begin_5551560704;
		}
		_iter_end_5551560704:;
	}
	if (_54117_last < _53433_tokens.len()) {
		if (_54117_last == 0LL) {
			if (_53433_tokens.len() > 0LL) {
				(*this)._method_push_arg(_54017_args,_53433_tokens.slice(_54117_last),_53433_tokens[_54117_last]);
			}
		} else {
			(*this)._method_push_arg(_54017_args,_53433_tokens.slice(_54117_last),_53433_tokens[_54117_last - 1LL]);
		}
	}
	return _54017_args;
}



inline jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> _225059ab0_ExprBuilder::_method_build_call_generics(jule::Slice<_23e730c0b_Token> _57742_tokens) {
	if (_57742_tokens.len() == 0LL) {
		return nullptr;
	}
	_57742_tokens=_57742_tokens.slice(1LL,_57742_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_23e730c0b_Token>> _58318_parts;
	jule::Slice<_23ceb0c1d_Log> _58325_errs;
	std::tie(_58318_parts,_58325_errs) = _225247b9e_parts(_57742_tokens,8LLU,true);
	jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> _58417_generics = jule::Slice<jule::Ptr<_23e45734a_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_58318_parts.len()));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_58325_errs);
	{
		auto &expr = _58318_parts;
		auto it = expr.begin();
		_iter_begin_5551582288:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225059ab0_part = *it;
			{
				if (_225059ab0_part.len() == 0LL) {
					goto _iter_next_5551582288;
				}
				jule::Int _59021_j = 0LL;
				jule::Ptr<_23e45734a_TypeDecl> _59122_generic;
				std::tie(_59122_generic,std::ignore) = (*this)._field_p->_method_build_type(_225059ab0_part,(&(_59021_j)),true);
				if (_59021_j < _225059ab0_part.len()) {
					(*this)._method_push_err(_225059ab0_part[_59021_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_58417_generics.push(_59122_generic);
			}
			_iter_next_5551582288:;
			++it;
			goto _iter_begin_5551582288;
		}
		_iter_end_5551582288:;
	}
	return _58417_generics;
}



inline jule::Ptr<_23e45734a_FnCallExpr> _225059ab0_ExprBuilder::_method_build_fn_call(_23e730c0b_Token& _60137_token,jule::Ptr<_225059ab0_CallData>& _60156_data) {
	return jule::new_struct<_23e45734a_FnCallExpr>(new( std::nothrow ) _23e45734a_FnCallExpr(_60137_token,(*this)._method_build_from_tokens(_60156_data->_field_expr_tokens),(*this)._method_build_call_generics(_60156_data->_field_generics_tokens),(*this)._method_build_args(_60156_data->_field_args_tokens),jule::Ptr<_23e45734a_ScopeTree>()));
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_parentheses_range(jule::Slice<_23e730c0b_Token>& _61047_tokens) {
	_23e730c0b_Token _61117_token = _61047_tokens[0LL];
	{
		auto &_match_expr{ _61117_token._field_id };
		if (_match_expr == 3LLU) {
			_case_begin_5551595584:;
			{
				{
					auto &_match_expr{ _61117_token._field_kind };
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_5551597152:;
						{
							jule::Ptr<_23e45734a_CastExpr> _61625_expr = (*this)._method_try_build_cast(_61047_tokens);
							if (_61625_expr != nullptr) {
								return jule::Any(_61625_expr);
							}
						}
					}
					_match_end_5551595936:;
				}
			}
		}
		_match_end_5551595184:;
	}
	jule::Ptr<_225059ab0_CallData> _62317_data = _225059ab0_get_call_data(_61047_tokens);
	if (_62317_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_62317_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_61117_token,_62317_data));
}



inline jule::Ptr<_23e45734a_UnsafeExpr> _225059ab0_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_23e730c0b_Token> _63440_tokens) {
	_23e730c0b_Token _63517_token = _63440_tokens[0LL];
	_63440_tokens=_63440_tokens.slice(1LL);
	jule::Int _63717_i = 0LL;
	jule::Slice<_23e730c0b_Token> _63817_range_tokens = _225247b9e_range(_63717_i,jule::Str("{", 1),jule::Str("}", 1),_63440_tokens);
	if (_63817_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_63440_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_23e45734a_UnsafeExpr>(new( std::nothrow ) _23e45734a_UnsafeExpr(_63517_token,(*this)._method_build_from_tokens(_63817_range_tokens)->_field_kind));
}



inline jule::Ptr<_23e45734a_FnDecl> _225059ab0_ExprBuilder::_method_build_anon_fn(jule::Slice<_23e730c0b_Token>& _64937_tokens) {
	jule::Ptr<_23e45734a_FnDecl> _65017_f = (*this)._field_p->_method_build_fn(_64937_tokens,false,false);
	if ((!(_65017_f->_method_is_anon()))) {
		(*this)._method_push_err(_65017_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	}
	return _65017_f;
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_unsafe(jule::Slice<_23e730c0b_Token>& _65836_tokens) {
	{
		auto &_match_expr{ _65836_tokens[1LL]._field_id };
		if (_match_expr == 33LLU) {
			_case_begin_5551624592:;
			{
				return jule::Any((*this)._method_build_anon_fn(_65836_tokens));
			}
		}
		else {
			_case_begin_5551621776:;
			{
				return jule::Any((*this)._method_build_unsafe_expr(_65836_tokens));
			}
		}
		_match_end_5551622560:;
	}
}



inline void _225059ab0_ExprBuilder::_method_push_range_lit_part(jule::Slice<_23e730c0b_Token> _66942_part,_23e730c0b_Token _6709_error_token,jule::Slice<jule::Slice<_23e730c0b_Token>>& _67034_parts) {
	if (_66942_part.len() == 0LL) {
		(*this)._method_push_err(_6709_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_67034_parts.push(_66942_part);
}



inline jule::Slice<jule::Slice<_23e730c0b_Token>> _225059ab0_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_23e730c0b_Token> _68053_tokens) {
	if (_68053_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_23e730c0b_Token>> _68617_parts = nullptr;
	jule::Int _68817_last = 0LL;
	jule::Int _68917_range_n = 0LL;
	_68053_tokens=_68053_tokens.slice(1LL,_68053_tokens.len() - 1LL);
	{
		auto &expr = _68053_tokens;
		auto it = expr.begin();
		_iter_begin_5551638112:;
		if (it != expr.end()) {
			jule::Int _225059ab0_i = it - expr.begin();
			_23e730c0b_Token &_225059ab0_token = *it;
			{
				if (_225059ab0_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _225059ab0_token._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_5551643248:;
							{
								(_68917_range_n)++;
							}
						}
						else {
							_case_begin_5551641472:;
							{
								(_68917_range_n)--;
							}
						}
						_match_end_5551641568:;
					}
				}
				if ((_68917_range_n > 0LL) || (_225059ab0_token._field_id != 8LLU)) {
					goto _iter_next_5551638112;
				}
				(*this)._method_push_range_lit_part(_68053_tokens.slice(_68817_last,_225059ab0_i),_225059ab0_token,_68617_parts);
				_68817_last=static_cast<jule::Int>(_225059ab0_i + 1LL);
			}
			_iter_next_5551638112:;
			++it;
			_225059ab0_i++;
			goto _iter_begin_5551638112;
		}
		_iter_end_5551638112:;
	}
	if (_68817_last < _68053_tokens.len()) {
		if (_68817_last == 0LL) {
			if (_68053_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_68053_tokens.slice(_68817_last),_68053_tokens[_68817_last],_68617_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_68053_tokens.slice(_68817_last),_68053_tokens[_68817_last - 1LL],_68617_parts);
		}
	}
	return _68617_parts;
}



inline jule::Ptr<_23e45734a_FieldExprPair> _225059ab0_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_23e730c0b_Token> _72344_tokens) {
	jule::Ptr<_23e45734a_FieldExprPair> _72417_pair = jule::new_struct<_23e45734a_FieldExprPair>(new( std::nothrow ) _23e45734a_FieldExprPair(_72344_tokens[0LL],jule::Any()));
	_72344_tokens=_72344_tokens.slice(2LL);
	_72417_pair->_field_expr=(*this)._method_build_from_tokens(_72344_tokens)->_field_kind;
	return _72417_pair;
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_23e730c0b_Token>& _73245_tokens) {
	_23e730c0b_Token _73317_token = _73245_tokens[0LL];
	if (_73317_token._field_id == 2LLU) {
		if (_73245_tokens.len() > 1LL) {
			_73317_token=_73245_tokens[1LL];
			if (_73317_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_73245_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_73245_tokens));
}



inline jule::Slice<jule::Any> _225059ab0_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_23e730c0b_Token>& _74546_tokens) {
	jule::Slice<jule::Slice<_23e730c0b_Token>> _74617_parts = (*this)._method_get_brace_range_lit_expr_parts(_74546_tokens);
	if (_74617_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _75117_pairs = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_74617_parts.len()));
	{
		auto &expr = _74617_parts;
		auto it = expr.begin();
		_iter_begin_5551668144:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225059ab0_part = *it;
			{
				_75117_pairs.push((*this)._method_build_struct_lit_expr(_225059ab0_part));
			}
			_iter_next_5551668144:;
			++it;
			goto _iter_begin_5551668144;
		}
		_iter_end_5551668144:;
	}
	return _75117_pairs;
}



inline jule::Ptr<_23e45734a_StructLit> _225059ab0_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_23e730c0b_Token> _75849_tokens) {
	jule::Int _75917_i = 0LL;
	jule::Ptr<_23e45734a_TypeDecl> _76018_t;
	jule::Bool _76021_ok;
	std::tie(_76018_t,_76021_ok) = (*this)._field_p->_method_build_type(_75849_tokens,(&(_75917_i)),true);
	if ((!(_76021_ok))) {
		return nullptr;
	} else if (_75917_i >= _75849_tokens.len()) {
		(*this)._method_push_err(_75849_tokens[_75917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_75849_tokens=_75849_tokens.slice(_75917_i);
	_23e730c0b_Token _76913_token = _75849_tokens[0LL];
	if ((_76913_token._field_id != 3LLU) || (_76913_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_76913_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_23e45734a_StructLit>(new( std::nothrow ) _23e45734a_StructLit(_76018_t,(*this)._method_build_struct_lit_exprs(_75849_tokens)));
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_23e730c0b_Token>& _78144_tokens) {
	jule::Slice<_23e730c0b_Token> _78218_l;
	jule::Slice<_23e730c0b_Token> _78225_r;
	std::tie(_78218_l,_78225_r) = _225059ab0_split_colon(_78144_tokens);
	if (_78218_l != nullptr) {
		return jule::Any(jule::new_struct<_23e45734a_KeyValPair>(new( std::nothrow ) _23e45734a_KeyValPair((*this)._method_build_from_tokens(_78218_l)->_field_kind,(*this)._method_build_from_tokens(_78225_r)->_field_kind,_78144_tokens[_78218_l.len()])));
	}
	return jule::Any((*this)._method_build_from_tokens(_78144_tokens));
}



inline jule::Ptr<_23e45734a_BraceLit> _225059ab0_ExprBuilder::_method_build_brace_lit(jule::Slice<_23e730c0b_Token>& _79439_tokens) {
	jule::Ptr<_23e45734a_BraceLit> _79517_lit = jule::new_struct<_23e45734a_BraceLit>(new( std::nothrow ) _23e45734a_BraceLit(_79439_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_23e730c0b_Token>> _79917_parts = (*this)._method_get_brace_range_lit_expr_parts(_79439_tokens);
	if (_79917_parts == nullptr) {
		return _79517_lit;
	}
	_79517_lit->_field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_79917_parts.len()));
	{
		auto &expr = _79917_parts;
		auto it = expr.begin();
		_iter_begin_5551696768:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225059ab0_part = *it;
			{
				_79517_lit->_field_exprs = jule::alloc_for_append(_79517_lit->_field_exprs,1);_79517_lit->_field_exprs.push((*this)._method_build_brace_lit_part(_225059ab0_part));
			}
			_iter_next_5551696768:;
			++it;
			goto _iter_begin_5551696768;
		}
		_iter_end_5551696768:;
	}
	return _79517_lit;
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_brace_range(jule::Slice<_23e730c0b_Token>& _81241_tokens) {
	jule::Slice<_23e730c0b_Token> _81318_expr_tokens;
	jule::Int _81331_range_n;
	std::tie(_81318_expr_tokens,_81331_range_n) = _225059ab0_get_range_expr_tokens(_81241_tokens);
	{
		if (_81318_expr_tokens.len() == 0LL) {
			_case_begin_5551702624:;
			{
				return jule::Any((*this)._method_build_brace_lit(_81241_tokens));
			}
		}
		else if (_81331_range_n > 0LL) {
			_case_begin_5551702720:;
			{
				(*this)._method_push_err(_81241_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_5551702496:;
	}
	_23e730c0b_Token _82513_else_token = _81318_expr_tokens[_81318_expr_tokens.len() - 1LL];
	if (_81318_expr_tokens[_81318_expr_tokens.len() - 1LL]._field_id == 17LLU) {
		_81318_expr_tokens=_81318_expr_tokens.slice(0LL,_81318_expr_tokens.len() - 1LL);
		jule::Any _82821_d = (*this)._method_build(_81318_expr_tokens);
		if (_82821_d == nullptr) {
			return jule::Any(nullptr);
		}
		{
			auto &_match_expr{ _82821_d };
			if (_match_expr.type_is<jule::Ptr<_23e45734a_FnCallExpr>>()) {
				_case_begin_5551711312:;
				{
					_81241_tokens=_81241_tokens.slice(_81318_expr_tokens.len() + 1LL);
					jule::Int _83525_i = 0LL;
					jule::Slice<_23e730c0b_Token> _83625_range_tokens = _225247b9e_range(_83525_i,jule::Str("{", 1),jule::Str("}", 1),_81241_tokens);
					jule::Ptr<_23e45734a_FnCallExpr> _83725_model = _82821_d.operator jule::Ptr<_23e45734a_FnCallExpr>();
					if (_83725_model->_method_ignored()) {
						(*this)._method_push_err(_82513_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						(*this)._method_push_suggestion(jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					}
					_83725_model->_field_exception=(*this)._field_p->_method_build_scope(_83625_range_tokens);
					return _82821_d;
				}
			}
			else {
				_case_begin_5551711072:;
				{
					(*this)._method_push_err(_81318_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return jule::Any(nullptr);
				}
			}
			_match_end_5551711824:;
		}
	}
	{
		auto &_match_expr{ _81318_expr_tokens[0LL]._field_id };
		if (_match_expr == 35LLU) {
			_case_begin_5551725504:;
			{
				return (*this)._method_build_unsafe(_81241_tokens);
			}
		}
		else if (_match_expr == 33LLU) {
			_case_begin_5551727120:;
			{
				return jule::Any((*this)._method_build_anon_fn(_81241_tokens));
			}
		}
		else if (_match_expr == 2LLU || _match_expr == 31LLU) {
			_case_begin_5551726848:;
			{
				return jule::Any((*this)._method_build_typed_struct_literal(_81241_tokens));
			}
		}
		else {
			_case_begin_5551723968:;
			{
				(*this)._method_push_err(_81318_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_5551724304:;
	}
}



inline jule::Slice<jule::Slice<_23e730c0b_Token>> _225059ab0_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_23e730c0b_Token> _86943_tokens) {
	_86943_tokens=_86943_tokens.slice(1LL,_86943_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_23e730c0b_Token>> _87118_parts;
	jule::Slice<_23ceb0c1d_Log> _87125_errors;
	std::tie(_87118_parts,_87125_errors) = _225247b9e_parts(_86943_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_87125_errors);
	return _87118_parts;
}



inline jule::Ptr<_23e45734a_SliceExpr> _225059ab0_ExprBuilder::_method_build_slice(jule::Slice<_23e730c0b_Token> _87634_tokens) {
	jule::Ptr<_23e45734a_SliceExpr> _87717_slc = jule::new_struct<_23e45734a_SliceExpr>(new( std::nothrow ) _23e45734a_SliceExpr(_87634_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_23e730c0b_Token>> _88117_parts = (*this)._method_get_enumerable_parts(_87634_tokens);
	if (_88117_parts.len() == 0LL) {
		return _87717_slc;
	}
	_87717_slc->_field_elems=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_88117_parts.len()));
	{
		auto &expr = _88117_parts;
		auto it = expr.begin();
		_iter_begin_5551741728:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225059ab0_p = *it;
			{
				_87717_slc->_field_elems = jule::alloc_for_append(_87717_slc->_field_elems,1);_87717_slc->_field_elems.push((*this)._method_build_from_tokens(_225059ab0_p)->_field_kind);
			}
			_iter_next_5551741728:;
			++it;
			goto _iter_begin_5551741728;
		}
		_iter_end_5551741728:;
	}
	return _87717_slc;
}



inline jule::Ptr<_23e45734a_IndexingExpr> _225059ab0_ExprBuilder::_method_build_indexing(jule::Slice<_23e730c0b_Token> _89437_expr_tokens,jule::Slice<_23e730c0b_Token> _89513_tokens,_23e730c0b_Token _89534_error_token) {
	_89513_tokens=_89513_tokens.slice(1LL,_89513_tokens.len() - 1LL);
	return jule::new_struct<_23e45734a_IndexingExpr>(new( std::nothrow ) _23e45734a_IndexingExpr(_89534_error_token,(*this)._method_build_from_tokens(_89437_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_89513_tokens)->_field_kind));
}



inline jule::Ptr<_23e45734a_SlicingExpr> _225059ab0_ExprBuilder::_method_build_slicing(jule::Slice<_23e730c0b_Token>& _90437_expr_tokens,jule::Slice<_23e730c0b_Token>& _90464_slicing_tokens,jule::Int& _90510_colon,_23e730c0b_Token& _90527_error_token) {
	jule::Ptr<_23e45734a_SlicingExpr> _90617_slc = jule::new_struct<_23e45734a_SlicingExpr>(new( std::nothrow ) _23e45734a_SlicingExpr(_90527_error_token,(*this)._method_build_from_tokens(_90437_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_23e730c0b_Token> _91117_start_expr_tokens = _90464_slicing_tokens.slice(0LL,_90510_colon);
	if (_91117_start_expr_tokens.len() > 0LL) {
		_90617_slc->_field_start=(*this)._method_build_from_tokens(_91117_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_23e730c0b_Token> _91617_to_expr_tokens = _90464_slicing_tokens.slice(_90510_colon + 1LL);
	if (_91617_to_expr_tokens.len() > 0LL) {
		_90617_slc->_field_to=(*this)._method_build_from_tokens(_91617_to_expr_tokens)->_field_kind;
	}
	return _90617_slc;
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_bracket_range(jule::Slice<_23e730c0b_Token> _92442_tokens) {
	_23e730c0b_Token _92517_error_token = _92442_tokens[0LL];
	jule::Slice<_23e730c0b_Token> _92618_expr_tokens;
	jule::Int _92631_range_n;
	std::tie(_92618_expr_tokens,_92631_range_n) = _225059ab0_get_range_expr_tokens(_92442_tokens);
	{
		if (_92618_expr_tokens.len() == 0LL) {
			_case_begin_5551766928:;
			{
				return jule::Any((*this)._method_build_slice(_92442_tokens));
			}
		}
		else if ((_92618_expr_tokens.len() == 0LL) || (_92631_range_n > 0LL)) {
			_case_begin_5551767040:;
			{
				(*this)._method_push_err(_92517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_5551766768:;
	}
	_92442_tokens=_92442_tokens.slice(_92618_expr_tokens.len());
	jule::Int _94517_i = 0LL;
	jule::Slice<_23e730c0b_Token> _94618_slicing_tokens;
	jule::Int _94634_colon;
	std::tie(_94618_slicing_tokens,_94634_colon) = _225272404_split_map_range(_92442_tokens,_94517_i);
	if (_94634_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_92618_expr_tokens,_94618_slicing_tokens,_94634_colon,_92517_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_92618_expr_tokens,_92442_tokens,_92517_error_token));
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_ternary(jule::Slice<_23e730c0b_Token> _95336_tokens) {
	jule::Ptr<_23e45734a_TernaryExpr> _95417_ter = jule::new_struct<_23e45734a_TernaryExpr>(new( std::nothrow ) _23e45734a_TernaryExpr());
	_95417_ter->_field_token=_95336_tokens[0LL];
	_95336_tokens=_95336_tokens.slice(1LL);
	jule::Slice<_23e730c0b_Token> _95817_expr_tokens = _225059ab0_get_block_expr(_95336_tokens);
	if (_95817_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_95417_ter->_field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	_95417_ter->_field_condition=(*this)._method_build_kind(_95817_expr_tokens);
	jule::I64 _96517_i = _95817_expr_tokens.len();
	jule::Slice<_23e730c0b_Token> _96617_true_expr = _225247b9e_range(_96517_i,jule::Str("{", 1),jule::Str("}", 1),_95336_tokens);
	if (_96617_true_expr == nullptr) {
		(*this)._method_push_err(_95417_ter->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_95417_ter);
	} else if (_96617_true_expr.len() == 0LL) {
		(*this)._method_push_err(_95336_tokens[_95817_expr_tokens.len()],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_96517_i >= _95336_tokens.len()) {
		(*this)._method_push_err(_95417_ter->_field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>());
		return jule::Any(_95417_ter);
	}
	_23e730c0b_Token _98013_else_token = _95336_tokens[_96517_i];
	if (_98013_else_token._field_id != 17LLU) {
		(*this)._method_push_err(_98013_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>());
		return jule::Any(_95417_ter);
	}
	(_96517_i)++;
	jule::I64 _98813_j = _96517_i;
	jule::Slice<_23e730c0b_Token> _98917_false_expr = _225247b9e_range(_96517_i,jule::Str("{", 1),jule::Str("}", 1),_95336_tokens);
	if (_98917_false_expr == nullptr) {
		(*this)._method_push_err(_98013_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_95417_ter);
	} else if (_98917_false_expr.len() == 0LL) {
		(*this)._method_push_err(_95336_tokens[_98813_j],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_96517_i < _95336_tokens.len()) {
		(*this)._method_push_err(_95336_tokens[_96517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_95417_ter->_field_true_expr=(*this)._method_build_kind(_96617_true_expr);
	_95417_ter->_field_false_expr=(*this)._method_build_kind(_98917_false_expr);
	return jule::Any(_95417_ter);
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_data(jule::Slice<_23e730c0b_Token>& _100834_tokens) {
	{
		auto _match_expr{ _100834_tokens.len() };
		if (_match_expr == 0LL) {
			_case_begin_5551809456:;
			{
				return jule::Any(nullptr);
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_5551809552:;
			{
				return (*this)._method_build_single(_100834_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_5551809648:;
			{
				if (_100834_tokens[0LL]._field_id == 31LLU) {
					return jule::Any((*this)._method_build_cpp_linked_ident(_100834_tokens));
				}
			}
		}
		_match_end_5551809072:;
	}
	_23e730c0b_Token _102217_token = _100834_tokens[0LL];
	{
		auto &_match_expr{ _102217_token._field_id };
		if (_match_expr == 16LLU) {
			_case_begin_5551816224:;
			{
				return (*this)._method_build_ternary(_100834_tokens);
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5551816320:;
			{
				if ((_100834_tokens.len() > 1LL) && (_102217_token._field_kind == jule::Str("*", 1))) {
					_102217_token=_100834_tokens[1LL];
					if ((_102217_token._field_id == 1LLU) || (_102217_token._field_id == 35LLU)) {
						return jule::Any((*this)._method_build_type(_100834_tokens));
					}
				}
				return jule::Any((*this)._method_build_unary(_100834_tokens));
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5551816416:;
			{
				if (_100834_tokens.len() < 3LL) {
					goto _match_end_5551815984;
				}
				if (_100834_tokens.len() > 3LL) {
					_23e730c0b_Token _104521_t = _100834_tokens[_100834_tokens.len() - 1LL];
					if ((_104521_t._field_id == 3LLU) && (_104521_t._field_kind == jule::Str(")", 1))) {
						goto _match_end_5551815984;
					}
				}
				_23e730c0b_Token _105117_next = _100834_tokens[1LL];
				if ((_105117_next._field_id != 3LLU) || (_105117_next._field_kind != jule::Str("]", 1))) {
					goto _match_end_5551815984;
				}
				return jule::Any((*this)._method_build_type(_100834_tokens));
			}
		}
		_match_end_5551815984:;
	}
	_102217_token=_100834_tokens[_100834_tokens.len() - 1LL];
	{
		auto &_match_expr{ _102217_token._field_id };
		if (_match_expr == 2LLU) {
			_case_begin_5551817040:;
			{
				return (*this)._method_build_sub_ident(_100834_tokens);
			}
		}
		else if (_match_expr == 1LLU) {
			_case_begin_5551817136:;
			{
				return jule::Any((*this)._method_build_type(_100834_tokens));
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5551817232:;
			{
				return (*this)._method_build_op_right(_100834_tokens);
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5551817328:;
			{
				{
					auto &_match_expr{ _102217_token._field_kind };
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_5551834064:;
						{
							return (*this)._method_build_parentheses_range(_100834_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_5551834160:;
						{
							return (*this)._method_build_brace_range(_100834_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_5551835392:;
						{
							return (*this)._method_build_bracket_range(_100834_tokens);
						}
					}
					_match_end_5551833952:;
				}
			}
		}
		_match_end_5551828944:;
	}
	(*this)._method_push_err(_102217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_23e45734a_BinopExpr> _225059ab0_ExprBuilder::_method_build_binop(jule::Slice<_23e730c0b_Token>& _108835_tokens,jule::Int _108852_i) {
	jule::Slice<_23e730c0b_Token> _108917_left_tokens = _108835_tokens.slice(0LL,_108852_i);
	jule::Slice<_23e730c0b_Token> _109017_right_tokens = _108835_tokens.slice(_108852_i + 1LL);
	if (_108917_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_108835_tokens[_108852_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_109017_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_108835_tokens[_108852_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_23e45734a_BinopExpr>(new( std::nothrow ) _23e45734a_BinopExpr((*this)._method_build(_108917_left_tokens),(*this)._method_build(_109017_right_tokens),_108835_tokens[_108852_i]));
}



inline jule::Any _225059ab0_ExprBuilder::_method_build(jule::Slice<_23e730c0b_Token>& _111129_tokens) {
	jule::Int _111213_i = _225059ab0_find_lowest_prec_op(_111129_tokens);
	if (_111213_i == -1LL) {
		return (*this)._method_build_data(_111129_tokens);
	}
	return jule::Any((*this)._method_build_binop(_111129_tokens,_111213_i));
}



inline jule::Any _225059ab0_ExprBuilder::_method_build_kind(jule::Slice<_23e730c0b_Token>& _111934_tokens) {
	jule::Slice<jule::Slice<_23e730c0b_Token>> _112018_parts;
	jule::Slice<_23ceb0c1d_Log> _112025_errors;
	std::tie(_112018_parts,_112025_errors) = _225247b9e_parts(_111934_tokens,8LLU,true);
	if (_112025_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_112025_errors);
		return jule::Any(nullptr);
	} else if (_112018_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_112018_parts));
	}
	return (*this)._method_build(_111934_tokens);
}



inline jule::Ptr<_23e45734a_Expr> _225059ab0_ExprBuilder::_method_build_from_tokens(jule::Slice<_23e730c0b_Token> _113040_tokens) {
	_113040_tokens=_225059ab0_eliminate_comments(_113040_tokens);
	if (_113040_tokens.len() == 0LL) {
		return nullptr;
	}
	return jule::new_struct<_23e45734a_Expr>(new( std::nothrow ) _23e45734a_Expr(_113040_tokens[0LL],(*this)._method_build_kind(_113040_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _225059ab0_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _225247b9e_Parser::_method_stop(void) {
	(*this)._field_ast=nullptr;
}



inline jule::Bool _225247b9e_Parser::_method_stopped(void) {
	return (*this)._field_ast == nullptr;
}



inline void _225247b9e_Parser::_method_push_err(_23e730c0b_Token _23927_token,jule::Str _23941_fmt,jule::Slice<jule::Any> _23954_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_225247b9e_compiler_err(_23927_token,_23941_fmt,_23954_args));
}



inline void _225247b9e_Parser::_method_push_suggestion(jule::Str _24434_fmt,jule::Slice<jule::Any> _24447_args) {
	{
		_225247b9e_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_24434_fmt,_24447_args);
	}
}



inline jule::Ptr<_23e45734a_Expr> _225247b9e_Parser::_method_build_expr(jule::Slice<_23e730c0b_Token>& _24835_tokens) {
	jule::Ptr<_225059ab0_ExprBuilder> _24917_ep = jule::new_struct<_225059ab0_ExprBuilder>(new( std::nothrow ) _225059ab0_ExprBuilder(this->self));
	jule::Ptr<_23e45734a_Expr> _25017_expr = _24917_ep->_method_build_from_tokens(_24835_tokens);
	return _25017_expr;
}



inline jule::Ptr<_23e45734a_Directive> _225247b9e_Parser::_method_build_directive(jule::Slice<_23e730c0b_Token> _25438_tokens) {
	if (_25438_tokens[0LL]._field_column > 1LL) {
		(*this)._method_push_err(_25438_tokens[0LL],jule::Str("directives must placed at beginning of line", 43),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_25438_tokens.len() == 1LL) {
		(*this)._method_push_err(_25438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_25438_tokens[1LL]._field_column != 2LL) {
		(*this)._method_push_err(_25438_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_23e45734a_Directive>(new( std::nothrow ) _23e45734a_Directive(_25438_tokens[1LL],_25438_tokens.slice(2LL)));
}



inline void _225247b9e_Parser::_method_push_directive(jule::Ptr<_23e45734a_Directive> _27437_d) {
	if (_27437_d == nullptr) {
		return;
	}
	{
		auto &expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_5551893600:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_Directive> &_225247b9e_pd = *it;
			{
				if (_27437_d->_field_tag._field_kind == _225247b9e_pd->_field_tag._field_kind) {
					return;
				}
			}
			_iter_next_5551893600:;
			++it;
			goto _iter_begin_5551893600;
		}
		_iter_end_5551893600:;
	}
	(*this)._field_directives = jule::alloc_for_append((*this)._field_directives,1);(*this)._field_directives.push(_27437_d);
}



inline void _225247b9e_Parser::_method_process_comment(jule::Ptr<_23e45734a_Comment>& _28839_c) {
	if ((*this)._field_comment_group == nullptr) {
		(*this)._field_comment_group=jule::new_struct<_23e45734a_CommentGroup>(new( std::nothrow ) _23e45734a_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments = jule::alloc_for_append((*this)._field_comment_group->_field_comments,1);(*this)._field_comment_group->_field_comments.push(_28839_c);
}



inline jule::Ptr<_23e45734a_ScopeTree> _225247b9e_Parser::_method_build_scope(jule::Slice<_23e730c0b_Token>& _29536_tokens) {
	jule::Ptr<_23e45734a_ScopeTree> _29617_s = _225040a63_new_scope();
	_225040a63_ScopeParser _29717_sp = _225040a63_ScopeParser(this->self,jule::Ptr<_23e45734a_ScopeTree>(),jule::Slice<jule::Ptr<_225040a63_Stmt>>(),jule::Int());
	_29717_sp._method_build(_29536_tokens,_29617_s);
	return _29617_s;
}



inline std::tuple<jule::Ptr<_23e45734a_TypeDecl>,jule::Bool> _225247b9e_Parser::_method___build_type(jule::Slice<_23e730c0b_Token>& _30444_tokens,jule::Int* _30513_i,jule::Bool _30522_err) {
	_225272404_TypeBuilder _30617_tb = _225272404_TypeBuilder(this->self,_30444_tokens,_30513_i,_30522_err);
	jule::Ptr<_23e45734a_TypeDecl> _31218_decl;
	jule::Bool _31224_ok;
	std::tie(_31218_decl,_31224_ok) = _30617_tb._method_build();
	return std::make_tuple(_31218_decl,_31224_ok);
}



inline std::tuple<jule::Ptr<_23e45734a_TypeDecl>,jule::Bool> _225247b9e_Parser::_method_build_type(jule::Slice<_23e730c0b_Token>& _31742_tokens,jule::Int* _31813_i,jule::Bool _31822_err) {
	_23e730c0b_Token _31913_token = _31742_tokens[(*(_31813_i))];
	jule::Ptr<_23e45734a_TypeDecl> _32018_t;
	jule::Bool _32021_ok;
	std::tie(_32018_t,_32021_ok) = this->self->_method___build_type(_31742_tokens,_31813_i,_31822_err);
	if (_31822_err && (!(_32021_ok))) {
		this->self->_method_push_err(_31913_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
	}
	return std::make_tuple(_32018_t,_32021_ok);
}



inline jule::Ptr<_23e45734a_TypeAliasDecl> _225247b9e_Parser::_method_build_type_alias_decl(jule::Slice<_23e730c0b_Token>& _32746_tokens) {
	jule::Int _32817_i = 1LL;
	if (_32817_i >= _32746_tokens.len()) {
		this->self->_method_push_err(_32746_tokens[_32817_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_23e45734a_TypeAliasDecl> _33317_tad = jule::new_struct<_23e45734a_TypeAliasDecl>(new( std::nothrow ) _23e45734a_TypeAliasDecl(jule::Ptr<_23e45734a_ScopeTree>(),jule::Bool(),jule::Bool(),_32746_tokens[1LL],_32746_tokens[1LL]._field_kind,jule::Ptr<_23e45734a_TypeDecl>(),jule::Ptr<_23e45734a_CommentGroup>()));
	_23e730c0b_Token _33717_token = _32746_tokens[_32817_i];
	if (_33717_token._field_id != 2LLU) {
		this->self->_method_push_err(_33717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_32817_i)++;
	if (_32817_i >= _32746_tokens.len()) {
		this->self->_method_push_err(_32746_tokens[_32817_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _33317_tad;
	}
	_33717_token=_32746_tokens[_32817_i];
	if (_33717_token._field_id != 11LLU) {
		this->self->_method_push_err(_32746_tokens[_32817_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _33317_tad;
	}
	(_32817_i)++;
	if (_32817_i >= _32746_tokens.len()) {
		this->self->_method_push_err(_32746_tokens[_32817_i - 1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return _33317_tad;
	}
	jule::Ptr<_23e45734a_TypeDecl> _35818_t;
	jule::Bool _35821_ok;
	std::tie(_35818_t,_35821_ok) = this->self->_method_build_type(_32746_tokens,(&(_32817_i)),true);
	_33317_tad->_field_kind=_35818_t;
	if (_35821_ok && (_32817_i < _32746_tokens.len())) {
		this->self->_method_push_err(_32746_tokens[_32817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _33317_tad;
}



inline void _225247b9e_Parser::_method_build_var_type_and_expr(jule::Ptr<_23e45734a_VarDecl>& _36648_v,jule::Slice<_23e730c0b_Token>& _36666_tokens) {
	jule::Int _36717_i = 0LL;
	_23e730c0b_Token _36817_tok = _36666_tokens[_36717_i];
	if (_36817_tok._field_id == 11LLU) {
		(_36717_i)++;
		if ((_36717_i >= _36666_tokens.len()) || ((_36666_tokens[_36717_i]._field_id == 7LLU) && (_36666_tokens[_36717_i]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_36817_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
			return;
		}
		jule::Ptr<_23e45734a_TypeDecl> _37622_t;
		jule::Bool _37625_ok;
		std::tie(_37622_t,_37625_ok) = this->self->_method_build_type(_36666_tokens,(&(_36717_i)),true);
		if (_37625_ok) {
			_36648_v->_field_kind=_37622_t;
			if (_36717_i >= _36666_tokens.len()) {
				return;
			}
			_36817_tok=_36666_tokens[_36717_i];
		}
	}
	if (_36817_tok._field_id == 7LLU) {
		if (_36817_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_36817_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		jule::Slice<_23e730c0b_Token> _39121_expr_tokens = _36666_tokens.slice(_36717_i + 1LL);
		if (_39121_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_36817_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;
		}
		_36648_v->_field_expr=this->self->_method_build_expr(_39121_expr_tokens);
	} else {
		this->self->_method_push_err(_36817_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _225247b9e_Parser::_method_build_var_common(jule::Ptr<_23e45734a_VarDecl>& _40241_v,jule::Slice<_23e730c0b_Token> _40258_tokens) {
	_40241_v->_field_token=_40258_tokens[0LL];
	if (_40241_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_40241_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	_40241_v->_field_ident=_40241_v->_field_token._field_kind;
	_40241_v->_field_kind=nullptr;
	if (_40258_tokens.len() > 1LL) {
		_40258_tokens=_40258_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_40241_v,_40258_tokens);
	}
}



inline void _225247b9e_Parser::_method_build_var_begin(jule::Ptr<_23e45734a_VarDecl>& _41739_v,jule::Ptr<jule::Int> _41756_i,jule::Slice<_23e730c0b_Token>& _41766_tokens) {
	_23e730c0b_Token _41813_tok = _41766_tokens[(*(_41756_i))];
	{
		auto &_match_expr{ _41813_tok._field_id };
		if (_match_expr == 38LLU) {
			_case_begin_5551987088:;
			{
				_41739_v->_field_statically=true;
				goto _case_begin_5551987184;
			}
		}
		else if (_match_expr == 34LLU) {
			_case_begin_5551987184:;
			{
				((*(_41756_i)))++;
				if ((*(_41756_i)) >= _41766_tokens.len()) {
					(*this)._method_push_err(_41813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				if (_41766_tokens[(*(_41756_i))]._field_id == 36LLU) {
					_41739_v->_field_mutable=true;
					((*(_41756_i)))++;
				}
			}
		}
		else if (_match_expr == 9LLU) {
			_case_begin_5551985536:;
			{
				((*(_41756_i)))++;
				_41739_v->_field_constant=true;
			}
		}
		else {
			_case_begin_5551984128:;
			{
				(*this)._method_push_err(_41813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_5551984752:;
	}
	if ((*(_41756_i)) >= _41766_tokens.len()) {
		(*this)._method_push_err(_41813_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_23e45734a_VarDecl> _225247b9e_Parser::_method_build_var(jule::Slice<_23e730c0b_Token> _45133_tokens) {
	jule::Ptr<jule::Int> _45217_i = jule::new_ptr<jule::Int>(0LL);
	jule::Ptr<_23e45734a_VarDecl> _45317_v = jule::new_struct<_23e45734a_VarDecl>(new( std::nothrow ) _23e45734a_VarDecl(jule::Ptr<_23e45734a_ScopeTree>(),_45133_tokens[(*(_45217_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Ptr<_23e45734a_CommentGroup>(),jule::Ptr<_23e45734a_TypeDecl>(),jule::Ptr<_23e45734a_Expr>()));
	this->self->_method_build_var_begin(_45317_v,_45217_i,_45133_tokens);
	if ((*(_45217_i)) >= _45133_tokens.len()) {
		return nullptr;
	}
	_45133_tokens=_45133_tokens.slice((*(_45217_i)));
	if ((_45133_tokens[0LL]._field_id == 7LLU) && (_45133_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_45317_v->_field_reference=true;
		if (_45133_tokens.len() == 1LL) {
			return nullptr;
		}
		_45133_tokens=_45133_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_45317_v,_45133_tokens);
	return _45317_v;
}



inline jule::Ptr<_23e45734a_GenericDecl> _225247b9e_Parser::_method_build_generic(jule::Slice<_23e730c0b_Token>& _47337_tokens) {
	if (_47337_tokens.len() > 1LL) {
		(*this)._method_push_err(_47337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_23e45734a_GenericDecl> _47717_g = jule::new_struct<_23e45734a_GenericDecl>(new( std::nothrow ) _23e45734a_GenericDecl(_47337_tokens[0LL],jule::Str()));
	if (_47717_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_47717_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_47717_g->_field_ident=_47717_g->_field_token._field_kind;
	return _47717_g;
}



inline jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> _225247b9e_Parser::_method_build_generics(jule::Slice<_23e730c0b_Token>& _48838_tokens,_23e730c0b_Token& _48856_error_token) {
	if (_48838_tokens.len() == 0LL) {
		(*this)._method_push_err(_48856_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Slice<_23e730c0b_Token>> _49418_parts;
	jule::Slice<_23ceb0c1d_Log> _49425_errors;
	std::tie(_49418_parts,_49425_errors) = _225247b9e_parts(_48838_tokens,8LLU,true);
	if (_49425_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_49425_errors);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> _50017_generics = jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>::alloc(0LL,static_cast<jule::I64>(_49418_parts.len()));
	{
		auto &expr = _49418_parts;
		auto it = expr.begin();
		_iter_begin_5552022176:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225247b9e_part = *it;
			{
				_50017_generics.push((*this)._method_build_generic(_225247b9e_part));
			}
			_iter_next_5552022176:;
			++it;
			goto _iter_begin_5552022176;
		}
		_iter_end_5552022176:;
	}
	return _50017_generics;
}



inline jule::Ptr<_23e45734a_ParamDecl> _225247b9e_Parser::_method_build_self_param(jule::Slice<_23e730c0b_Token> _50839_tokens) {
	if (_50839_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_23e45734a_ParamDecl> _51317_param = jule::new_struct<_23e45734a_ParamDecl>(new( std::nothrow ) _23e45734a_ParamDecl());
	jule::Int _51617_i = 0LL;
	if (_50839_tokens[_51617_i]._field_id == 36LLU) {
		_51317_param->_field_mutable=true;
		(_51617_i)++;
		if (_51617_i >= _50839_tokens.len()) {
			(*this)._method_push_err(_50839_tokens[_51617_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_50839_tokens[_51617_i]._field_kind == jule::Str("&", 1)) {
		_51317_param->_field_ident=jule::Str("&", 1);
		(_51617_i)++;
		if (_51617_i >= _50839_tokens.len()) {
			(*this)._method_push_err(_50839_tokens[_51617_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_50839_tokens[_51617_i]._field_id == 28LLU) {
		_51317_param->_field_ident+=jule::Str("self", 4);
		_51317_param->_field_token=_50839_tokens[_51617_i];
		(_51617_i)++;
		if (_51617_i < _50839_tokens.len()) {
			(*this)._method_push_err(_50839_tokens[_51617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	}
	return _51317_param;
}



inline void _225247b9e_Parser::_method_param_type_begin(jule::Ptr<_23e45734a_ParamDecl>& _54740_param,jule::Int& _54764_i,jule::Slice<_23e730c0b_Token>& _54773_tokens) {
	for (; _54764_i < _54773_tokens.len(); (_54764_i)++) {
		{
			_23e730c0b_Token _54917_token = _54773_tokens[_54764_i];
			if (_54917_token._field_id != 7LLU) {
				return;
			} else if (_54917_token._field_kind != jule::Str("...", 3)) {
				return;
			}
			if (_54740_param->_field_variadic) {
				(*this)._method_push_err(_54917_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_5552044240;
			}
			_54740_param->_field_variadic=true;
		}
	_iter_next_5552044240:;
	}
	_iter_end_5552044240:;
}



inline void _225247b9e_Parser::_method_build_param_type(jule::Ptr<_23e45734a_ParamDecl>& _56441_param,jule::Slice<_23e730c0b_Token>& _56465_tokens) {
	jule::Int _56517_i = 0LL;
	this->self->_method_param_type_begin(_56441_param,_56517_i,_56465_tokens);
	if (_56517_i >= _56465_tokens.len()) {
		return;
	}
	std::tie(_56441_param->_field_kind,std::ignore) = this->self->_method_build_type(_56465_tokens,(&(_56517_i)),true);
	if (_56517_i < _56465_tokens.len()) {
		this->self->_method_push_err(_56465_tokens[_56517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _225247b9e_Parser::_method_param_body_id(jule::Ptr<_23e45734a_ParamDecl> _57732_param,_23e730c0b_Token _57751_token) {
	if (_23e730c0b_is_ignore_ident(_57751_token._field_kind)) {
		_57732_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_57732_param->_field_ident=_57751_token._field_kind;
}



inline void _225247b9e_Parser::_method_build_param_body(jule::Ptr<_23e45734a_ParamDecl>& _58541_param,jule::Ptr<jule::Int> _58564_i,jule::Slice<_23e730c0b_Token> _58577_tokens) {
	this->self->_method_param_body_id(_58541_param,_58577_tokens[(*(_58564_i))]);
	_23e730c0b_Token _58717_tok = _58577_tokens[(*(_58564_i))];
	if (((*(_58564_i)) + 1LL) >= _58577_tokens.len()) {
		return;
	} else if (((_58577_tokens.len() - (*(_58564_i))) - 1LL) < 2LL) {
		this->self->_method_push_err(_58717_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return;
	}
	_58717_tok=_58577_tokens[(*(_58564_i)) + 1LL];
	if (_58717_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_58541_param,_58577_tokens);
		return;
	}
	_58577_tokens=_58577_tokens.slice((*(_58564_i)) + 2LL);
	this->self->_method_build_param_type(_58541_param,_58577_tokens);
}



inline jule::Ptr<_23e45734a_ParamDecl> _225247b9e_Parser::_method_build_param(jule::Slice<_23e730c0b_Token> _60635_tokens) {
	jule::Ptr<_23e45734a_ParamDecl> _60717_param = jule::new_struct<_23e45734a_ParamDecl>(new( std::nothrow ) _23e45734a_ParamDecl(_60635_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e45734a_TypeDecl>(),jule::Str()));
	if (_60717_param->_field_token._field_id == 36LLU) {
		_60717_param->_field_mutable=true;
		if (_60635_tokens.len() == 1LL) {
			this->self->_method_push_err(_60635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_60635_tokens=_60635_tokens.slice(1LL);
		_60717_param->_field_token=_60635_tokens[0LL];
	}
	if (_60635_tokens.len() >= 3LL) {
		if ((_60717_param->_field_token._field_id == 7LLU) && (_60717_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_60635_tokens.len() == 1LL) {
				this->self->_method_push_err(_60635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((_60635_tokens[1LL]._field_id == 2LLU) && (_60635_tokens[2LL]._field_id == 11LLU)) {
				_60717_param->_field_reference=true;
				_60635_tokens=_60635_tokens.slice(1LL);
				_60717_param->_field_token=_60635_tokens[0LL];
			}
		}
	}
	if (_60717_param->_field_token._field_id != 2LLU) {
		_60717_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_60717_param,_60635_tokens);
	} else {
		jule::Ptr<jule::Int> _64321_i = jule::new_ptr<jule::Int>(0LL);
		this->self->_method_build_param_body(_60717_param,_64321_i,_60635_tokens);
	}
	return _60717_param;
}



inline void _225247b9e_Parser::_method_check_params(jule::Slice<jule::Ptr<_23e45734a_ParamDecl>>& _65036_params) {
	{
		auto &expr = _65036_params;
		auto it = expr.begin();
		_iter_begin_5552095152:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_ParamDecl> _225247b9e_param = *it;
			{
				if (_225247b9e_param->_method_is_self() || (_225247b9e_param->_field_kind != nullptr)) {
					goto _iter_next_5552095152;
				}
				if (_225247b9e_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_225247b9e_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
				} else {
					_225247b9e_param->_field_kind=jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_225247b9e_param->_field_token,jule::Any(jule::new_struct<_23e45734a_IdentTypeDecl>(new( std::nothrow ) _23e45734a_IdentTypeDecl(_225247b9e_param->_field_token,_225247b9e_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_23e45734a_TypeDecl>>())))));
					_225247b9e_param->_field_ident=jule::Str("<anonymous>", 11);
					_225247b9e_param->_field_token=_23e730c0b_Token();
				}
			}
			_iter_next_5552095152:;
			++it;
			goto _iter_begin_5552095152;
		}
		_iter_end_5552095152:;
	}
}



inline jule::Slice<jule::Ptr<_23e45734a_ParamDecl>> _225247b9e_Parser::_method_build_params(jule::Slice<_23e730c0b_Token>& _67137_tokens,jule::Bool _67154_method) {
	jule::Slice<jule::Slice<_23e730c0b_Token>> _67218_parts;
	jule::Slice<_23ceb0c1d_Log> _67225_errs;
	std::tie(_67218_parts,_67225_errs) = _225247b9e_parts(_67137_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_67225_errs);
	if (_67218_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_23e45734a_ParamDecl>> _67817_params = nullptr;
	if (_67154_method && (_67218_parts.len() > 0LL)) {
		jule::Ptr<_23e45734a_ParamDecl> _68021_param = this->self->_method_build_self_param(_67218_parts[0LL]);
		if ((_68021_param != nullptr) && _68021_param->_method_is_self()) {
			_67817_params.push(_68021_param);
			_67218_parts=_67218_parts.slice(1LL);
		}
	}
	{
		auto &expr = _67218_parts;
		auto it = expr.begin();
		_iter_begin_5552111856:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225247b9e_part = *it;
			{
				jule::Ptr<_23e45734a_ParamDecl> _68821_param = this->self->_method_build_param(_225247b9e_part);
				if (_68821_param != nullptr) {
					_67817_params.push(_68821_param);
				}
			}
			_iter_next_5552111856:;
			++it;
			goto _iter_begin_5552111856;
		}
		_iter_end_5552111856:;
	}
	this->self->_method_check_params(_67817_params);
	return _67817_params;
}



inline std::tuple<jule::Ptr<_23e45734a_RetTypeDecl>,jule::Bool> _225247b9e_Parser::_method_build_multi_ret_type(jule::Slice<_23e730c0b_Token>& _69845_tokens,jule::Int& _69867_i) {
	jule::Ptr<_23e45734a_RetTypeDecl> _69877_t = jule::Ptr<_23e45734a_RetTypeDecl>();
	jule::Bool _69894_ok = jule::Bool();
	_69877_t=jule::new_struct<_23e45734a_RetTypeDecl>(new( std::nothrow ) _23e45734a_RetTypeDecl());
	(_69867_i)++;
	if (_69867_i >= _69845_tokens.len()) {
		(_69867_i)--;
		std::tie(_69877_t->_field_kind,_69894_ok) = this->self->_method_build_type(_69845_tokens,(&(_69867_i)),false);
		return std::make_tuple(_69877_t,_69894_ok);
	}
	(_69867_i)--;
	jule::Slice<_23e730c0b_Token> _70817_range_tokens = _225247b9e_range(_69867_i,jule::Str("(", 1),jule::Str(")", 1),_69845_tokens);
	jule::Slice<jule::Slice<_23e730c0b_Token>> _71018_parts;
	jule::Slice<_23ceb0c1d_Log> _71025_errs;
	std::tie(_71018_parts,_71025_errs) = _225247b9e_parts(_70817_range_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_71025_errs);
	if (_71018_parts.len() == 0LL) {
		return std::make_tuple(_69877_t,_69894_ok);
	}
	jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> _71617_types = jule::Slice<jule::Ptr<_23e45734a_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_71018_parts.len()));
	_69877_t->_field_idents=jule::Slice<_23e730c0b_Token>::alloc(0LL,static_cast<jule::I64>(_71018_parts.len()));
	{
		auto &expr = _71018_parts;
		auto it = expr.begin();
		_iter_begin_5552129792:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225247b9e_part = *it;
			{
				_23e730c0b_Token _71921_token = _225247b9e_part[0LL];
				jule::Int _72021_offset = 0LL;
				if (_225247b9e_part.len() > 1LL) {
					_71921_token=_225247b9e_part[1LL];
					if (_71921_token._field_id == 11LLU) {
						_72021_offset=2LL;
						if (_225247b9e_part.len() < 3LL) {
							this->self->_method_push_err(_71921_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
							goto _iter_next_5552129792;
						}
					}
				}
				_71921_token=_225247b9e_part[0LL];
				if (_72021_offset == 2LL) {
					if (_71921_token._field_id != 2LLU) {
					}
					_69877_t->_field_idents = jule::alloc_for_append(_69877_t->_field_idents,1);_69877_t->_field_idents.push(_71921_token);
				} else {
					_71921_token._field_kind=jule::Str("_", 1);
					_69877_t->_field_idents = jule::alloc_for_append(_69877_t->_field_idents,1);_69877_t->_field_idents.push(_71921_token);
				}
				jule::Ptr<_23e45734a_TypeDecl> _74522_t;
				std::tie(_74522_t,std::ignore) = this->self->_method_build_type(_225247b9e_part,(&(_72021_offset)),true);
				if (_72021_offset < _225247b9e_part.len()) {
					this->self->_method_push_err(_225247b9e_part[_72021_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_71617_types.push(_74522_t);
			}
			_iter_next_5552129792:;
			++it;
			goto _iter_begin_5552129792;
		}
		_iter_end_5552129792:;
	}
	if (_71617_types.len() > 1LL) {
		_69877_t->_field_kind=jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_69845_tokens[0LL],jule::Any(jule::new_struct<_23e45734a_TupleTypeDecl>(new( std::nothrow ) _23e45734a_TupleTypeDecl(_71617_types)))));
	} else {
		_69877_t->_field_kind=_71617_types[0LL];
	}
	_69894_ok=true;
	return std::make_tuple(_69877_t,_69894_ok);
}



inline std::tuple<jule::Ptr<_23e45734a_RetTypeDecl>,jule::Bool> _225247b9e_Parser::_method_build_ret_type(jule::Slice<_23e730c0b_Token>& _76839_tokens,jule::Int& _76861_i) {
	jule::Ptr<_23e45734a_RetTypeDecl> _76871_t = jule::Ptr<_23e45734a_RetTypeDecl>();
	jule::Bool _76888_ok = jule::Bool();
	_76871_t=jule::new_struct<_23e45734a_RetTypeDecl>(new( std::nothrow ) _23e45734a_RetTypeDecl());
	if (_76861_i >= _76839_tokens.len()) {
		return std::make_tuple(_76871_t,_76888_ok);
	}
	_23e730c0b_Token _77417_token = _76839_tokens[_76861_i];
	{
		auto &_match_expr{ _77417_token._field_id };
		if (_match_expr == 3LLU) {
			_case_begin_5552154608:;
			{
				if (_77417_token._field_kind == jule::Str("{", 1)) {
					return std::make_tuple(_76871_t,_76888_ok);
				}
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5552154704:;
			{
				if (_77417_token._field_kind == jule::Str("=", 1)) {
					return std::make_tuple(_76871_t,_76888_ok);
				}
			}
		}
		else if (_match_expr == 11LLU) {
			_case_begin_5552154848:;
			{
				if ((_76861_i + 1LL) >= _76839_tokens.len()) {
					this->self->_method_push_err(_77417_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
					return std::make_tuple(_76871_t,_76888_ok);
				}
				(_76861_i)++;
				_77417_token=_76839_tokens[_76861_i];
				if (_77417_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _77417_token._field_kind };
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_5552162224:;
							{
								jule::Ptr<_23e45734a_RetTypeDecl> _79730_decl;
								jule::Bool _79736_ok;
								std::tie(_79730_decl,_79736_ok) = this->self->_method_build_multi_ret_type(_76839_tokens,_76861_i);
								_76871_t = _79730_decl;
								_76888_ok = _79736_ok;
								return std::make_tuple(_76871_t,_76888_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_5552162320:;
							{
								this->self->_method_push_err(_77417_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
								return std::make_tuple(_76871_t,_76888_ok);
							}
						}
						_match_end_5552162096:;
					}
				}
				std::tie(_76871_t->_field_kind,_76888_ok) = this->self->_method_build_type(_76839_tokens,(&(_76861_i)),true);
				return std::make_tuple(_76871_t,_76888_ok);
			}
		}
		_match_end_5552154528:;
	}
	(_76861_i)++;
	this->self->_method_push_err(_77417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_76871_t,_76888_ok);
}



inline jule::Ptr<_23e45734a_FnDecl> _225247b9e_Parser::_method_build_fn_prototype(jule::Slice<_23e730c0b_Token>& _81643_tokens,jule::Int& _81665_i,jule::Bool _81673_method) {
	jule::Ptr<_23e45734a_FnDecl> _81717_f = jule::new_struct<_23e45734a_FnDecl>(new( std::nothrow ) _23e45734a_FnDecl(_81643_tokens[_81665_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Ptr<_23e45734a_CommentGroup>(),jule::Ptr<_23e45734a_ScopeTree>(),jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>(),jule::Ptr<_23e45734a_RetTypeDecl>(),jule::Slice<jule::Ptr<_23e45734a_ParamDecl>>()));
	if (_81717_f->_field_token._field_id == 38LLU) {
		_81717_f->_field_statically=true;
		(_81665_i)++;
		if (_81665_i >= _81643_tokens.len()) {
			this->self->_method_push_err(_81717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_81717_f->_field_token=_81643_tokens[_81665_i];
	}
	if (_81717_f->_field_token._field_id == 35LLU) {
		_81717_f->_field_unsafety=true;
		(_81665_i)++;
		if (_81665_i >= _81643_tokens.len()) {
			this->self->_method_push_err(_81717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_81717_f->_field_token=_81643_tokens[_81665_i];
	}
	(_81665_i)++;
	if (_81665_i >= _81643_tokens.len()) {
		this->self->_method_push_err(_81717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_23e730c0b_Token _85013_tok = _81643_tokens[_81665_i];
	if (_85013_tok._field_id == 2LLU) {
		(_81665_i)++;
		if (_81665_i >= _81643_tokens.len()) {
			this->self->_method_push_err(_81717_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_81717_f->_field_ident=_85013_tok._field_kind;
	} else {
		_81717_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_23e730c0b_Token _86213_error_token = _81643_tokens[_81665_i];
	jule::Slice<_23e730c0b_Token> _86317_generics_tokens = _225247b9e_range(_81665_i,jule::Str("[", 1),jule::Str("]", 1),_81643_tokens);
	if (_86317_generics_tokens != nullptr) {
		_81717_f->_field_generics=this->self->_method_build_generics(_86317_generics_tokens,_86213_error_token);
	}
	if (_81643_tokens[_81665_i]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_81643_tokens[_81665_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_23e730c0b_Token> _87317_params_toks = _225247b9e_range(_81665_i,jule::Str("(", 1),jule::Str(")", 1),_81643_tokens);
	if (_87317_params_toks.len() > 0LL) {
		_81717_f->_field_params=this->self->_method_build_params(_87317_params_toks,_81673_method);
	}
	if (_81665_i < _81643_tokens.len()) {
		_23e730c0b_Token _87917_token = _81643_tokens[_81665_i];
		if ((_87917_token._field_id == 7LLU) && (_87917_token._field_kind == jule::Str("!", 1))) {
			_81717_f->_field_exceptional=true;
			(_81665_i)++;
		}
	}
	std::tie(_81717_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_81643_tokens,_81665_i);
	return _81717_f;
}



inline jule::Ptr<_23e45734a_FnDecl> _225247b9e_Parser::_method_build_fn(jule::Slice<_23e730c0b_Token>& _89233_tokens,jule::Bool _89250_method,jule::Bool _89264_prototype) {
	jule::Int _89317_i = 0LL;
	jule::Ptr<_23e45734a_FnDecl> _89417_f = this->self->_method_build_fn_prototype(_89233_tokens,_89317_i,_89250_method);
	if (_89264_prototype) {
		if (_89317_i < _89233_tokens.len()) {
			this->self->_method_push_err(_89233_tokens[_89317_i + 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		return _89417_f;
	} else if (_89417_f == nullptr) {
		return _89417_f;
	}
	if (_89317_i >= _89233_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_89417_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_23e730c0b_Token> _91017_block_tokens = _225247b9e_range(_89317_i,jule::Str("{", 1),jule::Str("}", 1),_89233_tokens);
	if (_91017_block_tokens != nullptr) {
		_89417_f->_field_scope=this->self->_method_build_scope(_91017_block_tokens);
		_89417_f->_field_scope->_field_unsafety=_89417_f->_field_unsafety;
		if (_89317_i < _89233_tokens.len()) {
			this->self->_method_push_err(_89233_tokens[_89317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_89417_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _89417_f;
}



inline jule::Slice<_23e730c0b_Token> _225247b9e_Parser::_method_get_use_decl_selectors(jule::Slice<_23e730c0b_Token> _92645_tokens) {
	jule::Int _92717_i = 0LL;
	_92645_tokens=_225247b9e_range(_92717_i,jule::Str("{", 1),jule::Str("}", 1),_92645_tokens);
	jule::Slice<jule::Slice<_23e730c0b_Token>> _92918_parts;
	jule::Slice<_23ceb0c1d_Log> _92925_errs;
	std::tie(_92918_parts,_92925_errs) = _225247b9e_parts(_92645_tokens,8LLU,true);
	if (_92925_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_92925_errs);
		return nullptr;
	}
	jule::Slice<_23e730c0b_Token> _93517_selectors = jule::Slice<_23e730c0b_Token>::alloc(0LL,static_cast<jule::I64>(_92918_parts.len()));
	{
		auto &expr = _92918_parts;
		auto it = expr.begin();
		_iter_begin_5552242144:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225247b9e_part = *it;
			{
				if (_225247b9e_part.len() > 1LL) {
					(*this)._method_push_err(_225247b9e_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_23e730c0b_Token _94021_tok = _225247b9e_part[0LL];
				if ((_94021_tok._field_id != 2LLU) && (_94021_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_94021_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_5552242144;
				}
				_93517_selectors.push(_94021_tok);
			}
			_iter_next_5552242144:;
			++it;
			goto _iter_begin_5552242144;
		}
		_iter_end_5552242144:;
	}
	return _93517_selectors;
}



inline void _225247b9e_Parser::_method_build_cpp_use_decl(jule::Ptr<_23e45734a_UseDecl>& _95142_decl,jule::Slice<_23e730c0b_Token>& _95159_tokens) {
	if (_95159_tokens.len() > 1LL) {
		(*this)._method_push_err(_95159_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_23e730c0b_Token _95513_token = _95159_tokens[0LL];
	if ((_95513_token._field_id != 6LLU) || ((_95513_token._field_kind[0LL] != '`') && (_95513_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_95513_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	_95142_decl->_field_cpp_linked=true;
	_95142_decl->_field_link_path=_95513_token._field_kind.slice(1LL,_95513_token._field_kind.len() - 1LL);
	if ((!(_23ceb0954_is_std_header_path(_95142_decl->_field_link_path)))) {
		_95142_decl->_field_link_path=_23d08e2c4_join(jule::Slice<jule::Str>({_95513_token._field_file->_method_dir(),_95142_decl->_field_link_path}));
	}
}



inline void _225247b9e_Parser::_method_build_std_use_decl(jule::Ptr<_23e45734a_UseDecl>& _96742_decl,jule::Slice<_23e730c0b_Token> _96762_tokens) {
	_96742_decl->_field_std=true;
	_23e730c0b_Token _97017_token = _96762_tokens[0LL];
	if (_96762_tokens.len() < 3LL) {
		(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_96762_tokens=_96762_tokens.slice(2LL);
	_97017_token=_96762_tokens[_96762_tokens.len() - 1LL];
	{
		auto &_match_expr{ _97017_token._field_id };
		if (_match_expr == 23LLU) {
			_case_begin_5552270592:;
			{
				(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5552270688:;
			{
				if (_97017_token._field_kind != jule::Str("}", 1)) {
					(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_23e730c0b_Token> _98821_selectors = nullptr;
				std::tie(_96762_tokens,_98821_selectors) = _225247b9e_range_last(_96762_tokens);
				_96742_decl->_field_selected=(*this)._method_get_use_decl_selectors(_98821_selectors);
				if (_96762_tokens.len() == 0LL) {
					(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_97017_token=_96762_tokens[_96762_tokens.len() - 1LL];
				if (_97017_token._field_id != 23LLU) {
					(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_96762_tokens=_96762_tokens.slice(0LL,_96762_tokens.len() - 1LL);
				if (_96762_tokens.len() == 0LL) {
					(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5552270784:;
			{
				if (_97017_token._field_kind != jule::Str("*", 1)) {
					(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_96762_tokens=_96762_tokens.slice(0LL,_96762_tokens.len() - 1LL);
				if (_96762_tokens.len() == 0LL) {
					(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_97017_token=_96762_tokens[_96762_tokens.len() - 1LL];
				if (_97017_token._field_id != 23LLU) {
					(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_96762_tokens=_96762_tokens.slice(0LL,_96762_tokens.len() - 1LL);
				if (_96762_tokens.len() == 0LL) {
					(*this)._method_push_err(_97017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_96742_decl->_field_full=true;
			}
		}
		_match_end_5552270512:;
	}
	_96742_decl->_field_link_path=jule::Str("std::", 5) + _225247b9e_tokstoa(_96762_tokens);
}



inline void _225247b9e_Parser::_method_build_ident_use_decl(jule::Ptr<_23e45734a_UseDecl>& _103144_decl,jule::Slice<_23e730c0b_Token> _103164_tokens) {
	_103144_decl->_field_std=false;
	_23e730c0b_Token _103417_token = _103164_tokens[_103164_tokens.len() - 1LL];
	{
		auto &_match_expr{ _103417_token._field_id };
		if (_match_expr == 23LLU) {
			_case_begin_5552296272:;
			{
				(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5552298544:;
			{
				if (_103417_token._field_kind != jule::Str("}", 1)) {
					(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_23e730c0b_Token> _104621_selectors = nullptr;
				std::tie(_103164_tokens,_104621_selectors) = _225247b9e_range_last(_103164_tokens);
				_103144_decl->_field_selected=(*this)._method_get_use_decl_selectors(_104621_selectors);
				if (_103164_tokens.len() == 0LL) {
					(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_103417_token=_103164_tokens[_103164_tokens.len() - 1LL];
				if (_103417_token._field_id != 23LLU) {
					(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_103164_tokens=_103164_tokens.slice(0LL,_103164_tokens.len() - 1LL);
				if (_103164_tokens.len() == 0LL) {
					(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5552298640:;
			{
				if (_103417_token._field_kind != jule::Str("*", 1)) {
					(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_103164_tokens=_103164_tokens.slice(0LL,_103164_tokens.len() - 1LL);
				if (_103164_tokens.len() == 0LL) {
					(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_103417_token=_103164_tokens[_103164_tokens.len() - 1LL];
				if (_103417_token._field_id != 23LLU) {
					(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_103164_tokens=_103164_tokens.slice(0LL,_103164_tokens.len() - 1LL);
				if (_103164_tokens.len() == 0LL) {
					(*this)._method_push_err(_103417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_103144_decl->_field_full=true;
			}
		}
		_match_end_5552298272:;
	}
	_103144_decl->_field_link_path=_225247b9e_tokstoa(_103164_tokens);
}



inline void _225247b9e_Parser::_method_parse_use_decl(jule::Ptr<_23e45734a_UseDecl>& _109638_decl,jule::Slice<_23e730c0b_Token> _109658_tokens) {
	if (_109638_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_109638_decl,_109658_tokens);
		return;
	}
	_23e730c0b_Token _110217_token = _109658_tokens[0LL];
	if (_110217_token._field_id != 2LLU) {
		(*this)._method_push_err(_110217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	if ((_109658_tokens.len() > 2LL) && (_109658_tokens[1LL]._field_id == 12LLU)) {
		_109638_decl->_field_alias=_110217_token._field_kind;
		if (_109658_tokens[2LL]._field_id != 2LLU) {
			(*this)._method_push_err(_110217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;
		}
		_109658_tokens=_109658_tokens.slice(2LL);
		_110217_token=_109658_tokens[0LL];
	}
	
	{
		if (_110217_token._field_kind == jule::Str("std", 3)) {
			_case_begin_5552336768:;
			{
				(*this)._method_build_std_use_decl(_109638_decl,_109658_tokens);
			}
		}
		else {
			_case_begin_5552335968:;
			{
				(*this)._method_build_ident_use_decl(_109638_decl,_109658_tokens);
			}
		}
		_match_end_5552335856:;
	}
}



inline jule::Ptr<_23e45734a_UseDecl> _225247b9e_Parser::_method_build_use_decl(jule::Slice<_23e730c0b_Token> _113137_tokens,jule::Bool _113154_cpp_linked) {
	jule::Ptr<_23e45734a_UseDecl> _113217_decl = jule::new_struct<_23e45734a_UseDecl>(new( std::nothrow ) _23e45734a_UseDecl(_113137_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_23e730c0b_Token>(),_113154_cpp_linked,jule::Bool()));
	if (_113137_tokens.len() < 2LL) {
		(*this)._method_push_err(_113217_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	}
	_113137_tokens=_113137_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_113217_decl,_113137_tokens);
	return _113217_decl;
}



inline jule::Ptr<_23e45734a_Expr> _225247b9e_Parser::_method_build_enum_item_expr(jule::Ptr<jule::Int> _114544_i,jule::Slice<_23e730c0b_Token>& _114558_tokens) {
	jule::Int _114617_brace_n = 0LL;
	jule::Int _114713_expr_start = (*(_114544_i));
	for (; (*(_114544_i)) < _114558_tokens.len(); ((*(_114544_i)))++) {
		{
			_23e730c0b_Token _114917_t = _114558_tokens[(*(_114544_i))];
			if (_114917_t._field_id == 3LLU) {
				{
					auto &_match_expr{ _114917_t._field_kind };
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_5552356096:;
						{
							(_114617_brace_n)++;
							goto _iter_next_5552351008;
						}
					}
					else {
						_case_begin_5552354336:;
						{
							(_114617_brace_n)--;
						}
					}
					_match_end_5552354432:;
				}
			}
			if (_114617_brace_n > 0LL) {
				goto _iter_next_5552351008;
			}
			if ((_114917_t._field_id == 8LLU) || (((*(_114544_i)) + 1LL) >= _114558_tokens.len())) {
				jule::Slice<_23e730c0b_Token> _116825_expr_tokens = nullptr;
				if (_114917_t._field_id == 8LLU) {
					_116825_expr_tokens=_114558_tokens.slice(_114713_expr_start,(*(_114544_i)));
				} else {
					_116825_expr_tokens=_114558_tokens.slice(_114713_expr_start);
				}
				return this->self->_method_build_expr(_116825_expr_tokens);
			}
		}
	_iter_next_5552351008:;
	}
	_iter_end_5552351008:;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_23e45734a_EnumItemDecl>> _225247b9e_Parser::_method_build_enum_items(jule::Slice<_23e730c0b_Token>& _118041_tokens) {
	jule::Slice<jule::Ptr<_23e45734a_EnumItemDecl>> _118117_items = jule::Slice<jule::Ptr<_23e45734a_EnumItemDecl>>::alloc(0LL,1LL);
	jule::Ptr<jule::Int> _118217_i = jule::new_ptr<jule::Int>(0LL);
	for (; (*(_118217_i)) < _118041_tokens.len(); ((*(_118217_i)))++) {
		{
			_23e730c0b_Token _118421_t = _118041_tokens[(*(_118217_i))];
			if (_118421_t._field_id == 18LLU) {
				goto _iter_next_5552365520;
			}
			jule::Ptr<_23e45734a_EnumItemDecl> _118921_item = jule::new_struct<_23e45734a_EnumItemDecl>(new( std::nothrow ) _23e45734a_EnumItemDecl());
			_118921_item->_field_token=_118421_t;
			if (_118921_item->_field_token._field_id != 2LLU) {
				this->self->_method_push_err(_118921_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			}
			_118921_item->_field_ident=_118921_item->_field_token._field_kind;
			if ((((*(_118217_i)) + 1LL) >= _118041_tokens.len()) || (_118041_tokens[(*(_118217_i)) + 1LL]._field_id == 8LLU)) {
				if (((*(_118217_i)) + 1LL) < _118041_tokens.len()) {
					((*(_118217_i)))++;
				}
				_118117_items.push(_118921_item);
				goto _iter_next_5552365520;
			}
			((*(_118217_i)))++;
			_118421_t=_118041_tokens[(*(_118217_i))];
			((*(_118217_i)))++;
			if ((_118421_t._field_id != 7LLU) || (_118421_t._field_kind != jule::Str("=", 1))) {
				this->self->_method_push_err(_118421_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				this->self->_method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_5552365520;
			}
			if (((*(_118217_i)) >= _118041_tokens.len()) || (_118041_tokens[(*(_118217_i))]._field_id == 8LLU)) {
				this->self->_method_push_err(_118421_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_5552365520;
			}
			_118921_item->_field_expr=this->self->_method_build_enum_item_expr(_118217_i,_118041_tokens);
			_118117_items.push(_118921_item);
		}
	_iter_next_5552365520:;
	}
	_iter_end_5552365520:;
	return _118117_items;
}



inline jule::Ptr<_23e45734a_EnumDecl> _225247b9e_Parser::_method_build_enum_decl(jule::Slice<_23e730c0b_Token>& _122140_tokens) {
	if ((_122140_tokens.len() < 2LL) || (_122140_tokens.len() < 3LL)) {
		this->self->_method_push_err(_122140_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_23e45734a_EnumDecl> _122617_e = jule::new_struct<_23e45734a_EnumDecl>(new( std::nothrow ) _23e45734a_EnumDecl(_122140_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_23e45734a_TypeDecl>(),jule::Slice<jule::Ptr<_23e45734a_EnumItemDecl>>(),jule::Ptr<_23e45734a_CommentGroup>()));
	if (_122617_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_122617_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_122617_e->_field_ident=_122617_e->_field_token._field_kind;
	jule::Int _123417_i = 2LL;
	if (_122140_tokens[_123417_i]._field_id == 11LLU) {
		(_123417_i)++;
		if (_123417_i >= _122140_tokens.len()) {
			this->self->_method_push_err(_122140_tokens[_123417_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _122617_e;
		}
		std::tie(_122617_e->_field_kind,std::ignore) = this->self->_method_build_type(_122140_tokens,(&(_123417_i)),true);
		if (_123417_i >= _122140_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_122617_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _122617_e;
		}
	} else {
		_122617_e->_field_kind=nullptr;
	}
	jule::Slice<_23e730c0b_Token> _125117_item_tokens = _225247b9e_range(_123417_i,jule::Str("{", 1),jule::Str("}", 1),_122140_tokens);
	if (_125117_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_122617_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _122617_e;
	} else if (_123417_i < _122140_tokens.len()) {
		this->self->_method_push_err(_122140_tokens[_123417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_122617_e->_field_items=this->self->_method_build_enum_items(_125117_item_tokens);
	return _122617_e;
}



inline jule::Ptr<_23e45734a_FieldDecl> _225247b9e_Parser::_method_build_field(jule::Slice<_23e730c0b_Token> _126435_tokens) {
	jule::Ptr<_23e45734a_FieldDecl> _126517_f = jule::new_struct<_23e45734a_FieldDecl>(new( std::nothrow ) _23e45734a_FieldDecl());
	_126517_f->_field_public=_126435_tokens[0LL]._field_id == 21LLU;
	if (_126517_f->_field_public) {
		if (_126435_tokens.len() == 1LL) {
			this->self->_method_push_err(_126435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_126435_tokens=_126435_tokens.slice(1LL);
	}
	_126517_f->_field_mutable=_126435_tokens[0LL]._field_id == 36LLU;
	if (_126517_f->_field_mutable) {
		if (_126435_tokens.len() == 1LL) {
			this->self->_method_push_err(_126435_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_126435_tokens=_126435_tokens.slice(1LL);
	}
	_126517_f->_field_token=_126435_tokens[0LL];
	if (_126517_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_126517_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_126517_f->_field_ident=_126517_f->_field_token._field_kind;
	if (_126435_tokens.len() == 1LL) {
		this->self->_method_push_err(_126435_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_126435_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_126435_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	_126435_tokens=_126435_tokens.slice(2LL);
	jule::Int _130217_i = 0LL;
	std::tie(_126517_f->_field_kind,std::ignore) = this->self->_method_build_type(_126435_tokens,(&(_130217_i)),true);
	if (_130217_i < _126435_tokens.len()) {
		this->self->_method_push_err(_126435_tokens[_130217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _126517_f;
}



inline jule::Slice<jule::Ptr<_23e45734a_FieldDecl>> _225247b9e_Parser::_method_build_struct_decl_fields(jule::Slice<_23e730c0b_Token> _131248_tokens) {
	jule::Slice<jule::Ptr<_23e45734a_FieldDecl>> _131317_fields = nullptr;
	jule::Slice<jule::Ptr<_225040a63_Stmt>> _131417_stmts = _225040a63_split_stmts(_131248_tokens);
	{
		auto &expr = _131417_stmts;
		auto it = expr.begin();
		_iter_begin_5552438016:;
		if (it != expr.end()) {
			jule::Ptr<_225040a63_Stmt> _225247b9e_stmt = *it;
			{
				_131248_tokens=_225247b9e_stmt->_field_tokens;
				if (_131248_tokens[0LL]._field_id == 18LLU) {
					goto _iter_next_5552438016;
				}
				jule::Ptr<_23e45734a_FieldDecl> _132021_f = this->self->_method_build_field(_131248_tokens);
				_131317_fields.push(_132021_f);
			}
			_iter_next_5552438016:;
			++it;
			goto _iter_begin_5552438016;
		}
		_iter_end_5552438016:;
	}
	return _131317_fields;
}



inline jule::Ptr<_23e45734a_StructDecl> _225247b9e_Parser::_method_build_struct_decl(jule::Slice<_23e730c0b_Token>& _132642_tokens) {
	if (_132642_tokens.len() < 3LL) {
		this->self->_method_push_err(_132642_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Int _133217_i = 1LL;
	jule::Ptr<_23e45734a_StructDecl> _133317_s = jule::new_struct<_23e45734a_StructDecl>(new( std::nothrow ) _23e45734a_StructDecl(_132642_tokens[_133217_i],jule::Str(),jule::Slice<jule::Ptr<_23e45734a_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Ptr<_23e45734a_CommentGroup>(),jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>()));
	if (_133317_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_133317_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_133217_i)++;
	if (_133217_i >= _132642_tokens.len()) {
		this->self->_method_push_err(_132642_tokens[_133217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _133317_s;
	}
	_133317_s->_field_ident=_133317_s->_field_token._field_kind;
	_23e730c0b_Token _134713_error_token = _132642_tokens[_133217_i];
	jule::Slice<_23e730c0b_Token> _134817_generics_tokens = _225247b9e_range(_133217_i,jule::Str("[", 1),jule::Str("]", 1),_132642_tokens);
	if (_134817_generics_tokens != nullptr) {
		_133317_s->_field_generics=this->self->_method_build_generics(_134817_generics_tokens,_134713_error_token);
	}
	if (_133217_i >= _132642_tokens.len()) {
		this->self->_method_push_err(_132642_tokens[_133217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _133317_s;
	}
	jule::Slice<_23e730c0b_Token> _135717_body_tokens = _225247b9e_range(_133217_i,jule::Str("{", 1),jule::Str("}", 1),_132642_tokens);
	if (_135717_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_133317_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133317_s;
	}
	if (_133217_i < _132642_tokens.len()) {
		this->self->_method_push_err(_132642_tokens[_133217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_133317_s->_field_fields=this->self->_method_build_struct_decl_fields(_135717_body_tokens);
	return _133317_s;
}



inline void _225247b9e_Parser::_method_check_method_receiver(jule::Ptr<_23e45734a_FnDecl>& _137141_f) {
	if (_137141_f->_field_statically) {
		if ((_137141_f->_field_params.len() > 0LL) && _137141_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_137141_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		}
		return;
	}
	if (_137141_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_137141_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_23e45734a_ParamDecl> _138413_param = _137141_f->_field_params[0LL];
	if ((!(_138413_param->_method_is_self()))) {
		(*this)._method_push_err(_137141_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
}



inline jule::Slice<jule::Ptr<_23e45734a_FnDecl>> _225247b9e_Parser::_method_build_trait_methods(jule::Slice<_23e730c0b_Token> _139143_tokens) {
	jule::Slice<jule::Ptr<_23e45734a_FnDecl>> _139217_methods = nullptr;
	jule::Slice<jule::Ptr<_225040a63_Stmt>> _139317_stmts = _225040a63_split_stmts(_139143_tokens);
	{
		auto &expr = _139317_stmts;
		auto it = expr.begin();
		_iter_begin_5552483264:;
		if (it != expr.end()) {
			jule::Ptr<_225040a63_Stmt> _225247b9e_stmt = *it;
			{
				_139143_tokens=_225059ab0_eliminate_comments(_225247b9e_stmt->_field_tokens);
				if (_139143_tokens.len() == 0LL) {
					goto _iter_next_5552483264;
				}
				jule::Bool _140021_is_pub = false;
				if (_139143_tokens[0LL]._field_id == 21LLU) {
					_140021_is_pub=true;
					if (_139143_tokens.len() == 1LL) {
						this->self->_method_push_err(_139143_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_5552483264;
					}
					_139143_tokens=_139143_tokens.slice(1LL);
				}
				jule::Ptr<_23e45734a_FnDecl> _141021_f = this->self->_method_build_fn(_139143_tokens,true,true);
				if (_141021_f != nullptr) {
					if (_141021_f->_method_is_anon()) {
						this->self->_method_push_err(_141021_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
					this->self->_method_check_method_receiver(_141021_f);
					if (_141021_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_141021_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					}
					_141021_f->_field_public=_140021_is_pub;
					_139217_methods.push(_141021_f);
				}
			}
			_iter_next_5552483264:;
			++it;
			goto _iter_begin_5552483264;
		}
		_iter_end_5552483264:;
	}
	return _139217_methods;
}



inline jule::Ptr<_23e45734a_TraitDecl> _225247b9e_Parser::_method_build_trait_decl(jule::Slice<_23e730c0b_Token>& _142641_tokens) {
	if (_142641_tokens.len() < 3LL) {
		this->self->_method_push_err(_142641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_23e45734a_TraitDecl> _143117_t = jule::new_struct<_23e45734a_TraitDecl>(new( std::nothrow ) _23e45734a_TraitDecl(_142641_tokens[1LL],jule::Str(),jule::Bool(),jule::Ptr<_23e45734a_CommentGroup>(),jule::Slice<jule::Ptr<_23e45734a_FnDecl>>()));
	if (_143117_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_143117_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_143117_t->_field_ident=_143117_t->_field_token._field_kind;
	jule::Int _143917_i = 2LL;
	jule::Slice<_23e730c0b_Token> _144017_body_tokens = _225247b9e_range(_143917_i,jule::Str("{", 1),jule::Str("}", 1),_142641_tokens);
	if (_144017_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_143117_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_143917_i < _142641_tokens.len()) {
		this->self->_method_push_err(_142641_tokens[_143917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_143117_t->_field_methods=this->self->_method_build_trait_methods(_144017_body_tokens);
	return _143117_t;
}



inline jule::Ptr<_23e45734a_FnDecl> _225247b9e_Parser::_method_build_cpp_link_fn(jule::Slice<_23e730c0b_Token> _145441_tokens) {
	_145441_tokens=_145441_tokens.slice(1LL);
	jule::Ptr<_23e45734a_FnDecl> _145617_f = this->self->_method_build_fn(_145441_tokens,false,true);
	if (_145617_f != nullptr) {
		if (_145617_f->_method_is_anon()) {
			this->self->_method_push_err(_145617_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		_145617_f->_field_cpp_linked=true;
	}
	return _145617_f;
}



inline jule::Ptr<_23e45734a_VarDecl> _225247b9e_Parser::_method_build_cpp_link_var(jule::Slice<_23e730c0b_Token> _146642_tokens) {
	_146642_tokens=_146642_tokens.slice(1LL);
	jule::Ptr<_23e45734a_VarDecl> _146817_v = this->self->_method_build_var(_146642_tokens);
	if (_146817_v != nullptr) {
		_146817_v->_field_cpp_linked=true;
		if (_146817_v->_field_expr != nullptr) {
			this->self->_method_push_err(_146817_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		}
	}
	return _146817_v;
}



inline jule::Ptr<_23e45734a_StructDecl> _225247b9e_Parser::_method_build_cpp_link_struct(jule::Slice<_23e730c0b_Token> _147845_tokens) {
	_147845_tokens=_147845_tokens.slice(1LL);
	jule::Ptr<_23e45734a_StructDecl> _148017_s = this->self->_method_build_struct_decl(_147845_tokens);
	if (_148017_s != nullptr) {
		_148017_s->_field_cpp_linked=true;
	}
	return _148017_s;
}



inline jule::Ptr<_23e45734a_TypeAliasDecl> _225247b9e_Parser::_method_build_cpp_link_type_alias(jule::Slice<_23e730c0b_Token> _148749_tokens) {
	_148749_tokens=_148749_tokens.slice(1LL);
	jule::Ptr<_23e45734a_TypeAliasDecl> _148917_t = this->self->_method_build_type_alias_decl(_148749_tokens);
	if (_148917_t != nullptr) {
		_148917_t->_field_cpp_linked=true;
	}
	return _148917_t;
}



inline jule::Ptr<_23e45734a_UseDecl> _225247b9e_Parser::_method_build_cpp_link_use(jule::Slice<_23e730c0b_Token> _149642_tokens) {
	if (_149642_tokens.len() == 1LL) {
		this->self->_method_push_err(_149642_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_149642_tokens=_149642_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_149642_tokens,true);
}



inline jule::Any _225247b9e_Parser::_method_build_cpp_link(jule::Slice<_23e730c0b_Token>& _150739_tokens) {
	_23e730c0b_Token _150817_token = _150739_tokens[0LL];
	if (_150739_tokens.len() == 1LL) {
		this->self->_method_push_err(_150817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	_150817_token=_150739_tokens[1LL];
	{
		auto &_match_expr{ _150817_token._field_id };
		if (_match_expr == 19LLU) {
			_case_begin_5552550944:;
			{
				return jule::Any(this->self->_method_build_cpp_link_use(_150739_tokens));
			}
		}
		else if (_match_expr == 33LLU || _match_expr == 35LLU) {
			_case_begin_5552550208:;
			{
				return jule::Any(this->self->_method_build_cpp_link_fn(_150739_tokens));
			}
		}
		else if (_match_expr == 9LLU || _match_expr == 34LLU) {
			_case_begin_5552550304:;
			{
				return jule::Any(this->self->_method_build_cpp_link_var(_150739_tokens));
			}
		}
		else if (_match_expr == 25LLU) {
			_case_begin_5552550400:;
			{
				return jule::Any(this->self->_method_build_cpp_link_struct(_150739_tokens));
			}
		}
		else if (_match_expr == 10LLU) {
			_case_begin_5552550512:;
			{
				return jule::Any(this->self->_method_build_cpp_link_type_alias(_150739_tokens));
			}
		}
		else {
			_case_begin_5552547520:;
			{
				this->self->_method_push_err(_150817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_5552549904:;
	}
	return jule::Any(nullptr);
}



inline jule::Ptr<_23e45734a_FnDecl> _225247b9e_Parser::_method_get_method(jule::Slice<_23e730c0b_Token>& _153835_tokens) {
	jule::Int _153917_i = 0LL;
	_23e730c0b_Token _154017_token = _153835_tokens[_153917_i];
	if (_154017_token._field_id == 38LLU) {
		if ((_153917_i + 1LL) >= _153835_tokens.len()) {
			this->self->_method_push_err(_154017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_153917_i)++;
		_154017_token=_153835_tokens[_153917_i];
	}
	if (_154017_token._field_id == 35LLU) {
		if ((_153917_i + 1LL) >= _153835_tokens.len()) {
			this->self->_method_push_err(_154017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_153917_i)++;
		_154017_token=_153835_tokens[_153917_i];
	}
	if (_154017_token._field_id != 33LLU) {
		this->self->_method_push_err(_154017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_23e45734a_FnDecl> _156417_f = this->self->_method_build_fn(_153835_tokens,true,false);
	if ((_156417_f != nullptr) && _156417_f->_method_is_anon()) {
		this->self->_method_push_err(_156417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _156417_f;
}



inline void _225247b9e_Parser::_method_parse_impl_body(jule::Ptr<_23e45734a_Impl>& _157140_ipl,jule::Slice<_23e730c0b_Token>& _157157_tokens) {
	jule::Slice<jule::Ptr<_225040a63_Stmt>> _157217_stmts = _225040a63_split_stmts(_157157_tokens);
	{
		auto &expr = _157217_stmts;
		auto it = expr.begin();
		_iter_begin_5552578048:;
		if (it != expr.end()) {
			jule::Ptr<_225040a63_Stmt> _225247b9e_stmt = *it;
			{
				_157157_tokens=_225247b9e_stmt->_field_tokens;
				_23e730c0b_Token _157521_token = _157157_tokens[0LL];
				jule::Bool _157621_is_pub = false;
				{
					auto &_match_expr{ _157521_token._field_id };
					if (_match_expr == 18LLU) {
						_case_begin_5552582032:;
						{
							goto _iter_next_5552578048;
						}
					}
					else if (_match_expr == 21LLU) {
						_case_begin_5552582128:;
						{
							_157621_is_pub=true;
							if (_157157_tokens.len() == 1LL) {
								this->self->_method_push_err(_157157_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_5552578048;
							}
							_157157_tokens=_157157_tokens.slice(1LL);
							if (_157157_tokens.len() > 0LL) {
								_157521_token=_157157_tokens[0LL];
							}
						}
					}
					_match_end_5552581952:;
				}
				{
					auto &_match_expr{ _157521_token._field_id };
					if (_match_expr == 9LLU) {
						_case_begin_5552588544:;
						{
							jule::Ptr<_23e45734a_VarDecl> _159625_v = this->self->_method_build_var(_157157_tokens);
							if (_159625_v != nullptr) {
								_159625_v->_field_public=_157621_is_pub;
								_157140_ipl->_field_statics = jule::alloc_for_append(_157140_ipl->_field_statics,1);_157140_ipl->_field_statics.push(_159625_v);
							}
						}
					}
					else if (_match_expr == 38LLU || _match_expr == 33LLU || _match_expr == 35LLU) {
						_case_begin_5552583440:;
						{
							jule::Ptr<_23e45734a_FnDecl> _160525_f = this->self->_method_get_method(_157157_tokens);
							if (_160525_f != nullptr) {
								_160525_f->_field_public=_157621_is_pub;
								this->self->_method_check_method_receiver(_160525_f);
								_157140_ipl->_field_methods = jule::alloc_for_append(_157140_ipl->_field_methods,1);_157140_ipl->_field_methods.push(_160525_f);
							}
						}
					}
					else {
						_case_begin_5552584224:;
						{
							this->self->_method_push_err(_157521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_5552578048;
						}
					}
					_match_end_5552585216:;
				}
			}
			_iter_next_5552578048:;
			++it;
			goto _iter_begin_5552578048;
		}
		_iter_end_5552578048:;
	}
}



inline jule::Ptr<_23e45734a_Impl> _225247b9e_Parser::_method_build_impl(jule::Slice<_23e730c0b_Token> _161934_tokens) {
	_23e730c0b_Token _162017_token = _161934_tokens[0LL];
	if (_161934_tokens.len() < 2LL) {
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_162017_token=_161934_tokens[1LL];
	if (_162017_token._field_id != 2LLU) {
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_161934_tokens.len() < 3LL) {
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_23e45734a_Impl> _163517_ipl = jule::new_struct<_23e45734a_Impl>(new( std::nothrow ) _23e45734a_Impl(_162017_token,_23e730c0b_Token(),jule::Slice<jule::Ptr<_23e45734a_FnDecl>>(),jule::Slice<jule::Ptr<_23e45734a_VarDecl>>()));
	_162017_token=_161934_tokens[2LL];
	if (_162017_token._field_id != 12LLU) {
		if ((_162017_token._field_id == 3LLU) && (_162017_token._field_kind == jule::Str("{", 1))) {
			std::tie(_163517_ipl->_field_base,_163517_ipl->_field_dest) = std::make_tuple(_163517_ipl->_field_dest,_163517_ipl->_field_base);
			_161934_tokens=_161934_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_161934_tokens.len() < 4LL) {
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_162017_token=_161934_tokens[3LL];
	if (_162017_token._field_id != 2LLU) {
		this->self->_method_push_err(_162017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_163517_ipl->_field_dest=_162017_token;
	_161934_tokens=_161934_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _166517_i = 0LL;
	jule::Slice<_23e730c0b_Token> _166617_body_tokens = _225247b9e_range(_166517_i,jule::Str("{", 1),jule::Str("}", 1),_161934_tokens);
	if (_166617_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_163517_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_166517_i < _161934_tokens.len()) {
		this->self->_method_push_err(_161934_tokens[_166517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	this->self->_method_parse_impl_body(_163517_ipl,_166617_body_tokens);
	return _163517_ipl;
}



inline jule::Any _225247b9e_Parser::_method_build_node_data(jule::Slice<_23e730c0b_Token>& _168040_tokens) {
	_23e730c0b_Token _168117_token = _168040_tokens[0LL];
	{
		auto &_match_expr{ _168117_token._field_id };
		if (_match_expr == 19LLU) {
			_case_begin_5552632672:;
			{
				
				return jule::Any(this->self->_method_build_use_decl(_168040_tokens,false));
			}
		}
		else if (_match_expr == 33LLU || _match_expr == 35LLU) {
			_case_begin_5552633840:;
			{
				jule::Ptr<_23e45734a_FnDecl> _168921_f = this->self->_method_build_fn(_168040_tokens,false,false);
				if (_168921_f != nullptr) {
					_168921_f->_field_global=true;
					if (_168921_f->_method_is_anon()) {
						this->self->_method_push_err(_168921_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
				}
				return jule::Any(_168921_f);
			}
		}
		else if (_match_expr == 34LLU || _match_expr == 9LLU || _match_expr == 36LLU || _match_expr == 38LLU) {
			_case_begin_5552632016:;
			{
				return jule::Any(this->self->_method_build_var(_168040_tokens));
			}
		}
		else if (_match_expr == 10LLU) {
			_case_begin_5552632112:;
			{
				return jule::Any(this->self->_method_build_type_alias_decl(_168040_tokens));
			}
		}
		else if (_match_expr == 24LLU) {
			_case_begin_5552632208:;
			{
				return jule::Any(this->self->_method_build_enum_decl(_168040_tokens));
			}
		}
		else if (_match_expr == 25LLU) {
			_case_begin_5552632304:;
			{
				return jule::Any(this->self->_method_build_struct_decl(_168040_tokens));
			}
		}
		else if (_match_expr == 29LLU) {
			_case_begin_5552634352:;
			{
				return jule::Any(this->self->_method_build_trait_decl(_168040_tokens));
			}
		}
		else if (_match_expr == 30LLU) {
			_case_begin_5552634448:;
			{
				return jule::Any(this->self->_method_build_impl(_168040_tokens));
			}
		}
		else if (_match_expr == 31LLU) {
			_case_begin_5552634544:;
			{
				return this->self->_method_build_cpp_link(_168040_tokens);
			}
		}
		else if (_match_expr == 39LLU) {
			_case_begin_5552634640:;
			{
				return jule::Any(this->self->_method_build_directive(_168040_tokens));
			}
		}
		else if (_match_expr == 18LLU) {
			_case_begin_5552634736:;
			{
				jule::Ptr<_23e45734a_Comment> _172921_c = _225247b9e_build_comment(_168117_token);
				this->self->_method_process_comment(_172921_c);
				return jule::Any(_172921_c);
			}
		}
		else {
			_case_begin_5552630400:;
			{
				this->self->_method_push_err(_168117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_5552631232:;
	}
}



inline void _225247b9e_Parser::_method_check_comment_group(_23e45734a_Node& _173939_node) {
	if ((*this)._field_comment_group == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _173939_node._field_data };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_Comment>>() || _match_expr.type_is<jule::Ptr<_23e45734a_Directive>>()) {
			_case_begin_5552657568:;
		}
		else {
			_case_begin_5552656336:;
			{
				(*this)._field_comment_group=nullptr;
			}
		}
		_match_end_5552655600:;
	}
}



inline void _225247b9e_Parser::_method_check_directive(_23e45734a_Node& _175335_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _175335_node._field_data };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_Directive>>() || _match_expr.type_is<jule::Ptr<_23e45734a_Comment>>()) {
			_case_begin_5552662832:;
		}
		else {
			_case_begin_5552660800:;
			{
				if ((*this)._field_directives.len() != 0LL) {
					(*this)._method_push_err((*this)._field_directives[0LL]->_field_tag,jule::Str("this directive is out of scope, cant assign to any define", 57),jule::Slice<jule::Any>());
				}
				(*this)._field_directives=nullptr;
			}
		}
		_match_end_5552660064:;
	}
}



inline void _225247b9e_Parser::_method_apply_meta(_23e45734a_Node& _177134_node,jule::Bool _177150_is_pub) {
	{
		auto &_match_expr{ _177134_node._field_data };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_VarDecl>>()) {
			_case_begin_5552667328:;
			{
				jule::Ptr<_23e45734a_VarDecl> _177421_v = _177134_node._field_data.operator jule::Ptr<_23e45734a_VarDecl>();
				if (_177421_v == nullptr) {
					return;
				}
				_177421_v->_field_public=_177150_is_pub;
				_177150_is_pub=false;
				_177421_v->_field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				_177421_v->_field_directives=(*this)._field_directives;
				(*this)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_FnDecl>>()) {
			_case_begin_5552667840:;
			{
				jule::Ptr<_23e45734a_FnDecl> _178821_f = _177134_node._field_data.operator jule::Ptr<_23e45734a_FnDecl>();
				if (_178821_f == nullptr) {
					return;
				}
				_178821_f->_field_public=_177150_is_pub;
				_177150_is_pub=false;
				_178821_f->_field_directives=(*this)._field_directives;
				(*this)._field_directives=nullptr;
				_178821_f->_field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_TypeAliasDecl>>()) {
			_case_begin_5552667952:;
			{
				jule::Ptr<_23e45734a_TypeAliasDecl> _180121_tad = _177134_node._field_data.operator jule::Ptr<_23e45734a_TypeAliasDecl>();
				if (_180121_tad == nullptr) {
					return;
				}
				_180121_tad->_field_public=_177150_is_pub;
				_177150_is_pub=false;
				_180121_tad->_field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_EnumDecl>>()) {
			_case_begin_5552668048:;
			{
				jule::Ptr<_23e45734a_EnumDecl> _181121_ed = _177134_node._field_data.operator jule::Ptr<_23e45734a_EnumDecl>();
				if (_181121_ed == nullptr) {
					return;
				}
				_181121_ed->_field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				_181121_ed->_field_public=_177150_is_pub;
				_177150_is_pub=false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_StructDecl>>()) {
			_case_begin_5552668144:;
			{
				jule::Ptr<_23e45734a_StructDecl> _182121_sd = _177134_node._field_data.operator jule::Ptr<_23e45734a_StructDecl>();
				if (_182121_sd == nullptr) {
					return;
				}
				_182121_sd->_field_directives=(*this)._field_directives;
				(*this)._field_directives=nullptr;
				_182121_sd->_field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				_182121_sd->_field_public=_177150_is_pub;
				_177150_is_pub=false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_TraitDecl>>()) {
			_case_begin_5552668256:;
			{
				jule::Ptr<_23e45734a_TraitDecl> _183321_td = _177134_node._field_data.operator jule::Ptr<_23e45734a_TraitDecl>();
				if (_183321_td == nullptr) {
					return;
				}
				_183321_td->_field_doc_comments=(*this)._field_comment_group;
				(*this)._field_comment_group=nullptr;
				_183321_td->_field_public=_177150_is_pub;
				_177150_is_pub=false;
			}
		}
		_match_end_5552667648:;
	}
	if (_177150_is_pub) {
		(*this)._method_push_err(_177134_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
	}
}



inline void _225247b9e_Parser::_method_check_use_decl(_23e45734a_Node& _184734_node) {
	{
		auto &_match_expr{ _184734_node._field_data };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_UseDecl>>()) {
			_case_begin_5552695008:;
		}
		else {
			_case_begin_5552693696:;
			{
				return;
			}
		}
		_match_end_5552693920:;
	}
	if ((*this)._field_ast->_field_decls.len() > 0LL) {
		(*this)._method_push_err(_184734_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>());
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	}
}



inline std::tuple<jule::Bool,jule::Any> _225247b9e_Parser::_method_build_general_scope_node_data(jule::Slice<_23e730c0b_Token> _186253_st) {
	jule::Bool _186268_is_pub = jule::Bool();
	jule::Any _186282_data = jule::Any();
	if (_186253_st[0LL]._field_id == 21LLU) {
		_186268_is_pub=true;
		_186253_st=_186253_st.slice(1LL);
		if (_186253_st.len() == 0LL) {
			this->self->_method_push_err(_186253_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_186268_is_pub,_186282_data);
		}
	}
	_186282_data=this->self->_method_build_node_data(_186253_st);
	return std::make_tuple(_186268_is_pub,_186282_data);
}



inline _23e45734a_Node _225247b9e_Parser::_method_parse_node(jule::Slice<_23e730c0b_Token>& _187735_st) {
	_23e45734a_Node _187817_node = _23e45734a_Node(_187735_st[0LL],jule::Any());
	jule::Bool _188214_is_pub;
	jule::Any _188226_data;
	std::tie(_188214_is_pub,_188226_data) = this->self->_method_build_general_scope_node_data(_187735_st);
	if (_188226_data == nullptr) {
		return _187817_node;
	}
	_187817_node._field_data=_188226_data;
	this->self->_method_apply_meta(_187817_node,_188214_is_pub);
	this->self->_method_check_comment_group(_187817_node);
	this->self->_method_check_directive(_187817_node);
	this->self->_method_check_use_decl(_187817_node);
	return _187817_node;
}



inline void _225247b9e_Parser::_method_append_node(jule::Slice<_23e730c0b_Token>& _189636_st) {
	if (_189636_st.len() == 0LL) {
		return;
	}
	_23e45734a_Node _190117_node = this->self->_method_parse_node(_189636_st);
	if ((_190117_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (_190117_node._method_is_directive()) {
			_case_begin_5552723360:;
			{
				this->self->_method_push_directive(_190117_node._field_data.operator jule::Ptr<_23e45734a_Directive>());
			}
		}
		else if (_190117_node._method_is_use_decl()) {
			_case_begin_5552722912:;
			{
				this->self->_field_ast->_field_use_decls = jule::alloc_for_append(this->self->_field_ast->_field_use_decls,1);this->self->_field_ast->_field_use_decls.push(_190117_node._field_data.operator jule::Ptr<_23e45734a_UseDecl>());
			}
		}
		else if (_190117_node._method_is_decl()) {
			_case_begin_5552723008:;
			{
				this->self->_field_ast->_field_decls = jule::alloc_for_append(this->self->_field_ast->_field_decls,1);this->self->_field_ast->_field_decls.push(_190117_node);
			}
		}
		else if (_190117_node._method_is_comment()) {
			_case_begin_5552723104:;
			{
				jule::Ptr<_23e45734a_Comment> _191921_c = _190117_node._field_data.operator jule::Ptr<_23e45734a_Comment>();
				this->self->_field_ast->_field_comments = jule::alloc_for_append(this->self->_field_ast->_field_comments,1);this->self->_field_ast->_field_comments.push(_191921_c);
			}
		}
		else if (_190117_node._method_is_impl()) {
			_case_begin_5552723200:;
			{
				this->self->_field_ast->_field_impls = jule::alloc_for_append(this->self->_field_ast->_field_impls,1);this->self->_field_ast->_field_impls.push(_190117_node._field_data.operator jule::Ptr<_23e45734a_Impl>());
			}
		}
		else {
			_case_begin_5552722608:;
			{
				this->self->_method_push_err(_190117_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_5552721664:;
	}
}



inline void _225247b9e_Parser::_method_remove_range(jule::Int _193031_i,jule::Str _193039_kind,jule::Slice<_23e730c0b_Token>& _193051_tokens,jule::Slice<jule::Int>& _193073_ranges) {
	jule::Str _193113_close = _225247b9e_get_close_kind_of_brace(_193039_kind);
	for (; _193031_i >= 0LL; (_193031_i)--) {
		{
			_23e730c0b_Token _193317_tok = _193051_tokens[_193073_ranges[_193031_i]];
			if (_193317_tok._field_kind != _193113_close) {
				goto _iter_next_5552717312;
			}
			_193073_ranges=jule::append(_193073_ranges.slice(0LL,_193031_i),_193073_ranges.slice(_193031_i + 1LL));
			goto _iter_end_5552717312;
		}
	_iter_next_5552717312:;
	}
	_iter_end_5552717312:;
}



inline void _225247b9e_Parser::_method_push_wrong_order_close_err(_23e730c0b_Token& _194346_t,jule::Slice<_23e730c0b_Token>& _194357_tokens,jule::Slice<jule::Int>& _194375_ranges) {
	{
		auto &_match_expr{ _194357_tokens[_194375_ranges[_194375_ranges.len() - 1LL]]._field_kind };
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_5552747344:;
			{
				(*this)._method_push_err(_194346_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_5552747440:;
			{
				(*this)._method_push_err(_194346_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_5552747536:;
			{
				(*this)._method_push_err(_194346_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_5552747248:;
	}
}



inline void _225247b9e_Parser::_method_push_range_close(_23e730c0b_Token _195135_t,jule::Str _195145_left,jule::Slice<_23e730c0b_Token>& _195157_tokens,jule::Slice<jule::Int>& _195179_ranges) {
	jule::I64 _195213_n = _195179_ranges.len();
	if (_195213_n == 0LL) {
		{
			auto &_match_expr{ _195135_t._field_kind };
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_5552758704:;
				{
					(*this)._method_push_err(_195135_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_5552758880:;
				{
					(*this)._method_push_err(_195135_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_5552758976:;
				{
					(*this)._method_push_err(_195135_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_5552758576:;
		}
		return;
	} else if (_195157_tokens[_195179_ranges[_195213_n - 1LL]]._field_kind != _195145_left) {
		(*this)._method_push_wrong_order_close_err(_195135_t,_195157_tokens,_195179_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_195213_n - 1LL),_195135_t._field_kind,_195157_tokens,_195179_ranges);
}



inline void _225247b9e_Parser::_method_check_ranges(jule::Slice<_23e730c0b_Token>& _196632_tokens) {
	jule::Slice<jule::Int> _196717_ranges = nullptr;
	{
		auto &expr = _196632_tokens;
		auto it = expr.begin();
		_iter_begin_5552769680:;
		if (it != expr.end()) {
			jule::Int _225247b9e_i = it - expr.begin();
			_23e730c0b_Token &_225247b9e_token = *it;
			{
				if (_225247b9e_token._field_id != 3LLU) {
					goto _iter_next_5552769680;
				}
				{
					auto &_match_expr{ _225247b9e_token._field_kind };
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_5552772544:;
						{
							_196717_ranges.push(_225247b9e_i);
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_5552772640:;
						{
							(*this)._method_push_range_close(_225247b9e_token,jule::Str("(", 1),_196632_tokens,_196717_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_5552773088:;
						{
							(*this)._method_push_range_close(_225247b9e_token,jule::Str("{", 1),_196632_tokens,_196717_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_5552773184:;
						{
							(*this)._method_push_range_close(_225247b9e_token,jule::Str("[", 1),_196632_tokens,_196717_ranges);
						}
					}
					_match_end_5552771728:;
				}
			}
			_iter_next_5552769680:;
			++it;
			_225247b9e_i++;
			goto _iter_begin_5552769680;
		}
		_iter_end_5552769680:;
	}
	{
		auto &expr = _196717_ranges;
		auto it = expr.begin();
		_iter_begin_5552777584:;
		if (it != expr.end()) {
			jule::Int &_225247b9e_i = *it;
			{
				_23e730c0b_Token _199217_token = _196632_tokens[_225247b9e_i];
				{
					auto &_match_expr{ _199217_token._field_kind };
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_5552781424:;
						{
							(*this)._method_push_err(_199217_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_5552781520:;
						{
							(*this)._method_push_err(_199217_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_5552781632:;
						{
							(*this)._method_push_err(_199217_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_5552781344:;
				}
			}
			_iter_next_5552777584:;
			++it;
			goto _iter_begin_5552777584;
		}
		_iter_end_5552777584:;
	}
}



inline void _225247b9e_Parser::_method_parse(jule::Ptr<_23e4593c4_File>& _200130_f) {
	this->self->_field_ast=jule::new_struct<_23e249d96_Ast>(new( std::nothrow ) _23e249d96_Ast(_200130_f,jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Slice<jule::Ptr<_23e45734a_UseDecl>>(),jule::Slice<jule::Ptr<_23e45734a_Impl>>(),jule::Slice<jule::Ptr<_23e45734a_Comment>>(),jule::Slice<_23e45734a_Node>()));
	jule::Slice<_23e730c0b_Token> _200617_tokens = _200130_f->_method_tokens();
	this->self->_method_check_ranges(_200617_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_225040a63_Stmt>> _201217_stmts = _225040a63_split_stmts(_200617_tokens);
	jule::Int _201517_i = 0LL;
	_julec_label_iter:;
	for (; _201517_i < _201217_stmts.len(); (_201517_i)++) {
		{
			jule::Ptr<_225040a63_Stmt> _201821_stmt = _201217_stmts[_201517_i];
			if (_201821_stmt->_field_tokens.len() == 0LL) {
				return;
			}
			jule::Any _202325_data;
			std::tie(std::ignore,_202325_data) = this->self->_method_build_general_scope_node_data(_201821_stmt->_field_tokens);
			if (_202325_data == nullptr) {
				goto _iter_end_5552791408;
			}
			if (this->self->_method_stopped()) {
				return;
			}
			{
				auto &_match_expr{ _202325_data };
				if (_match_expr.type_is<jule::Ptr<_23e45734a_Directive>>()) {
					_case_begin_5552798448:;
					{
						jule::Ptr<_23e45734a_Directive> _203425_d = _202325_data.operator jule::Ptr<_23e45734a_Directive>();
						if ((_203425_d != nullptr) && _23d01326a_is_top_directive(_203425_d->_field_tag._field_kind)) {
							this->self->_field_ast->_field_top_directives = jule::alloc_for_append(this->self->_field_ast->_field_top_directives,1);this->self->_field_ast->_field_top_directives.push(_203425_d);
						} else {
							goto _iter_end_5552791408;
						}
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_23e45734a_Comment>>() || _match_expr.type_is<jule::Ptr<_23e45734a_CommentGroup>>()) {
					_case_begin_5552798544:;
				}
				else {
					_case_begin_5552797584:;
					{
						goto _iter_end_5552791408;
					}
				}
				_match_end_5552797952:;
			}
		}
	_iter_next_5552791408:;
	}
	_iter_end_5552791408:;
	this->self->_field_errors=nullptr;
	for (; _201517_i < _201217_stmts.len(); (_201517_i)++) {
		{
			jule::Ptr<_225040a63_Stmt> _205421_stmt = _201217_stmts[_201517_i];
			this->self->_method_append_node(_205421_stmt->_field_tokens);
			if (this->self->_method_stopped()) {
				goto _iter_end_5552803088;
			}
		}
	_iter_next_5552803088:;
	}
	_iter_end_5552803088:;
}







std::ostream &operator<<(std::ostream &_Stream, const _225247b9e_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _225272404_TypeBuilder::_method_push_err(_23e730c0b_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>());
	}
}



inline void _225272404_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggestion(_8534_fmt,_8547_args);
	}
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_prim(void) {
	jule::Ptr<_23e45734a_TypeDecl> _9217_t = _225272404_build_prim_type((*this)._field_tokens[(*((*this)._field_i))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_namespace(void) {
	jule::Ptr<_23e45734a_TypeDecl> _9817_t = jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl((*this)._field_tokens[(*((*this)._field_i))],jule::Any()));
	jule::Ptr<_23e45734a_NamespaceTypeDecl> _10217_nst = jule::new_struct<_23e45734a_NamespaceTypeDecl>(new( std::nothrow ) _23e45734a_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_23e730c0b_Token _10521_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (jule::unsafe_mod(_10317_n,2LL) == 0LL) {
				if (_10521_token._field_id != 2LLU) {
					(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				}
				_10217_nst->_field_idents = jule::alloc_for_append(_10217_nst->_field_idents,1);_10217_nst->_field_idents.push(_10521_token);
			} else if (_10521_token._field_id != 23LLU) {
				goto _iter_end_5552821600;
			}
			(_10317_n)++;
		}
	_iter_next_5552821600:;
	}
	_iter_end_5552821600:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,_10217_nst->_field_idents.len() - 1LL);
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ptr<_23e45734a_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> _225272404_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_23e730c0b_Token _13113_token = (*this)._field_tokens[(*((*this)._field_i))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_23e730c0b_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_23e45734a_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_23e45734a_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_13617_parts.len()));
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_5552844064:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _225272404_part = *it;
			{
				jule::Int _14421_j = 0LL;
				jule::Ptr<_23e45734a_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_225272404_part,(&(_14421_j)),true);
				if (_14421_j < _225272404_part.len()) {
					(*this)._method_push_err(_225272404_part[_14421_j],jule::Str("invalid syntax", 14));
				}
				_14217_types.push(_14522_t);
			}
			_iter_next_5552844064:;
			++it;
			goto _iter_begin_5552844064;
		}
		_iter_end_5552844064:;
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_23e730c0b_Token>> _225272404_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_23e730c0b_Token _15817_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (_15817_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _15817_token._field_kind };
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_5552855616:;
						{
							(_15617_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_5552855728:;
						{
							(_15617_range_n)--;
						}
					}
					_match_end_5552855136:;
				}
			}
			if (_15617_range_n == 0LL) {
				((*((*this)._field_i)))++;
				goto _iter_end_5552851616;
			}
		}
	_iter_next_5552851616:;
	}
	_iter_end_5552851616:;
	jule::Slice<_23e730c0b_Token> _17017_tokens = (*this)._field_tokens.slice(_15513_first + 1LL,(*((*this)._field_i)) - 1LL);
	jule::Slice<jule::Slice<_23e730c0b_Token>> _17118_parts;
	jule::Slice<_23ceb0c1d_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _225247b9e_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_23e730c0b_Token _18217_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_23e45734a_IdentTypeDecl> _18317_it = jule::new_struct<_23e45734a_IdentTypeDecl>(new( std::nothrow ) _23e45734a_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ptr<_23e45734a_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	}
	(*((*this)._field_i))+=2LL;
	jule::Ptr<_23e45734a_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ptr<_23e45734a_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_fn(void) {
	_23e730c0b_Token _20817_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_23e45734a_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if (_20917_f == nullptr) {
		return nullptr;
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_ptr(void) {
	_23e730c0b_Token _22317_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[(*((*this)._field_i))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_22317_token,jule::Any(jule::new_struct<_23e45734a_PtrTypeDecl>(new( std::nothrow ) _23e45734a_PtrTypeDecl(nullptr)))));
	}
	jule::Ptr<_23e45734a_TypeDecl> _24017_elem = (*this)._method_step();
	if (_24017_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_22317_token,jule::Any(jule::new_struct<_23e45734a_PtrTypeDecl>(new( std::nothrow ) _23e45734a_PtrTypeDecl(_24017_elem)))));
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_sptr(void) {
	_23e730c0b_Token _25417_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	jule::Ptr<_23e45734a_TypeDecl> _26117_elem = (*this)._method_step();
	if (_26117_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_25417_token,jule::Any(jule::new_struct<_23e45734a_SptrTypeDecl>(new( std::nothrow ) _23e45734a_SptrTypeDecl(_26117_elem)))));
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_op(void) {
	_23e730c0b_Token _27517_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto &_match_expr{ _27517_token._field_kind };
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_5552908864:;
			{
				return (*this)._method_build_ptr();
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_5552908960:;
			{
				return (*this)._method_build_sptr();
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_5552908608:;
			{
				return jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_23e730c0b_Token(),jule::Any(jule::new_struct<_23e45734a_SptrTypeDecl>(new( std::nothrow ) _23e45734a_SptrTypeDecl((*this)._method_build_sptr())))));
			}
		}
		else {
			_case_begin_5552905200:;
			{
				(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_5552906096:;
	}
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_slc(void) {
	_23e730c0b_Token _29717_token = (*this)._field_tokens[(*((*this)._field_i))];
	((*((*this)._field_i)))++;
	jule::Ptr<_23e45734a_TypeDecl> _29917_elem = (*this)._method_step();
	if (_29917_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_29717_token,jule::Any(jule::new_struct<_23e45734a_SlcTypeDecl>(new( std::nothrow ) _23e45734a_SlcTypeDecl(_29917_elem)))));
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i)) - 1LL],jule::Str("data-type missing", 17));
		return nullptr;
	}
	jule::Int _32013_expr_delta = (*((*this)._field_i));
	jule::Ptr<_23e45734a_TypeDecl> _32217_elem = (*this)._method_step();
	if (_32217_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_23e45734a_ArrTypeDecl> _32717_arrt = jule::new_struct<_23e45734a_ArrTypeDecl>(new( std::nothrow ) _23e45734a_ArrTypeDecl(_32217_elem,jule::Ptr<_23e45734a_Expr>()));
	jule::Slice<_23e730c0b_Token> _33117_expr_tokens = (*this)._field_tokens.slice(0LL,_32013_expr_delta);
	std::tie(std::ignore,_33117_expr_tokens) = _225247b9e_range_last(_33117_expr_tokens);
	_33117_expr_tokens=_33117_expr_tokens.slice(1LL,_33117_expr_tokens.len() - 1LL);
	_23e730c0b_Token _33417_token = _33117_expr_tokens[0LL];
	if (((_33117_expr_tokens.len() == 1LL) && (_33417_token._field_id == 7LLU)) && (_33417_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32717_arrt->_field_size=(*this)._field_p->_method_build_expr(_33117_expr_tokens);
	}
	return jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_33417_token,jule::Any(_32717_arrt)));
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_map(jule::Int _34728_colon,jule::Slice<_23e730c0b_Token>& _34745_tokens) {
	_23e730c0b_Token _34817_colon_token = (*this)._field_tokens[_34728_colon];
	if ((_34728_colon == 0LL) || ((_34728_colon + 1LL) >= _34745_tokens.len())) {
		(*this)._method_push_err(_34817_colon_token,jule::Str("data-type missing", 17));
		return nullptr;
	}
	jule::Slice<_23e730c0b_Token> _35317_key_tokens = _34745_tokens.slice(0LL,_34728_colon);
	jule::Slice<_23e730c0b_Token> _35417_val_tokens = _34745_tokens.slice(_34728_colon + 1LL);
	jule::Ptr<_23e45734a_MapTypeDecl> _35517_mapt = jule::new_struct<_23e45734a_MapTypeDecl>(new( std::nothrow ) _23e45734a_MapTypeDecl());
	jule::Int _35717_j = 0LL;
	jule::Ptr<_23e45734a_TypeDecl> _35818_keyt;
	jule::Bool _35828_ok;
	std::tie(_35818_keyt,_35828_ok) = (*this)._field_p->_method_build_type(_35317_key_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < _35317_key_tokens.len()) {
		(*this)._method_push_err(_35317_key_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt->_field_key=_35818_keyt;
	_35717_j=0LL;
	jule::Ptr<_23e45734a_TypeDecl> _36718_valt;
	std::tie(_36718_valt,_35828_ok) = (*this)._field_p->_method_build_type(_35417_val_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < _35417_val_tokens.len()) {
		(*this)._method_push_err(_35417_val_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt->_field_val=_36718_valt;
	return jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_34817_colon_token,jule::Any(_35517_mapt)));
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_build_enumerable(void) {
	_23e730c0b_Token _38217_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_38217_token._field_id != 3LLU)) || (_38217_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_38217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	_38217_token=(*this)._field_tokens[(*((*this)._field_i))];
	if ((_38217_token._field_id == 3LLU) && (_38217_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_23e730c0b_Token> _39618_map_tokens;
	jule::Int _39630_colon;
	std::tie(_39618_map_tokens,_39630_colon) = _225272404_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39630_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39630_colon,_39618_map_tokens);
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_TypeBuilder::_method_step(void) {
	_23e730c0b_Token _40513_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto &_match_expr{ _40513_token._field_id };
		if (_match_expr == 1LLU) {
			_case_begin_5552965584:;
			{
				return (*this)._method_build_prim();
			}
		}
		else if (_match_expr == 2LLU) {
			_case_begin_5552965680:;
			{
				return (*this)._method_build_ident();
			}
		}
		else if (_match_expr == 31LLU) {
			_case_begin_5552967312:;
			{
				return (*this)._method_build_cpp_link();
			}
		}
		else if (_match_expr == 33LLU) {
			_case_begin_5552967408:;
			{
				return (*this)._method_build_fn();
			}
		}
		else if (_match_expr == 7LLU) {
			_case_begin_5552967504:;
			{
				return (*this)._method_build_op();
			}
		}
		else if (_match_expr == 3LLU) {
			_case_begin_5552967600:;
			{
				return (*this)._method_build_enumerable();
			}
		}
		else {
			_case_begin_5552960400:;
			{
				((*((*this)._field_i)))++;
				(*this)._method_push_err(_40513_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_5552965008:;
	}
}



inline std::tuple<jule::Ptr<_23e45734a_TypeDecl>,jule::Bool> _225272404_TypeBuilder::_method_build(void) {
	jule::Bool _43444_ok = jule::Bool();
	jule::Ptr<_23e45734a_TypeDecl> _43517_root = (*this)._method_step();
	if (_43517_root == nullptr) {
		_43444_ok = false;
		return std::make_tuple(_225272404_build_void_type(),_43444_ok);
	}
	_43444_ok = true;
	return std::make_tuple(_43517_root,_43444_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _225272404_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_226100d86_Const> _226100d86_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_226100d86_Const>(new( std::nothrow ) _226100d86_Const(jule::Any(_1327_x)));
}



inline jule::Ptr<_226100d86_Const> _226100d86_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_226100d86_Const>(new( std::nothrow ) _226100d86_Const(jule::Any(_1527_x)));
}



inline jule::Ptr<_226100d86_Const> _226100d86_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_226100d86_Const>(new( std::nothrow ) _226100d86_Const(jule::Any(_1728_x)));
}



inline jule::Ptr<_226100d86_Const> _226100d86_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_226100d86_Const>(new( std::nothrow ) _226100d86_Const(jule::Any(_1927_x)));
}



inline jule::Ptr<_226100d86_Const> _226100d86_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_226100d86_Const>(new( std::nothrow ) _226100d86_Const(jule::Any(_2127_x)));
}



inline jule::Ptr<_226100d86_Const> _226100d86_Const::_static_method_new_nil(void) {
	return jule::new_struct<_226100d86_Const>(new( std::nothrow ) _226100d86_Const(jule::Any(nullptr)));
}



inline jule::I64 _226100d86_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _226100d86_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _226100d86_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _226100d86_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str();
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _226100d86_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _226100d86_Const::_method_as_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_5553051280:;
			{
				return (*this)._field_data.operator jule::I64();
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_5553051616:;
			{
				return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_5553051712:;
			{
				return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
			}
		}
		else {
			_case_begin_5553049632:;
			{
				return 0LL;
			}
		}
		_match_end_5553049808:;
	}
}



inline jule::U64 _226100d86_Const::_method_as_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_5553056368:;
			{
				return (*this)._field_data.operator jule::U64();
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_5553056704:;
			{
				return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_5553056800:;
			{
				return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
			}
		}
		else {
			_case_begin_5553042112:;
			{
				return 0LL;
			}
		}
		_match_end_5553053312:;
	}
}



inline jule::F64 _226100d86_Const::_method_as_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_5553062528:;
			{
				return (*this)._field_data.operator jule::F64();
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_5553062624:;
			{
				return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_5553062720:;
			{
				return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
			}
		}
		else {
			_case_begin_5553060592:;
			{
				return 0LL;
			}
		}
		_match_end_5553060720:;
	}
}



inline void _226100d86_Const::_method_set_i64(jule::I64 _13930_x) {
	(*this)._field_data=jule::Any(_13930_x);
}



inline void _226100d86_Const::_method_set_u64(jule::U64 _14130_x) {
	(*this)._field_data=jule::Any(_14130_x);
}



inline void _226100d86_Const::_method_set_bool(jule::Bool _14331_x) {
	(*this)._field_data=jule::Any(_14331_x);
}



inline void _226100d86_Const::_method_set_str(jule::Str _14530_x) {
	(*this)._field_data=jule::Any(_14530_x);
}



inline void _226100d86_Const::_method_set_f64(jule::F64 _14730_x) {
	(*this)._field_data=jule::Any(_14730_x);
}



inline void _226100d86_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline jule::Bool _226100d86_Const::_method_is_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_5553079648:;
			{
				return true;
			}
		}
		else {
			_case_begin_5553077840:;
			{
				return false;
			}
		}
		_match_end_5553077952:;
	}
}



inline jule::Bool _226100d86_Const::_method_is_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_5553081856:;
			{
				return true;
			}
		}
		else {
			_case_begin_5553080448:;
			{
				return false;
			}
		}
		_match_end_5553080672:;
	}
}



inline jule::Bool _226100d86_Const::_method_is_bool(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_5553084064:;
			{
				return true;
			}
		}
		else {
			_case_begin_5553082656:;
			{
				return false;
			}
		}
		_match_end_5553082880:;
	}
}



inline jule::Bool _226100d86_Const::_method_is_str(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_5553086272:;
			{
				return true;
			}
		}
		else {
			_case_begin_5553084864:;
			{
				return false;
			}
		}
		_match_end_5553085088:;
	}
}



inline jule::Bool _226100d86_Const::_method_is_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_5553088480:;
			{
				return true;
			}
		}
		else {
			_case_begin_5553087072:;
			{
				return false;
			}
		}
		_match_end_5553087296:;
	}
}



inline jule::Bool _226100d86_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _226100d86_Const::_method_are_same_types(_226100d86_Const _19933_x) {
	{
		if ((*this)._method_is_i64() == _19933_x._method_is_i64()) {
			_case_begin_5553094176:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_u64() == _19933_x._method_is_u64()) {
			_case_begin_5553092768:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_f64() == _19933_x._method_is_f64()) {
			_case_begin_5553092864:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_bool() == _19933_x._method_is_bool()) {
			_case_begin_5553092960:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_str() == _19933_x._method_is_str()) {
			_case_begin_5553093056:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_nil() == _19933_x._method_is_nil()) {
			_case_begin_5553093472:;
			{
				return true;
			}
		}
		else {
			_case_begin_5553092464:;
			{
				return false;
			}
		}
		_match_end_5553092288:;
	}
}



inline jule::Bool _226100d86_Const::_method_and(_226100d86_Const _21722_x) {
	{
		if ((*this)._method_is_bool() && _21722_x._method_is_bool()) {
			_case_begin_5553105200:;
			{
				return (*this)._method_read_bool() && _21722_x._method_read_bool();
			}
		}
		else {
			_case_begin_5553103568:;
			{
				return false;
			}
		}
		_match_end_5553103392:;
	}
}



inline jule::Bool _226100d86_Const::_method_or(_226100d86_Const _22921_x) {
	{
		if ((*this)._method_is_bool() && _22921_x._method_is_bool()) {
			_case_begin_5553110336:;
			{
				return (*this)._method_read_bool() || _22921_x._method_read_bool();
			}
		}
		else {
			_case_begin_5553108704:;
			{
				return false;
			}
		}
		_match_end_5553108528:;
	}
}



inline jule::Bool _226100d86_Const::_method_eqs(_226100d86_Const _24122_x) {
	{
		if ((*this)._method_is_nil()) {
			_case_begin_5553115392:;
			{
				return _24122_x._method_is_nil();
			}
		}
		else if ((*this)._method_is_bool()) {
			_case_begin_5553113984:;
			{
				return _24122_x._method_is_bool() && ((*this)._method_read_bool() == _24122_x._method_read_bool());
			}
		}
		else if ((*this)._method_is_str()) {
			_case_begin_5553114080:;
			{
				return _24122_x._method_is_str() && ((*this)._method_read_str() == _24122_x._method_read_str());
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_5553114176:;
			{
				return (*this)._method_read_i64() == _24122_x._method_as_i64();
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553114272:;
			{
				return (*this)._method_read_u64() == _24122_x._method_as_u64();
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_5553114688:;
			{
				return (*this)._method_read_f64() == _24122_x._method_as_f64();
			}
		}
		else {
			_case_begin_5553113680:;
			{
				return false;
			}
		}
		_match_end_5553113504:;
	}
}



inline jule::Bool _226100d86_Const::_method_lt(_226100d86_Const _27321_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_5553129392:;
			{
				return (*this)._method_read_i64() < _27321_x._method_as_i64();
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553129488:;
			{
				return (*this)._method_read_u64() < _27321_x._method_as_u64();
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_5553128032:;
			{
				return (*this)._method_read_f64() < _27321_x._method_as_f64();
			}
		}
		else {
			_case_begin_5553127728:;
			{
				return false;
			}
		}
		_match_end_5553127552:;
	}
}



inline jule::Bool _226100d86_Const::_method_gt(_226100d86_Const _29621_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_5553137232:;
			{
				return (*this)._method_read_i64() > _29621_x._method_as_i64();
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553137328:;
			{
				return (*this)._method_read_u64() > _29621_x._method_as_u64();
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_5553135872:;
			{
				return (*this)._method_read_f64() > _29621_x._method_as_f64();
			}
		}
		else {
			_case_begin_5553135568:;
			{
				return false;
			}
		}
		_match_end_5553135392:;
	}
}



inline jule::Bool _226100d86_Const::_method_add(_226100d86_Const _31826_x) {
	{
		if ((*this)._method_is_str()) {
			_case_begin_5553145408:;
			{
				if ((!(_31826_x._method_is_str()))) {
					return false;
				}
				(*this)._method_set_str((*this)._method_read_str() + _31826_x._method_read_str());
			}
		}
		else if ((*this)._method_is_f64()) {
			_case_begin_5553145504:;
			{
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() + _31826_x._method_as_f64()));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_5553144048:;
			{
				if (_31826_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
				} else {
					(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() + _31826_x._method_as_i64()));
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553144160:;
			{
				if (_31826_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
				} else {
					(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() + _31826_x._method_as_u64()));
				}
			}
		}
		else {
			_case_begin_5553143728:;
			{
				return false;
			}
		}
		_match_end_5553143552:;
	}
	return true;
}



inline jule::Bool _226100d86_Const::_method_sub(_226100d86_Const _35126_x) {
	{
		if ((*this)._method_is_f64()) {
			_case_begin_5553163376:;
			{
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() - _35126_x._method_as_f64()));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_5553163472:;
			{
				if (_35126_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
				} else {
					(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() - _35126_x._method_as_i64()));
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553162016:;
			{
				if (_35126_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
				} else {
					(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() - _35126_x._method_as_u64()));
				}
			}
		}
		else {
			_case_begin_5553161712:;
			{
				return false;
			}
		}
		_match_end_5553161536:;
	}
	return true;
}



inline jule::Bool _226100d86_Const::_method_mul(_226100d86_Const _37826_x) {
	{
		if ((*this)._method_is_f64()) {
			_case_begin_5553178432:;
			{
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() * _37826_x._method_as_f64()));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_5553178528:;
			{
				if (_37826_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
				} else {
					(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() * _37826_x._method_as_i64()));
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553177072:;
			{
				if (_37826_x._method_is_f64()) {
					(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
				} else {
					(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() * _37826_x._method_as_u64()));
				}
			}
		}
		else {
			_case_begin_5553176768:;
			{
				return false;
			}
		}
		_match_end_5553176592:;
	}
	return true;
}



inline jule::Bool _226100d86_Const::_method_div(_226100d86_Const _40926_x) {
	{
		if ((*this)._method_is_f64()) {
			_case_begin_5553193104:;
			{
				jule::F64 _41217_l = _40926_x._method_as_f64();
				if (_41217_l == 0LL) {
					return false;
				}
				(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_41217_l)));
			}
		}
		else if ((*this)._method_is_i64()) {
			_case_begin_5553193200:;
			{
				jule::F64 _41917_l = _40926_x._method_as_f64();
				if (_41917_l == 0LL) {
					return false;
				}
				(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_41917_l)));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553191744:;
			{
				jule::F64 _42617_l = _40926_x._method_as_f64();
				if (_42617_l == 0LL) {
					return false;
				}
				(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_42617_l)));
			}
		}
		else {
			_case_begin_5553191440:;
			{
				return false;
			}
		}
		_match_end_5553191264:;
	}
	return true;
}



inline jule::Bool _226100d86_Const::_method_mod(_226100d86_Const _44126_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_5553207456:;
			{
				jule::I64 _44417_l = _44126_x._method_as_i64();
				if (_44417_l == 0LL) {
					return false;
				}
				(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_44417_l)));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553207552:;
			{
				jule::U64 _45117_l = _44126_x._method_as_u64();
				if (_45117_l == 0LL) {
					return false;
				}
				(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_45117_l)));
			}
		}
		else {
			_case_begin_5553205808:;
			{
				return false;
			}
		}
		_match_end_5553205632:;
	}
	return true;
}



inline jule::Bool _226100d86_Const::_method_bitwise_and(_226100d86_Const _46534_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_5553218352:;
			{
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _46534_x._method_as_i64()));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553218448:;
			{
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _46534_x._method_as_u64()));
			}
		}
		else {
			_case_begin_5553216704:;
			{
				return false;
			}
		}
		_match_end_5553216528:;
	}
	return true;
}



inline jule::Bool _226100d86_Const::_method_bitwise_or(_226100d86_Const _48133_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_5553226144:;
			{
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _48133_x._method_as_i64()));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553226240:;
			{
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _48133_x._method_as_u64()));
			}
		}
		else {
			_case_begin_5553224496:;
			{
				return false;
			}
		}
		_match_end_5553224320:;
	}
	return true;
}



inline jule::Bool _226100d86_Const::_method_xor(_226100d86_Const _49726_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_5553233808:;
			{
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _49726_x._method_as_i64()));
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553233904:;
			{
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _49726_x._method_as_u64()));
			}
		}
		else {
			_case_begin_5553232160:;
			{
				return false;
			}
		}
		_match_end_5553231984:;
	}
	return true;
}



inline jule::Bool _226100d86_Const::_method_lshift(_226100d86_Const _51329_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_5553241600:;
			{
				jule::I64 _51617_l = (*this)._method_as_i64();
				if (_51617_l < 0LL) {
					jule::U64 _51821_r = _51329_x._method_as_u64();
					(*this)._method_set_i64(static_cast<jule::I64>(_51617_l << _51821_r));
				} else {
					_226100d86_lshift_unsig((*this),_51329_x);
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553241696:;
			{
				_226100d86_lshift_unsig((*this),_51329_x);
			}
		}
		else {
			_case_begin_5553239952:;
			{
				return false;
			}
		}
		_match_end_5553239776:;
	}
	return true;
}



inline jule::Bool _226100d86_Const::_method_rshift(_226100d86_Const _53629_x) {
	{
		if ((*this)._method_is_i64()) {
			_case_begin_5553251072:;
			{
				jule::I64 _53917_l = (*this)._method_as_i64();
				if (_53917_l < 0LL) {
					jule::U64 _54121_r = _53629_x._method_as_u64();
					(*this)._method_set_i64(static_cast<jule::I64>(_53917_l >> _54121_r));
				} else {
					_226100d86_rshift_unsig((*this),_53629_x);
				}
			}
		}
		else if ((*this)._method_is_u64()) {
			_case_begin_5553251168:;
			{
				_226100d86_rshift_unsig((*this),_53629_x);
			}
		}
		else {
			_case_begin_5553249424:;
			{
				return false;
			}
		}
		_match_end_5553249248:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _226100d86_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _225036509_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _225036509_StructIns::_method_to_str(void) {
	jule::Str _22217_kind = jule::Str();
	_22217_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_22217_kind+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_5555326720:;
			if (it != expr.end()) {
				jule::Ptr<_23e2b5818_TypeKind> &_225036509_g = *it;
				{
					_22217_kind+=_225036509_g->_method_to_str();
					_22217_kind+=jule::Str(",", 1);
				}
				_iter_next_5555326720:;
				++it;
				goto _iter_begin_5555326720;
			}
			_iter_end_5555326720:;
		}
		_22217_kind=_22217_kind.slice(0LL,_22217_kind.len() - 1LL);
		_22217_kind+=jule::Str("]", 1);
	}
	return _22217_kind;
}



inline jule::Bool _225036509_StructIns::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _23722_other) {
	jule::Ptr<_225036509_StructIns> _23813_s = _23722_other->_method_strct();
	if (_23813_s == nullptr) {
		return false;
	}
	if (this->self->_field_decl != _23813_s->_field_decl) {
		return false;
	}
	if (this->self->_field_generics.len() != _23813_s->_field_generics.len()) {
		return false;
	}
	jule::Int _25117_i = 0LL;
	for (; _25117_i < this->self->_field_generics.len(); (_25117_i)++) {
		{
			if ((!(this->self->_field_generics[_25117_i]->_method_equals(_23813_s->_field_generics[_25117_i])))) {
				return false;
			}
		}
	_iter_next_5555335424:;
	}
	_iter_end_5555335424:;
	return true;
}



inline jule::Bool _225036509_StructIns::_method_same(jule::Ptr<_225036509_StructIns> _26523_s) {
	if (((*this)._field_decl != _26523_s->_field_decl) || (_26523_s->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto &expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_5555343248:;
		if (it != expr.end()) {
			jule::Int _225036509_i = it - expr.begin();
			jule::Ptr<_23e2b5818_TypeKind> &_225036509_g = *it;
			{
				if ((!(_225036509_g->_method_equals(_26523_s->_field_generics[_225036509_i])))) {
					return false;
				}
			}
			_iter_next_5555343248:;
			++it;
			_225036509_i++;
			goto _iter_begin_5555343248;
		}
		_iter_end_5555343248:;
	}
	return true;
}



inline jule::Ptr<_2252d6a73_Fn> _225036509_StructIns::_method_find_method(jule::Str _28034_ident,jule::Bool _28046_statically) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_5555348960:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _225036509_f = *it;
			{
				if ((_225036509_f->_field_statically == _28046_statically) && (_225036509_f->_field_ident == _28034_ident)) {
					return _225036509_f;
				}
			}
			_iter_next_5555348960:;
			++it;
			goto _iter_begin_5555348960;
		}
		_iter_end_5555348960:;
	}
	return nullptr;
}



inline jule::Ptr<_225036509_FieldIns> _225036509_StructIns::_method_find_field(jule::Str _29133_ident) {
	{
		auto &expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_5555353136:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_FieldIns> _225036509_f = *it;
			{
				if (_225036509_f->_field_decl->_field_ident == _29133_ident) {
					return _225036509_f;
				}
			}
			_iter_next_5555353136:;
			++it;
			goto _iter_begin_5555353136;
		}
		_iter_end_5555353136:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _225036509_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2252d6a73_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2252d6a73_ParamIns::_method_to_str(void) {
	jule::Str _18017_s = jule::Str();
	if ((*this)._field_decl->_field_mutable) {
		_18017_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_18017_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_18017_s+=jule::Str("&", 1);
		}
		_18017_s+=jule::Str("self", 4);
		return _18017_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_18017_s+=jule::Str("...", 3);
	}
	if ((*this)._field_kind != nullptr) {
		_18017_s+=(*this)._field_kind->_method_to_str();
	}
	return _18017_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _2252d6a73_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2252d6a73_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



inline jule::Bool _2252d6a73_FnIns::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _23522_other) {
	jule::Ptr<_2252d6a73_FnIns> _23613_f = _23522_other->_method_fnc();
	if (_23613_f == nullptr) {
		return false;
	}
	if (this->self->_field_decl->_field_statically != _23613_f->_field_decl->_field_statically) {
		return false;
	}
	if (this->self->_field_decl->_field_exceptional != _23613_f->_field_decl->_field_exceptional) {
		return false;
	}
	if (this->self->_field_decl->_field_unsafety != _23613_f->_field_decl->_field_unsafety) {
		return false;
	}
	if (this->self->_field_generics.len() != _23613_f->_field_generics.len()) {
		return false;
	}
	if (this->self->_field_decl->_method_is_void() != _23613_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _26117_i = 0LL;
	for (; _26117_i < this->self->_field_generics.len(); (_26117_i)++) {
		{
			if ((!(this->self->_field_generics[_26117_i]->_method_equals(_23613_f->_field_generics[_26117_i])))) {
				return false;
			}
		}
	_iter_next_5555444720:;
	}
	_iter_end_5555444720:;
	jule::Fn<jule::Bool(jule::Ptr<_2252d6a73_ParamIns>,jule::Ptr<_2252d6a73_ParamIns>)> _26813_check_params = jule::Fn<jule::Bool(jule::Ptr<_2252d6a73_ParamIns>,jule::Ptr<_2252d6a73_ParamIns>)>([=](jule::Ptr<_2252d6a73_ParamIns> _26831_p1,jule::Ptr<_2252d6a73_ParamIns> _26846_p2) mutable -> jule::Bool {
		if (_26831_p1->_field_decl->_field_mutable != _26846_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_26831_p1->_field_decl->_method_is_self()) {
			if ((!(_26846_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_26831_p1->_field_decl->_method_is_ref() != _26846_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_26831_p1->_field_decl->_field_reference != _26846_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_26831_p1->_field_decl->_field_variadic != _26846_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _26831_p1->_field_kind->_method_equals(_26846_p2->_field_kind);
	});
	_26117_i=0LL;
	for (; _26117_i < this->self->_field_params.len(); (_26117_i)++) {
		{
			if ((!(_26813_check_params(this->self->_field_params[_26117_i],_23613_f->_field_params[_26117_i])))) {
				return false;
			}
		}
	_iter_next_5555460192:;
	}
	_iter_end_5555460192:;
	if ((!(this->self->_field_decl->_method_is_void()))) {
		if ((!(this->self->_field_result->_method_equals(_23613_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _2252d6a73_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



inline jule::Bool _2252d6a73_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (((*this)._field_decl != nullptr) && (*this)._field_decl->_method_is_anon());
}



inline jule::Bool _2252d6a73_FnIns::_method_same(jule::Ptr<_2252d6a73_FnIns> _32223_f) {
	if (((*this)._field_decl != _32223_f->_field_decl) || (_32223_f->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto &expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_5555471216:;
		if (it != expr.end()) {
			jule::Int _2252d6a73_i = it - expr.begin();
			jule::Ptr<_23e2b5818_TypeKind> &_2252d6a73_g = *it;
			{
				if ((!(_2252d6a73_g->_method_equals(_32223_f->_field_generics[_2252d6a73_i])))) {
					return false;
				}
			}
			_iter_next_5555471216:;
			++it;
			_2252d6a73_i++;
			goto _iter_begin_5555471216;
		}
		_iter_end_5555471216:;
	}
	return true;
}



inline jule::Str _2252d6a73_FnIns::_method_get_kind_str(jule::Bool _33831_ident) {
	jule::Str _33917_s = jule::Str();
	if ((*this)._field_decl->_field_statically) {
		_33917_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_33917_s+=jule::Str("unsafe ", 7);
	}
	_33917_s+=jule::Str("fn", 2);
	if (_33831_ident && ((*this)._field_decl != nullptr)) {
		_33917_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_33917_s+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_5555480384:;
			if (it != expr.end()) {
				jule::Int _2252d6a73_i = it - expr.begin();
				jule::Ptr<_23e2b5818_TypeKind> &_2252d6a73_t = *it;
				{
					_33917_s+=_2252d6a73_t->_method_to_str();
					if ((_2252d6a73_i + 1LL) < (*this)._field_generics.len()) {
						_33917_s+=jule::Str(",", 1);
					}
				}
				_iter_next_5555480384:;
				++it;
				_2252d6a73_i++;
				goto _iter_begin_5555480384;
			}
			_iter_end_5555480384:;
		}
		_33917_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_33917_s+=jule::Str("[", 1);
		{
			auto &expr = (*this)._field_decl->_field_generics;
			auto it = expr.begin();
			_iter_begin_5555484368:;
			if (it != expr.end()) {
				jule::Int _2252d6a73_i = it - expr.begin();
				jule::Ptr<_23e45734a_GenericDecl> &_2252d6a73_g = *it;
				{
					_33917_s+=_2252d6a73_g->_field_ident;
					if ((_2252d6a73_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_33917_s+=jule::Str(",", 1);
					}
				}
				_iter_next_5555484368:;
				++it;
				_2252d6a73_i++;
				goto _iter_begin_5555484368;
			}
			_iter_end_5555484368:;
		}
		_33917_s+=jule::Str("]", 1);
	}
	_33917_s+=jule::Str("(", 1);
	jule::I64 _37613_n = (*this)._field_params.len();
	if (_37613_n > 0LL) {
		{
			auto &expr = (*this)._field_params;
			auto it = expr.begin();
			_iter_begin_5555489488:;
			if (it != expr.end()) {
				jule::Ptr<_2252d6a73_ParamIns> &_2252d6a73_p = *it;
				{
					_33917_s+=_2252d6a73_p->_method_to_str();
					_33917_s+=jule::Str(",", 1);
				}
				_iter_next_5555489488:;
				++it;
				goto _iter_begin_5555489488;
			}
			_iter_end_5555489488:;
		}
		_33917_s=_33917_s.slice(0LL,_33917_s.len() - 1LL);
	}
	_33917_s+=jule::Str(")", 1);
	if ((*this)._field_decl->_field_exceptional) {
		_33917_s+=jule::Str("!", 1);
	}
	if ((!((*this)._field_decl->_method_is_void()))) {
		_33917_s+=jule::Str(":", 1);
		_33917_s+=(*this)._field_result->_method_to_str();
	}
	return _33917_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _2252d6a73_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22551ab31_ReferenceStack> _22551ab31_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_22551ab31_ReferenceStack>(new( std::nothrow ) _22551ab31_ReferenceStack());
}



inline jule::Int _22551ab31_ReferenceStack::_method_len(void) {
	return static_cast<jule::I64>((*this)._field_buffer.len());
}



inline jule::Any _22551ab31_ReferenceStack::_method_at(jule::Int _5825_i) {
	return (*this)._field_buffer[_5825_i];
}



inline void _22551ab31_ReferenceStack::_method_push(jule::Any _6331_ref) {
	(*this)._field_buffer = jule::alloc_for_append((*this)._field_buffer,1);(*this)._field_buffer.push(_6331_ref);
}



inline jule::Bool _22551ab31_ReferenceStack::_method_exist_0(jule::Ptr<_2258258db_Var> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_5558437168:;
		if (it != expr.end()) {
			jule::Any &_22551ab31_ref = *it;
			{
				if (_22551ab31_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_5558437168:;
			++it;
			goto _iter_begin_5558437168;
		}
		_iter_end_5558437168:;
	}
	return false;
}

inline jule::Bool _22551ab31_ReferenceStack::_method_exist_1(jule::Ptr<_2252d6a73_FnIns> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_5558445104:;
		if (it != expr.end()) {
			jule::Any &_22551ab31_ref = *it;
			{
				if (_22551ab31_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_5558445104:;
			++it;
			goto _iter_begin_5558445104;
		}
		_iter_end_5558445104:;
	}
	return false;
}

inline jule::Bool _22551ab31_ReferenceStack::_method_exist_2(jule::Ptr<_225036509_StructIns> _6827_t) {
	{
		auto &expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_5558475920:;
		if (it != expr.end()) {
			jule::Any &_22551ab31_ref = *it;
			{
				if (_22551ab31_ref == _6827_t) {
					return true;
				}
			}
			_iter_next_5558475920:;
			++it;
			goto _iter_begin_5558475920;
		}
		_iter_end_5558475920:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _22551ab31_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22551ab31_SymbolBuilder> _22551ab31_SymbolBuilder::_method_get_root(void) {
	jule::Ptr<_22551ab31_SymbolBuilder> _31217_root = this->self;
	while (_31217_root->_field_owner != nullptr) {
		{
			_31217_root=_31217_root->_field_owner;
		}
	_iter_next_5555503184:;
	}
	_iter_end_5555503184:;
	return _31217_root;
}



inline void _22551ab31_SymbolBuilder::_method_push_err(_23e730c0b_Token& _31928_token,jule::Str _31942_fmt,jule::Slice<jule::Any> _31955_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_22579574b_compiler_err(_31928_token,true,_31942_fmt,_31955_args));
}



inline void _22551ab31_SymbolBuilder::_method_push_err_text(_23e730c0b_Token& _32333_token,jule::Str _32347_fmt,jule::Slice<jule::Any> _32360_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_22579574b_compiler_err(_32333_token,false,_32347_fmt,_32360_args));
}



inline void _22551ab31_SymbolBuilder::_method_push_suggestion(jule::Str _32834_fmt,jule::Slice<jule::Any> _32847_args) {
	{
		_22579574b_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_32834_fmt,_32847_args);
	}
}



inline jule::Bool _22551ab31_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ptr<_23e45734a_UseDecl>& _33243_decl) {
	jule::Bool _33261_ok = jule::Bool();
	if (_23ceb0954_is_std_header_path(_33243_decl->_field_link_path)) {
		_33261_ok = true;
		return _33261_ok;
	}
	jule::Str _33713_ext = _23d08e2c4_ext(_33243_decl->_field_link_path);
	if ((!(_23ceb0954_is_valid_header_ext(_33713_ext))) && (!(_23ceb0954_is_valid_cpp_ext(_33713_ext)))) {
		(*this)._method_push_err(_33243_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_33713_ext)}));
		_33261_ok = false;
		return _33261_ok;
	}
	jule::Ptr<_224eb5730_Status> _34413_info = ({
		auto except = _224eb5730_Status::_static_method_of(_33243_decl->_field_link_path);
		(except.ok()) ? (except.result) : ({{
			(*this)._method_push_err(_33243_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_33243_decl->_field_link_path)}));
			_33261_ok = false;
			return _33261_ok;
			_33261_ok = false;
			return _33261_ok;
		} jule::Ptr<_224eb5730_Status>();});
	});
	if (_34413_info->_method_is_dir()) {
		(*this)._method_push_err(_33243_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_33243_decl->_field_link_path)}));
		_33261_ok = false;
		return _33261_ok;
	}
	_33261_ok = true;
	return _33261_ok;
}



inline jule::Ptr<_225615962_ImportInfo> _22551ab31_SymbolBuilder::_method_build_cpp_header_import(jule::Ptr<_23e45734a_UseDecl>& _35647_decl) {
	jule::Str _35717_path = _35647_decl->_field_link_path;
	if ((!(_23ceb0954_is_std_header_path(_35647_decl->_field_link_path)))) {
		jule::Bool _36021_ok = (*this)._method_check_cpp_use_decl_path(_35647_decl);
		if ((!(_36021_ok))) {
			return nullptr;
		}
		std::tie(_35717_path,_36021_ok) = _23d08e2c4_abs(_35647_decl->_field_link_path);
		if ((!(_36021_ok))) {
			(*this)._method_push_err(_35647_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35647_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_225615962_ImportInfo>(new( std::nothrow ) _225615962_ImportInfo(_35647_decl->_field_token,_35717_path,_35647_decl->_field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_23e730c0b_Token>(),nullptr));
}



inline jule::Ptr<_225615962_ImportInfo> _22551ab31_SymbolBuilder::_method_build_std_import(jule::Ptr<_23e45734a_UseDecl>& _38340_decl) {
	jule::Str _38417_path = _38340_decl->_field_link_path.slice(jule::Str("std::", 5).len());
	_38417_path=_38417_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38417_path=_23d08e2c4_join(jule::Slice<jule::Str>({_23d049669_PATH_STDLIB,_38417_path}));
	jule::Bool _38720_ok;
	std::tie(_38417_path,_38720_ok) = _23d08e2c4_abs(_38417_path);
	if ((!(_38720_ok))) {
		(*this)._method_push_err(_38340_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38340_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_224eb5730_Status> _39413_info = ({
		auto except = _224eb5730_Status::_static_method_of(_38417_path);
		(except.ok()) ? (except.result) : ({{
			(*this)._method_push_err(_38340_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38340_decl->_field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_224eb5730_Status>();});
	});
	if ((!(_39413_info->_method_is_dir()))) {
		(*this)._method_push_err(_38340_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38340_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Str _40413_ident = _38340_decl->_field_link_path.slice(_38340_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_225615962_ImportInfo>(new( std::nothrow ) _225615962_ImportInfo(_38340_decl->_field_token,_38417_path,_38340_decl->_field_link_path,_40413_ident,_38340_decl->_field_alias,jule::Bool(),false,true,_38340_decl->_field_full,jule::Slice<_23e730c0b_Token>(),jule::new_struct<_225615962_Package>(new( std::nothrow ) _225615962_Package(nullptr))));
}



inline jule::Ptr<_225615962_ImportInfo> _22551ab31_SymbolBuilder::_method_build_ident_import(jule::Ptr<_23e45734a_UseDecl>& _42143_decl) {
	jule::Str _42217_path = _42143_decl->_field_link_path;
	_42217_path=_42217_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_42217_path=_23d08e2c4_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_42217_path}));
	jule::Bool _42620_ok;
	std::tie(_42217_path,_42620_ok) = _23d08e2c4_abs(_42217_path);
	if ((!(_42620_ok))) {
		this->self->_method_push_err(_42143_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_42143_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_224eb5730_Status> _43213_info = ({
		auto except = _224eb5730_Status::_static_method_of(_42217_path);
		(except.ok()) ? (except.result) : ({{
			this->self->_method_push_err(_42143_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_42143_decl->_field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_224eb5730_Status>();});
	});
	if ((!(_43213_info->_method_is_dir()))) {
		this->self->_method_push_err(_42143_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_42143_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Str _44313_ident = _42143_decl->_field_link_path.slice(_42143_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_225615962_ImportInfo>(new( std::nothrow ) _225615962_ImportInfo(_42143_decl->_field_token,_42217_path,_42143_decl->_field_link_path,_44313_ident,_42143_decl->_field_alias,jule::Bool(),false,false,_42143_decl->_field_full,jule::Slice<_23e730c0b_Token>(),jule::new_struct<_225615962_Package>(new( std::nothrow ) _225615962_Package(nullptr))));
}



inline jule::Ptr<_225615962_ImportInfo> _22551ab31_SymbolBuilder::_method_build_import(jule::Ptr<_23e45734a_UseDecl>& _46037_decl) {
	{
		if (_46037_decl->_field_cpp_linked) {
			_case_begin_5555585248:;
			{
				return this->self->_method_build_cpp_header_import(_46037_decl);
			}
		}
		else if (_46037_decl->_field_std) {
			_case_begin_5555584640:;
			{
				return this->self->_method_build_std_import(_46037_decl);
			}
		}
		else {
			_case_begin_5555583264:;
			{
				return this->self->_method_build_ident_import(_46037_decl);
			}
		}
		_match_end_5555583088:;
	}
}



inline jule::Bool _22551ab31_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ptr<_225615962_ImportInfo>& _46844_pkg) {
	jule::Bool _46864_ok = jule::Bool();
	jule::Ptr<_225615962_ImportInfo> _47013_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)>([=](jule::Ptr<_225615962_ImportInfo> _47049_spkg) mutable -> jule::Bool {
		return _46844_pkg->_field_path == _47049_spkg->_field_path;
	}));
	if (_47013_lpkg == nullptr) {
		_46864_ok = true;
		return _46864_ok;
	}
	(*this)._method_push_err(_46844_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_46844_pkg->_field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_46864_ok = false;
	return _46864_ok;
}



inline void _22551ab31_SymbolBuilder::_method_impl_import_selections(jule::Ptr<_225615962_ImportInfo>& _48246_imp,jule::Ptr<_23e45734a_UseDecl>& _48269_decl) {
	{
		auto &expr = _48269_decl->_field_selected;
		auto it = expr.begin();
		_iter_begin_5555602400:;
		if (it != expr.end()) {
			_23e730c0b_Token _22551ab31_ident = *it;
			{
				if (_48246_imp->_method_exist_ident(_22551ab31_ident._field_kind)) {
					(*this)._method_push_err(_22551ab31_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_22551ab31_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_5555602400;
				}
				_48246_imp->_field_selected = jule::alloc_for_append(_48246_imp->_field_selected,1);_48246_imp->_field_selected.push(_22551ab31_ident);
			}
			_iter_next_5555602400:;
			++it;
			goto _iter_begin_5555602400;
		}
		_iter_end_5555602400:;
	}
}



inline jule::Str _22551ab31_SymbolBuilder::_method_get_as_link_path(jule::Str _49440_path) {
	if (_49440_path.has_prefix(_23d049669_PATH_STDLIB)) {
		_49440_path=_49440_path.slice(_23d049669_PATH_STDLIB.len());
		return jule::Str("std", 3) + _49440_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _50014_root;
	std::tie(_50014_root,std::ignore) = _23d08e2c4_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_49440_path=_49440_path.slice(_50014_root.len());
	if (_49440_path[0LL] == 47LL) {
		_49440_path=_49440_path.slice(1LL);
	}
	return _49440_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _22551ab31_SymbolBuilder::_method_push_cycle_error(jule::Ptr<_22551ab31_SymbolBuilder>& _50837_sb,jule::Str _50857_path,jule::Str& _50873_message) {
	
	jule::Str _51113_refers_to = _23ceb0c1d_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_50837_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_50857_path))}));
	_50873_message=((_22551ab31_str_repeat(jule::Str(" ", 1),4LL) + _51113_refers_to) + jule::Str("\n", 1)) + _50873_message;
}



inline void _22551ab31_SymbolBuilder::_method_push_cross_cycle_error(jule::Ptr<_22551ab31_SymbolBuilder>& _51843_target,jule::Ptr<_225615962_ImportInfo>& _51868_imp,_23e730c0b_Token& _51887_error_token) {
	jule::Str _51917_message = jule::Str();
	this->self->_method_push_cycle_error(this->self,_51868_imp->_field_path,_51917_message);
	jule::Ptr<_22551ab31_SymbolBuilder> _52317_owner = this->self->_field_owner;
	jule::Ptr<_22551ab31_SymbolBuilder> _52417_old = this->self;
	while (_52317_owner->_field_owner != nullptr) {
		{
			this->self->_method_push_cycle_error(_52417_old->_field_owner,_52417_old->_field_table->_field_file->_method_dir(),_51917_message);
			if (_52317_owner->_field_owner == _51843_target) {
				this->self->_method_push_cycle_error(_51843_target,_52317_owner->_field_table->_field_file->_method_dir(),_51917_message);
				goto _iter_end_5555634768;
			}
			_52417_old=_52317_owner;
			_52317_owner=_52317_owner->_field_owner;
		}
	_iter_next_5555634768:;
	}
	_iter_end_5555634768:;
	this->self->_method_push_err(_51887_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_51917_message)}));
}



inline jule::Bool _22551ab31_SymbolBuilder::_method_check_import_cycles(jule::Ptr<_225615962_ImportInfo> _54139_imp,jule::Ptr<_23e45734a_UseDecl>& _54158_decl) {
	if (_54139_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_54158_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_54139_imp->_field_path))}));
		return false;
	}
	if (this->self->_field_owner == nullptr) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _54139_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_54139_imp,_54158_decl->_field_token);
		return false;
	}
	jule::Ptr<_22551ab31_SymbolBuilder> _55617_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_55617_owner->_field_table->_field_file->_method_dir() == _54139_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_55617_owner,_54139_imp,_54158_decl->_field_token);
		return false;
	}
	if (_55617_owner->_field_owner != nullptr) {
		_55617_owner=_55617_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _22551ab31_SymbolBuilder::_method_import_package(jule::Ptr<_225615962_ImportInfo>& _57139_imp,jule::Ptr<_23e45734a_UseDecl>& _57162_decl) {
	jule::Bool _57180_ok = jule::Bool();
	if (_57139_imp->_field_cpp_linked) {
		_57180_ok = true;
		return _57180_ok;
	}
	jule::Ptr<_225615962_ImportInfo> _57617_port = this->self->_field_importer.get()._method_get_import(_57139_imp->_field_path);
	if (_57617_port != nullptr) {
		_57139_imp->_field_package=_57617_port->_field_package;
		_57139_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_57139_imp,_57162_decl)))) {
			_57180_ok = false;
			return _57180_ok;
		}
		jule::Slice<jule::Ptr<_23e249d96_Ast>> _58522_asts;
		jule::Slice<_23ceb0c1d_Log> _58528_errors;
		std::tie(_58522_asts,_58528_errors) = this->self->_field_importer.get()._method_import_package(_57139_imp->_field_path);
		if (_58528_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_58528_errors);
			_57180_ok = false;
			return _57180_ok;
		}
		{
			auto &expr = _58522_asts;
			auto it = expr.begin();
			_iter_begin_5555671920:;
			if (it != expr.end()) {
				jule::Ptr<_23e249d96_Ast> _22551ab31_ast = *it;
				{
					jule::Ptr<_225a097a1_SymbolTable> _59226_table;
					jule::Slice<_23ceb0c1d_Log> _59233_errors;
					std::tie(_59226_table,_59233_errors) = _225e03282_build_symbols(_22551ab31_ast,this->self->_field_importer,this->self);
					if (_59233_errors.len() > 0LL) {
						this->self->_field_errors=jule::append(this->self->_field_errors,_59233_errors);
						this->self->_method_push_err_text(_57139_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_57139_imp->_field_link_path)}));
						_57180_ok = false;
						return _57180_ok;
					}
					_57139_imp->_field_package->_field_files = jule::alloc_for_append(_57139_imp->_field_package->_field_files,1);_57139_imp->_field_package->_field_files.push(_59226_table);
				}
				_iter_next_5555671920:;
				++it;
				goto _iter_begin_5555671920;
			}
			_iter_end_5555671920:;
		}
	}
	this->self->_method_impl_import_selections(_57139_imp,_57162_decl);
	_57180_ok = true;
	return _57180_ok;
}



inline jule::Ptr<_225615962_ImportInfo> _22551ab31_SymbolBuilder::_method_import_use_decl(jule::Ptr<_23e45734a_UseDecl>& _61040_decl) {
	jule::Ptr<_225615962_ImportInfo> _61117_imp = this->self->_method_build_import(_61040_decl);
	if (_61117_imp == nullptr) {
		return nullptr;
	}
	jule::Bool _61717_ok = this->self->_method_check_duplicate_use_decl(_61117_imp);
	if ((!(_61717_ok))) {
		return nullptr;
	}
	if ((_61117_imp->_field_alias.len() != 0LL) && (_61040_decl->_field_selected.len() > 0LL)) {
		this->self->_method_push_err(_61040_decl->_field_token,jule::Str("use aliases cannot useable for selected package defines", 55),jule::Slice<jule::Any>());
	}
	_61717_ok=this->self->_method_import_package(_61117_imp,_61040_decl);
	this->self->_field_table->_field_imports = jule::alloc_for_append(this->self->_field_table->_field_imports,1);this->self->_field_table->_field_imports.push(_61117_imp);
	if (_61717_ok) {
		this->self->_field_importer.get()._method_imported(_61117_imp);
		return _61117_imp;
	}
	return nullptr;
}



inline void _22551ab31_SymbolBuilder::_method_import_use_decls(void) {
	{
		auto &expr = this->self->_field_ast->_field_use_decls;
		auto it = expr.begin();
		_iter_begin_5555690736:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_UseDecl> _22551ab31_decl = *it;
			{
				this->self->_method_import_use_decl(_22551ab31_decl);
				if (this->self->_field_errors.len() > 0LL) {
					goto _iter_end_5555690736;
				}
			}
			_iter_next_5555690736:;
			++it;
			goto _iter_begin_5555690736;
		}
		_iter_end_5555690736:;
	}
}



inline void _22551ab31_SymbolBuilder::_method_append_decl(_23e45734a_Node& _64635_decl) {
	{
		auto &_match_expr{ _64635_decl._field_data };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_TypeAliasDecl>>()) {
			_case_begin_5555696032:;
			{
				jule::Ptr<_23e2b5818_TypeAlias> _64921_ta = _22551ab31_build_type_alias(_64635_decl._field_data.operator jule::Ptr<_23e45734a_TypeAliasDecl>());
				(*this)._field_table->_field_type_aliases = jule::alloc_for_append((*this)._field_table->_field_type_aliases,1);(*this)._field_table->_field_type_aliases.push(_64921_ta);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_StructDecl>>()) {
			_case_begin_5555695424:;
			{
				jule::Ptr<_225036509_Struct> _65321_srct = _22551ab31_build_struct(_64635_decl._field_data.operator jule::Ptr<_23e45734a_StructDecl>());
				(*this)._field_table->_field_structs = jule::alloc_for_append((*this)._field_table->_field_structs,1);(*this)._field_table->_field_structs.push(_65321_srct);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_FnDecl>>()) {
			_case_begin_5555695520:;
			{
				jule::Ptr<_2252d6a73_Fn> _65721_f = _22551ab31_build_fn(_64635_decl._field_data.operator jule::Ptr<_23e45734a_FnDecl>());
				(*this)._field_table->_field_funcs = jule::alloc_for_append((*this)._field_table->_field_funcs,1);(*this)._field_table->_field_funcs.push(_65721_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_TraitDecl>>()) {
			_case_begin_5555695632:;
			{
				jule::Ptr<_2255ab70a_Trait> _66121_t = _22551ab31_build_trait(_64635_decl._field_data.operator jule::Ptr<_23e45734a_TraitDecl>());
				(*this)._field_table->_field_traits = jule::alloc_for_append((*this)._field_table->_field_traits,1);(*this)._field_table->_field_traits.push(_66121_t);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_VarDecl>>()) {
			_case_begin_5555697024:;
			{
				jule::Ptr<_2258258db_Var> _66521_v = _22551ab31_build_var(_64635_decl._field_data.operator jule::Ptr<_23e45734a_VarDecl>());
				(*this)._field_table->_field_vars = jule::alloc_for_append((*this)._field_table->_field_vars,1);(*this)._field_table->_field_vars.push(_66521_v);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_EnumDecl>>()) {
			_case_begin_5555697120:;
			{
				jule::Ptr<_2255aae79_Enum> _66921_e = _22551ab31_build_enum(_64635_decl._field_data.operator jule::Ptr<_23e45734a_EnumDecl>());
				(*this)._field_table->_field_enums = jule::alloc_for_append((*this)._field_table->_field_enums,1);(*this)._field_table->_field_enums.push(_66921_e);
			}
		}
		else {
			_case_begin_5555694624:;
			{
				(*this)._method_push_err(_64635_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_5555694848:;
	}
}



inline void _22551ab31_SymbolBuilder::_method_append_decls(void) {
	{
		auto &expr = (*this)._field_ast->_field_decls;
		auto it = expr.begin();
		_iter_begin_5555714496:;
		if (it != expr.end()) {
			_23e45734a_Node _22551ab31_decl = *it;
			{
				(*this)._method_append_decl(_22551ab31_decl);
			}
			_iter_next_5555714496:;
			++it;
			goto _iter_begin_5555714496;
		}
		_iter_end_5555714496:;
	}
}



inline void _22551ab31_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=jule::Slice<jule::Ptr<_2255b811d_Impl>>::alloc(0LL,static_cast<jule::I64>((*this)._field_ast->_field_impls.len()));
	{
		auto &expr = (*this)._field_ast->_field_impls;
		auto it = expr.begin();
		_iter_begin_5555718528:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_Impl> _22551ab31_decl = *it;
			{
				(*this)._field_table->_field_impls = jule::alloc_for_append((*this)._field_table->_field_impls,1);(*this)._field_table->_field_impls.push(_22551ab31_build_impl(_22551ab31_decl));
			}
			_iter_next_5555718528:;
			++it;
			goto _iter_begin_5555718528;
		}
		_iter_end_5555718528:;
	}
}



inline void _22551ab31_SymbolBuilder::_method_push_directive_pass(jule::Ptr<_23e45734a_Directive>& _69043_d) {
	if (_69043_d->_field_args.len() == 0LL) {
		(*this)._method_push_err(_69043_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if (_69043_d->_field_args.len() > 1LL) {
		_23e730c0b_Token _69517_arg = _69043_d->_field_args[1LL];
		(*this)._method_push_err(_69517_arg,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	_23e730c0b_Token _69913_arg = _69043_d->_field_args[0LL];
	if (_69913_arg._field_id != 6LLU) {
		(*this)._method_push_err(_69913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_69913_arg._field_kind[0LL] != '\"') {
		(*this)._method_push_err(_69913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*this)._field_table->_field_passes = jule::alloc_for_append((*this)._field_table->_field_passes,1);(*this)._field_table->_field_passes.push(_22551ab31_Pass(_69043_d->_field_tag,_69913_arg._field_kind.slice(1LL,_69913_arg._field_kind.len() - 1LL)));
}



inline void _22551ab31_SymbolBuilder::_method_append_top_directives(void) {
	{
		auto &expr = (*this)._field_ast->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_5555734480:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_Directive> _22551ab31_d = *it;
			{
				{
					auto &_match_expr{ _22551ab31_d->_field_tag._field_kind };
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_5555737904:;
						{
							(*this)._method_push_directive_pass(_22551ab31_d);
						}
					}
					_match_end_5555738432:;
				}
			}
			_iter_next_5555734480:;
			++it;
			goto _iter_begin_5555734480;
		}
		_iter_end_5555734480:;
	}
}



inline void _22551ab31_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_225a097a1_SymbolTable>(new( std::nothrow ) _225a097a1_SymbolTable(this->self->_field_ast->_field_file,jule::Slice<_22551ab31_Pass>(),jule::Slice<jule::Ptr<_225615962_ImportInfo>>(),jule::Slice<jule::Ptr<_2258258db_Var>>(),jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>(),jule::Slice<jule::Ptr<_225036509_Struct>>(),jule::Slice<jule::Ptr<_2252d6a73_Fn>>(),jule::Slice<jule::Ptr<_2255ab70a_Trait>>(),jule::Slice<jule::Ptr<_2255aae79_Enum>>(),jule::Slice<jule::Ptr<_2255b811d_Impl>>()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _22551ab31_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2255ba3ea_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2255ba3ea_Match::_method_is_generic_type_match(void) {
	return ((*this)._field_type_match && ((*this)._field_expr != nullptr)) && (*this)._field_expr->_field_kind->_field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2255ba3ea_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_225615962_ImportInfo> _2255ba3ea_ScopeChecker::_method_find_package(jule::Str _41835_ident) {
	return (*this)._field_s->_method_find_package(_41835_ident);
}



inline jule::Ptr<_225615962_ImportInfo> _2255ba3ea_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)> _42837_selector) {
	return (*this)._field_s->_method_select_package(_42837_selector);
}



inline jule::Ptr<_2258258db_Var> _2255ba3ea_ScopeChecker::_method_find_var(jule::Str _43931_ident,jule::Bool _43943_cpp_linked) {
	
	jule::Ptr<_2258258db_Var> _44217_v = (*this)._field_table->_method___find_var(_43931_ident,_43943_cpp_linked,true);
	if (_44217_v != nullptr) {
		return _44217_v;
	}
	jule::Ptr<_2255ba3ea_ScopeChecker> _44717_parent = (*this)._field_parent;
	while (_44717_parent != nullptr) {
		{
			_44217_v=_44717_parent->_field_table->_method___find_var(_43931_ident,_43943_cpp_linked,true);
			if (_44217_v != nullptr) {
				return _44217_v;
			}
			_44717_parent=_44717_parent->_field_parent;
		}
	_iter_next_5555797216:;
	}
	_iter_end_5555797216:;
	return (*this)._field_s->_method_find_var(_43931_ident,_43943_cpp_linked);
}



inline jule::Ptr<_23e2b5818_TypeAlias> _2255ba3ea_ScopeChecker::_method_find_type_alias(jule::Str _46638_ident,jule::Bool _46650_cpp_linked) {
	
	jule::Ptr<_23e2b5818_TypeAlias> _46917_ta = (*this)._field_table->_method___find_type_alias(_46638_ident,_46650_cpp_linked,true);
	if (_46917_ta != nullptr) {
		return _46917_ta;
	}
	jule::Ptr<_2255ba3ea_ScopeChecker> _47417_parent = (*this)._field_parent;
	while (_47417_parent != nullptr) {
		{
			_46917_ta=_47417_parent->_field_table->_method___find_type_alias(_46638_ident,_46650_cpp_linked,true);
			if (_46917_ta != nullptr) {
				return _46917_ta;
			}
			_47417_parent=_47417_parent->_field_parent;
		}
	_iter_next_5555809456:;
	}
	_iter_end_5555809456:;
	return (*this)._field_s->_method_find_type_alias(_46638_ident,_46650_cpp_linked);
}



inline jule::Ptr<_225036509_Struct> _2255ba3ea_ScopeChecker::_method_find_struct(jule::Str _49134_ident,jule::Bool _49146_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_49134_ident,_49146_cpp_linked);
}



inline jule::Ptr<_2252d6a73_Fn> _2255ba3ea_ScopeChecker::_method_find_fn(jule::Str _50030_ident,jule::Bool _50042_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_50030_ident,_50042_cpp_linked);
}



inline jule::Ptr<_2255ab70a_Trait> _2255ba3ea_ScopeChecker::_method_find_trait(jule::Str _50933_ident) {
	return (*this)._field_s->_method_find_trait(_50933_ident);
}



inline jule::Ptr<_2255aae79_Enum> _2255ba3ea_ScopeChecker::_method_find_enum(jule::Str _51832_ident) {
	return (*this)._field_s->_method_find_enum(_51832_ident);
}



inline jule::Bool _2255ba3ea_ScopeChecker::_method_is_unsafe(void) {
	jule::Ptr<_2255ba3ea_ScopeChecker> _52617_scope = this->self;
	_julec_label_iter:;
	if (_52617_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (_52617_scope->_field_parent != nullptr) {
		_52617_scope=_52617_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _2255ba3ea_ScopeChecker::_method_is_root(void) {
	return ((*this)._field_parent == nullptr) || ((*this)._field_owner != nullptr);
}



inline jule::Bool _2255ba3ea_ScopeChecker::_method_is_deferred(void) {
	jule::Ptr<_2255ba3ea_ScopeChecker> _54717_scope = this->self;
	_julec_label_iter:;
	if (_54717_scope->_field_scope->_field_deferred) {
		return true;
	}
	if (_54717_scope->_field_parent != nullptr) {
		_54717_scope=_54717_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_2255ba3ea_ScopeChecker> _2255ba3ea_ScopeChecker::_method_get_root(void) {
	jule::Ptr<_2255ba3ea_ScopeChecker> _56517_root = this->self;
	while ((_56517_root->_field_parent != nullptr) && (_56517_root->_field_owner == nullptr)) {
		{
			_56517_root=_56517_root->_field_parent;
		}
	_iter_next_5555847200:;
	}
	_iter_end_5555847200:;
	return _56517_root;
}



inline jule::Ptr<_2255ba3ea_Label> _2255ba3ea_ScopeChecker::_method_find_label(jule::Str _57529_ident) {
	{
		auto &expr = (*this)._field_scope->_field_stmts;
		auto it = expr.begin();
		_iter_begin_5555851200:;
		if (it != expr.end()) {
			jule::Any _2255ba3ea_st = *it;
			{
				{
					auto &_match_expr{ _2255ba3ea_st };
					if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Label>>()) {
						_case_begin_5555852624:;
						{
							jule::Ptr<_2255ba3ea_Label> _57925_label = _2255ba3ea_st.operator jule::Ptr<_2255ba3ea_Label>();
							if (_57925_label->_field_ident == _57529_ident) {
								return _57925_label;
							}
						}
					}
					_match_end_5555853008:;
				}
			}
			_iter_next_5555851200:;
			++it;
			goto _iter_begin_5555851200;
		}
		_iter_end_5555851200:;
	}
	return nullptr;
}



inline jule::Ptr<_2255ba3ea_ScopeLabel> _2255ba3ea_ScopeChecker::_method_find_label_scope(jule::Str _59136_ident) {
	jule::Ptr<_2255ba3ea_ScopeLabel> _59217_label = this->self->_method_find_label_all(_59136_ident);
	if ((_59217_label != nullptr) && (_59217_label->_field_scope == this->self)) {
		return _59217_label;
	}
	return nullptr;
}



inline jule::Ptr<_2255ba3ea_ScopeLabel> _2255ba3ea_ScopeChecker::_method_find_label_all(jule::Str _60333_ident) {
	{
		auto &expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_5555860880:;
		if (it != expr.end()) {
			jule::Ptr<_2255ba3ea_ScopeLabel> _2255ba3ea_lbl = *it;
			{
				if (_2255ba3ea_lbl->_field_label->_field_ident == _60333_ident) {
					return _2255ba3ea_lbl;
				}
			}
			_iter_next_5555860880:;
			++it;
			goto _iter_begin_5555860880;
		}
		_iter_end_5555860880:;
	}
	return nullptr;
}



inline jule::Bool _2255ba3ea_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _61538_itself,jule::Str _61555_ident) {
	jule::Ptr<_2258258db_Var> _61613_v = (*this)._method_find_var(_61555_ident,false);
	if ((_61613_v != nullptr) && (static_cast<jule::Uintptr>(_61613_v) != _61538_itself)) {
		if (_61613_v->_field_scope == nullptr) {
			return false;
		}
		return (_61613_v->_field_scope == (*this)._field_scope) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	jule::Ptr<_23e2b5818_TypeAlias> _62413_ta = (*this)._method_find_type_alias(_61555_ident,false);
	if ((_62413_ta != nullptr) && (static_cast<jule::Uintptr>(_62413_ta) != _61538_itself)) {
		if (_62413_ta->_field_scope == nullptr) {
			return false;
		}
		return (_62413_ta->_field_scope == (*this)._field_tree) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	return false;
}



inline void _2255ba3ea_ScopeChecker::_method_check_var_decl(jule::Ptr<_23e45734a_VarDecl> _63538_decl) {
	jule::Ptr<_2258258db_Var> _63617_v = _22551ab31_build_var(_63538_decl);
	_63617_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars = jule::alloc_for_append(this->self->_field_table->_field_vars,1);this->self->_field_table->_field_vars.push(_63617_v);
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_63617_v));
	});
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_63617_v),_63617_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_63617_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_63617_v->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_field_s->_method_check_var_decl(_63617_v,this->self);
	if ((!(_63617_v->_method_is_type_inferred())) && ((_63617_v->_field_kind == nullptr) || (_63617_v->_field_kind->_field_kind == nullptr))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_63617_v,this->self);
}



inline void _2255ba3ea_ScopeChecker::_method_check_type_alias_decl(jule::Ptr<_23e45734a_TypeAliasDecl> _65745_decl) {
	jule::Ptr<_23e2b5818_TypeAlias> _65817_ta = _22551ab31_build_type_alias(_65745_decl);
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_65817_ta),_65817_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_65817_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_65817_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_field_s->_method_check_type_alias_decl(_65817_ta,this->self);
	this->self->_field_table->_field_type_aliases = jule::alloc_for_append(this->self->_field_table->_field_type_aliases,1);this->self->_field_table->_field_type_aliases.push(_65817_ta);
}



inline jule::Ptr<_2255ba3ea_Scope> _2255ba3ea_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_2255ba3ea_Scope>(new( std::nothrow ) _2255ba3ea_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _2255ba3ea_ScopeChecker::_method_check_child_ssc(jule::Ptr<_23e45734a_ScopeTree>& _67440_tree,jule::Ptr<_2255ba3ea_Scope>& _67463_s,jule::Ptr<_2255ba3ea_ScopeChecker>& _67479_ssc) {
	_67479_ssc->_field_parent=this->self;
	_67479_ssc->_method_check(_67440_tree,_67463_s);
}



inline jule::Ptr<_2255ba3ea_Scope> _2255ba3ea_ScopeChecker::_method_check_child_sc(jule::Ptr<_23e45734a_ScopeTree>& _67939_tree,jule::Ptr<_2255ba3ea_ScopeChecker>& _67962_ssc) {
	jule::Ptr<_2255ba3ea_Scope> _68017_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_67939_tree,_68017_s,_67962_ssc);
	return _68017_s;
}



inline jule::Ptr<_2255ba3ea_Scope> _2255ba3ea_ScopeChecker::_method_check_child(jule::Ptr<_23e45734a_ScopeTree>& _68536_tree) {
	jule::Ptr<_2255ba3ea_ScopeChecker> _68617_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_68536_tree,_68617_ssc);
}



inline void _2255ba3ea_ScopeChecker::_method_check_anon_scope(jule::Ptr<_23e45734a_ScopeTree> _69040_tree) {
	jule::Ptr<_2255ba3ea_Scope> _69117_s = this->self->_method_check_child(_69040_tree);
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_69117_s));
}



inline void _2255ba3ea_ScopeChecker::_method_process_error_call(jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>& _69543_m,_23e730c0b_Token _69574_err) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_69574_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	}
	jule::Ptr<_2255ba3ea_ScopeChecker> _70017_root = this->self->_method_get_root();
	if ((!(_70017_root->_field_owner->_field_decl->_field_exceptional))) {
		this->self->_field_s->_method_push_err(_69574_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		this->self->_field_s->_method_push_suggestion(jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	}
	_69543_m->_field_func=_70017_root->_field_owner;
}



inline void _2255ba3ea_ScopeChecker::_method_check_expr(jule::Ptr<_23e45734a_Expr> _70834_expr) {
	jule::Ptr<_225aa4a5a_Eval> _70917_eval = this->self->_field_s->_method_eval(this->self);
	_70917_eval->_field_ignored=true;
	jule::Ptr<_225aa4a5a_Data> _71117_d = _70917_eval->_method_eval_expr(_70834_expr);
	if (_71117_d == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _71117_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>>()) {
			_case_begin_5555939056:;
			{
				jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel> _71821_m = _71117_d->_field_model.operator jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>();
				this->self->_method_process_error_call(_71821_m,_70834_expr->_field_token);
				this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_71117_d));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_2255b85b3_FnCallExprModel>>()) {
			_case_begin_5555939152:;
			{
				this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_71117_d));
			}
		}
		else {
			_case_begin_5555938672:;
			{
				this->self->_field_s->_method_push_err(_70834_expr->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_5555938064:;
	}
}



inline void _2255ba3ea_ScopeChecker::_method_check_co_expr(jule::Ptr<_23e45734a_CoExpr> _73537_expr) {
	jule::Ptr<_225aa4a5a_Eval> _73617_eval = this->self->_field_s->_method_eval(this->self);
	_73617_eval->_field_ignored=true;
	jule::Ptr<_225aa4a5a_Data> _73817_d = _73617_eval->_method_eval_expr(_73537_expr->_field_expr);
	if (_73817_d == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _73817_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_2255b85b3_FnCallExprModel>>()) {
			_case_begin_5555955296:;
			{
				jule::Ptr<_2255b85b3_FnCallExprModel> _74521_model = _73817_d->_field_model.operator jule::Ptr<_2255b85b3_FnCallExprModel>();
				if (_74521_model->_field_func->_field_decl->_field_exceptional) {
					this->self->_field_s->_method_push_err(_73537_expr->_field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					this->self->_field_s->_method_push_suggestion(jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				}
				_74521_model->_field_is_co=true;
				_73617_eval->_method_check_fn_of_concurrent_call(_74521_model->_field_func,_73537_expr->_field_expr->_field_token);
				this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_73817_d));
			}
		}
		else {
			_case_begin_5555952912:;
			{
				this->self->_field_s->_method_push_err(_73537_expr->_field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_5555952304:;
	}
}



inline jule::Ptr<_2255ba3ea_If> _2255ba3ea_ScopeChecker::_method_check_if(jule::Ptr<_23e45734a_If> _76132_i) {
	jule::Ptr<_2255ba3ea_Scope> _76217_s = this->self->_method_check_child(_76132_i->_field_scope);
	jule::Ptr<_225aa4a5a_Data> _76417_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_76132_i->_field_expr);
	if (_76417_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_23e2b5818_Prim> _76917_prim = _76417_d->_field_kind->_method_prim();
	if ((_76917_prim == nullptr) || (!(_76917_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_76132_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_2255ba3ea_If>(new( std::nothrow ) _2255ba3ea_If(_76417_d->_field_model,_76217_s));
}



inline jule::Ptr<_2255ba3ea_Else> _2255ba3ea_ScopeChecker::_method_check_else(jule::Ptr<_23e45734a_Else> _78134_e) {
	return jule::new_struct<_2255ba3ea_Else>(new( std::nothrow ) _2255ba3ea_Else(this->self->_method_check_child(_78134_e->_field_scope)));
}



inline void _2255ba3ea_ScopeChecker::_method_check_conditional(jule::Ptr<_23e45734a_Conditional> _78741_conditional) {
	jule::Ptr<_2255ba3ea_Conditional> _78817_c = jule::new_struct<_2255ba3ea_Conditional>(new( std::nothrow ) _2255ba3ea_Conditional());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_78817_c));
	_78817_c->_field_elifs=jule::Slice<jule::Ptr<_2255ba3ea_If>>::alloc(0LL,static_cast<jule::I64>(_78741_conditional->_field_tail.len() + 1LL));
	_78817_c->_field_elifs = jule::alloc_for_append(_78817_c->_field_elifs,1);_78817_c->_field_elifs.push(this->self->_method_check_if(_78741_conditional->_field_head));
	{
		auto &expr = _78741_conditional->_field_tail;
		auto it = expr.begin();
		_iter_begin_5555980416:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_If> _2255ba3ea_elif = *it;
			{
				_78817_c->_field_elifs = jule::alloc_for_append(_78817_c->_field_elifs,1);_78817_c->_field_elifs.push(this->self->_method_check_if(_2255ba3ea_elif));
			}
			_iter_next_5555980416:;
			++it;
			goto _iter_begin_5555980416;
		}
		_iter_end_5555980416:;
	}
	if (_78741_conditional->_field_default != nullptr) {
		_78817_c->_field_default=this->self->_method_check_else(_78741_conditional->_field_default);
	}
}



inline jule::Ptr<_2255ba3ea_Scope> _2255ba3ea_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _80339_it,jule::Ptr<_23e45734a_ScopeTree> _80356_tree,jule::Ptr<_2255ba3ea_ScopeChecker> _80378_ssc) {
	_80378_ssc->_field_it=_80339_it;
	return this->self->_method_check_child_sc(_80356_tree,_80378_ssc);
}



inline jule::Ptr<_2255ba3ea_Scope> _2255ba3ea_ScopeChecker::_method_check_iter_scope(jule::Uintptr _80836_it,jule::Ptr<_23e45734a_ScopeTree>& _80854_tree) {
	jule::Ptr<_2255ba3ea_ScopeChecker> _80917_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_80836_it,_80854_tree,_80917_ssc);
}



inline void _2255ba3ea_ScopeChecker::_method_check_inf_iter(jule::Ptr<_23e45734a_Iter>& _81339_it) {
	jule::Ptr<_2255ba3ea_InfIter> _81417_kind = jule::new_struct<_2255ba3ea_InfIter>(new( std::nothrow ) _2255ba3ea_InfIter());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_81417_kind));
	_81417_kind->_field_scope=this->self->_method_check_iter_scope(static_cast<jule::Uintptr>(_81417_kind),_81339_it->_field_scope);
}



inline void _2255ba3ea_ScopeChecker::_method_check_while_iter(jule::Ptr<_23e45734a_Iter>& _82141_it) {
	jule::Ptr<_23e45734a_WhileKind> _82217_wh = _82141_it->_field_kind.operator jule::Ptr<_23e45734a_WhileKind>();
	if ((_82217_wh->_field_expr == nullptr) && (_82217_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_82141_it);
		return;
	}
	jule::Ptr<_2255ba3ea_WhileIter> _82817_kind = jule::new_struct<_2255ba3ea_WhileIter>(new( std::nothrow ) _2255ba3ea_WhileIter());
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_82817_kind));
	_82817_kind->_field_scope=this->self->_method_check_iter_scope(static_cast<jule::Uintptr>(_82817_kind),_82141_it->_field_scope);
	if (_82217_wh->_field_expr != nullptr) {
		jule::Ptr<_225aa4a5a_Data> _83521_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_82217_wh->_field_expr);
		if (_83521_d == nullptr) {
			return;
		}
		jule::Ptr<_23e2b5818_Prim> _84017_prim = _83521_d->_field_kind->_method_prim();
		if (_84017_prim == nullptr) {
			this->self->_field_s->_method_push_err(_82141_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		if ((!(_84017_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_82141_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		_82817_kind->_field_expr=_83521_d->_field_model;
	}
	if (_82217_wh->_method_is_while_next()) {
		if ((!(_2255ba3ea_is_valid_ast_st_for_next_st(_82217_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_82217_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;
		}
		jule::I64 _86017_n = this->self->_field_scope->_field_stmts.len();
		this->self->_method_check_node(_82217_wh->_field_next);
		if (_86017_n < this->self->_field_scope->_field_stmts.len()) {
			jule::Any _86325_st = this->self->_field_scope->_field_stmts[_86017_n];
			this->self->_field_scope->_field_stmts=this->self->_field_scope->_field_stmts.slice(0LL,_86017_n);
			if ((!(_2255ba3ea_is_valid_st_for_next_st(_86325_st)))) {
				this->self->_field_s->_method_push_err(_82217_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			}
			_82817_kind->_field_next=_86325_st;
		}
	}
}



inline void _2255ba3ea_ScopeChecker::_method_check_range_iter(jule::Ptr<_23e45734a_Iter>& _87441_it) {
	jule::Ptr<_23e45734a_RangeKind> _87517_rang = _87441_it->_field_kind.operator jule::Ptr<_23e45734a_RangeKind>();
	jule::Ptr<_225aa4a5a_Data> _87717_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_87517_rang->_field_expr);
	if (_87717_d == nullptr) {
		return;
	}
	jule::Ptr<_2255ba3ea_RangeIter> _88217_kind = jule::new_struct<_2255ba3ea_RangeIter>(new( std::nothrow ) _2255ba3ea_RangeIter(_87717_d,jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_2258258db_Var>(),jule::Ptr<_2258258db_Var>()));
	_22582290a_RangeChecker _88617_rc = _22582290a_RangeChecker(this->self,_87517_rang,_88217_kind,_87717_d);
	jule::Bool _89213_ok = _88617_rc._method_check();
	if ((!(_89213_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_88217_kind));
	jule::Ptr<_2255ba3ea_ScopeChecker> _89917_ssc = this->self->_method_new_child_checker();
	if (_88217_kind->_field_key_a != nullptr) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_88217_kind->_field_key_a->_field_ident)) {
			this->self->_field_s->_method_push_err(_88217_kind->_field_key_a->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_88217_kind->_field_key_a->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_89917_ssc->_field_table->_field_vars = jule::alloc_for_append(_89917_ssc->_field_table->_field_vars,1);_89917_ssc->_field_table->_field_vars.push(_88217_kind->_field_key_a);
	}
	if (_88217_kind->_field_key_b != nullptr) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_88217_kind->_field_key_b->_field_ident)) {
			this->self->_field_s->_method_push_err(_88217_kind->_field_key_b->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_88217_kind->_field_key_b->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_89917_ssc->_field_table->_field_vars = jule::alloc_for_append(_89917_ssc->_field_table->_field_vars,1);_89917_ssc->_field_table->_field_vars.push(_88217_kind->_field_key_b);
	}
	_88217_kind->_field_scope=this->self->_method_check_iter_scope_sc(static_cast<jule::Uintptr>(_88217_kind),_87441_it->_field_scope,_89917_ssc);
}



inline void _2255ba3ea_ScopeChecker::_method_check_iter(jule::Ptr<_23e45734a_Iter> _92034_it) {
	if (_92034_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_92034_it);
		return;
	}
	{
		auto &_match_expr{ _92034_it->_field_kind };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_WhileKind>>()) {
			_case_begin_5556065696:;
			{
				this->self->_method_check_while_iter(_92034_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_RangeKind>>()) {
			_case_begin_5556065168:;
			{
				this->self->_method_check_range_iter(_92034_it);
			}
		}
		else {
			_case_begin_5556063520:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_5556064496:;
	}
}



inline jule::Bool _2255ba3ea_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _93342_it) {
	jule::Ptr<_2255ba3ea_ScopeChecker> _93417_scope = this->self;
	_julec_label_iter:;
	if (_93417_scope->_field_it == _93342_it) {
		return true;
	}
	if (_93417_scope->_field_parent != nullptr) {
		_93417_scope=_93417_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _2255ba3ea_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _94943_ptr) {
	jule::Ptr<_2255ba3ea_ScopeChecker> _95017_scope = this->self;
	_julec_label_iter:;
	if (_95017_scope->_field_it == _94943_ptr) {
		return true;
	}
	if (_95017_scope->_field_cse != 0LL) {
		jule::Uintptr _95817_mtch = static_cast<jule::Uintptr>(((_2255ba3ea_Case*)(_95017_scope->_field_cse))->_field_owner);
		if (_95817_mtch == _94943_ptr) {
			return true;
		}
	}
	if (_95017_scope->_field_parent != nullptr) {
		_95017_scope=_95017_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_2255ba3ea_ContSt> _2255ba3ea_ScopeChecker::_method_check_cont_valid_scope(jule::Ptr<_23e45734a_ContSt> _97242_c) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_97242_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_97242_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_2255ba3ea_ContSt>(new( std::nothrow ) _2255ba3ea_ContSt());
	}
	jule::Ptr<_2255ba3ea_ScopeChecker> _98217_scope = this->self;
	_julec_label_iter:;
	{
		if (((_98217_scope->_field_it == 0LL) && (_98217_scope->_field_parent != nullptr)) && (_98217_scope->_field_owner == nullptr)) {
			_case_begin_5556090768:;
			{
				_98217_scope=_98217_scope->_field_parent;
				goto _julec_label_iter;
			}
		}
		else if (_98217_scope->_field_it != 0LL) {
			_case_begin_5556090880:;
			{
				return jule::new_struct<_2255ba3ea_ContSt>(new( std::nothrow ) _2255ba3ea_ContSt(_98217_scope->_field_it));
			}
		}
		_match_end_5556090608:;
	}
	this->self->_field_s->_method_push_err(_97242_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _2255ba3ea_ScopeChecker::_method_check_cont(jule::Ptr<_23e45734a_ContSt> _99730_c) {
	jule::Ptr<_2255ba3ea_ContSt> _99817_cont = this->self->_method_check_cont_valid_scope(_99730_c);
	if (_99817_cont == nullptr) {
		return;
	}
	if (_99730_c->_field_label._field_id != 0LLU) {
		jule::Ptr<_2255ba3ea_ScopeLabel> _100421_label = _2255ba3ea_find_label_parent(_99730_c->_field_label._field_kind,this->self->_field_parent);
		if (_100421_label == nullptr) {
			this->self->_field_s->_method_push_err(_99730_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_99730_c->_field_label._field_kind)}));
			return;
		}
		_100421_label->_field_used=true;
		if ((_100421_label->_field_pos + 1LL) >= _100421_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_99730_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
			return;
		}
		jule::Int _101717_i = _100421_label->_field_pos + 1LL;
		if (_101717_i >= _100421_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_99730_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		} else {
			jule::Any _102125_st = _100421_label->_field_scope->_field_scope->_field_stmts[_101717_i];
			{
				auto &_match_expr{ _102125_st };
				if (_match_expr.type_is<jule::Ptr<_2255ba3ea_InfIter>>()) {
					_case_begin_5556113840:;
					{
						_99817_cont->_field_it=static_cast<jule::Uintptr>(_102125_st.operator jule::Ptr<_2255ba3ea_InfIter>());
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_RangeIter>>()) {
					_case_begin_5556113936:;
					{
						_99817_cont->_field_it=static_cast<jule::Uintptr>(_102125_st.operator jule::Ptr<_2255ba3ea_RangeIter>());
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_WhileIter>>()) {
					_case_begin_5556114032:;
					{
						_99817_cont->_field_it=static_cast<jule::Uintptr>(_102125_st.operator jule::Ptr<_2255ba3ea_WhileIter>());
					}
				}
				else {
					_case_begin_5556111584:;
					{
						this->self->_field_s->_method_push_err(_99730_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
					}
				}
				_match_end_5556113488:;
			}
		}
	}
	if (_99817_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_99817_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_99730_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_99817_cont));
}



inline void _2255ba3ea_ScopeChecker::_method_check_label(jule::Ptr<_23e45734a_LabelSt> _104035_l) {
	if (this->self->_method_find_label(_104035_l->_field_ident) != nullptr) {
		this->self->_field_s->_method_push_err(_104035_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_104035_l->_field_ident)}));
		return;
	}
	jule::Ptr<_2255ba3ea_Label> _104617_label = jule::new_struct<_2255ba3ea_Label>(new( std::nothrow ) _2255ba3ea_Label(_104035_l->_field_ident));
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_104617_label));
	(*(this->self->_field_labels))=jule::append((*(this->self->_field_labels)),jule::Slice<jule::Ptr<_2255ba3ea_ScopeLabel>>({jule::new_struct<_2255ba3ea_ScopeLabel>(new( std::nothrow ) _2255ba3ea_ScopeLabel(_104035_l->_field_token,_104617_label,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL),this->self,jule::Bool()))}));
}



inline void _2255ba3ea_ScopeChecker::_method_push_goto(jule::Ptr<_23e45734a_GotoSt> _105933_gt) {
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_2255ba3ea_GotoSt>(new( std::nothrow ) _2255ba3ea_GotoSt(_105933_gt->_field_label._field_kind))));
	(*(this->self->_field_gotos))=jule::append((*(this->self->_field_gotos)),jule::Slice<jule::Ptr<_2255ba3ea_ScopeGoto>>({jule::new_struct<_2255ba3ea_ScopeGoto>(new( std::nothrow ) _2255ba3ea_ScopeGoto(_105933_gt,this->self,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL)))}));
}



inline void _2255ba3ea_ScopeChecker::_method_check_postfix(jule::Ptr<_23e45734a_AssignSt> _107137_a) {
	if (_107137_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_107137_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_23e45734a_Expr> _107717_expr = _107137_a->_field_left[0LL]->_field_expr;
	jule::Ptr<_225aa4a5a_Data> _107817_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_107717_expr);
	if (_107817_d == nullptr) {
		return;
	}
	_2255ba3ea_check_assign(this->self->_field_s,_107817_d,nullptr,_107137_a->_field_setter);
	if (_107817_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_23e2b5818_Ptr> _108621_ptr = _107817_d->_field_kind->_method_ptr();
		if (_108621_ptr->_method_is_unsafe()) {
			this->self->_field_s->_method_push_err(_107137_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_107137_a->_field_setter._field_kind),jule::Any(_107817_d->_field_kind->_method_to_str())}));
			return;
		}
	} else {
		if ((_107817_d->_field_kind->_method_prim() == nullptr) || (!(_2261088d8_is_num(_107817_d->_field_kind->_method_prim()->_field_kind)))) {
			this->self->_field_s->_method_push_err(_107137_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_107137_a->_field_setter._field_kind),jule::Any(_107817_d->_field_kind->_method_to_str())}));
			return;
		}
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_2255ba3ea_Postfix>(new( std::nothrow ) _2255ba3ea_Postfix(_107817_d->_field_model,_107137_a->_field_setter._field_kind))));
}



inline jule::Bool _2255ba3ea_ScopeChecker::_method_is_new_assign_ident(jule::Str _110438_ident) {
	if (_23e730c0b_is_ignore_ident(_110438_ident) || (_110438_ident == jule::Str())) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_110438_ident,false) == nullptr;
}



inline void _2255ba3ea_ScopeChecker::_method_check_single_assign(jule::Ptr<_23e45734a_AssignSt>& _111244_a) {
	jule::Ptr<_225aa4a5a_Data> _111317_l = nullptr;
	if ((!(_23e730c0b_is_ignore_ident(_111244_a->_field_left[0LL]->_field_ident)))) {
		jule::Ptr<_23e45734a_Expr> _111621_expr = _111244_a->_field_left[0LL]->_field_expr;
		_111317_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_111621_expr);
		if (_111317_l == nullptr) {
			return;
		}
	}
	jule::Ptr<_225aa4a5a_Eval> _112317_eval = (((_111317_l != nullptr)) ? (this->self->_field_s->_method_evalp(this->self,_111317_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
	jule::Ptr<_225aa4a5a_Data> _112817_r = _112317_eval->_method_eval_expr(_111244_a->_field_right);
	if (_112817_r == nullptr) {
		return;
	}
	if (_111317_l == nullptr) {
		if (_112817_r->_field_kind->_method_void()) {
			this->self->_field_s->_method_push_err(_111244_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_112817_r));
		return;
	}
	if ((!(_2255ba3ea_check_assign(this->self->_field_s,_111317_l,_112817_r,_111244_a->_field_setter)))) {
		return;
	}
	if (_112817_r->_field_kind->_method_tup() != nullptr) {
		this->self->_field_s->_method_push_err(_111244_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_2255ba3ea_Assign>(new( std::nothrow ) _2255ba3ea_Assign(_111317_l->_field_model,_112817_r->_field_model,_111244_a->_field_setter._field_kind))));
	if (_111244_a->_field_setter._field_kind != jule::Str("=", 1)) {
		_111244_a->_field_setter._field_kind=_111244_a->_field_setter._field_kind.slice(0LL,_111244_a->_field_setter._field_kind.len() - 1LL);
		_225aa4a5a_BinopSolver _116021_solver = _225aa4a5a_BinopSolver(jule::new_struct_ptr<_225aa4a5a_Eval>(new( std::nothrow ) _225aa4a5a_Eval(this->self->_field_s,this->self,jule::Ptr<_23e2b5818_TypeKind>(),this->self->_method_is_unsafe(),jule::Bool(),jule::Bool(),jule::Ptr<_2258258db_Var>())),jule::Ptr<_225aa4a5a_Data>(),jule::Ptr<_225aa4a5a_Data>(),_111244_a->_field_setter);
		_112817_r=_116021_solver._method_solve_explicit(_111317_l,_112817_r);
		if (_112817_r == nullptr) {
			return;
		}
		_111244_a->_field_setter._field_kind+=jule::Str("=", 1);
		return;
	}
	_22582290a_AssignTypeChecker _117717_checker = _22582290a_AssignTypeChecker(this->self->_field_s,_111317_l->_field_kind,_112817_r,_111244_a->_field_setter);
	_117717_checker._method_check();
}



inline void _2255ba3ea_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ptr<_2255ba3ea_MultiAssign> _118657_st,jule::Ptr<_23e45734a_AssignSt> _118713_a,jule::Ptr<_23e45734a_AssignLeft> _118731_lexpr,jule::Ptr<_225aa4a5a_Data> _118755_l,jule::Ptr<_225aa4a5a_Data> _118769_r) {
	if (_23e730c0b_is_ignore_ident(_118731_lexpr->_field_ident)) {
		if (_118769_r->_field_kind->_method_void()) {
			(*this)._field_s->_method_push_err(_118713_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_118657_st->_field_l = jule::alloc_for_append(_118657_st->_field_l,1);_118657_st->_field_l.push(jule::Any(nullptr));
		return;
	}
	if (_118713_a->_field_declarative && (*this)._method_is_new_assign_ident(_118731_lexpr->_field_ident)) {
		jule::Ptr<_2258258db_Var> _119921_v = jule::new_struct<_2258258db_Var>(new( std::nothrow ) _2258258db_Var((*this)._field_scope,_118731_lexpr->_field_token,_118731_lexpr->_field_ident,jule::Bool(),jule::Bool(),_118731_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_118731_lexpr->_field_reference,jule::Str(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::new_struct<_225aa4a5a_Value>(new( std::nothrow ) _225aa4a5a_Value(_118713_a->_field_right,_118769_r)),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Ptr<_2258258db_IterRelation>(),jule::Slice<jule::Ptr<_2258258db_Var>>()));
		(*this)._field_s->_method_check_var(_119921_v);
		_118657_st->_field_l = jule::alloc_for_append(_118657_st->_field_l,1);_118657_st->_field_l.push(jule::Any(_119921_v));
		(*this)._field_table->_field_vars = jule::alloc_for_append((*this)._field_table->_field_vars,1);(*this)._field_table->_field_vars.push(_119921_v);
		(*this)._field_scope->_field_stmts = jule::alloc_for_append((*this)._field_scope->_field_stmts,1);(*this)._field_scope->_field_stmts.push(jule::Any(_119921_v));
		return;
	}
	if (_118731_lexpr->_field_mutable || _118731_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_118731_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_118731_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((!(_2255ba3ea_check_assign((*this)._field_s,_118755_l,_118769_r,_118713_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_118755_l->_field_mutable,false,_118755_l->_field_kind,_118769_r,_118713_a->_field_setter);
	_22582290a_AssignTypeChecker _123417_checker = _22582290a_AssignTypeChecker((*this)._field_s,_118755_l->_field_kind,_118769_r,_118713_a->_field_setter);
	_123417_checker._method_check();
	_118657_st->_field_l = jule::alloc_for_append(_118657_st->_field_l,1);_118657_st->_field_l.push(_118755_l->_field_model);
}



inline void _2255ba3ea_ScopeChecker::_method_check_ret_multi_assign(jule::Ptr<_23e45734a_AssignSt>& _124547_a) {
	jule::Ptr<_225aa4a5a_Data> _124617_rd = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_124547_a->_field_right);
	if (_124617_rd == nullptr) {
		return;
	}
	jule::Slice<jule::Ptr<_225aa4a5a_Data>> _125117_r = _2255ba3ea_get_datas_from_tuple_data(_124617_rd);
	{
		if (_124547_a->_field_left.len() > _125117_r.len()) {
			_case_begin_5556243120:;
			{
				this->self->_field_s->_method_push_err(_124547_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_124547_a->_field_left.len() < _125117_r.len()) {
			_case_begin_5556243232:;
			{
				this->self->_field_s->_method_push_err(_124547_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_5556242960:;
	}
	jule::Ptr<_2255ba3ea_MultiAssign> _126317_st = jule::new_struct<_2255ba3ea_MultiAssign>(new( std::nothrow ) _2255ba3ea_MultiAssign(jule::Slice<jule::Any>(),_124617_rd->_field_model));
	if (_124617_rd->_field_kind->_method_tup() == nullptr) {
		_126317_st->_field_r=jule::Any(jule::new_struct<_2255b85b3_TupleExprModel>(new( std::nothrow ) _2255b85b3_TupleExprModel(_125117_r)));
	}
	{
		auto &expr = _124547_a->_field_left;
		auto it = expr.begin();
		_iter_begin_5556251600:;
		if (it != expr.end()) {
			jule::Int _2255ba3ea_i = it - expr.begin();
			{
				jule::Ptr<_23e45734a_AssignLeft> _127221_lexpr = _124547_a->_field_left[_2255ba3ea_i];
				jule::Ptr<_225aa4a5a_Data> _127321_l = nullptr;
				if ((!(_23e730c0b_is_ignore_ident(_127221_lexpr->_field_ident))) && ((!(_124547_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_127221_lexpr->_field_ident))))) {
					_127321_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_127221_lexpr->_field_expr);
					if (_127321_l == nullptr) {
						goto _iter_next_5556251600;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_126317_st,_124547_a,_127221_lexpr,_127321_l,_125117_r[_2255ba3ea_i]);
			}
			_iter_next_5556251600:;
			++it;
			_2255ba3ea_i++;
			goto _iter_begin_5556251600;
		}
		_iter_end_5556251600:;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_126317_st));
}



inline void _2255ba3ea_ScopeChecker::_method_check_multi_assign(jule::Ptr<_23e45734a_AssignSt>& _128943_a) {
	{
		auto &_match_expr{ _128943_a->_field_right->_field_kind };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_FnCallExpr>>()) {
			_case_begin_5556261872:;
			{
				this->self->_method_check_ret_multi_assign(_128943_a);
				return;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_UnsafeExpr>>()) {
			_case_begin_5556262400:;
			{
				{
					auto &_match_expr{ _128943_a->_field_right->_field_kind.operator jule::Ptr<_23e45734a_UnsafeExpr>()->_field_expr };
					if (_match_expr.type_is<jule::Ptr<_23e45734a_FnCallExpr>>()) {
						_case_begin_5556262560:;
						{
							this->self->_method_check_ret_multi_assign(_128943_a);
							return;
						}
					}
					_match_end_5556266016:;
				}
			}
		}
		_match_end_5556262272:;
	}
	jule::Slice<jule::Any> _130317_right = _2255ba3ea_get_expr_models(_128943_a->_field_right->_field_kind);
	{
		if (_128943_a->_field_left.len() > _130317_right.len()) {
			_case_begin_5556268720:;
			{
				this->self->_field_s->_method_push_err(_128943_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_128943_a->_field_left.len() < _130317_right.len()) {
			_case_begin_5556268816:;
			{
				this->self->_field_s->_method_push_err(_128943_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_5556268496:;
	}
	jule::Ptr<_2255b85b3_TupleExprModel> _131517_right_tuple = jule::new_struct<_2255b85b3_TupleExprModel>(new( std::nothrow ) _2255b85b3_TupleExprModel());
	jule::Ptr<_2255ba3ea_MultiAssign> _131717_st = jule::new_struct<_2255ba3ea_MultiAssign>(new( std::nothrow ) _2255ba3ea_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_131517_right_tuple)));
	{
		auto &expr = _128943_a->_field_left;
		auto it = expr.begin();
		_iter_begin_5556275728:;
		if (it != expr.end()) {
			jule::Int _2255ba3ea_i = it - expr.begin();
			{
				jule::Ptr<_23e45734a_AssignLeft> _132221_lexpr = _128943_a->_field_left[_2255ba3ea_i];
				jule::Ptr<_225aa4a5a_Data> _132321_l = nullptr;
				if ((!(_23e730c0b_is_ignore_ident(_132221_lexpr->_field_ident))) && ((!(_128943_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_132221_lexpr->_field_ident))))) {
					_132321_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_132221_lexpr->_field_expr);
					if (_132321_l == nullptr) {
						goto _iter_next_5556275728;
					}
				}
				jule::Ptr<_23e45734a_Expr> _133321_expr = jule::new_struct<_23e45734a_Expr>(new( std::nothrow ) _23e45734a_Expr(_128943_a->_field_right->_field_token,_130317_right[_2255ba3ea_i]));
				jule::Ptr<_225aa4a5a_Eval> _133421_eval = (((_132321_l != nullptr)) ? (this->self->_field_s->_method_evalp(this->self,_132321_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
				jule::Ptr<_225aa4a5a_Data> _133921_r = _133421_eval->_method_eval_expr(_133321_expr);
				if (_133921_r == nullptr) {
					goto _iter_next_5556275728;
				}
				_131517_right_tuple->_field_datas = jule::alloc_for_append(_131517_right_tuple->_field_datas,1);_131517_right_tuple->_field_datas.push(_133921_r);
				this->self->_method___process_end_part_of_multi_assign(_131717_st,_128943_a,_132221_lexpr,_132321_l,_133921_r);
			}
			_iter_next_5556275728:;
			++it;
			_2255ba3ea_i++;
			goto _iter_begin_5556275728;
		}
		_iter_end_5556275728:;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_131717_st));
}



inline void _2255ba3ea_ScopeChecker::_method_check_assign_st(jule::Ptr<_23e45734a_AssignSt> _135239_a) {
	if (_23e730c0b_is_postfix_op(_135239_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_135239_a);
		return;
	}
	if ((_135239_a->_field_left.len() == 1LL) && (!(_135239_a->_field_declarative))) {
		this->self->_method_check_single_assign(_135239_a);
		return;
	}
	this->self->_method_check_multi_assign(_135239_a);
}



inline jule::Ptr<_2255ba3ea_Scope> _2255ba3ea_ScopeChecker::_method_check_case_scope(jule::Ptr<_2255ba3ea_Case>& _136637_c,jule::Ptr<_23e45734a_ScopeTree>& _136652_tree) {
	jule::Ptr<_2255ba3ea_ScopeChecker> _136717_ssc = this->self->_method_new_child_checker();
	_136717_ssc->_field_cse=static_cast<jule::Uintptr>(_136637_c);
	return this->self->_method_check_child_sc(_136652_tree,_136717_ssc);
}



inline jule::Ptr<_2255ba3ea_Case> _2255ba3ea_ScopeChecker::_method_check_case(jule::Ptr<_2255ba3ea_Match> _137234_m,jule::Int _137245_i,jule::Ptr<_23e45734a_Case> _137257_c,jule::Ptr<_225aa4a5a_Data> _137287_expr) {
	jule::Ptr<_2255ba3ea_Case> _137317__case = _137234_m->_field_cases[_137245_i];
	_137317__case->_field_exprs=jule::Slice<jule::Ptr<_225aa4a5a_Data>>::alloc(0LL,static_cast<jule::I64>(_137257_c->_field_exprs.len()));
	jule::Bool _137517_generic_matched = false;
	{
		auto &expr = _137257_c->_field_exprs;
		auto it = expr.begin();
		_iter_begin_5556311008:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_Expr> _2255ba3ea_e = *it;
			{
				if (_137234_m->_field_type_match) {
					jule::Ptr<_225aa4a5a_Eval> _137925_eval = jule::new_struct_ptr<_225aa4a5a_Eval>(new( std::nothrow ) _225aa4a5a_Eval(this->self->_field_s,this->self,jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_2258258db_Var>()));
					jule::Ptr<_225aa4a5a_Data> _138425_d = _137925_eval->_method_eval(_2255ba3ea_e);
					if (_138425_d != nullptr) {
						_137317__case->_field_exprs = jule::alloc_for_append(_137317__case->_field_exprs,1);_137317__case->_field_exprs.push(_138425_d);
						if (_2255ba3ea_count_match_type(_137234_m,_138425_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_2255ba3ea_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_138425_d->_field_kind->_method_to_str())}));
						}
					}
					if (_137287_expr->_field_kind->_field_generic) {
						_137517_generic_matched=_137517_generic_matched || _137287_expr->_field_kind->_method_equals(_138425_d->_field_kind);
					} else {
						jule::Ptr<_2255ab70a_Trait> _139525_trt = _137287_expr->_field_kind->_method_trt();
						if (_139525_trt != nullptr) {
							this->self->_field_s->_method_check_type_compatibility(_137287_expr->_field_kind,_138425_d->_field_kind,_2255ba3ea_e->_field_token);
						}
					}
					goto _iter_next_5556311008;
				}
				jule::Ptr<_225aa4a5a_Data> _140421_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_2255ba3ea_e);
				if (_140421_d == nullptr) {
					goto _iter_next_5556311008;
				}
				_137317__case->_field_exprs = jule::alloc_for_append(_137317__case->_field_exprs,1);_137317__case->_field_exprs.push(_140421_d);
				_22582290a_AssignTypeChecker _141121_checker = _22582290a_AssignTypeChecker(this->self->_field_s,_137287_expr->_field_kind,_140421_d,_2255ba3ea_e->_field_token);
				_141121_checker._method_check();
			}
			_iter_next_5556311008:;
			++it;
			goto _iter_begin_5556311008;
		}
		_iter_end_5556311008:;
	}
	if (((!(_137234_m->_field_type_match)) || (!(_137287_expr->_field_kind->_field_generic))) || _137517_generic_matched) {
		_137317__case->_field_scope=this->self->_method_check_case_scope(_137317__case,_137257_c->_field_scope);
	}
	return _137317__case;
}



inline void _2255ba3ea_ScopeChecker::_method_check_cases(jule::Ptr<_23e45734a_MatchCase>& _142636_m,jule::Ptr<_2255ba3ea_Match> _142655_rm,jule::Ptr<_225aa4a5a_Data> _142671_expr) {
	_142655_rm->_field_cases=jule::Slice<jule::Ptr<_2255ba3ea_Case>>::alloc(static_cast<jule::I64>(_142636_m->_field_cases.len()));
	{
		auto &expr = _142636_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_5556337152:;
		if (it != expr.end()) {
			jule::Int _2255ba3ea_i = it - expr.begin();
			{
				jule::Ptr<_2255ba3ea_Case> _142921__case = jule::new_struct<_2255ba3ea_Case>(new( std::nothrow ) _2255ba3ea_Case(_142655_rm,jule::Ptr<_2255ba3ea_Scope>(),jule::Slice<jule::Ptr<_225aa4a5a_Data>>(),jule::Ptr<_2255ba3ea_Case>()));
				if (_2255ba3ea_i > 0LL) {
					_142655_rm->_field_cases[_2255ba3ea_i - 1LL]->_field_next=_142921__case;
				}
				_142655_rm->_field_cases[_2255ba3ea_i]=_142921__case;
			}
			_iter_next_5556337152:;
			++it;
			_2255ba3ea_i++;
			goto _iter_begin_5556337152;
		}
		_iter_end_5556337152:;
	}
	if ((_142655_rm->_field_default != nullptr) && (_142636_m->_field_cases.len() > 0LL)) {
		_142655_rm->_field_cases[_142655_rm->_field_cases.len() - 1LL]->_field_next=_142655_rm->_field_default;
	}
	{
		auto &expr = _142636_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_5556344032:;
		if (it != expr.end()) {
			jule::Int _2255ba3ea_i = it - expr.begin();
			jule::Ptr<_23e45734a_Case> _2255ba3ea_c = *it;
			{
				this->self->_method_check_case(_142655_rm,_2255ba3ea_i,_2255ba3ea_c,_142671_expr);
			}
			_iter_next_5556344032:;
			++it;
			_2255ba3ea_i++;
			goto _iter_begin_5556344032;
		}
		_iter_end_5556344032:;
	}
}



inline jule::Ptr<_2255ba3ea_Case> _2255ba3ea_ScopeChecker::_method_check_default(jule::Ptr<_2255ba3ea_Match> _144937_m,jule::Ptr<_23e45734a_Else> _144952_d) {
	jule::Ptr<_2255ba3ea_Case> _145017_def = jule::new_struct<_2255ba3ea_Case>(new( std::nothrow ) _2255ba3ea_Case(_144937_m,jule::Ptr<_2255ba3ea_Scope>(),jule::Slice<jule::Ptr<_225aa4a5a_Data>>(),jule::Ptr<_2255ba3ea_Case>()));
	_145017_def->_field_scope=this->self->_method_check_case_scope(_145017_def,_144952_d->_field_scope);
	return _145017_def;
}



inline void _2255ba3ea_ScopeChecker::_method_check_comptime_panic(jule::Ptr<_2255ba3ea_Scope>& _145740_s,_23e730c0b_Token _145751_error_token) {
	if (_145740_s->_field_stmts.len() != 1LL) {
		return;
	}
	jule::Any _146213_stmt = _145740_s->_field_stmts[0LL];
	{
		auto &_match_expr{ _146213_stmt };
		if (_match_expr.type_is<jule::Ptr<_225aa4a5a_Data>>()) {
			_case_begin_5556354448:;
			{
				jule::Ptr<_225aa4a5a_Data> _146517_d = _146213_stmt.operator jule::Ptr<_225aa4a5a_Data>();
				{
					auto &_match_expr{ _146517_d->_field_model };
					if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinPanicCallExprModel>>()) {
						_case_begin_5556356656:;
						{
							jule::Ptr<_2255b85b3_BuiltinPanicCallExprModel> _146821_m = _146517_d->_field_model.operator jule::Ptr<_2255b85b3_BuiltinPanicCallExprModel>();
							{
								auto &_match_expr{ _146821_m->_field_expr };
								if (_match_expr.type_is<jule::Ptr<_226100d86_Const>>()) {
									_case_begin_5556359392:;
									{
										jule::Ptr<_226100d86_Const> _147125_c = _146821_m->_field_expr.operator jule::Ptr<_226100d86_Const>();
										if (_147125_c->_method_is_str()) {
											(*this)._field_s->_method_push_err(_145751_error_token,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_147125_c->_method_read_str())}));
										}
									}
								}
								_match_end_5556361744:;
							}
						}
					}
					_match_end_5556358912:;
				}
			}
		}
		_match_end_5556356528:;
	}
}



inline void _2255ba3ea_ScopeChecker::_method_push_type_match(jule::Ptr<_2255ba3ea_Match> _148039_tm,jule::Ptr<_23e45734a_MatchCase>& _148052_m) {
	if (_148039_tm->_field_expr->_field_kind->_field_generic) {
		{
			auto &expr = _148039_tm->_field_cases;
			auto it = expr.begin();
			_iter_begin_5556369056:;
			if (it != expr.end()) {
				jule::Int _2255ba3ea_i = it - expr.begin();
				jule::Ptr<_2255ba3ea_Case> _2255ba3ea_c = *it;
				{
					if (_2255ba3ea_c->_field_scope != nullptr) {
						_148039_tm->_field_cases=nullptr;
						_148039_tm->_field_default=_2255ba3ea_c;
						this->self->_method_check_comptime_panic(_2255ba3ea_c->_field_scope,_148052_m->_field_cases[_2255ba3ea_i]->_field_token);
						goto _julec_label_push;
					}
				}
				_iter_next_5556369056:;
				++it;
				_2255ba3ea_i++;
				goto _iter_begin_5556369056;
			}
			_iter_end_5556369056:;
		}
		if (_148039_tm->_field_default != nullptr) {
			this->self->_method_check_comptime_panic(_148039_tm->_field_default->_field_scope,_148052_m->_field_default->_field_token);
		}
		_148039_tm->_field_cases=nullptr;
	}
	_julec_label_push:;
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_148039_tm));
}



inline void _2255ba3ea_ScopeChecker::_method_check_type_match(jule::Ptr<_23e45734a_MatchCase>& _150241_m) {
	jule::Ptr<_225aa4a5a_Data> _150317_d = this->self->_field_s->_method_eval(this->self)->_method_eval(_150241_m->_field_expr);
	if (_150317_d == nullptr) {
		return;
	}
	if ((!(_150317_d->_field_kind->_field_generic)) && (!(((_150317_d->_field_kind->_method_prim() != nullptr) && _150317_d->_field_kind->_method_prim()->_method_is_any()) || (_150317_d->_field_kind->_method_trt() != nullptr)))) {
		this->self->_field_s->_method_push_err(_150241_m->_field_expr->_field_token,jule::Str("type-case must be have <any>, <trait> or <generic> typed expression", 67),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_2255ba3ea_Match> _151417_tm = jule::new_struct<_2255ba3ea_Match>(new( std::nothrow ) _2255ba3ea_Match(_150317_d,true,jule::Slice<jule::Ptr<_2255ba3ea_Case>>(),jule::Ptr<_2255ba3ea_Case>()));
	if (_150241_m->_field_default != nullptr) {
		_151417_tm->_field_default=this->self->_method_check_default(_151417_tm,_150241_m->_field_default);
	}
	this->self->_method_check_cases(_150241_m,_151417_tm,_150317_d);
	this->self->_method_push_type_match(_151417_tm,_150241_m);
}



inline void _2255ba3ea_ScopeChecker::_method_check_common_match(jule::Ptr<_23e45734a_MatchCase>& _152743_m) {
	jule::Ptr<_225aa4a5a_Data> _152817_d = nullptr;
	if (_152743_m->_field_expr == nullptr) {
		_152817_d=jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_226100d86_Const::_static_method_new_bool(true)));
		_152817_d->_field_model=jule::Any(_152817_d->_field_constant);
	} else {
		_152817_d=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_152743_m->_field_expr);
		if (_152817_d == nullptr) {
			return;
		}
	}
	jule::Ptr<_2255ba3ea_Match> _154217_mc = jule::new_struct<_2255ba3ea_Match>(new( std::nothrow ) _2255ba3ea_Match(_152817_d,jule::Bool(),jule::Slice<jule::Ptr<_2255ba3ea_Case>>(),jule::Ptr<_2255ba3ea_Case>()));
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_154217_mc));
	if (_152743_m->_field_default != nullptr) {
		_154217_mc->_field_default=this->self->_method_check_default(_154217_mc,_152743_m->_field_default);
	}
	this->self->_method_check_cases(_152743_m,_154217_mc,_152817_d);
}



inline void _2255ba3ea_ScopeChecker::_method_check_match(jule::Ptr<_23e45734a_MatchCase> _155435_m) {
	if (_155435_m->_field_type_match) {
		this->self->_method_check_type_match(_155435_m);
		return;
	}
	this->self->_method_check_common_match(_155435_m);
}



inline void _2255ba3ea_ScopeChecker::_method_check_fall(jule::Ptr<_23e45734a_FallSt> _156230_f) {
	if (((this->self->_field_cse == 0LL) || ((this->self->_field_scope->_field_stmts.len() + 1LL) < this->self->_field_scope->_field_stmts.len())) || this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_156230_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>());
		return;
	}
	_2255ba3ea_Case* _157017__case = ((_2255ba3ea_Case*)(this->self->_field_cse));
	if (_157017__case->_field_next == nullptr) {
		this->self->_field_s->_method_push_err(_156230_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>());
		this->self->_field_s->_method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;
	}
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(jule::new_struct<_2255ba3ea_FallSt>(new( std::nothrow ) _2255ba3ea_FallSt(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_157017__case->_field_next))))));
}



inline jule::Ptr<_2255ba3ea_BreakSt> _2255ba3ea_ScopeChecker::_method_check_break_with_label(jule::Ptr<_23e45734a_BreakSt> _158242_b) {
	jule::Ptr<_2255ba3ea_BreakSt> _158317_brk = this->self->_method_check_plain_break(_158242_b);
	if (_158317_brk == nullptr) {
		return nullptr;
	}
	_158317_brk->_field_it=0LL;
	_158317_brk->_field_mtch=0LL;
	jule::Ptr<_2255ba3ea_ScopeLabel> _159317_label = _2255ba3ea_find_label_parent(_158242_b->_field_label._field_kind,this->self->_field_parent);
	if (_159317_label == nullptr) {
		this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_158242_b->_field_label._field_kind)}));
		return nullptr;
	}
	_159317_label->_field_used=true;
	if ((_159317_label->_field_pos + 1LL) >= _159317_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Int _160613_i = _159317_label->_field_pos + 1LL;
	if (_160613_i >= _159317_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
	} else {
		jule::Any _161021_st = _159317_label->_field_scope->_field_scope->_field_stmts[_160613_i];
		{
			auto &_match_expr{ _161021_st };
			if (_match_expr.type_is<jule::Ptr<_2255ba3ea_InfIter>>()) {
				_case_begin_5556455296:;
				{
					_158317_brk->_field_it=static_cast<jule::Uintptr>(_161021_st.operator jule::Ptr<_2255ba3ea_InfIter>());
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_RangeIter>>()) {
				_case_begin_5556455392:;
				{
					_158317_brk->_field_it=static_cast<jule::Uintptr>(_161021_st.operator jule::Ptr<_2255ba3ea_RangeIter>());
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_WhileIter>>()) {
				_case_begin_5556455488:;
				{
					_158317_brk->_field_it=static_cast<jule::Uintptr>(_161021_st.operator jule::Ptr<_2255ba3ea_WhileIter>());
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Match>>()) {
				_case_begin_5556455584:;
				{
					_158317_brk->_field_mtch=static_cast<jule::Uintptr>(_161021_st.operator jule::Ptr<_2255ba3ea_Match>());
				}
			}
			else {
				_case_begin_5556451408:;
				{
					this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
				}
			}
			_match_end_5556454944:;
		}
	}
	if (_158317_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_158317_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	if (_158317_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_158317_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_158242_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
		}
	}
	return _158317_brk;
}



inline jule::Ptr<_2255ba3ea_BreakSt> _2255ba3ea_ScopeChecker::_method_check_plain_break(jule::Ptr<_23e45734a_BreakSt> _163537_b) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_163537_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_2255ba3ea_ScopeChecker> _164117_scope = this->self;
	_julec_label_iter:;
	{
		if ((((_164117_scope->_field_it == 0LL) && (_164117_scope->_field_cse == 0LL)) && (_164117_scope->_field_parent != nullptr)) && (_164117_scope->_field_owner == nullptr)) {
			_case_begin_5556471696:;
			{
				_164117_scope=_164117_scope->_field_parent;
				goto _julec_label_iter;
			}
		}
		else if (_164117_scope->_field_it != 0LL) {
			_case_begin_5556471808:;
			{
				return jule::new_struct<_2255ba3ea_BreakSt>(new( std::nothrow ) _2255ba3ea_BreakSt(_164117_scope->_field_it,jule::Uintptr()));
			}
		}
		else if (_164117_scope->_field_cse != 0LL) {
			_case_begin_5556471920:;
			{
				return jule::new_struct<_2255ba3ea_BreakSt>(new( std::nothrow ) _2255ba3ea_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_2255ba3ea_Case*)(_164117_scope->_field_cse))->_field_owner))));
			}
		}
		_match_end_5556471520:;
	}
	this->self->_field_s->_method_push_err(_163537_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _2255ba3ea_ScopeChecker::_method_check_break(jule::Ptr<_23e45734a_BreakSt> _165931_b) {
	if (_165931_b->_field_label._field_id != 0LLU) {
		jule::Ptr<_2255ba3ea_BreakSt> _166121_brk = this->self->_method_check_break_with_label(_165931_b);
		this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_166121_brk));
		return;
	}
	jule::Ptr<_2255ba3ea_BreakSt> _166617_brk = this->self->_method_check_plain_break(_165931_b);
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_166617_brk));
}



inline void _2255ba3ea_ScopeChecker::_method_check_ret(jule::Ptr<_23e45734a_RetSt> _167033_r) {
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_167033_r->_field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	}
	jule::Ptr<_2255ba3ea_RetSt> _167517_rt = jule::new_struct<_2255ba3ea_RetSt>(new( std::nothrow ) _2255ba3ea_RetSt(this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ptr<_2258258db_Var>>(),jule::Any()));
	this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_167517_rt));
	jule::Ptr<_22582290a_RetTypeChecker> _168017_rtc = jule::new_struct<_22582290a_RetTypeChecker>(new( std::nothrow ) _22582290a_RetTypeChecker(this->self,_167517_rt->_field_func,jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_23e45734a_Expr>>(),jule::Slice<jule::Ptr<_2258258db_Var>>(),_167033_r->_field_token,jule::Any()));
	jule::Bool _168513_ok = _168017_rtc->_method_check(_167033_r->_field_expr);
	if ((!(_168513_ok))) {
		return;
	}
	if ((_167033_r->_field_expr == nullptr) && (_168017_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_167517_rt->_field_vars=_168017_rtc->_field_vars;
	if (_167033_r->_field_expr != nullptr) {
		_167517_rt->_field_expr=_168017_rtc->_field_model;
	}
}



inline void _2255ba3ea_ScopeChecker::_method_check_use_expr(jule::Ptr<_23e45734a_UseExpr> _170134_ue) {
	if (this->self->_field_result == nullptr) {
		this->self->_field_s->_method_push_err(_170134_ue->_field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;
	}
	if (this->self->_method_is_deferred()) {
		this->self->_field_s->_method_push_err(_170134_ue->_field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	}
	if ((this->self->_field_i + 1LL) < this->self->_field_tree->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_170134_ue->_field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	}
}



inline void _2255ba3ea_ScopeChecker::_method_check_node(jule::Any& _171835_node) {
	{
		auto &_match_expr{ _171835_node };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_Comment>>()) {
			_case_begin_5556516992:;
			{
				goto _match_end_5556515488;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_ScopeTree>>()) {
			_case_begin_5556516512:;
			{
				this->self->_method_check_anon_scope(_171835_node.operator jule::Ptr<_23e45734a_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_VarDecl>>()) {
			_case_begin_5556516304:;
			{
				this->self->_method_check_var_decl(_171835_node.operator jule::Ptr<_23e45734a_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_TypeAliasDecl>>()) {
			_case_begin_5556516400:;
			{
				this->self->_method_check_type_alias_decl(_171835_node.operator jule::Ptr<_23e45734a_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_Expr>>()) {
			_case_begin_5556517408:;
			{
				this->self->_method_check_expr(_171835_node.operator jule::Ptr<_23e45734a_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_CoExpr>>()) {
			_case_begin_5556517504:;
			{
				this->self->_method_check_co_expr(_171835_node.operator jule::Ptr<_23e45734a_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_Conditional>>()) {
			_case_begin_5556517600:;
			{
				this->self->_method_check_conditional(_171835_node.operator jule::Ptr<_23e45734a_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_Iter>>()) {
			_case_begin_5556517696:;
			{
				this->self->_method_check_iter(_171835_node.operator jule::Ptr<_23e45734a_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_ContSt>>()) {
			_case_begin_5556517792:;
			{
				this->self->_method_check_cont(_171835_node.operator jule::Ptr<_23e45734a_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_LabelSt>>()) {
			_case_begin_5556517888:;
			{
				this->self->_method_check_label(_171835_node.operator jule::Ptr<_23e45734a_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_GotoSt>>()) {
			_case_begin_5556517984:;
			{
				this->self->_method_push_goto(_171835_node.operator jule::Ptr<_23e45734a_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_AssignSt>>()) {
			_case_begin_5556518080:;
			{
				this->self->_method_check_assign_st(_171835_node.operator jule::Ptr<_23e45734a_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_MatchCase>>()) {
			_case_begin_5556518176:;
			{
				this->self->_method_check_match(_171835_node.operator jule::Ptr<_23e45734a_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_FallSt>>()) {
			_case_begin_5556518272:;
			{
				this->self->_method_check_fall(_171835_node.operator jule::Ptr<_23e45734a_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_BreakSt>>()) {
			_case_begin_5556518368:;
			{
				this->self->_method_check_break(_171835_node.operator jule::Ptr<_23e45734a_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_RetSt>>()) {
			_case_begin_5556518464:;
			{
				this->self->_method_check_ret(_171835_node.operator jule::Ptr<_23e45734a_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_UseExpr>>()) {
			_case_begin_5556518560:;
			{
				this->self->_method_check_use_expr(_171835_node.operator jule::Ptr<_23e45734a_UseExpr>());
			}
		}
		else {
			_case_begin_5556515392:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_5556515488:;
	}
}



inline void _2255ba3ea_ScopeChecker::_method_check_result(void) {
	jule::Any _174217_stmt = this->self->_field_tree->_field_stmts[this->self->_field_tree->_field_stmts.len() - 1LL];
	{
		auto &_match_expr{ _174217_stmt };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_UseExpr>>()) {
			_case_begin_5556551152:;
			{
				jule::Ptr<_23e45734a_UseExpr> _174521_ue = _174217_stmt.operator jule::Ptr<_23e45734a_UseExpr>();
				jule::Ptr<_225aa4a5a_Data> _174621_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_174521_ue->_field_expr);
				if (_174621_d == nullptr) {
					return;
				}
				this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_174621_d));
				jule::Ptr<_22582290a_RetTypeChecker> _175321_rtc = jule::new_struct<_22582290a_RetTypeChecker>(new( std::nothrow ) _22582290a_RetTypeChecker(this->self,jule::Ptr<_2252d6a73_FnIns>(),_22582290a_get_result_types(this->self->_field_result),jule::Slice<jule::Ptr<_23e45734a_Expr>>(),jule::Slice<jule::Ptr<_2258258db_Var>>(),_174521_ue->_field_expr->_field_token,jule::Any()));
				_175321_rtc->_method_check(_174521_ue->_field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_Expr>>()) {
			_case_begin_5556551248:;
			{
				jule::Ptr<_23e45734a_Expr> _176121_expr = _174217_stmt.operator jule::Ptr<_23e45734a_Expr>();
				jule::Ptr<_225aa4a5a_Data> _176221_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_176121_expr);
				if (_176221_d == nullptr) {
					return;
				}
				this->self->_field_scope->_field_stmts = jule::alloc_for_append(this->self->_field_scope->_field_stmts,1);this->self->_field_scope->_field_stmts.push(jule::Any(_176221_d));
				{
					auto &_match_expr{ _176221_d->_field_model };
					if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>>()) {
						_case_begin_5556563536:;
						{
							jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel> _177125_m = _176221_d->_field_model.operator jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>();
							this->self->_method_process_error_call(_177125_m,_176121_expr->_field_token);
						}
					}
					else {
						_case_begin_5556562944:;
						{
							return;
						}
					}
					_match_end_5556564912:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_GotoSt>>() || _match_expr.type_is<jule::Ptr<_23e45734a_BreakSt>>() || _match_expr.type_is<jule::Ptr<_23e45734a_ContSt>>() || _match_expr.type_is<jule::Ptr<_23e45734a_RetSt>>()) {
			_case_begin_5556549728:;
			{
				this->self->_method_check_node(_174217_stmt);
			}
		}
		else {
			_case_begin_5556547696:;
			{
				this->self->_method_check_node(_174217_stmt);
				return;
			}
		}
		_match_end_5556549376:;
	}
	this->self->_field_result=nullptr;
}



inline void _2255ba3ea_ScopeChecker::_method_check_tree(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_tree->_field_stmts.len(); (this->self->_field_i)++) {
		{
			jule::Any _179621_stmt = this->self->_field_tree->_field_stmts[this->self->_field_i];
			this->self->_method_check_node(_179621_stmt);
		}
	_iter_next_5556570400:;
	}
	_iter_end_5556570400:;
	if ((this->self->_field_result != nullptr) && (this->self->_field_tree->_field_stmts.len() != 0LL)) {
		this->self->_method_check_result();
	}
}



inline void _2255ba3ea_ScopeChecker::_method_check_goto(jule::Ptr<_2255ba3ea_ScopeGoto>& _180534_gt,jule::Ptr<_2255ba3ea_ScopeLabel>& _180555_label) {
	jule::Ptr<_2255ba3ea_ScopeChecker> _180617_gtsc = _180534_gt->_field_scope;
	while ((_180617_gtsc->_field_child_index - 1LL) > _180555_label->_field_scope->_field_child_index) {
		{
			_180617_gtsc=_180617_gtsc->_field_parent;
		}
	_iter_next_5556578576:;
	}
	_iter_end_5556578576:;
	jule::Int _181117_n = 0LL;
	if (_180617_gtsc->_field_scope == _180555_label->_field_scope->_field_scope) {
		if (_180534_gt->_field_pos > _180555_label->_field_pos) {
			return;
		}
		_181117_n=_180534_gt->_field_pos;
	}
	jule::Int _182417_i = _180555_label->_field_pos - 1LL;
	if (_181117_n == 0LL) {
		{
			auto &expr = _180555_label->_field_scope->_field_scope->_field_stmts;
			auto it = expr.begin();
			_iter_begin_5556584896:;
			if (it != expr.end()) {
				jule::Int _2255ba3ea_j = it - expr.begin();
				jule::Any &_2255ba3ea_stmt = *it;
				{
					if (_2255ba3ea_stmt_is_goto_scope(_2255ba3ea_stmt,_180617_gtsc->_field_scope)) {
						_181117_n=_2255ba3ea_j;
						goto _iter_end_5556584896;
					}
				}
				_iter_next_5556584896:;
				++it;
				_2255ba3ea_j++;
				goto _iter_begin_5556584896;
			}
			_iter_end_5556584896:;
		}
	}
	for (; _182417_i >= _181117_n; (_182417_i)--) {
		{
			jule::Any _183721_stmt = _180555_label->_field_scope->_field_scope->_field_stmts[_182417_i];
			if (_2255ba3ea_st_is_def(_183721_stmt)) {
				(*this)._field_s->_method_push_err(_180534_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_180534_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
		}
	_iter_next_5556585920:;
	}
	_iter_end_5556585920:;
}



inline void _2255ba3ea_ScopeChecker::_method_check_gotos(void) {
	{
		auto &expr = (*((*this)._field_gotos));
		auto it = expr.begin();
		_iter_begin_5556592704:;
		if (it != expr.end()) {
			jule::Ptr<_2255ba3ea_ScopeGoto> _2255ba3ea_gt = *it;
			{
				jule::Ptr<_2255ba3ea_ScopeLabel> _184721_label = (*this)._method_find_label_all(_2255ba3ea_gt->_field_gt->_field_label._field_kind);
				if (_184721_label == nullptr) {
					(*this)._field_s->_method_push_err(_2255ba3ea_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_2255ba3ea_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_5556592704;
				}
				_184721_label->_field_used=true;
				(*this)._method_check_goto(_2255ba3ea_gt,_184721_label);
			}
			_iter_next_5556592704:;
			++it;
			goto _iter_begin_5556592704;
		}
		_iter_end_5556592704:;
	}
}



inline void _2255ba3ea_ScopeChecker::_method_check_labels(void) {
	{
		auto &expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_5556599872:;
		if (it != expr.end()) {
			jule::Ptr<_2255ba3ea_ScopeLabel> &_2255ba3ea_l = *it;
			{
				if ((!(_2255ba3ea_l->_field_used))) {
					(*this)._field_s->_method_push_err(_2255ba3ea_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_2255ba3ea_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_5556599872:;
			++it;
			goto _iter_begin_5556599872;
		}
		_iter_end_5556599872:;
	}
}



inline void _2255ba3ea_ScopeChecker::_method_check_vars(void) {
	{
		auto &expr = (*this)._field_table->_field_vars;
		auto it = expr.begin();
		_iter_begin_5556604176:;
		if (it != expr.end()) {
			jule::Ptr<_2258258db_Var> &_2255ba3ea_v = *it;
			{
				if ((((!(_2255ba3ea_v->_field_used)) && (!(_23e730c0b_is_ignore_ident(_2255ba3ea_v->_field_ident)))) && (!(_23e730c0b_is_anon_ident(_2255ba3ea_v->_field_ident)))) && (_2255ba3ea_v->_field_ident != jule::Str("self", 4))) {
					(*this)._field_s->_method_push_err(_2255ba3ea_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_2255ba3ea_v->_field_ident)}));
				}
			}
			_iter_next_5556604176:;
			++it;
			goto _iter_begin_5556604176;
		}
		_iter_end_5556604176:;
	}
}



inline void _2255ba3ea_ScopeChecker::_method_check_aliases(void) {
	{
		auto &expr = (*this)._field_table->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_5556609984:;
		if (it != expr.end()) {
			jule::Ptr<_23e2b5818_TypeAlias> &_2255ba3ea_a = *it;
			{
				if (((!(_2255ba3ea_a->_field_used)) && (!(_23e730c0b_is_ignore_ident(_2255ba3ea_a->_field_ident)))) && (!(_23e730c0b_is_anon_ident(_2255ba3ea_a->_field_ident)))) {
					(*this)._field_s->_method_push_err(_2255ba3ea_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_2255ba3ea_a->_field_ident)}));
				}
			}
			_iter_next_5556609984:;
			++it;
			goto _iter_begin_5556609984;
		}
		_iter_end_5556609984:;
	}
}



inline void _2255ba3ea_ScopeChecker::_method_check(jule::Ptr<_23e45734a_ScopeTree>& _188330_tree,jule::Ptr<_2255ba3ea_Scope>& _188353_s) {
	_188353_s->_field_deferred=_188330_tree->_field_deferred;
	_188353_s->_field_unsafety=_188330_tree->_field_unsafety;
	jule::I64 _188713_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_188330_tree;
	this->self->_field_scope=_188353_s;
	this->self->_method_check_tree();
	if (_188713_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
		if (this->self->_method_is_root()) {
			this->self->_method_check_gotos();
			this->self->_method_check_labels();
		}
	}
}



inline jule::Ptr<_2255ba3ea_ScopeChecker> _2255ba3ea_ScopeChecker::_method_new_child_checker(void) {
	jule::Ptr<_2255ba3ea_ScopeChecker> _190717_base = _2255ba3ea_new_scope_checker_base(this->self->_field_s,nullptr);
	_190717_base->_field_parent=this->self;
	_190717_base->_field_labels=this->self->_field_labels;
	_190717_base->_field_gotos=this->self->_field_gotos;
	_190717_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _190717_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_BuiltinErrorCallExprModel &_Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_IntegratedToStrExprModel &_Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_TernaryExprModel &_Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



inline void _225613894_DirectiveChecker::_method_check_cdef(jule::Ptr<_23e45734a_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (_match_expr.type_is<jule::Ptr<_2252d6a73_Fn>>()) {
			_case_begin_5556639088:;
			{
				if ((*this)._field_o.operator jule::Ptr<_2252d6a73_Fn>()->_field_cpp_linked) {
					goto _match_end_5556639008;
				}
				goto _case_begin_5556638912;
			}
		}
		else {
			_case_begin_5556638912:;
			{
				(*this)._field_s->_method_push_err(_1630_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_1630_d->_field_tag._field_kind)}));
			}
		}
		_match_end_5556639008:;
	}
	if (_1630_d->_field_args.len() > 0LL) {
		(*this)._field_s->_method_push_err(_1630_d->_field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _225613894_DirectiveChecker::_method_check_typedef(jule::Ptr<_23e45734a_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
			_case_begin_5556647216:;
			{
				if ((*this)._field_o.operator jule::Ptr<_225036509_Struct>()->_field_cpp_linked) {
					goto _match_end_5556647136;
				}
				goto _case_begin_5556647040;
			}
		}
		else {
			_case_begin_5556647040:;
			{
				(*this)._field_s->_method_push_err(_3233_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_3233_d->_field_tag._field_kind)}));
			}
		}
		_match_end_5556647136:;
	}
	if (_3233_d->_field_args.len() > 0LL) {
		(*this)._field_s->_method_push_err(_3233_d->_field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _225613894_DirectiveChecker::_method_check_derive(jule::Ptr<_23e45734a_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
			_case_begin_5556655344:;
			{
				if ((!((*this)._field_o.operator jule::Ptr<_225036509_Struct>()->_field_cpp_linked))) {
					goto _match_end_5556655264;
				}
				goto _case_begin_5556655168;
			}
		}
		else {
			_case_begin_5556655168:;
			{
				(*this)._field_s->_method_push_err(_4832_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>());
			}
		}
		_match_end_5556655264:;
	}
	if (_4832_d->_field_args.len() == 0LL) {
		(*this)._field_s->_method_push_err(_4832_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		(*this)._field_s->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	} else if (_4832_d->_field_args.len() > 1LL) {
		(*this)._field_s->_method_push_err(_4832_d->_field_args[1LL],jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	{
		auto &_match_expr{ _4832_d->_field_args[0LL]._field_kind };
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_5556665632:;
		}
		else {
			_case_begin_5556659616:;
			{
				(*this)._field_s->_method_push_err(_4832_d->_field_args[0LL],jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_4832_d->_field_args[0LL]._field_kind)}));
			}
		}
		_match_end_5556664768:;
	}
}



inline void _225613894_DirectiveChecker::_method_check_namespace(jule::Ptr<_23e45734a_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*this)._field_o };
		if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
			_case_begin_5556670352:;
			{
				if ((!((*this)._field_o.operator jule::Ptr<_225036509_Struct>()->_field_cpp_linked))) {
					(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2252d6a73_Fn>>()) {
			_case_begin_5556670992:;
			{
				if ((!((*this)._field_o.operator jule::Ptr<_2252d6a73_Fn>()->_field_cpp_linked))) {
					(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
			_case_begin_5556671088:;
			{
				if ((!((*this)._field_o.operator jule::Ptr<_2258258db_Var>()->_field_cpp_linked))) {
					(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
				}
			}
		}
		else {
			_case_begin_5556670176:;
			{
				(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_7439_d->_field_tag._field_kind)}));
			}
		}
		_match_end_5556670272:;
	}
	if (_7439_d->_field_args.len() == 0LL) {
		(*this)._field_s->_method_push_err(_7439_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if (_7439_d->_field_args.len() > 1LL) {
		(*this)._field_s->_method_push_err(_7439_d->_field_args[1LL],jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	_23e730c0b_Token _10213_arg = _7439_d->_field_args[0LL];
	if (_10213_arg._field_id != 6LLU) {
		(*this)._field_s->_method_push_err(_10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_10213_arg._field_kind[0LL] != '\"') {
		(*this)._field_s->_method_push_err(_10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_7439_d->_field_args[0LL]._field_kind=_10213_arg._field_kind.slice(1LL,_10213_arg._field_kind.len() - 1LL);
}



inline void _225613894_DirectiveChecker::_method_check_directive(jule::Ptr<_23e45734a_Directive>& _11639_d) {
	{
		auto &_match_expr{ _11639_d->_field_tag._field_kind };
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_5556695536:;
			{
				(*this)._method_check_cdef(_11639_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_5556695632:;
			{
				(*this)._method_check_typedef(_11639_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_5556695728:;
			{
				(*this)._method_check_derive(_11639_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_5556695824:;
			{
				(*this)._method_check_namespace(_11639_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_5556697200:;
			{
				(*this)._field_s->_method_push_err(_11639_d->_field_tag,jule::Str("directive \"@\" is not supported by define", 40),jule::Slice<jule::Any>({jule::Any(_11639_d->_field_tag._field_kind)}));
			}
		}
		else {
			_case_begin_5556694528:;
			{
				(*this)._field_s->_method_push_err(_11639_d->_field_tag,jule::Str("invalid label", 13),jule::Slice<jule::Any>());
			}
		}
		_match_end_5556694928:;
	}
}



inline void _225613894_DirectiveChecker::_method_check(void) {
	{
		auto &expr = (*this)._field_d;
		auto it = expr.begin();
		_iter_begin_5556706000:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_Directive> _225613894_d = *it;
			{
				(*this)._method_check_directive(_225613894_d);
			}
			_iter_next_5556706000:;
			++it;
			goto _iter_begin_5556706000;
		}
		_iter_end_5556706000:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _225613894_DirectiveChecker &_Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_225615962_ImportInfo> _225615962_Package::_method_find_package(jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_225615962_ImportInfo> _225615962_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_2258258db_Var> _225615962_Package::_method_find_var(jule::Str _26631_ident,jule::Bool _26643_cpp_linked) {
	return _225615962_find_var_in_package((*this)._field_files,_26631_ident,_26643_cpp_linked);
}



inline jule::Ptr<_23e2b5818_TypeAlias> _225615962_Package::_method_find_type_alias(jule::Str _27238_ident,jule::Bool _27250_cpp_linked) {
	return _225615962_find_type_alias_in_package((*this)._field_files,_27238_ident,_27250_cpp_linked);
}



inline jule::Ptr<_225036509_Struct> _225615962_Package::_method_find_struct(jule::Str _27834_ident,jule::Bool _27846_cpp_linked) {
	return _225615962_find_struct_in_package((*this)._field_files,_27834_ident,_27846_cpp_linked);
}



inline jule::Ptr<_2252d6a73_Fn> _225615962_Package::_method_find_fn(jule::Str _28430_ident,jule::Bool _28442_cpp_linked) {
	return _225615962_find_fn_in_package((*this)._field_files,_28430_ident,_28442_cpp_linked);
}



inline jule::Ptr<_2255ab70a_Trait> _225615962_Package::_method_find_trait(jule::Str _29033_ident) {
	return _225615962_find_trait_in_package((*this)._field_files,_29033_ident);
}



inline jule::Ptr<_2255aae79_Enum> _225615962_Package::_method_find_enum(jule::Str _29632_ident) {
	return _225615962_find_enum_in_package((*this)._field_files,_29632_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _225615962_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_225615962_ImportInfo> _22579574b_Sema::_method_find_package(jule::Str _33735_ident) {
	return (*this)._field_file->_method_find_package(_33735_ident);
}



inline jule::Ptr<_225615962_ImportInfo> _22579574b_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)> _34737_selector) {
	return (*this)._field_file->_method_select_package(_34737_selector);
}



inline jule::Ptr<_2258258db_Var> _22579574b_Sema::_method_find_var(jule::Str _35731_ident,jule::Bool _35743_cpp_linked) {
	jule::Ptr<_2258258db_Var> _35917_v = _225615962_find_var_in_package((*this)._field_files,_35731_ident,_35743_cpp_linked);
	if (_35917_v != nullptr) {
		return _35917_v;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_5556778704:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _22579574b_imp = *it;
			{
				if ((!(_22579574b_imp_is_lookupable(_22579574b_imp,_35731_ident)))) {
					goto _iter_next_5556778704;
				}
				_35917_v=_22579574b_imp->_method_find_var(_35731_ident,_35743_cpp_linked);
				if ((_35917_v != nullptr) && (*this)._method_is_accessible_define(_35917_v->_field_public,_35917_v->_field_token)) {
					return _35917_v;
				}
			}
			_iter_next_5556778704:;
			++it;
			goto _iter_begin_5556778704;
		}
		_iter_end_5556778704:;
	}
	return nullptr;
}



inline jule::Ptr<_23e2b5818_TypeAlias> _22579574b_Sema::_method_find_type_alias(jule::Str _38438_ident,jule::Bool _38450_cpp_linked) {
	jule::Ptr<_23e2b5818_TypeAlias> _38617_ta = _225615962_find_type_alias_in_package((*this)._field_files,_38438_ident,_38450_cpp_linked);
	if (_38617_ta != nullptr) {
		return _38617_ta;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_5556787664:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _22579574b_imp = *it;
			{
				if ((!(_22579574b_imp_is_lookupable(_22579574b_imp,_38438_ident)))) {
					goto _iter_next_5556787664;
				}
				_38617_ta=_22579574b_imp->_method_find_type_alias(_38438_ident,_38450_cpp_linked);
				if ((_38617_ta != nullptr) && (*this)._method_is_accessible_define(_38617_ta->_field_public,_38617_ta->_field_token)) {
					return _38617_ta;
				}
			}
			_iter_next_5556787664:;
			++it;
			goto _iter_begin_5556787664;
		}
		_iter_end_5556787664:;
	}
	return nullptr;
}



inline jule::Ptr<_225036509_Struct> _22579574b_Sema::_method_find_struct(jule::Str _41134_ident,jule::Bool _41146_cpp_linked) {
	jule::Ptr<_225036509_Struct> _41317_s = _225615962_find_struct_in_package((*this)._field_files,_41134_ident,_41146_cpp_linked);
	if (_41317_s != nullptr) {
		return _41317_s;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_5556795280:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _22579574b_imp = *it;
			{
				if ((!(_22579574b_imp_is_lookupable(_22579574b_imp,_41134_ident)))) {
					goto _iter_next_5556795280;
				}
				_41317_s=_22579574b_imp->_method_find_struct(_41134_ident,_41146_cpp_linked);
				if ((_41317_s != nullptr) && (*this)._method_is_accessible_define(_41317_s->_field_public,_41317_s->_field_token)) {
					return _41317_s;
				}
			}
			_iter_next_5556795280:;
			++it;
			goto _iter_begin_5556795280;
		}
		_iter_end_5556795280:;
	}
	return nullptr;
}



inline jule::Ptr<_2252d6a73_Fn> _22579574b_Sema::_method_find_fn(jule::Str _43830_ident,jule::Bool _43842_cpp_linked) {
	jule::Ptr<_2252d6a73_Fn> _44017_f = _225615962_find_fn_in_package((*this)._field_files,_43830_ident,_43842_cpp_linked);
	if (_44017_f != nullptr) {
		return _44017_f;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_5556803024:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _22579574b_imp = *it;
			{
				if ((!(_22579574b_imp_is_lookupable(_22579574b_imp,_43830_ident)))) {
					goto _iter_next_5556803024;
				}
				_44017_f=_22579574b_imp->_method_find_fn(_43830_ident,_43842_cpp_linked);
				if ((_44017_f != nullptr) && (*this)._method_is_accessible_define(_44017_f->_field_public,_44017_f->_field_token)) {
					return _44017_f;
				}
			}
			_iter_next_5556803024:;
			++it;
			goto _iter_begin_5556803024;
		}
		_iter_end_5556803024:;
	}
	return nullptr;
}



inline jule::Ptr<_2255ab70a_Trait> _22579574b_Sema::_method_find_trait(jule::Str _46533_ident) {
	jule::Ptr<_2255ab70a_Trait> _46717_t = _225615962_find_trait_in_package((*this)._field_files,_46533_ident);
	if (_46717_t != nullptr) {
		return _46717_t;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_5556809264:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _22579574b_imp = *it;
			{
				if ((!(_22579574b_imp_is_lookupable(_22579574b_imp,_46533_ident)))) {
					goto _iter_next_5556809264;
				}
				_46717_t=_22579574b_imp->_method_find_trait(_46533_ident);
				if ((_46717_t != nullptr) && (*this)._method_is_accessible_define(_46717_t->_field_public,_46717_t->_field_token)) {
					return _46717_t;
				}
			}
			_iter_next_5556809264:;
			++it;
			goto _iter_begin_5556809264;
		}
		_iter_end_5556809264:;
	}
	return nullptr;
}



inline jule::Ptr<_2255aae79_Enum> _22579574b_Sema::_method_find_enum(jule::Str _49232_ident) {
	jule::Ptr<_2255aae79_Enum> _49417_e = _225615962_find_enum_in_package((*this)._field_files,_49232_ident);
	if (_49417_e != nullptr) {
		return _49417_e;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_5556817424:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _22579574b_imp = *it;
			{
				if ((!(_22579574b_imp_is_lookupable(_22579574b_imp,_49232_ident)))) {
					goto _iter_next_5556817424;
				}
				_49417_e=_22579574b_imp->_method_find_enum(_49232_ident);
				if ((_49417_e != nullptr) && (*this)._method_is_accessible_define(_49417_e->_field_public,_49417_e->_field_token)) {
					return _49417_e;
				}
			}
			_iter_next_5556817424:;
			++it;
			goto _iter_begin_5556817424;
		}
		_iter_end_5556817424:;
	}
	return nullptr;
}



inline jule::Bool _22579574b_Sema::_method_is_flag(jule::Int _51622_flags) {
	return ((*this)._field_flags & _51622_flags) == _51622_flags;
}



inline void _22579574b_Sema::_method_set_current_file(jule::Ptr<_225a097a1_SymbolTable> _51839_f) {
	(*this)._field_file=_51839_f;
}



inline void _22579574b_Sema::_method_push_err(_23e730c0b_Token _52027_token,jule::Str _52041_fmt,jule::Slice<jule::Any> _52054_args) {
	(*this)._field_errors = jule::alloc_for_append((*this)._field_errors,1);(*this)._field_errors.push(_22579574b_compiler_err(_52027_token,true,_52041_fmt,_52054_args));
}



inline void _22579574b_Sema::_method_push_suggestion(jule::Str _52534_fmt,jule::Slice<jule::Any> _52547_args) {
	{
		_22579574b_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_52534_fmt,_52547_args);
	}
}



inline jule::Bool _22579574b_Sema::_method_is_accessible_define(jule::Bool _53035_public,_23e730c0b_Token _53049_token) {
	return (_53035_public || (_53049_token._field_file == nullptr)) || ((*this)._field_file->_field_file->_method_dir() == _53049_token._field_file->_method_dir());
}



inline jule::Bool _22579574b_Sema::_method_is_duplicated_ident(jule::Uintptr _53734_itself,jule::Str _53751_ident,jule::Bool _53763_cpp_linked) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_5556839120:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> &_22579574b_f = *it;
			{
				if (_22579574b_f->_method_is_duplicated_ident(_53734_itself,_53751_ident,_53763_cpp_linked)) {
					return true;
				}
				{
					auto &expr = _22579574b_f->_field_imports;
					auto it = expr.begin();
					_iter_begin_5556843440:;
					if (it != expr.end()) {
						jule::Ptr<_225615962_ImportInfo> &_22579574b_imp = *it;
						{
							{
								auto &expr = _22579574b_imp->_field_selected;
								auto it = expr.begin();
								_iter_begin_5556844672:;
								if (it != expr.end()) {
									_23e730c0b_Token &_22579574b_selected = *it;
									{
										if (_22579574b_selected._field_kind == _53751_ident) {
											return true;
										}
									}
									_iter_next_5556844672:;
									++it;
									goto _iter_begin_5556844672;
								}
								_iter_end_5556844672:;
							}
						}
						_iter_next_5556843440:;
						++it;
						goto _iter_begin_5556843440;
					}
					_iter_end_5556843440:;
				}
			}
			_iter_next_5556839120:;
			++it;
			goto _iter_begin_5556839120;
		}
		_iter_end_5556839120:;
	}
	return false;
}



inline void _22579574b_Sema::_method_check_directives(jule::Slice<jule::Ptr<_23e45734a_Directive>>& _55441_d,jule::Any _55462_o) {
	_225613894_DirectiveChecker _55517_dc = _225613894_DirectiveChecker(this->self,_55441_d,_55462_o);
	_55517_dc._method_check();
}



inline jule::Bool _22579574b_Sema::_method_check_generic_quantity(jule::Int _56341_required,jule::Int _56356_given,_23e730c0b_Token _56368_error_token) {
	jule::Bool _56390_ok = jule::Bool();
	{
		if ((_56341_required == 0LL) && (_56356_given > 0LL)) {
			_case_begin_5556856240:;
			{
				(*this)._method_push_err(_56368_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_56390_ok = false;
				return _56390_ok;
			}
		}
		else if ((_56341_required > 0LL) && (_56356_given == 0LL)) {
			_case_begin_5556856400:;
			{
				(*this)._method_push_err(_56368_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_56390_ok = false;
				return _56390_ok;
			}
		}
		else if (_56341_required < _56356_given) {
			_case_begin_5556856512:;
			{
				(*this)._method_push_err(_56368_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_56390_ok = false;
				return _56390_ok;
			}
		}
		else if (_56341_required > _56356_given) {
			_case_begin_5556855760:;
			{
				(*this)._method_push_err(_56368_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_56390_ok = false;
				return _56390_ok;
			}
		}
		else {
			_case_begin_5556854752:;
			{
				_56390_ok = true;
				return _56390_ok;
			}
		}
		_match_end_5556854576:;
	}
}



inline jule::Bool _22579574b_Sema::_method_is_duplicated_import_selection(jule::Uintptr _58645_itself,jule::Str _58662_ident) {
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_5556866432:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> &_22579574b_imp = *it;
			{
				if (static_cast<jule::Uintptr>(_22579574b_imp) == _58645_itself) {
					goto _iter_end_5556866432;
				}
				if (_22579574b_imp->_method_exist_ident(_58662_ident)) {
					return true;
				}
			}
			_iter_next_5556866432:;
			++it;
			goto _iter_begin_5556866432;
		}
		_iter_end_5556866432:;
	}
	return false;
}



inline jule::Any _22579574b_Sema::_method_get_import_def(jule::Str _60129_ident,jule::Ptr<_225615962_ImportInfo>& _60146_imp) {
	if (_22602dc1a_find_package_builtin_def(_60146_imp->_field_link_path,_60129_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto &expr = _60146_imp->_field_package->_field_files;
		auto it = expr.begin();
		_iter_begin_5556873968:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_f = *it;
			{
				
				jule::Any _60821_def = _22579574b_f->_method_def_by_ident(_60129_ident,false);
				if (_60821_def != nullptr) {
					return _60821_def;
				}
			}
			_iter_next_5556873968:;
			++it;
			goto _iter_begin_5556873968;
		}
		_iter_end_5556873968:;
	}
	return jule::Any(nullptr);
}



inline void _22579574b_Sema::_method_check_import_selections(jule::Ptr<_225615962_ImportInfo>& _61747_imp) {
	{
		auto &expr = _61747_imp->_field_selected;
		auto it = expr.begin();
		_iter_begin_5556878272:;
		if (it != expr.end()) {
			_23e730c0b_Token &_22579574b_ident = *it;
			{
				if (_22579574b_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_5556878272;
				}
				if ((*this)._method_is_duplicated_import_selection(static_cast<jule::Uintptr>(_61747_imp),_22579574b_ident._field_kind)) {
					(*this)._method_push_err(_22579574b_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_22579574b_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					goto _iter_next_5556878272;
				}
				jule::Any _62921_def = (*this)._method_get_import_def(_22579574b_ident._field_kind,_61747_imp);
				{
					auto &_match_expr{ _62921_def };
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_5556887264:;
						{
							goto _iter_next_5556878272;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
						_case_begin_5556886704:;
						{
							jule::Ptr<_2258258db_Var> _63625_v = _62921_def.operator jule::Ptr<_2258258db_Var>();
							if ((*this)._method_is_accessible_define(_63625_v->_field_public,_63625_v->_field_token)) {
								goto _iter_next_5556878272;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_23e2b5818_TypeAlias>>()) {
						_case_begin_5556886800:;
						{
							jule::Ptr<_23e2b5818_TypeAlias> _64225_ta = _62921_def.operator jule::Ptr<_23e2b5818_TypeAlias>();
							if ((*this)._method_is_accessible_define(_64225_ta->_field_public,_64225_ta->_field_token)) {
								goto _iter_next_5556878272;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
						_case_begin_5556888448:;
						{
							jule::Ptr<_225036509_Struct> _64825_strct = _62921_def.operator jule::Ptr<_225036509_Struct>();
							if ((*this)._method_is_accessible_define(_64825_strct->_field_public,_64825_strct->_field_token)) {
								goto _iter_next_5556878272;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2255ab70a_Trait>>()) {
						_case_begin_5556888544:;
						{
							jule::Ptr<_2255ab70a_Trait> _65425_t = _62921_def.operator jule::Ptr<_2255ab70a_Trait>();
							if ((*this)._method_is_accessible_define(_65425_t->_field_public,_65425_t->_field_token)) {
								goto _iter_next_5556878272;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2255aae79_Enum>>()) {
						_case_begin_5556888640:;
						{
							jule::Ptr<_2255aae79_Enum> _66025_e = _62921_def.operator jule::Ptr<_2255aae79_Enum>();
							if ((*this)._method_is_accessible_define(_66025_e->_field_public,_66025_e->_field_token)) {
								goto _iter_next_5556878272;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2252d6a73_Fn>>()) {
						_case_begin_5556888736:;
						{
							jule::Ptr<_2252d6a73_Fn> _66625_f = _62921_def.operator jule::Ptr<_2252d6a73_Fn>();
							if ((*this)._method_is_accessible_define(_66625_f->_field_public,_66625_f->_field_token)) {
								goto _iter_next_5556878272;
							}
						}
					}
					else {
						_case_begin_5556883616:;
						{
							(*this)._method_push_err(_22579574b_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_22579574b_ident._field_kind)}));
							goto _iter_next_5556878272;
						}
					}
					_match_end_5556886192:;
				}
				(*this)._method_push_err(_22579574b_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_22579574b_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
			}
			_iter_next_5556878272:;
			++it;
			goto _iter_begin_5556878272;
		}
		_iter_end_5556878272:;
	}
}



inline jule::Bool _22579574b_Sema::_method_is_use_alias_duplication(jule::Ptr<_225615962_ImportInfo>& _68144_imp) {
	if (_68144_imp->_field_alias.len() == 0LL) {
		return false;
	}
	{
		auto &expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_5556908384:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _22579574b_imp2 = *it;
			{
				if (_22579574b_imp2 == _68144_imp) {
					goto _iter_end_5556908384;
				}
				if (_22579574b_imp2->_field_alias == _68144_imp->_field_alias) {
					return true;
				}
			}
			_iter_next_5556908384:;
			++it;
			goto _iter_begin_5556908384;
		}
		_iter_end_5556908384:;
	}
	return false;
}



inline jule::Bool _22579574b_Sema::_method_check_import(jule::Ptr<_225615962_ImportInfo>& _69736_imp) {
	if (_69736_imp->_field_cpp_linked || (_69736_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_69736_imp)) {
		(*this)._method_push_err(_69736_imp->_field_token,jule::Str("identifier \"@\" is already used for another use declaration", 58),jule::Slice<jule::Any>({jule::Any(_69736_imp->_field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	}
	if (_69736_imp->_field_duplicate) {
		return true;
	}
	jule::Ptr<_22579574b_Sema> _71117_sema = jule::new_struct_ptr<_22579574b_Sema>(new( std::nothrow ) _22579574b_Sema(jule::Slice<_23ceb0c1d_Log>(),jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>(),jule::Ptr<_225a097a1_SymbolTable>(),(*this)._field_flags));
	_71117_sema->_method_check(_69736_imp->_field_package->_field_files);
	if (_71117_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_71117_sema->_field_errors);
		_71117_sema->_field_errors=nullptr;
		return false;
	}
	(*this)._method_check_import_selections(_69736_imp);
	return true;
}



inline void _22579574b_Sema::_method_check_imports(void) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_5556925184:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_file = *it;
			{
				(*this)._method_set_current_file(_22579574b_file);
				{
					auto &expr = _22579574b_file->_field_imports;
					auto it = expr.begin();
					_iter_begin_5556927744:;
					if (it != expr.end()) {
						jule::Ptr<_225615962_ImportInfo> _22579574b_imp = *it;
						{
							jule::Bool _73021_ok = (*this)._method_check_import(_22579574b_imp);
							if ((!(_73021_ok))) {
								(*this)._method_push_err(_22579574b_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_22579574b_imp->_field_link_path)}));
								return;
							}
						}
						_iter_next_5556927744:;
						++it;
						goto _iter_begin_5556927744;
					}
					_iter_end_5556927744:;
				}
			}
			_iter_next_5556925184:;
			++it;
			goto _iter_begin_5556925184;
		}
		_iter_end_5556925184:;
	}
}



inline void _22579574b_Sema::_method_impl_file_impls(void) {
	{
		auto &expr = this->self->_field_file->_field_impls;
		auto it = expr.begin();
		_iter_begin_5556930736:;
		if (it != expr.end()) {
			jule::Ptr<_2255b811d_Impl> _22579574b_imp = *it;
			{
				this->self->_method_impl_impl(_22579574b_imp);
			}
			_iter_next_5556930736:;
			++it;
			goto _iter_begin_5556930736;
		}
		_iter_end_5556930736:;
	}
}



inline void _22579574b_Sema::_method_impl_impls(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5556936400:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_file = *it;
			{
				this->self->_method_set_current_file(_22579574b_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_5556936400:;
			++it;
			goto _iter_begin_5556936400;
		}
		_iter_end_5556936400:;
	}
}



inline void _22579574b_Sema::_method_check_enums(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5556940128:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_file = *it;
			{
				this->self->_method_set_current_file(_22579574b_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_5556940128:;
			++it;
			goto _iter_begin_5556940128;
		}
		_iter_end_5556940128:;
	}
}



inline jule::Bool _22579574b_Sema::_method_check_type_with_refers(jule::Ptr<_23e2b5818_TypeSymbol>& _76347_t,jule::Trait<_225e7723a_Lookup> _76413_l,jule::Ptr<_23e2b5818_Referencer> _76428_referencer) {
	jule::Bool _76455_ok = jule::Bool();
	if (_76347_t->_method_checked()) {
		_76455_ok = true;
		return _76455_ok;
	}
	_23e2b5818_TypeChecker _76817_tc = _23e2b5818_TypeChecker(this->self,_76413_l,_76428_referencer,_23e730c0b_Token(),jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>(),jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>(),jule::Bool());
	_76817_tc._method_check(_76347_t);
	_76455_ok = _76347_t->_method_checked();
	return _76455_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_type(jule::Ptr<_23e2b5818_TypeSymbol>& _77935_t,jule::Trait<_225e7723a_Lookup> _77955_l) {
	jule::Bool _77968_ok = jule::Bool();
	_77968_ok = this->self->_method_check_type_with_refers(_77935_t,_77955_l,nullptr);
	return _77968_ok;
}



inline jule::Ptr<_23e2b5818_TypeKind> _22579574b_Sema::_method_build_type_with_generics(jule::Ptr<_23e45734a_TypeDecl>& _78549_t,jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>> _78613_generics) {
	jule::Ptr<_23e2b5818_TypeChecker> _78717_tc = jule::new_struct<_23e2b5818_TypeChecker>(new( std::nothrow ) _23e2b5818_TypeChecker(this->self,this->self,jule::Ptr<_23e2b5818_Referencer>(),_23e730c0b_Token(),jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>(),_78613_generics,jule::Bool()));
	return _78717_tc->_method_check_decl(_78549_t);
}



inline jule::Ptr<_23e2b5818_TypeKind> _22579574b_Sema::_method_build_type(jule::Ptr<_23e45734a_TypeDecl>& _79635_t) {
	return this->self->_method_build_type_with_generics(_79635_t,nullptr);
}



inline jule::Ptr<_225aa4a5a_Eval> _22579574b_Sema::_method_evalpd(jule::Trait<_225e7723a_Lookup> _80230_l,jule::Ptr<_23e2b5818_TypeKind> _80245_p,jule::Ptr<_2258258db_Var> _80263_owner) {
	jule::Ptr<_225aa4a5a_Eval> _80317_e = jule::new_struct_ptr<_225aa4a5a_Eval>(new( std::nothrow ) _225aa4a5a_Eval(this->self,_80230_l,jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),_80263_owner));
	{
		auto &_match_expr{ _80230_l };
		if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ScopeChecker>>()) {
			_case_begin_5556984016:;
			{
				_80317_e->_field_unsafety=_80230_l.operator jule::Ptr<_2255ba3ea_ScopeChecker>()->_method_is_unsafe();
			}
		}
		_match_end_5556985232:;
	}
	_80317_e->_field_prefix=_80245_p;
	return _80317_e;
}



inline jule::Ptr<_225aa4a5a_Eval> _22579574b_Sema::_method_evalp(jule::Trait<_225e7723a_Lookup> _82029_l,jule::Ptr<_23e2b5818_TypeKind> _82044_p) {
	return this->self->_method_evalpd(_82029_l,_82044_p,nullptr);
}



inline jule::Ptr<_225aa4a5a_Eval> _22579574b_Sema::_method_eval(jule::Trait<_225e7723a_Lookup> _82528_l) {
	return this->self->_method_evalp(_82528_l,nullptr);
}



inline void _22579574b_Sema::_method_check_assign_type(jule::Bool _82937_dest_is_ref,jule::Ptr<_23e2b5818_TypeKind>& _82961_dest,jule::Ptr<_225aa4a5a_Data>& _83014_d,_23e730c0b_Token _83028_error_token) {
	if (_83014_d->_field_kind->_field_variadic) {
		this->self->_method_push_err(_83028_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	if (_82937_dest_is_ref) {
		if ((!(_82961_dest->_method_equals(_83014_d->_field_kind)))) {
			this->self->_method_push_err(_83028_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_82961_dest->_method_to_str()),jule::Any(_83014_d->_field_kind->_method_to_str())}));
		}
	} else {
		jule::Ptr<_22582290a_AssignTypeChecker> _84021_atc = jule::new_struct<_22582290a_AssignTypeChecker>(new( std::nothrow ) _22582290a_AssignTypeChecker(this->self,_82961_dest,_83014_d,_83028_error_token));
		jule::Bool _84617_ok = _84021_atc->_method_check();
		if ((!(_84617_ok))) {
			return;
		}
	}
	if ((!(_83014_d->_method_is_const())) || (_82961_dest->_method_prim() == nullptr)) {
		return;
	}
	jule::Str _85617_kind = _82961_dest->_method_prim()->_field_kind;
	{
		if (_2261088d8_is_sig_int(_85617_kind)) {
			_case_begin_5557005888:;
			{
				_83014_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_83014_d->_field_constant->_method_as_i64()));
			}
		}
		else if (_2261088d8_is_unsig_int(_85617_kind)) {
			_case_begin_5557005984:;
			{
				_83014_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_83014_d->_field_constant->_method_as_u64()));
			}
		}
		else if (_2261088d8_is_float(_85617_kind)) {
			_case_begin_5557006080:;
			{
				_83014_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_83014_d->_field_constant->_method_as_f64()));
			}
		}
		_match_end_5557005664:;
	}
}



inline jule::Bool _22579574b_Sema::_method_check_type_compatibility(jule::Ptr<_23e2b5818_TypeKind>& _86549_dest,jule::Ptr<_23e2b5818_TypeKind>& _86614_src,_23e730c0b_Token& _86635_error_token) {
	if (_86614_src == nullptr) {
		this->self->_method_push_err(_86635_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_86549_dest->_method_to_str()),jule::Any(_86614_src->_method_to_str())}));
		return false;
	}
	if (_86614_src->_method_tup() != nullptr) {
		this->self->_method_push_err(_86635_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_86549_dest->_method_to_str()),jule::Any(_86614_src->_method_to_str())}));
		return false;
	}
	_22582290a_TypeCompatibilityChecker _88017_tcc = _22582290a_TypeCompatibilityChecker(this->self,_86549_dest,_86614_src,_86635_error_token);
	if (_88017_tcc._method_check()) {
		return true;
	}
	this->self->_method_push_err(_86635_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_86549_dest->_method_to_str()),jule::Any(_86614_src->_method_to_str())}));
	return false;
}



inline jule::Ptr<_23e2b5818_TypeKind> _22579574b_Sema::_method_build_non_generic_type_kind(jule::Ptr<_23e45734a_TypeDecl>& _90152_ast,jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>& _90214_generics) {
	jule::Ptr<_23e2b5818_TypeChecker> _90317_tc = jule::new_struct<_23e2b5818_TypeChecker>(new( std::nothrow ) _23e2b5818_TypeChecker(this->self,this->self,jule::Ptr<_23e2b5818_Referencer>(),_23e730c0b_Token(),_90214_generics,jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>(),jule::Bool()));
	return _90317_tc->_method_check_decl(_90152_ast);
}



inline void _22579574b_Sema::_method_build_fn_non_generic_type_kinds(jule::Ptr<_2252d6a73_FnIns>& _91156_f) {
	jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> _91217_generics = nullptr;
	if (_91156_f->_field_decl->_method_is_method()) {
		_91217_generics=jule::append(_91156_f->_field_decl->_field_generics,_91156_f->_field_decl->_field_owner->_field_generics);
	} else {
		_91217_generics=_91156_f->_field_decl->_field_generics;
	}
	{
		auto &expr = _91156_f->_field_params;
		auto it = expr.begin();
		_iter_begin_5557034784:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_ParamIns> _22579574b_p = *it;
			{
				if ((!(_22579574b_p->_field_decl->_method_is_self()))) {
					_22579574b_p->_field_kind=this->self->_method_build_non_generic_type_kind(_22579574b_p->_field_decl->_field_kind->_field_decl,_91217_generics);
				}
			}
			_iter_next_5557034784:;
			++it;
			goto _iter_begin_5557034784;
		}
		_iter_end_5557034784:;
	}
	if ((!(_91156_f->_field_decl->_method_is_void()))) {
		_91156_f->_field_result=this->self->_method_build_non_generic_type_kind(_91156_f->_field_decl->_field_result->_field_kind->_field_decl,_91217_generics);
	}
}



inline jule::Ptr<_2252d6a73_FnIns> _22579574b_Sema::_method_get_trait_check_fn_kind(jule::Ptr<_2252d6a73_Fn>& _92948_f) {
	jule::Ptr<_2252d6a73_FnIns> _93017_ins = _92948_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_93017_ins);
	return _93017_ins;
}



inline jule::Bool _22579574b_Sema::_method_reload_fn_ins_types(jule::Ptr<_2252d6a73_FnIns>& _93544_f) {
	jule::Bool _93557_ok = jule::Bool();
	if (_93544_f->_method_is_builtin() || _93544_f->_method_is_anon()) {
		_93557_ok = true;
		return _93557_ok;
	}
	jule::Ptr<_22579574b_Sema> _94017_sema = _93544_f->_field_decl->_field_sema;
	jule::Ptr<_225a097a1_SymbolTable> _94217_old = _93544_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_93544_f->_field_decl->_field_sema->_method_set_current_file(_94217_old);
	});
	jule::Ptr<_225a097a1_SymbolTable> _94417_file = _22579574b_find_file(_93544_f->_field_decl->_field_sema->_field_files,_93544_f->_field_decl->_field_token._field_file);
	if (_94417_file != nullptr) {
		_93544_f->_field_decl->_field_sema->_method_set_current_file(_94417_file);
	}
	jule::I64 _94917_size = _93544_f->_field_generics.len();
	if ((_93544_f->_field_decl != nullptr) && (_93544_f->_field_decl->_field_owner != nullptr)) {
		_94917_size+=static_cast<jule::I64>(_93544_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>> _95417_generics = jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>::alloc(0LL,_94917_size);
	{
		auto &expr = _93544_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_5557059216:;
		if (it != expr.end()) {
			jule::Int _22579574b_i = it - expr.begin();
			jule::Ptr<_23e2b5818_TypeKind> _22579574b_g = *it;
			{
				_95417_generics.push(jule::new_struct<_23e2b5818_TypeAlias>(new( std::nothrow ) _23e2b5818_TypeAlias(jule::Ptr<_23e45734a_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_23e730c0b_Token(),_93544_f->_field_decl->_field_generics[_22579574b_i]->_field_ident,jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),_22579574b_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_5557059216:;
			++it;
			_22579574b_i++;
			goto _iter_begin_5557059216;
		}
		_iter_end_5557059216:;
	}
	if ((_93544_f->_field_decl != nullptr) && (_93544_f->_field_decl->_field_owner != nullptr)) {
		jule::Ptr<_225036509_StructIns> _96621_owner = _93544_f->_field_owner;
		{
			auto &expr = _96621_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_5557061600:;
			if (it != expr.end()) {
				jule::Int _22579574b_i = it - expr.begin();
				jule::Ptr<_23e2b5818_TypeKind> _22579574b_g = *it;
				{
					_95417_generics.push(jule::new_struct<_23e2b5818_TypeAlias>(new( std::nothrow ) _23e2b5818_TypeAlias(jule::Ptr<_23e45734a_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_23e730c0b_Token(),_96621_owner->_field_decl->_field_generics[_22579574b_i]->_field_ident,jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),_22579574b_g)),jule::Str(),jule::Slice<jule::Any>())));
				}
				_iter_next_5557061600:;
				++it;
				_22579574b_i++;
				goto _iter_begin_5557061600;
			}
			_iter_end_5557061600:;
		}
	}
	_93557_ok=true;
	{
		auto &expr = _93544_f->_field_params;
		auto it = expr.begin();
		_iter_begin_5557068512:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_ParamIns> _22579574b_p = *it;
			{
				if ((!(_22579574b_p->_field_decl->_method_is_self()))) {
					_22579574b_p->_field_kind=_94017_sema->_method_build_type_with_generics(_22579574b_p->_field_decl->_field_kind->_field_decl,_95417_generics);
					if (_22579574b_p->_field_kind != nullptr) {
						_22579574b_p->_field_kind->_field_variadic=_22579574b_p->_field_decl->_field_variadic;
						if (_22579574b_p->_field_decl->_field_reference && (!(_23e2b5818_is_valid_for_ref(_22579574b_p->_field_kind)))) {
							this->self->_method_push_err(_22579574b_p->_field_decl->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_22579574b_p->_field_kind->_method_to_str())}));
						}
					} else {
						_93557_ok=false;
					}
				}
			}
			_iter_next_5557068512:;
			++it;
			goto _iter_begin_5557068512;
		}
		_iter_end_5557068512:;
	}
	if ((!(_93544_f->_field_decl->_method_is_void()))) {
		_93544_f->_field_result=_94017_sema->_method_build_type_with_generics(_93544_f->_field_decl->_field_result->_field_kind->_field_decl,_95417_generics);
		_93557_ok=(_93544_f->_field_result != nullptr) && _93557_ok;
	}
	if (_94017_sema != this->self) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_94017_sema->_field_errors);
		_94017_sema->_field_errors=nullptr;
	}
	return _93557_ok;
}



inline void _22579574b_Sema::_method_check_ref_validity_for_init_expr(jule::Bool _100552_left_mut,jule::Ptr<_225aa4a5a_Data>& _100569_d,_23e730c0b_Token& _100584_error_token) {
	{
		auto &_match_expr{ _100569_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
			_case_begin_5557082848:;
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_TraitSubIdentExprModel>>()) {
			_case_begin_5557082064:;
			{
				jule::Ptr<_2255b85b3_TraitSubIdentExprModel> _101117_model = _100569_d->_field_model.operator jule::Ptr<_2255b85b3_TraitSubIdentExprModel>();
				if ((!(_22579574b_is_valid_model_for_ref(_101117_model->_field_expr)))) {
					this->self->_method_push_err(_100584_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_101117_model->_field_ident)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_StructSubIdentExprModel>>()) {
			_case_begin_5557082160:;
			{
				jule::Ptr<_2255b85b3_StructSubIdentExprModel> _101717_model = _100569_d->_field_model.operator jule::Ptr<_2255b85b3_StructSubIdentExprModel>();
				if ((!(_22579574b_is_valid_model_for_ref(_101717_model->_field_expr)))) {
					this->self->_method_push_err(_100584_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_101717_model->_field_field->_field_decl->_field_ident)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_2255b85b3_CommonSubIdentExprModel>>()) {
			_case_begin_5557082272:;
			{
				this->self->_method_push_err(_100584_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_UnaryExprModel>>()) {
			_case_begin_5557082384:;
			{
				jule::Ptr<_2255b85b3_UnaryExprModel> _102717_unary = _100569_d->_field_model.operator jule::Ptr<_2255b85b3_UnaryExprModel>();
				if (_102717_unary->_field_op == jule::Str("*", 1)) {
					goto _match_end_5557081760;
				}
				goto _case_begin_5557081472;
			}
		}
		else {
			_case_begin_5557081472:;
			{
				this->self->_method_push_err(_100584_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
			}
		}
		_match_end_5557081760:;
	}
	if (_100552_left_mut && (!(_100569_d->_field_mutable))) {
		this->self->_method_push_err(_100584_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
	}
}



inline void _22579574b_Sema::_method_check_validity_for_init_expr(jule::Bool _104348_left_mut,jule::Bool _104364_left_ref,jule::Ptr<_23e2b5818_TypeKind>& _104410_left_kind,jule::Ptr<_225aa4a5a_Data>& _104437_d,_23e730c0b_Token& _104452_error_token) {
	if ((_104348_left_mut && (!(_104437_d->_field_mutable))) && _104437_d->_field_kind->_method_mutable()) {
		this->self->_method_push_err(_104452_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>());
	}
	if (_104364_left_ref) {
		this->self->_method_check_ref_validity_for_init_expr(_104348_left_mut,_104437_d,_104452_error_token);
	}
	jule::Ptr<_22582290a_AssignTypeChecker> _105217_atc = jule::new_struct<_22582290a_AssignTypeChecker>(new( std::nothrow ) _22582290a_AssignTypeChecker(this->self,jule::Ptr<_23e2b5818_TypeKind>(),_104437_d,_104452_error_token));
	_105217_atc->_method_check_validity();
}



inline jule::Bool _22579574b_Sema::_method_check_type_alias_decl_kind(jule::Ptr<_23e2b5818_TypeAlias>& _106051_ta,jule::Trait<_225e7723a_Lookup> _106071_l) {
	jule::Bool _106084_ok = jule::Bool();
	jule::Ptr<_225a097a1_SymbolTable> _106117_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_106117_old);
	});
	jule::Ptr<_225a097a1_SymbolTable> _106317_file = _22579574b_find_file(this->self->_field_files,_106051_ta->_field_token._field_file);
	if (_106317_file != nullptr) {
		this->self->_method_set_current_file(_106317_file);
	}
	_106084_ok=this->self->_method_check_type_with_refers(_106051_ta->_field_kind,_106071_l,jule::new_struct<_23e2b5818_Referencer>(new( std::nothrow ) _23e2b5818_Referencer(_106051_ta->_field_ident,jule::Any(_106051_ta),(&(_106051_ta->_field_refers)))));
	if ((_106084_ok && (_106051_ta->_field_kind->_field_kind->_method_arr() != nullptr)) && _106051_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_106051_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_106084_ok=false;
	}
	return _106084_ok;
}



inline void _22579574b_Sema::_method_check_type_alias_decl(jule::Ptr<_23e2b5818_TypeAlias>& _108046_ta,jule::Trait<_225e7723a_Lookup> _108066_l) {
	if (_23e730c0b_is_ignore_ident(_108046_ta->_field_ident)) {
		this->self->_method_push_err(_108046_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	this->self->_method_check_type_alias_decl_kind(_108046_ta,_108066_l);
}



inline void _22579574b_Sema::_method_check_type_alias_decl_dup(jule::Ptr<_23e2b5818_TypeAlias>& _108850_ta) {
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_108850_ta),_108850_ta->_field_ident,_108850_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_108850_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_108850_ta->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_type_alias_decl_kind(_108850_ta,this->self);
}



inline jule::Bool _22579574b_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _109744_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_5557132736:;
		if (it != expr.end()) {
			jule::Ptr<_23e2b5818_TypeAlias> _22579574b_ta = *it;
			{
				this->self->_method_check_type_alias_decl_dup(_22579574b_ta);
				if (this->self->_field_errors.len() > 0LL) {
					_109744_ok = false;
					return _109744_ok;
				}
			}
			_iter_next_5557132736:;
			++it;
			goto _iter_begin_5557132736;
		}
		_iter_end_5557132736:;
	}
	_109744_ok = true;
	return _109744_ok;
}



inline void _22579574b_Sema::_method_check_enum_items_dup(jule::Ptr<_2255aae79_Enum> _110939_e) {
	{
		auto &expr = _110939_e->_field_items;
		auto it = expr.begin();
		_iter_begin_5557137536:;
		if (it != expr.end()) {
			jule::Ptr<_2255aae79_EnumItem> &_22579574b_item = *it;
			{
				if (_23e730c0b_is_ignore_ident(_22579574b_item->_field_ident)) {
					(*this)._method_push_err(_22579574b_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _110939_e->_field_items;
						auto it = expr.begin();
						_iter_begin_5557141936:;
						if (it != expr.end()) {
							jule::Ptr<_2255aae79_EnumItem> &_22579574b_citem = *it;
							{
								if (_22579574b_item == _22579574b_citem) {
									goto _iter_end_5557141936;
								} else if (_22579574b_item->_field_ident == _22579574b_citem->_field_ident) {
									(*this)._method_push_err(_22579574b_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_22579574b_item->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_5557141936;
								}
							}
							_iter_next_5557141936:;
							++it;
							goto _iter_begin_5557141936;
						}
						_iter_end_5557141936:;
					}
				}
			}
			_iter_next_5557137536:;
			++it;
			goto _iter_begin_5557137536;
		}
		_iter_end_5557137536:;
	}
}



inline void _22579574b_Sema::_method_check_enum_items_str(jule::Ptr<_2255aae79_Enum>& _112745_e) {
	{
		auto &expr = _112745_e->_field_items;
		auto it = expr.begin();
		_iter_begin_5557142848:;
		if (it != expr.end()) {
			jule::Ptr<_2255aae79_EnumItem> _22579574b_item = *it;
			{
				if (_22579574b_item->_method_auto_expr()) {
					_22579574b_item->_field_value=jule::new_struct<_225aa4a5a_Value>(new( std::nothrow ) _225aa4a5a_Value(jule::Ptr<_23e45734a_Expr>(),jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::Ptr<_23e2b5818_TypeKind>(),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_226100d86_Const::_static_method_new_str(_22579574b_item->_field_ident)))));
					_22579574b_item->_field_value->_field_data->_field_model=jule::Any(_22579574b_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ptr<_225aa4a5a_Data> _113725_d = this->self->_method_eval(this->self)->_method_eval_expr(_22579574b_item->_field_value->_field_expr);
					if (_113725_d == nullptr) {
						goto _iter_next_5557142848;
					}
					if ((!(_113725_d->_method_is_const()))) {
						this->self->_method_push_err(_22579574b_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					this->self->_method_check_assign_type(false,_112745_e->_field_kind->_field_kind,_113725_d,_22579574b_item->_field_token);
					_22579574b_item->_field_value->_field_data=_113725_d;
				}
			}
			_iter_next_5557142848:;
			++it;
			goto _iter_begin_5557142848;
		}
		_iter_end_5557142848:;
	}
}



inline void _22579574b_Sema::_method_check_enum_items_int(jule::Ptr<_2255aae79_Enum>& _115245_e) {
	jule::U64 _115317_max = static_cast<jule::U64>(_226108454_max(_115245_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto &expr = _115245_e->_field_items;
		auto it = expr.begin();
		_iter_begin_5557161248:;
		if (it != expr.end()) {
			jule::Int _22579574b_i = it - expr.begin();
			jule::Ptr<_2255aae79_EnumItem> _22579574b_item = *it;
			{
				if (_115317_max == 0LL) {
					this->self->_method_push_err(_22579574b_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_115317_max)--;
				}
				if (_22579574b_item->_method_auto_expr()) {
					_22579574b_item->_field_value=jule::new_struct<_225aa4a5a_Value>(new( std::nothrow ) _225aa4a5a_Value(jule::Ptr<_23e45734a_Expr>(),jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::Ptr<_23e2b5818_TypeKind>(),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_226100d86_Const::_static_method_new_u64(static_cast<jule::U64>(_115317_max - (_115317_max - static_cast<jule::U64>(_22579574b_i))))))));
					_22579574b_item->_field_value->_field_data->_field_model=jule::Any(_22579574b_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ptr<_225aa4a5a_Data> _116925_d = this->self->_method_eval(this->self)->_method_eval_expr(_22579574b_item->_field_value->_field_expr);
					if (_116925_d == nullptr) {
						goto _iter_next_5557161248;
					}
					if ((!(_116925_d->_method_is_const()))) {
						this->self->_method_push_err(_22579574b_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					this->self->_method_check_assign_type(false,_115245_e->_field_kind->_field_kind,_116925_d,_22579574b_item->_field_token);
					_22579574b_item->_field_value->_field_data=_116925_d;
				}
			}
			_iter_next_5557161248:;
			++it;
			_22579574b_i++;
			goto _iter_begin_5557161248;
		}
		_iter_end_5557161248:;
	}
}



inline void _22579574b_Sema::_method_check_enum_decl(jule::Ptr<_2255aae79_Enum>& _118440_e) {
	if (_23e730c0b_is_ignore_ident(_118440_e->_field_ident)) {
		this->self->_method_push_err(_118440_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_118440_e),_118440_e->_field_ident,false)) {
		this->self->_method_push_err(_118440_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_118440_e->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_118440_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_118440_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_118440_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_118440_e);
	if (_118440_e->_field_kind != nullptr) {
		if ((!(this->self->_method_check_type(_118440_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_118440_e->_field_kind=jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ptr<_23e2b5818_Prim> _121117_t = _118440_e->_field_kind->_field_kind->_method_prim();
	if (_121117_t == nullptr) {
		this->self->_method_push_err(_118440_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>());
		return;
	}
	{
		if (_121117_t->_method_is_str()) {
			_case_begin_5557191744:;
			{
				this->self->_method_check_enum_items_str(_118440_e);
			}
		}
		else if (_2261088d8_is_int(_121117_t->_method_to_str())) {
			_case_begin_5557191008:;
			{
				this->self->_method_check_enum_items_int(_118440_e);
			}
		}
		else {
			_case_begin_5557184432:;
			{
				this->self->_method_push_err(_118440_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>());
			}
		}
		_match_end_5557188688:;
	}
}



inline jule::Bool _22579574b_Sema::_method_check_enum_decls(void) {
	jule::Bool _123138_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_enums;
		auto it = expr.begin();
		_iter_begin_5557197088:;
		if (it != expr.end()) {
			jule::Ptr<_2255aae79_Enum> _22579574b_e = *it;
			{
				this->self->_method_check_enum_decl(_22579574b_e);
				if (this->self->_field_errors.len() > 0LL) {
					_123138_ok = false;
					return _123138_ok;
				}
			}
			_iter_next_5557197088:;
			++it;
			goto _iter_begin_5557197088;
		}
		_iter_end_5557197088:;
	}
	_123138_ok = true;
	return _123138_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_decl_generics(jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>& _124339_generics) {
	jule::Bool _124367_ok = jule::Bool();
	_124367_ok=true;
	{
		auto &expr = _124339_generics;
		auto it = expr.begin();
		_iter_begin_5557203392:;
		if (it != expr.end()) {
			jule::Int _22579574b_i = it - expr.begin();
			jule::Ptr<_23e45734a_GenericDecl> &_22579574b_g = *it;
			{
				if (_23e730c0b_is_ignore_ident(_22579574b_g->_field_ident)) {
					(*this)._method_push_err(_22579574b_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_124367_ok=false;
					goto _iter_next_5557203392;
				}
				_julec_label_duplication_lookup:;
				{
					auto &expr = _124339_generics;
					auto it = expr.begin();
					_iter_begin_5557205408:;
					if (it != expr.end()) {
						jule::Int _22579574b_j = it - expr.begin();
						jule::Ptr<_23e45734a_GenericDecl> &_22579574b_ct = *it;
						{
							{
								if (_22579574b_j >= _22579574b_i) {
									_case_begin_5557209952:;
									{
										goto _iter_end_5557205408;
									}
								}
								else if (_22579574b_g->_field_ident == _22579574b_ct->_field_ident) {
									_case_begin_5557210064:;
									{
										(*this)._method_push_err(_22579574b_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_22579574b_g->_field_ident)}));
										(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_124367_ok=false;
										goto _iter_end_5557205408;
									}
								}
								_match_end_5557209728:;
							}
						}
						_iter_next_5557205408:;
						++it;
						_22579574b_j++;
						goto _iter_begin_5557205408;
					}
					_iter_end_5557205408:;
				}
			}
			_iter_next_5557203392:;
			++it;
			_22579574b_i++;
			goto _iter_begin_5557203392;
		}
		_iter_end_5557203392:;
	}
	return _124367_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_fn_decl_params_dup(jule::Ptr<_2252d6a73_Fn>& _127144_f) {
	jule::Bool _127154_ok = jule::Bool();
	_127154_ok=true;
	_julec_label_check:;
	{
		auto &expr = _127144_f->_field_params;
		auto it = expr.begin();
		_iter_begin_5557218448:;
		if (it != expr.end()) {
			jule::Int _22579574b_i = it - expr.begin();
			jule::Ptr<_2252d6a73_Param> &_22579574b_p = *it;
			{
				{
					auto &expr = _127144_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_5557220608:;
					if (it != expr.end()) {
						jule::Ptr<_23e45734a_GenericDecl> &_22579574b_g = *it;
						{
							if (_22579574b_p->_field_ident == _22579574b_g->_field_ident) {
								_127154_ok=false;
								(*this)._method_push_err(_22579574b_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_22579574b_p->_field_ident)}));
								(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_5557218448;
							}
						}
						_iter_next_5557220608:;
						++it;
						goto _iter_begin_5557220608;
					}
					_iter_end_5557220608:;
				}
				_julec_label_params_lookup:;
				{
					auto &expr = _127144_f->_field_params;
					auto it = expr.begin();
					_iter_begin_5557222480:;
					if (it != expr.end()) {
						jule::Int _22579574b_j = it - expr.begin();
						jule::Ptr<_2252d6a73_Param> &_22579574b_jp = *it;
						{
							{
								if (_22579574b_j >= _22579574b_i) {
									_case_begin_5557227408:;
									{
										goto _iter_end_5557222480;
									}
								}
								else if (_23e730c0b_is_anon_ident(_22579574b_p->_field_ident) || _23e730c0b_is_anon_ident(_22579574b_jp->_field_ident)) {
									_case_begin_5557227520:;
									{
										goto _iter_end_5557222480;
									}
								}
								else if (_22579574b_p->_field_ident == _22579574b_jp->_field_ident) {
									_case_begin_5557227632:;
									{
										_127154_ok=false;
										(*this)._method_push_err(_22579574b_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_22579574b_p->_field_ident)}));
										(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_5557218448;
									}
								}
								_match_end_5557227168:;
							}
						}
						_iter_next_5557222480:;
						++it;
						_22579574b_j++;
						goto _iter_begin_5557222480;
					}
					_iter_end_5557222480:;
				}
			}
			_iter_next_5557218448:;
			++it;
			_22579574b_i++;
			goto _iter_begin_5557218448;
		}
		_iter_end_5557218448:;
	}
	return _127154_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_fn_decl_result_dup(jule::Ptr<_2252d6a73_Fn>& _130744_f) {
	jule::Bool _130754_ok = jule::Bool();
	_130754_ok=true;
	if (_130744_f->_method_is_void()) {
		return _130754_ok;
	}
	{
		auto &expr = _130744_f->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_5557237776:;
		if (it != expr.end()) {
			jule::Int _22579574b_i = it - expr.begin();
			_23e730c0b_Token &_22579574b_v = *it;
			{
				if (_23e730c0b_is_ignore_ident(_22579574b_v._field_kind)) {
					goto _iter_next_5557237776;
				}
				{
					auto &expr = _130744_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_5557239824:;
					if (it != expr.end()) {
						jule::Ptr<_23e45734a_GenericDecl> &_22579574b_g = *it;
						{
							if (_22579574b_v._field_kind == _22579574b_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_5557239824:;
						++it;
						goto _iter_begin_5557239824;
					}
					_iter_end_5557239824:;
				}
				{
					auto &expr = _130744_f->_field_params;
					auto it = expr.begin();
					_iter_begin_5557243600:;
					if (it != expr.end()) {
						jule::Ptr<_2252d6a73_Param> &_22579574b_p = *it;
						{
							if (_22579574b_v._field_kind == _22579574b_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_5557243600:;
						++it;
						goto _iter_begin_5557243600;
					}
					_iter_end_5557243600:;
				}
				_julec_label_itself_lookup:;
				{
					auto &expr = _130744_f->_field_result->_field_idents;
					auto it = expr.begin();
					_iter_begin_5557247376:;
					if (it != expr.end()) {
						jule::Int _22579574b_j = it - expr.begin();
						_23e730c0b_Token &_22579574b_jv = *it;
						{
							{
								if (_22579574b_j >= _22579574b_i) {
									_case_begin_5557249664:;
									{
										goto _iter_end_5557247376;
									}
								}
								else if (_22579574b_jv._field_kind == _22579574b_v._field_kind) {
									_case_begin_5557249776:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_5557249440:;
							}
						}
						_iter_next_5557247376:;
						++it;
						_22579574b_j++;
						goto _iter_begin_5557247376;
					}
					_iter_end_5557247376:;
				}
				goto _iter_next_5557237776;
				_julec_label_exist:;
				(*this)._method_push_err(_22579574b_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_22579574b_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_130754_ok=false;
			}
			_iter_next_5557237776:;
			++it;
			_22579574b_i++;
			goto _iter_begin_5557237776;
		}
		_iter_end_5557237776:;
	}
	return _130754_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_fn_decl_types(jule::Ptr<_2252d6a73_Fn>& _135644_f) {
	jule::Bool _135654_ok = jule::Bool();
	_135654_ok=true;
	jule::Slice<jule::Ptr<_23e45734a_GenericDecl>> _135917_generics = _135644_f->_field_generics;
	if (_135644_f->_field_owner != nullptr) {
		_135917_generics=jule::append(_135917_generics,_135644_f->_field_owner->_field_generics);
	}
	{
		auto &expr = _135644_f->_field_params;
		auto it = expr.begin();
		_iter_begin_5557262784:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Param> _22579574b_p = *it;
			{
				if ((!(_22579574b_p->_method_is_self()))) {
					jule::Ptr<_23e2b5818_TypeKind> _136625_kind = this->self->_method_build_non_generic_type_kind(_22579574b_p->_field_kind->_field_decl,_135917_generics);
					_135654_ok=(_136625_kind != nullptr) && _135654_ok;
					_22579574b_p->_field_kind->_field_kind=_136625_kind;
				}
			}
			_iter_next_5557262784:;
			++it;
			goto _iter_begin_5557262784;
		}
		_iter_end_5557262784:;
	}
	if ((!(_135644_f->_method_is_void()))) {
		jule::Ptr<_23e2b5818_TypeKind> _137321_kind = this->self->_method_build_non_generic_type_kind(_135644_f->_field_result->_field_kind->_field_decl,_135917_generics);
		_135654_ok=(_137321_kind != nullptr) && _135654_ok;
		_135644_f->_field_result->_field_kind->_field_kind=_137321_kind;
	}
	return _135654_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_fn_decl_prototype(jule::Ptr<_2252d6a73_Fn>& _138348_f) {
	jule::Bool _138358_ok = jule::Bool();
	if (_138348_f->_field_exceptional && _138348_f->_field_cpp_linked) {
		this->self->_method_push_err(_138348_f->_field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		_138358_ok = false;
		return _138358_ok;
	}
	if (_138348_f->_field_exceptional) {
		if (_138348_f->_method_is_entry_point()) {
			this->self->_method_push_err(_138348_f->_field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_138348_f->_method_is_init()) {
			this->self->_method_push_err(_138348_f->_field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		}
	}
	{
		if ((!(this->self->_method_check_decl_generics(_138348_f->_field_generics)))) {
			_case_begin_5557278512:;
			{
				_138358_ok = false;
				return _138358_ok;
			}
		}
		else if ((!(this->self->_method_check_fn_decl_params_dup(_138348_f)))) {
			_case_begin_5557278672:;
			{
				_138358_ok = false;
				return _138358_ok;
			}
		}
		else if ((!(this->self->_method_check_fn_decl_result_dup(_138348_f)))) {
			_case_begin_5557278768:;
			{
				_138358_ok = false;
				return _138358_ok;
			}
		}
		else if ((!(this->self->_method_check_fn_decl_types(_138348_f)))) {
			_case_begin_5557278032:;
			{
				_138358_ok = false;
				return _138358_ok;
			}
		}
		else {
			_case_begin_5557271040:;
			{
				_138358_ok = true;
				return _138358_ok;
			}
		}
		_match_end_5557270832:;
	}
}



inline void _22579574b_Sema::_method_check_trait_decl_method(jule::Ptr<_2252d6a73_Fn>& _140648_f) {
	if (_23e730c0b_is_ignore_ident(_140648_f->_field_ident)) {
		this->self->_method_push_err(_140648_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	this->self->_method_check_fn_decl_prototype(_140648_f);
	_140648_f->_field_sema=this->self;
}



inline void _22579574b_Sema::_method_check_trait_decl_methods(jule::Ptr<_2255ab70a_Trait>& _141549_t) {
	{
		auto &expr = _141549_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_5557290064:;
		if (it != expr.end()) {
			jule::Int _22579574b_i = it - expr.begin();
			jule::Ptr<_2252d6a73_Fn> _22579574b_f = *it;
			{
				this->self->_method_check_trait_decl_method(_22579574b_f);
				_141549_t->_field_mutable=_141549_t->_field_mutable || _22579574b_f->_field_params[0LL]->_field_mutable;
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _141549_t->_field_methods;
					auto it = expr.begin();
					_iter_begin_5557295088:;
					if (it != expr.end()) {
						jule::Int _22579574b_j = it - expr.begin();
						jule::Ptr<_2252d6a73_Fn> &_22579574b_jf = *it;
						{
							{
								if (_22579574b_j >= _22579574b_i) {
									_case_begin_5557297744:;
									{
										goto _iter_end_5557295088;
									}
								}
								else if (_22579574b_f->_field_ident == _22579574b_jf->_field_ident) {
									_case_begin_5557297856:;
									{
										this->self->_method_push_err(_22579574b_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_22579574b_f->_field_ident)}));
										this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_5557295088;
									}
								}
								_match_end_5557297520:;
							}
						}
						_iter_next_5557295088:;
						++it;
						_22579574b_j++;
						goto _iter_begin_5557295088;
					}
					_iter_end_5557295088:;
				}
			}
			_iter_next_5557290064:;
			++it;
			_22579574b_i++;
			goto _iter_begin_5557290064;
		}
		_iter_end_5557290064:;
	}
}



inline void _22579574b_Sema::_method_check_trait_decl(jule::Ptr<_2255ab70a_Trait>& _144741_t) {
	if (_23e730c0b_is_ignore_ident(_144741_t->_field_ident)) {
		this->self->_method_push_err(_144741_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_144741_t),_144741_t->_field_ident,false)) {
		this->self->_method_push_err(_144741_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_144741_t->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_trait_decl_methods(_144741_t);
}



inline jule::Bool _22579574b_Sema::_method_check_trait_decls(void) {
	jule::Bool _145939_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_traits;
		auto it = expr.begin();
		_iter_begin_5557312816:;
		if (it != expr.end()) {
			jule::Ptr<_2255ab70a_Trait> _22579574b_t = *it;
			{
				this->self->_method_check_trait_decl(_22579574b_t);
				if (this->self->_field_errors.len() > 0LL) {
					_145939_ok = false;
					return _145939_ok;
				}
			}
			_iter_next_5557312816:;
			++it;
			goto _iter_begin_5557312816;
		}
		_iter_end_5557312816:;
	}
	_145939_ok = true;
	return _145939_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_trait_impl_methods(jule::Ptr<_2255ab70a_Trait>& _147148_base,jule::Ptr<_2255b811d_Impl>& _147163_ipl) {
	jule::Bool _147177_ok = jule::Bool();
	_147177_ok=true;
	{
		auto &expr = _147163_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_5557319200:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> &_22579574b_f = *it;
			{
				if (_147148_base->_method_find_method(_22579574b_f->_field_ident) == nullptr) {
					(*this)._method_push_err(_22579574b_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_147148_base->_field_ident),jule::Any(_22579574b_f->_field_ident)}));
					_147177_ok=false;
				}
			}
			_iter_next_5557319200:;
			++it;
			goto _iter_begin_5557319200;
		}
		_iter_end_5557319200:;
	}
	return _147177_ok;
}



inline jule::Bool _22579574b_Sema::_method_impl_to_struct(jule::Ptr<_225036509_Struct>& _148239_dest,jule::Ptr<_2255b811d_Impl>& _148259_ipl) {
	jule::Bool _148273_ok = jule::Bool();
	_148273_ok=true;
	{
		auto &expr = _148259_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_5557326912:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _22579574b_f = *it;
			{
				if ((_148239_dest->_method_find_method(_22579574b_f->_field_ident,_22579574b_f->_field_statically) != nullptr) || (_148239_dest->_method_find_field(_22579574b_f->_field_ident) != nullptr)) {
					this->self->_method_push_err(_22579574b_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_148239_dest->_field_ident),jule::Any(_22579574b_f->_field_ident)}));
					_148273_ok=false;
					goto _iter_next_5557326912;
				}
				if ((_148239_dest->_field_generics.len() > 0LL) && (_22579574b_f->_field_generics.len() > 0LL)) {
					{
						auto &expr = _22579574b_f->_field_generics;
						auto it = expr.begin();
						_iter_begin_5557332848:;
						if (it != expr.end()) {
							jule::Ptr<_23e45734a_GenericDecl> &_22579574b_fg = *it;
							{
								{
									auto &expr = _148239_dest->_field_generics;
									auto it = expr.begin();
									_iter_begin_5557335232:;
									if (it != expr.end()) {
										jule::Ptr<_23e45734a_GenericDecl> &_22579574b_dg = *it;
										{
											if (_22579574b_fg->_field_ident == _22579574b_dg->_field_ident) {
												this->self->_method_push_err(_22579574b_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_148273_ok=false;
											}
										}
										_iter_next_5557335232:;
										++it;
										goto _iter_begin_5557335232;
									}
									_iter_end_5557335232:;
								}
							}
							_iter_next_5557332848:;
							++it;
							goto _iter_begin_5557332848;
						}
						_iter_end_5557332848:;
					}
				}
				_22579574b_f->_field_sema=this->self;
				_22579574b_f->_field_owner=_148239_dest;
				_148239_dest->_field_methods = jule::alloc_for_append(_148239_dest->_field_methods,1);_148239_dest->_field_methods.push(_22579574b_f);
			}
			_iter_next_5557326912:;
			++it;
			goto _iter_begin_5557326912;
		}
		_iter_end_5557326912:;
	}
	{
		auto &expr = _148259_ipl->_field_statics;
		auto it = expr.begin();
		_iter_begin_5557326816:;
		if (it != expr.end()) {
			jule::Ptr<_2258258db_Var> _22579574b_v = *it;
			{
				
				if ((_148239_dest->_method_find_method(_22579574b_v->_field_ident,true) != nullptr) || (_148239_dest->_method_find_static(_22579574b_v->_field_ident) != nullptr)) {
					this->self->_method_push_err(_22579574b_v->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_148239_dest->_field_ident),jule::Any(_22579574b_v->_field_ident)}));
					_148273_ok=false;
					goto _iter_next_5557326816;
				}
				this->self->_method_check_var_decl(_22579574b_v,this->self);
				this->self->_method_check_type_var(_22579574b_v,this->self);
				_148239_dest->_field_statics = jule::alloc_for_append(_148239_dest->_field_statics,1);_148239_dest->_field_statics.push(_22579574b_v);
			}
			_iter_next_5557326816:;
			++it;
			goto _iter_begin_5557326816;
		}
		_iter_end_5557326816:;
	}
	return _148273_ok;
}



inline void _22579574b_Sema::_method_impl_trait(jule::Ptr<_2255b811d_Impl>& _152535_decl) {
	jule::Ptr<_2255ab70a_Trait> _152617_base = this->self->_method_find_trait(_152535_decl->_field_base._field_kind);
	if (_152617_base == nullptr) {
		_152617_base=_22602dc1a_find_builtin_trait(_152535_decl->_field_base._field_kind);
	}
	if (_152617_base == nullptr) {
		this->self->_method_push_err(_152535_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_152535_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ptr<_225036509_Struct> _153917_dest = this->self->_method_find_struct(_152535_decl->_field_dest._field_kind,false);
	if (_153917_dest == nullptr) {
		this->self->_method_push_err(_152535_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_152535_decl->_field_dest._field_kind)}));
		return;
	}
	if (_153917_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_152535_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	_152617_base->_field_implemented = jule::alloc_for_append(_152617_base->_field_implemented,1);_152617_base->_field_implemented.push(_153917_dest);
	_153917_dest->_field_implements = jule::alloc_for_append(_153917_dest->_field_implements,1);_153917_dest->_field_implements.push(_152617_base);
	if (_152535_decl->_field_statics.len() > 0LL) {
		this->self->_method_push_err(_152535_decl->_field_statics[0LL]->_field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	}
	{
		if ((!(this->self->_method_check_trait_impl_methods(_152617_base,_152535_decl)))) {
			_case_begin_5557361776:;
			{
				return;
			}
		}
		else if ((!(this->self->_method_impl_to_struct(_153917_dest,_152535_decl)))) {
			_case_begin_5557363168:;
			{
				return;
			}
		}
		_match_end_5557359872:;
	}
}



inline void _22579574b_Sema::_method_impl_struct(jule::Ptr<_2255b811d_Impl>& _156336_decl) {
	
	jule::Ptr<_225036509_Struct> _156817_dest = this->self->_method_find_struct(_156336_decl->_field_dest._field_kind,false);
	if (_156817_dest == nullptr) {
		this->self->_method_push_err(_156336_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_156336_decl->_field_dest._field_kind)}));
		return;
	}
	if (_156817_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_156336_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	{
		if ((!(this->self->_method_impl_to_struct(_156817_dest,_156336_decl)))) {
			_case_begin_5557373952:;
			{
				return;
			}
		}
		_match_end_5556613696:;
	}
}



inline void _22579574b_Sema::_method_impl_impl(jule::Ptr<_2255b811d_Impl>& _158634_decl) {
	{
		if (_158634_decl->_method_is_trait_impl()) {
			_case_begin_5557376928:;
			{
				this->self->_method_impl_trait(_158634_decl);
			}
		}
		else if (_158634_decl->_method_is_struct_impl()) {
			_case_begin_5557377040:;
			{
				this->self->_method_impl_struct(_158634_decl);
			}
		}
		_match_end_5557376704:;
	}
}



inline void _22579574b_Sema::_method_check_var_decl(jule::Ptr<_2258258db_Var>& _159539_decl,jule::Trait<_225e7723a_Lookup> _159555_l) {
	if (_23e730c0b_is_ignore_ident(_159539_decl->_field_ident)) {
		this->self->_method_push_err(_159539_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	if (_159539_decl->_method_is_type_inferred()) {
		if ((!(_159539_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_159539_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>());
		}
	} else {
		this->self->_method_check_type(_159539_decl->_field_kind,_159555_l);
	}
	if (_159539_decl->_field_constant && _159539_decl->_field_reference) {
		this->self->_method_push_err(_159539_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	}
	if ((!(_159539_decl->_method_is_initialized()))) {
		if (_159539_decl->_field_constant) {
			this->self->_method_push_err(_159539_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>());
		}
		if (_159539_decl->_field_statically) {
			this->self->_method_push_err(_159539_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		}
		if (_159539_decl->_field_reference) {
			this->self->_method_push_err(_159539_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		}
	}
}



inline void _22579574b_Sema::_method_check_global_var_decl(jule::Ptr<_2258258db_Var>& _162946_decl) {
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_162946_decl),_162946_decl->_field_ident,_162946_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_162946_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_162946_decl->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_162946_decl->_field_cpp_linked && _162946_decl->_field_constant) {
		this->self->_method_push_err(_162946_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>());
	}
	if (((!(_162946_decl->_field_cpp_linked)) && (!(_162946_decl->_field_constant))) && (!(_162946_decl->_field_statically))) {
		this->self->_method_push_err(_162946_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		this->self->_method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_162946_decl->_field_directives,jule::Any(_162946_decl));
	this->self->_method_check_var_decl(_162946_decl,this->self);
}



inline jule::Bool _22579574b_Sema::_method_check_global_decls(void) {
	jule::Bool _164840_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_5557409888:;
		if (it != expr.end()) {
			jule::Ptr<_2258258db_Var> _22579574b_decl = *it;
			{
				this->self->_method_check_global_var_decl(_22579574b_decl);
				if (this->self->_field_errors.len() > 0LL) {
					_164840_ok = false;
					return _164840_ok;
				}
			}
			_iter_next_5557409888:;
			++it;
			goto _iter_begin_5557409888;
		}
		_iter_end_5557409888:;
	}
	_164840_ok = true;
	return _164840_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_struct_trait_impl(jule::Ptr<_225036509_Struct>& _166048_strct,jule::Ptr<_2255ab70a_Trait>& _166069_trt) {
	jule::Bool _166084_ok = jule::Bool();
	{
		auto &expr = _166069_trt->_field_methods;
		auto it = expr.begin();
		_iter_begin_5557414304:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _22579574b_tf = *it;
			{
				jule::Bool _166221_exist = false;
				jule::Ptr<_2252d6a73_Fn> _166321_sf = _166048_strct->_method_find_method(_22579574b_tf->_field_ident,_22579574b_tf->_field_statically);
				jule::Ptr<_2252d6a73_FnIns> _166417_tf_k = this->self->_method_get_trait_check_fn_kind(_22579574b_tf);
				if (_166321_sf != nullptr) {
					jule::Ptr<_2252d6a73_FnIns> _166625_sf_k = this->self->_method_get_trait_check_fn_kind(_166321_sf);
					_166221_exist=((_166417_tf_k->_field_decl->_field_public == _166625_sf_k->_field_decl->_field_public) && (_166417_tf_k->_field_decl->_field_ident == _166625_sf_k->_field_decl->_field_ident)) && _166417_tf_k->_method_equals(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_166625_sf_k)));
				}
				if ((!(_166221_exist))) {
					
					jule::Str _167525_s = _166417_tf_k->_method_get_kind_str(true);
					if (_22579574b_tf->_field_public) {
						_167525_s=jule::Str("pub ", 4) + _167525_s;
					}
					this->self->_method_push_err(_166048_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_166069_trt->_field_ident),jule::Any(_167525_s)}));
					_166084_ok=false;
				}
			}
			_iter_next_5557414304:;
			++it;
			goto _iter_begin_5557414304;
		}
		_iter_end_5557414304:;
	}
	return _166084_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_struct_impls(jule::Ptr<_225036509_Struct>& _168643_s) {
	jule::Bool _168657_ok = jule::Bool();
	_168657_ok=true;
	{
		auto &expr = _168643_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_5557432304:;
		if (it != expr.end()) {
			jule::Ptr<_2255ab70a_Trait> _22579574b_trt = *it;
			{
				_168657_ok=this->self->_method_check_struct_trait_impl(_168643_s,_22579574b_trt) && _168657_ok;
			}
			_iter_next_5557432304:;
			++it;
			goto _iter_begin_5557432304;
		}
		_iter_end_5557432304:;
	}
	return _168657_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_struct_fields(jule::Ptr<_225036509_Struct>& _169444_st) {
	jule::Bool _169459_ok = jule::Bool();
	_169459_ok=true;
	jule::Ptr<_23e2b5818_TypeChecker> _169717_tc = jule::new_struct<_23e2b5818_TypeChecker>(new( std::nothrow ) _23e2b5818_TypeChecker(this->self,this->self,jule::new_struct<_23e2b5818_Referencer>(new( std::nothrow ) _23e2b5818_Referencer(_169444_st->_field_ident,jule::Any(_169444_st),nullptr)),_23e730c0b_Token(),_169444_st->_field_generics,jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>(),jule::Bool()));
	jule::I64 _170713_n = _169444_st->_field_instances.len();
	{
		auto &expr = _169444_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_5557440576:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Field> _22579574b_f = *it;
			{
				_22579574b_f->_field_owner=_169444_st;
				_22579574b_f->_field_kind->_field_kind=_169717_tc->_method_check_decl(_22579574b_f->_field_kind->_field_decl);
				_169459_ok=(_22579574b_f->_field_kind->_field_kind != nullptr) && _169459_ok;
				{
					auto &expr = _169444_st->_field_fields;
					auto it = expr.begin();
					_iter_begin_5557442048:;
					if (it != expr.end()) {
						jule::Ptr<_225036509_Field> &_22579574b_cf = *it;
						{
							if (_22579574b_f == _22579574b_cf) {
								goto _iter_end_5557442048;
							} else if (_22579574b_f->_field_ident == _22579574b_cf->_field_ident) {
								this->self->_method_push_err(_22579574b_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_22579574b_f->_field_ident)}));
								this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_169459_ok=false;
							}
						}
						_iter_next_5557442048:;
						++it;
						goto _iter_begin_5557442048;
					}
					_iter_end_5557442048:;
				}
			}
			_iter_next_5557440576:;
			++it;
			goto _iter_begin_5557440576;
		}
		_iter_end_5557440576:;
	}
	if (_169459_ok && (_170713_n != _169444_st->_field_instances.len())) {
		_169717_tc->_field_referencer=nullptr;
		_169444_st->_field_instances=_169444_st->_field_instances.slice(0LL,_170713_n);
		{
			auto &expr = _169444_st->_field_fields;
			auto it = expr.begin();
			_iter_begin_5557441200:;
			if (it != expr.end()) {
				jule::Ptr<_225036509_Field> _22579574b_f = *it;
				{
					_22579574b_f->_field_kind->_field_kind=_169717_tc->_method_check_decl(_22579574b_f->_field_kind->_field_decl);
				}
				_iter_next_5557441200:;
				++it;
				goto _iter_begin_5557441200;
			}
			_iter_end_5557441200:;
		}
	}
	return _169459_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_struct_decl_methods(jule::Ptr<_225036509_Struct>& _173650_s) {
	jule::Bool _173664_ok = jule::Bool();
	{
		auto &expr = _173650_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_5557470816:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _22579574b_m = *it;
			{
				if ((!(this->self->_method_check_fn_decl_types(_22579574b_m)))) {
					_173664_ok = false;
					return _173664_ok;
				}
			}
			_iter_next_5557470816:;
			++it;
			goto _iter_begin_5557470816;
		}
		_iter_end_5557470816:;
	}
	_173664_ok = true;
	return _173664_ok;
}



inline void _22579574b_Sema::_method_check_struct_decl(jule::Ptr<_225036509_Struct>& _174542_s) {
	if (_23e730c0b_is_ignore_ident(_174542_s->_field_ident)) {
		this->self->_method_push_err(_174542_s->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_174542_s),_174542_s->_field_ident,_174542_s->_field_cpp_linked)) {
		this->self->_method_push_err(_174542_s->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_174542_s->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_174542_s->_field_directives,jule::Any(_174542_s));
	_174542_s->_field_sema=this->self;
	{
		if ((!(this->self->_method_check_decl_generics(_174542_s->_field_generics)))) {
			_case_begin_5557481888:;
			{
				return;
			}
		}
		else if ((!(this->self->_method_check_struct_fields(_174542_s)))) {
			_case_begin_5557482000:;
			{
				return;
			}
		}
		else if ((!(this->self->_method_check_struct_decl_methods(_174542_s)))) {
			_case_begin_5557482112:;
			{
				return;
			}
		}
		else if ((!(this->self->_method_check_struct_impls(_174542_s)))) {
			_case_begin_5557482224:;
			{
				return;
			}
		}
		_match_end_5557479280:;
	}
}



inline jule::Bool _22579574b_Sema::_method_check_struct_decls(void) {
	jule::Bool _176540_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_5557488816:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> _22579574b_s = *it;
			{
				this->self->_method_check_struct_decl(_22579574b_s);
				if (this->self->_field_errors.len() > 0LL) {
					_176540_ok = false;
					return _176540_ok;
				}
			}
			_iter_next_5557488816:;
			++it;
			goto _iter_begin_5557488816;
		}
		_iter_end_5557488816:;
	}
	_176540_ok = true;
	return _176540_ok;
}



inline void _22579574b_Sema::_method_check_fn_decl(jule::Ptr<_2252d6a73_Fn>& _177838_f) {
	if (_23e730c0b_is_ignore_ident(_177838_f->_field_ident)) {
		this->self->_method_push_err(_177838_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_177838_f),_177838_f->_field_ident,_177838_f->_field_cpp_linked)) {
		this->self->_method_push_err(_177838_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_177838_f->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	this->self->_method_check_directives(_177838_f->_field_directives,jule::Any(_177838_f));
	_177838_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_177838_f);
}



inline jule::Bool _22579574b_Sema::_method_check_fn_decls(void) {
	jule::Bool _179336_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_5557503056:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _22579574b_f = *it;
			{
				this->self->_method_check_fn_decl(_22579574b_f);
				if (this->self->_field_errors.len() > 0LL) {
					_179336_ok = false;
					return _179336_ok;
				}
			}
			_iter_next_5557503056:;
			++it;
			goto _iter_begin_5557503056;
		}
		_iter_end_5557503056:;
	}
	_179336_ok = true;
	return _179336_ok;
}



inline void _22579574b_Sema::_method_push_cycle_error(jule::Ptr<_225036509_Struct>& _180532_st1,jule::Ptr<_225036509_Struct>& _180547_st2,jule::Str& _180566_message) {
	
	jule::Str _180813_refers_to = _23ceb0c1d_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_180532_st1->_field_ident),jule::Any(_180547_st2->_field_ident)}));
	_180566_message=((_22551ab31_str_repeat(jule::Str(" ", 1),4LL) + _180813_refers_to) + jule::Str("\n", 1)) + _180566_message;
}



inline jule::Bool _22579574b_Sema::_method_check_cross_cycle(jule::Ptr<_225036509_Struct>& _181233_st1,jule::Ptr<_225036509_Struct>& _181248_st2,jule::Str& _181267_message) {
	{
		auto &expr = _181248_st2->_field_uses;
		auto it = expr.begin();
		_iter_begin_5557516192:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> &_22579574b_u = *it;
			{
				if (_22579574b_u == _181233_st1) {
					(*this)._method_push_cycle_error(_181248_st2,_22579574b_u,_181267_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_181233_st1,_22579574b_u,_181267_message)))) {
					(*this)._method_push_cycle_error(_181248_st2,_22579574b_u,_181267_message);
					return false;
				}
			}
			_iter_next_5557516192:;
			++it;
			goto _iter_begin_5557516192;
		}
		_iter_end_5557516192:;
	}
	return true;
}



inline jule::Bool _22579574b_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _182853_derive,jule::Ptr<_225036509_Struct>& _182867_st1,jule::Ptr<_23e2b5818_TypeKind>& _182886_k) {
	jule::Bool _1828102_ok = jule::Bool();
	jule::Ptr<_225036509_Struct> _182917_st2 = _23e2b5818_get_struct_from_kind(_182886_k);
	if (_182917_st2 == nullptr) {
		_1828102_ok = true;
		return _1828102_ok;
	}
	if (_182867_st1 == _182917_st2) {
		(*this)._method_push_err(_182867_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_182853_derive),jule::Any(_182867_st1->_field_ident)}));
		_1828102_ok = false;
		return _1828102_ok;
	}
	jule::Str _184117_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_182867_st1,_182917_st2,_184117_message)))) {
		jule::Str _184421_err_msg = _184117_message;
		_184117_message=jule::Str();
		(*this)._method_push_cycle_error(_182867_st1,_182917_st2,_184117_message);
		_184421_err_msg=_184421_err_msg + _184117_message;
		(*this)._method_push_err(_182867_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_182853_derive),jule::Any(_184421_err_msg)}));
		_1828102_ok = false;
		return _1828102_ok;
	}
	_1828102_ok = true;
	return _1828102_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_struct_ins_derive_clone(jule::Ptr<_225036509_StructIns> _185552_st) {
	jule::Bool _185570_ok = jule::Bool();
	if ((!(_185552_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_185570_ok = true;
		return _185570_ok;
	}
	{
		auto &expr = _185552_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_5557537072:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_FieldIns> _22579574b_f = *it;
			{
				if ((_22579574b_f->_field_kind == nullptr) || (!(_22579574b_f->_field_kind->_method_mutable()))) {
					goto _iter_next_5557537072;
				}
				if ((!(_22579574b_f->_field_kind->_method_supports_cloning()))) {
					(*this)._method_push_err(_185552_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_22579574b_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_185570_ok = false;
					return _185570_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_185552_st->_field_decl,_22579574b_f->_field_kind)))) {
					_185570_ok = false;
					return _185570_ok;
				}
			}
			_iter_next_5557537072:;
			++it;
			goto _iter_begin_5557537072;
		}
		_iter_end_5557537072:;
	}
	_185570_ok = true;
	return _185570_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_struct_derive_clone(jule::Ptr<_225036509_Struct>& _187849_st) {
	jule::Bool _187864_ok = jule::Bool();
	_187864_ok = (*this)._method_check_struct_ins_derive_clone(_187849_st->_method_instance());
	return _187864_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_file_derives(void) {
	jule::Bool _188239_ok = jule::Bool();
	{
		auto &expr = (*this)._field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_5557551440:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> _22579574b_st = *it;
			{
				_188239_ok=(*this)._method_check_struct_derive_clone(_22579574b_st);
				if ((!(_188239_ok))) {
					goto _iter_end_5557551440;
				}
			}
			_iter_next_5557551440:;
			++it;
			goto _iter_begin_5557551440;
		}
		_iter_end_5557551440:;
	}
	return _188239_ok;
}



inline void _22579574b_Sema::_method_check_package_derives(void) {
	{
		auto &expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_5557554688:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_f = *it;
			{
				(*this)._method_set_current_file(_22579574b_f);
				jule::Bool _189717_ok = (*this)._method_check_file_derives();
				if ((!(_189717_ok))) {
					return;
				}
			}
			_iter_next_5557554688:;
			++it;
			goto _iter_begin_5557554688;
		}
		_iter_end_5557554688:;
	}
}



inline void _22579574b_Sema::_method_check_package_decls(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5557559408:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_f = *it;
			{
				this->self->_method_set_current_file(_22579574b_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_5557559408:;
			++it;
			goto _iter_begin_5557559408;
		}
		_iter_end_5557559408:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5557562464:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_f = *it;
			{
				this->self->_method_set_current_file(_22579574b_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_5557562464:;
			++it;
			goto _iter_begin_5557562464;
		}
		_iter_end_5557562464:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5557565152:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_f = *it;
			{
				this->self->_method_set_current_file(_22579574b_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_5557565152:;
			++it;
			goto _iter_begin_5557565152;
		}
		_iter_end_5557565152:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5557567792:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_f = *it;
			{
				this->self->_method_set_current_file(_22579574b_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_5557567792:;
			++it;
			goto _iter_begin_5557567792;
		}
		_iter_end_5557567792:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5557570368:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_f = *it;
			{
				this->self->_method_set_current_file(_22579574b_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_5557570368:;
			++it;
			goto _iter_begin_5557570368;
		}
		_iter_end_5557570368:;
	}
	this->self->_method_check_package_derives();
}



inline void _22579574b_Sema::_method_check_data_for_type_inference(jule::Ptr<_225aa4a5a_Data>& _194549_d,_23e730c0b_Token& _194560_err_token) {
	{
		if (_194549_d->_method_is_nil()) {
			_case_begin_5557576320:;
			{
				(*this)._method_push_err(_194560_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_194549_d->_method_is_void()) {
			_case_begin_5557576432:;
			{
				(*this)._method_push_err(_194560_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_194549_d->_field_kind->_field_variadic) {
			_case_begin_5557576544:;
			{
				(*this)._method_push_err(_194560_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_5557576112:;
	}
}



inline void _22579574b_Sema::_method_check_var(jule::Ptr<_2258258db_Var>& _195834_v) {
	if (_195834_v->_field_cpp_linked) {
		return;
	}
	if (_195834_v->_method_is_type_inferred()) {
		_195834_v->_field_kind=jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),_195834_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_195834_v->_field_value->_field_data,_195834_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ptr<_23e2b5818_Arr> _197021_arr = _195834_v->_field_kind->_field_kind->_method_arr();
		if (_197021_arr != nullptr) {
			if (_197021_arr->_field_auto) {
				jule::Ptr<_23e2b5818_Arr> _197325_data_arr = _195834_v->_field_value->_field_data->_field_kind->_method_arr();
				if (_197325_data_arr != nullptr) {
					_197021_arr->_field_n=_197325_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_195834_v->_field_reference,_195834_v->_field_kind->_field_kind,_195834_v->_field_value->_field_data,_195834_v->_field_value->_field_expr->_field_token);
	}
	if (_195834_v->_field_reference && (!(_23e2b5818_is_valid_for_ref(_195834_v->_field_kind->_field_kind)))) {
		this->self->_method_push_err(_195834_v->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_195834_v->_field_kind->_field_kind->_method_to_str())}));
	}
	this->self->_method_check_validity_for_init_expr(_195834_v->_field_mutable,_195834_v->_field_reference,_195834_v->_field_kind->_field_kind,_195834_v->_field_value->_field_data,_195834_v->_field_value->_field_expr->_field_token);
	if (_195834_v->_field_constant) {
		if ((!(_195834_v->_field_value->_field_data->_method_is_const()))) {
			this->self->_method_push_err(_195834_v->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		}
	} else {
		_195834_v->_field_value->_field_data->_field_constant=nullptr;
	}
	if (_195834_v->_field_kind->_field_kind->_method_tup() != nullptr) {
		_195834_v->_field_kind->_field_kind=nullptr;
	}
}



inline void _22579574b_Sema::_method_check_type_var(jule::Ptr<_2258258db_Var>& _200839_decl,jule::Trait<_225e7723a_Lookup> _200855_l) {
	if (_200839_decl->_field_cpp_linked || (!(_200839_decl->_method_is_initialized()))) {
		return;
	}
	jule::Ptr<_225aa4a5a_Eval> _201317_eval = (((_200839_decl->_field_kind != nullptr)) ? (this->self->_method_evalpd(_200855_l,_200839_decl->_field_kind->_field_kind,_200839_decl)) : (this->self->_method_evalpd(_200855_l,nullptr,_200839_decl)));
	_201317_eval->_field_immutable=(!(_200839_decl->_field_mutable));
	_200839_decl->_field_value->_field_data=_201317_eval->_method_eval_expr(_200839_decl->_field_value->_field_expr);
	if (_200839_decl->_field_value->_field_data == nullptr) {
		return;
	}
	this->self->_method_check_var(_200839_decl);
}



inline void _22579574b_Sema::_method_check_global_types(void) {
	{
		auto &expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_5557612000:;
		if (it != expr.end()) {
			jule::Ptr<_2258258db_Var> _22579574b_decl = *it;
			{
				if ((_22579574b_decl->_method_is_initialized() && (_22579574b_decl->_field_value->_field_data == nullptr)) || (_22579574b_decl->_method_is_type_inferred() && (_22579574b_decl->_field_kind->_field_kind == nullptr))) {
					this->self->_method_check_type_var(_22579574b_decl,this->self);
				}
			}
			_iter_next_5557612000:;
			++it;
			goto _iter_begin_5557612000;
		}
		_iter_end_5557612000:;
	}
}



inline void _22579574b_Sema::_method_check_type_method(jule::Ptr<_225036509_StructIns>& _203742_strct,jule::Ptr<_2252d6a73_Fn>& _203766_f) {
	if (_203766_f->_field_cpp_linked) {
		return;
	}
	if (_203766_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_203766_f->_field_instances.len() == 0LL) {
		jule::Ptr<_2252d6a73_FnIns> _204821_ins = _203766_f->_method_instance();
		_204821_ins->_field_owner=_203742_strct;
		_203766_f->_method_append_instance(_204821_ins);
		this->self->_method_reload_fn_ins_types(_204821_ins);
		_204821_ins->_field_reloaded=true;
	}
	{
		auto &expr = _203766_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_5557623808:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_FnIns> _22579574b_ins = *it;
			{
				if (_22579574b_ins->_field_scope->_field_stmts.len() > 0LL) {
					goto _iter_next_5557623808;
				}
				this->self->_method_check_fn_ins(_22579574b_ins);
			}
			_iter_next_5557623808:;
			++it;
			goto _iter_begin_5557623808;
		}
		_iter_end_5557623808:;
	}
}



inline void _22579574b_Sema::_method_check_type_struct(jule::Ptr<_225036509_Struct>& _206442_strct) {
	if (_206442_strct->_field_cpp_linked) {
		return;
	}
	if (_206442_strct->_field_generics.len() > 0LL) {
		return;
	}
	if (_206442_strct->_field_instances.len() == 0LL) {
		jule::Ptr<_225036509_StructIns> _207521_ins = _206442_strct->_method_instance();
		_207521_ins->_field_checked=true;
		_206442_strct->_method_append_instance(_207521_ins);
	}
	{
		auto &expr = _206442_strct->_field_instances;
		auto it = expr.begin();
		_iter_begin_5557633744:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_StructIns> _22579574b_ins = *it;
			{
				{
					auto &expr = _22579574b_ins->_field_methods;
					auto it = expr.begin();
					_iter_begin_5557634752:;
					if (it != expr.end()) {
						jule::Ptr<_2252d6a73_Fn> _22579574b_f = *it;
						{
							this->self->_method_check_type_method(_22579574b_ins,_22579574b_f);
						}
						_iter_next_5557634752:;
						++it;
						goto _iter_begin_5557634752;
					}
					_iter_end_5557634752:;
				}
			}
			_iter_next_5557633744:;
			++it;
			goto _iter_begin_5557633744;
		}
		_iter_end_5557633744:;
	}
}



inline void _22579574b_Sema::_method_check_struct_types(void) {
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_5557637568:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> _22579574b_s = *it;
			{
				this->self->_method_check_type_struct(_22579574b_s);
			}
			_iter_next_5557637568:;
			++it;
			goto _iter_begin_5557637568;
		}
		_iter_end_5557637568:;
	}
}



inline void _22579574b_Sema::_method_check_rets(jule::Ptr<_2252d6a73_FnIns>& _209334_f) {
	if (_209334_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _209813_ok = _22579574b_has_ret(_209334_f->_field_scope);
	if ((!(_209813_ok))) {
		(*this)._method_push_err(_209334_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	}
}



inline void _22579574b_Sema::_method_check_fn_ins_sc(jule::Ptr<_2252d6a73_FnIns>& _210439_f,jule::Ptr<_2255ba3ea_ScopeChecker>& _210455_sc) {
	if (_210439_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ptr<_2258258db_Var>> _210917_vars = _22579574b_build_ret_vars(_210439_f);
	_210455_sc->_field_table->_field_vars=jule::append(_210455_sc->_field_table->_field_vars,_210917_vars);
	_210455_sc->_field_table->_field_vars=jule::append(_210455_sc->_field_table->_field_vars,_22579574b_build_param_vars(_210439_f));
	_210455_sc->_field_table->_field_type_aliases=jule::append(_210455_sc->_field_table->_field_type_aliases,_22579574b_build_generic_type_aliases(_210439_f));
	_210455_sc->_method_check(_210439_f->_field_decl->_field_scope,_210439_f->_field_scope);
	if (_210917_vars.len() > 0LL) {
		jule::Slice<jule::Any> _211921_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_210439_f->_field_scope->_field_stmts.len() + _210917_vars.len()));
		{
			auto &expr = _210917_vars;
			auto it = expr.begin();
			_iter_begin_5557656672:;
			if (it != expr.end()) {
				jule::Ptr<_2258258db_Var> _22579574b_v = *it;
				{
					_211921_stmts.push(jule::Any(_22579574b_v));
				}
				_iter_next_5557656672:;
				++it;
				goto _iter_begin_5557656672;
			}
			_iter_end_5557656672:;
		}
		_211921_stmts=jule::append(_211921_stmts,_210439_f->_field_scope->_field_stmts);
		_210439_f->_field_scope->_field_stmts=_211921_stmts;
	}
	(*this)._method_check_rets(_210439_f);
}



inline void _22579574b_Sema::_method_check_fn_ins(jule::Ptr<_2252d6a73_FnIns>& _213137_f) {
	if (_213137_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ptr<_225a097a1_SymbolTable> _213617_old = _213137_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_213137_f->_field_decl->_field_sema->_method_set_current_file(_213617_old);
	});
	jule::Ptr<_225a097a1_SymbolTable> _213817_file = _22579574b_find_file(_213137_f->_field_decl->_field_sema->_field_files,_213137_f->_field_decl->_field_token._field_file);
	if (_213817_file != nullptr) {
		_213137_f->_field_decl->_field_sema->_method_set_current_file(_213817_file);
	}
	jule::Ptr<_2255ba3ea_ScopeChecker> _214317_sc = _2255ba3ea_new_scope_checker(_213137_f->_field_decl->_field_sema,_213137_f);
	this->self->_method_check_fn_ins_sc(_213137_f,_214317_sc);
	if (_213137_f->_field_decl->_field_sema != this->self) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_213137_f->_field_decl->_field_sema->_field_errors);
		_213137_f->_field_decl->_field_sema->_field_errors=nullptr;
	}
}



inline void _22579574b_Sema::_method_check_type_fn(jule::Ptr<_2252d6a73_Fn>& _215238_f) {
	if (_215238_f->_field_cpp_linked) {
		return;
	}
	if (_215238_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto &expr = _215238_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_5557672048:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_FnIns> _22579574b_ins = *it;
			{
				this->self->_method_check_fn_ins(_22579574b_ins);
			}
			_iter_next_5557672048:;
			++it;
			goto _iter_begin_5557672048;
		}
		_iter_end_5557672048:;
	}
}



inline void _22579574b_Sema::_method_precheck_type_fn(jule::Ptr<_2252d6a73_Fn>& _216741_f) {
	if (_216741_f->_field_cpp_linked) {
		return;
	}
	if (_216741_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_216741_f->_field_instances.len() == 0LL) {
		jule::Ptr<_2252d6a73_FnIns> _217821_ins = _216741_f->_method_instance();
		_216741_f->_field_instances = jule::alloc_for_append(_216741_f->_field_instances,1);_216741_f->_field_instances.push(_217821_ins);
		this->self->_method_reload_fn_ins_types(_217821_ins);
		_217821_ins->_field_reloaded=true;
	}
}



inline jule::Bool _22579574b_Sema::_method_precheck_fn_types(void) {
	jule::Bool _218639_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_5557684064:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _22579574b_decl = *it;
			{
				this->self->_method_precheck_type_fn(_22579574b_decl);
			}
			_iter_next_5557684064:;
			++it;
			goto _iter_begin_5557684064;
		}
		_iter_end_5557684064:;
	}
	_218639_ok = true;
	return _218639_ok;
}



inline jule::Bool _22579574b_Sema::_method_check_fn_types(void) {
	jule::Bool _219436_ok = jule::Bool();
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_5557688192:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _22579574b_decl = *it;
			{
				this->self->_method_check_type_fn(_22579574b_decl);
			}
			_iter_next_5557688192:;
			++it;
			goto _iter_begin_5557688192;
		}
		_iter_end_5557688192:;
	}
	_219436_ok = true;
	return _219436_ok;
}



inline void _22579574b_Sema::_method_check_package_types(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5557691328:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_f = *it;
			{
				this->self->_method_set_current_file(_22579574b_f);
				this->self->_method_check_global_types();
			}
			_iter_next_5557691328:;
			++it;
			goto _iter_begin_5557691328;
		}
		_iter_end_5557691328:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5557691904:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_f = *it;
			{
				this->self->_method_set_current_file(_22579574b_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_5557691904:;
			++it;
			goto _iter_begin_5557691904;
		}
		_iter_end_5557691904:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5557694496:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_f = *it;
			{
				this->self->_method_set_current_file(_22579574b_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_5557694496:;
			++it;
			goto _iter_begin_5557694496;
		}
		_iter_end_5557694496:;
	}
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5557696608:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_f = *it;
			{
				this->self->_method_set_current_file(_22579574b_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_5557696608:;
			++it;
			goto _iter_begin_5557696608;
		}
		_iter_end_5557696608:;
	}
}



inline void _22579574b_Sema::_method_set_file_sema_fields(void) {
	{
		auto &expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_5557702032:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _22579574b_f = *it;
			{
				_22579574b_f->_field_sema=this->self;
			}
			_iter_next_5557702032:;
			++it;
			goto _iter_begin_5557702032;
		}
		_iter_end_5557702032:;
	}
	{
		auto &expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_5557703184:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> _22579574b_st = *it;
			{
				_22579574b_st->_field_sema=this->self;
			}
			_iter_next_5557703184:;
			++it;
			goto _iter_begin_5557703184;
		}
		_iter_end_5557703184:;
	}
}



inline void _22579574b_Sema::_method_set_sema_fields(void) {
	{
		auto &expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_5557705680:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_file = *it;
			{
				this->self->_method_set_current_file(_22579574b_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_5557705680:;
			++it;
			goto _iter_begin_5557705680;
		}
		_iter_end_5557705680:;
	}
}



inline void _22579574b_Sema::_method_check(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>& _224230_files) {
	this->self->_field_files=_224230_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _22579574b_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2258258db_IterRelation &_Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2258258db_Var> _22582290a_RangeChecker::_method_build_var(jule::Ptr<_23e45734a_VarDecl>& _88929_decl) {
	jule::Ptr<_2258258db_Var> _89017_v = _22551ab31_build_var(_88929_decl);
	return _89017_v;
}



inline void _22582290a_RangeChecker::_method_set_size_key(void) {
	if (((*this)._field_rang->_field_key_a == nullptr) || _23e730c0b_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3))))));
	{
		auto &_match_expr{ (*this)._field_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
			_case_begin_5558104864:;
			{
				(*this)._field_kind->_field_key_a->_field_iter_relation=jule::new_struct<_2258258db_IterRelation>(new( std::nothrow ) _2258258db_IterRelation((*this)._field_d->_field_model.operator jule::Ptr<_2258258db_Var>()));
			}
		}
		_match_end_5558107632:;
	}
}



inline void _22582290a_RangeChecker::_method_check_range_expr_validity(jule::Ptr<_225aa4a5a_Data>& _92049_d,jule::Ptr<_2258258db_Var>& _92060_key,jule::Ptr<_23e2b5818_TypeKind>& _92076_k) {
	jule::Bool _92117__mut = _92060_key->_field_mutable;
	if (_92117__mut && (!(_92076_k->_method_mutable()))) {
		_92117__mut=false;
	}
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr(_92117__mut,_92060_key->_field_reference,_92060_key->_field_kind->_field_kind,_92049_d,(*this)._field_rang->_field_in_token);
}



inline void _22582290a_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _23e730c0b_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_23e2b5818_Slc> _93917_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),_93917_slc->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_93917_slc->_field_elem);
}



inline void _22582290a_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _23e730c0b_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_23e2b5818_Arr> _95217_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),_95217_arr->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_95217_arr->_field_elem);
}



inline void _22582290a_RangeChecker::_method_check_map_key_a(void) {
	if (((*this)._field_rang->_field_key_a == nullptr) || _23e730c0b_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ptr<_23e2b5818_Map> _96417_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),_96417_m->_field_key));
	jule::Ptr<_225aa4a5a_Data> _96817_d = jule::new_ptr<_225aa4a5a_Data>((*((*this)._field_d)));
	_96817_d->_field_kind=_96417_m->_field_key;
	(*this)._method_check_range_expr_validity(_96817_d,(*this)._field_kind->_field_key_a,_96417_m->_field_key);
}



inline void _22582290a_RangeChecker::_method_check_map_key_b(void) {
	if (((*this)._field_rang->_field_key_b == nullptr) || _23e730c0b_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_23e2b5818_Map> _97917_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),_97917_m->_field_val));
	jule::Ptr<_225aa4a5a_Data> _98317_d = jule::new_ptr<_225aa4a5a_Data>((*((*this)._field_d)));
	_98317_d->_field_kind=_97917_m->_field_val;
	(*this)._method_check_range_expr_validity(_98317_d,(*this)._field_kind->_field_key_b,_97917_m->_field_val);
}



inline void _22582290a_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _22582290a_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _23e730c0b_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _22582290a_RangeChecker::_method_check(void) {
	{
		if ((*this)._field_d->_field_kind->_field_variadic) {
			_case_begin_5558161888:;
		}
		else if ((*this)._field_d->_field_kind->_method_slc() != nullptr) {
			_case_begin_5558161584:;
			{
				(*this)._method_check_slice();
				return true;
			}
		}
		else if ((*this)._field_d->_field_kind->_method_arr() != nullptr) {
			_case_begin_5558161680:;
			{
				(*this)._method_check_array();
				return true;
			}
		}
		else if ((*this)._field_d->_field_kind->_method_map() != nullptr) {
			_case_begin_5558163040:;
			{
				(*this)._method_check_map();
				return true;
			}
		}
		else {
			_case_begin_5558158976:;
			{
				jule::Ptr<_23e2b5818_Prim> _102617_prim = (*this)._field_d->_field_kind->_method_prim();
				if ((_102617_prim != nullptr) && _102617_prim->_method_is_str()) {
					(*this)._method_check_str();
					return true;
				}
			}
		}
		_match_end_5558158896:;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _22582290a_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_225615962_ImportInfo> _225a097a1_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	{
		auto &expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_5558225616:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _225a097a1_pkg = *it;
			{
				if (_225a097a1_pkg->_field_ident == _2535_ident) {
					return _225a097a1_pkg;
				}
			}
			_iter_next_5558225616:;
			++it;
			goto _iter_begin_5558225616;
		}
		_iter_end_5558225616:;
	}
	return nullptr;
}



inline jule::Ptr<_225615962_ImportInfo> _225a097a1_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return nullptr;
	}
	{
		auto &expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_5558229408:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _225a097a1_pkg = *it;
			{
				if (_3737_selector(_225a097a1_pkg)) {
					return _225a097a1_pkg;
				}
			}
			_iter_next_5558229408:;
			++it;
			goto _iter_begin_5558229408;
		}
		_iter_end_5558229408:;
	}
	return nullptr;
}



inline jule::Ptr<_2258258db_Var> _225a097a1_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_23e2b5818_TypeAlias> _225a097a1_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_225036509_Struct> _225a097a1_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_5558237680:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> _225a097a1_s = *it;
			{
				if ((_225a097a1_s->_field_ident == _6434_ident) && (_225a097a1_s->_field_cpp_linked == _6446_cpp_linked)) {
					return _225a097a1_s;
				}
			}
			_iter_next_5558237680:;
			++it;
			goto _iter_begin_5558237680;
		}
		_iter_end_5558237680:;
	}
	return nullptr;
}



inline jule::Ptr<_2252d6a73_Fn> _225a097a1_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_5558241440:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _225a097a1_f = *it;
			{
				if ((_225a097a1_f->_field_ident == _7530_ident) && (_225a097a1_f->_field_cpp_linked == _7542_cpp_linked)) {
					return _225a097a1_f;
				}
			}
			_iter_next_5558241440:;
			++it;
			goto _iter_begin_5558241440;
		}
		_iter_end_5558241440:;
	}
	return nullptr;
}



inline jule::Ptr<_2255ab70a_Trait> _225a097a1_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_5558243376:;
		if (it != expr.end()) {
			jule::Ptr<_2255ab70a_Trait> _225a097a1_t = *it;
			{
				if (_225a097a1_t->_field_ident == _8633_ident) {
					return _225a097a1_t;
				}
			}
			_iter_next_5558243376:;
			++it;
			goto _iter_begin_5558243376;
		}
		_iter_end_5558243376:;
	}
	return nullptr;
}



inline jule::Ptr<_2255aae79_Enum> _225a097a1_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_5558246144:;
		if (it != expr.end()) {
			jule::Ptr<_2255aae79_Enum> _225a097a1_e = *it;
			{
				if (_225a097a1_e->_field_ident == _9732_ident) {
					return _225a097a1_e;
				}
			}
			_iter_next_5558246144:;
			++it;
			goto _iter_begin_5558246144;
		}
		_iter_end_5558246144:;
	}
	return nullptr;
}



inline jule::Ptr<_2258258db_Var> _225a097a1_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = (*this)._field_vars.len() - 1LL;
		for (; _11021_i >= 0LL; (_11021_i)--) {
			{
				jule::Ptr<_2258258db_Var> _11225_v = (*this)._field_vars[_11021_i];
				if ((_11225_v->_field_ident == _10829_ident) && (_11225_v->_field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_5558252576:;
		}
		_iter_end_5558252576:;
	} else {
		{
			auto &expr = (*this)._field_vars;
			auto it = expr.begin();
			_iter_begin_5558255632:;
			if (it != expr.end()) {
				jule::Ptr<_2258258db_Var> _225a097a1_v = *it;
				{
					if ((_225a097a1_v->_field_ident == _10829_ident) && (_225a097a1_v->_field_cpp_linked == _10841_cpp_linked)) {
						return _225a097a1_v;
					}
				}
				_iter_next_5558255632:;
				++it;
				goto _iter_begin_5558255632;
			}
			_iter_end_5558255632:;
		}
	}
	return nullptr;
}



inline jule::Ptr<_23e2b5818_TypeAlias> _225a097a1_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = (*this)._field_type_aliases.len() - 1LL;
		for (; _12921_i >= 0LL; (_12921_i)--) {
			{
				jule::Ptr<_23e2b5818_TypeAlias> _13125_ta = (*this)._field_type_aliases[_12921_i];
				if ((_13125_ta->_field_ident == _12736_ident) && (_13125_ta->_field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_5558261168:;
		}
		_iter_end_5558261168:;
	} else {
		{
			auto &expr = (*this)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_5558264224:;
			if (it != expr.end()) {
				jule::Ptr<_23e2b5818_TypeAlias> _225a097a1_ta = *it;
				{
					if ((_225a097a1_ta->_field_ident == _12736_ident) && (_225a097a1_ta->_field_cpp_linked == _12748_cpp_linked)) {
						return _225a097a1_ta;
					}
				}
				_iter_next_5558264224:;
				++it;
				goto _iter_begin_5558264224;
			}
			_iter_end_5558264224:;
		}
	}
	return nullptr;
}



inline jule::Any _225a097a1_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_5558262544:;
		if (it != expr.end()) {
			jule::Ptr<_2258258db_Var> _225a097a1_v = *it;
			{
				if ((_225a097a1_v->_field_ident == _14831_ident) && (_225a097a1_v->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_225a097a1_v);
				}
			}
			_iter_next_5558262544:;
			++it;
			goto _iter_begin_5558262544;
		}
		_iter_end_5558262544:;
	}
	{
		auto &expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_5558270624:;
		if (it != expr.end()) {
			jule::Ptr<_23e2b5818_TypeAlias> _225a097a1_ta = *it;
			{
				if ((_225a097a1_ta->_field_ident == _14831_ident) && (_225a097a1_ta->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_225a097a1_ta);
				}
			}
			_iter_next_5558270624:;
			++it;
			goto _iter_begin_5558270624;
		}
		_iter_end_5558270624:;
	}
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_5558272656:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> _225a097a1_s = *it;
			{
				if ((_225a097a1_s->_field_ident == _14831_ident) && (_225a097a1_s->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_225a097a1_s);
				}
			}
			_iter_next_5558272656:;
			++it;
			goto _iter_begin_5558272656;
		}
		_iter_end_5558272656:;
	}
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_5558274752:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _225a097a1_f = *it;
			{
				if ((_225a097a1_f->_field_ident == _14831_ident) && (_225a097a1_f->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_225a097a1_f);
				}
			}
			_iter_next_5558274752:;
			++it;
			goto _iter_begin_5558274752;
		}
		_iter_end_5558274752:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_5558276080:;
		if (it != expr.end()) {
			jule::Ptr<_2255ab70a_Trait> _225a097a1_t = *it;
			{
				if (_225a097a1_t->_field_ident == _14831_ident) {
					return jule::Any(_225a097a1_t);
				}
			}
			_iter_next_5558276080:;
			++it;
			goto _iter_begin_5558276080;
		}
		_iter_end_5558276080:;
	}
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_5558279824:;
		if (it != expr.end()) {
			jule::Ptr<_2255aae79_Enum> _225a097a1_e = *it;
			{
				if (_225a097a1_e->_field_ident == _14831_ident) {
					return jule::Any(_225a097a1_e);
				}
			}
			_iter_next_5558279824:;
			++it;
			goto _iter_begin_5558279824;
		}
		_iter_end_5558279824:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _225a097a1_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_5558283200:;
		if (it != expr.end()) {
			jule::Ptr<_2258258db_Var> &_225a097a1_v = *it;
			{
				if (((static_cast<jule::Uintptr>(_225a097a1_v) != _19534_itself) && (_225a097a1_v->_field_ident == _19551_ident)) && (_225a097a1_v->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_5558283200:;
			++it;
			goto _iter_begin_5558283200;
		}
		_iter_end_5558283200:;
	}
	{
		auto &expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_5558286112:;
		if (it != expr.end()) {
			jule::Ptr<_23e2b5818_TypeAlias> &_225a097a1_ta = *it;
			{
				if (((static_cast<jule::Uintptr>(_225a097a1_ta) != _19534_itself) && (_225a097a1_ta->_field_ident == _19551_ident)) && (_225a097a1_ta->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_5558286112:;
			++it;
			goto _iter_begin_5558286112;
		}
		_iter_end_5558286112:;
	}
	{
		auto &expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_5558285744:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> &_225a097a1_s = *it;
			{
				if (((static_cast<jule::Uintptr>(_225a097a1_s) != _19534_itself) && (_225a097a1_s->_field_ident == _19551_ident)) && (_225a097a1_s->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_5558285744:;
			++it;
			goto _iter_begin_5558285744;
		}
		_iter_end_5558285744:;
	}
	{
		auto &expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_5558283456:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> &_225a097a1_f = *it;
			{
				if (((static_cast<jule::Uintptr>(_225a097a1_f) != _19534_itself) && (_225a097a1_f->_field_ident == _19551_ident)) && (_225a097a1_f->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_5558283456:;
			++it;
			goto _iter_begin_5558283456;
		}
		_iter_end_5558283456:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto &expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_5558294464:;
		if (it != expr.end()) {
			jule::Ptr<_2255ab70a_Trait> &_225a097a1_t = *it;
			{
				if ((static_cast<jule::Uintptr>(_225a097a1_t) != _19534_itself) && (_225a097a1_t->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_5558294464:;
			++it;
			goto _iter_begin_5558294464;
		}
		_iter_end_5558294464:;
	}
	{
		auto &expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_5558295600:;
		if (it != expr.end()) {
			jule::Ptr<_2255aae79_Enum> &_225a097a1_e = *it;
			{
				if ((static_cast<jule::Uintptr>(_225a097a1_e) != _19534_itself) && (_225a097a1_e->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_5558295600:;
			++it;
			goto _iter_begin_5558295600;
		}
		_iter_end_5558295600:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _225a097a1_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _225aa4a5a_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _225aa4a5a_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_void();
}



inline jule::Bool _225aa4a5a_Data::_method_is_const(void) {
	return (*this)._field_constant != nullptr;
}



inline jule::Bool _225aa4a5a_Data::_method_good_operand(jule::Ptr<_225aa4a5a_Data>& _27236_other) {
	return (((_27236_other->_field_kind->_method_prim() == nullptr) || (!(_27236_other->_field_kind->_method_prim()->_method_is_any()))) && (_27236_other->_field_kind->_method_trt() == nullptr)) && (!((*this)._field_kind->_method_is_nil()));
}







std::ostream &operator<<(std::ostream &_Stream, const _225aa4a5a_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _225aa4a5a_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _225aa4a5a_Eval::_method_push_err(_23e730c0b_Token _29727_token,jule::Str _29741_fmt,jule::Slice<jule::Any> _29754_args) {
	(*this)._field_s->_method_push_err(_29727_token,_29741_fmt,_29754_args);
}



inline void _225aa4a5a_Eval::_method_push_suggestion(jule::Str _30234_fmt,jule::Slice<jule::Any> _30247_args) {
	(*this)._field_s->_method_push_suggestion(_30234_fmt,_30247_args);
}



inline jule::Bool _225aa4a5a_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _225aa4a5a_Eval::_method_is_global(void) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_22579574b_Sema>>()) {
			_case_begin_5558317200:;
			{
				return true;
			}
		}
		else {
			_case_begin_5558315312:;
			{
				return false;
			}
		}
		_match_end_5558315504:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_lit_nil(void) {
	jule::Ptr<_226100d86_Const> _32117_constant = _226100d86_Const::_static_method_new_nil();
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_32117_constant),false,_32117_constant));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_lit_str(jule::Ptr<_23e45734a_LitExpr>& _33223_l) {
	jule::Str _33317_s = _33223_l->_field_value.slice(1LL,_33223_l->_field_value.len() - 1LL);
	if (_23e730c0b_is_raw_str(_33223_l->_field_value)) {
		_33317_s=_22625b3ed_to_raw_str(static_cast<jule::Slice<jule::U8>>(_33317_s));
	} else {
		_33317_s=_22625b3ed_to_str(static_cast<jule::Slice<jule::U8>>(_33317_s));
	}
	jule::Ptr<_226100d86_Const> _33917_constant = _226100d86_Const::_static_method_new_str(_33317_s);
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_33917_constant),false,_33917_constant));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_lit_bool(jule::Ptr<_23e45734a_LitExpr>& _35324_l) {
	jule::Ptr<_226100d86_Const> _35417_constant = _226100d86_Const::_static_method_new_bool(_35324_l->_field_value == jule::Str("true", 4));
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_35417_constant),false,_35417_constant));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_lit_rune(jule::Ptr<_23e45734a_LitExpr>& _36724_l) {
	
	
	jule::Str _37113_lt = _36724_l->_field_value.slice(1LL,_36724_l->_field_value.len() - 1LL);
	jule::I32 _37213_r = _22625b3ed_to_rune(static_cast<jule::Slice<jule::U8>>(_37113_lt));
	jule::Ptr<_225aa4a5a_Data> _37317_data = jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::Ptr<_23e2b5818_TypeKind>(),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,_226100d86_Const::_static_method_new_i64(static_cast<jule::I64>(_37213_r))));
	jule::Bool _38013_is_ascii = _22625b3ed_is_ascii(_37213_r);
	if (_38013_is_ascii) {
		_37317_data->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("u8", 2))));
	} else {
		_37317_data->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i32", 3))));
	}
	_37317_data->_field_model=jule::Any(jule::new_struct<_2255b85b3_RuneExprModel>(new( std::nothrow ) _2255b85b3_RuneExprModel(_37213_r)));
	_37317_data->_field_is_rune=true;
	return _37317_data;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_lit_float(jule::Ptr<_23e45734a_LitExpr>& _39625_l) {
	
	jule::F64 _39914_f;
	std::tie(_39914_f,std::ignore) = _23d225b97_parse_float(_39625_l->_field_value,64LL);
	jule::Ptr<_226100d86_Const> _40017_constant = _226100d86_Const::_static_method_new_f64(_39914_f);
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_40017_constant),false,_40017_constant));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_lit_int(jule::Ptr<_23e45734a_LitExpr>& _41427_l) {
	
	jule::Str _41717_lit = _41427_l->_field_value;
	jule::Int _41817_base = 0LL;
	{
		if (_41717_lit.has_prefix(jule::Str("0x", 2))) {
			_case_begin_5558359264:;
			{
				_41717_lit=_41717_lit.slice(2LL);
				_41817_base=16LL;
			}
		}
		else if (_41717_lit.has_prefix(jule::Str("0b", 2))) {
			_case_begin_5558359600:;
			{
				_41717_lit=_41717_lit.slice(2LL);
				_41817_base=2LL;
			}
		}
		else if (_41717_lit.has_prefix(jule::Str("0o", 2))) {
			_case_begin_5558358768:;
			{
				_41717_lit=_41717_lit.slice(2LL);
				_41817_base=8LL;
			}
		}
		else if ((_41717_lit[0LL] == '0') && (_41717_lit.len() > 1LL)) {
			_case_begin_5558358864:;
			{
				_41717_lit=_41717_lit.slice(1LL);
				_41817_base=8LL;
			}
		}
		else {
			_case_begin_5558358464:;
			{
				_41817_base=10LL;
			}
		}
		_match_end_5558358368:;
	}
	jule::Ptr<_225aa4a5a_Data> _44117_d = jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::Ptr<_23e2b5818_TypeKind>(),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_226100d86_Const>()));
	jule::Any _44717_value = jule::Any(nullptr);
	jule::I64 _44814_sig;
	jule::Int _44819_err;
	std::tie(_44814_sig,_44819_err) = _23d01eb8e_parse_int(_41717_lit,_41817_base,64LL);
	if (_44819_err == 0LLU) {
		_44717_value=jule::Any(_44814_sig);
		_44117_d->_field_constant=_226100d86_Const::_static_method_new_i64(_44814_sig);
	} else {
		jule::U64 _45318_unsig;
		jule::Int _45325_err;
		std::tie(_45318_unsig,_45325_err) = _23d01eb8e_parse_uint(_41717_lit,_41817_base,64LL);
		if (_45325_err != 0LLU) {
			(*this)._method_push_err(_41427_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>());
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
		}
		_44117_d->_field_constant=_226100d86_Const::_static_method_new_u64(_45318_unsig);
		_44717_value=jule::Any(_45318_unsig);
	}
	_44117_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(_225aa4a5a_kind_by_bitsize(_44717_value))));
	_225aa4a5a_normalize_bitsize(_44117_d);
	_44117_d->_field_model=jule::Any(_44117_d->_field_constant);
	return _44117_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_lit_num(jule::Ptr<_23e45734a_LitExpr>& _47227_l) {
	{
		if (_23e730c0b_is_float(_47227_l->_field_value)) {
			_case_begin_5558385584:;
			{
				return (*this)._method_lit_float(_47227_l);
			}
		}
		else {
			_case_begin_5558383600:;
			{
				return (*this)._method_lit_int(_47227_l);
			}
		}
		_match_end_5558383424:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_lit(jule::Ptr<_23e45734a_LitExpr> _47927_lit) {
	{
		if (_47927_lit->_method_is_nil()) {
			_case_begin_5558390368:;
			{
				return (*this)._method_lit_nil();
			}
		}
		else if (_23e730c0b_is_str(_47927_lit->_field_value)) {
			_case_begin_5558390464:;
			{
				return (*this)._method_lit_str(_47927_lit);
			}
		}
		else if (_23e730c0b_is_bool(_47927_lit->_field_value)) {
			_case_begin_5558389808:;
			{
				return (*this)._method_lit_bool(_47927_lit);
			}
		}
		else if (_23e730c0b_is_rune(_47927_lit->_field_value)) {
			_case_begin_5558389904:;
			{
				return (*this)._method_lit_rune(_47927_lit);
			}
		}
		else if (_23e730c0b_is_num(_47927_lit->_field_value)) {
			_case_begin_5558390000:;
			{
				return (*this)._method_lit_num(_47927_lit);
			}
		}
		else {
			_case_begin_5558388800:;
			{
				return nullptr;
			}
		}
		_match_end_5558388624:;
	}
}



inline jule::Any _225aa4a5a_Eval::_method_find_builtins(jule::Str _49032_ident) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_225615962_ImportInfo>>()) {
			_case_begin_5558398544:;
			{
				jule::Any _49321_def = _225aa4a5a_find_builtins_import(_49032_ident,(*this)._field_lookup.operator jule::Ptr<_225615962_ImportInfo>());
				if (_49321_def != nullptr) {
					return _49321_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_22579574b_Sema>>()) {
			_case_begin_5558399056:;
			{
				jule::Any _49921_def = _225aa4a5a_find_builtins_sema(_49032_ident,(*this)._field_lookup.operator jule::Ptr<_22579574b_Sema>());
				if (_49921_def != nullptr) {
					return _49921_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ScopeChecker>>()) {
			_case_begin_5558399152:;
			{
				jule::Any _50521_def = _225aa4a5a_find_builtins_sema(_49032_ident,(*this)._field_lookup.operator jule::Ptr<_2255ba3ea_ScopeChecker>()->_field_s);
				if (_50521_def != nullptr) {
					return _50521_def;
				}
			}
		}
		_match_end_5558398640:;
	}
	return _22602dc1a_find_builtin_def(_49032_ident);
}



inline jule::Any _225aa4a5a_Eval::_method_get_def(jule::Str _51426_ident,jule::Bool _51438_cpp_linked) {
	if ((!(_51438_cpp_linked))) {
		jule::Ptr<_2255aae79_Enum> _51621_enm = (*this)._field_lookup.get()._method_find_enum(_51426_ident);
		if (_51621_enm != nullptr) {
			return jule::Any(_51621_enm);
		}
	}
	jule::Ptr<_2258258db_Var> _52217_v = (*this)._field_lookup.get()._method_find_var(_51426_ident,_51438_cpp_linked);
	if (_52217_v != nullptr) {
		return jule::Any(_52217_v);
	}
	jule::Ptr<_2252d6a73_Fn> _52717_f = (*this)._field_lookup.get()._method_find_fn(_51426_ident,_51438_cpp_linked);
	if (_52717_f != nullptr) {
		return jule::Any(_52717_f);
	}
	jule::Ptr<_225036509_Struct> _53217_s = (*this)._field_lookup.get()._method_find_struct(_51426_ident,_51438_cpp_linked);
	if (_53217_s != nullptr) {
		return jule::Any(_53217_s);
	}
	jule::Ptr<_23e2b5818_TypeAlias> _53717_ta = (*this)._field_lookup.get()._method_find_type_alias(_51426_ident,_51438_cpp_linked);
	if (_53717_ta != nullptr) {
		return jule::Any(_53717_ta);
	}
	return (*this)._method_find_builtins(_51426_ident);
}



inline void _225aa4a5a_Eval::_method_push_reference(jule::Ptr<_22551ab31_ReferenceStack>& _54538_references) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ScopeChecker>>()) {
			_case_begin_5558431712:;
			{
				jule::Ptr<_2255ba3ea_ScopeChecker> _54821_sc = (*this)._field_lookup.operator jule::Ptr<_2255ba3ea_ScopeChecker>()->_method_get_root();
				if ((!(_54538_references->_method_exist_1(_54821_sc->_field_owner)))) {
					_54538_references->_method_push(jule::Any(_54821_sc->_field_owner));
				}
			}
		}
		else {
			_case_begin_5558429712:;
			{
				if (((*this)._field_owner != nullptr) && (!(_54538_references->_method_exist_0((*this)._field_owner)))) {
					_54538_references->_method_push(jule::Any((*this)._field_owner));
				}
			}
		}
		_match_end_5558429808:;
	}
}



inline void _225aa4a5a_Eval::_method_push_reference_to_fn(jule::Ptr<_2252d6a73_FnIns>& _56044_f) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ScopeChecker>>()) {
			_case_begin_5558443008:;
			{
				jule::Ptr<_2255ba3ea_ScopeChecker> _56321_sc = (*this)._field_lookup.operator jule::Ptr<_2255ba3ea_ScopeChecker>()->_method_get_root();
				if (_56321_sc->_field_owner->_field_decl->_method_is_init() && (!(_56321_sc->_field_owner->_field_references->_method_exist_1(_56044_f)))) {
					_56321_sc->_field_owner->_field_refers->_method_push(jule::Any(_56044_f));
				}
			}
		}
		_match_end_5558443104:;
	}
	(*this)._method_push_reference(_56044_f->_field_references);
}



inline void _225aa4a5a_Eval::_method_push_reference_to_var(jule::Ptr<_2258258db_Var>& _57145_v) {
	if (_57145_v->_field_references == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ScopeChecker>>()) {
			_case_begin_5558457152:;
			{
				jule::Ptr<_2255ba3ea_ScopeChecker> _57821_sc = (*this)._field_lookup.operator jule::Ptr<_2255ba3ea_ScopeChecker>()->_method_get_root();
				if (_57821_sc->_field_owner->_field_decl->_method_is_init() && (!(_57821_sc->_field_owner->_field_references->_method_exist_0(_57145_v)))) {
					_57821_sc->_field_owner->_field_refers->_method_push(jule::Any(_57145_v));
				}
			}
		}
		_match_end_5558456352:;
	}
	(*this)._method_push_reference(_57145_v->_field_references);
}



inline void _225aa4a5a_Eval::_method_push_reference_to_struct(jule::Ptr<_225036509_StructIns>& _58748_s) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ScopeChecker>>()) {
			_case_begin_5558466032:;
			{
				jule::Ptr<_2255ba3ea_ScopeChecker> _59021_sc = (*this)._field_lookup.operator jule::Ptr<_2255ba3ea_ScopeChecker>()->_method_get_root();
				if (_59021_sc->_field_owner->_field_decl->_method_is_init() && (!(_59021_sc->_field_owner->_field_references->_method_exist_2(_58748_s)))) {
					_59021_sc->_field_owner->_field_refers->_method_push(jule::Any(_58748_s));
				}
			}
		}
		_match_end_5558466128:;
	}
	(*this)._method_push_reference(_58748_s->_field_references);
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method___eval_enum(jule::Ptr<_2255aae79_Enum> _59830_enm) {
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_59830_enm)),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),true,nullptr));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_enum(jule::Ptr<_2255aae79_Enum> _61032_enm,_23e730c0b_Token _61044_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_61032_enm->_field_public,_61032_enm->_field_token)))) {
		(*this)._method_push_err(_61044_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_61032_enm->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return (*this)._method___eval_enum(_61032_enm);
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method___eval_struct(jule::Ptr<_225036509_StructIns> _62032_s) {
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_62032_s)),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_62032_s),true,nullptr));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_struct(jule::Ptr<_225036509_StructIns> _63334_s,_23e730c0b_Token _63349_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_63334_s->_field_decl->_field_public,_63334_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_63349_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_63334_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return (*this)._method___eval_struct(_63334_s);
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_fn_ins(jule::Ptr<_2252d6a73_FnIns> _64330_f) {
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_64330_f)),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(_64330_f),false,nullptr));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_fn(jule::Ptr<_2252d6a73_Fn> _65630_f,_23e730c0b_Token _65638_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_65630_f->_field_public,_65630_f->_field_token)))) {
		(*this)._method_push_err(_65638_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_65630_f->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_2252d6a73_FnIns> _66317_ins = _65630_f->_method_instance();
	(*this)._method_push_reference_to_fn(_66317_ins);
	return (*this)._method_eval_fn_ins(_66317_ins);
}



inline void _225aa4a5a_Eval::_method_push_illegal_cycle_error(jule::Ptr<_2258258db_Var>& _66844_v1,jule::Ptr<_2258258db_Var>& _66855_v2,jule::Str& _66870_message) {
	
	jule::Str _67113_refers_to = _23ceb0c1d_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_66844_v1->_field_ident),jule::Any(_66855_v2->_field_ident)}));
	_66870_message=((_22551ab31_str_repeat(jule::Str(" ", 1),4LL) + _67113_refers_to) + jule::Str("\n", 1)) + _66870_message;
}



inline jule::Bool _225aa4a5a_Eval::_method_check_cross_cycle(jule::Ptr<_2258258db_Var>& _67537_v,jule::Str& _67551_message) {
	{
		auto &expr = _67537_v->_field_depends;
		auto it = expr.begin();
		_iter_begin_5558534992:;
		if (it != expr.end()) {
			jule::Ptr<_2258258db_Var> &_225aa4a5a_d = *it;
			{
				if (_225aa4a5a_d == (*this)._field_owner) {
					(*this)._method_push_illegal_cycle_error(_67537_v,_225aa4a5a_d,_67551_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_225aa4a5a_d,_67551_message)))) {
					(*this)._method_push_illegal_cycle_error(_67537_v,_225aa4a5a_d,_67551_message);
					return false;
				}
			}
			_iter_next_5558534992:;
			++it;
			goto _iter_begin_5558534992;
		}
		_iter_end_5558534992:;
	}
	return true;
}



inline jule::Bool _225aa4a5a_Eval::_method_check_illegal_cycles(jule::Ptr<_2258258db_Var>& _69444_v,_23e730c0b_Token _69453_decl_token) {
	jule::Bool _69474_ok = jule::Bool();
	if ((*this)._field_owner == nullptr) {
		_69474_ok = true;
		return _69474_ok;
	}
	if ((*this)._field_owner == _69444_v) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_69474_ok = false;
		return _69474_ok;
	}
	jule::Str _70617_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_69444_v,_70617_message)))) {
		jule::Str _70921_err_msg = _70617_message;
		_70617_message=jule::Str();
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_69444_v,_70617_message);
		_70921_err_msg=_70921_err_msg + _70617_message;
		(*this)._method_push_err(_69453_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_70921_err_msg)}));
		_69474_ok = false;
		return _69474_ok;
	}
	(*this)._field_owner->_field_depends = jule::alloc_for_append((*this)._field_owner->_field_depends,1);(*this)._field_owner->_field_depends.push(_69444_v);
	_69474_ok = true;
	return _69474_ok;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_var(jule::Ptr<_2258258db_Var> _72131_v,_23e730c0b_Token _72140_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_72131_v->_field_public,_72131_v->_field_token)))) {
		(*this)._method_push_err(_72140_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_72131_v->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_72131_v->_field_used=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_22579574b_Sema>>()) {
			_case_begin_5558558768:;
			{
				jule::Bool _73317_ok = (*this)._method_check_illegal_cycles(_72131_v,_72140_error_token);
				if ((!(_73317_ok))) {
					return nullptr;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ScopeChecker>>()) {
			_case_begin_5558559264:;
			{
				if ((!(_72131_v->_field_reference)) || (*this)._method_is_unsafe()) {
					goto _match_end_5558555648;
				}
				jule::Ptr<_2255ba3ea_ScopeChecker> _74321_s = (*this)._field_lookup.operator jule::Ptr<_2255ba3ea_ScopeChecker>();
				while ((_74321_s->_field_owner == nullptr) && (_74321_s->_field_parent != nullptr)) {
					{
						_74321_s=_74321_s->_field_parent;
					}
				_iter_next_5558563520:;
				}
				_iter_end_5558563520:;
				if (((_74321_s->_field_owner != nullptr) && _74321_s->_field_owner->_field_anon) && (_72131_v->_field_scope != _74321_s->_field_owner->_field_scope)) {
					(*this)._method_push_err(_72140_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_72131_v->_field_ident)}));
				}
			}
		}
		_match_end_5558555648:;
	}
	(*this)._method_push_reference_to_var(_72131_v);
	if ((!(_72131_v->_field_cpp_linked)) && ((_72131_v->_field_value == nullptr) || (_72131_v->_field_value->_field_data == nullptr))) {
		if (_72131_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_72131_v,(*this)._field_s);
			if (_72131_v->_field_value->_field_data == nullptr) {
				return nullptr;
			}
		}
	}
	if ((_72131_v->_field_kind == nullptr) || (_72131_v->_field_kind->_field_kind == nullptr)) {
		if (_72131_v->_field_scope != nullptr) {
			return nullptr;
		}
		(*this)._field_s->_method_check_type_var(_72131_v,(*this)._field_lookup);
		if ((_72131_v->_field_kind == nullptr) || (_72131_v->_field_kind->_field_kind == nullptr)) {
			return nullptr;
		}
	}
	jule::Ptr<_225aa4a5a_Data> _78317_d = jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(_72131_v->_field_kind->_field_kind,jule::Ptr<_23e2b5818_TypeKind>(),_72131_v->_field_mutable,_72131_v->_field_reference,(!(_72131_v->_field_constant)),jule::Bool(),jule::Any(_72131_v),jule::Bool(),jule::Ptr<_226100d86_Const>()));
	if (((!(_72131_v->_field_cpp_linked)) && _72131_v->_method_is_initialized()) && (_72131_v->_field_value->_field_data != nullptr)) {
		_78317_d->_field_is_rune=_72131_v->_field_value->_field_data->_field_is_rune;
	}
	if (_72131_v->_field_constant && (_72131_v->_field_value->_field_data->_field_constant != nullptr)) {
		_78317_d->_field_constant=jule::new_ptr<_226100d86_Const>((*(_72131_v->_field_value->_field_data->_field_constant)));
		_78317_d->_field_model=jule::Any(_78317_d->_field_constant);
	}
	if (_78317_d->_field_kind->_method_fnc() != nullptr) {
		jule::Ptr<_2252d6a73_FnIns> _80121_f = _78317_d->_field_kind->_method_fnc();
		if (_80121_f->_field_decl != nullptr) {
			_80121_f->_field_decl->_field_ident=_72131_v->_field_ident;
		}
	}
	return _78317_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_type_alias(jule::Ptr<_23e2b5818_TypeAlias> _81238_ta,_23e730c0b_Token _81254_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_81238_ta->_field_public,_81238_ta->_field_token)))) {
		(*this)._method_push_err(_81254_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_81238_ta->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_81238_ta->_field_used=true;
	jule::Trait<_23e2b5818_Kind> _82117_kind = _81238_ta->_field_kind->_field_kind->_field_kind;
	{
		auto &_match_expr{ _82117_kind };
		if (_match_expr.type_is<jule::Ptr<_225036509_StructIns>>()) {
			_case_begin_5558595312:;
			{
				return (*this)._method___eval_struct(_82117_kind.operator jule::Ptr<_225036509_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255aae79_Enum>>()) {
			_case_begin_5558594496:;
			{
				return (*this)._method___eval_enum(_82117_kind.operator jule::Ptr<_2255aae79_Enum>());
			}
		}
		else {
			_case_begin_5558592880:;
			{
				jule::Ptr<_225aa4a5a_Data> _83021_d = jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(((_81238_ta->_field_cpp_linked) ? (_81238_ta->_field_ident) : (_81238_ta->_field_kind->_field_kind->_field_cpp_ident)),_81238_ta->_field_generic,jule::Bool(),_81238_ta->_field_kind->_field_kind->_field_kind)),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_226100d86_Const>()));
				_83021_d->_field_model=jule::Any(_83021_d->_field_kind);
				return _83021_d;
			}
		}
		_match_end_5558594144:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_def(jule::Any _84431_def,_23e730c0b_Token _84441_ident) {
	{
		auto &_match_expr{ _84431_def };
		if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
			_case_begin_5558605488:;
			{
				return (*this)._method_eval_var(_84431_def.operator jule::Ptr<_2258258db_Var>(),_84441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255aae79_Enum>>()) {
			_case_begin_5558607152:;
			{
				return (*this)._method_eval_enum(_84431_def.operator jule::Ptr<_2255aae79_Enum>(),_84441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
			_case_begin_5558607248:;
			{
				return (*this)._method_eval_struct(_84431_def.operator jule::Ptr<_225036509_Struct>()->_method_instance(),_84441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2252d6a73_Fn>>()) {
			_case_begin_5558606688:;
			{
				return (*this)._method_eval_fn(_84431_def.operator jule::Ptr<_2252d6a73_Fn>(),_84441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2252d6a73_FnIns>>()) {
			_case_begin_5558606784:;
			{
				return (*this)._method_eval_fn_ins(_84431_def.operator jule::Ptr<_2252d6a73_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e2b5818_TypeAlias>>()) {
			_case_begin_5558604768:;
			{
				return (*this)._method_eval_type_alias(_84431_def.operator jule::Ptr<_23e2b5818_TypeAlias>(),_84441_ident);
			}
		}
		else {
			_case_begin_5558604192:;
			{
				(*this)._method_push_err(_84441_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_84441_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5558604288:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_ident(jule::Ptr<_23e45734a_IdentExpr> _87029_ident) {
	jule::Any _87117_def = (*this)._method_get_def(_87029_ident->_field_ident,_87029_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_87117_def,_87029_ident->_field_token);
}



inline void _225aa4a5a_Eval::_method_eval_unary_minus(jule::Ptr<_225aa4a5a_Data>& _87536_d) {
	jule::Ptr<_23e2b5818_Prim> _87613_t = _87536_d->_field_kind->_method_prim();
	if ((_87613_t == nullptr) || (!(_2261088d8_is_num(_87613_t->_method_to_str())))) {
		_87536_d=nullptr;
		return;
	}
	if (_87536_d->_method_is_const()) {
		{
			if (_87536_d->_field_constant->_method_is_f64()) {
				_case_begin_5558627024:;
				{
					_87536_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_87536_d->_field_constant->_method_read_f64()))));
				}
			}
			else if (_87536_d->_field_constant->_method_is_i64()) {
				_case_begin_5558627136:;
				{
					_87536_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_87536_d->_field_constant->_method_as_f64()))));
				}
			}
			else if (_87536_d->_field_constant->_method_is_u64()) {
				_case_begin_5558627248:;
				{
					_87536_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_87536_d->_field_constant->_method_as_f64()))));
				}
			}
			_match_end_5558626784:;
		}
		_225aa4a5a_normalize_type(_87536_d);
	}
	_87536_d->_field_lvalue=false;
	_87536_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_UnaryExprModel>(new( std::nothrow ) _2255b85b3_UnaryExprModel(_87536_d->_field_model,jule::Str("-", 1))));
}



inline void _225aa4a5a_Eval::_method_eval_unary_plus(jule::Ptr<_225aa4a5a_Data>& _89835_d) {
	jule::Ptr<_23e2b5818_Prim> _89913_t = _89835_d->_field_kind->_method_prim();
	if ((_89913_t == nullptr) || (!(_2261088d8_is_num(_89913_t->_method_to_str())))) {
		_89835_d=nullptr;
		return;
	}
	if (_89835_d->_method_is_const()) {
		{
			if (_89835_d->_field_constant->_method_is_f64()) {
				_case_begin_5558640992:;
				{
					_89835_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_89835_d->_field_constant->_method_read_f64()))));
				}
			}
			else if (_89835_d->_field_constant->_method_is_i64()) {
				_case_begin_5558641104:;
				{
					_89835_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_89835_d->_field_constant->_method_as_f64()))));
				}
			}
			else if (_89835_d->_field_constant->_method_is_u64()) {
				_case_begin_5558641216:;
				{
					_89835_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_89835_d->_field_constant->_method_as_f64()))));
				}
			}
			_match_end_5558640784:;
		}
		_225aa4a5a_normalize_type(_89835_d);
	}
	_89835_d->_field_lvalue=false;
	_89835_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_UnaryExprModel>(new( std::nothrow ) _2255b85b3_UnaryExprModel(_89835_d->_field_model,jule::Str("+", 1))));
}



inline void _225aa4a5a_Eval::_method_eval_unary_caret(jule::Ptr<_225aa4a5a_Data>& _92136_d) {
	jule::Ptr<_23e2b5818_Prim> _92213_t = _92136_d->_field_kind->_method_prim();
	if ((_92213_t == nullptr) || (!(_2261088d8_is_int(_92213_t->_method_to_str())))) {
		_92136_d=nullptr;
		return;
	}
	if (_92136_d->_method_is_const()) {
		{
			if (_92136_d->_field_constant->_method_is_i64()) {
				_case_begin_5558655040:;
				{
					_92136_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_92136_d->_field_constant->_method_read_i64()))));
				}
			}
			else if (_92136_d->_field_constant->_method_is_u64()) {
				_case_begin_5558655152:;
				{
					_92136_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_92136_d->_field_constant->_method_read_u64()))));
				}
			}
			_match_end_5558654816:;
		}
	}
	_92136_d->_field_lvalue=false;
	_92136_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_UnaryExprModel>(new( std::nothrow ) _2255b85b3_UnaryExprModel(_92136_d->_field_model,jule::Str("^", 1))));
}



inline void _225aa4a5a_Eval::_method_eval_unary_excl(jule::Ptr<_225aa4a5a_Data>& _94535_d) {
	jule::Ptr<_23e2b5818_Prim> _94613_t = _94535_d->_field_kind->_method_prim();
	if ((_94613_t == nullptr) || (!(_94613_t->_method_is_bool()))) {
		_94535_d=nullptr;
		return;
	}
	if (_94535_d->_method_is_const()) {
		{
			if (_94535_d->_field_constant->_method_is_bool()) {
				_case_begin_5558666160:;
				{
					_94535_d->_field_constant->_method_set_bool((!(_94535_d->_field_constant->_method_read_bool())));
				}
			}
			_match_end_5558665952:;
		}
	}
	_94535_d->_field_lvalue=false;
	_94535_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_UnaryExprModel>(new( std::nothrow ) _2255b85b3_UnaryExprModel(_94535_d->_field_model,jule::Str("!", 1))));
}



inline void _225aa4a5a_Eval::_method_eval_unary_star(jule::Ptr<_225aa4a5a_Data>& _96639_d,_23e730c0b_Token& _96650_op) {
	{
		if (_96639_d->_field_kind->_method_ptr() != nullptr) {
			_case_begin_5558673296:;
			{
				if ((!((*this)._method_is_unsafe()))) {
					(*this)._method_push_err(_96650_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				jule::Ptr<_23e2b5818_Ptr> _97321_t = _96639_d->_field_kind->_method_ptr();
				if (_97321_t->_method_is_unsafe()) {
					_96639_d=nullptr;
					return;
				}
				_96639_d->_field_kind=_97321_t->_field_elem;
			}
		}
		else if (_96639_d->_field_kind->_method_sptr() != nullptr) {
			_case_begin_5558673392:;
			{
				_96639_d->_field_kind=_96639_d->_field_kind->_method_sptr()->_field_elem;
			}
		}
		else {
			_case_begin_5558672272:;
			{
				_96639_d=nullptr;
				return;
			}
		}
		_match_end_5558672128:;
	}
	_96639_d->_field_constant=nullptr;
	_96639_d->_field_lvalue=true;
	_96639_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_UnaryExprModel>(new( std::nothrow ) _2255b85b3_UnaryExprModel(_96639_d->_field_model,jule::Str("*", 1))));
}



inline void _225aa4a5a_Eval::_method_eval_unary_amper(jule::Ptr<_225aa4a5a_Data>& _99636_d) {
	{
		auto &_match_expr{ _99636_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_2255b85b3_StructLitExprModel>>()) {
			_case_begin_5558689568:;
			{
				jule::Ptr<_2255b85b3_StructLitExprModel> _99921_lit = _99636_d->_field_model.operator jule::Ptr<_2255b85b3_StructLitExprModel>();
				_225aa4a5a_make_struct_lit_alloc(_99636_d,_99921_lit);
			}
		}
		else {
			_case_begin_5558683808:;
			{
				{
					if (_23e2b5818_can_get_ptr(_99636_d)) {
						_case_begin_5558686240:;
						{
							_99636_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_23e2b5818_Ptr>(new( std::nothrow ) _23e2b5818_Ptr(_99636_d->_field_kind))));
							_99636_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_UnaryExprModel>(new( std::nothrow ) _2255b85b3_UnaryExprModel(_99636_d->_field_model,jule::Str("&", 1))));
						}
					}
					else {
						_case_begin_5558685408:;
						{
							_99636_d=nullptr;
						}
					}
					_match_end_5558685232:;
				}
			}
		}
		_match_end_5558684032:;
	}
	if (_99636_d != nullptr) {
		_99636_d->_field_constant=nullptr;
		_99636_d->_field_lvalue=false;
		_99636_d->_field_mutable=true;
	}
}



inline void _225aa4a5a_Eval::_method_eval_unary_type_decl(jule::Ptr<_225aa4a5a_Data>& _102544_d,jule::Ptr<_23e45734a_UnaryExpr>& _102559_u) {
	_23e2b5818_TypeChecker _102617_tc = _23e2b5818_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ptr<_23e2b5818_Referencer>(),_102559_u->_field_op,jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>(),jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>(),jule::Bool());
	{
		auto &_match_expr{ _102559_u->_field_op._field_kind };
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_5558697200:;
			{
				_102544_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_102617_tc._method_build_ptr_from_type(_102544_d->_field_kind)));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_5558698768:;
			{
				_102544_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_102617_tc._method_build_sptr_from_type(_102544_d->_field_kind)));
			}
		}
		else {
			_case_begin_5558694656:;
			{
				(*this)._method_push_err(_102559_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_102559_u->_field_op._field_kind)}));
				_102544_d=nullptr;
				return;
			}
		}
		_match_end_5558696080:;
	}
	_102544_d->_field_decl=true;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_unary(jule::Ptr<_23e45734a_UnaryExpr> _104834_u) {
	jule::Ptr<_23e2b5818_TypeKind> _104917_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_104917_prefix;
	});
	jule::Ptr<_225aa4a5a_Data> _105317_d = this->self->_method_eval_expr_kind(_104834_u->_field_expr);
	if (_105317_d == nullptr) {
		return nullptr;
	}
	if (_105317_d->_field_decl) {
		this->self->_method_eval_unary_type_decl(_105317_d,_104834_u);
		return _105317_d;
	}
	jule::Ptr<_23e2b5818_TypeKind> _106317_cast_kind = _105317_d->_field_cast_kind;
	{
		auto &_match_expr{ _104834_u->_field_op._field_kind };
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_5558713680:;
			{
				this->self->_method_eval_unary_minus(_105317_d);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_5558713776:;
			{
				this->self->_method_eval_unary_plus(_105317_d);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_5558713872:;
			{
				this->self->_method_eval_unary_caret(_105317_d);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_5558713008:;
			{
				this->self->_method_eval_unary_excl(_105317_d);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_5558713104:;
			{
				this->self->_method_eval_unary_star(_105317_d,_104834_u->_field_op);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_5558713200:;
			{
				this->self->_method_eval_unary_amper(_105317_d);
			}
		}
		else {
			_case_begin_5558709104:;
			{
				_105317_d=nullptr;
			}
		}
		_match_end_5558712720:;
	}
	if (_105317_d == nullptr) {
		this->self->_method_push_err(_104834_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_104834_u->_field_op._field_kind)}));
	} else if (_105317_d->_method_is_const()) {
		_105317_d->_field_model=jule::Any(_105317_d->_field_constant);
	} else if (_106317_cast_kind != nullptr) {
		_105317_d->_field_cast_kind=_106317_cast_kind;
		_225aa4a5a_apply_cast_kind(_105317_d);
	}
	return _105317_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_variadic(jule::Ptr<_23e45734a_VariadicExpr> _108637_v) {
	if (_108637_v->_field_expr == nullptr) {
		this->self->_method_push_err(_108637_v->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_23e2b5818_TypeKind> _109217_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_109217_prefix;
	});
	jule::Ptr<_225aa4a5a_Data> _109617_d = this->self->_method_eval_expr_kind(_108637_v->_field_expr);
	if (_109617_d == nullptr) {
		return nullptr;
	}
	if ((!(_109617_d->_field_kind->_method_variadicable()))) {
		this->self->_method_push_err(_108637_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_109617_d->_field_kind->_method_to_str())}));
		return nullptr;
	}
	jule::Ptr<_23e2b5818_Slc> _110613_slc = _109617_d->_field_kind->_method_slc();
	_109617_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(_110613_slc->_field_elem->_field_cpp_ident,_110613_slc->_field_elem->_field_generic,true,_110613_slc->_field_elem->_field_kind));
	return _109617_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_unsafe(jule::Ptr<_23e45734a_UnsafeExpr> _111635_u) {
	jule::Bool _111713_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ptr<_225aa4a5a_Data> _112017_d = this->self->_method_eval_expr_kind(_111635_u->_field_expr);
	this->self->_field_unsafety=_111713_unsafety;
	return _112017_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_arr(jule::Ptr<_23e45734a_SliceExpr> _112732_s) {
	jule::Ptr<_23e2b5818_Arr> _112917_pt = this->self->_field_prefix->_method_arr();
	jule::Ptr<_23e2b5818_Arr> _113117_arr = jule::new_struct_ptr<_23e2b5818_Arr>(new( std::nothrow ) _23e2b5818_Arr(false,0LL,_112917_pt->_field_elem));
	jule::Bool _113717_filled = false;
	if (_112732_s->_field_elems.len() == 2LL) {
		{
			auto &_match_expr{ _112732_s->_field_elems[1LL] };
			if (_match_expr.type_is<jule::Ptr<_23e45734a_VariadicExpr>>()) {
				_case_begin_5558751904:;
				{
					if (_112732_s->_field_elems[1LL].operator jule::Ptr<_23e45734a_VariadicExpr>()->_field_expr != nullptr) {
						goto _match_end_5558752752;
					}
					if (_112917_pt->_field_auto) {
						this->self->_method_push_err(_112732_s->_field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					}
					_113717_filled=true;
					_112732_s->_field_elems=_112732_s->_field_elems.slice(0LL,1LL);
				}
			}
			_match_end_5558752752:;
		}
	}
	_113117_arr->_field_n=static_cast<jule::I64>(_112732_s->_field_elems.len());
	if ((!(_112917_pt->_field_auto))) {
		if (_113117_arr->_field_n > _112917_pt->_field_n) {
			this->self->_method_push_err(_112732_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if (_113117_arr->_field_n < _112917_pt->_field_n) {
			_113117_arr->_field_n=_112917_pt->_field_n;
		}
	}
	jule::Ptr<_2255b85b3_ArrayExprModel> _116617_model = jule::new_struct<_2255b85b3_ArrayExprModel>(new( std::nothrow ) _2255b85b3_ArrayExprModel(_113117_arr,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(((_113717_filled) ? (2LL) : (static_cast<jule::I64>(_112732_s->_field_elems.len())))))));
	jule::Ptr<_23e2b5818_TypeKind> _117117_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_113117_arr->_field_elem;
	{
		auto &expr = _112732_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_5558765040:;
		if (it != expr.end()) {
			jule::Any _225aa4a5a_elem = *it;
			{
				jule::Ptr<_225aa4a5a_Data> _117421_d = this->self->_method_eval_expr_kind(_225aa4a5a_elem);
				if (_117421_d == nullptr) {
					goto _iter_next_5558765040;
				}
				this->self->_field_s->_method_check_assign_type(false,_113117_arr->_field_elem,_117421_d,_112732_s->_field_token);
				_116617_model->_field_elems = jule::alloc_for_append(_116617_model->_field_elems,1);_116617_model->_field_elems.push(_117421_d->_field_model);
			}
			_iter_next_5558765040:;
			++it;
			goto _iter_begin_5558765040;
		}
		_iter_end_5558765040:;
	}
	this->self->_field_prefix=_117117_prefix;
	if (_113717_filled) {
		_116617_model->_field_elems = jule::alloc_for_append(_116617_model->_field_elems,1);_116617_model->_field_elems.push(jule::Any(nullptr));
	}
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_113117_arr)),jule::Ptr<_23e2b5818_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_116617_model),jule::Bool(),jule::Ptr<_226100d86_Const>()));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_exp_slc(jule::Ptr<_23e45734a_SliceExpr> _119636_s,jule::Ptr<_23e2b5818_TypeKind> _119655_elem_type) {
	jule::Ptr<_23e2b5818_Slc> _119717_slc = jule::new_struct_ptr<_23e2b5818_Slc>(new( std::nothrow ) _23e2b5818_Slc(_119655_elem_type));
	jule::Ptr<_2255b85b3_SliceExprModel> _120117_model = jule::new_struct<_2255b85b3_SliceExprModel>(new( std::nothrow ) _2255b85b3_SliceExprModel(_119655_elem_type,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_119636_s->_field_elems.len()))));
	jule::Ptr<_23e2b5818_TypeKind> _120617_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_119717_slc->_field_elem;
	{
		auto &expr = _119636_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_5558779568:;
		if (it != expr.end()) {
			jule::Any _225aa4a5a_elem = *it;
			{
				jule::Ptr<_225aa4a5a_Data> _120921_d = this->self->_method_eval_expr_kind(_225aa4a5a_elem);
				if (_120921_d == nullptr) {
					goto _iter_next_5558779568;
				}
				this->self->_field_s->_method_check_assign_type(false,_119717_slc->_field_elem,_120921_d,_119636_s->_field_token);
				_120117_model->_field_elems = jule::alloc_for_append(_120117_model->_field_elems,1);_120117_model->_field_elems.push(_120921_d->_field_model);
			}
			_iter_next_5558779568:;
			++it;
			goto _iter_begin_5558779568;
		}
		_iter_end_5558779568:;
	}
	this->self->_field_prefix=_120617_prefix;
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_119717_slc)),jule::Ptr<_23e2b5818_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_120117_model),jule::Bool(),jule::Ptr<_226100d86_Const>()));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_slice_expr(jule::Ptr<_23e45734a_SliceExpr> _122639_s) {
	if (this->self->_field_prefix != nullptr) {
		{
			if (this->self->_field_prefix->_method_arr() != nullptr) {
				_case_begin_5558788928:;
				{
					return this->self->_method_eval_arr(_122639_s);
				}
			}
			else if (this->self->_field_prefix->_method_slc() != nullptr) {
				_case_begin_5558789040:;
				{
					jule::Ptr<_23e2b5818_Slc> _123325_pt = this->self->_field_prefix->_method_slc();
					return this->self->_method_eval_exp_slc(_122639_s,_123325_pt->_field_elem);
				}
			}
			_match_end_5558788704:;
		}
	}
	jule::Ptr<_23e2b5818_TypeKind> _123817_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	if (_122639_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_122639_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_225aa4a5a_Data> _124617_first_elem = this->self->_method_eval_expr_kind(_122639_s->_field_elems[0LL]);
	if (_124617_first_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_225aa4a5a_Data> _125117_d = this->self->_method_eval_exp_slc(_122639_s,_124617_first_elem->_field_kind);
	this->self->_field_prefix=_123817_prefix;
	return _125117_d;
}



inline void _225aa4a5a_Eval::_method_check_integer_indexing_by_data(jule::Ptr<_225aa4a5a_Data>& _125754_d,_23e730c0b_Token _125764_token) {
	jule::Str _125813_err_key = _225aa4a5a_check_data_for_integer_indexing(_125754_d);
	{
		auto &_match_expr{ _125813_err_key };
		if (_match_expr == jule::Str()) {
			_case_begin_5558804352:;
			{
				return;
			}
		}
		else if (_match_expr == jule::Str("type \"@\" is invalid for indexing", 32)) {
			_case_begin_5558803920:;
			{
				(*this)._method_push_err(_125764_token,_125813_err_key,jule::Slice<jule::Any>({jule::Any(_125754_d->_field_kind->_method_to_str())}));
			}
		}
		else {
			_case_begin_5558802624:;
			{
				(*this)._method_push_err(_125764_token,_125813_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_5558803632:;
	}
}



inline void _225aa4a5a_Eval::_method_indexing_ptr(jule::Ptr<_225aa4a5a_Data>& _127136_d,jule::Ptr<_225aa4a5a_Data>& _127151_index,jule::Ptr<_23e45734a_IndexingExpr>& _127166_i) {
	(*this)._method_check_integer_indexing_by_data(_127151_index,_127166_i->_field_token);
	jule::Ptr<_23e2b5818_Ptr> _127417_ptr = _127136_d->_field_kind->_method_ptr();
	{
		if (_127417_ptr->_method_is_unsafe()) {
			_case_begin_5558813552:;
			{
				(*this)._method_push_err(_127166_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>());
				return;
			}
		}
		else if ((!((*this)._method_is_unsafe()))) {
			_case_begin_5558813648:;
			{
				(*this)._method_push_err(_127166_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_5558813312:;
	}
	_127136_d->_field_kind=_127417_ptr->_field_elem;
}



inline void _225aa4a5a_Eval::_method_indexing_arr(jule::Ptr<_225aa4a5a_Data>& _128736_d,jule::Ptr<_225aa4a5a_Data>& _128751_index,jule::Ptr<_23e45734a_IndexingExpr>& _128766_i) {
	jule::Ptr<_23e2b5818_Arr> _128817_arr = _128736_d->_field_kind->_method_arr();
	_128736_d->_field_kind=_128817_arr->_field_elem;
	(*this)._method_check_integer_indexing_by_data(_128751_index,_128766_i->_field_token);
	if (_128751_index->_method_is_const() && (_128751_index->_field_constant->_method_as_f64() >= static_cast<jule::F64>(_128817_arr->_field_n))) {
		(*this)._method_push_err(_128766_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	}
}



inline void _225aa4a5a_Eval::_method_indexing_slc(jule::Ptr<_225aa4a5a_Data>& _129636_d,jule::Ptr<_225aa4a5a_Data>& _129651_index,jule::Ptr<_23e45734a_IndexingExpr>& _129666_i) {
	jule::Ptr<_23e2b5818_Slc> _129717_slc = _129636_d->_field_kind->_method_slc();
	_129636_d->_field_kind=_129717_slc->_field_elem;
	(*this)._method_check_integer_indexing_by_data(_129651_index,_129666_i->_field_token);
	if ((!(_129651_index->_method_is_const()))) {
		return;
	}
	{
		auto &_match_expr{ _129636_d->_field_model };
		if (_match_expr.type_is<jule::Ptr<_2255b85b3_SliceExprModel>>()) {
			_case_begin_5558834064:;
			{
				jule::Ptr<_2255b85b3_SliceExprModel> _130721_m = _129636_d->_field_model.operator jule::Ptr<_2255b85b3_SliceExprModel>();
				jule::F64 _130817_indx = _129651_index->_field_constant->_method_as_f64();
				if (_130817_indx >= static_cast<jule::F64>(_130721_m->_field_elems.len())) {
					(*this)._method_push_err(_129666_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_129636_d->_field_model=_130721_m->_field_elems[static_cast<jule::Int>(static_cast<jule::U64>(_130817_indx))];
					_129636_d->_field_decl=true;
				}
			}
		}
		_match_end_5558834304:;
	}
}



inline void _225aa4a5a_Eval::_method_indexing_map(jule::Ptr<_225aa4a5a_Data>& _131836_d,jule::Ptr<_225aa4a5a_Data>& _131851_index,jule::Ptr<_23e45734a_IndexingExpr>& _131870_i) {
	if (_131851_index == nullptr) {
		return;
	}
	jule::Ptr<_23e2b5818_Map> _132317_m = _131836_d->_field_kind->_method_map();
	_22582290a_AssignTypeChecker _132417_atc = _22582290a_AssignTypeChecker((*this)._field_s,_132317_m->_field_key,_131851_index,_131870_i->_field_token);
	_132417_atc._method_check();
	_131836_d->_field_kind=_132317_m->_field_val;
}



inline void _225aa4a5a_Eval::_method_indexing_str(jule::Ptr<_225aa4a5a_Data>& _133536_d,jule::Ptr<_225aa4a5a_Data>& _133551_index,jule::Ptr<_23e45734a_IndexingExpr>& _133566_i) {
	
	_133536_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("u8", 2))));
	if (_133551_index == nullptr) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_133551_index,_133566_i->_field_token);
	if ((!(_133551_index->_method_is_const()))) {
		_133536_d->_field_constant=nullptr;
		return;
	}
	if (_133536_d->_method_is_const()) {
		_23e730c0b_Token _135117_error_token = _133566_i->_field_token;
		jule::I64 _135217_j = _133551_index->_field_constant->_method_as_i64();
		jule::Str _135317_s = _133536_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_135217_j) >= _135317_s.len()) {
			(*this)._method_push_err(_135117_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_133536_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_135317_s[_135217_j]));
		}
	}
}



inline void _225aa4a5a_Eval::_method_to_indexing(jule::Ptr<_225aa4a5a_Data>& _136235_d,jule::Ptr<_225aa4a5a_Data>& _136250_index,jule::Ptr<_23e45734a_IndexingExpr>& _136269_i) {
	{
		if (_136235_d->_field_kind->_method_ptr() != nullptr) {
			_case_begin_5558868384:;
			{
				(*this)._method_indexing_ptr(_136235_d,_136250_index,_136269_i);
				return;
			}
		}
		else if (_136235_d->_field_kind->_method_arr() != nullptr) {
			_case_begin_5558868496:;
			{
				(*this)._method_indexing_arr(_136235_d,_136250_index,_136269_i);
				return;
			}
		}
		else if (_136235_d->_field_kind->_method_slc() != nullptr) {
			_case_begin_5558868608:;
			{
				(*this)._method_indexing_slc(_136235_d,_136250_index,_136269_i);
				return;
			}
		}
		else if (_136235_d->_field_kind->_method_map() != nullptr) {
			_case_begin_5558868720:;
			{
				(*this)._method_indexing_map(_136235_d,_136250_index,_136269_i);
				return;
			}
		}
		else if (_136235_d->_field_kind->_method_prim() != nullptr) {
			_case_begin_5558868832:;
			{
				jule::Ptr<_23e2b5818_Prim> _138117_prim = _136235_d->_field_kind->_method_prim();
				{
					if (_138117_prim->_method_is_str()) {
						_case_begin_5558880208:;
						{
							(*this)._method_indexing_str(_136235_d,_136250_index,_136269_i);
							return;
						}
					}
					_match_end_5558880064:;
				}
			}
		}
		_match_end_5558868112:;
	}
	(*this)._method_push_err(_136269_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_136235_d->_field_kind->_method_to_str())}));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_ident_decl_from_indexing(jule::Ptr<_23e45734a_IndexingExpr>& _139254_i) {
	{
		auto &_match_expr{ _139254_i->_field_expr };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_IdentExpr>>()) {
			_case_begin_5558888016:;
		}
		else {
			_case_begin_5558885344:;
			{
				this->self->_method_push_err(_139254_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_5558885568:;
	}
	jule::Ptr<_23e45734a_IdentTypeDecl> _140017_decl = jule::new_struct<_23e45734a_IdentTypeDecl>(new( std::nothrow ) _23e45734a_IdentTypeDecl(_23e730c0b_Token(),_139254_i->_field_expr.operator jule::Ptr<_23e45734a_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_23e45734a_TypeDecl>>()));
	{
		auto &_match_expr{ _139254_i->_field_index };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_UnaryExpr>>()) {
			_case_begin_5558892112:;
			{
				jule::Ptr<_225aa4a5a_Data> _140821_d = this->self->_method_eval_unary(_139254_i->_field_index.operator jule::Ptr<_23e45734a_UnaryExpr>());
				if ((!(_140821_d->_field_decl))) {
					this->self->_method_push_err(_139254_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;
				}
				_140017_decl->_field_generics = jule::alloc_for_append(_140017_decl->_field_generics,1);_140017_decl->_field_generics.push(jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_23e730c0b_Token(),jule::Any(_140821_d->_field_kind))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_TypeDecl>>()) {
			_case_begin_5558892304:;
			{
				_140017_decl->_field_generics = jule::alloc_for_append(_140017_decl->_field_generics,1);_140017_decl->_field_generics.push(_139254_i->_field_index.operator jule::Ptr<_23e45734a_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_IdentExpr>>()) {
			_case_begin_5558892400:;
			{
				_140017_decl->_field_generics = jule::alloc_for_append(_140017_decl->_field_generics,1);_140017_decl->_field_generics.push(jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_23e730c0b_Token(),jule::Any(jule::new_struct<_23e45734a_IdentTypeDecl>(new( std::nothrow ) _23e45734a_IdentTypeDecl(_23e730c0b_Token(),_139254_i->_field_index.operator jule::Ptr<_23e45734a_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_23e45734a_TypeDecl>>()))))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_TupleExpr>>()) {
			_case_begin_5558891840:;
			{
				{
					auto &expr = _139254_i->_field_index.operator jule::Ptr<_23e45734a_TupleExpr>()->_field_expr;
					auto it = expr.begin();
					_iter_begin_5558897376:;
					if (it != expr.end()) {
						jule::Ptr<_23e45734a_Expr> _225aa4a5a_expr = *it;
						{
							{
								auto &_match_expr{ _225aa4a5a_expr->_field_kind };
								if (_match_expr.type_is<jule::Ptr<_23e45734a_TypeDecl>>()) {
									_case_begin_5558903840:;
									{
										_140017_decl->_field_generics = jule::alloc_for_append(_140017_decl->_field_generics,1);_140017_decl->_field_generics.push(_225aa4a5a_expr->_field_kind.operator jule::Ptr<_23e45734a_TypeDecl>());
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_23e45734a_IdentExpr>>()) {
									_case_begin_5558904384:;
									{
										_140017_decl->_field_generics = jule::alloc_for_append(_140017_decl->_field_generics,1);_140017_decl->_field_generics.push(jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_23e730c0b_Token(),jule::Any(jule::new_struct<_23e45734a_IdentTypeDecl>(new( std::nothrow ) _23e45734a_IdentTypeDecl(_23e730c0b_Token(),_225aa4a5a_expr->_field_kind.operator jule::Ptr<_23e45734a_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_23e45734a_TypeDecl>>()))))));
									}
								}
								_match_end_5558903936:;
							}
						}
						_iter_next_5558897376:;
						++it;
						goto _iter_begin_5558897376;
					}
					_iter_end_5558897376:;
				}
			}
		}
		else {
			_case_begin_5558886336:;
			{
				this->self->_method_push_err(_139254_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_5558889776:;
	}
	return this->self->_method_eval_type(jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_23e730c0b_Token(),jule::Any(_140017_decl))));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_indexing(jule::Ptr<_23e45734a_IndexingExpr> _144437_i) {
	jule::Ptr<_23e2b5818_TypeKind> _144517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_144517_prefix;
	});
	jule::Ptr<_225aa4a5a_Data> _144917_d = this->self->_method_eval_expr_kind(_144437_i->_field_expr);
	if (_144917_d == nullptr) {
		return nullptr;
	}
	if (_144917_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_144437_i);
	}
	_225aa4a5a_Data _145917_old_d = (*(_144917_d));
	jule::Ptr<_225aa4a5a_Data> _146117_index = this->self->_method_eval_expr_kind(_144437_i->_field_index);
	if (_146117_index == nullptr) {
		return nullptr;
	}
	_144917_d->_field_decl=false;
	this->self->_method_to_indexing(_144917_d,_146117_index,_144437_i);
	if (_144917_d->_method_is_const()) {
		_144917_d->_field_decl=false;
		_144917_d->_field_model=jule::Any(_144917_d->_field_constant);
	} else if (_144917_d->_field_decl) {
		_144917_d->_field_decl=false;
	} else {
		_144917_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_IndexigExprModel>(new( std::nothrow ) _2255b85b3_IndexigExprModel(jule::new_ptr<_225aa4a5a_Data>(_145917_old_d),_146117_index)));
	}
	return _144917_d;
}



inline std::tuple<jule::Ptr<_225aa4a5a_Data>,jule::Ptr<_225aa4a5a_Data>> _225aa4a5a_Eval::_method_eval_slicing_exprs(jule::Ptr<_23e45734a_SlicingExpr>& _149143_s) {
	jule::Ptr<_23e2b5818_TypeKind> _149217_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_149217_prefix;
	});
	jule::Ptr<_225aa4a5a_Data> _149617_l = nullptr;
	jule::Ptr<_225aa4a5a_Data> _149717_r = nullptr;
	if (_149143_s->_field_start != nullptr) {
		_149617_l=this->self->_method_eval_expr_kind(_149143_s->_field_start);
		if (_149617_l != nullptr) {
			this->self->_method_check_integer_indexing_by_data(_149617_l,_149143_s->_field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	} else {
		_149617_l=jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_226100d86_Const::_static_method_new_i64(0LL)));
		_149617_l->_field_model=jule::Any(_149617_l->_field_constant);
	}
	if (_149143_s->_field_to != nullptr) {
		_149717_r=this->self->_method_eval_expr_kind(_149143_s->_field_to);
		if (_149717_r != nullptr) {
			this->self->_method_check_integer_indexing_by_data(_149717_r,_149143_s->_field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	}
	return std::make_tuple(_149617_l,_149717_r);
}



inline void _225aa4a5a_Eval::_method_slicing_arr(jule::Ptr<_225aa4a5a_Data>& _152631_d) {
	jule::Ptr<_23e2b5818_TypeKind> _152717_elem_type = _152631_d->_field_kind->_method_arr()->_field_elem;
	_152631_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_23e2b5818_Slc>(new( std::nothrow ) _23e2b5818_Slc(_152717_elem_type))));
	_152631_d->_field_lvalue=false;
	_152631_d->_field_mutable=_152631_d->_field_mutable || (!(_152717_elem_type->_method_mutable()));
}



inline void _225aa4a5a_Eval::_method_slicing_slc(jule::Ptr<_225aa4a5a_Data>& _153731_d) {
	_153731_d->_field_lvalue=false;
}



inline void _225aa4a5a_Eval::_method_slicing_str(jule::Ptr<_225aa4a5a_Data>& _154131_d,jule::Ptr<_225aa4a5a_Data>& _154142_l,jule::Ptr<_225aa4a5a_Data>& _154153_r) {
	_154131_d->_field_lvalue=false;
	_154131_d->_field_mutable=true;
	if ((!(_154131_d->_method_is_const()))) {
		return;
	}
	if ((_154142_l == nullptr) || (_154153_r == nullptr)) {
		_154131_d->_field_constant=nullptr;
		return;
	}
	if (_154142_l->_method_is_const() && _154153_r->_method_is_const()) {
		jule::I64 _155417_left = _154142_l->_field_constant->_method_as_i64();
		if (_155417_left < 0LL) {
			return;
		}
		jule::Str _155917_s = _154131_d->_field_constant->_method_read_str();
		jule::I64 _156021_right = 0LL;
		if (_154153_r == nullptr) {
			_156021_right=static_cast<jule::I64>(_155917_s.len());
		} else {
			_156021_right=static_cast<jule::I64>(_154153_r->_field_constant->_method_as_i64());
		}
		if (_155417_left > _156021_right) {
			return;
		}
		_154131_d->_field_constant->_method_set_str(_155917_s.slice(_155417_left,_156021_right));
		_154131_d->_field_decl=true;
	} else {
		_154131_d->_field_constant=nullptr;
	}
}



inline void _225aa4a5a_Eval::_method_check_slicing(jule::Ptr<_225aa4a5a_Data>& _157737_d,jule::Ptr<_225aa4a5a_Data>& _157748_l,jule::Ptr<_225aa4a5a_Data>& _157759_r,jule::Ptr<_23e45734a_SlicingExpr>& _157770_s) {
	{
		if (_157737_d->_field_kind->_method_arr() != nullptr) {
			_case_begin_5558966208:;
			{
				(*this)._method_slicing_arr(_157737_d);
				return;
			}
		}
		else if (_157737_d->_field_kind->_method_slc() != nullptr) {
			_case_begin_5558966320:;
			{
				(*this)._method_slicing_slc(_157737_d);
				return;
			}
		}
		else if (_157737_d->_field_kind->_method_prim() != nullptr) {
			_case_begin_5558966432:;
			{
				jule::Ptr<_23e2b5818_Prim> _158817_prim = _157737_d->_field_kind->_method_prim();
				{
					if (_158817_prim->_method_is_str()) {
						_case_begin_5558973584:;
						{
							(*this)._method_slicing_str(_157737_d,_157748_l,_157759_r);
							return;
						}
					}
					_match_end_5558973440:;
				}
			}
		}
		_match_end_5558966032:;
	}
	(*this)._method_push_err(_157770_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_157737_d->_field_kind->_method_to_str())}));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_slicing(jule::Ptr<_23e45734a_SlicingExpr> _159936_s) {
	jule::Ptr<_225aa4a5a_Data> _160017_d = this->self->_method_eval_expr_kind(_159936_s->_field_expr);
	if (_160017_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_225aa4a5a_Data> _160518_l;
	jule::Ptr<_225aa4a5a_Data> _160525_r;
	std::tie(_160518_l,_160525_r) = this->self->_method_eval_slicing_exprs(_159936_s);
	if (_160518_l == nullptr) {
		return _160017_d;
	}
	_160017_d->_field_decl=false;
	this->self->_method_check_slicing(_160017_d,_160518_l,_160525_r,_159936_s);
	_160017_d->_field_cast_kind=nullptr;
	if (_160017_d->_method_is_const()) {
		_160017_d->_field_decl=false;
		_160017_d->_field_model=jule::Any(_160017_d->_field_constant);
	} else if (_160017_d->_field_decl) {
		_160017_d->_field_decl=false;
	} else {
		jule::Ptr<_2255b85b3_SlicingExprModel> _162421_model = jule::new_struct<_2255b85b3_SlicingExprModel>(new( std::nothrow ) _2255b85b3_SlicingExprModel(_160017_d->_field_model,_160518_l->_field_model,jule::Any()));
		if (_160525_r != nullptr) {
			_162421_model->_field_right=_160525_r->_field_model;
		}
		_160017_d->_field_model=jule::Any(_162421_model);
	}
	return _160017_d;
}



inline void _225aa4a5a_Eval::_method_cast_ptr(jule::Ptr<_23e2b5818_TypeKind> _163931_t,jule::Ptr<_225aa4a5a_Data> _163949_d,_23e730c0b_Token _163959_error_token) {
	jule::Ptr<_23e2b5818_Sptr> _164013_sptr = _163949_d->_field_kind->_method_sptr();
	if (_164013_sptr != nullptr) {
		if ((!(_163931_t->_method_ptr()->_field_elem->_method_equals(_164013_sptr->_field_elem)))) {
			(*this)._method_push_err(_163959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_163949_d->_field_kind->_method_to_str()),jule::Any(_163931_t->_method_to_str())}));
		}
		return;
	}
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_163959_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_23e2b5818_Prim> _165313_prim = _163949_d->_field_kind->_method_prim();
	if ((_163949_d->_field_kind->_method_ptr() == nullptr) && ((_165313_prim == nullptr) || (!(_2261088d8_is_int(_165313_prim->_method_to_str()))))) {
		(*this)._method_push_err(_163959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_163949_d->_field_kind->_method_to_str()),jule::Any(_163931_t->_method_to_str())}));
	}
	_163949_d->_field_constant=nullptr;
}



inline void _225aa4a5a_Eval::_method_cast_struct(jule::Ptr<_23e2b5818_TypeKind> _166134_t,jule::Ptr<_225aa4a5a_Data> _166152_d,_23e730c0b_Token _166162_error_token) {
	jule::Ptr<_2255ab70a_Trait> _166217_tr = _166152_d->_field_kind->_method_trt();
	if (_166217_tr == nullptr) {
		(*this)._method_push_err(_166162_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_166152_d->_field_kind->_method_to_str()),jule::Any(_166134_t->_method_to_str())}));
		return;
	}
	jule::Ptr<_225036509_StructIns> _166817_s = _166134_t->_method_strct();
	(*this)._method_push_reference_to_struct(_166817_s);
	if ((!(_166817_s->_field_decl->_method_is_implements(_166217_tr)))) {
		(*this)._method_push_err(_166162_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_166152_d->_field_kind->_method_to_str()),jule::Any(_166134_t->_method_to_str())}));
	}
}



inline void _225aa4a5a_Eval::_method_cast_ref(jule::Ptr<_23e2b5818_TypeKind> _167631_t,jule::Ptr<_225aa4a5a_Data> _167649_d,_23e730c0b_Token _167659_error_token) {
	jule::Ptr<_23e2b5818_Sptr> _167717_sptr = _167631_t->_method_sptr();
	jule::Ptr<_23e2b5818_Ptr> _167917_ptr = _167649_d->_field_kind->_method_ptr();
	if ((_167917_ptr != nullptr) && _167717_sptr->_field_elem->_method_equals(_167917_ptr->_field_elem)) {
		if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_167659_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		return;
	}
	if (_167717_sptr->_field_elem->_method_strct() != nullptr) {
		(*this)._method_cast_struct(_167717_sptr->_field_elem,_167649_d,_167659_error_token);
		return;
	}
	(*this)._method_push_err(_167659_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_167649_d->_field_kind->_method_to_str()),jule::Any(_167631_t->_method_to_str())}));
}



inline void _225aa4a5a_Eval::_method_cast_slc(jule::Ptr<_23e2b5818_TypeKind> _169831_t,jule::Ptr<_225aa4a5a_Data> _169849_d,_23e730c0b_Token _169859_error_token) {
	if (_169849_d->_field_kind->_method_enm() != nullptr) {
		if ((_169849_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim() == nullptr) || (!(_169849_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_169859_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_169849_d->_field_kind->_method_to_str()),jule::Any(_169831_t->_method_to_str())}));
			return;
		}
	} else if ((_169849_d->_field_kind->_method_prim() == nullptr) || (!(_169849_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_169859_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_169849_d->_field_kind->_method_to_str()),jule::Any(_169831_t->_method_to_str())}));
		return;
	}
	_169831_t=_169831_t->_method_slc()->_field_elem;
	jule::Ptr<_23e2b5818_Prim> _171013_prim = _169831_t->_method_prim();
	if ((_171013_prim == nullptr) || ((!(_171013_prim->_method_is_u8())) && (!(_171013_prim->_method_is_i32())))) {
		(*this)._method_push_err(_169859_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_169849_d->_field_kind->_method_to_str()),jule::Any(_169831_t->_method_to_str())}));
	}
}



inline void _225aa4a5a_Eval::_method_cast_str(jule::Ptr<_225aa4a5a_Data> _171631_d,_23e730c0b_Token _171641_error_token) {
	if (_171631_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_2255aae79_Enum> _171821_e = _171631_d->_field_kind->_method_enm();
		if ((_171821_e->_field_kind->_field_kind->_method_prim() != nullptr) && _171821_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (_171631_d->_field_kind->_method_prim() != nullptr) {
		jule::Ptr<_23e2b5818_Prim> _172517_prim = _171631_d->_field_kind->_method_prim();
		if ((!(_172517_prim->_method_is_u8())) && (!(_172517_prim->_method_is_i32()))) {
			(*this)._method_push_err(_171641_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_171631_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if (_171631_d->_field_kind->_method_slc() == nullptr) {
		(*this)._method_push_err(_171641_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_171631_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ptr<_23e2b5818_TypeKind> _173717_t = _171631_d->_field_kind->_method_slc()->_field_elem;
	jule::Ptr<_23e2b5818_Prim> _173813_prim = _173717_t->_method_prim();
	if ((_173813_prim == nullptr) || ((!(_173813_prim->_method_is_u8())) && (!(_173813_prim->_method_is_i32())))) {
		(*this)._method_push_err(_171641_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_171631_d->_field_kind->_method_to_str())}));
	}
}



inline void _225aa4a5a_Eval::_method_cast_int(jule::Ptr<_23e2b5818_TypeKind> _174431_t,jule::Ptr<_225aa4a5a_Data> _174449_d,_23e730c0b_Token _174459_error_token) {
	if (_174449_d->_method_is_const()) {
		jule::Ptr<_23e2b5818_Prim> _174617_prim = _174431_t->_method_prim();
		{
			if (_2261088d8_is_sig_int(_174617_prim->_field_kind)) {
				_case_begin_5559076608:;
				{
					_174449_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_174449_d->_field_constant->_method_as_i64()));
				}
			}
			else if (_2261088d8_is_unsig_int(_174617_prim->_field_kind)) {
				_case_begin_5559076720:;
				{
					_174449_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_174449_d->_field_constant->_method_as_u64()));
				}
			}
			_match_end_5559076448:;
		}
	}
	if (_174449_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_2255aae79_Enum> _175717_e = _174449_d->_field_kind->_method_enm();
		if (_2261088d8_is_num(_175717_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (_174449_d->_field_kind->_method_sptr() != nullptr) {
		jule::Ptr<_23e2b5818_Prim> _176417_prim = _174431_t->_method_prim();
		if ((!(_176417_prim->_method_is_uintptr()))) {
			(*this)._method_push_err(_174459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_174449_d->_field_kind->_method_to_str()),jule::Any(_174431_t->_method_to_str())}));
		}
		return;
	}
	if (_174449_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_23e2b5818_Prim> _177117_prim = _174431_t->_method_prim();
		if (_177117_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_174459_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if (((((!(_177117_prim->_method_is_i32())) && (!(_177117_prim->_method_is_i64()))) && (!(_177117_prim->_method_is_u16()))) && (!(_177117_prim->_method_is_u32()))) && (!(_177117_prim->_method_is_u64()))) {
			(*this)._method_push_err(_174459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_174449_d->_field_kind->_method_to_str()),jule::Any(_174431_t->_method_to_str())}));
		}
		return;
	}
	jule::Ptr<_23e2b5818_Prim> _178213_prim = _174449_d->_field_kind->_method_prim();
	if ((_178213_prim != nullptr) && _2261088d8_is_num(_178213_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_174459_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_174449_d->_field_kind->_method_to_str()),jule::Any(_174431_t->_method_to_str())}));
}



inline void _225aa4a5a_Eval::_method_cast_num(jule::Ptr<_23e2b5818_TypeKind> _179031_t,jule::Ptr<_225aa4a5a_Data> _179049_d,_23e730c0b_Token _179059_error_token) {
	if (_179049_d->_method_is_const()) {
		jule::Ptr<_23e2b5818_Prim> _179217_prim = _179031_t->_method_prim();
		{
			if (_2261088d8_is_float(_179217_prim->_field_kind)) {
				_case_begin_5559112096:;
				{
					_179049_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_179049_d->_field_constant->_method_as_f64()));
				}
			}
			else if (_2261088d8_is_sig_int(_179217_prim->_field_kind)) {
				_case_begin_5559112208:;
				{
					_179049_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_179049_d->_field_constant->_method_as_i64()));
				}
			}
			else if (_2261088d8_is_unsig_int(_179217_prim->_field_kind)) {
				_case_begin_5559112320:;
				{
					_179049_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_179049_d->_field_constant->_method_as_u64()));
				}
			}
			_match_end_5559111920:;
		}
	}
	if (_179049_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_2255aae79_Enum> _180617_e = _179049_d->_field_kind->_method_enm();
		if (_2261088d8_is_num(_180617_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ptr<_23e2b5818_Prim> _181213_prim = _179049_d->_field_kind->_method_prim();
	if ((_181213_prim != nullptr) && _2261088d8_is_num(_181213_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_179059_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_179049_d->_field_kind->_method_to_str()),jule::Any(_179031_t->_method_to_str())}));
}



inline void _225aa4a5a_Eval::_method_cast_prim(jule::Ptr<_23e2b5818_TypeKind> _182032_t,jule::Ptr<_225aa4a5a_Data> _182050_d,_23e730c0b_Token _182060_error_token) {
	jule::Ptr<_23e2b5818_Prim> _182113_prim = _182032_t->_method_prim();
	{
		if (_182113_prim->_method_is_any()) {
			_case_begin_5559131872:;
		}
		else if (_182113_prim->_method_is_str()) {
			_case_begin_5559131376:;
			{
				(*this)._method_cast_str(_182050_d,_182060_error_token);
			}
		}
		else if (_2261088d8_is_int(_182113_prim->_method_to_str())) {
			_case_begin_5559131472:;
			{
				(*this)._method_cast_int(_182032_t,_182050_d,_182060_error_token);
			}
		}
		else if (_2261088d8_is_num(_182113_prim->_method_to_str())) {
			_case_begin_5559131568:;
			{
				(*this)._method_cast_num(_182032_t,_182050_d,_182060_error_token);
			}
		}
		else {
			_case_begin_5559131072:;
			{
				(*this)._method_push_err(_182060_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_182032_t->_method_to_str())}));
			}
		}
		_match_end_5559130960:;
	}
}



inline void _225aa4a5a_Eval::_method_cast_constant(jule::Ptr<_23e2b5818_TypeKind>& _184037_t,jule::Ptr<_225aa4a5a_Data>& _184056_d) {
	jule::Ptr<_23e2b5818_Prim> _184113_prim = _184037_t->_method_prim();
	if ((_184113_prim == nullptr) || (!(_184056_d->_method_is_const()))) {
		return;
	}
	{
		if (_2261088d8_is_sig_int(_184113_prim->_field_kind)) {
			_case_begin_5559145232:;
			{
				_184056_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_184056_d->_field_constant->_method_as_i64()));
			}
		}
		else if (_2261088d8_is_unsig_int(_184113_prim->_field_kind)) {
			_case_begin_5559145328:;
			{
				_184056_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_184056_d->_field_constant->_method_as_u64()));
			}
		}
		else if (_2261088d8_is_float(_184113_prim->_field_kind)) {
			_case_begin_5559145424:;
			{
				_184056_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_184056_d->_field_constant->_method_as_f64()));
			}
		}
		_match_end_5559144112:;
	}
	_184056_d->_field_model=jule::Any(_184056_d->_field_constant);
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_cast_by_type_n_data(jule::Ptr<_23e2b5818_TypeKind> _186047_t,jule::Ptr<_225aa4a5a_Data> _186065_d,_23e730c0b_Token _186075_error_token) {
	{
		if ((_186065_d->_field_kind->_method_prim() != nullptr) && _186065_d->_field_kind->_method_prim()->_method_is_any()) {
			_case_begin_5559157008:;
			{
				if (_186047_t->_method_enm() != nullptr) {
					(*this)._method_push_err(_186075_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				}
			}
		}
		else if (_186047_t->_method_ptr() != nullptr) {
			_case_begin_5559158608:;
			{
				(*this)._method_cast_ptr(_186047_t,_186065_d,_186075_error_token);
			}
		}
		else if (_186047_t->_method_sptr() != nullptr) {
			_case_begin_5559156176:;
			{
				(*this)._method_cast_ref(_186047_t,_186065_d,_186075_error_token);
			}
		}
		else if (_186047_t->_method_slc() != nullptr) {
			_case_begin_5559156272:;
			{
				(*this)._method_cast_slc(_186047_t,_186065_d,_186075_error_token);
			}
		}
		else if (_186047_t->_method_strct() != nullptr) {
			_case_begin_5559156368:;
			{
				(*this)._method_cast_struct(_186047_t,_186065_d,_186075_error_token);
			}
		}
		else if (_186047_t->_method_prim() != nullptr) {
			_case_begin_5559156464:;
			{
				(*this)._method_cast_prim(_186047_t,_186065_d,_186075_error_token);
			}
		}
		else {
			_case_begin_5559155872:;
			{
				(*this)._method_push_err(_186075_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_186047_t->_method_to_str())}));
				_186065_d=nullptr;
			}
		}
		_match_end_5559155696:;
	}
	if (_186065_d == nullptr) {
		return nullptr;
	}
	_186065_d->_field_mutable=_186065_d->_field_mutable || ((!(_186065_d->_field_kind->_method_mutable())) && _186047_t->_method_mutable());
	_186065_d->_field_lvalue=false;
	_186065_d->_field_decl=false;
	(*this)._method_cast_constant(_186047_t,_186065_d);
	if ((_186065_d->_field_kind->_method_enm() == nullptr) || (!(_186065_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_equals(_186047_t)))) {
		_186065_d->_field_cast_kind=_186047_t;
	} else {
		_186065_d->_field_kind=_186047_t;
	}
	return _186065_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_cast(jule::Ptr<_23e45734a_CastExpr> _191033_c) {
	jule::Ptr<_23e2b5818_TypeSymbol> _191117_t = _22551ab31_build_type(_191033_c->_field_kind);
	jule::Bool _191213_ok = this->self->_field_s->_method_check_type(_191117_t,this->self->_field_lookup);
	if ((!(_191213_ok))) {
		return nullptr;
	}
	jule::Ptr<_23e2b5818_TypeKind> _191717_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_191717_prefix;
	});
	jule::Ptr<_225aa4a5a_Data> _192117_d = this->self->_method_eval_expr_kind(_191033_c->_field_expr);
	if (_192117_d == nullptr) {
		return nullptr;
	}
	_192117_d=this->self->_method_eval_cast_by_type_n_data(_191117_t->_field_kind,_192117_d,_191033_c->_field_kind->_field_token);
	return _192117_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_ns_selection(jule::Ptr<_23e45734a_NsSelectionExpr> _193136_s) {
	jule::Str _193213_path = _23e2b5818_build_link_path_by_tokens(_193136_s->_field_ns);
	jule::Ptr<_225615962_ImportInfo> _193317_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)>([=](jule::Ptr<_225615962_ImportInfo> _193353_p) mutable -> jule::Bool {
		if ((_193136_s->_field_ns.len() == 1LL) && (_193353_p->_field_alias == _193213_path)) {
			return true;
		}
		return _193353_p->_field_link_path == _193213_path;
	}));
	if ((_193317_imp == nullptr) || (!(_193317_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_193136_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_193213_path)}));
		return nullptr;
	}
	jule::Trait<_225e7723a_Lookup> _194517_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_193317_imp;
	
	jule::Any _194917_def = (*this)._method_get_def(_193136_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_194517_lookup;
	jule::Ptr<_225aa4a5a_Data> _195217_d = (*this)._method_eval_def(_194917_def,_193136_s->_field_ident);
	return _195217_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_struct_lit_explicit(jule::Ptr<_225036509_StructIns> _195748_s,jule::Slice<jule::Any> _195813_exprs,_23e730c0b_Token _195836_error_token) {
	jule::Bool _195913_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_195748_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_195748_s->_field_generics.len()),_195836_error_token);
	if ((!(_195913_ok))) {
		return nullptr;
	}
	this->self->_method_push_reference_to_struct(_195748_s);
	_22582290a_StructLitChecker _196717_slc = _22582290a_StructLitChecker(this->self,_195836_error_token,_195748_s,jule::Slice<jule::Ptr<_2255b85b3_StructArgExprModel>>());
	_196717_slc._method_check(_195813_exprs);
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_195748_s)),jule::Ptr<_23e2b5818_TypeKind>(),(!(this->self->_field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_StructLitExprModel>(new( std::nothrow ) _2255b85b3_StructLitExprModel(_195748_s,_196717_slc._field_args))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_struct_lit(jule::Ptr<_23e45734a_StructLit> _198439_lit) {
	jule::Ptr<_23e2b5818_TypeSymbol> _198517_t = _22551ab31_build_type(_198439_lit->_field_kind);
	jule::Bool _198613_ok = this->self->_field_s->_method_check_type(_198517_t,this->self->_field_lookup);
	if ((!(_198613_ok))) {
		return nullptr;
	}
	jule::Ptr<_225036509_StructIns> _199117_s = _198517_t->_field_kind->_method_strct();
	if (_199117_s == nullptr) {
		if (_198517_t->_field_kind->_method_sptr() != nullptr) {
			_199117_s=_198517_t->_field_kind->_method_sptr()->_field_elem->_method_strct();
			if (_199117_s != nullptr) {
				goto _julec_label_eval;
			}
		}
		this->self->_method_push_err(_198439_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_eval:;
	jule::Ptr<_225aa4a5a_Data> _200417_d = this->self->_method_eval_struct_lit_explicit(_199117_s,_198439_lit->_field_exprs,_198439_lit->_field_kind->_field_token);
	if (_198517_t->_field_kind->_method_sptr() != nullptr) {
		jule::Ptr<_2255b85b3_StructLitExprModel> _200621_model = _200417_d->_field_model.operator jule::Ptr<_2255b85b3_StructLitExprModel>();
		_225aa4a5a_make_struct_lit_alloc(_200417_d,_200621_model);
	}
	return _200417_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_type(jule::Ptr<_23e45734a_TypeDecl> _201232_t) {
	jule::Ptr<_23e2b5818_TypeSymbol> _201317_tk = _22551ab31_build_type(_201232_t);
	jule::Bool _201413_ok = (*this)._field_s->_method_check_type(_201317_tk,(*this)._field_lookup);
	if ((!(_201413_ok))) {
		return nullptr;
	}
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(_201317_tk->_field_kind,jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_201317_tk->_field_kind),true,jule::Ptr<_226100d86_Const>()));
}



inline void _225aa4a5a_Eval::_method_call_type_fn(jule::Ptr<_23e45734a_FnCallExpr>& _202637_fc,jule::Ptr<_225aa4a5a_Data>& _202659_d) {
	if (_202637_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_202637_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_202659_d->_field_kind->_method_to_str())}));
	} else if (_202637_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_202637_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_202637_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_202637_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	if (_202637_fc->_field_args.len() > 0LL) {
		jule::Ptr<_225aa4a5a_Data> _203621_arg = this->self->_method_eval_expr_kind(_202637_fc->_field_args[0LL]->_field_kind);
		if (_203621_arg != nullptr) {
			_202659_d=this->self->_method_eval_cast_by_type_n_data(_202659_d->_field_kind,_203621_arg,_202637_fc->_field_args[0LL]->_field_token);
		}
	}
	_202659_d->_field_decl=false;
}



inline std::tuple<jule::Bool,jule::Bool> _225aa4a5a_Eval::_method_check_fn_call_generics(jule::Ptr<_2252d6a73_FnIns> _204645_f,jule::Ptr<_23e45734a_FnCallExpr> _204713_fc) {
	jule::Bool _204732_ok = jule::Bool();
	jule::Bool _204742_dynamic_annotation = jule::Bool();
	{
		if (((_204645_f->_field_decl->_field_generics.len() > 0LL) && (_204713_fc->_field_generics.len() == 0LL)) && (_204645_f->_field_params.len() > 0LL)) {
			_case_begin_5559268416:;
			{
				_204742_dynamic_annotation=true;
				_204645_f->_field_generics=jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>::alloc(static_cast<jule::I64>(_204645_f->_field_decl->_field_generics.len()));
				_204732_ok = true;
				_204742_dynamic_annotation = true;
				return std::make_tuple(_204732_ok,_204742_dynamic_annotation);
			}
		}
		else if ((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_204645_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_204713_fc->_field_generics.len()),_204713_fc->_field_token)))) {
			_case_begin_5559268512:;
			{
				_204732_ok = false;
				_204742_dynamic_annotation = false;
				return std::make_tuple(_204732_ok,_204742_dynamic_annotation);
			}
		}
		else {
			_case_begin_5559261552:;
			{
				_204645_f->_field_generics=jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_204645_f->_field_decl->_field_generics.len()));
				{
					auto &expr = _204713_fc->_field_generics;
					auto it = expr.begin();
					_iter_begin_5559263488:;
					if (it != expr.end()) {
						jule::Ptr<_23e45734a_TypeDecl> _225aa4a5a_g = *it;
						{
							jule::Ptr<_23e2b5818_TypeSymbol> _206225_k = _22551ab31_build_type(_225aa4a5a_g);
							_204732_ok=(*this)._field_s->_method_check_type(_206225_k,(*this)._field_lookup);
							if ((!(_204732_ok))) {
								_204732_ok = false;
								_204742_dynamic_annotation = false;
								return std::make_tuple(_204732_ok,_204742_dynamic_annotation);
							}
							_204645_f->_field_generics = jule::alloc_for_append(_204645_f->_field_generics,1);_204645_f->_field_generics.push(_206225_k->_field_kind);
						}
						_iter_next_5559263488:;
						++it;
						goto _iter_begin_5559263488;
					}
					_iter_end_5559263488:;
				}
				_204732_ok = true;
				_204742_dynamic_annotation = false;
				return std::make_tuple(_204732_ok,_204742_dynamic_annotation);
			}
		}
		_match_end_5559261408:;
	}
}



inline void _225aa4a5a_Eval::_method_call_builtin_fn(jule::Ptr<_23e45734a_FnCallExpr>& _207440_fc,jule::Ptr<_225aa4a5a_Data>& _207462_d) {
	jule::Ptr<_2252d6a73_FnIns> _207517_f = _207462_d->_field_kind->_method_fnc();
	_207462_d=_207517_f->_field_caller(this->self,_207440_fc,_207462_d);
	if (_207462_d == nullptr) {
		return;
	}
	_207462_d->_field_mutable=true;
}



inline void _225aa4a5a_Eval::_method_check_fn_of_concurrent_call(jule::Ptr<_2252d6a73_FnIns>& _208547_f,_23e730c0b_Token _208558_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto &expr = _208547_f->_field_params;
		auto it = expr.begin();
		_iter_begin_5559285088:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_ParamIns> &_225aa4a5a_p = *it;
			{
				if (_225aa4a5a_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_208558_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;
				}
			}
			_iter_next_5559285088:;
			++it;
			goto _iter_begin_5559285088;
		}
		_iter_end_5559285088:;
	}
}



inline void _225aa4a5a_Eval::_method_process_exceptional_handler(jule::Ptr<_2252d6a73_FnIns>& _209851_f,jule::Ptr<_23e45734a_FnCallExpr>& _209867_fc,jule::Ptr<_225aa4a5a_Data>& _209889_d) {
	jule::Bool _209913_result_needed = (!(_209851_f->_field_decl->_method_is_void())) && (!((*this)._field_ignored));
	jule::Ptr<_2255ba3ea_ScopeChecker> _210017_csc = nullptr;
	jule::Ptr<_2255ba3ea_Scope> _210117_ch = nullptr;
	jule::Ptr<_2255b85b3_FnCallExprModel> _210317_model = _209889_d->_field_model.operator jule::Ptr<_2255b85b3_FnCallExprModel>();
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_22579574b_Sema>>()) {
			_case_begin_5559294880:;
			{
				jule::Ptr<_22579574b_Sema> _210721_s = (*this)._field_lookup.operator jule::Ptr<_22579574b_Sema>();
				_210017_csc=_2255ba3ea_new_scope_checker(_210721_s,nullptr);
				if (_209913_result_needed) {
					_210017_csc->_field_result=_209851_f->_field_result;
				}
				_210117_ch=jule::new_struct<_2255ba3ea_Scope>(new( std::nothrow ) _2255ba3ea_Scope());
				_210017_csc->_field_table->_field_vars = jule::alloc_for_append(_210017_csc->_field_table->_field_vars,1);_210017_csc->_field_table->_field_vars.push(_225aa4a5a_build_error_var(_210117_ch,_209867_fc));
				_210017_csc->_method_check(_209867_fc->_field_exception,_210117_ch);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ScopeChecker>>()) {
			_case_begin_5559295936:;
			{
				jule::Ptr<_2255ba3ea_ScopeChecker> _211721_sc = (*this)._field_lookup.operator jule::Ptr<_2255ba3ea_ScopeChecker>();
				_210017_csc=_211721_sc->_method_new_child_checker();
				if (_209913_result_needed) {
					_210017_csc->_field_result=_209851_f->_field_result;
				}
				_210117_ch=_211721_sc->_method_get_child();
				_210017_csc->_field_table->_field_vars = jule::alloc_for_append(_210017_csc->_field_table->_field_vars,1);_210017_csc->_field_table->_field_vars.push(_225aa4a5a_build_error_var(_210117_ch,_209867_fc));
				_211721_sc->_method_check_child_ssc(_209867_fc->_field_exception,_210117_ch,_210017_csc);
			}
		}
		_match_end_5559295664:;
	}
	_210317_model->_field_assigned=_209913_result_needed;
	_210317_model->_field_except=_210117_ch;
	if (_209913_result_needed && (_210017_csc->_field_result != nullptr)) {
		(*this)._method_push_err(_209867_fc->_field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	}
}



inline void _225aa4a5a_Eval::_method_call_fn(jule::Ptr<_23e45734a_FnCallExpr>& _213532_fc,jule::Ptr<_225aa4a5a_Data>& _213554_d) {
	jule::Ptr<_2252d6a73_FnIns> _213617_f = _213554_d->_field_kind->_method_fnc();
	if (_213617_f->_method_is_builtin()) {
		this->self->_method_call_builtin_fn(_213532_fc,_213554_d);
		return;
	}
	if ((((!(_213554_d->_field_mutable)) && _213617_f->_field_decl->_method_is_method()) && (!(_213617_f->_field_decl->_field_statically))) && _213617_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_213532_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	} else if ((!(this->self->_method_is_unsafe())) && _213617_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_213532_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	jule::Bool _214818_ok;
	jule::Bool _214822_dynamic_annotation;
	std::tie(_214818_ok,_214822_dynamic_annotation) = this->self->_method_check_fn_call_generics(_213617_f,_213532_fc);
	if ((!(_214818_ok))) {
		_213554_d=nullptr;
		return;
	}
	jule::Ptr<_22579574b_Sema> _215417_old = this->self->_field_s;
	if (_213617_f->_field_decl->_field_owner != nullptr) {
		this->self->_field_s=_213617_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if (_215417_old != this->self->_field_s) {
			_215417_old->_field_errors=jule::append(_215417_old->_field_errors,this->self->_field_s->_field_errors);
			this->self->_field_s->_field_errors=nullptr;
		}
		this->self->_field_s=_215417_old;
	});
	if ((!(_214822_dynamic_annotation))) {
		if ((!(_213617_f->_field_reloaded))) {
			_214818_ok=this->self->_field_s->_method_reload_fn_ins_types(_213617_f);
			if ((!(_214818_ok))) {
				_213554_d=nullptr;
				return;
			}
			_213617_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_213617_f);
	}
	_22582290a_FnCallArgChecker _218017_fcac = _22582290a_FnCallArgChecker(this->self,_213532_fc->_field_args,_213532_fc->_field_token,_213617_f,_214822_dynamic_annotation,jule::Slice<jule::Any>());
	if (_213617_f->_field_decl->_field_owner != nullptr) {
		std::tie(_215417_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_215417_old);
		_214818_ok=_218017_fcac._method_check();
		std::tie(_215417_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_215417_old);
	} else {
		_214818_ok=_218017_fcac._method_check();
	}
	if ((!(_214818_ok)) && _214822_dynamic_annotation) {
		_213554_d=nullptr;
		return;
	}
	jule::Bool _220014_is_unique_ins;
	jule::Int _220029_pos;
	std::tie(_220014_is_unique_ins,_220029_pos) = _213617_f->_field_decl->_method_append_instance(_213617_f);
	if ((!(_220014_is_unique_ins))) {
		_213617_f=_213617_f->_field_decl->_field_instances[_220029_pos];
	}
	jule::Any _220517_call_model = _213554_d->_field_model;
	if (_213617_f->_field_decl->_method_is_void()) {
		_213554_d=_225aa4a5a_build_void_data();
	} else {
		if (_214822_dynamic_annotation) {
			_214818_ok=this->self->_field_s->_method_reload_fn_ins_types(_213617_f);
			if ((!(_214818_ok))) {
				_213554_d=nullptr;
				return;
			}
			_213617_f->_field_reloaded=true;
		}
		_213554_d->_field_kind=_213617_f->_field_result;
		_213554_d->_field_lvalue=false;
	}
	_213554_d->_field_mutable=true;
	_213554_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_FnCallExprModel>(new( std::nothrow ) _2255b85b3_FnCallExprModel(_213532_fc->_field_token,_213617_f,jule::Bool(),_220517_call_model,_218017_fcac._field_arg_models,jule::Ptr<_2255ba3ea_Scope>(),jule::Bool())));
	if (_213617_f->_field_decl->_field_exceptional) {
		{
			if (_213532_fc->_method_unhandled()) {
				_case_begin_5559347840:;
				{
					this->self->_method_push_err(_213532_fc->_field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					this->self->_method_push_suggestion(jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_213532_fc->_method_ignored()) {
				_case_begin_5559347344:;
			}
			else {
				_case_begin_5559347040:;
				{
					this->self->_method_process_exceptional_handler(_213617_f,_213532_fc,_213554_d);
				}
			}
			_match_end_5559346864:;
		}
	} else if ((!(_213532_fc->_method_unhandled()))) {
		this->self->_method_push_err(_213532_fc->_field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	}
	if ((_213617_f->_field_generics.len() > 0LL) && _220014_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_213617_f);
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_fn_call(jule::Ptr<_23e45734a_FnCallExpr> _225336_fc) {
	jule::Ptr<_23e2b5818_TypeKind> _225417_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_225417_prefix;
	});
	{
		auto &_match_expr{ _225336_fc->_field_expr->_field_kind };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_IdentExpr>>()) {
			_case_begin_5559358912:;
			{
				if (_225336_fc->_field_expr->_field_token._field_kind == jule::Str("error", 5)) {
					return _22602dc1a_builtin_caller_error(this->self,_225336_fc);
				}
			}
		}
		_match_end_5559357792:;
	}
	jule::Ptr<_225aa4a5a_Data> _226717_d = this->self->_method_eval_expr_kind(_225336_fc->_field_expr->_field_kind);
	if (_226717_d == nullptr) {
		return nullptr;
	}
	if (_226717_d->_field_decl) {
		this->self->_method_call_type_fn(_225336_fc,_226717_d);
		return _226717_d;
	}
	if (_226717_d->_field_kind->_method_fnc() == nullptr) {
		this->self->_method_push_err(_225336_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	this->self->_method_call_fn(_225336_fc,_226717_d);
	return _226717_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_enum_static(jule::Ptr<_2255aae79_Enum> _228639_enm,_23e730c0b_Token _228651_ident) {
	jule::Ptr<_225aa4a5a_Data> _228717_d = jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_228639_enm)),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_226100d86_Const>()));
	jule::Ptr<_2255aae79_EnumItem> _229417_item = _228639_enm->_method_find_item(_228651_ident._field_kind);
	if (_229417_item == nullptr) {
		(*this)._method_push_err(_228651_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_228651_ident._field_kind)}));
	} else {
		_228717_d->_field_constant=jule::new_ptr<_226100d86_Const>((*(_229417_item->_field_value->_field_data->_field_constant)));
		_228717_d->_field_model=jule::Any(_228717_d->_field_constant);
	}
	return _228717_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_struct_static(jule::Ptr<_225036509_StructIns> _230541_s,_23e730c0b_Token _230556_ident) {
	jule::Ptr<_225aa4a5a_Data> _230617_d = jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::Ptr<_23e2b5818_TypeKind>(),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_226100d86_Const>()));
	
	jule::Ptr<_2252d6a73_Fn> _231417_method = _230541_s->_method_find_method(_230556_ident._field_kind,true);
	if (_231417_method != nullptr) {
		if ((!((*this)._field_s->_method_is_accessible_define(_231417_method->_field_public,_231417_method->_field_token)))) {
			(*this)._method_push_err(_230556_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_230556_ident._field_kind)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_2252d6a73_FnIns> _232121_ins = _231417_method->_method_instance();
		_232121_ins->_field_owner=_230541_s;
		(*this)._method_push_reference_to_fn(_232121_ins);
		_230617_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_StructStaticIdentExprModel>(new( std::nothrow ) _2255b85b3_StructStaticIdentExprModel(_230541_s,_230617_d->_field_model,_232121_ins)));
		_230617_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_232121_ins));
		return _230617_d;
	}
	jule::Ptr<_2258258db_Var> _233317_sttc = _230541_s->_field_decl->_method_find_static(_230556_ident._field_kind);
	if (_233317_sttc != nullptr) {
		return (*this)._method_eval_var(_233317_sttc,_230556_ident);
	}
	(*this)._method_push_err(_230556_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_230556_ident._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_trait_sub_ident(jule::Ptr<_225aa4a5a_Data> _234243_d,jule::Ptr<_2255ab70a_Trait> _234257_trt,_23e730c0b_Token _234270_ident) {
	jule::Ptr<_2252d6a73_Fn> _234317_f = _234257_trt->_method_find_method(_234270_ident._field_kind);
	if (_234317_f == nullptr) {
		(*this)._method_push_err(_234270_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_234270_ident._field_kind)}));
		return nullptr;
	}
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_234317_f->_method_instance())),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_TraitSubIdentExprModel>(new( std::nothrow ) _2255b85b3_TraitSubIdentExprModel(_234243_d->_field_model,_234270_ident._field_kind))),false,jule::Ptr<_226100d86_Const>()));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_struct_sub_ident(jule::Ptr<_225aa4a5a_Data> _236144_d,jule::Ptr<_225036509_StructIns> _236158_s,jule::Ptr<_23e45734a_SubIdentExpr> _236173_si,jule::Bool _236192_ref) {
	jule::Ptr<_225036509_FieldIns> _236217_f = _236158_s->_method_find_field(_236173_si->_field_ident._field_kind);
	if (_236217_f != nullptr) {
		if ((!((*this)._field_s->_method_is_accessible_define(_236217_f->_field_decl->_field_public,_236217_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_236173_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_236217_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_2255b85b3_StructSubIdentExprModel> _236921_model = jule::new_struct<_2255b85b3_StructSubIdentExprModel>(new( std::nothrow ) _2255b85b3_StructSubIdentExprModel(_236144_d->_field_model,_236144_d->_field_kind,jule::Ptr<_2252d6a73_FnIns>(),_236217_f));
		_236144_d->_field_model=jule::Any(_236921_model);
		_236144_d->_field_kind=_236217_f->_field_kind;
		_236144_d->_field_lvalue=true;
		if (_236217_f->_field_decl->_field_mutable && (!(_236144_d->_field_mutable))) {
			{
				auto &_match_expr{ (*this)._field_lookup };
				if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ScopeChecker>>()) {
					_case_begin_5559419168:;
					{
						jule::Ptr<_2255ba3ea_ScopeChecker> _238225_scope = (*this)._field_lookup.operator jule::Ptr<_2255ba3ea_ScopeChecker>()->_method_get_root();
						_236144_d->_field_mutable=(_238225_scope->_field_owner != nullptr) && (_238225_scope->_field_owner->_field_owner == _236158_s);
						if (_236144_d->_field_mutable) {
							jule::Ptr<_2258258db_Var> _238533_field = _236921_model->_field_expr.operator jule::Ptr<_2258258db_Var>();
							jule::Ptr<_2258258db_Var> _238633_v = jule::new_struct<_2258258db_Var>(new( std::nothrow ) _2258258db_Var(_238533_field->_field_scope,_238533_field->_field_token,_238533_field->_field_ident,_238533_field->_field_cpp_linked,_238533_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_238533_field->_field_kind,_238533_field->_field_value,jule::Ptr<_22551ab31_ReferenceStack>(),jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Ptr<_2258258db_IterRelation>(),jule::Slice<jule::Ptr<_2258258db_Var>>()));
							_238633_v->_field_mutable=true;
							_236921_model->_field_expr=jule::Any(_238633_v);
						}
					}
				}
				_match_end_5559419328:;
			}
		}
		return _236144_d;
	}
	
	jule::Ptr<_2252d6a73_Fn> _240517_m = _236158_s->_method_find_method(_236173_si->_field_ident._field_kind,false);
	if (_240517_m == nullptr) {
		(*this)._method_push_err(_236173_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_236173_si->_field_ident._field_kind)}));
		return nullptr;
	}
	if (_240517_m->_field_params[0LL]->_method_is_ref() && (!(_236192_ref))) {
		(*this)._method_push_err(_236173_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	}
	jule::Ptr<_2252d6a73_FnIns> _241517_ins = _240517_m->_method_instance();
	_241517_ins->_field_owner=_236158_s;
	(*this)._method_push_reference_to_fn(_241517_ins);
	_236144_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_StructSubIdentExprModel>(new( std::nothrow ) _2255b85b3_StructSubIdentExprModel(_236144_d->_field_model,_236144_d->_field_kind,_241517_ins,jule::Ptr<_225036509_FieldIns>())));
	_236144_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_241517_ins));
	return _236144_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_slice_sub_ident(jule::Ptr<_225aa4a5a_Data> _242743_d,_23e730c0b_Token _242753_ident) {
	{
		auto &_match_expr{ _242753_ident._field_kind };
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_5559443744:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_242743_d->_field_kind,_242743_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_5559443936:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_242743_d->_field_kind,_242743_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5559440784:;
			{
				(*this)._method_push_err(_242753_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_242753_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559441104:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_array_sub_ident(jule::Ptr<_225aa4a5a_Data> _245743_d,_23e730c0b_Token _245753_ident) {
	{
		auto &_match_expr{ _245753_ident._field_kind };
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_5559453200:;
			{
				jule::Ptr<_226100d86_Const> _246021_c = _226100d86_Const::_static_method_new_i64(static_cast<jule::I64>(_245743_d->_field_kind->_method_arr()->_field_n));
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_246021_c),jule::Bool(),_246021_c));
			}
		}
		else {
			_case_begin_5559451728:;
			{
				(*this)._method_push_err(_245753_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_245753_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559452048:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_map_sub_ident(jule::Ptr<_225aa4a5a_Data> _247441_d,_23e730c0b_Token _247451_ident) {
	jule::Ptr<_23e2b5818_Map> _247517_map_kind = _247441_d->_field_kind->_method_map();
	{
		auto &_match_expr{ _247451_ident._field_kind };
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_5559462736:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_247441_d->_field_kind,_247441_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_5559464720:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>(),jule::Ptr<_23e2b5818_TypeKind>(),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),_247441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_247441_d->_field_kind,_247441_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_5559464816:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>(),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_23e2b5818_Slc>(new( std::nothrow ) _23e2b5818_Slc(_247517_map_kind->_field_key)))),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),_247441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_247441_d->_field_kind,_247441_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_5559464256:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>(),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_23e2b5818_Slc>(new( std::nothrow ) _23e2b5818_Slc(_247517_map_kind->_field_val)))),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),_247441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_247441_d->_field_kind,_247441_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_5559464352:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("key", 3))),_247517_map_kind->_field_key))}),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),_247441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_247441_d->_field_kind,_247441_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_5559462240:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("key", 3))),_247517_map_kind->_field_key))}),jule::Ptr<_23e2b5818_TypeKind>(),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),_247441_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_247441_d->_field_kind,_247441_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5559460976:;
			{
				(*this)._method_push_err(_247451_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_247451_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559461952:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_str_sub_ident(jule::Ptr<_225aa4a5a_Data> _259741_d,_23e730c0b_Token _259751_ident) {
	jule::Ptr<_23e2b5818_TypeKind> _259817_str_kind = jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("str", 3))));
	{
		auto &_match_expr{ _259751_ident._field_kind };
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_5559490608:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_259741_d->_field_kind,_259741_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has_prefix", 10)) {
			_case_begin_5559492400:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("sub", 3))),_259817_str_kind))}),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_259741_d->_field_kind,_259741_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has_suffix", 10)) {
			_case_begin_5559492128:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("sub", 3))),_259817_str_kind))}),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_259741_d->_field_kind,_259741_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("find", 4)) {
			_case_begin_5559492224:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("sub", 3))),_259817_str_kind))}),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_259741_d->_field_kind,_259741_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("rfind", 5)) {
			_case_begin_5559490112:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("sub", 3))),_259817_str_kind))}),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_259741_d->_field_kind,_259741_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("trim", 4)) {
			_case_begin_5559490208:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("bytes", 5))),_259817_str_kind))}),_259817_str_kind,jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_259741_d->_field_kind,_259741_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("ltrim", 5)) {
			_case_begin_5559490304:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("bytes", 5))),_259817_str_kind))}),_259817_str_kind,jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_259741_d->_field_kind,_259741_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("rtrim", 5)) {
			_case_begin_5559490400:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("bytes", 5))),_259817_str_kind))}),_259817_str_kind,jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_259741_d->_field_kind,_259741_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("split", 5)) {
			_case_begin_5559492816:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("sub", 3))),_259817_str_kind)),jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_23e2b5818_Slc>(new( std::nothrow ) _23e2b5818_Slc(_259817_str_kind)))),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_259741_d->_field_kind,_259741_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("replace", 7)) {
			_case_begin_5559492912:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("sub", 3))),_259817_str_kind)),jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("new", 3))),_259817_str_kind)),jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3))))))}),_259817_str_kind,jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_CommonSubIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonSubIdentExprModel(_259741_d->_field_kind,_259741_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5559488384:;
			{
				(*this)._method_push_err(_259751_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_259751_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559489824:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_int_type_static(_23e730c0b_Token _284639_ident) {
	
	{
		auto &_match_expr{ _284639_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559538704:;
			{
				jule::Ptr<_226100d86_Const> _285121_c = _226100d86_Const::_static_method_new_i64(static_cast<jule::I64>(_226108454_max(jule::Str("int", 3))));
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_285121_c),jule::Bool(),_285121_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_5559538800:;
			{
				jule::Ptr<_226100d86_Const> _285921_c = _226100d86_Const::_static_method_new_i64(static_cast<jule::I64>(_226108454_min(jule::Str("int", 3))));
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_285921_c),jule::Bool(),_285921_c));
			}
		}
		else {
			_case_begin_5559534848:;
			{
				(*this)._method_push_err(_284639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_284639_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559535536:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_uint_type_static(_23e730c0b_Token _287240_ident) {
	
	{
		auto &_match_expr{ _287240_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559566576:;
			{
				jule::Ptr<_226100d86_Const> _287721_c = _226100d86_Const::_static_method_new_u64(static_cast<jule::U64>(_226108454_max(jule::Str("uint", 4))));
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287721_c),jule::Bool(),_287721_c));
			}
		}
		else {
			_case_begin_5559547168:;
			{
				(*this)._method_push_err(_287240_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_287240_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559547856:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_i8_type_static(_23e730c0b_Token _289038_ident) {
	
	
	
	{
		auto &_match_expr{ _289038_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559577312:;
			{
				jule::Ptr<_226100d86_Const> _289721_c = _226100d86_Const::_static_method_new_i64(127LL);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_289721_c),jule::Bool(),_289721_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_5559577408:;
			{
				jule::Ptr<_226100d86_Const> _290521_c = _226100d86_Const::_static_method_new_i64(-128LL);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_290521_c),jule::Bool(),_290521_c));
			}
		}
		else {
			_case_begin_5559573008:;
			{
				(*this)._method_push_err(_289038_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_289038_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559574288:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_i16_type_static(_23e730c0b_Token _291839_ident) {
	
	
	
	{
		auto &_match_expr{ _291839_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559590496:;
			{
				jule::Ptr<_226100d86_Const> _292521_c = _226100d86_Const::_static_method_new_i64(32767LL);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_292521_c),jule::Bool(),_292521_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_5559590592:;
			{
				jule::Ptr<_226100d86_Const> _293321_c = _226100d86_Const::_static_method_new_i64(-32768LL);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_293321_c),jule::Bool(),_293321_c));
			}
		}
		else {
			_case_begin_5559586192:;
			{
				(*this)._method_push_err(_291839_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_291839_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559587472:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_i32_type_static(_23e730c0b_Token _294639_ident) {
	
	
	
	{
		auto &_match_expr{ _294639_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559604320:;
			{
				jule::Ptr<_226100d86_Const> _295321_c = _226100d86_Const::_static_method_new_i64(2147483647LL);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_295321_c),jule::Bool(),_295321_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_5559604416:;
			{
				jule::Ptr<_226100d86_Const> _296121_c = _226100d86_Const::_static_method_new_i64(-2147483648LL);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_296121_c),jule::Bool(),_296121_c));
			}
		}
		else {
			_case_begin_5559600016:;
			{
				(*this)._method_push_err(_294639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_294639_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559601296:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_i64_type_static(_23e730c0b_Token _297439_ident) {
	
	
	
	{
		auto &_match_expr{ _297439_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559617376:;
			{
				jule::Ptr<_226100d86_Const> _298121_c = _226100d86_Const::_static_method_new_i64(jule::MAX_I64);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_298121_c),jule::Bool(),_298121_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_5559617472:;
			{
				jule::Ptr<_226100d86_Const> _298921_c = _226100d86_Const::_static_method_new_i64(jule::MIN_I64);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_298921_c),jule::Bool(),_298921_c));
			}
		}
		else {
			_case_begin_5559614224:;
			{
				(*this)._method_push_err(_297439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_297439_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559614368:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_u8_type_static(_23e730c0b_Token _300238_ident) {
	
	
	{
		auto &_match_expr{ _300238_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559629584:;
			{
				jule::Ptr<_226100d86_Const> _300821_c = _226100d86_Const::_static_method_new_u64(255LLU);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("u8", 2)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_300821_c),jule::Bool(),_300821_c));
			}
		}
		else {
			_case_begin_5559625136:;
			{
				(*this)._method_push_err(_300238_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_300238_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559626496:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_u16_type_static(_23e730c0b_Token _302139_ident) {
	
	
	{
		auto &_match_expr{ _302139_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559638848:;
			{
				jule::Ptr<_226100d86_Const> _302721_c = _226100d86_Const::_static_method_new_u64(65535LLU);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("u16", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_302721_c),jule::Bool(),_302721_c));
			}
		}
		else {
			_case_begin_5559634400:;
			{
				(*this)._method_push_err(_302139_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_302139_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559635760:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_u32_type_static(_23e730c0b_Token _304039_ident) {
	
	
	{
		auto &_match_expr{ _304039_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559648112:;
			{
				jule::Ptr<_226100d86_Const> _304621_c = _226100d86_Const::_static_method_new_u64(4294967295LLU);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("u32", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_304621_c),jule::Bool(),_304621_c));
			}
		}
		else {
			_case_begin_5559643664:;
			{
				(*this)._method_push_err(_304039_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_304039_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559645024:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_u64_type_static(_23e730c0b_Token _305939_ident) {
	
	
	{
		auto &_match_expr{ _305939_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559657312:;
			{
				jule::Ptr<_226100d86_Const> _306521_c = _226100d86_Const::_static_method_new_u64(jule::MAX_U64);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("u64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_306521_c),jule::Bool(),_306521_c));
			}
		}
		else {
			_case_begin_5559652928:;
			{
				(*this)._method_push_err(_305939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_305939_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559654224:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_f32_type_tatic(_23e730c0b_Token _307838_ident) {
	
	
	
	{
		auto &_match_expr{ _307838_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559667360:;
			{
				jule::Ptr<_226100d86_Const> _308521_c = _226100d86_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_308521_c),jule::Bool(),_308521_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_5559667456:;
			{
				jule::Ptr<_226100d86_Const> _309321_c = _226100d86_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_309321_c),jule::Bool(),_309321_c));
			}
		}
		else {
			_case_begin_5559663216:;
			{
				(*this)._method_push_err(_307838_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_307838_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559664336:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_f64_type_static(_23e730c0b_Token _310639_ident) {
	
	
	
	{
		auto &_match_expr{ _310639_ident._field_kind };
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_5559680096:;
			{
				jule::Ptr<_226100d86_Const> _311321_c = _226100d86_Const::_static_method_new_f64(jule::MAX_F64);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_311321_c),jule::Bool(),_311321_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_5559680192:;
			{
				jule::Ptr<_226100d86_Const> _312121_c = _226100d86_Const::_static_method_new_f64(jule::MIN_F64);
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_312121_c),jule::Bool(),_312121_c));
			}
		}
		else {
			_case_begin_5559676048:;
			{
				(*this)._method_push_err(_310639_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_310639_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559677072:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_prim_static(jule::Str _313435_kind,_23e730c0b_Token _313446_ident) {
	{
		auto &_match_expr{ _313435_kind };
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_5559691120:;
			{
				return (*this)._method_eval_int_type_static(_313446_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_5559691216:;
			{
				return (*this)._method_eval_uint_type_static(_313446_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_5559690736:;
			{
				return (*this)._method_eval_i8_type_static(_313446_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_5559690832:;
			{
				return (*this)._method_eval_i16_type_static(_313446_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_5559690928:;
			{
				return (*this)._method_eval_i32_type_static(_313446_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_5559688560:;
			{
				return (*this)._method_eval_i64_type_static(_313446_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_5559688656:;
			{
				return (*this)._method_eval_u8_type_static(_313446_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_5559688752:;
			{
				return (*this)._method_eval_u16_type_static(_313446_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_5559688848:;
			{
				return (*this)._method_eval_u32_type_static(_313446_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_5559691344:;
			{
				return (*this)._method_eval_u64_type_static(_313446_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_5559691440:;
			{
				return (*this)._method_eval_f32_type_tatic(_313446_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_5559691536:;
			{
				return (*this)._method_eval_f64_type_static(_313446_ident);
			}
		}
		else {
			_case_begin_5559687968:;
			{
				(*this)._method_push_err(_313446_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_313435_kind),jule::Any(_313446_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559688064:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_type_static(jule::Ptr<_225aa4a5a_Data> _315439_d,jule::Ptr<_23e45734a_SubIdentExpr> _315453_si) {
	{
		if (_315439_d->_field_kind->_method_prim() != nullptr) {
			_case_begin_5559711936:;
			{
				return (*this)._method_eval_prim_static(_315439_d->_field_kind->_method_prim()->_method_to_str(),_315453_si->_field_ident);
			}
		}
		else if (_315439_d->_field_kind->_method_enm() != nullptr) {
			_case_begin_5559712128:;
			{
				return (*this)._method_eval_enum_static(_315439_d->_field_kind->_method_enm(),_315453_si->_field_ident);
			}
		}
		else if (_315439_d->_field_kind->_method_strct() != nullptr) {
			_case_begin_5559712224:;
			{
				return (*this)._method_eval_struct_static(_315439_d->_field_kind->_method_strct(),_315453_si->_field_ident);
			}
		}
		else {
			_case_begin_5559708912:;
			{
				(*this)._method_push_err(_315453_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_315439_d->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_5559708768:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_obj_sub_ident(jule::Ptr<_225aa4a5a_Data> _317141_d,jule::Ptr<_23e45734a_SubIdentExpr> _317155_si) {
	jule::Ptr<_23e2b5818_TypeKind> _317217_kind = _317141_d->_field_kind;
	if (_317141_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_23e2b5818_Ptr> _317417_ptr = _317141_d->_field_kind->_method_ptr();
		if ((!(_317417_ptr->_method_is_unsafe()))) {
			if ((!(_317155_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_317155_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
			_317217_kind=_317141_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (_317141_d->_field_kind->_method_sptr() != nullptr) {
		_317217_kind=_317141_d->_field_kind->_method_sptr()->_field_elem;
	}
	{
		if (_317141_d->_field_kind->_method_trt() != nullptr) {
			_case_begin_5559729664:;
			{
				return (*this)._method_eval_trait_sub_ident(_317141_d,_317141_d->_field_kind->_method_trt(),_317155_si->_field_ident);
			}
		}
		else if (_317217_kind->_method_strct() != nullptr) {
			_case_begin_5559729760:;
			{
				jule::Ptr<_225036509_StructIns> _319017_s = _317217_kind->_method_strct();
				if (_225aa4a5a_is_instanced_struct(_319017_s)) {
					jule::Bool _319225_used_reference_elem = _317141_d->_field_kind->_method_sptr() != nullptr;
					return (*this)._method_eval_struct_sub_ident(_317141_d,_317217_kind->_method_strct(),_317155_si,_319225_used_reference_elem);
				}
			}
		}
		else if (_317217_kind->_method_slc() != nullptr) {
			_case_begin_5559729856:;
			{
				return (*this)._method_eval_slice_sub_ident(_317141_d,_317155_si->_field_ident);
			}
		}
		else if (_317217_kind->_method_arr() != nullptr) {
			_case_begin_5559729952:;
			{
				return (*this)._method_eval_array_sub_ident(_317141_d,_317155_si->_field_ident);
			}
		}
		else if (_317217_kind->_method_map() != nullptr) {
			_case_begin_5559730048:;
			{
				return (*this)._method_eval_map_sub_ident(_317141_d,_317155_si->_field_ident);
			}
		}
		else if (_317217_kind->_method_prim() != nullptr) {
			_case_begin_5559730144:;
			{
				jule::Ptr<_23e2b5818_Prim> _320617_p = _317217_kind->_method_prim();
				{
					auto &_match_expr{ _320617_p->_field_kind };
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_5559740240:;
						{
							return (*this)._method_eval_str_sub_ident(_317141_d,_317155_si->_field_ident);
						}
					}
					_match_end_5559745632:;
				}
			}
		}
		_match_end_5559729376:;
	}
	(*this)._method_push_err(_317155_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_317141_d->_field_kind->_method_to_str())}));
	return nullptr;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_sub_ident(jule::Ptr<_23e45734a_SubIdentExpr> _321738_si) {
	jule::Ptr<_23e2b5818_TypeKind> _321817_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_321817_prefix;
	});
	jule::Ptr<_225aa4a5a_Data> _322217_d = this->self->_method_eval_expr_kind(_321738_si->_field_expr);
	if (_322217_d == nullptr) {
		return nullptr;
	}
	if (_322217_d->_field_decl) {
		return this->self->_method_eval_type_static(_322217_d,_321738_si);
	}
	return this->self->_method_eval_obj_sub_ident(_322217_d,_321738_si);
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_tuple(jule::Ptr<_23e45734a_TupleExpr> _323434_tup) {
	jule::Ptr<_23e2b5818_Tuple> _323517_tup_t = jule::new_struct_ptr<_23e2b5818_Tuple>(new( std::nothrow ) _23e2b5818_Tuple());
	_323517_tup_t->_field_types=jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_323434_tup->_field_expr.len()));
	jule::Ptr<_2255b85b3_TupleExprModel> _323817_model = jule::new_struct<_2255b85b3_TupleExprModel>(new( std::nothrow ) _2255b85b3_TupleExprModel(jule::Slice<jule::Ptr<_225aa4a5a_Data>>::alloc(0LL,static_cast<jule::I64>(_323434_tup->_field_expr.len()))));
	jule::Bool _324217_ok = true;
	{
		auto &expr = _323434_tup->_field_expr;
		auto it = expr.begin();
		_iter_begin_5559764320:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_Expr> _225aa4a5a_expr = *it;
			{
				jule::Ptr<_225aa4a5a_Data> _324421_d = this->self->_method_eval_expr_kind(_225aa4a5a_expr->_field_kind);
				if (_324421_d == nullptr) {
					_324217_ok=false;
					goto _iter_next_5559764320;
				}
				_323517_tup_t->_field_types = jule::alloc_for_append(_323517_tup_t->_field_types,1);_323517_tup_t->_field_types.push(_324421_d->_field_kind);
				_323817_model->_field_datas = jule::alloc_for_append(_323817_model->_field_datas,1);_323817_model->_field_datas.push(_324421_d);
			}
			_iter_next_5559764320:;
			++it;
			goto _iter_begin_5559764320;
		}
		_iter_end_5559764320:;
	}
	if ((!(_324217_ok))) {
		return nullptr;
	}
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_323517_tup_t)),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_323817_model),jule::Bool(),jule::Ptr<_226100d86_Const>()));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_map(jule::Ptr<_23e2b5818_Map> _326332_m,jule::Ptr<_23e45734a_BraceLit> _326345_lit) {
	jule::Ptr<_2255b85b3_MapExprModel> _326417_model = jule::new_struct<_2255b85b3_MapExprModel>(new( std::nothrow ) _2255b85b3_MapExprModel(_326332_m->_field_key,_326332_m->_field_val,jule::Slice<jule::Ptr<_2255b85b3_KeyValPairExprModel>>()));
	{
		auto &expr = _326345_lit->_field_exprs;
		auto it = expr.begin();
		_iter_begin_5559774768:;
		if (it != expr.end()) {
			jule::Any _225aa4a5a_expr = *it;
			{
				{
					auto &_match_expr{ _225aa4a5a_expr };
					if (_match_expr.type_is<jule::Ptr<_23e45734a_KeyValPair>>()) {
						_case_begin_5559777344:;
					}
					else {
						_case_begin_5559775984:;
						{
							this->self->_method_push_err(_326345_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_5559776304:;
				}
				jule::Ptr<_23e45734a_KeyValPair> _327921_pair = _225aa4a5a_expr.operator jule::Ptr<_23e45734a_KeyValPair>();
				jule::Ptr<_225aa4a5a_Data> _328121_key = this->self->_method_eval_expr_kind(_327921_pair->_field_key);
				if (_328121_key == nullptr) {
					return nullptr;
				}
				jule::Ptr<_225aa4a5a_Data> _328621_val = this->self->_method_eval_expr_kind(_327921_pair->_field_val);
				if (_328621_val == nullptr) {
					return nullptr;
				}
				this->self->_field_s->_method_check_assign_type(false,_326332_m->_field_key,_328121_key,_327921_pair->_field_colon);
				this->self->_field_s->_method_check_assign_type(false,_326332_m->_field_val,_328621_val,_327921_pair->_field_colon);
				_326417_model->_field_entries = jule::alloc_for_append(_326417_model->_field_entries,1);_326417_model->_field_entries.push(jule::new_struct<_2255b85b3_KeyValPairExprModel>(new( std::nothrow ) _2255b85b3_KeyValPairExprModel(_328121_key->_field_model,_328621_val->_field_model)));
			}
			_iter_next_5559774768:;
			++it;
			goto _iter_begin_5559774768;
		}
		_iter_end_5559774768:;
	}
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_326332_m)),jule::Ptr<_23e2b5818_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_326417_model),jule::Bool(),jule::Ptr<_226100d86_Const>()));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_brace_lit(jule::Ptr<_23e45734a_BraceLit> _330738_lit) {
	{
		if (this->self->_field_prefix == nullptr) {
			_case_begin_5559792272:;
			{
				this->self->_method_push_err(_330738_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if (this->self->_field_prefix->_method_map() != nullptr) {
			_case_begin_5559792464:;
			{
				return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_330738_lit);
			}
		}
		else if (this->self->_field_prefix->_method_strct() != nullptr) {
			_case_begin_5559792560:;
			{
				return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_330738_lit->_field_exprs,_330738_lit->_field_token);
			}
		}
		else {
			_case_begin_5559789872:;
			{
				this->self->_method_push_err(_330738_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_5559789696:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_anon_fn(jule::Ptr<_23e45734a_FnDecl> _332535_decl) {
	_23e2b5818_TypeChecker _332617_tc = _23e2b5818_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ptr<_23e2b5818_Referencer>(),_23e730c0b_Token(),jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>(),jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>(),jule::Bool());
	jule::Ptr<_2252d6a73_FnIns> _333017_ins = _332617_tc._method_build_fn(_332535_decl);
	_333017_ins->_field_anon=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ScopeChecker>>()) {
			_case_begin_5559804896:;
			{
				jule::Ptr<_2255ba3ea_ScopeChecker> _333521_sc = (*this)._field_lookup.operator jule::Ptr<_2255ba3ea_ScopeChecker>();
				jule::Ptr<_2255ba3ea_ScopeChecker> _333621_scc = _333521_sc->_method_new_child_checker();
				_333621_scc->_field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeLabel>>>(nullptr);
				_333621_scc->_field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeGoto>>>(nullptr);
				_333621_scc->_field_owner=nullptr;
				_333621_scc->_field_child_index=0LL;
				_333621_scc->_field_it=0LL;
				_333621_scc->_field_cse=0LL;
				_333621_scc->_field_owner=_333017_ins;
				(*this)._field_s->_method_check_fn_ins_sc(_333017_ins,_333621_scc);
			}
		}
		else {
			_case_begin_5559801552:;
			{
				(*this)._field_s->_method_check_fn_ins(_333017_ins);
			}
		}
		_match_end_5559804304:;
	}
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_333017_ins)),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_AnonFnExprModel>(new( std::nothrow ) _2255b85b3_AnonFnExprModel(_333017_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_binop(jule::Ptr<_23e45734a_BinopExpr> _335934_op) {
	jule::Ptr<_23e2b5818_TypeKind> _336017_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_336017_prefix;
	});
	_225aa4a5a_BinopSolver _336417_bs = _225aa4a5a_BinopSolver(this->self,jule::Ptr<_225aa4a5a_Data>(),jule::Ptr<_225aa4a5a_Data>(),_23e730c0b_Token());
	return _336417_bs._method_solve(_335934_op);
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_ternary(jule::Ptr<_23e45734a_TernaryExpr> _337036_ter) {
	jule::Ptr<_225aa4a5a_Data> _337117_d = this->self->_method_eval_expr_kind(_337036_ter->_field_condition);
	if (_337117_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_23e2b5818_Prim> _337613_prim = _337117_d->_field_kind->_method_prim();
	if ((_337613_prim == nullptr) || (!(_337613_prim->_method_is_bool()))) {
		this->self->_method_push_err(_337036_ter->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_225aa4a5a_Data> _338217_td = this->self->_method_eval_expr_kind(_337036_ter->_field_true_expr);
	if (_338217_td == nullptr) {
		return nullptr;
	}
	if (_338217_td->_field_kind->_method_void()) {
		this->self->_method_push_err(_337036_ter->_field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_23e2b5818_TypeKind> _339217_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_338217_td->_field_kind;
	jule::Ptr<_225aa4a5a_Data> _339517_fd = this->self->_method_eval_expr_kind(_337036_ter->_field_false_expr);
	this->self->_field_prefix=_339217_prefix;
	if (_339517_fd == nullptr) {
		return nullptr;
	}
	_22582290a_AssignTypeChecker _340217_ac = _22582290a_AssignTypeChecker(this->self->_field_s,jule::Ptr<_23e2b5818_TypeKind>(),jule::Ptr<_225aa4a5a_Data>(),_337036_ter->_field_token);
	if (_338217_td->_method_is_const() && (!(_339517_fd->_method_is_const()))) {
		_340217_ac._field_dest=_339517_fd->_field_kind;
		_340217_ac._field_d=_338217_td;
	} else {
		_340217_ac._field_dest=_338217_td->_field_kind;
		_340217_ac._field_d=_339517_fd;
	}
	if ((!(_340217_ac._method_check()))) {
		this->self->_method_push_suggestion(jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>());
	}
	if (_337117_d->_method_is_const()) {
		if (_337117_d->_field_constant->_method_read_bool()) {
			return _338217_td;
		}
		return _339517_fd;
	}
	jule::Ptr<_225aa4a5a_Data> _342417_r = jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data());
	_342417_r->_field_kind=_340217_ac._field_dest;
	_342417_r->_field_lvalue=false;
	_342417_r->_field_mutable=_342417_r->_field_kind->_method_mutable();
	_342417_r->_field_model=jule::Any(jule::new_struct<_2255b85b3_TernaryExprModel>(new( std::nothrow ) _2255b85b3_TernaryExprModel(_337117_d->_field_model,_338217_td->_field_model,_339517_fd->_field_model)));
	return _342417_r;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_expr_kind(jule::Any _343638_kind) {
	jule::Ptr<_225aa4a5a_Data> _343717_d = nullptr;
	{
		auto &_match_expr{ _343638_kind };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_LitExpr>>()) {
			_case_begin_5559847520:;
			{
				_343717_d=this->self->_method_eval_lit(_343638_kind.operator jule::Ptr<_23e45734a_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_IdentExpr>>()) {
			_case_begin_5559848528:;
			{
				_343717_d=this->self->_method_eval_ident(_343638_kind.operator jule::Ptr<_23e45734a_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_UnaryExpr>>()) {
			_case_begin_5559848624:;
			{
				_343717_d=this->self->_method_eval_unary(_343638_kind.operator jule::Ptr<_23e45734a_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_VariadicExpr>>()) {
			_case_begin_5559848720:;
			{
				_343717_d=this->self->_method_eval_variadic(_343638_kind.operator jule::Ptr<_23e45734a_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_UnsafeExpr>>()) {
			_case_begin_5559848832:;
			{
				_343717_d=this->self->_method_eval_unsafe(_343638_kind.operator jule::Ptr<_23e45734a_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_SliceExpr>>()) {
			_case_begin_5559848944:;
			{
				_343717_d=this->self->_method_eval_slice_expr(_343638_kind.operator jule::Ptr<_23e45734a_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_IndexingExpr>>()) {
			_case_begin_5559849056:;
			{
				_343717_d=this->self->_method_eval_indexing(_343638_kind.operator jule::Ptr<_23e45734a_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_SlicingExpr>>()) {
			_case_begin_5559849168:;
			{
				_343717_d=this->self->_method_eval_slicing(_343638_kind.operator jule::Ptr<_23e45734a_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_CastExpr>>()) {
			_case_begin_5559849280:;
			{
				_343717_d=this->self->_method_eval_cast(_343638_kind.operator jule::Ptr<_23e45734a_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_NsSelectionExpr>>()) {
			_case_begin_5559849392:;
			{
				_343717_d=this->self->_method_eval_ns_selection(_343638_kind.operator jule::Ptr<_23e45734a_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_StructLit>>()) {
			_case_begin_5559849504:;
			{
				_343717_d=this->self->_method_eval_struct_lit(_343638_kind.operator jule::Ptr<_23e45734a_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_TypeDecl>>()) {
			_case_begin_5559849616:;
			{
				_343717_d=this->self->_method_eval_type(_343638_kind.operator jule::Ptr<_23e45734a_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_FnCallExpr>>()) {
			_case_begin_5559849728:;
			{
				_343717_d=this->self->_method_eval_fn_call(_343638_kind.operator jule::Ptr<_23e45734a_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_SubIdentExpr>>()) {
			_case_begin_5559849840:;
			{
				_343717_d=this->self->_method_eval_sub_ident(_343638_kind.operator jule::Ptr<_23e45734a_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_TupleExpr>>()) {
			_case_begin_5559849952:;
			{
				_343717_d=this->self->_method_eval_tuple(_343638_kind.operator jule::Ptr<_23e45734a_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_BraceLit>>()) {
			_case_begin_5559850064:;
			{
				_343717_d=this->self->_method_eval_brace_lit(_343638_kind.operator jule::Ptr<_23e45734a_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_FnDecl>>()) {
			_case_begin_5559850176:;
			{
				_343717_d=this->self->_method_eval_anon_fn(_343638_kind.operator jule::Ptr<_23e45734a_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_BinopExpr>>()) {
			_case_begin_5559850288:;
			{
				_343717_d=this->self->_method_eval_binop(_343638_kind.operator jule::Ptr<_23e45734a_BinopExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_TernaryExpr>>()) {
			_case_begin_5559850400:;
			{
				_343717_d=this->self->_method_eval_ternary(_343638_kind.operator jule::Ptr<_23e45734a_TernaryExpr>());
			}
		}
		_match_end_5559848080:;
	}
	if (_343717_d == nullptr) {
		return nullptr;
	}
	if (_343717_d->_field_kind == nullptr) {
		return _343717_d;
	}
	if ((((_343717_d->_field_cast_kind == nullptr) && _343717_d->_method_is_const()) && (!(_343717_d->_field_is_rune))) && (_343717_d->_field_kind->_method_prim() != nullptr)) {
		{
			if (_343717_d->_field_constant->_method_is_i64()) {
				_case_begin_5559882192:;
				{
					if (_22582290a_int_assignable(jule::Str("int", 3),_343717_d)) {
						_343717_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3))));
						_343717_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_343717_d->_field_constant->_method_as_i64()));
					}
				}
			}
			else if (_343717_d->_field_constant->_method_is_u64()) {
				_case_begin_5559882288:;
				{
					if (_22582290a_int_assignable(jule::Str("uint", 4),_343717_d)) {
						_343717_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("uint", 4))));
						_343717_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_343717_d->_field_constant->_method_as_u64()));
					}
				}
			}
			_match_end_5559878912:;
		}
	}
	if ((!(_343717_d->_field_decl))) {
		if ((((((((!(_343717_d->_field_kind->_method_cpp_linked())) && (this->self->_field_prefix != nullptr)) && (_343717_d->_field_cast_kind == nullptr)) && (!(_343717_d->_field_kind->_field_variadic))) && (!(_343717_d->_field_lvalue))) && (!(_343717_d->_method_is_const()))) && (_343717_d->_field_kind->_method_prim() != nullptr)) && _2261088d8_is_num(_343717_d->_field_kind->_method_prim()->_field_kind)) {
			_343717_d->_field_cast_kind=_343717_d->_field_kind;
		}
		_225aa4a5a_apply_cast_kind(_343717_d);
		if ((_343717_d->_field_kind->_method_prim() == nullptr) || (!(_343717_d->_field_kind->_method_prim()->_method_is_any()))) {
			if (((this->self->_field_prefix != nullptr) && (this->self->_field_prefix->_method_prim() != nullptr)) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_343717_d->_field_cast_kind=this->self->_field_prefix;
				_225aa4a5a_apply_cast_kind_model(_343717_d);
				_343717_d->_field_cast_kind=nullptr;
			}
		}
	}
	return _343717_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval(jule::Ptr<_23e45734a_Expr> _351328_expr) {
	jule::Ptr<_225aa4a5a_Data> _351417_d = this->self->_method_eval_expr_kind(_351328_expr->_field_kind);
	if ((_351417_d == nullptr) || (_351417_d->_field_kind == nullptr)) {
		return nullptr;
	}
	{
		if (_351417_d->_field_kind->_method_fnc() != nullptr) {
			_case_begin_5559905008:;
			{
				jule::Ptr<_2252d6a73_FnIns> _352121_f = _351417_d->_field_kind->_method_fnc();
				if (_352121_f->_method_is_builtin()) {
					goto _match_end_5559905536;
				}
				if (_352121_f->_field_generics.len() != _352121_f->_field_decl->_field_generics.len()) {
					this->self->_field_s->_method_push_err(_351328_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				}
				if (_352121_f->_field_decl->_method_is_method()) {
					this->self->_field_s->_method_push_err(_351328_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_5559905536:;
	}
	return _351417_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_Eval::_method_eval_expr(jule::Ptr<_23e45734a_Expr> _354133_expr) {
	jule::Ptr<_225aa4a5a_Data> _354217_d = this->self->_method_eval(_354133_expr);
	{
		if (_354217_d == nullptr) {
			_case_begin_5559917168:;
			{
				return nullptr;
			}
		}
		else if (_354217_d->_field_decl) {
			_case_begin_5559917264:;
			{
				this->self->_method_push_err(_354133_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_5559915808:;
			{
				return _354217_d;
			}
		}
		_match_end_5559915728:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _225aa4a5a_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _23e2b5818_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6517_kind = jule::Str();
	if ((*this)._field_variadic) {
		_6517_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_cpp_linked()) {
		_6517_kind+=jule::Str("cpp.", 4);
		_6517_kind+=(*this)._field_cpp_ident;
	} else {
		_6517_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6517_kind;
}



inline jule::Bool _23e2b5818_TypeKind::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _8122_other) {
	if (this->self->_method_is_nil()) {
		return _8122_other->_method_is_nil();
	}
	if (this->self->_method_cpp_linked()) {
		return _8122_other->_method_cpp_linked() && (this->self->_field_cpp_ident == _8122_other->_field_cpp_ident);
	}
	return this->self->_field_kind.get()._method_equals(_8122_other);
}



inline jule::Bool _23e2b5818_TypeKind::_method_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



inline jule::Bool _23e2b5818_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _23e2b5818_TypeKind::_method_void(void) {
	jule::Ptr<_23e2b5818_Prim> _10413_prim = (*this)._method_prim();
	return (_10413_prim != nullptr) && (_10413_prim->_field_kind == jule::Str("void", 4));
}



inline jule::Bool _23e2b5818_TypeKind::_method_mutable(void) {
	{
		_23e2b5818_TypeKind* _11121__self = (&((*this)));
		if (_11121__self->_method_strct() != nullptr) {
			return _11121__self->_method_strct()->_field_mutable;
		}
		if (_11121__self->_method_trt() != nullptr) {
			return _11121__self->_method_trt()->_field_mutable;
		}
		if (_11121__self->_method_prim() != nullptr) {
			jule::Ptr<_23e2b5818_Prim> _12021_p = _11121__self->_method_prim();
			return _12021_p->_method_is_any();
		}
		if (_11121__self->_method_arr() != nullptr) {
			return _11121__self->_method_arr()->_field_elem->_method_mutable();
		}
		return ((_11121__self->_method_slc() != nullptr) || (_11121__self->_method_ptr() != nullptr)) || (_11121__self->_method_sptr() != nullptr);
	}
}



inline jule::Bool _23e2b5818_TypeKind::_method_nil_compatible(void) {
	{
		_23e2b5818_TypeKind* _13521__self = (&((*this)));
		jule::Ptr<_23e2b5818_Prim> _13717_prim = _13521__self->_method_prim();
		if ((_13717_prim != nullptr) && _13717_prim->_method_is_any()) {
			return true;
		}
		return (((((_13521__self->_method_is_nil() || (_13521__self->_method_fnc() != nullptr)) || (_13521__self->_method_sptr() != nullptr)) || (_13521__self->_method_ptr() != nullptr)) || (_13521__self->_method_trt() != nullptr)) || (_13521__self->_method_slc() != nullptr)) || (_13521__self->_method_map() != nullptr);
	}
}



inline jule::Bool _23e2b5818_TypeKind::_method_supports_cloning(void) {
	{
		_23e2b5818_TypeKind* _15521__self = (&((*this)));
		{
			if (_15521__self->_method_prim() != nullptr) {
				_case_begin_5560321264:;
				{
					return (!(_15521__self->_method_prim()->_method_is_any()));
				}
			}
			else if (_15521__self->_method_enm() != nullptr) {
				_case_begin_5560319808:;
				{
					return true;
				}
			}
			else if (_15521__self->_method_fnc() != nullptr) {
				_case_begin_5560319904:;
				{
					return true;
				}
			}
			else if (_15521__self->_method_ptr() != nullptr) {
				_case_begin_5560320016:;
				{
					return true;
				}
			}
			else if (_15521__self->_method_slc() != nullptr) {
				_case_begin_5560320128:;
				{
					return _15521__self->_method_slc()->_field_elem->_method_supports_cloning();
				}
			}
			else if (_15521__self->_method_map() != nullptr) {
				_case_begin_5560320528:;
				{
					jule::Ptr<_23e2b5818_Map> _16921_m = _15521__self->_method_map();
					return _16921_m->_field_key->_method_supports_cloning() && _16921_m->_field_val->_method_supports_cloning();
				}
			}
			else if (_15521__self->_method_arr() != nullptr) {
				_case_begin_5560320640:;
				{
					return _15521__self->_method_arr()->_field_elem->_method_supports_cloning();
				}
			}
			else if (_15521__self->_method_sptr() != nullptr) {
				_case_begin_5560320752:;
				{
					return _15521__self->_method_sptr()->_field_elem->_method_supports_cloning();
				}
			}
			else if (_15521__self->_method_strct() != nullptr) {
				_case_begin_5560320864:;
				{
					jule::Ptr<_225036509_StructIns> _17925_s = _15521__self->_method_strct();
					if ((!(_17925_s->_field_mutable))) {
						return true;
					}
					if (((_17925_s->_field_decl == nullptr) || _17925_s->_field_decl->_field_cpp_linked) || (!(_17925_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
						return false;
					}
					return true;
				}
			}
			else {
				_case_begin_5560319504:;
				{
					return false;
				}
			}
			_match_end_5560319392:;
		}
	}
}



inline jule::Bool _23e2b5818_TypeKind::_method_variadicable(void) {
	{
		_23e2b5818_TypeKind* _19921__self = (&((*this)));
		return _19921__self->_method_slc() != nullptr;
	}
}



inline jule::Ptr<_23e2b5818_Prim> _23e2b5818_TypeKind::_method_prim(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_Prim>>()) {
			_case_begin_5560343216:;
			{
				return (*this)._field_kind.operator jule::Ptr<_23e2b5818_Prim>();
			}
		}
		else {
			_case_begin_5560341456:;
			{
				return nullptr;
			}
		}
		_match_end_5560298752:;
	}
}



inline jule::Ptr<_23e2b5818_Sptr> _23e2b5818_TypeKind::_method_sptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_Sptr>>()) {
			_case_begin_5560345904:;
			{
				return (*this)._field_kind.operator jule::Ptr<_23e2b5818_Sptr>();
			}
		}
		else {
			_case_begin_5560343008:;
			{
				return nullptr;
			}
		}
		_match_end_5560343824:;
	}
}



inline jule::Ptr<_23e2b5818_Ptr> _23e2b5818_TypeKind::_method_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_Ptr>>()) {
			_case_begin_5560348592:;
			{
				return (*this)._field_kind.operator jule::Ptr<_23e2b5818_Ptr>();
			}
		}
		else {
			_case_begin_5560345696:;
			{
				return nullptr;
			}
		}
		_match_end_5560346512:;
	}
}



inline jule::Ptr<_2255aae79_Enum> _23e2b5818_TypeKind::_method_enm(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_2255aae79_Enum>>()) {
			_case_begin_5560351280:;
			{
				return (*this)._field_kind.operator jule::Ptr<_2255aae79_Enum>();
			}
		}
		else {
			_case_begin_5560348384:;
			{
				return nullptr;
			}
		}
		_match_end_5560349200:;
	}
}



inline jule::Ptr<_23e2b5818_Arr> _23e2b5818_TypeKind::_method_arr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_Arr>>()) {
			_case_begin_5560354064:;
			{
				return (*this)._field_kind.operator jule::Ptr<_23e2b5818_Arr>();
			}
		}
		else {
			_case_begin_5560353056:;
			{
				return nullptr;
			}
		}
		_match_end_5560351024:;
	}
}



inline jule::Ptr<_23e2b5818_Slc> _23e2b5818_TypeKind::_method_slc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_Slc>>()) {
			_case_begin_5560356720:;
			{
				return (*this)._field_kind.operator jule::Ptr<_23e2b5818_Slc>();
			}
		}
		else {
			_case_begin_5560353824:;
			{
				return nullptr;
			}
		}
		_match_end_5560354640:;
	}
}



inline jule::Ptr<_2252d6a73_FnIns> _23e2b5818_TypeKind::_method_fnc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_2252d6a73_FnIns>>()) {
			_case_begin_5560359536:;
			{
				return (*this)._field_kind.operator jule::Ptr<_2252d6a73_FnIns>();
			}
		}
		else {
			_case_begin_5560356464:;
			{
				return nullptr;
			}
		}
		_match_end_5560357664:;
	}
}



inline jule::Ptr<_225036509_StructIns> _23e2b5818_TypeKind::_method_strct(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_225036509_StructIns>>()) {
			_case_begin_5560362224:;
			{
				return (*this)._field_kind.operator jule::Ptr<_225036509_StructIns>();
			}
		}
		else {
			_case_begin_5560359328:;
			{
				return nullptr;
			}
		}
		_match_end_5560360144:;
	}
}



inline jule::Ptr<_2255ab70a_Trait> _23e2b5818_TypeKind::_method_trt(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_2255ab70a_Trait>>()) {
			_case_begin_5560365008:;
			{
				return (*this)._field_kind.operator jule::Ptr<_2255ab70a_Trait>();
			}
		}
		else {
			_case_begin_5560364000:;
			{
				return nullptr;
			}
		}
		_match_end_5560361968:;
	}
}



inline jule::Ptr<_23e2b5818_Map> _23e2b5818_TypeKind::_method_map(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_Map>>()) {
			_case_begin_5560367760:;
			{
				return (*this)._field_kind.operator jule::Ptr<_23e2b5818_Map>();
			}
		}
		else {
			_case_begin_5560366752:;
			{
				return nullptr;
			}
		}
		_match_end_5560364720:;
	}
}



inline jule::Ptr<_23e2b5818_Tuple> _23e2b5818_TypeKind::_method_tup(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_Tuple>>()) {
			_case_begin_5560370512:;
			{
				return (*this)._field_kind.operator jule::Ptr<_23e2b5818_Tuple>();
			}
		}
		else {
			_case_begin_5560367520:;
			{
				return nullptr;
			}
		}
		_match_end_5560368608:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e2b5818_TypeSymbol::_method_checked(void) {
	return (*this)._field_kind != nullptr;
}



inline void _23e2b5818_TypeSymbol::_method_remove_kind(void) {
	(*this)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _23e2b5818_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _23e2b5818_Prim::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _31822_other) {
	jule::Ptr<_23e2b5818_Prim> _31913_prim = _31822_other->_method_prim();
	if (_31913_prim == nullptr) {
		return false;
	}
	return _226103eee_real_kind_of(this->self->_field_kind) == _226103eee_real_kind_of(_31913_prim->_field_kind);
}



inline jule::Bool _23e2b5818_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _23e2b5818_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _23e2b5818_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _23e2b5818_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _23e2b5818_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _23e2b5818_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _23e2b5818_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _23e2b5818_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _23e2b5818_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _23e2b5818_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _23e2b5818_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _23e2b5818_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _23e2b5818_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _23e2b5818_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _23e2b5818_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _23e2b5818_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _23e2b5818_Sptr::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _23e2b5818_Sptr::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _38722_other) {
	jule::Ptr<_23e2b5818_Sptr> _38813_sptr = _38722_other->_method_sptr();
	if (_38813_sptr == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_38813_sptr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_Sptr &_Src) {
	_Stream << "Sptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _23e2b5818_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _23e2b5818_Slc::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _40622_other) {
	jule::Ptr<_23e2b5818_Slc> _40713_slc = _40622_other->_method_slc();
	if (_40713_slc == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_40713_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _23e2b5818_Tuple::_method_to_str(void) {
	jule::Str _42317_s = jule::Str("(", 1);
	_42317_s+=(*this)._field_types[0LL]->_method_to_str();
	{
		auto expr = (*this)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_5560418752:;
		if (it != expr.end()) {
			jule::Ptr<_23e2b5818_TypeKind> &_23e2b5818_t = *it;
			{
				_42317_s+=jule::Str(",", 1);
				_42317_s+=_23e2b5818_t->_method_to_str();
			}
			_iter_next_5560418752:;
			++it;
			goto _iter_begin_5560418752;
		}
		_iter_end_5560418752:;
	}
	_42317_s+=jule::Str(")", 1);
	return _42317_s;
}



inline jule::Bool _23e2b5818_Tuple::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _43422_other) {
	jule::Ptr<_23e2b5818_Tuple> _43513_tup = _43422_other->_method_tup();
	if (_43513_tup == nullptr) {
		return false;
	}
	if (this->self->_field_types.len() != _43513_tup->_field_types.len()) {
		return false;
	}
	jule::Int _44417_i = 0LL;
	for (; _44417_i < this->self->_field_types.len(); (_44417_i)++) {
		{
			if ((!(this->self->_field_types[_44417_i]->_method_equals(_43513_tup->_field_types[_44417_i])))) {
				return false;
			}
		}
	_iter_next_5560426128:;
	}
	_iter_end_5560426128:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _23e2b5818_Map::_method_to_str(void) {
	jule::Str _46417_s = jule::Str("[", 1);
	_46417_s+=(*this)._field_key->_method_to_str();
	_46417_s+=jule::Str(":", 1);
	_46417_s+=(*this)._field_val->_method_to_str();
	_46417_s+=jule::Str("]", 1);
	return _46417_s;
}



inline jule::Bool _23e2b5818_Map::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _47322_other) {
	jule::Ptr<_23e2b5818_Map> _47413_map = _47322_other->_method_map();
	if (_47413_map == nullptr) {
		return false;
	}
	return this->self->_field_key->_method_equals(_47413_map->_field_key) && this->self->_field_val->_method_equals(_47413_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _23e2b5818_Arr::_method_to_str(void) {
	jule::Str _49217_s = jule::Str("[", 1);
	_49217_s+=_23e028108_itoa((*this)._field_n);
	_49217_s+=jule::Str("]", 1);
	_49217_s+=(*this)._field_elem->_method_to_str();
	return _49217_s;
}



inline jule::Bool _23e2b5818_Arr::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _50022_other) {
	jule::Ptr<_23e2b5818_Arr> _50113_arr = _50022_other->_method_arr();
	if (_50113_arr == nullptr) {
		return false;
	}
	return (this->self->_field_n == _50113_arr->_field_n) && this->self->_field_elem->_method_equals(_50113_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _23e2b5818_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _23e2b5818_Ptr::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _52422_other) {
	jule::Ptr<_23e2b5818_Ptr> _52513_ptr = _52422_other->_method_ptr();
	if (_52513_ptr == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_52513_ptr->_field_elem);
}



inline jule::Bool _23e2b5818_Ptr::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _23e12e1ba_DirectiveEval::_method_push_err(_23e730c0b_Token _2027_t,jule::Str _2037_fmt,jule::Slice<jule::Any> _2050_args) {
	(*this)._field_logs = jule::alloc_for_append((*this)._field_logs,1);(*this)._field_logs.push(_23ceb0c1d_Log(1LLU,_2027_t._field_row,_2027_t._field_column,_2027_t._field_file->_method_path(),_23ceb0c1d_logf(_2037_fmt,_2050_args),jule::Str(),jule::Str()));
}



inline jule::Slice<jule::Slice<_23e730c0b_Token>> _23e12e1ba_DirectiveEval::_method_split_operans(jule::Str _3232_op,jule::Slice<_23e730c0b_Token>& _3252_tokens) {
	jule::Slice<jule::Slice<_23e730c0b_Token>> _3317_parts = jule::Slice<jule::Slice<_23e730c0b_Token>>::alloc(0LL,10LL);
	jule::Int _3517_i = 0LL;
	jule::Int _3617_range_n = 0LL;
	jule::Int _3717_last = 0LL;
	for (; _3517_i < (_3252_tokens.len() - 1LL); (_3517_i)++) {
		{
			_23e730c0b_Token _3917_b = _3252_tokens[_3517_i];
			if (_3917_b._field_id == 3LLU) {
				{
					auto &_match_expr{ _3917_b._field_kind };
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_5560917456:;
						{
							(_3617_range_n)++;
							goto _iter_next_5560914048;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_5560917728:;
						{
							(_3617_range_n)--;
						}
					}
					_match_end_5560917312:;
				}
			}
			if ((_3617_range_n > 0LL) || (_3917_b._field_id != 7LLU)) {
				goto _iter_next_5560914048;
			}
			if (_3917_b._field_kind == _3232_op) {
				_3317_parts.push(_3252_tokens.slice(_3717_last,_3517_i));
				_3717_last=static_cast<jule::Int>(_3517_i + 1LL);
			}
		}
	_iter_next_5560914048:;
	}
	_iter_end_5560914048:;
	if (_3717_last < _3252_tokens.len()) {
		_3317_parts.push(_3252_tokens.slice(_3717_last));
	} else {
		(*this)._method_push_err(_3252_tokens[_3717_last - 1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _3317_parts;
}



inline jule::Bool _23e12e1ba_DirectiveEval::_method_eval_directive_ident(jule::Str _7335_ident) {
	if (_7335_ident == jule::Str()) {
		return false;
	}
	{
		auto &expr = _23e1c54b4_FLAGS;
		auto it = expr.begin();
		_iter_begin_5560927264:;
		if (it != expr.end()) {
			jule::Str &_23e12e1ba_flag = *it;
			{
				if (_23e12e1ba_flag == _7335_ident) {
					return true;
				}
			}
			_iter_next_5560927264:;
			++it;
			goto _iter_begin_5560927264;
		}
		_iter_end_5560927264:;
	}
	return false;
}



inline jule::Bool _23e12e1ba_DirectiveEval::_method_eval_directive_part(jule::Slice<_23e730c0b_Token> _8942_part) {
	jule::Bool _9013_logical_not = (_8942_part[0LL]._field_id == 7LLU) && (_8942_part[0LL]._field_kind == jule::Str("!", 1));
	if (_9013_logical_not) {
		_8942_part=_8942_part.slice(1LL);
	}
	if (_8942_part.len() > 1LL) {
		(*this)._method_push_err(_8942_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _10017_result = (*this)._method_eval_directive_ident(_8942_part[0LL]._field_kind);
	if (_9013_logical_not) {
		_10017_result=(!(_10017_result));
	}
	return _10017_result;
}



inline jule::Bool _23e12e1ba_DirectiveEval::_method_eval(void) {
	if ((*this)._field_d->_field_args.len() == 0LL) {
		(*this)._method_push_err((*this)._field_d->_field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _11317_result = false;
	jule::Slice<jule::Slice<_23e730c0b_Token>> _11517_logical_or_parts = (*this)._method_split_operans(jule::Str("||", 2),(*this)._field_d->_field_args);
	if (_11517_logical_or_parts == nullptr) {
		return false;
	}
	{
		auto &expr = _11517_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_5560943632:;
		if (it != expr.end()) {
			jule::Slice<_23e730c0b_Token> _23e12e1ba_part = *it;
			{
				jule::Bool _12121_and = true;
				jule::Slice<jule::Slice<_23e730c0b_Token>> _12221_logical_and_parts = (*this)._method_split_operans(jule::Str("&&", 2),_23e12e1ba_part);
				if (_12221_logical_and_parts == nullptr) {
					return false;
				}
				{
					auto &expr = _12221_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_5560948016:;
					if (it != expr.end()) {
						jule::Slice<_23e730c0b_Token> _23e12e1ba_and_part = *it;
						{
							_23e730c0b_Token _12821_first = _23e12e1ba_and_part[0LL];
							if ((_12821_first._field_id == 3LLU) && (_12821_first._field_kind == jule::Str("(", 1))) {
								_23e730c0b_Token _13025_end = _23e12e1ba_and_part[_23e12e1ba_and_part.len() - 1LL];
								if ((_13025_end._field_id != 3LLU) || (_13025_end._field_kind != jule::Str(")", 1))) {
									(*this)._method_push_err(_12821_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								}
								_23e12e1ba_and_part=_23e12e1ba_and_part.slice(1LL,_23e12e1ba_and_part.len() - 1LL);
							}
							_12121_and=_12121_and && (*this)._method_eval_directive_part(_23e12e1ba_and_part);
						}
						_iter_next_5560948016:;
						++it;
						goto _iter_begin_5560948016;
					}
					_iter_end_5560948016:;
				}
				_11317_result=_11317_result || _12121_and;
			}
			_iter_next_5560943632:;
			++it;
			goto _iter_begin_5560943632;
		}
		_iter_end_5560943632:;
	}
	return _11317_result;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e12e1ba_DirectiveEval &_Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_225615962_ImportInfo> _23e3748d8_PlainImporter::_method_get_import(jule::Str _9333_path) {
	{
		auto &expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_5560959824:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _23e3748d8_p = *it;
			{
				if (_23e3748d8_p->_field_path == _9333_path) {
					return _23e3748d8_p;
				}
			}
			_iter_next_5560959824:;
			++it;
			goto _iter_begin_5560959824;
		}
		_iter_end_5560959824:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_23e249d96_Ast>>,jule::Slice<_23ceb0c1d_Log>> _23e3748d8_PlainImporter::_method_import_package(jule::Str _10337_path) {
	jule::Slice<jule::Ptr<_224ea5599_DirEntry>> _10413_dirents = ({
		auto except = _23e3748d8_read_package_dirents(_10337_path);
		(except.ok()) ? (except.result) : ({{
			jule::Slice<_23ceb0c1d_Log> _10521_errors = jule::Slice<_23ceb0c1d_Log>({_23e3748d8_flat_compiler_err(except.error.operator jule::Str())});
			return std::make_tuple(nullptr,_10521_errors);
			return std::make_tuple(nullptr,_10521_errors);
		} jule::Slice<jule::Ptr<_224ea5599_DirEntry>>();});
	});
	jule::Slice<jule::Ptr<_23e249d96_Ast>> _10917_asts = jule::Slice<jule::Ptr<_23e249d96_Ast>>::alloc(0LL,static_cast<jule::I64>(_10413_dirents.len()));
	{
		auto &expr = _10413_dirents;
		auto it = expr.begin();
		_iter_begin_5560969088:;
		if (it != expr.end()) {
			jule::Ptr<_224ea5599_DirEntry> &_23e3748d8_dirent = *it;
			{
				jule::Str _11117__path = _23d08e2c4_join(jule::Slice<jule::Str>({_10337_path,_23e3748d8_dirent->_field_name}));
				jule::Ptr<_23e4593c4_File> _11221_file = _23e4593c4_new_file_set(_11117__path);
				_11221_file->_method_fill(_23e3748d8_read_buff(_11221_file->_method_path()));
				jule::Slice<_23ceb0c1d_Log> _11421_errors = _23e45a13e_lex(_11221_file);
				if (_11421_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_11421_errors);
				}
				jule::Ptr<_225036949_FileInfo> _11921_finfo = _225036949_parse_file(_11221_file);
				if (_11921_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_11921_finfo->_field_errors);
				}
				if ((!(_23e0e568c_is_pass_file_annotation(_23e3748d8_dirent->_field_name)))) {
					goto _iter_next_5560969088;
				}
				jule::Bool _12918_r;
				jule::Slice<_23ceb0c1d_Log> _12925_logs;
				std::tie(_12918_r,_12925_logs) = _23e3748d8_is_pass_build_directives(_11921_finfo->_field_ast);
				if (_12925_logs.len() > 0LL) {
					return std::make_tuple(nullptr,_12925_logs);
				}
				if ((!(_12918_r))) {
					goto _iter_next_5560969088;
				}
				_10917_asts.push(_11921_finfo->_field_ast);
			}
			_iter_next_5560969088:;
			++it;
			goto _iter_begin_5560969088;
		}
		_iter_end_5560969088:;
	}
	return std::make_tuple(_10917_asts,nullptr);
}



inline void _23e3748d8_PlainImporter::_method_imported(jule::Ptr<_225615962_ImportInfo> _14535_imp) {
	{
		auto &expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_5560987776:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> &_23e3748d8_p = *it;
			{
				if ((_23e3748d8_p->_field_cpp_linked == _14535_imp->_field_cpp_linked) && (_23e3748d8_p->_field_link_path == _14535_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_5560987776:;
			++it;
			goto _iter_begin_5560987776;
		}
		_iter_end_5560987776:;
	}
	(*this)._field_all_packages = jule::alloc_for_append((*this)._field_all_packages,1);(*this)._field_all_packages.push(_14535_imp);
}







std::ostream &operator<<(std::ostream &_Stream, const _23e3748d8_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e1d6b35_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e1d6b35_DefineOrderer::_static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_2258258db_Var>>& _1837_s,jule::Ptr<_2258258db_Var> _1846_t) {
	jule::Ptr<_2258258db_Var>* _1917_p = (&(_1846_t->_field_depends[0LL]));
	jule::Ptr<_2258258db_Var>* _2013_end = _1917_p + _1846_t->_field_depends.len();
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_5561092080:;
		if (it != expr.end()) {
			jule::Ptr<_2258258db_Var> &_23e1d6b35_tt = *it;
			{
				{
					if (_23e1d6b35_tt == _1846_t) {
						goto _iter_end_5561092080;
					}
					if (((*(_1917_p))->_field_cpp_linked || ((*(_1917_p))->_field_depends.len() == 0LL)) || (_23e1d6b35_tt == (*(_1917_p)))) {
						(_1917_p)++;
						if (_1917_p == _2013_end) {
							return true;
						}
					}
				}
			}
			_iter_next_5561092080:;
			++it;
			goto _iter_begin_5561092080;
		}
		_iter_end_5561092080:;
	}
	return false;
}

inline jule::Bool _23e1d6b35_DefineOrderer::_static_method_is_common_ordered_1(jule::Slice<jule::Ptr<_225036509_Struct>>& _1837_s,jule::Ptr<_225036509_Struct> _1846_t) {
	jule::Ptr<_225036509_Struct>* _1917_p = (&(_1846_t->_field_depends[0LL]));
	jule::Ptr<_225036509_Struct>* _2013_end = _1917_p + _1846_t->_field_depends.len();
	{
		auto &expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_5561115600:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> &_23e1d6b35_tt = *it;
			{
				{
					if (_23e1d6b35_tt == _1846_t) {
						goto _iter_end_5561115600;
					}
					if (((*(_1917_p))->_field_cpp_linked || ((*(_1917_p))->_field_depends.len() == 0LL)) || (_23e1d6b35_tt == (*(_1917_p)))) {
						(_1917_p)++;
						if (_1917_p == _2013_end) {
							return true;
						}
					}
				}
			}
			_iter_next_5561115600:;
			++it;
			goto _iter_begin_5561115600;
		}
		_iter_end_5561115600:;
	}
	return false;
}



inline void _23e1d6b35_DefineOrderer::_static_method_order_common_0(jule::Slice<jule::Ptr<_2258258db_Var>>& _3940_s) {
	jule::Int _4017_i = 0LL;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_5561075712:;
		if (it != expr.end()) {
			jule::Int _23e1d6b35_j = it - expr.begin();
			jule::Ptr<_2258258db_Var> _23e1d6b35_t = *it;
			{
				if (_23e1d6b35_t->_field_cpp_linked || (_23e1d6b35_t->_field_depends.len() == 0LL)) {
					std::tie(_3940_s[_4017_i],_3940_s.__at(_23e1d6b35_j)) = std::make_tuple(_23e1d6b35_t,_3940_s[_4017_i]);
					(_4017_i)++;
				}
			}
			_iter_next_5561075712:;
			++it;
			_23e1d6b35_j++;
			goto _iter_begin_5561075712;
		}
		_iter_end_5561075712:;
	}
	jule::Int _4817_j = _4017_i;
	for (; _4817_j < _3940_s.len(); (_4817_j)++) {
		{
			jule::Int _5021_k = _4017_i;
			for (; _5021_k < (_3940_s.len() - 1LL); (_5021_k)++) {
				{
					if ((!(_23e1d6b35_DefineOrderer::_static_method_is_common_ordered_0(_3940_s,_3940_s[_5021_k])))) {
						std::tie(_3940_s[_5021_k],_3940_s[_5021_k + 1LL]) = std::make_tuple(_3940_s[_5021_k + 1LL],_3940_s[_5021_k]);
					}
				}
			_iter_next_5561078160:;
			}
			_iter_end_5561078160:;
		}
	_iter_next_5561074208:;
	}
	_iter_end_5561074208:;
}

inline void _23e1d6b35_DefineOrderer::_static_method_order_common_1(jule::Slice<jule::Ptr<_225036509_Struct>>& _3940_s) {
	jule::Int _4017_i = 0LL;
	{
		auto &expr = _3940_s;
		auto it = expr.begin();
		_iter_begin_5561099296:;
		if (it != expr.end()) {
			jule::Int _23e1d6b35_j = it - expr.begin();
			jule::Ptr<_225036509_Struct> _23e1d6b35_t = *it;
			{
				if (_23e1d6b35_t->_field_cpp_linked || (_23e1d6b35_t->_field_depends.len() == 0LL)) {
					std::tie(_3940_s[_4017_i],_3940_s.__at(_23e1d6b35_j)) = std::make_tuple(_23e1d6b35_t,_3940_s[_4017_i]);
					(_4017_i)++;
				}
			}
			_iter_next_5561099296:;
			++it;
			_23e1d6b35_j++;
			goto _iter_begin_5561099296;
		}
		_iter_end_5561099296:;
	}
	jule::Int _4817_j = _4017_i;
	for (; _4817_j < _3940_s.len(); (_4817_j)++) {
		{
			jule::Int _5021_k = _4017_i;
			for (; _5021_k < (_3940_s.len() - 1LL); (_5021_k)++) {
				{
					if ((!(_23e1d6b35_DefineOrderer::_static_method_is_common_ordered_1(_3940_s,_3940_s[_5021_k])))) {
						std::tie(_3940_s[_5021_k],_3940_s[_5021_k + 1LL]) = std::make_tuple(_3940_s[_5021_k + 1LL],_3940_s[_5021_k]);
					}
				}
			_iter_next_5561101744:;
			}
			_iter_end_5561101744:;
		}
	_iter_next_5561094224:;
	}
	_iter_end_5561094224:;
}



inline void _23e1d6b35_DefineOrderer::_static_method_order_variables(jule::Slice<jule::Ptr<_2258258db_Var>>& _6140_vars) {
	_23e1d6b35_DefineOrderer::_static_method_order_common_0(_6140_vars);
}



inline void _23e1d6b35_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ptr<_225036509_Struct>>& _6741_structs) {
	_23e1d6b35_DefineOrderer::_static_method_order_common_1(_6741_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _23e1d6b35_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _23d0477ee_ScopeDeadCode::_method_optimize_child(jule::Ptr<_2255ba3ea_Scope>& _2339_s) {
	jule::Ptr<_23d0477ee_ScopeDeadCode> _2417_sdc = jule::new_struct_ptr<_23d0477ee_ScopeDeadCode>(new( std::nothrow ) _23d0477ee_ScopeDeadCode(this->self,_2339_s,(&(_2339_s->_field_stmts)),jule::Int()));
	{
		_2417_sdc->_method_optimize_stmts();
	}
}



inline void _23d0477ee_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,(*this)._field_i + 1LL);
	jule::Ptr<_23d0477ee_ScopeDeadCode> _3417_parent = (*this)._field_parent;
	while (_3417_parent != nullptr) {
		{
			(*(_3417_parent->_field_stmts))=(*(_3417_parent->_field_stmts)).slice(0LL,_3417_parent->_field_i + 1LL);
			_3417_parent=_3417_parent->_field_parent;
		}
	_iter_next_5561275952:;
	}
	_iter_end_5561275952:;
}



inline void _23d0477ee_ScopeDeadCode::_method_optimize_stmt(jule::Any _4144_st) {
	{
		auto &_match_expr{ _4144_st };
		if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Scope>>()) {
			_case_begin_5561280656:;
			{
				jule::Ptr<_2255ba3ea_Scope> _4421_scope = _4144_st.operator jule::Ptr<_2255ba3ea_Scope>();
				if (_4421_scope->_field_deferred) {
					_23d0477ee_eliminate_dead_code_of_scope(_4421_scope);
				} else {
					this->self->_method_optimize_child(_4421_scope);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225aa4a5a_Data>>()) {
			_case_begin_5561280896:;
			{
				{
					auto &_match_expr{ _4144_st.operator jule::Ptr<_225aa4a5a_Data>()->_field_model };
					if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinPanicCallExprModel>>()) {
						_case_begin_5561286256:;
						{
							this->self->_method_eliminate_followed();
						}
					}
					_match_end_5561286544:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_RetSt>>()) {
			_case_begin_5561280992:;
			{
				this->self->_method_eliminate_followed();
			}
		}
		_match_end_5561280752:;
	}
}



inline void _23d0477ee_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_stmts->len(); (this->self->_field_i)++) {
		{
			this->self->_method_optimize_stmt((*(this->self->_field_stmts))[this->self->_field_i]);
		}
	_iter_next_5561290192:;
	}
	_iter_end_5561290192:;
}







std::ostream &operator<<(std::ostream &_Stream, const _23d0477ee_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2265d88ce_FileStream> _2265d88ce_FileStream::_static_method_new(jule::Ptr<_224eb1ee0_File> _3827_f) {
	return jule::new_struct<_2265d88ce_FileStream>(new( std::nothrow ) _2265d88ce_FileStream(_3827_f));
}



inline jule::Exceptional<jule::Int> _2265d88ce_FileStream::_method_read(jule::Slice<jule::U8> _4731_buff) {
	jule::Int _4748_n = jule::Int();
	_4748_n = static_cast<jule::Int>(({
		auto except = (*this)._field_buff->_method_read(_4731_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Int>(except.error);
			return jule::Exceptional<jule::Int>(except.error);
		} jule::Int();});
	}));
	return jule::Exceptional(jule::Any(),_4748_n);
}



inline jule::Exceptional<jule::Int> _2265d88ce_FileStream::_method_write(jule::Slice<jule::U8> _5128_buff) {
	jule::Int _5145_n = jule::Int();
	_5145_n = static_cast<jule::Int>(({
		auto except = (*this)._field_buff->_method_write(_5128_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Int>(except.error);
			return jule::Exceptional<jule::Int>(except.error);
		} jule::Int();});
	}));
	return jule::Exceptional(jule::Any(),_5145_n);
}



inline jule::Exceptional<jule::Slice<jule::U8>> _2265d88ce_FileStream::_method_read_line(void) {
	
	jule::Slice<jule::U8> _6317_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _6417_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::Int _6617_n = ({
				auto except = (*this)._field_buff->_method_read(_6417_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
				} jule::Int();});
			});
			if (_6617_n == 0LL) {
				goto _iter_end_5561325632;
			}
			jule::U8 _7117_b = _6417_part[0LL];
			_6317_buff.push(_7117_b);
			if (_7117_b == 10LL) {
				goto _iter_end_5561325632;
			}
		}
	_iter_next_5561325632:;
	}
	_iter_end_5561325632:;
	return jule::Exceptional(jule::Any(),_6317_buff);
}







std::ostream &operator<<(std::ostream &_Stream, const _2265d88ce_FileStream &_Src) {
	_Stream << "FileStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_22660706d_Scanner> _22660706d_Scanner::_static_method_new(jule::Trait<_2265d88ce_Reader> _1627_r) {
	return jule::new_struct<_22660706d_Scanner>(new( std::nothrow ) _22660706d_Scanner(_1627_r,jule::Slice<jule::U8>()));
}



inline jule::Ptr<_22660706d_Scanner> _22660706d_Scanner::_static_method_newf(jule::Ptr<_224eb1ee0_File> _2428_f) {
	return jule::new_struct<_22660706d_Scanner>(new( std::nothrow ) _22660706d_Scanner(_2265d88ce_FileStream::_static_method_new(_2428_f),jule::Slice<jule::U8>()));
}



inline void _22660706d_Scanner::_method_reset(void) {
	(*this)._field_b=nullptr;
}



inline jule::Slice<jule::U8> _22660706d_Scanner::_method_bytes(void) {
	return (*this)._field_b;
}



inline jule::Str _22660706d_Scanner::_method_text(void) {
	return static_cast<jule::Str>((*this)._field_b);
}



inline jule::Exceptional<jule::Bool> _22660706d_Scanner::_method_scan(void) {
	
	(*this)._method_reset();
	jule::Slice<jule::U8> _5117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _5217_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::Int _5417_n = ({
				auto except = (*this)._field_r.get()._method_read(_5217_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional(jule::Any(),false);
					return jule::Exceptional(jule::Any(),false);
				} jule::Int();});
			});
			if (_5417_n == 0LL) {
				goto _iter_end_5561349456;
			}
			jule::U8 _6117_b = _5217_part[0LL];
			if (_6117_b == 10LL) {
				goto _iter_end_5561349456;
			}
			_5117_buff.push(_6117_b);
		}
	_iter_next_5561349456:;
	}
	_iter_end_5561349456:;
	(*this)._field_b=_5117_buff;
	return jule::Exceptional(jule::Any(),_5217_part[0LL] != 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _22660706d_Scanner &_Src) {
	_Stream << "Scanner{";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "b:" << _Src._field_b;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _226630371_AbsTime::_method_unix(void) {
	jule::Bool _5417_leap = false;
	jule::Uint _5517_y = (*this)._field_year - 1900LL;
	jule::Uint _5617_m = (*this)._field_month - 1LL;
	if ((_5617_m >= 12LL) || (_5617_m < 0LL)) {
		jule::Uint _5821_adj = jule::unsafe_div(_5617_m,12LL);
		_5617_m = jule::unsafe_mod(_5617_m,12LL);
		if (_5617_m < 0LL) {
			(_5821_adj)--;
			_5617_m+=12LL;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _226630371_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_226630371_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::Uint>(86400LL * ((*this)._field_day - 1LL));
	_6617_t+=static_cast<jule::Uint>(3600LL * (*this)._field_hour);
	_6617_t+=static_cast<jule::Uint>(60LL * (*this)._field_minute);
	_6617_t+=(*this)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _226630371_AbsTime &_Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _226630371_Time _226630371_Time::_static_method_unix(jule::U64 _8924_sec) {
	return _226630371_Time(_8924_sec);
}



inline _226630371_Time _226630371_Time::_static_method_now(void) {
	return _226630371_Time::_static_method_unix(static_cast<jule::U64>(_226630371_unix()));
}



inline jule::U64 _226630371_Time::_method_unix(void) {
	return (*this)._field_sec;
}



inline jule::Uint _226630371_Time::_method_day(void) {
	return (*this)._method_abs()._field_day;
}



inline jule::Uint _226630371_Time::_method_month(void) {
	return (*this)._method_abs()._field_month;
}



inline jule::Uint _226630371_Time::_method_year(void) {
	return (*this)._method_abs()._field_year;
}



inline jule::Uint _226630371_Time::_method_second(void) {
	return (*this)._method_abs()._field_second;
}



inline jule::Uint _226630371_Time::_method_minute(void) {
	return (*this)._method_abs()._field_minute;
}



inline jule::Uint _226630371_Time::_method_hour(void) {
	return (*this)._method_abs()._field_hour;
}



inline _226630371_AbsTime _226630371_Time::_method_abs(void) {
	jule::U64 _12513_secs = (*this)._field_sec - 951868800LL;
	jule::U64 _12617_days = jule::unsafe_div(_12513_secs,86400LL);
	jule::U64 _12717_rem_secs = jule::unsafe_mod(_12513_secs,86400LL);
	if (_12717_rem_secs < 0LL) {
		_12717_rem_secs+=86400LL;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = jule::unsafe_div(_12617_days,146097LL);
	jule::U64 _13417_rem_days = jule::unsafe_mod(_12617_days,146097LL);
	if (_13417_rem_days < 0LL) {
		_13417_rem_days+=146097LL;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = jule::unsafe_div(_13417_rem_days,36524LL);
	if (_14017_c_cycles == 4LL) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14017_c_cycles * 36524LL);
	jule::U64 _14617_q_cycles = jule::unsafe_div(_13417_rem_days,1461LL);
	if (_14617_q_cycles == 25LL) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14617_q_cycles * 1461LL);
	jule::U64 _15217_rem_years = jule::unsafe_div(_13417_rem_days,365LL);
	if (_15217_rem_years == 4LL) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_15217_rem_years * 365LL);
	jule::Int _15813_leap = ((((_15217_rem_years == 0LL) && ((_14617_q_cycles > 0LL) || (_14017_c_cycles == 0LL)))) ? (1LL) : (0LL));
	jule::U64 _15917_y_day = ((_13417_rem_days + 31LL) + 28LL) + _15813_leap;
	if (_15917_y_day >= (365LL + _15813_leap)) {
		_15917_y_day-=static_cast<jule::Int>(365LL + _15813_leap);
	}
	jule::Int _16417_months = 0LL;
	for (; _226630371_MDAYS[_16417_months] <= _13417_rem_days; (_16417_months)++) {
		{
			_13417_rem_days-=_226630371_MDAYS[_16417_months];
		}
	_iter_next_5561561984:;
	}
	_iter_end_5561561984:;
	_226630371_AbsTime _16917_t = _226630371_AbsTime();
	_16917_t._field_year=static_cast<jule::U64>((((_15217_rem_years + (4LL * _14617_q_cycles)) + (100LL * _14017_c_cycles)) + (400LL * _13317_qc_cycles)) + 100LL);
	_16917_t._field_month=static_cast<jule::Uint>(_16417_months + 2LL);
	if (_16917_t._field_month >= 12LL) {
		_16917_t._field_month-=12LL;
		(_16917_t._field_year)++;
	}
	_16917_t._field_month+=1LL;
	_16917_t._field_year+=1900LL;
	_16917_t._field_day=static_cast<jule::U64>(_13417_rem_days + 1LL);
	_16917_t._field_week_day=static_cast<jule::U64>(jule::unsafe_mod(3LL + _12617_days,7LL));
	if (_16917_t._field_week_day < 0LL) {
		_16917_t._field_week_day+=7LL;
	}
	_16917_t._field_year_day=_15917_y_day;
	_16917_t._field_hour=static_cast<jule::U64>(jule::unsafe_div(_12717_rem_secs,3600LL));
	_16917_t._field_minute=static_cast<jule::U64>(jule::unsafe_mod(jule::unsafe_div(_12717_rem_secs,60LL),60LL));
	_16917_t._field_second=static_cast<jule::U64>(jule::unsafe_mod(_12717_rem_secs,60LL));
	return _16917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _226630371_Time &_Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 _226630371_Duration::_static_method_nanoseconds(jule::I64 _22231_d) {
	return static_cast<jule::I64>(_22231_d * 1LL);
}



inline jule::I64 _226630371_Duration::_static_method_microseconds(jule::I64 _22732_d) {
	return static_cast<jule::I64>(_22732_d * 1000LL);
}



inline jule::I64 _226630371_Duration::_static_method_milliseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>(_23232_d * 1000000LL);
}



inline jule::I64 _226630371_Duration::_static_method_seconds(jule::I64 _23727_d) {
	return static_cast<jule::I64>(_23727_d * 1000000000LL);
}



inline jule::I64 _226630371_Duration::_static_method_minutes(jule::I64 _24227_d) {
	return static_cast<jule::I64>(_24227_d * 60000000000LL);
}



inline jule::I64 _226630371_Duration::_static_method_hours(jule::I64 _24725_d) {
	return static_cast<jule::I64>(_24725_d * 3600000000000LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _226630371_Duration &_Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _23d0249a7_Flag_0::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _23d0249a7_Flag_0::_method_what(void) {
	return (*this)._field__what;
}



inline void _23d0249a7_Flag_0::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _23d0249a7_Flag_0::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _23d0249a7_Flag_0 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _23d0249a7_Flag_1::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _23d0249a7_Flag_1::_method_what(void) {
	return (*this)._field__what;
}



inline void _23d0249a7_Flag_1::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _23d0249a7_Flag_1::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _23d0249a7_Flag_1 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _23d0249a7_Flag_2::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _23d0249a7_Flag_2::_method_what(void) {
	return (*this)._field__what;
}



inline void _23d0249a7_Flag_2::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _23d0249a7_Flag_2::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _23d0249a7_Flag_2 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _23d0249a7_Flag_3::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _23d0249a7_Flag_3::_method_what(void) {
	return (*this)._field__what;
}



inline void _23d0249a7_Flag_3::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _23d0249a7_Flag_3::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _23d0249a7_Flag_3 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _23d0249a7_Flag_4::_method_name(void) {
	return (*this)._field__name;
}



inline jule::Str _23d0249a7_Flag_4::_method_what(void) {
	return (*this)._field__what;
}



inline void _23d0249a7_Flag_4::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



inline jule::I32 _23d0249a7_Flag_4::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _23d0249a7_Flag_4 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_23d0249a7_FlagSet> _23d0249a7_FlagSet::_static_method_new(void) {
	return jule::new_struct<_23d0249a7_FlagSet>(new( std::nothrow ) _23d0249a7_FlagSet(jule::Slice<jule::Trait<_23d0249a7_CommonFlag>>::alloc(0LL,20LL)));
}



inline jule::Trait<_23d0249a7_CommonFlag> _23d0249a7_FlagSet::_method_find_flag(jule::Str _6632_name) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_5563119232:;
		if (it != expr.end()) {
			jule::Trait<_23d0249a7_CommonFlag> _23d0249a7_flag = *it;
			{
				if (_23d0249a7_flag.get()._method_name() == _6632_name) {
					return _23d0249a7_flag;
				}
			}
			_iter_next_5563119232:;
			++it;
			goto _iter_begin_5563119232;
		}
		_iter_end_5563119232:;
	}
	return nullptr;
}



inline jule::Trait<_23d0249a7_CommonFlag> _23d0249a7_FlagSet::_method_find_flag_short(jule::I32 _7638_name) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_5563123968:;
		if (it != expr.end()) {
			jule::Trait<_23d0249a7_CommonFlag> _23d0249a7_flag = *it;
			{
				if (_23d0249a7_flag.get()._method_short() == _7638_name) {
					return _23d0249a7_flag;
				}
			}
			_iter_next_5563123968:;
			++it;
			goto _iter_begin_5563123968;
		}
		_iter_end_5563123968:;
	}
	return nullptr;
}



inline jule::Slice<jule::Trait<_23d0249a7_CommonFlag>> _23d0249a7_FlagSet::_method_flags(void) {
	return (*this)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _23d0249a7_FlagSet::_method_parse(jule::Slice<jule::Str> _11028_args) {
	_23d0249a7_ArgParser _11117_ap = _23d0249a7_ArgParser((*this),_11028_args,jule::Slice<jule::Str>(),jule::Int());
	({
		auto except = _11117_ap._method_parse();
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional(jule::Any(),_11117_ap._field_content);
}



inline void _23d0249a7_FlagSet::_method_reset(void) {
	{
		auto &expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_5563140000:;
		if (it != expr.end()) {
			jule::Trait<_23d0249a7_CommonFlag> &_23d0249a7_f = *it;
			{
				_23d0249a7_f.get()._method_reset();
			}
			_iter_next_5563140000:;
			++it;
			goto _iter_begin_5563140000;
		}
		_iter_end_5563140000:;
	}
}



inline jule::Ptr<_23d0249a7_Flag_3> _23d0249a7_FlagSet::_method_add_flag_common_0(jule::Str _12641_name,jule::I32 _12652_short,jule::Str _12665_what) {
	
	if ((*this)._method_find_flag(_12641_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12641_name + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/flag/flag.jule:136:13"));;
	}
	if ((_12652_short != 0LL) && ((*this)._method_find_flag_short(_12652_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12652_short) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/flag/flag.jule:140:13"));;
	}
	jule::Ptr<_23d0249a7_Flag_3> _14317_flag = jule::new_struct<_23d0249a7_Flag_3>(new( std::nothrow ) _23d0249a7_Flag_3(_12641_name,_12652_short,jule::Bool(),_12665_what,jule::Ptr<jule::Bool>()));
	(*this)._field__flags = jule::alloc_for_append((*this)._field__flags,1);(*this)._field__flags.push(_14317_flag);
	return _14317_flag;
}

inline jule::Ptr<_23d0249a7_Flag_4> _23d0249a7_FlagSet::_method_add_flag_common_1(jule::Str _12641_name,jule::I32 _12652_short,jule::Str _12665_what) {
	
	if ((*this)._method_find_flag(_12641_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12641_name + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/flag/flag.jule:136:13"));;
	}
	if ((_12652_short != 0LL) && ((*this)._method_find_flag_short(_12652_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12652_short) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/flag/flag.jule:140:13"));;
	}
	jule::Ptr<_23d0249a7_Flag_4> _14317_flag = jule::new_struct<_23d0249a7_Flag_4>(new( std::nothrow ) _23d0249a7_Flag_4(_12641_name,_12652_short,jule::Str(),_12665_what,jule::Ptr<jule::Str>()));
	(*this)._field__flags = jule::alloc_for_append((*this)._field__flags,1);(*this)._field__flags.push(_14317_flag);
	return _14317_flag;
}





inline void _23d0249a7_FlagSet::_method_add_var_0(jule::Ptr<jule::Bool> _17037_var,jule::Str _17046_name,jule::I32 _17057_short,jule::Str _17070_what) {
	jule::Ptr<_23d0249a7_Flag_3> _17117_flag = (*this)._method_add_flag_common_0(_17046_name,_17057_short,_17070_what);
	_17117_flag->_field__default=(*(_17037_var));
	_17117_flag->_field__data=_17037_var;
}

inline void _23d0249a7_FlagSet::_method_add_var_1(jule::Ptr<jule::Str> _17037_var,jule::Str _17046_name,jule::I32 _17057_short,jule::Str _17070_what) {
	jule::Ptr<_23d0249a7_Flag_4> _17117_flag = (*this)._method_add_flag_common_1(_17046_name,_17057_short,_17070_what);
	_17117_flag->_field__default=(*(_17037_var));
	_17117_flag->_field__data=_17037_var;
}







std::ostream &operator<<(std::ostream &_Stream, const _23d0249a7_FlagSet &_Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_EnumItemDecl::_method_auto_expr(void) {
	return (*this)._field_expr == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_EnumDecl::_method_default_typed(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _23e45734a_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_UseExpr &_Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_CoExpr &_Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _225146a37_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b85b3_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_225036509_FieldIns> _225036509_Field::_method_instance(void) {
	return jule::new_struct<_225036509_FieldIns>(new( std::nothrow ) _225036509_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _225036509_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_225036509_StructIns> _225036509_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ptr<_225036509_StructIns> _6717_ins = jule::new_struct_ptr<_225036509_StructIns>(new( std::nothrow ) _225036509_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_225036509_FieldIns>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_fields.len())),jule::Slice<jule::Ptr<_2252d6a73_Fn>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_methods.len())),jule::Bool(),_22551ab31_ReferenceStack::_static_method_new()));
	{
		auto &expr = this->self->_field_fields;
		auto it = expr.begin();
		_iter_begin_5555275616:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Field> _225036509_f = *it;
			{
				_6717_ins->_field_fields = jule::alloc_for_append(_6717_ins->_field_fields,1);_6717_ins->_field_fields.push(_225036509_f->_method_instance());
				if ((_225036509_f->_field_kind->_field_kind != nullptr) && _225036509_f->_field_kind->_field_kind->_method_mutable()) {
					_6717_ins->_field_mutable=true;
				}
			}
			_iter_next_5555275616:;
			++it;
			goto _iter_begin_5555275616;
		}
		_iter_end_5555275616:;
	}
	{
		auto &expr = this->self->_field_methods;
		auto it = expr.begin();
		_iter_begin_5555277616:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _225036509_f = *it;
			{
				jule::Ptr<_2252d6a73_Fn> _8221_fins = jule::new_struct_ptr<_2252d6a73_Fn>(new( std::nothrow ) _2252d6a73_Fn(_225036509_f->_field_sema,_225036509_f->_field_token,_225036509_f->_field_global,_225036509_f->_field_unsafety,_225036509_f->_field_public,_225036509_f->_field_cpp_linked,_225036509_f->_field_statically,_225036509_f->_field_exceptional,_225036509_f->_field_ident,_225036509_f->_field_directives,_225036509_f->_field_doc,_225036509_f->_field_scope,_225036509_f->_field_generics,_225036509_f->_field_result,_225036509_f->_field_params,_225036509_f->_field_owner,nullptr));
				_6717_ins->_field_methods = jule::alloc_for_append(_6717_ins->_field_methods,1);_6717_ins->_field_methods.push(_8221_fins);
			}
			_iter_next_5555277616:;
			++it;
			goto _iter_begin_5555277616;
		}
		_iter_end_5555277616:;
	}
	return _6717_ins;
}



inline jule::Ptr<_225036509_StructIns> _225036509_Struct::_method_append_instance(jule::Ptr<_225036509_StructIns>& _10939_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto &expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_5555287632:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_StructIns> _225036509_ains = *it;
			{
				if (_225036509_ains->_method_same(_10939_ins)) {
					return _225036509_ains;
				}
			}
			_iter_next_5555287632:;
			++it;
			goto _iter_begin_5555287632;
		}
		_iter_end_5555287632:;
	}
	(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_10939_ins);
	return nullptr;
}



inline jule::Ptr<_2252d6a73_Fn> _225036509_Struct::_method_find_method(jule::Str _12734_ident,jule::Bool _12746_statically) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_5555296144:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _225036509_f = *it;
			{
				if ((_225036509_f->_field_statically == _12746_statically) && (_225036509_f->_field_ident == _12734_ident)) {
					return _225036509_f;
				}
			}
			_iter_next_5555296144:;
			++it;
			goto _iter_begin_5555296144;
		}
		_iter_end_5555296144:;
	}
	return nullptr;
}



inline jule::Ptr<_2258258db_Var> _225036509_Struct::_method_find_static(jule::Str _13834_ident) {
	{
		auto &expr = (*this)._field_statics;
		auto it = expr.begin();
		_iter_begin_5555300320:;
		if (it != expr.end()) {
			jule::Ptr<_2258258db_Var> _225036509_v = *it;
			{
				if (_225036509_v->_field_ident == _13834_ident) {
					return _225036509_v;
				}
			}
			_iter_next_5555300320:;
			++it;
			goto _iter_begin_5555300320;
		}
		_iter_end_5555300320:;
	}
	return nullptr;
}



inline jule::Ptr<_225036509_Field> _225036509_Struct::_method_find_field(jule::Str _14933_ident) {
	{
		auto &expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_5555304320:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Field> _225036509_f = *it;
			{
				if (_225036509_f->_field_ident == _14933_ident) {
					return _225036509_f;
				}
			}
			_iter_next_5555304320:;
			++it;
			goto _iter_begin_5555304320;
		}
		_iter_end_5555304320:;
	}
	return nullptr;
}



inline jule::Bool _225036509_Struct::_method_is_implements(jule::Ptr<_2255ab70a_Trait> _15932_t) {
	{
		auto &expr = (*this)._field_implements;
		auto it = expr.begin();
		_iter_begin_5555308320:;
		if (it != expr.end()) {
			jule::Ptr<_2255ab70a_Trait> &_225036509_it = *it;
			{
				if (_15932_t == _225036509_it) {
					return true;
				}
			}
			_iter_next_5555308320:;
			++it;
			goto _iter_begin_5555308320;
		}
		_iter_end_5555308320:;
	}
	return false;
}



inline jule::Bool _225036509_Struct::_method_is_derives(jule::Str _16929_ident) {
	{
		auto &expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_5555310064:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_Directive> &_225036509_d = *it;
			{
				if (_225036509_d->_field_tag._field_kind == jule::Str("derive", 6)) {
					if ((_225036509_d->_field_args.len() == 1LL) && (_225036509_d->_field_args[0LL]._field_kind == _16929_ident)) {
						return true;
					}
				}
			}
			_iter_next_5555310064:;
			++it;
			goto _iter_begin_5555310064;
		}
		_iter_end_5555310064:;
	}
	return false;
}



inline jule::Bool _225036509_Struct::_method_is_uses(jule::Ptr<_225036509_Struct> _18126_s) {
	{
		auto &expr = (*this)._field_uses;
		auto it = expr.begin();
		_iter_begin_5555317056:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> &_225036509_u = *it;
			{
				while (_18126_s == _225036509_u) {
					{
						return true;
					}
				_iter_next_5555318368:;
				}
				_iter_end_5555318368:;
			}
			_iter_next_5555317056:;
			++it;
			goto _iter_begin_5555317056;
		}
		_iter_end_5555317056:;
	}
	return false;
}



inline jule::Bool _225036509_Struct::_method_has_ref_accessible(void) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_5555318880:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> &_225036509_m = *it;
			{
				if ((_225036509_m->_field_params.len() > 0LL) && _225036509_m->_field_params[0LL]->_method_is_ref()) {
					return true;
				}
			}
			_iter_next_5555318880:;
			++it;
			goto _iter_begin_5555318880;
		}
		_iter_end_5555318880:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _225036509_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2252d6a73_ParamIns> _2252d6a73_Param::_method_instance(void) {
	return jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(this->self,jule::Ptr<_23e2b5818_TypeKind>()));
}



inline jule::Bool _2252d6a73_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _2252d6a73_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _2252d6a73_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2252d6a73_Fn::_method_is_void(void) {
	return (*this)._field_result == nullptr;
}



inline jule::Bool _2252d6a73_Fn::_method_is_method(void) {
	return (*this)._field_owner != nullptr;
}



inline jule::Bool _2252d6a73_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _2252d6a73_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _2252d6a73_Fn::_method_is_anon(void) {
	return _23e730c0b_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _2252d6a73_Fn::_method_any_var(void) {
	return ((*this)._field_result != nullptr) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _2252d6a73_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto &expr = (*this)._field_params;
		auto it = expr.begin();
		_iter_begin_5555390416:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Param> &_2252d6a73_p = *it;
			{
				if (_2252d6a73_parameter_uses_generics(_2252d6a73_p,(*this)._field_generics)) {
					return true;
				}
			}
			_iter_next_5555390416:;
			++it;
			goto _iter_begin_5555390416;
		}
		_iter_end_5555390416:;
	}
	return false;
}



inline jule::Bool _2252d6a73_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if (((*this)._field_result->_field_kind == nullptr) || ((*this)._field_result->_field_kind->_field_kind == nullptr)) {
		return false;
	}
	return _2252d6a73_kind_uses_generics((*this)._field_result->_field_kind->_field_kind,(*this)._field_generics);
}



inline jule::Ptr<_2252d6a73_FnIns> _2252d6a73_Fn::_method_instance_force(void) {
	jule::Ptr<_2252d6a73_FnIns> _11117_ins = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),this->self,jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>(),jule::Ptr<_23e2b5818_TypeKind>(),jule::new_struct<_2255ba3ea_Scope>(new( std::nothrow ) _2255ba3ea_Scope()),_22551ab31_ReferenceStack::_static_method_new(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(),jule::Bool(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_11117_ins->_field_refers=_22551ab31_ReferenceStack::_static_method_new();
	}
	_11117_ins->_field_params=jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_params.len()));
	{
		auto &expr = this->self->_field_params;
		auto it = expr.begin();
		_iter_begin_5555399456:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Param> _2252d6a73_p = *it;
			{
				_11117_ins->_field_params = jule::alloc_for_append(_11117_ins->_field_params,1);_11117_ins->_field_params.push(_2252d6a73_p->_method_instance());
			}
			_iter_next_5555399456:;
			++it;
			goto _iter_begin_5555399456;
		}
		_iter_end_5555399456:;
	}
	if (_11117_ins->_field_decl->_field_result != nullptr) {
		_11117_ins->_field_result=_11117_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _11117_ins;
}



inline jule::Ptr<_2252d6a73_FnIns> _2252d6a73_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _2252d6a73_Fn::_method_append_instance(jule::Ptr<_2252d6a73_FnIns>& _14239_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14239_ins);
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14239_ins);
		return std::make_tuple(true,-1LL);
	}
	{
		auto &expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_5555416272:;
		if (it != expr.end()) {
			jule::Int _2252d6a73_j = it - expr.begin();
			jule::Ptr<_2252d6a73_FnIns> &_2252d6a73_ains = *it;
			{
				if (_2252d6a73_ains->_method_same(_14239_ins)) {
					return std::make_tuple(false,_2252d6a73_j);
				}
			}
			_iter_next_5555416272:;
			++it;
			_2252d6a73_j++;
			goto _iter_begin_5555416272;
		}
		_iter_end_5555416272:;
	}
	(*this)._field_instances = jule::alloc_for_append((*this)._field_instances,1);(*this)._field_instances.push(_14239_ins);
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _2252d6a73_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_225615962_ImportInfo> _225615962_ImportInfo::_method_find_package(jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_225615962_ImportInfo> _225615962_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_2258258db_Var> _225615962_ImportInfo::_method_find_var(jule::Str _14731_ident,jule::Bool _14743_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14731_ident)))) {
		return nullptr;
	}
	return _225615962_find_var_in_package((*this)._field_package->_field_files,_14731_ident,false);
}



inline jule::Ptr<_23e2b5818_TypeAlias> _225615962_ImportInfo::_method_find_type_alias(jule::Str _16038_ident,jule::Bool _16050_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16038_ident)))) {
		return nullptr;
	}
	return _225615962_find_type_alias_in_package((*this)._field_package->_field_files,_16038_ident,false);
}



inline jule::Ptr<_225036509_Struct> _225615962_ImportInfo::_method_find_struct(jule::Str _17334_ident,jule::Bool _17346_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17334_ident)))) {
		return nullptr;
	}
	return _225615962_find_struct_in_package((*this)._field_package->_field_files,_17334_ident,false);
}



inline jule::Ptr<_2252d6a73_Fn> _225615962_ImportInfo::_method_find_fn(jule::Str _18630_ident,jule::Bool _18642_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18630_ident)))) {
		return nullptr;
	}
	return _225615962_find_fn_in_package((*this)._field_package->_field_files,_18630_ident,false);
}



inline jule::Ptr<_2255ab70a_Trait> _225615962_ImportInfo::_method_find_trait(jule::Str _19833_ident) {
	if ((!((*this)._method_is_lookupable(_19833_ident)))) {
		return nullptr;
	}
	return _225615962_find_trait_in_package((*this)._field_package->_field_files,_19833_ident);
}



inline jule::Ptr<_2255aae79_Enum> _225615962_ImportInfo::_method_find_enum(jule::Str _21032_ident) {
	if ((!((*this)._method_is_lookupable(_21032_ident)))) {
		return nullptr;
	}
	return _225615962_find_enum_in_package((*this)._field_package->_field_files,_21032_ident);
}



inline jule::Bool _225615962_ImportInfo::_method_is_lookupable(jule::Str _22028_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_22028_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _225615962_ImportInfo::_method_exist_ident(jule::Str _24026_ident) {
	{
		auto &expr = (*this)._field_selected;
		auto it = expr.begin();
		_iter_begin_5556744560:;
		if (it != expr.end()) {
			_23e730c0b_Token &_225615962_sident = *it;
			{
				if (_225615962_sident._field_kind == _24026_ident) {
					return true;
				}
			}
			_iter_next_5556744560:;
			++it;
			goto _iter_begin_5556744560;
		}
		_iter_end_5556744560:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _225615962_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_FnCallExpr::_method_unhandled(void) {
	return (*this)._field_exception == nullptr;
}



inline jule::Bool _23e45734a_FnCallExpr::_method_ignored(void) {
	return ((*this)._field_exception != nullptr) && (*this)._field_exception->_field_deferred;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2258258db_Var::_method_is_initialized(void) {
	return (*this)._field_value != nullptr;
}



inline jule::Bool _2258258db_Var::_method_is_type_inferred(void) {
	return ((*this)._field_kind == nullptr) || ((*this)._field_kind->_field_decl == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _2258258db_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline void _22582290a_TypeCompatibilityChecker::_method_push_err(jule::Str _13527_fmt,jule::Slice<jule::Any> _13540_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_13527_fmt,_13540_args);
}



inline jule::Bool _22582290a_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _13932_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_13932_ok = true;
		return _13932_ok;
	}
	jule::Ptr<_2255ab70a_Trait> _14413_trt = (*this)._field_dest->_method_trt();
	jule::Bool _14517_ref = false;
	{
		if ((*this)._field_src->_method_sptr() != nullptr) {
			_case_begin_5557731040:;
			{
				_14517_ref=true;
				(*this)._field_src=(*this)._field_src->_method_sptr()->_field_elem;
				if ((*this)._field_src->_method_strct() == nullptr) {
					_13932_ok = false;
					return _13932_ok;
				}
				goto _case_begin_5557731216;
			}
		}
		else if ((*this)._field_src->_method_strct() != nullptr) {
			_case_begin_5557731216:;
			{
				jule::Ptr<_225036509_StructIns> _15617_s = (*this)._field_src->_method_strct();
				if ((!(_15617_s->_field_decl->_method_is_implements(_14413_trt)))) {
					_13932_ok = false;
					return _13932_ok;
				}
				if ((!(_14517_ref)) && _22582290a_trait_has_reference_receiver(_14413_trt)) {
					(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_13932_ok = false;
					return _13932_ok;
				}
				_13932_ok = true;
				return _13932_ok;
			}
		}
		else if ((*this)._field_src->_method_trt() != nullptr) {
			_case_begin_5557731312:;
			{
				_13932_ok = _14413_trt == (*this)._field_src->_method_trt();
				return _13932_ok;
			}
		}
		else {
			_case_begin_5557729568:;
			{
				_13932_ok = false;
				return _13932_ok;
			}
		}
		_match_end_5557729456:;
	}
}



inline jule::Bool _22582290a_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _17630_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_17630_ok = true;
		return _17630_ok;
	}
	jule::Ptr<_23e2b5818_Ptr> _18117_dest = (*this)._field_dest->_method_ptr();
	if (_18117_dest->_method_is_unsafe()) {
		_17630_ok = true;
		return _17630_ok;
	}
	_17630_ok = (*this)._field_dest->_method_equals((*this)._field_src);
	return _17630_ok;
}



inline jule::Bool _22582290a_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _19031_ok = jule::Bool();
	jule::Ptr<_23e2b5818_Prim> _19113_prim = (*this)._field_dest->_method_prim();
	if ((_19113_prim != nullptr) && _19113_prim->_method_is_any()) {
		_19031_ok = true;
		return _19031_ok;
	}
	_19031_ok = (*this)._field_dest->_method_equals((*this)._field_src);
	return _19031_ok;
}



inline jule::Bool _22582290a_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _19826_ok = jule::Bool();
	if ((*this)._field_dest->_method_ptr() != nullptr) {
		_19826_ok = (*this)._method_check_ptr();
		return _19826_ok;
	}
	if ((*this)._field_dest->_method_nil_compatible()) {
		if ((*this)._field_src->_method_is_nil()) {
			_19826_ok = true;
			return _19826_ok;
		}
	}
	{
		if ((*this)._field_dest->_method_prim() != nullptr) {
			_case_begin_5557760016:;
			{
				_19826_ok = (*this)._method_check_prim();
				return _19826_ok;
			}
		}
		else if ((*this)._field_dest->_method_trt() != nullptr) {
			_case_begin_5557759264:;
			{
				_19826_ok = (*this)._method_check_trait();
				return _19826_ok;
			}
		}
		else {
			_case_begin_5557757920:;
			{
				_19826_ok = (*this)._field_dest->_method_equals((*this)._field_src);
				return _19826_ok;
			}
		}
		_match_end_5557757680:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _22582290a_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _22582290a_AssignTypeChecker::_method_push_err(jule::Str _22527_fmt,jule::Slice<jule::Any> _22540_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_22527_fmt,_22540_args);
}



inline jule::Bool _22582290a_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _23017_valid = true;
	{
		if ((*this)._field_d->_field_kind->_method_fnc() != nullptr) {
			_case_begin_5557768096:;
			{
				jule::Ptr<_2252d6a73_FnIns> _23417_f = (*this)._field_d->_field_kind->_method_fnc();
				{
					if (_23417_f->_method_is_builtin()) {
						_case_begin_5557771888:;
						{
							(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_23417_f->_field_decl->_field_cpp_linked) {
						_case_begin_5557772000:;
						{
							(*this)._method_push_err(jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_23417_f->_field_decl->_method_is_method()) {
						_case_begin_5557772112:;
						{
							(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_23417_f->_field_decl->_field_generics.len() > 0LL) {
						_case_begin_5557772224:;
						{
							(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					_match_end_5557771696:;
				}
			}
		}
		else if ((*this)._field_d->_field_kind->_method_tup() != nullptr) {
			_case_begin_5557768208:;
			{
				(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23017_valid=false;
			}
		}
		_match_end_5557767936:;
	}
	return _23017_valid;
}



inline jule::Bool _22582290a_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || ((*this)._field_dest->_method_prim() == nullptr)) || ((*this)._field_d->_field_kind->_method_prim() == nullptr)) || (!(_2261088d8_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _26913_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (_2261088d8_is_float(_26913_kind)) {
			_case_begin_5557789488:;
			{
				if ((!(_22582290a_float_assignable(_26913_kind,(*this)._field_d)))) {
					(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else if (_2261088d8_is_int(_26913_kind)) {
			_case_begin_5557789584:;
			{
				if ((!(_22582290a_int_assignable(_26913_kind,(*this)._field_d)))) {
					(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else {
			_case_begin_5557787904:;
			{
				return false;
			}
		}
		_match_end_5557787664:;
	}
	return true;
}



inline jule::Bool _22582290a_AssignTypeChecker::_method_is_prim(void) {
	if ((*this)._field_dest->_field_variadic || (*this)._field_d->_field_kind->_field_variadic) {
		return false;
	}
	if ((*this)._field_dest->_method_cpp_linked() || (*this)._field_d->_field_kind->_method_cpp_linked()) {
		return false;
	}
	return ((*this)._field_dest->_method_prim() != nullptr) && ((*this)._field_d->_field_kind->_method_prim() != nullptr);
}



inline jule::Bool _22582290a_AssignTypeChecker::_method_check(void) {
	{
		if ((*this)._field_d == nullptr) {
			_case_begin_5557799488:;
			{
				return false;
			}
		}
		else if ((!((*this)._method_check_validity()))) {
			_case_begin_5557801744:;
			{
				return false;
			}
		}
		else if ((*this)._method_check_const()) {
			_case_begin_5557801840:;
			{
				return true;
			}
		}
		else if ((*this)._method_is_prim()) {
			_case_begin_5557801936:;
			{
				jule::Ptr<_23e2b5818_Prim> _31817_dest = (*this)._field_dest->_method_prim();
				if (_31817_dest->_method_is_any()) {
					return true;
				}
				jule::Ptr<_23e2b5818_Prim> _32221_src = (*this)._field_d->_field_kind->_method_prim();
				if (_22610564e_types_are_compatible(_31817_dest->_field_kind,_32221_src->_field_kind)) {
					return true;
				}
			}
		}
		_match_end_5557799248:;
	}
	return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token);
}







std::ostream &operator<<(std::ostream &_Stream, const _22582290a_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _22582290a_DynamicTypeAnnotation::_method_push_generic(jule::Ptr<_23e2b5818_TypeKind>& _34136_k,jule::Int _34150_i) {
	(*this)._field_f->_field_generics[_34150_i]=_34136_k;
}



inline jule::Bool _22582290a_DynamicTypeAnnotation::_method_annotate_prim(jule::Ptr<_23e2b5818_TypeKind>& _34544_k) {
	jule::Bool _34560_ok = jule::Bool();
	jule::Str _34613_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_5557824144:;
		if (it != expr.end()) {
			jule::Int _22582290a_i = it - expr.begin();
			jule::Ptr<_23e45734a_GenericDecl> &_22582290a_g = *it;
			{
				if (_34613_kind != _22582290a_g->_field_ident) {
					goto _iter_next_5557824144;
				}
				jule::Ptr<_23e2b5818_TypeKind> _35217_t = (*this)._field_f->_field_generics[_22582290a_i];
				{
					if (_35217_t == nullptr) {
						_case_begin_5557828480:;
						{
							(*this)._method_push_generic(_34544_k,_22582290a_i);
						}
					}
					else if ((!(_35217_t->_method_equals(_34544_k)))) {
						_case_begin_5557828576:;
						{
							_34560_ok = false;
							return _34560_ok;
						}
					}
					_match_end_5557828240:;
				}
				(*((*this)._field_k))->_field_kind=_34544_k->_field_kind;
				_34560_ok = true;
				return _34560_ok;
			}
			_iter_next_5557824144:;
			++it;
			_22582290a_i++;
			goto _iter_begin_5557824144;
		}
		_iter_end_5557824144:;
	}
	_34560_ok = false;
	return _34560_ok;
}



inline jule::Bool _22582290a_DynamicTypeAnnotation::_method_annotate_slc(jule::Ptr<_23e2b5818_TypeKind>& _36943_k) {
	jule::Bool _36959_ok = jule::Bool();
	jule::Ptr<_23e2b5818_Slc> _37017_pslc = (*((*this)._field_k))->_method_slc();
	if (_37017_pslc == nullptr) {
		_36959_ok = false;
		return _36959_ok;
	}
	jule::Ptr<_23e2b5818_Slc> _37517_slc = _36943_k->_method_slc();
	(*this)._field_k=(&(_37017_pslc->_field_elem));
	_36959_ok = (*this)._method_annotate_kind(_37517_slc->_field_elem);
	return _36959_ok;
}



inline jule::Bool _22582290a_DynamicTypeAnnotation::_method_check_map_key(jule::Ptr<_23e2b5818_TypeKind>* _38043_k,jule::Ptr<_23e2b5818_TypeKind>& _38063_ck) {
	jule::Bool _38080_ok = jule::Bool();
	jule::Ptr<_23e2b5818_TypeKind>* _38117_old = (*this)._field_k;
	(*this)._field_k=_38043_k;
	_38080_ok=(*this)._method_annotate_kind(_38063_ck);
	(*this)._field_k=_38117_old;
	return _38080_ok;
}



inline jule::Bool _22582290a_DynamicTypeAnnotation::_method_annotate_map(jule::Ptr<_23e2b5818_TypeKind>& _38843_k) {
	jule::Bool _38859_ok = jule::Bool();
	jule::Ptr<_23e2b5818_Map> _38917_pmap = (*((*this)._field_k))->_method_map();
	if (_38917_pmap == nullptr) {
		_38859_ok = false;
		return _38859_ok;
	}
	jule::Ptr<_23e2b5818_Map> _39417_m = _38843_k->_method_map();
	_38859_ok = (*this)._method_check_map_key((&(_38917_pmap->_field_key)),_39417_m->_field_key) && (*this)._method_check_map_key((&(_38917_pmap->_field_val)),_39417_m->_field_val);
	return _38859_ok;
}



inline jule::Bool _22582290a_DynamicTypeAnnotation::_method_annotate_fn(jule::Ptr<_23e2b5818_TypeKind>& _40042_k) {
	jule::Bool _40058_ok = jule::Bool();
	jule::Ptr<_2252d6a73_FnIns> _40117_pf = (*((*this)._field_k))->_method_fnc();
	if (_40117_pf == nullptr) {
		_40058_ok = false;
		return _40058_ok;
	}
	jule::Ptr<_2252d6a73_FnIns> _40517_f = _40042_k->_method_fnc();
	{
		if (_40117_pf->_field_params.len() != _40517_f->_field_params.len()) {
			_case_begin_5557858384:;
			{
				_40058_ok = false;
				return _40058_ok;
			}
		}
		else if (_40117_pf->_field_decl->_method_is_void() != _40517_f->_field_decl->_method_is_void()) {
			_case_begin_5557858496:;
			{
				_40058_ok = false;
				return _40058_ok;
			}
		}
		_match_end_5557858224:;
	}
	_40058_ok=true;
	jule::Ptr<_23e2b5818_TypeKind>* _41517_old = (*this)._field_k;
	{
		auto &expr = _40517_f->_field_params;
		auto it = expr.begin();
		_iter_begin_5557862016:;
		if (it != expr.end()) {
			jule::Int _22582290a_i = it - expr.begin();
			jule::Ptr<_2252d6a73_ParamIns> _22582290a_fp = *it;
			{
				(*this)._field_k=(&(_40117_pf->_field_params[_22582290a_i]->_field_kind));
				_40058_ok=(*this)._method_annotate_kind(_22582290a_fp->_field_kind) && _40058_ok;
			}
			_iter_next_5557862016:;
			++it;
			_22582290a_i++;
			goto _iter_begin_5557862016;
		}
		_iter_end_5557862016:;
	}
	if ((!(_40117_pf->_field_decl->_method_is_void()))) {
		(*this)._field_k=(&(_40117_pf->_field_result));
		_40058_ok=(*this)._method_annotate_kind(_40517_f->_field_result) && _40058_ok;
	}
	(*this)._field_k=_41517_old;
	return _40058_ok;
}



inline jule::Bool _22582290a_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ptr<_23e2b5818_TypeKind>& _43043_k) {
	jule::Bool _43059_ok = jule::Bool();
	jule::Ptr<_23e2b5818_Ptr> _43117_pptr = (*((*this)._field_k))->_method_ptr();
	if (_43117_pptr == nullptr) {
		_43059_ok = false;
		return _43059_ok;
	}
	jule::Ptr<_23e2b5818_Ptr> _43617_ptr = _43043_k->_method_ptr();
	(*this)._field_k=(&(_43117_pptr->_field_elem));
	_43059_ok = (*this)._method_annotate_kind(_43617_ptr->_field_elem);
	return _43059_ok;
}



inline jule::Bool _22582290a_DynamicTypeAnnotation::_method_annotate_sptr(jule::Ptr<_23e2b5818_TypeKind>& _44144_k) {
	jule::Bool _44160_ok = jule::Bool();
	jule::Ptr<_23e2b5818_Sptr> _44217_ssptr = (*((*this)._field_k))->_method_sptr();
	if (_44217_ssptr == nullptr) {
		_44160_ok = false;
		return _44160_ok;
	}
	jule::Ptr<_23e2b5818_Sptr> _44717_sptr = _44144_k->_method_sptr();
	(*this)._field_k=(&(_44217_ssptr->_field_elem));
	_44160_ok = (*this)._method_annotate_kind(_44717_sptr->_field_elem);
	return _44160_ok;
}



inline jule::Bool _22582290a_DynamicTypeAnnotation::_method_annotate_any(jule::Ptr<_23e2b5818_TypeKind>& _45243_k) {
	jule::Bool _45259_ok = jule::Bool();
	jule::Str _45313_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_5557885936:;
		if (it != expr.end()) {
			jule::Int _22582290a_i = it - expr.begin();
			jule::Ptr<_23e45734a_GenericDecl> &_22582290a_g = *it;
			{
				if (_45313_kind != _22582290a_g->_field_ident) {
					goto _iter_next_5557885936;
				}
				jule::Ptr<_23e2b5818_TypeKind> _45917_t = (*this)._field_f->_field_generics[_22582290a_i];
				{
					if (_45917_t == nullptr) {
						_case_begin_5557890256:;
						{
							(*this)._method_push_generic(_45243_k,_22582290a_i);
						}
					}
					else if ((!(_45917_t->_method_equals(_45243_k)))) {
						_case_begin_5557890352:;
						{
							_45259_ok = false;
							return _45259_ok;
						}
					}
					_match_end_5557890016:;
				}
				(*((*this)._field_k))->_field_kind=_45243_k->_field_kind;
				_45259_ok = true;
				return _45259_ok;
			}
			_iter_next_5557885936:;
			++it;
			_22582290a_i++;
			goto _iter_begin_5557885936;
		}
		_iter_end_5557885936:;
	}
	_45259_ok = false;
	return _45259_ok;
}



inline jule::Bool _22582290a_DynamicTypeAnnotation::_method_annotate_kind(jule::Ptr<_23e2b5818_TypeKind>& _47644_k) {
	jule::Bool _47660_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _47660_ok;
	}
	{
		if ((*this)._method_annotate_any(_47644_k)) {
			_case_begin_5557898016:;
			{
				_47660_ok = true;
				return _47660_ok;
			}
		}
		else if (_47644_k->_method_prim() != nullptr) {
			_case_begin_5557898112:;
			{
				_47660_ok = (*this)._method_annotate_prim(_47644_k);
				return _47660_ok;
			}
		}
		else if (_47644_k->_method_slc() != nullptr) {
			_case_begin_5557897376:;
			{
				_47660_ok = (*this)._method_annotate_slc(_47644_k);
				return _47660_ok;
			}
		}
		else if (_47644_k->_method_map() != nullptr) {
			_case_begin_5557897472:;
			{
				_47660_ok = (*this)._method_annotate_map(_47644_k);
				return _47660_ok;
			}
		}
		else if (_47644_k->_method_fnc() != nullptr) {
			_case_begin_5557897568:;
			{
				_47660_ok = (*this)._method_annotate_fn(_47644_k);
				return _47660_ok;
			}
		}
		else if (_47644_k->_method_ptr() != nullptr) {
			_case_begin_5557896800:;
			{
				_47660_ok = (*this)._method_annotate_ptr(_47644_k);
				return _47660_ok;
			}
		}
		else if (_47644_k->_method_sptr() != nullptr) {
			_case_begin_5557896896:;
			{
				_47660_ok = (*this)._method_annotate_sptr(_47644_k);
				return _47660_ok;
			}
		}
		else {
			_case_begin_5557895024:;
			{
				_47660_ok = false;
				return _47660_ok;
			}
		}
		_match_end_5557896432:;
	}
}



inline jule::Bool _22582290a_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _49336_ok = jule::Bool();
	(*this)._field_k=(&((*this)._field_p->_field_kind));
	_49336_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _49336_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _22582290a_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _22582290a_FnCallArgChecker::_method_push_err_token(_23e730c0b_Token _50933_token,jule::Str _50947_fmt,jule::Slice<jule::Any> _50960_args) {
	(*this)._field_e->_field_s->_method_push_err(_50933_token,_50947_fmt,_50960_args);
}



inline void _22582290a_FnCallArgChecker::_method_push_err(jule::Str _51327_fmt,jule::Slice<jule::Any> _51340_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_51327_fmt,_51340_args);
}



inline jule::Slice<jule::Ptr<_2252d6a73_ParamIns>> _22582290a_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && ((*this)._field_f->_field_params[0LL]->_field_decl != nullptr)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _22582290a_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>& _52632_params) {
	jule::Bool _52655_ok = jule::Bool();
	jule::I64 _52717_n = _52632_params.len();
	if ((_52717_n > 0LL) && _52632_params[0LL]->_field_decl->_method_is_self()) {
		(_52717_n)--;
	}
	jule::I64 _53217_diff = _52717_n - (*this)._field_args.len();
	{
		if (_53217_diff == 0LL) {
			_case_begin_5557932480:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if ((_52717_n > 0LL) && _52632_params[_52717_n - 1LL]->_field_decl->_field_variadic) {
			_case_begin_5557932576:;
			{
				_52655_ok = true;
				return _52655_ok;
			}
		}
		else if ((_53217_diff < 0LL) || (_53217_diff > _52632_params.len())) {
			_case_begin_5557932688:;
			{
				(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
				_52655_ok = false;
				return _52655_ok;
			}
		}
		_match_end_5557932320:;
	}
	jule::Str _54517_idents = jule::Str();
	for (; _53217_diff > 0LL; (_53217_diff)--) {
		{
			_54517_idents+=jule::Str(", ", 2) + _52632_params[_52717_n - _53217_diff]->_field_decl->_field_ident;
		}
	_iter_next_5557938368:;
	}
	_iter_end_5557938368:;
	_54517_idents=_54517_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_54517_idents)}));
	_52655_ok = false;
	return _52655_ok;
}



inline jule::Bool _22582290a_FnCallArgChecker::_method_check_arg(jule::Ptr<_2252d6a73_ParamIns>& _55533_p,jule::Ptr<_225aa4a5a_Data>& _55552_arg,_23e730c0b_Token& _55569_error_token) {
	jule::Bool _55591_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation && _2252d6a73_parameter_uses_generics(_55533_p->_field_decl,(*this)._field_f->_field_decl->_field_generics)) {
		_22582290a_DynamicTypeAnnotation _55721_dta = _22582290a_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_55533_p,_55552_arg,_55569_error_token,nullptr);
		_55591_ok=_55721_dta._method_annotate();
		if ((!(_55591_ok))) {
			(*this)._method_push_err_token(_55569_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_55591_ok = false;
			return _55591_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_55533_p->_field_decl->_field_mutable,_55533_p->_field_decl->_field_reference,_55533_p->_field_kind,_55552_arg,_55569_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_55533_p->_field_decl->_field_reference,_55533_p->_field_kind,_55552_arg,_55569_error_token);
	_55591_ok = true;
	return _55591_ok;
}



inline jule::Bool _22582290a_FnCallArgChecker::_method_push(jule::Ptr<_2252d6a73_ParamIns>& _57728_p,jule::Ptr<_23e45734a_Expr> _57746_arg) {
	jule::Bool _57760_ok = jule::Bool();
	jule::Ptr<_23e2b5818_TypeKind> _57817_old = (*this)._field_e->_field_prefix;
	jule::Bool _57913_old_immut = (*this)._field_e->_field_immutable;
	jule::Ptr<_225aa4a5a_Data> _58017_d = nullptr;
	(*this)._field_e->_field_immutable=(!(_57728_p->_field_decl->_field_mutable));
	if ((!((*this)._field_dynamic_annotation)) && (!(_57728_p->_field_decl->_field_variadic))) {
		(*this)._field_e->_field_prefix=_57728_p->_field_kind;
	} else {
		(*this)._field_e->_field_prefix=nullptr;
	}
	_58017_d=(*this)._field_e->_method_eval_expr_kind(_57746_arg->_field_kind);
	(*this)._field_e->_field_prefix=_57817_old;
	(*this)._field_e->_field_immutable=_57913_old_immut;
	if (_58017_d == nullptr) {
		_57760_ok = false;
		return _57760_ok;
	}
	(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(_58017_d->_field_model);
	_57760_ok = (*this)._method_check_arg(_57728_p,_58017_d,_57746_arg->_field_token);
	return _57760_ok;
}



inline jule::Bool _22582290a_FnCallArgChecker::_method_push_variadic(jule::Ptr<_2252d6a73_ParamIns>& _60137_p,jule::Int _60155_i) {
	jule::Bool _60165_ok = jule::Bool();
	_60165_ok=true;
	jule::Bool _60317_variadiced = false;
	jule::Bool _60413_more = (_60155_i + 1LL) < (*this)._field_args.len();
	jule::Ptr<_2255b85b3_SliceExprModel> _60517_model = jule::new_struct<_2255b85b3_SliceExprModel>(new( std::nothrow ) _2255b85b3_SliceExprModel(_60137_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ptr<_23e2b5818_TypeKind> _60917_old = (*this)._field_e->_field_prefix;
	for (; _60155_i < (*this)._field_args.len(); (_60155_i)++) {
		{
			jule::Ptr<_23e45734a_Expr> _61121_arg = (*this)._field_args[_60155_i];
			{
				auto &_match_expr{ _61121_arg->_field_kind };
				if (_match_expr.type_is<jule::Ptr<_23e45734a_VariadicExpr>>()) {
					_case_begin_5557977872:;
					{
						(*this)._field_e->_field_prefix=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_23e2b5818_Slc>(new( std::nothrow ) _23e2b5818_Slc(_60137_p->_field_kind))));
					}
				}
				else {
					_case_begin_5557975392:;
					{
						(*this)._field_e->_field_prefix=_60137_p->_field_kind;
					}
				}
				_match_end_5557976464:;
			}
			jule::Ptr<_225aa4a5a_Data> _62121_d = (*this)._field_e->_method_eval(_61121_arg);
			if (_62121_d == nullptr) {
				_60165_ok=false;
				goto _iter_next_5557974032;
			}
			if (_62121_d->_field_kind->_field_variadic) {
				_60317_variadiced=true;
				jule::Bool _63021_pold = _60137_p->_field_kind->_field_variadic;
				jule::Bool _63121_dold = _62121_d->_field_kind->_field_variadic;
				_60137_p->_field_kind->_field_variadic=false;
				_62121_d->_field_kind->_field_variadic=false;
				__JULE_DEFER({
					_60137_p->_field_kind->_field_variadic=_63021_pold;
					_62121_d->_field_kind->_field_variadic=_63121_dold;
				});
				{
					auto &_match_expr{ _62121_d->_field_model };
					if (_match_expr.type_is<jule::Ptr<_2255b85b3_SliceExprModel>>()) {
						_case_begin_5557986544:;
						{
							_60517_model=_62121_d->_field_model.operator jule::Ptr<_2255b85b3_SliceExprModel>();
							_60517_model->_field_elem_kind=_60137_p->_field_kind;
						}
					}
					else {
						_case_begin_5557982912:;
						{
							_60517_model=nullptr;
							(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(_62121_d->_field_model);
						}
					}
					_match_end_5557984160:;
				}
				_60165_ok=_60165_ok && (*this)._method_check_arg(_60137_p,_62121_d,_61121_arg->_field_token);
				goto _iter_next_5557974032;
			}
			_60517_model->_field_elems = jule::alloc_for_append(_60517_model->_field_elems,1);_60517_model->_field_elems.push(_62121_d->_field_model);
			_60165_ok=_60165_ok && (*this)._method_check_arg(_60137_p,_62121_d,_61121_arg->_field_token);
		}
	_iter_next_5557974032:;
	}
	_iter_end_5557974032:;
	(*this)._field_e->_field_prefix=_60917_old;
	if (_60317_variadiced && _60413_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	}
	if (_60517_model != nullptr) {
		(*this)._field_arg_models = jule::alloc_for_append((*this)._field_arg_models,1);(*this)._field_arg_models.push(jule::Any(_60517_model));
	}
	return _60165_ok;
}



inline jule::Bool _22582290a_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>& _66834_params) {
	jule::Bool _66857_ok = jule::Bool();
	_66857_ok=true;
	jule::Int _67017_i = 0LL;
	_julec_label_iter:;
	while (_67017_i < _66834_params.len()) {
		{
			jule::Ptr<_2252d6a73_ParamIns> _67321_p = _66834_params[_67017_i];
			{
				if (_67321_p->_field_decl->_method_is_self()) {
					_case_begin_5558001040:;
				}
				else if (_67321_p->_field_decl->_field_variadic) {
					_case_begin_5558000768:;
					{
						_66857_ok=(*this)._method_push_variadic(_67321_p,_67017_i) && _66857_ok;
						goto _iter_end_5557996416;
					}
				}
				else if ((*this)._field_args.len() <= _67017_i) {
					_case_begin_5558002432:;
					{
						_66857_ok=false;
						goto _iter_end_5557996416;
					}
				}
				else {
					_case_begin_5557999968:;
					{
						_66857_ok=(*this)._method_push(_67321_p,(*this)._field_args[_67017_i]) && _66857_ok;
					}
				}
				_match_end_5557999856:;
			}
			(_67017_i)++;
		}
	_iter_next_5557996416:;
	}
	_iter_end_5557996416:;
	return _66857_ok;
}



inline jule::Bool _22582290a_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _69550_ok = jule::Bool();
	{
		auto &expr = (*this)._field_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_5558007776:;
		if (it != expr.end()) {
			jule::Ptr<_23e2b5818_TypeKind> &_22582290a_g = *it;
			{
				if (_22582290a_g == nullptr) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_69550_ok = false;
					return _69550_ok;
				}
			}
			_iter_next_5558007776:;
			++it;
			goto _iter_begin_5558007776;
		}
		_iter_end_5558007776:;
	}
	_69550_ok = true;
	return _69550_ok;
}



inline jule::Bool _22582290a_FnCallArgChecker::_method_check(void) {
	jule::Bool _70526_ok = jule::Bool();
	jule::Slice<jule::Ptr<_2252d6a73_ParamIns>> _70617_params = (*this)._method_get_params();
	_70526_ok=(*this)._method_check_counts(_70617_params);
	if ((!(_70526_ok))) {
		_70526_ok = false;
		return _70526_ok;
	}
	_70526_ok=(*this)._method_check_args(_70617_params);
	if (_70526_ok && (*this)._field_dynamic_annotation) {
		_70526_ok=(*this)._method_check_dynamic_type_annotation();
	}
	return _70526_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _22582290a_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _22582290a_StructLitChecker::_method_push_err(_23e730c0b_Token _72927_token,jule::Str _72941_fmt,jule::Slice<jule::Any> _72954_args) {
	(*this)._field_e->_method_push_err(_72927_token,_72941_fmt,_72954_args);
}



inline void _22582290a_StructLitChecker::_method_push_suggestion(jule::Str _73434_fmt,jule::Slice<jule::Any> _73447_args) {
	(*this)._field_e->_method_push_suggestion(_73434_fmt,_73447_args);
}



inline void _22582290a_StructLitChecker::_method_push_match(jule::Ptr<_225036509_FieldIns>& _73834_f,jule::Ptr<_225aa4a5a_Data>& _73853_d,_23e730c0b_Token& _73868_error_token) {
	(*this)._field_args = jule::alloc_for_append((*this)._field_args,1);(*this)._field_args.push(jule::new_struct<_2255b85b3_StructArgExprModel>(new( std::nothrow ) _2255b85b3_StructArgExprModel(_73834_f,_73853_d->_field_model)));
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr((!((*this)._field_e->_field_immutable)),false,_73834_f->_field_kind,_73853_d,_73868_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(false,_73834_f->_field_kind,_73853_d,_73868_error_token);
}



inline void _22582290a_StructLitChecker::_method_check_pair(jule::Ptr<_23e45734a_FieldExprPair>& _74934_pair,jule::Slice<jule::Any>& _74961_exprs) {
	jule::Ptr<_225036509_FieldIns> _75117_f = (*this)._field_s->_method_find_field(_74934_pair->_field_field._field_kind);
	if (_75117_f == nullptr) {
		(*this)._method_push_err(_74934_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_74934_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_75117_f->_field_decl->_field_public,_75117_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_74934_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_74934_pair->_field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	_julec_label_dup_lookup:;
	{
		auto &expr = _74961_exprs;
		auto it = expr.begin();
		_iter_begin_5558047136:;
		if (it != expr.end()) {
			jule::Any _22582290a_expr = *it;
			{
				{
					auto &_match_expr{ _22582290a_expr };
					if (_match_expr.type_is<jule::Ptr<_23e45734a_FieldExprPair>>()) {
						_case_begin_5558048352:;
						{
							jule::Ptr<_23e45734a_FieldExprPair> _76725_dpair = _22582290a_expr.operator jule::Ptr<_23e45734a_FieldExprPair>();
							{
								if (_74934_pair == _76725_dpair) {
									_case_begin_5558051472:;
									{
										goto _iter_end_5558047136;
									}
								}
								else if (_74934_pair->_field_field._field_kind == _76725_dpair->_field_field._field_kind) {
									_case_begin_5558051584:;
									{
										(*this)._method_push_err(_74934_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_74934_pair->_field_field._field_kind)}));
										goto _iter_end_5558047136;
									}
								}
								_match_end_5558051328:;
							}
						}
					}
					_match_end_5558048736:;
				}
			}
			_iter_next_5558047136:;
			++it;
			goto _iter_begin_5558047136;
		}
		_iter_end_5558047136:;
	}
	jule::Ptr<_23e2b5818_TypeKind> _77917_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_77917_prefix;
	});
	(*this)._field_e->_field_prefix=_75117_f->_field_kind;
	jule::Ptr<_225aa4a5a_Data> _78317_d = (*this)._field_e->_method_eval_expr_kind(_74934_pair->_field_expr);
	if (_78317_d == nullptr) {
		return;
	}
	(*this)._method_push_match(_75117_f,_78317_d,_74934_pair->_field_field);
}



inline jule::Bool _22582290a_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any>& _79035_exprs) {
	jule::Bool _79117_ok = true;
	{
		auto &expr = _79035_exprs;
		auto it = expr.begin();
		_iter_begin_5558062192:;
		if (it != expr.end()) {
			jule::Int _22582290a_i = it - expr.begin();
			jule::Any _22582290a_expr = *it;
			{
				{
					auto &_match_expr{ _22582290a_expr };
					if (_match_expr.type_is<jule::Ptr<_23e45734a_KeyValPair>>()) {
						_case_begin_5558064112:;
						{
							jule::Ptr<_23e45734a_KeyValPair> _79525_pair = _22582290a_expr.operator jule::Ptr<_23e45734a_KeyValPair>();
							{
								auto &_match_expr{ _79525_pair->_field_key };
								if (_match_expr.type_is<jule::Ptr<_23e45734a_IdentExpr>>()) {
									_case_begin_5558068272:;
								}
								else {
									_case_begin_5558064592:;
									{
										(*this)._method_push_err(_79525_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_79117_ok=false;
										goto _iter_next_5558062192;
									}
								}
								_match_end_5558066848:;
							}
							_79035_exprs.__at(_22582290a_i)=jule::Any(jule::new_struct<_23e45734a_FieldExprPair>(new( std::nothrow ) _23e45734a_FieldExprPair(_79525_pair->_field_key.operator jule::Ptr<_23e45734a_IdentExpr>()->_field_token,_79525_pair->_field_val)));
						}
					}
					_match_end_5558064496:;
				}
			}
			_iter_next_5558062192:;
			++it;
			_22582290a_i++;
			goto _iter_begin_5558062192;
		}
		_iter_end_5558062192:;
	}
	return _79117_ok;
}



inline void _22582290a_StructLitChecker::_method_check(jule::Slice<jule::Any>& _81629_exprs) {
	if (_81629_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_81629_exprs)))) {
		return;
	}
	jule::Bool _82517_paired = false;
	{
		auto &expr = _81629_exprs;
		auto it = expr.begin();
		_iter_begin_5558075008:;
		if (it != expr.end()) {
			jule::Int _22582290a_i = it - expr.begin();
			jule::Any _22582290a_expr = *it;
			{
				{
					auto &_match_expr{ _22582290a_expr };
					if (_match_expr.type_is<jule::Ptr<_23e45734a_FieldExprPair>>()) {
						_case_begin_5558076832:;
						{
							jule::Ptr<_23e45734a_FieldExprPair> _82925_pair = _22582290a_expr.operator jule::Ptr<_23e45734a_FieldExprPair>();
							if ((_22582290a_i > 0LL) && (!(_82517_paired))) {
								(*this)._method_push_err(_82925_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							}
							_82517_paired=true;
							(*this)._method_check_pair(_82925_pair,_81629_exprs);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_23e45734a_Expr>>()) {
						_case_begin_5558077296:;
						{
							jule::Ptr<_23e45734a_Expr> _83725_e = _22582290a_expr.operator jule::Ptr<_23e45734a_Expr>();
							if (_82517_paired) {
								(*this)._method_push_err(_83725_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							}
							if (_22582290a_i >= (*this)._field_s->_field_fields.len()) {
								(*this)._method_push_err(_83725_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
								goto _iter_next_5558075008;
							}
							jule::Ptr<_225036509_FieldIns> _84625_field = (*this)._field_s->_field_fields[_22582290a_i];
							jule::Ptr<_23e2b5818_TypeKind> _84825_prefix = (*this)._field_e->_field_prefix;
							__JULE_DEFER({
								(*this)._field_e->_field_prefix=_84825_prefix;
							});
							(*this)._field_e->_field_prefix=_84625_field->_field_kind;
							jule::Ptr<_225aa4a5a_Data> _85225_d = (*this)._field_e->_method_eval_expr_kind(_83725_e->_field_kind);
							if (_85225_d == nullptr) {
								goto _iter_next_5558075008;
							}
							(*this)._method_push_match(_84625_field,_85225_d,_83725_e->_field_token);
						}
					}
					_match_end_5558077216:;
				}
			}
			_iter_next_5558075008:;
			++it;
			_22582290a_i++;
			goto _iter_begin_5558075008;
		}
		_iter_end_5558075008:;
	}
	if ((!(_82517_paired))) {
		jule::I64 _86317_n = (*this)._field_s->_field_fields.len();
		jule::I64 _86421_diff = _86317_n - _81629_exprs.len();
		{
			if (_86421_diff <= 0LL) {
				_case_begin_5558095392:;
				{
					return;
				}
			}
			_match_end_5558094944:;
		}
		jule::Str _87021_idents = jule::Str();
		for (; _86421_diff > 0LL; (_86421_diff)--) {
			{
				_87021_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[_86317_n - _86421_diff]->_field_decl->_field_ident;
			}
		_iter_next_5558093728:;
		}
		_iter_end_5558093728:;
		_87021_idents=_87021_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_87021_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _22582290a_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _22551ab31_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline void _22582290a_RetTypeChecker::_method_prepare_types(void) {
	if ((*this)._field_f != nullptr) {
		(*this)._field_types=_22582290a_get_result_types((*this)._field_f->_field_result);
	}
}



inline void _22582290a_RetTypeChecker::_method_prepare_exprs(jule::Ptr<_23e45734a_Expr>& _105637_e) {
	if (_105637_e == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _105637_e->_field_kind };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_TupleExpr>>()) {
			_case_begin_5558177664:;
			{
				(*this)._field_exprs=_105637_e->_field_kind.operator jule::Ptr<_23e45734a_TupleExpr>()->_field_expr;
			}
		}
		else {
			_case_begin_5558176816:;
			{
				(*this)._field_exprs = jule::alloc_for_append((*this)._field_exprs,1);(*this)._field_exprs.push(_105637_e);
			}
		}
		_match_end_5558175840:;
	}
}



inline void _22582290a_RetTypeChecker::_method_ret_vars(void) {
	if (((*this)._field_f == nullptr) || (*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ptr<_2258258db_Var>>::alloc(0LL,static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len()));
	jule::Ptr<_2255ba3ea_ScopeChecker> _107617_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _107817_j = 0LL;
	{
		auto &expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_5558185520:;
		if (it != expr.end()) {
			jule::Int _22582290a_i = it - expr.begin();
			_23e730c0b_Token &_22582290a_ident = *it;
			{
				if ((!(_23e730c0b_is_ignore_ident(_22582290a_ident._field_kind)))) {
					(*this)._field_vars = jule::alloc_for_append((*this)._field_vars,1);(*this)._field_vars.push(_107617_root_scope->_field_table->_field_vars[_107817_j]);
					(_107817_j)++;
				} else {
					(*this)._field_vars = jule::alloc_for_append((*this)._field_vars,1);(*this)._field_vars.push(jule::new_struct<_2258258db_Var>(new( std::nothrow ) _2258258db_Var(jule::Ptr<_2255ba3ea_Scope>(),_23e730c0b_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),(*this)._field_types[_22582290a_i])),jule::Ptr<_225aa4a5a_Value>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Ptr<_2258258db_IterRelation>(),jule::Slice<jule::Ptr<_2258258db_Var>>())));
				}
			}
			_iter_next_5558185520:;
			++it;
			_22582290a_i++;
			goto _iter_begin_5558185520;
		}
		_iter_end_5558185520:;
	}
	if (_107817_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _22582290a_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_225aa4a5a_Data>> _110217_datas = jule::Slice<jule::Ptr<_225aa4a5a_Data>>::alloc(0LL,static_cast<jule::I64>((*this)._field_exprs.len()));
	{
		auto &expr = (*this)._field_exprs;
		auto it = expr.begin();
		_iter_begin_5558194944:;
		if (it != expr.end()) {
			jule::Int _22582290a_i = it - expr.begin();
			jule::Ptr<_23e45734a_Expr> _22582290a_expr = *it;
			{
				if (_22582290a_i >= (*this)._field_types.len()) {
					goto _iter_end_5558194944;
				}
				jule::Ptr<_23e2b5818_TypeKind> _110921_t = (*this)._field_types[_22582290a_i];
				jule::Ptr<_225aa4a5a_Data> _111121_d = (*this)._field_sc->_field_s->_method_evalp((*this)._field_sc,_110921_t)->_method_eval_expr(_22582290a_expr);
				if (_111121_d == nullptr) {
					goto _iter_next_5558194944;
				}
				_110217_datas.push(_111121_d);
				if ((!(_111121_d->_field_mutable)) && _111121_d->_field_kind->_method_mutable()) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;
				}
				_22582290a_AssignTypeChecker _112321_ac = _22582290a_AssignTypeChecker((*this)._field_sc->_field_s,_110921_t,_111121_d,(*this)._field_error_token);
				_112321_ac._method_check();
			}
			_iter_next_5558194944:;
			++it;
			_22582290a_i++;
			goto _iter_begin_5558194944;
		}
		_iter_end_5558194944:;
	}
	if (_110217_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_2255b85b3_TupleExprModel>(new( std::nothrow ) _2255b85b3_TupleExprModel(_110217_datas)));
	} else if (_110217_datas.len() == 1LL) {
		(*this)._field_model=_110217_datas[0LL]->_field_model;
	}
}



inline jule::Bool _22582290a_RetTypeChecker::_method_check(jule::Ptr<_23e45734a_Expr>& _114229_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_114229_e);
	(*this)._method_ret_vars();
	jule::I64 _114713_n = (*this)._field_exprs.len();
	if ((_114713_n == 0LL) && ((*this)._field_types.len() > 0LL)) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		}
		return true;
	}
	if (((_114713_n > 0LL) && ((*this)._field_f != nullptr)) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	}
	if (_114713_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if (_114713_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>());
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _22582290a_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_Node::_method_is_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_23e45734a_FnDecl>>() || _match_expr.type_is<jule::Ptr<_23e45734a_StructDecl>>() || _match_expr.type_is<jule::Ptr<_23e45734a_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_23e45734a_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_23e45734a_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_23e45734a_UseDecl>>() || _match_expr.type_is<jule::Ptr<_23e45734a_VarDecl>>() || _match_expr.type_is<jule::Ptr<_23e45734a_TypeDecl>>()) {
			_case_begin_5550326448:;
			{
				return true;
			}
		}
		else {
			_case_begin_5550324560:;
			{
				return false;
			}
		}
		_match_end_5550324896:;
	}
}



inline jule::Bool _23e45734a_Node::_method_is_comment(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_Comment>>() || _match_expr.type_is<jule::Ptr<_23e45734a_CommentGroup>>()) {
			_case_begin_5550342208:;
			{
				return true;
			}
		}
		else {
			_case_begin_5550340336:;
			{
				return false;
			}
		}
		_match_end_5550340656:;
	}
}



inline jule::Bool _23e45734a_Node::_method_is_directive(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_Directive>>()) {
			_case_begin_5550345632:;
			{
				return true;
			}
		}
		else {
			_case_begin_5550343760:;
			{
				return false;
			}
		}
		_match_end_5550344080:;
	}
}



inline jule::Bool _23e45734a_Node::_method_is_impl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_Impl>>()) {
			_case_begin_5550348672:;
			{
				return true;
			}
		}
		else {
			_case_begin_5550346800:;
			{
				return false;
			}
		}
		_match_end_5550347120:;
	}
}



inline jule::Bool _23e45734a_Node::_method_is_use_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_UseDecl>>()) {
			_case_begin_5550351712:;
			{
				return true;
			}
		}
		else {
			_case_begin_5550349840:;
			{
				return false;
			}
		}
		_match_end_5550350160:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2255ab70a_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _2255ab70a_Trait::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _2522_other) {
	jule::Ptr<_2255ab70a_Trait> _2613_trt = _2522_other->_method_trt();
	return this->self == _2613_trt;
}



inline jule::Bool _2255ab70a_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ptr<_2252d6a73_Fn> _2255ab70a_Trait::_method_find_method(jule::Str _3734_ident) {
	{
		auto &expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_5555755056:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _2255ab70a_f = *it;
			{
				if (_2255ab70a_f->_field_ident == _3734_ident) {
					return _2255ab70a_f;
				}
			}
			_iter_next_5555755056:;
			++it;
			goto _iter_begin_5555755056;
		}
		_iter_end_5555755056:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ab70a_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2255aae79_EnumItem::_method_auto_expr(void) {
	return (*this)._field_value == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255aae79_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _2255aae79_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _2255aae79_Enum::_method_equals(jule::Ptr<_23e2b5818_TypeKind> _3522_other) {
	jule::Ptr<_2255aae79_Enum> _3613_enm = _3522_other->_method_enm();
	return this->self == _3613_enm;
}



inline jule::Ptr<_2255aae79_EnumItem> _2255aae79_Enum::_method_find_item(jule::Str _4432_ident) {
	{
		auto &expr = (*this)._field_items;
		auto it = expr.begin();
		_iter_begin_5555766128:;
		if (it != expr.end()) {
			jule::Ptr<_2255aae79_EnumItem> _2255aae79_item = *it;
			{
				if (_2255aae79_item->_field_ident == _4432_ident) {
					return _2255aae79_item;
				}
			}
			_iter_next_5555766128:;
			++it;
			goto _iter_begin_5555766128;
		}
		_iter_end_5555766128:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255aae79_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _225aa4a5a_BinopSolver::_method_check_type_compatibility(void) {
	return (*this)._field_e->_field_s->_method_check_type_compatibility((*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op);
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_nil(void) {
	if ((!((*this)._field_r->_field_kind->_method_nil_compatible()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_5559927616:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5559923936:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_5559923568:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_enum(void) {
	jule::Ptr<_2255aae79_Enum> _359317_enm = (*this)._field_l->_field_kind->_method_enm();
	if (((*this)._field_r->_field_kind->_method_enm() == nullptr) || (_359317_enm != (*this)._field_r->_field_kind->_method_enm())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_359317_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_5559941392:;
			{
				if ((!(_2261088d8_is_num(_359317_enm->_field_kind->_field_kind->_method_to_str())))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_359317_enm->_field_ident)}));
					return nullptr;
				}
				goto _case_begin_5559941488;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_5559941488:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1)) {
			_case_begin_5559938752:;
			{
				if ((_359317_enm->_field_kind->_field_kind->_method_prim() == nullptr) || (!(_2261088d8_is_int(_359317_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_359317_enm->_field_ident)}));
				}
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_5559934496:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_359317_enm->_field_ident)}));
				return nullptr;
			}
		}
		_match_end_5559938112:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_sptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_5559956144:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5559955280:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_5559954432:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_5559965296:;
			{
				if ((!((*this)._method_check_type_compatibility()))) {
					return nullptr;
				}
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_5559965488:;
			{
				if ((*this)._field_l->_field_kind->_method_ptr() == nullptr) {
					std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				}
				if ((*this)._field_l->_field_kind->_method_ptr()->_method_is_unsafe()) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				}
				if ((!(_225aa4a5a_is_ptr_arithmetic_compatible_int((*this)._field_r)))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("type \"@\" is incompatible to use for pointer arithmetic", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_5559959872:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_5559961760:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_5559982144:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5559981328:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_5559980352:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_5559992256:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5559989104:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_5559987824:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_5559999664:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5559996512:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_5559995232:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_5560007072:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5560003920:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_5560002640:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_5560014576:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5560011024:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_5560011216:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_any(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_5560018368:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5560015648:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_5560017536:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_5560028224:;
			{
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_5560025072:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
				return nullptr;
			}
		}
		_match_end_5560023792:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_str(void) {
	jule::Str _382317_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_382317_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_382317_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_5560038352:;
			{
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_5560038448:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		else {
			_case_begin_5560032656:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_5560032080:;
	}
}



inline void _225aa4a5a_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _384917_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _385017_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_22610564e_is_greater(_385017_rk,_384917_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _225aa4a5a_BinopSolver::_method_check_mod_data(jule::Ptr<_225aa4a5a_Data>& _386538_d) {
	if ((!(_386538_d->_method_is_const()))) {
		if ((_386538_d->_field_kind->_method_prim() == nullptr) || (!(_2261088d8_is_int(_386538_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		return;
	}
	{
		if (_22582290a_sig_assignable(jule::Str("i64", 3),_386538_d)) {
			_case_begin_5560052256:;
			{
				_386538_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_386538_d->_field_constant->_method_as_i64()));
			}
		}
		else if (_22582290a_unsig_assignable(jule::Str("u64", 3),_386538_d)) {
			_case_begin_5560057744:;
			{
				_386538_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_386538_d->_field_constant->_method_as_u64()));
			}
		}
		else {
			_case_begin_5560051872:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_5560051792:;
	}
}



inline void _225aa4a5a_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



inline jule::Bool _225aa4a5a_BinopSolver::_method_numbers_are_compatibile(jule::Str& _389039_lk,jule::Str& _389049_rk) {
	if ((!(_2261088d8_is_num(_389049_rk)))) {
		return false;
	}
	if ((*this)._field_l->_method_is_const()) {
		return true;
	}
	if (_389039_lk == jule::Str("f32", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _389049_rk == jule::Str("f32", 3);
	}
	if (_389039_lk == jule::Str("f64", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _389049_rk == jule::Str("f64", 3);
	}
	if ((*this)._field_r->_method_is_const()) {
		if ((!((*this)._field_r->_field_constant->_method_is_f64()))) {
			return true;
		}
		{
			auto &_match_expr{ (*this)._field_r->_field_model };
			if (_match_expr.type_is<jule::Ptr<_226100d86_Const>>()) {
				_case_begin_5560076928:;
				{
					return _22582290a_int_assignable(jule::Str("int", 3),(*this)._field_r) || _22582290a_int_assignable(jule::Str("uint", 4),(*this)._field_r);
				}
			}
			else {
				_case_begin_5560075408:;
				{
					return false;
				}
			}
			_match_end_5560074784:;
		}
	}
	return (!(_2261088d8_is_float(_389049_rk)));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_float(void) {
	jule::Str _393313_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _393413_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_393313_lk,_393413_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_393313_lk),jule::Any(_393413_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_5560082784:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		_match_end_5560082368:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_5560088032:;
			{
				(*this)._method_set_type_to_greater();
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_5560090912:;
			{
				if ((!(_2261088d8_is_int(_393413_rk)))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_393313_lk),jule::Any(_393413_rk)}));
					return nullptr;
				}
				(*this)._method_mod();
				return (*this)._field_r;
			}
		}
		else {
			_case_begin_5560082560:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5559400528:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _397913_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _398013_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_397913_lk,_398013_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_397913_lk),jule::Any(_398013_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_5560100576:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		_match_end_5560100496:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_5560109904:;
			{
				(*this)._method_set_type_to_greater();
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_5560110096:;
			{
				(*this)._method_mod();
				(*this)._method_set_type_to_greater();
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_5560110192:;
			{
				if ((!(_225aa4a5a_is_ok_for_shifting((*this)._field_r)))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				if ((*this)._field_l->_method_is_const()) {
					(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
				}
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_5560100784:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for unsigned integer type(s)", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5560107168:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _403813_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _403913_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_403813_lk,_403913_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_403813_lk),jule::Any(_403913_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_5560124720:;
			{
				return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
			}
		}
		_match_end_5560126736:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_5560133808:;
			{
				(*this)._method_set_type_to_greater();
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_5560133904:;
			{
				(*this)._method_mod();
				(*this)._method_set_type_to_greater();
				return (*this)._field_l;
			}
		}
		else if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_5560129920:;
			{
				if ((!(_225aa4a5a_is_ok_for_shifting((*this)._field_r)))) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*this)._field_l;
			}
		}
		else {
			_case_begin_5560124528:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_5560130896:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval_prim(void) {
	jule::Ptr<_23e2b5818_Prim> _409313_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (_409313_prim->_method_is_bool()) {
			_case_begin_5560144944:;
			{
				return (*this)._method_eval_bool();
			}
		}
		else if (_409313_prim->_method_is_str()) {
			_case_begin_5560145056:;
			{
				return (*this)._method_eval_str();
			}
		}
		_match_end_5560144784:;
	}
	jule::Ptr<_23e2b5818_Prim> _409913_rprim = (*this)._field_r->_field_kind->_method_prim();
	if (_409913_rprim == nullptr) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_409313_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	jule::Str _410513_lk = _409313_prim->_method_to_str();
	{
		if (_2261088d8_is_float(_410513_lk)) {
			_case_begin_5560154576:;
			{
				return (*this)._method_eval_float();
			}
		}
		else if (_2261088d8_is_unsig_int(_410513_lk)) {
			_case_begin_5560154704:;
			{
				return (*this)._method_eval_unsig_int();
			}
		}
		else if (_2261088d8_is_sig_int(_410513_lk)) {
			_case_begin_5560154800:;
			{
				return (*this)._method_eval_sig_int();
			}
		}
		else {
			_case_begin_5560153152:;
			{
				return nullptr;
			}
		}
		_match_end_5560153072:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_eval(void) {
	{
		if ((*this)._field_l->_field_kind->_method_void()) {
			_case_begin_5560160864:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if (((*this)._field_r->_field_kind->_method_prim() != nullptr) && (*this)._field_r->_field_kind->_method_prim()->_method_is_any()) {
			_case_begin_5560161056:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_5560161152;
			}
		}
		else if (((*this)._field_l->_field_kind->_method_prim() != nullptr) && (*this)._field_l->_field_kind->_method_prim()->_method_is_any()) {
			_case_begin_5560161152:;
			{
				return (*this)._method_eval_any();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_is_nil()) {
			_case_begin_5560159792:;
			{
				return (*this)._method_eval_nil();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_enm() != nullptr) {
			_case_begin_5560159888:;
			{
				return (*this)._method_eval_enum();
			}
		}
		else if ((*this)._field_r->_field_kind->_method_sptr() != nullptr) {
			_case_begin_5560159984:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_5560160080;
			}
		}
		else if ((*this)._field_l->_field_kind->_method_sptr() != nullptr) {
			_case_begin_5560160080:;
			{
				return (*this)._method_eval_sptr();
			}
		}
		else if ((*this)._field_r->_field_kind->_method_ptr() != nullptr) {
			_case_begin_5560161280:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_5560161376;
			}
		}
		else if ((*this)._field_l->_field_kind->_method_ptr() != nullptr) {
			_case_begin_5560161376:;
			{
				return (*this)._method_eval_ptr();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_arr() != nullptr) {
			_case_begin_5560161472:;
			{
				return (*this)._method_eval_arr();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_slc() != nullptr) {
			_case_begin_5560161568:;
			{
				return (*this)._method_eval_slc();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_fnc() != nullptr) {
			_case_begin_5560161664:;
			{
				return (*this)._method_eval_fn();
			}
		}
		else if ((*this)._field_r->_field_kind->_method_trt() != nullptr) {
			_case_begin_5560161760:;
			{
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
				goto _case_begin_5560161856;
			}
		}
		else if ((*this)._field_l->_field_kind->_method_trt() != nullptr) {
			_case_begin_5560161856:;
			{
				return (*this)._method_eval_trait();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_strct() != nullptr) {
			_case_begin_5560161952:;
			{
				return (*this)._method_eval_struct();
			}
		}
		else if ((*this)._field_l->_field_kind->_method_prim() != nullptr) {
			_case_begin_5560162064:;
			{
				return (*this)._method_eval_prim();
			}
		}
		else {
			_case_begin_5560159488:;
			{
				return nullptr;
			}
		}
		_match_end_5560159312:;
	}
}



inline void _225aa4a5a_BinopSolver::_method_solve_const(jule::Ptr<_225aa4a5a_Data>& _417035_d) {
	{
		if (_417035_d == nullptr) {
			_case_begin_5560196080:;
			{
				return;
			}
		}
		else if ((!((*this)._field_l->_method_is_const())) || (!((*this)._field_r->_method_is_const()))) {
			_case_begin_5560196192:;
			{
				_417035_d->_field_constant=nullptr;
				return;
			}
		}
		_match_end_5560195856:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_5560199312:;
			{
				_417035_d->_field_constant=_226100d86_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_5560199056:;
			{
				_417035_d->_field_constant=_226100d86_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))))));
			}
		}
		else if (_match_expr == jule::Str("::", 2)) {
			_case_begin_5560199808:;
			{
				_417035_d->_field_constant=_226100d86_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_5560199904:;
			{
				_417035_d->_field_constant=_226100d86_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_5560200000:;
			{
				_417035_d->_field_constant=_226100d86_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_5560200096:;
			{
				_417035_d->_field_constant=_226100d86_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_5560200208:;
			{
				_417035_d->_field_constant=_226100d86_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*((*this)._field_r->_field_constant))) || (*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_5560200320:;
			{
				_417035_d->_field_constant=_226100d86_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*((*this)._field_r->_field_constant))) || (*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_5560200432:;
			{
				(*this)._field_l->_field_constant->_method_add((*((*this)._field_r->_field_constant)));
				_417035_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_5560200544:;
			{
				(*this)._field_l->_field_constant->_method_sub((*((*this)._field_r->_field_constant)));
				_417035_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_5560200656:;
			{
				(*this)._field_l->_field_constant->_method_mul((*((*this)._field_r->_field_constant)));
				_417035_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_5560200768:;
			{
				jule::Bool _422317_ok = (*this)._field_l->_field_constant->_method_div((*((*this)._field_r->_field_constant)));
				if ((!(_422317_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_417035_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_5560200880:;
			{
				jule::Bool _423017_ok = (*this)._field_l->_field_constant->_method_mod((*((*this)._field_r->_field_constant)));
				if ((!(_423017_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
					(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_417035_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_5560200992:;
			{
				(*this)._field_l->_field_constant->_method_bitwise_or((*((*this)._field_r->_field_constant)));
				_417035_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_5560201104:;
			{
				(*this)._field_l->_field_constant->_method_bitwise_and((*((*this)._field_r->_field_constant)));
				_417035_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_5560201216:;
			{
				(*this)._field_l->_field_constant->_method_xor((*((*this)._field_r->_field_constant)));
				_417035_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_5560201328:;
			{
				(*this)._field_l->_field_constant->_method_lshift((*((*this)._field_r->_field_constant)));
				_417035_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_5560201440:;
			{
				(*this)._field_l->_field_constant->_method_rshift((*((*this)._field_r->_field_constant)));
				_417035_d->_field_constant=(*this)._field_l->_field_constant;
			}
		}
		_match_end_5560198672:;
	}
	_417035_d->_field_model=jule::Any(_417035_d->_field_constant);
}



inline void _225aa4a5a_BinopSolver::_method_post_const(jule::Ptr<_225aa4a5a_Data>& _426030_d) {
	if (_426030_d == nullptr) {
		return;
	}
	_225aa4a5a_normalize_bitsize(_426030_d);
}



inline void _225aa4a5a_BinopSolver::_method_check_data(jule::Ptr<_225aa4a5a_Data>& _426834_d) {
	jule::Ptr<_2252d6a73_FnIns> _426913_f = _426834_d->_field_kind->_method_fnc();
	if (((_426913_f != nullptr) && (_426913_f->_field_decl != nullptr)) && _426913_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	}
}



inline void _225aa4a5a_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline void _225aa4a5a_BinopSolver::_method_set_model(jule::Ptr<_225aa4a5a_Data>& _428033_d) {
	if (_428033_d->_method_is_const()) {
		return;
	}
	jule::Ptr<_225aa4a5a_Data> _428518_l = (*this)._field_l;
	jule::Ptr<_225aa4a5a_Data> _428525_r = (*this)._field_r;
	std::tie(_428518_l,_428525_r) = std::make_tuple((*this)._field_l,(*this)._field_r);
	if ((!(_428518_l->_method_good_operand(_428525_r)))) {
		std::tie(_428518_l,_428525_r) = std::make_tuple(_428525_r,_428518_l);
	}
	_428033_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_BinopExprModel>(new( std::nothrow ) _2255b85b3_BinopExprModel(_428518_l->_field_model,_428525_r->_field_model,(*this)._field_op._field_kind)));
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_solve_explicit(jule::Ptr<_225aa4a5a_Data>& _429738_l,jule::Ptr<_225aa4a5a_Data>& _429753_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_429738_l,_429753_r);
	(*this)._method_check_datas();
	jule::Ptr<_225aa4a5a_Data> _430217_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_429738_l,_429753_r);
	(*this)._method_solve_const(_430217_d);
	(*this)._method_post_const(_430217_d);
	if (_430217_d != nullptr) {
		_430217_d->_field_lvalue=false;
		(*this)._method_set_model(_430217_d);
	}
	return _430217_d;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_BinopSolver::_method_solve(jule::Ptr<_23e45734a_BinopExpr>& _431729_op) {
	jule::Ptr<_225aa4a5a_Data> _431817_l = (*this)._field_e->_method_eval_expr_kind(_431729_op->_field_left);
	if ((_431817_l == nullptr) || (_431817_l->_field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_225aa4a5a_Data> _432317_r = (*this)._field_e->_method_eval_expr_kind(_431729_op->_field_right);
	if ((_432317_r == nullptr) || (_432317_r->_field_kind == nullptr)) {
		return nullptr;
	}
	(*this)._field_op=_431729_op->_field_op;
	jule::Ptr<_225aa4a5a_Data> _433017_d = (*this)._method_solve_explicit(_431817_l,_432317_r);
	if (((_433017_d != nullptr) && _431817_l->_field_is_rune) && _432317_r->_field_is_rune) {
		_433017_d->_field_is_rune=true;
	}
	return _433017_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _225aa4a5a_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2255b811d_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _2255b811d_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255b811d_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_TernaryExpr &_Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}



inline void _23e2b5818_TypeChecker::_method_push_err(_23e730c0b_Token _67127_token,jule::Str _67141_fmt,jule::Slice<jule::Any> _67154_args) {
	(*this)._field_s->_method_push_err(_67127_token,_67141_fmt,_67154_args);
}



inline jule::Ptr<_23e2b5818_Prim> _23e2b5818_TypeChecker::_method_build_prim(jule::Ptr<_23e45734a_IdentTypeDecl>& _67530_decl) {
	if ((!(_23e2b5818_is_prim(_67530_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_67530_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_67530_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_67530_decl->_field_ident)}));
		return nullptr;
	}
	return _23e2b5818_build_prim_type(_67530_decl->_field_ident);
}



inline void _23e2b5818_TypeChecker::_method_push_cycle_error(jule::Any _68931_def1,jule::Any _68942_def2,jule::Str& _68958_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _69213_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _69229_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _69229_def };
			if (_match_expr.type_is<jule::Ptr<_23e2b5818_TypeAlias>>()) {
				_case_begin_5560478192:;
				{
					return _69229_def.operator jule::Ptr<_23e2b5818_TypeAlias>()->_field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
				_case_begin_5560478384:;
				{
					return _69229_def.operator jule::Ptr<_225036509_Struct>()->_field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_2255aae79_Enum>>()) {
				_case_begin_5560478480:;
				{
					return _69229_def.operator jule::Ptr<_2255aae79_Enum>()->_field_ident;
				}
			}
			else {
				_case_begin_5560476560:;
				{
					return jule::Str();
				}
			}
			_match_end_5560476736:;
		}
	});
	jule::Str _70113_def1_ident = _69213_get_ident(_68931_def1);
	jule::Str _70213_def2_ident = _69213_get_ident(_68942_def2);
	jule::Str _70313_refers_to = _23ceb0c1d_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_70113_def1_ident),jule::Any(_70213_def2_ident)}));
	_68958_message=((_22551ab31_str_repeat(jule::Str(" ", 1),4LL) + _70313_refers_to) + jule::Str("\n", 1)) + _68958_message;
}



inline jule::Bool _23e2b5818_TypeChecker::_method_check_cross_cycle(jule::Any _70732_decl,jule::Str& _70748_message) {
	{
		auto &_match_expr{ _70732_decl };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_TypeAlias>>()) {
			_case_begin_5560487200:;
			{
				jule::Ptr<_23e2b5818_TypeAlias> _71017_ta = _70732_decl.operator jule::Ptr<_23e2b5818_TypeAlias>();
				{
					auto &expr = _71017_ta->_field_refers;
					auto it = expr.begin();
					_iter_begin_5560489936:;
					if (it != expr.end()) {
						jule::Any &_23e2b5818_d = *it;
						{
							if (_23e2b5818_d == (*this)._field_referencer->_field_owner) {
								(*this)._method_push_cycle_error(jule::Any(_71017_ta),_23e2b5818_d,_70748_message);
								return false;
							}
							if ((!((*this)._method_check_cross_cycle(_23e2b5818_d,_70748_message)))) {
								(*this)._method_push_cycle_error(jule::Any(_71017_ta),_23e2b5818_d,_70748_message);
								return false;
							}
						}
						_iter_next_5560489936:;
						++it;
						goto _iter_begin_5560489936;
					}
					_iter_end_5560489936:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
			_case_begin_5560487520:;
			{
				jule::Ptr<_225036509_Struct> _72417_s = _70732_decl.operator jule::Ptr<_225036509_Struct>();
				{
					auto &expr = _72417_s->_field_depends;
					auto it = expr.begin();
					_iter_begin_5560496208:;
					if (it != expr.end()) {
						jule::Ptr<_225036509_Struct> &_23e2b5818_d = *it;
						{
							if ((*this)._field_referencer->_field_owner == _23e2b5818_d) {
								(*this)._method_push_cycle_error(jule::Any(_72417_s),jule::Any(_23e2b5818_d),_70748_message);
								return false;
							}
							if ((!((*this)._method_check_cross_cycle(jule::Any(_23e2b5818_d),_70748_message)))) {
								(*this)._method_push_cycle_error(jule::Any(_72417_s),jule::Any(_23e2b5818_d),_70748_message);
								return false;
							}
						}
						_iter_next_5560496208:;
						++it;
						goto _iter_begin_5560496208;
					}
					_iter_end_5560496208:;
				}
			}
		}
		_match_end_5560487296:;
	}
	return true;
}



inline jule::Bool _23e2b5818_TypeChecker::_method_check_illegal_cycles(jule::Ptr<_23e45734a_IdentTypeDecl>& _74540_ident,jule::Any _74567_decl) {
	jule::Bool _74580_ok = jule::Bool();
	if ((*this)._field_referencer == nullptr) {
		_74580_ok = true;
		return _74580_ok;
	}
	{
		auto &_match_expr{ _74567_decl };
		if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
			_case_begin_5560505424:;
			{
				if ((*this)._field_not_plain) {
					_74580_ok = true;
					return _74580_ok;
				}
			}
		}
		_match_end_5560505024:;
	}
	if (_74567_decl == (*this)._field_referencer->_field_owner) {
		(*this)._method_push_err(_74540_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_74580_ok = false;
		return _74580_ok;
	}
	jule::Str _76417_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_74567_decl,_76417_message)))) {
		jule::Str _76721_err_msg = _76417_message;
		_76417_message=jule::Str();
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_74567_decl,_76417_message);
		_76721_err_msg=_76721_err_msg + _76417_message;
		(*this)._method_push_err(_74540_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_76721_err_msg)}));
		_74580_ok = false;
		return _74580_ok;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_TypeAlias>>()) {
			_case_begin_5560511280:;
			{
				{
					(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_74567_decl}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
			_case_begin_5560510096:;
			{
				{
					auto &_match_expr{ _74567_decl };
					if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
						_case_begin_5560516976:;
						{
							jule::Ptr<_225036509_Struct> _78225_s = (*this)._field_referencer->_field_owner.operator jule::Ptr<_225036509_Struct>();
							_78225_s->_field_depends = jule::alloc_for_append(_78225_s->_field_depends,1);_78225_s->_field_depends.push(_74567_decl.operator jule::Ptr<_225036509_Struct>());
						}
					}
					_match_end_5560516096:;
				}
			}
		}
		_match_end_5560514640:;
	}
	_74580_ok = true;
	return _74580_ok;
}



inline jule::Trait<_23e2b5818_Kind> _23e2b5818_TypeChecker::_method_from_type_alias(jule::Ptr<_23e45734a_IdentTypeDecl>& _79035_decl,jule::Ptr<_23e2b5818_TypeAlias>& _79062_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_79062_ta->_field_public,_79062_ta->_field_token)))) {
		(*this)._method_push_err(_79035_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_79035_decl->_field_ident)}));
		return nullptr;
	}
	_79062_ta->_field_used=true;
	if (_79035_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_79035_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_79035_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _80317_ok = (*this)._method_check_illegal_cycles(_79035_decl,jule::Any(_79062_ta));
	if ((!(_80317_ok))) {
		return nullptr;
	}
	_80317_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_79062_ta,(*this)._field_lookup);
	if ((!(_80317_ok))) {
		return nullptr;
	}
	return jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(((_79062_ta->_field_cpp_linked) ? (_79062_ta->_field_ident) : (_79062_ta->_field_kind->_field_kind->_field_cpp_ident)),_79062_ta->_field_generic,jule::Bool(),_79062_ta->_field_kind->_field_kind->_field_kind));
}



inline jule::Ptr<_2255aae79_Enum> _23e2b5818_TypeChecker::_method_from_enum(jule::Ptr<_23e45734a_IdentTypeDecl>& _82129_decl,jule::Ptr<_2255aae79_Enum>& _82156_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_82156_e->_field_public,_82156_e->_field_token)))) {
		(*this)._method_push_err(_82129_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_82129_decl->_field_ident)}));
		return nullptr;
	}
	if (_82129_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_82129_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_82129_decl->_field_ident)}));
		return nullptr;
	}
	return _82156_e;
}



inline jule::Bool _23e2b5818_TypeChecker::_method_check_struct_ins(jule::Ptr<_225036509_StructIns>& _83540_ins,_23e730c0b_Token& _83558_error_token) {
	jule::Bool _83580_ok = jule::Bool();
	if (_83540_ins->_field_checked) {
		_83580_ok = true;
		return _83580_ok;
	}
	_83540_ins->_field_checked=true;
	if (((*this)._field_referencer != nullptr) && ((*this)._field_referencer->_field_owner == _83540_ins->_field_decl)) {
		_83580_ok = true;
		return _83580_ok;
	}
	jule::Ptr<_225a097a1_SymbolTable> _84917_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_84917_old_file);
	});
	jule::Ptr<_225a097a1_SymbolTable> _85217_file = _22579574b_find_file((*this)._field_s->_field_files,_83540_ins->_field_decl->_field_token._field_file);
	if (_85217_file != nullptr) {
		(*this)._field_s->_method_set_current_file(_85217_file);
	}
	jule::Ptr<_23e2b5818_Referencer> _85717_referencer = jule::new_struct<_23e2b5818_Referencer>(new( std::nothrow ) _23e2b5818_Referencer(_83540_ins->_field_decl->_field_ident,jule::Any(_83540_ins->_field_decl),nullptr));
	jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>> _86217_generics = jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>::alloc(0LL,static_cast<jule::I64>(_83540_ins->_field_generics.len()));
	{
		auto &expr = _83540_ins->_field_generics;
		auto it = expr.begin();
		_iter_begin_5560555040:;
		if (it != expr.end()) {
			jule::Int _23e2b5818_i = it - expr.begin();
			jule::Ptr<_23e2b5818_TypeKind> _23e2b5818_g = *it;
			{
				_86217_generics.push(jule::new_struct<_23e2b5818_TypeAlias>(new( std::nothrow ) _23e2b5818_TypeAlias(jule::Ptr<_23e45734a_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_23e730c0b_Token(),_83540_ins->_field_decl->_field_generics[_23e2b5818_i]->_field_ident,jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),_23e2b5818_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_5560555040:;
			++it;
			_23e2b5818_i++;
			goto _iter_begin_5560555040;
		}
		_iter_end_5560555040:;
	}
	jule::Ptr<_225a097a1_SymbolTable> _87217_old_sema_file = _83540_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_83540_ins->_field_decl->_field_sema->_method_set_current_file(_87217_old_sema_file);
	});
	_23e2b5818_TypeChecker _87517_tc = _23e2b5818_TypeChecker(_83540_ins->_field_decl->_field_sema,_83540_ins->_field_decl->_field_sema,_85717_referencer,_23e730c0b_Token(),jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>(),_86217_generics,jule::Bool());
	{
		auto &expr = _83540_ins->_field_fields;
		auto it = expr.begin();
		_iter_begin_5560562448:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_FieldIns> _23e2b5818_field = *it;
			{
				jule::Ptr<_23e2b5818_TypeKind> _88421_kind = _87517_tc._method_check_decl(_23e2b5818_field->_field_decl->_field_kind->_field_decl);
				_83580_ok=_88421_kind != nullptr;
				if (((_83540_ins->_field_decl->_field_sema != nullptr) && ((*this)._field_s != _83540_ins->_field_decl->_field_sema)) && (_83540_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_83540_ins->_field_decl->_field_sema->_field_errors);
					_83540_ins->_field_decl->_field_sema->_field_errors=nullptr;
				}
				if ((!(_83580_ok))) {
					_83580_ok = false;
					return _83580_ok;
				}
				_23e2b5818_field->_field_kind=_88421_kind;
				if (_23e2b5818_field->_field_kind->_method_mutable()) {
					_83540_ins->_field_mutable=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_83540_ins);
				}
			}
			_iter_next_5560562448:;
			++it;
			goto _iter_begin_5560562448;
		}
		_iter_end_5560562448:;
	}
	if (_83540_ins->_field_generics.len() > 0LL) {
		{
			auto &expr = _83540_ins->_field_methods;
			auto it = expr.begin();
			_iter_begin_5560572096:;
			if (it != expr.end()) {
				jule::Ptr<_2252d6a73_Fn> _23e2b5818_m = *it;
				{
					(*this)._field_s->_method_check_type_method(_83540_ins,_23e2b5818_m);
				}
				_iter_next_5560572096:;
				++it;
				goto _iter_begin_5560572096;
			}
			_iter_end_5560572096:;
		}
	}
	_83580_ok = true;
	return _83580_ok;
}



inline void _23e2b5818_TypeChecker::_method_append_used_struct_reference(jule::Ptr<_225036509_Struct>& _91252_s) {
	if ((*this)._field_referencer == nullptr) {
		return;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
			_case_begin_5560575664:;
			{
				jule::Ptr<_225036509_Struct> _91921_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ptr<_225036509_Struct>();
				if ((!(_91921_ref_s->_method_is_uses(_91252_s)))) {
					_91921_ref_s->_field_uses = jule::alloc_for_append(_91921_ref_s->_field_uses,1);_91921_ref_s->_field_uses.push(_91252_s);
				}
			}
		}
		_match_end_5560576000:;
	}
}



inline jule::Ptr<_225036509_StructIns> _23e2b5818_TypeChecker::_method_from_struct(jule::Ptr<_23e45734a_IdentTypeDecl>& _92635_decl,jule::Ptr<_225036509_Struct>& _92662_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_92662_s->_field_public,_92662_s->_field_token)))) {
		(*this)._method_push_err(_92635_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_92635_decl->_field_ident)}));
		return nullptr;
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return nullptr;
	}
	jule::Bool _93717_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_92635_decl,jule::Any(_92662_s));
	if ((!(_93717_ok))) {
		return nullptr;
	}
	(*this)._method_append_used_struct_reference(_92662_s);
	jule::Ptr<_225036509_StructIns> _94317_ins = _92662_s->_method_instance();
	_94317_ins->_field_generics=jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_92635_decl->_field_generics.len()));
	jule::Ptr<_23e2b5818_Referencer> _94517_referencer = (*this)._field_referencer;
	(*this)._field_referencer=nullptr;
	{
		auto &expr = _92635_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_5560590032:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_TypeDecl> _23e2b5818_g = *it;
			{
				jule::Ptr<_23e2b5818_TypeKind> _94821_kind = (*this)._method_build(_23e2b5818_g->_field_kind);
				if (_94821_kind == nullptr) {
					_93717_ok=false;
					goto _iter_next_5560590032;
				}
				_94317_ins->_field_generics = jule::alloc_for_append(_94317_ins->_field_generics,1);_94317_ins->_field_generics.push(_94821_kind);
			}
			_iter_next_5560590032:;
			++it;
			goto _iter_begin_5560590032;
		}
		_iter_end_5560590032:;
	}
	(*this)._field_referencer=_94517_referencer;
	if ((!(_93717_ok))) {
		return nullptr;
	}
	_93717_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_94317_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_94317_ins->_field_generics.len()),_92635_decl->_field_token);
	if ((!(_93717_ok))) {
		return nullptr;
	}
	jule::Ptr<_225036509_StructIns> _96717_exist_instance = _92662_s->_method_append_instance(_94317_ins);
	if (_96717_exist_instance != nullptr) {
		return _96717_exist_instance;
	}
	_93717_ok=(*this)._method_check_struct_ins(_94317_ins,_92635_decl->_field_token);
	if ((!(_93717_ok))) {
		return nullptr;
	}
	return _94317_ins;
}



inline jule::Trait<_23e2b5818_Kind> _23e2b5818_TypeChecker::_method_get_def(jule::Ptr<_23e45734a_IdentTypeDecl>& _98231_decl) {
	{
		auto &expr = (*this)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_5560621856:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_GenericDecl> &_23e2b5818_g = *it;
			{
				if (_23e2b5818_g->_field_ident == _98231_decl->_field_ident) {
					return _23e2b5818_build_prim_type(_23e2b5818_g->_field_ident);
				}
			}
			_iter_next_5560621856:;
			++it;
			goto _iter_begin_5560621856;
		}
		_iter_end_5560621856:;
	}
	{
		auto &expr = (*this)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_5560625008:;
		if (it != expr.end()) {
			jule::Ptr<_23e2b5818_TypeAlias> _23e2b5818_g = *it;
			{
				if (_23e2b5818_g->_field_ident == _98231_decl->_field_ident) {
					jule::Ptr<_225036509_StructIns> _99125_st = _23e2b5818_g->_field_kind->_field_kind->_method_strct();
					if (_99125_st != nullptr) {
						jule::Bool _99325_ok = (*this)._method_check_illegal_cycles(_98231_decl,jule::Any(_99125_st->_field_decl));
						if ((!(_99325_ok))) {
							return nullptr;
						}
					}
					return _23e2b5818_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_5560625008:;
			++it;
			goto _iter_begin_5560625008;
		}
		_iter_end_5560625008:;
	}
	if ((!(_98231_decl->_field_cpp_linked))) {
		jule::Ptr<_2255aae79_Enum> _100321_e = (*this)._field_lookup.get()._method_find_enum(_98231_decl->_field_ident);
		if (_100321_e != nullptr) {
			return (*this)._method_from_enum(_98231_decl,_100321_e);
		}
		jule::Ptr<_2255ab70a_Trait> _100821_t = (*this)._field_lookup.get()._method_find_trait(_98231_decl->_field_ident);
		if (_100821_t == nullptr) {
			_100821_t=_22602dc1a_find_builtin_trait(_98231_decl->_field_ident);
		}
		if (_100821_t != nullptr) {
			if ((!((*this)._field_s->_method_is_accessible_define(_100821_t->_field_public,_100821_t->_field_token)))) {
				(*this)._method_push_err(_98231_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_98231_decl->_field_ident)}));
				return nullptr;
			}
			if (_98231_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_98231_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_98231_decl->_field_ident)}));
				return nullptr;
			}
			return _100821_t;
		}
	}
	jule::Ptr<_225036509_Struct> _102617_s = (*this)._field_lookup.get()._method_find_struct(_98231_decl->_field_ident,_98231_decl->_field_cpp_linked);
	if (_102617_s != nullptr) {
		return (*this)._method_from_struct(_98231_decl,_102617_s);
	}
	jule::Ptr<_23e2b5818_TypeAlias> _103117_ta = (*this)._field_lookup.get()._method_find_type_alias(_98231_decl->_field_ident,_98231_decl->_field_cpp_linked);
	if (_103117_ta == nullptr) {
		_103117_ta=_22602dc1a_find_builtin_type_alias(_98231_decl->_field_ident);
	}
	if (_103117_ta != nullptr) {
		return (*this)._method_from_type_alias(_98231_decl,_103117_ta);
	}
	(*this)._method_push_err(_98231_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_98231_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_23e2b5818_Kind> _23e2b5818_TypeChecker::_method_build_ident(jule::Ptr<_23e45734a_IdentTypeDecl> _104334_decl) {
	{
		if (_23e2b5818_is_prim(_104334_decl->_field_ident)) {
			_case_begin_5560653696:;
			{
				return (*this)._method_build_prim(_104334_decl);
			}
		}
		else {
			_case_begin_5560651712:;
			{
				return (*this)._method_get_def(_104334_decl);
			}
		}
		_match_end_5560651536:;
	}
}



inline jule::Ptr<_23e2b5818_Sptr> _23e2b5818_TypeChecker::_method_build_sptr_from_type(jule::Ptr<_23e2b5818_TypeKind>& _105044_elem) {
	{
		if (_105044_elem == nullptr) {
			_case_begin_5560655760:;
			{
				return nullptr;
			}
		}
		else if (_105044_elem->_method_strct() != nullptr) {
			_case_begin_5560655856:;
			{
				jule::Ptr<_225036509_StructIns> _105717_s = _105044_elem->_method_strct();
				if ((_105717_s->_field_decl != nullptr) && _105717_s->_field_decl->_field_cpp_linked) {
					(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
		}
		else if ((_105044_elem->_method_arr() != nullptr) && _105044_elem->_method_arr()->_field_auto) {
			_case_begin_5560655952:;
			{
				(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_5560654320:;
	}
	return jule::new_struct_ptr<_23e2b5818_Sptr>(new( std::nothrow ) _23e2b5818_Sptr(_105044_elem));
}



inline jule::Ptr<_23e2b5818_Sptr> _23e2b5818_TypeChecker::_method_build_sptr(jule::Ptr<_23e45734a_SptrTypeDecl> _107333_decl) {
	jule::Bool _107413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_107413_not_plain;
	});
	jule::Ptr<_23e2b5818_TypeKind> _107817_elem = (*this)._method_check_decl(_107333_decl->_field_elem);
	return (*this)._method_build_sptr_from_type(_107817_elem);
}



inline jule::Ptr<_23e2b5818_Ptr> _23e2b5818_TypeChecker::_method_build_ptr_from_type(jule::Ptr<_23e2b5818_TypeKind>& _108243_elem) {
	{
		if (_108243_elem == nullptr) {
			_case_begin_5560671184:;
			{
				return nullptr;
			}
		}
		else if ((_108243_elem->_method_arr() != nullptr) && _108243_elem->_method_arr()->_field_auto) {
			_case_begin_5560671296:;
			{
				(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_23e2b5818_Ptr>();
			}
		}
		_match_end_5560670960:;
	}
	return jule::new_struct_ptr<_23e2b5818_Ptr>(new( std::nothrow ) _23e2b5818_Ptr(_108243_elem));
}



inline jule::Ptr<_23e2b5818_Ptr> _23e2b5818_TypeChecker::_method_build_ptr(jule::Ptr<_23e45734a_PtrTypeDecl> _109832_decl) {
	jule::Bool _109913_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_109913_not_plain;
	});
	jule::Ptr<_23e2b5818_TypeKind> _110317_elem = nullptr;
	if ((!(_109832_decl->_method_is_unsafe()))) {
		_110317_elem=(*this)._method_check_decl(_109832_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_110317_elem);
	}
	return jule::new_struct_ptr<_23e2b5818_Ptr>(new( std::nothrow ) _23e2b5818_Ptr(_110317_elem));
}



inline jule::Ptr<_23e2b5818_Slc> _23e2b5818_TypeChecker::_method_build_slc(jule::Ptr<_23e45734a_SlcTypeDecl> _111532_decl) {
	jule::Bool _111613_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_111613_not_plain;
	});
	jule::Ptr<_23e2b5818_TypeKind> _112017_elem = (*this)._method_check_decl(_111532_decl->_field_elem);
	{
		if (_112017_elem == nullptr) {
			_case_begin_5560688160:;
			{
				return nullptr;
			}
		}
		else if ((_112017_elem->_method_arr() != nullptr) && _112017_elem->_method_arr()->_field_auto) {
			_case_begin_5560688256:;
			{
				(*this)._method_push_err(_111532_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_5560687440:;
	}
	return jule::new_struct_ptr<_23e2b5818_Slc>(new( std::nothrow ) _23e2b5818_Slc(_112017_elem));
}



inline jule::Ptr<_23e2b5818_Arr> _23e2b5818_TypeChecker::_method_build_arr(jule::Ptr<_23e45734a_ArrTypeDecl> _113732_decl) {
	jule::Bool _113813_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_113813_not_plain;
	});
	jule::Int _114217_n = 0LL;
	if ((!(_113732_decl->_method_auto_sized()))) {
		jule::Ptr<_225aa4a5a_Data> _114521_size = (*this)._field_s->_method_eval((*this)._field_lookup)->_method_eval_expr(_113732_decl->_field_size);
		if (_114521_size == nullptr) {
			return nullptr;
		}
		if ((!(_114521_size->_method_is_const()))) {
			(*this)._method_push_err(_113732_decl->_field_size->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_114521_size->_field_kind->_method_prim() == nullptr) || (!(_2261088d8_is_int(_114521_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_113732_decl->_field_size->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		}
		_114217_n=static_cast<jule::Int>(_114521_size->_field_constant->_method_as_i64());
		if (_114217_n < 0LL) {
			(*this)._method_push_err(_113732_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	jule::Ptr<_23e2b5818_TypeKind> _116517_elem = (*this)._method_check_decl(_113732_decl->_field_elem);
	{
		if (_116517_elem == nullptr) {
			_case_begin_5560710096:;
			{
				return nullptr;
			}
		}
		else if ((_116517_elem->_method_arr() != nullptr) && _116517_elem->_method_arr()->_field_auto) {
			_case_begin_5560710192:;
			{
				(*this)._method_push_err(_113732_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_5560697824:;
	}
	return jule::new_struct_ptr<_23e2b5818_Arr>(new( std::nothrow ) _23e2b5818_Arr(_113732_decl->_method_auto_sized(),_114217_n,_116517_elem));
}



inline jule::Ptr<_23e2b5818_Map> _23e2b5818_TypeChecker::_method_build_map(jule::Ptr<_23e45734a_MapTypeDecl> _118432_decl) {
	jule::Bool _118513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_118513_not_plain;
	});
	jule::Ptr<_23e2b5818_TypeKind> _118917_key = (*this)._method_check_decl(_118432_decl->_field_key);
	if (_118917_key == nullptr) {
		return nullptr;
	}
	jule::Ptr<_23e2b5818_TypeKind> _119417_val = (*this)._method_check_decl(_118432_decl->_field_val);
	if (_119417_val == nullptr) {
		return nullptr;
	}
	if (_119417_val->_method_enm() != nullptr) {
		(*this)._method_push_err(_118432_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	}
	return jule::new_struct_ptr<_23e2b5818_Map>(new( std::nothrow ) _23e2b5818_Map(_118917_key,_119417_val));
}



inline jule::Ptr<_23e2b5818_Tuple> _23e2b5818_TypeChecker::_method_build_tuple(jule::Ptr<_23e45734a_TupleTypeDecl> _120834_decl) {
	jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> _120917_types = jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_120834_decl->_field_types.len()));
	{
		auto &expr = _120834_decl->_field_types;
		auto it = expr.begin();
		_iter_begin_5560729136:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_TypeDecl> _23e2b5818_t = *it;
			{
				jule::Ptr<_23e2b5818_TypeKind> _121121_kind = (*this)._method_check_decl(_23e2b5818_t);
				if (_121121_kind == nullptr) {
					return nullptr;
				}
				_120917_types.push(_121121_kind);
			}
			_iter_next_5560729136:;
			++it;
			goto _iter_begin_5560729136;
		}
		_iter_end_5560729136:;
	}
	return jule::new_struct_ptr<_23e2b5818_Tuple>(new( std::nothrow ) _23e2b5818_Tuple(_120917_types));
}



inline jule::Bool _23e2b5818_TypeChecker::_method_check_fn_types(jule::Ptr<_2252d6a73_FnIns>& _122138_f) {
	jule::Bool _122151_ok = jule::Bool();
	{
		auto &expr = _122138_f->_field_params;
		auto it = expr.begin();
		_iter_begin_5560735200:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_ParamIns> _23e2b5818_p = *it;
			{
				_23e2b5818_p->_field_kind=(*this)._method_build(_23e2b5818_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_122151_ok=_23e2b5818_p->_field_kind != nullptr;
				if ((!(_122151_ok))) {
					_122151_ok = false;
					return _122151_ok;
				}
			}
			_iter_next_5560735200:;
			++it;
			goto _iter_begin_5560735200;
		}
		_iter_end_5560735200:;
	}
	if ((!(_122138_f->_field_decl->_method_is_void()))) {
		_122138_f->_field_result=(*this)._method_build(_122138_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_122151_ok = _122138_f->_field_result != nullptr;
		return _122151_ok;
	}
	_122151_ok = true;
	return _122151_ok;
}



inline jule::Ptr<_2252d6a73_FnIns> _23e2b5818_TypeChecker::_method_build_fn(jule::Ptr<_23e45734a_FnDecl> _123831_decl) {
	if (_123831_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_123831_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_2252d6a73_Fn> _124417_f = _22551ab31_build_fn(_123831_decl);
	jule::Ptr<_2252d6a73_FnIns> _124517_ins = _124417_f->_method_instance_force();
	_124517_ins->_field_anon=true;
	jule::Bool _124813_ok = (*this)._method_check_fn_types(_124517_ins);
	if ((!(_124813_ok))) {
		return nullptr;
	}
	return _124517_ins;
}



inline jule::Trait<_23e2b5818_Kind> _23e2b5818_TypeChecker::_method_build_by_namespace(jule::Ptr<_23e45734a_NamespaceTypeDecl> _125641_decl) {
	jule::Str _125713_path = _23e2b5818_build_link_path_by_tokens(_125641_decl->_field_idents);
	jule::Ptr<_225615962_ImportInfo> _125817_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_225615962_ImportInfo>)>([=](jule::Ptr<_225615962_ImportInfo> _125853_imp) mutable -> jule::Bool {
		if ((_125641_decl->_field_idents.len() == 1LL) && (_125853_imp->_field_alias == _125713_path)) {
			return true;
		}
		return _125853_imp->_field_link_path == _125713_path;
	}));
	if ((_125817_imp == nullptr) || (!(_125817_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_125641_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_125713_path)}));
		return nullptr;
	}
	jule::Trait<_225e7723a_Lookup> _127017_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_125817_imp;
	jule::Trait<_23e2b5818_Kind> _127317_kind = (*this)._method_build_ident(_125641_decl->_field_kind);
	(*this)._field_lookup=_127017_lookup;
	return _127317_kind;
}



inline jule::Ptr<_23e2b5818_TypeKind> _23e2b5818_TypeChecker::_method_build(jule::Any& _128029_decl_kind) {
	jule::Trait<_23e2b5818_Kind> _128117_kind = nullptr;
	{
		auto &_match_expr{ _128029_decl_kind };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_TypeKind>>()) {
			_case_begin_5560766960:;
			{
				_128117_kind=_128029_decl_kind.operator jule::Ptr<_23e2b5818_TypeKind>();
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_IdentTypeDecl>>()) {
			_case_begin_5560766704:;
			{
				jule::Trait<_23e2b5818_Kind> _128821_t = (*this)._method_build_ident(_128029_decl_kind.operator jule::Ptr<_23e45734a_IdentTypeDecl>());
				if (_128821_t != nullptr) {
					_128117_kind=_128821_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_SptrTypeDecl>>()) {
			_case_begin_5560766800:;
			{
				jule::Ptr<_23e2b5818_Sptr> _129421_t = (*this)._method_build_sptr(_128029_decl_kind.operator jule::Ptr<_23e45734a_SptrTypeDecl>());
				if (_129421_t != nullptr) {
					_128117_kind=_129421_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_PtrTypeDecl>>()) {
			_case_begin_5560765024:;
			{
				jule::Ptr<_23e2b5818_Ptr> _130021_t = (*this)._method_build_ptr(_128029_decl_kind.operator jule::Ptr<_23e45734a_PtrTypeDecl>());
				if (_130021_t != nullptr) {
					_128117_kind=_130021_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_SlcTypeDecl>>()) {
			_case_begin_5560765120:;
			{
				jule::Ptr<_23e2b5818_Slc> _130621_t = (*this)._method_build_slc(_128029_decl_kind.operator jule::Ptr<_23e45734a_SlcTypeDecl>());
				if (_130621_t != nullptr) {
					_128117_kind=_130621_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_ArrTypeDecl>>()) {
			_case_begin_5560765216:;
			{
				jule::Ptr<_23e2b5818_Arr> _131221_t = (*this)._method_build_arr(_128029_decl_kind.operator jule::Ptr<_23e45734a_ArrTypeDecl>());
				if (_131221_t != nullptr) {
					_128117_kind=_131221_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_MapTypeDecl>>()) {
			_case_begin_5560765312:;
			{
				jule::Ptr<_23e2b5818_Map> _131821_t = (*this)._method_build_map(_128029_decl_kind.operator jule::Ptr<_23e45734a_MapTypeDecl>());
				if (_131821_t != nullptr) {
					_128117_kind=_131821_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_TupleTypeDecl>>()) {
			_case_begin_5560765408:;
			{
				jule::Ptr<_23e2b5818_Tuple> _132421_t = (*this)._method_build_tuple(_128029_decl_kind.operator jule::Ptr<_23e45734a_TupleTypeDecl>());
				if (_132421_t != nullptr) {
					_128117_kind=_132421_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_FnDecl>>()) {
			_case_begin_5560767376:;
			{
				jule::Ptr<_2252d6a73_FnIns> _133021_t = (*this)._method_build_fn(_128029_decl_kind.operator jule::Ptr<_23e45734a_FnDecl>());
				if (_133021_t != nullptr) {
					_128117_kind=_133021_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_NamespaceTypeDecl>>()) {
			_case_begin_5560767472:;
			{
				jule::Trait<_23e2b5818_Kind> _133621_t = (*this)._method_build_by_namespace(_128029_decl_kind.operator jule::Ptr<_23e45734a_NamespaceTypeDecl>());
				if (_133621_t != nullptr) {
					_128117_kind=_133621_t;
				}
			}
		}
		else {
			_case_begin_5560764128:;
			{
				(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_5560764624:;
	}
	if (_128117_kind == nullptr) {
		return nullptr;
	}
	{
		auto &_match_expr{ _128117_kind };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_TypeKind>>()) {
			_case_begin_5560795488:;
			{
				return _128117_kind.operator jule::Ptr<_23e2b5818_TypeKind>();
			}
		}
		else {
			_case_begin_5560792656:;
			{
				return jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_128117_kind));
			}
		}
		_match_end_5560767904:;
	}
}



inline jule::Ptr<_23e2b5818_TypeKind> _23e2b5818_TypeChecker::_method_check_decl(jule::Ptr<_23e45734a_TypeDecl>& _136134_decl) {
	_23e730c0b_Token _136317_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_136134_decl->_field_token;
	jule::Ptr<_23e2b5818_TypeKind> _136617_kind = (*this)._method_build(_136134_decl->_field_kind);
	(*this)._field_error_token=_136317_error_token;
	return _136617_kind;
}



inline void _23e2b5818_TypeChecker::_method_check(jule::Ptr<_23e2b5818_TypeSymbol>& _137229_t) {
	if (_137229_t->_field_decl == nullptr) {
		return;
	}
	jule::Ptr<_23e2b5818_TypeKind> _137717_kind = (*this)._method_check_decl(_137229_t->_field_decl);
	if (_137717_kind == nullptr) {
		_137229_t->_method_remove_kind();
		return;
	}
	_137229_t->_field_kind=_137717_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e2b5818_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_23de59556_IR>,jule::Slice<_23ceb0c1d_Log>> _23de59556_IR::_static_method_build(jule::Str _2525_path,jule::Int _2536_flags) {
	jule::Ptr<_23e3748d8_PlainImporter> _2617_importer = jule::new_struct<_23e3748d8_PlainImporter>(new( std::nothrow ) _23e3748d8_PlainImporter());
	jule::Slice<jule::Ptr<_23e249d96_Ast>> _2718_files;
	jule::Slice<_23ceb0c1d_Log> _2729_logs;
	std::tie(_2718_files,_2729_logs) = _2617_importer->_method_import_package(_2525_path);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_2729_logs);
	}
	if (_2718_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_225615962_Package> _3618_pkg;
	std::tie(_3618_pkg,_2729_logs) = _225e03282_analyze_package(_2718_files,_2617_importer,_2536_flags);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_2729_logs);
	}
	jule::Ptr<_23de59556_IR> _4117_ir = jule::new_struct<_23de59556_IR>(new( std::nothrow ) _23de59556_IR(jule::Slice<jule::Str>(),_3618_pkg,_2617_importer->_field_all_packages,_23e1d6b35_OrderedDefines()));
	_4117_ir->_field_passes=_23de59556_get_all_unique_passes(_4117_ir->_field_main,_4117_ir->_field_used);
	return std::make_tuple(_4117_ir,nullptr);
}



inline void _23de59556_IR::_method_append_structs(jule::Ptr<_225615962_Package>& _5234_p,jule::Slice<jule::Ptr<_225036509_Struct>>& _5258_buffer) {
	{
		auto &expr = _5234_p->_field_files;
		auto it = expr.begin();
		_iter_begin_5561037200:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _23de59556_f = *it;
			{
				{
					auto &expr = _23de59556_f->_field_structs;
					auto it = expr.begin();
					_iter_begin_5561038480:;
					if (it != expr.end()) {
						jule::Ptr<_225036509_Struct> _23de59556_s = *it;
						{
							if ((!(_23de59556_s->_field_cpp_linked))) {
								_5258_buffer.push(_23de59556_s);
							}
						}
						_iter_next_5561038480:;
						++it;
						goto _iter_begin_5561038480;
					}
					_iter_end_5561038480:;
				}
			}
			_iter_next_5561037200:;
			++it;
			goto _iter_begin_5561037200;
		}
		_iter_end_5561037200:;
	}
}



inline jule::Slice<jule::Ptr<_225036509_Struct>> _23de59556_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ptr<_225036509_Struct>> _6517_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_6517_buffer);
	{
		auto &expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_5561043168:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _23de59556_u = *it;
			{
				if ((!(_23de59556_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_23de59556_u->_field_package,_6517_buffer);
				}
			}
			_iter_next_5561043168:;
			++it;
			goto _iter_begin_5561043168;
		}
		_iter_end_5561043168:;
	}
	return _6517_buffer;
}



inline void _23de59556_IR::_method_append_vars(jule::Ptr<_225615962_Package>& _7831_p,jule::Slice<jule::Ptr<_2258258db_Var>>& _7855_buffer) {
	{
		auto &expr = _7831_p->_field_files;
		auto it = expr.begin();
		_iter_begin_5561048624:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _23de59556_f = *it;
			{
				{
					auto &expr = _23de59556_f->_field_vars;
					auto it = expr.begin();
					_iter_begin_5561049904:;
					if (it != expr.end()) {
						jule::Ptr<_2258258db_Var> _23de59556_v = *it;
						{
							if ((!(_23de59556_v->_field_cpp_linked)) && (!(_23de59556_v->_field_constant))) {
								_7855_buffer.push(_23de59556_v);
							}
						}
						_iter_next_5561049904:;
						++it;
						goto _iter_begin_5561049904;
					}
					_iter_end_5561049904:;
				}
			}
			_iter_next_5561048624:;
			++it;
			goto _iter_begin_5561048624;
		}
		_iter_end_5561048624:;
	}
}



inline jule::Slice<jule::Ptr<_2258258db_Var>> _23de59556_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ptr<_2258258db_Var>> _9117_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_9117_buffer);
	{
		auto &expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_5561054864:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _23de59556_u = *it;
			{
				if ((!(_23de59556_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_23de59556_u->_field_package,_9117_buffer);
				}
			}
			_iter_next_5561054864:;
			++it;
			goto _iter_begin_5561054864;
		}
		_iter_end_5561054864:;
	}
	return _9117_buffer;
}



inline void _23de59556_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	(*this)._field_ordered._field_globals=(*this)._method_get_all_variables();
	_23e1d6b35_DefineOrderer::_static_method_order_variables((*this)._field_ordered._field_globals);
	_23e1d6b35_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _23de59556_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _23e45734a_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2255ba3ea_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _23e45734a_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23e45734a_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Int,jule::Bool> _23d0249a7_ArgParser::_method_parse_integer_0(jule::Str& _18532_s,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)> _18540_parser) {
	jule::Int _18584_x = jule::Int();
	jule::Bool _18590_ok = jule::Bool();
	{
		if (_18532_s == jule::Str()) {
			_case_begin_5563172448:;
			{
				_18584_x = 0LL;
				_18590_ok = false;
				return std::make_tuple(_18584_x,_18590_ok);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0x", 2))) {
			_case_begin_5563172784:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),16LL);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0b", 2))) {
			_case_begin_5563172880:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),2LL);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0o", 2))) {
			_case_begin_5563172976:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),8LL);
			}
		}
		else if (_18532_s[0LL] == '0') {
			_case_begin_5563171136:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_5563170832:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s,10LL);
			}
		}
		_match_end_5563170656:;
	}
	return std::make_tuple(_18584_x,_18590_ok);
}

inline std::tuple<jule::Uint,jule::Bool> _23d0249a7_ArgParser::_method_parse_integer_1(jule::Str& _18532_s,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)> _18540_parser) {
	jule::Uint _18584_x = jule::Uint();
	jule::Bool _18590_ok = jule::Bool();
	{
		if (_18532_s == jule::Str()) {
			_case_begin_5563201280:;
			{
				_18584_x = 0LL;
				_18590_ok = false;
				return std::make_tuple(_18584_x,_18590_ok);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0x", 2))) {
			_case_begin_5563201616:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),16LL);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0b", 2))) {
			_case_begin_5563201712:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),2LL);
			}
		}
		else if (_18532_s.has_prefix(jule::Str("0o", 2))) {
			_case_begin_5563201808:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(2LL),8LL);
			}
		}
		else if (_18532_s[0LL] == '0') {
			_case_begin_5563199968:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_5563199664:;
			{
				std::tie(_18584_x,_18590_ok) = _18540_parser(_18532_s,10LL);
			}
		}
		_match_end_5563199488:;
	}
	return std::make_tuple(_18584_x,_18590_ok);
}



inline jule::Str _23d0249a7_ArgParser::_method_get_data(void) {
	if (((*this)._field_i + 1LL) >= (*this)._field_args.len()) {
		return jule::Str();
	}
	((*this)._field_i)++;
	return (*this)._field_args[(*this)._field_i];
}



inline jule::VoidExceptional _23d0249a7_ArgParser::_method_process_flag(jule::Trait<_23d0249a7_CommonFlag>& _21636_flag) {
	{
		auto &_match_expr{ _21636_flag };
		if (_match_expr.type_is<jule::Ptr<_23d0249a7_Flag_3>>()) {
			_case_begin_5563147680:;
			{
				jule::Ptr<_23d0249a7_Flag_3> _21921_bf = _21636_flag.operator jule::Ptr<_23d0249a7_Flag_3>();
				(*(_21921_bf->_field__data))=(!(_21921_bf->_field__default));
				return jule::VoidExceptional();
			}
		}
		_match_end_5563147968:;
	}
	jule::Str _22413_data = (*this)._method_get_data();
	if (_22413_data == jule::Str()) {
		return jule::VoidExceptional((jule::Str("--", 2) + _21636_flag.get()._method_name()) + jule::Str(": expression missing", 20));
	}
	{
		auto &_match_expr{ _21636_flag };
		if (_match_expr.type_is<jule::Ptr<_23d0249a7_Flag_0>>()) {
			_case_begin_5563152032:;
			{
				jule::Ptr<_23d0249a7_Flag_0> _23121_intf = _21636_flag.operator jule::Ptr<_23d0249a7_Flag_0>();
				jule::Bool _23233_ok;
				std::tie((*(_23121_intf->_field__data)),_23233_ok) = (*this)._method_parse_integer_0(_22413_data,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _23272_s,jule::Int _23280_base) mutable -> std::tuple<jule::Int,jule::Bool> {
					jule::I64 _23322_x;
					jule::Int _23325_err;
					std::tie(_23322_x,_23325_err) = _23d01eb8e_parse_int(_23272_s,_23280_base,64LL);
					return std::make_tuple(_23322_x,_23325_err == 0LLU);
				}));
				if ((!(_23233_ok))) {
					return jule::VoidExceptional((jule::Str("--", 2) + _21636_flag.get()._method_name()) + jule::Str(": expression must be valid signed integer", 41));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23d0249a7_Flag_1>>()) {
			_case_begin_5563151632:;
			{
				jule::Ptr<_23d0249a7_Flag_1> _24121_uintf = _21636_flag.operator jule::Ptr<_23d0249a7_Flag_1>();
				jule::Bool _24234_ok;
				std::tie((*(_24121_uintf->_field__data)),_24234_ok) = (*this)._method_parse_integer_1(_22413_data,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _24274_s,jule::Int _24282_base) mutable -> std::tuple<jule::Uint,jule::Bool> {
					jule::U64 _24322_x;
					jule::Int _24325_err;
					std::tie(_24322_x,_24325_err) = _23d01eb8e_parse_uint(_24274_s,_24282_base,64LL);
					return std::make_tuple(_24322_x,_24325_err == 0LLU);
				}));
				if ((!(_24234_ok))) {
					return jule::VoidExceptional((jule::Str("--", 2) + _21636_flag.get()._method_name()) + jule::Str(": expression must be valid unsigned integer", 43));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23d0249a7_Flag_2>>()) {
			_case_begin_5563151728:;
			{
				jule::Ptr<_23d0249a7_Flag_2> _25121_ff = _21636_flag.operator jule::Ptr<_23d0249a7_Flag_2>();
				jule::Int _25231_err;
				std::tie((*(_25121_ff->_field__data)),_25231_err) = _23d225b97_parse_float(_22413_data,64LL);
				if (_25231_err != 0LLU) {
					return jule::VoidExceptional((jule::Str("--", 2) + _21636_flag.get()._method_name()) + jule::Str(": expression must be valid floating-point", 41));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23d0249a7_Flag_4>>()) {
			_case_begin_5563153504:;
			{
				(*(_21636_flag.operator jule::Ptr<_23d0249a7_Flag_4>()->_field__data))=_22413_data;
			}
		}
		_match_end_5563151472:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _23d0249a7_ArgParser::_method_single_dash(jule::Str& _26231_arg) {
	jule::Slice<jule::I32> _26313_rarg = static_cast<jule::Slice<jule::I32>>(_26231_arg).slice(1LL);
	{
		auto &expr = _26313_rarg;
		auto it = expr.begin();
		_iter_begin_5563219984:;
		if (it != expr.end()) {
			jule::I32 &_23d0249a7_r = *it;
			{
				jule::Trait<_23d0249a7_CommonFlag> _26521_flag = (*this)._field_set._method_find_flag_short(_23d0249a7_r);
				if (_26521_flag == nullptr) {
					return jule::VoidExceptional((_26231_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_23d0249a7_r));
				}
				({
					auto except = (*this)._method_process_flag(_26521_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_5563219984:;
			++it;
			goto _iter_begin_5563219984;
		}
		_iter_end_5563219984:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _23d0249a7_ArgParser::_method_double_dash(jule::Str& _27431_arg) {
	jule::Trait<_23d0249a7_CommonFlag> _27517_flag = (*this)._field_set._method_find_flag(_27431_arg.slice(2LL));
	if (_27517_flag == nullptr) {
		return jule::VoidExceptional(_27431_arg + jule::Str(": flag is not exist", 19));
	}
	({
		auto except = (*this)._method_process_flag(_27517_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::VoidExceptional _23d0249a7_ArgParser::_method_try_arg(void) {
	jule::Str _28413_arg = (*this)._field_args[(*this)._field_i];
	if ((*this)._field_args.len() == 0LL) {
		return jule::VoidExceptional();
	}
	if (_28413_arg[0LL] == '-') {
		if (((*this)._field_args.len() > 1LL) && (_28413_arg[1LL] == '-')) {
			({
				auto except = (*this)._method_double_dash(_28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();
		}
		({
			auto except = (*this)._method_single_dash(_28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();
	}
	(*this)._field_content = jule::alloc_for_append((*this)._field_content,1);(*this)._field_content.push(_28413_arg); return jule::VoidExceptional(); }



inline jule::VoidExceptional _23d0249a7_ArgParser::_method_parse(void) {
	for (; (*this)._field_i < (*this)._field_args.len(); ((*this)._field_i)++) {
		{
			({
				auto except = (*this)._method_try_arg();
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_5563235568:;
	}
	_iter_end_5563235568:; return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, const _23d0249a7_ArgParser &_Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _23d15835a_free(void* _5124_ptr) {
	free(_5124_ptr);
}



inline jule::Str _23d175344_byte_ptr_to_str(jule::U8* _7431_s) {
	if (_7431_s == nullptr) {
		return jule::Str();
	}
	return __jule_str_from_byte_ptr(_7431_s);
}



inline jule::Int _23d108294_get_last_errno(void) {
	return errno;
}



inline jule::Int _23d108c56_stat(jule::U8* _4620_path,struct stat* _4637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_4620_path)),_4637_stat));
}



inline jule::Int _23d108c56_open(jule::U8* _5120_path,jule::Int _5133_flag,jule::Int _5144_mode) {
	return static_cast<jule::Int>(open(((char*)(_5120_path)),_5133_flag,_5144_mode));
}



inline jule::U8* _23d108c56_getcwd(jule::U8* _5722_buff,jule::Uint _5735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5722_buff)),_5735_bufflen)));
}



inline DIR* _23d108c56_opendir(jule::U8* _6223_path) {
	return opendir(((char*)(_6223_path)));
}



inline struct dirent* _23d108c56_readdir(DIR* _6527_dir) {
	return readdir(_6527_dir);
}



inline jule::Int _23d108c56_closedir(DIR* _6828_dir) {
	return static_cast<jule::Int>(closedir(_6828_dir));
}



inline jule::Int _23d108c56_mkdir(jule::U8* _7721_path,jule::Int _7734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_7721_path)),_7734_mode));
}



inline jule::Int _23d108c56_rmdir(jule::U8* _8221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_8221_path))));
}



inline jule::Int _23d108c56_unlink(jule::U8* _8522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_8522_path))));
}



inline jule::I64 _23d12181d_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _23d12181d_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _23d12181d_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _23d12181d_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _23d12181d_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline jule::Int _23d0e2c2e_get_last_os_error(void) {
	jule::Int _309_err = _23d108294_get_last_errno();
	{
		auto &_match_expr{ _309_err };
		if (_match_expr == 13LL) {
			_case_begin_5541156896:;
			{
				return 0LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_5541156992:;
			{
				return 1LLU;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_5541157088:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_5541157472:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_5541157568:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_5541157664:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_5541156384:;
			{
				return 6LLU;
			}
		}
		else {
			_case_begin_5541154944:;
			{
				return 1LLU;
			}
		}
		_match_end_5541155808:;
	}
}



inline jule::Slice<jule::Str> _23d0e4923_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _23d0e4923_working_dir(void) {
	return jule::Exceptional(jule::Any(),({
		auto except = _23d103d3e___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _23d103d3e___getwd(void) {
	jule::U8* _1113_buff = _23d108c56_getcwd(nullptr,0LLU);
	if (_1113_buff == nullptr) {
		return jule::Exceptional<jule::Str>(_23d0e2c2e_get_last_os_error());
	}
	jule::Str _159_pwd = _23d175344_byte_ptr_to_str(_1113_buff);
	{
		_23d15835a_free(_1113_buff);
	}
	return jule::Exceptional(jule::Any(),_159_pwd);
}



inline jule::Str _23d08e2c4_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _23d08c7ab_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(_1099_vol_len);
	if (_10718_path == jule::Str()) {
		if (((_1099_vol_len > 1LL) && _23d08c7ab_is_path_sep(_1089_original_path[0LL])) && _23d08c7ab_is_path_sep(_1089_original_path[1LL])) {
			return _23d08e2c4_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _23d08c7ab_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_23d08e2c4_LazyBuff _12613_out = _23d08e2c4_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13114_r < _1259_n) {
		{
			{
				if (_23d08c7ab_is_path_sep(_10718_path[_13114_r])) {
					_case_begin_5541227248:;
					{
						(_13114_r)++;
					}
				}
				else if ((_10718_path[_13114_r] == '.') && (((_13114_r + 1LL) == _1259_n) || _23d08c7ab_is_path_sep(_10718_path[_13114_r + 1LL]))) {
					_case_begin_5541230304:;
					{
						(_13114_r)++;
					}
				}
				else if (((_10718_path[_13114_r] == '.') && (_10718_path[_13114_r + 1LL] == '.')) && (((_13114_r + 2LL) == _1259_n) || _23d08c7ab_is_path_sep(_10718_path[_13114_r + 2LL]))) {
					_case_begin_5541228720:;
					{
						_13114_r+=2LL;
						{
							if (_12613_out._field_w > _13121_dotdot) {
								_case_begin_5541236960:;
								{
									(_12613_out._field_w)--;
									while ((_12613_out._field_w > _13121_dotdot) && (!(_23d08c7ab_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w)))))) {
										{
											(_12613_out._field_w)--;
										}
									_iter_next_5541237456:;
									}
									_iter_end_5541237456:;
								}
							}
							else if ((!(_1189_rooted))) {
								_case_begin_5541237072:;
								{
									if (_12613_out._field_w > 0LL) {
										_12613_out._method_append(47LLU);
									}
									_12613_out._method_append('.');
									_12613_out._method_append('.');
									_13121_dotdot=_12613_out._field_w;
								}
							}
							_match_end_5541231616:;
						}
					}
				}
				else {
					_case_begin_5541218960:;
					{
						if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
							_12613_out._method_append(47LLU);
						}
						if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
							jule::Int _17425_i = _13114_r;
							for (; (_17425_i < _1259_n) && (!(_23d08c7ab_is_path_sep(_10718_path[_17425_i]))); (_17425_i)++) {
								{
									if (_10718_path[_17425_i] == ':') {
										_12613_out._method_append('.');
										_12613_out._method_append(47LLU);
										goto _iter_end_5541222288;
									}
								}
							_iter_next_5541222288:;
							}
							_iter_end_5541222288:;
						}
						for (; (_13114_r < _1259_n) && (!(_23d08c7ab_is_path_sep(_10718_path[_13114_r]))); (_13114_r)++) {
							{
								_12613_out._method_append(_10718_path[_13114_r]);
							}
						_iter_next_5541224048:;
						}
						_iter_end_5541224048:;
					}
				}
				_match_end_5541218832:;
			}
		}
	_iter_next_5541218416:;
	}
	_iter_end_5541218416:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _23d08e2c4_from_slash(_12613_out._method_string());
}



inline jule::Str _23d08e2c4_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _23d08e2c4_join(jule::Slice<jule::Str> _22413_elem) {
	return _23d08c7ab___join(_22413_elem);
}



inline jule::Str _23d08e2c4_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	for (; (_23013_i >= 0LL) && (!(_23d08c7ab_is_path_sep(_22912_path[_23013_i]))); (_23013_i)--) {
		{
			if (_22912_path[_23013_i] == '.') {
				return _22912_path.slice(_23013_i);
			}
		}
	_iter_next_5541254464:;
	}
	_iter_end_5541254464:;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _23d08e2c4_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _23d08c7ab___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



inline jule::Str _23d08e2c4_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str()) {
		return jule::Str(".", 1);
	}
	while ((_25317_path.len() > 0LL) && _23d08c7ab_is_path_sep(_25317_path[_25317_path.len() - 1LL])) {
		{
			_25317_path=_25317_path.slice(0LL,_25317_path.len() - 1LL);
		}
	_iter_next_5541262272:;
	}
	_iter_end_5541262272:;
	_25317_path=_25317_path.slice(_23d08e2c4_volume_name(_25317_path).len());
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	while ((_26413_i >= 0LL) && (!(_23d08c7ab_is_path_sep(_25317_path[_26413_i])))) {
		{
			(_26413_i)--;
		}
	_iter_next_5541264560:;
	}
	_iter_end_5541264560:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(_26413_i + 1LL);
	}
	if (_25317_path == jule::Str()) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



inline jule::Str _23d08e2c4_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _23d08e2c4_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	while ((_28613_i >= _2859_vol.len()) && (!(_23d08c7ab_is_path_sep(_28412_path[_28613_i])))) {
		{
			(_28613_i)--;
		}
	_iter_next_5541271808:;
	}
	_iter_end_5541271808:;
	jule::Str _2909_dir = _23d08e2c4_clean(_28412_path.slice(_2859_vol.len(),_28613_i + 1LL));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



inline jule::Str _23d08e2c4_volume_name(jule::Str _30220_path) {
	return _23d08e2c4_from_slash(_30220_path.slice(0LL,_23d08c7ab_volume_name_len(_30220_path)));
}



inline jule::Bool _23d08c7ab_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _23d08c7ab_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _23d08c7ab_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _23d08c7ab___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_23d08c7ab_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_23d08e2c4_clean(_5810_path),_5828_ok);
	}
	jule::Str _629_wd = ({
		auto except = _23d0e4923_working_dir();
		(except.ok()) ? (except.result) : ({{
			_5828_ok = false;
			return std::make_tuple(jule::Str(),_5828_ok);
			_5828_ok = false;
			return std::make_tuple(jule::Str(),_5828_ok);
		} jule::Str();});
	});
	_5828_ok = true;
	return std::make_tuple(_23d08c7ab___join(jule::Slice<jule::Str>({_629_wd,_5810_path})),_5828_ok);
}



inline jule::Str _23d08c7ab_str_join(jule::Slice<jule::Str> _6813_elems,jule::Str _6827_sep) {
	{
		auto _match_expr{ _6813_elems.len() };
		if (_match_expr == 0LL) {
			_case_begin_5541290960:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_5541291056:;
			{
				return _6813_elems[0LL];
			}
		}
		_match_end_5541290480:;
	}
	jule::Str _7413_s = _6813_elems[0LL];
	{
		auto expr = _6813_elems.slice(1LL);
		auto it = expr.begin();
		_iter_begin_5541294240:;
		if (it != expr.end()) {
			jule::Str &_23d08c7ab_elem = *it;
			{
				_7413_s+=_6827_sep + _23d08c7ab_elem;
			}
			_iter_next_5541294240:;
			++it;
			goto _iter_begin_5541294240;
		}
		_iter_end_5541294240:;
	}
	return _7413_s;
}



inline jule::Str _23d08c7ab___join(jule::Slice<jule::Str> _8111_elem) {
	{
		auto &expr = _8111_elem;
		auto it = expr.begin();
		_iter_begin_5541295408:;
		if (it != expr.end()) {
			jule::Int _23d08c7ab_i = it - expr.begin();
			jule::Str &_23d08c7ab_e = *it;
			{
				if (_23d08c7ab_e != jule::Str()) {
					return _23d08e2c4_clean(_23d08c7ab_str_join(_8111_elem.slice(_23d08c7ab_i),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_5541295408:;
			++it;
			_23d08c7ab_i++;
			goto _iter_begin_5541295408;
		}
		_iter_end_5541295408:;
	}
	return jule::Str();
}



inline void _23d07c4e3_exit(jule::Int _1213_code) {
	_23d12181d_exit(_1213_code);
}



inline jule::Str _23d07c4e3_executable(void) {
	return jule::executable();
}



inline jule::Bool _23ceb0954_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[_2627_p.len() - 1LL] == '>');
}



inline jule::Bool _23ceb0954_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _23ceb0954_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_5541459216:;
		if (it != expr.end()) {
			jule::Str &_23ceb0954_valid_ext = *it;
			{
				if (_3128_ext == _23ceb0954_valid_ext) {
					return true;
				}
			}
			_iter_next_5541459216:;
			++it;
			goto _iter_begin_5541459216;
		}
		_iter_end_5541459216:;
	}
	return false;
}



inline jule::Bool _23ceb0954_is_valid_cpp_ext(jule::Str _4225_ext) {
	if (_4225_ext == jule::Str(".c", 2)) {
		return true;
	}
	{
		auto &expr = _23ceb0954_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_5541460208:;
		if (it != expr.end()) {
			jule::Str &_23ceb0954_e = *it;
			{
				if (_4225_ext == _23ceb0954_e) {
					return true;
				}
			}
			_iter_next_5541460208:;
			++it;
			goto _iter_begin_5541460208;
		}
		_iter_end_5541460208:;
	}
	{
		auto &expr = _23ceb0954_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_5541458160:;
		if (it != expr.end()) {
			jule::Str &_23ceb0954_e = *it;
			{
				if (_4225_ext == _23ceb0954_e) {
					return true;
				}
			}
			_iter_next_5541458160:;
			++it;
			goto _iter_begin_5541458160;
		}
		_iter_end_5541458160:;
	}
	return false;
}



inline jule::Str _23ceb0c1d_logf(jule::Str _27713_fmt,jule::Slice<jule::Any> _27726_args) {
	return _23ceb0c1d_apply_fmt(_27713_fmt,_27726_args);
}



inline jule::Str _23ceb0c1d_arg_to_str(jule::Any _28115_arg) {
	{
		auto &_match_expr{ _28115_arg };
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_5541468896:;
			{
				return _28115_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_5541469152:;
			{
				return static_cast<jule::Str>(_28115_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_5541469248:;
			{
				return static_cast<jule::Str>(_28115_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_5541466784:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_5541467984:;
	}
}



inline jule::Int _23ceb0c1d_find_next_fmt(jule::Str _29018_fmt) {
	{
		auto &expr = _29018_fmt;
		auto it = expr.begin();
		_iter_begin_5541472720:;
		if (it != expr.end()) {
			jule::Int _23ceb0c1d_i = it - expr.begin();
			jule::U8 &_23ceb0c1d_b = *it;
			{
				if (_23ceb0c1d_b == '@') {
					return _23ceb0c1d_i;
				}
			}
			_iter_next_5541472720:;
			++it;
			_23ceb0c1d_i++;
			goto _iter_begin_5541472720;
		}
		_iter_end_5541472720:;
	}
	return -1LL;
}



inline jule::Str _23ceb0c1d_apply_fmt(jule::Str _29918_fmt,jule::Slice<jule::Any> _29928_args) {
	jule::Str _30013_s = jule::Str();
	{
		auto &expr = _29928_args;
		auto it = expr.begin();
		_iter_begin_5541476496:;
		if (it != expr.end()) {
			jule::Any &_23ceb0c1d_arg = *it;
			{
				jule::Int _30313_i = _23ceb0c1d_find_next_fmt(_29918_fmt);
				if (_30313_i == -1LL) {
					goto _iter_end_5541476496;
				}
				_30013_s+=_29918_fmt.slice(0LL,_30313_i);
				_30013_s+=_23ceb0c1d_arg_to_str(_23ceb0c1d_arg);
				_29918_fmt=_29918_fmt.slice(_30313_i + 1LL);
			}
			_iter_next_5541476496:;
			++it;
			goto _iter_begin_5541476496;
		}
		_iter_end_5541476496:;
	}
	_30013_s+=_29918_fmt;
	return _30013_s;
}



inline jule::Bool _23d01326a_is_top_directive(jule::Str _2625_directive) {
	return (_2625_directive == jule::Str("pass", 4)) || (_2625_directive == jule::Str("build", 5));
}



inline jule::Bool _23d049526_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



inline jule::Bool _23d049526_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



inline jule::Bool _23d049526_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



inline jule::Bool _23d049526_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



inline jule::Bool _23d049526_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



inline jule::Bool _23d049526_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



inline jule::Bool _23d049526_is_unix(jule::Str _6316_os) {
	return _23d049526_is_darwin(_6316_os) || _23d049526_is_linux(_6316_os);
}



inline jule::Bool _23d049526_is_32bit(jule::Str _6517_arch) {
	return _23d049526_is_i386(_6517_arch);
}



inline jule::Bool _23d049526_is_64bit(jule::Str _6717_arch) {
	return _23d049526_is_amd64(_6717_arch) || _23d049526_is_arm64(_6717_arch);
}



inline void _23d049669_exit_err(jule::Str _1613_msg) {
	
	jule::outln(_1613_msg);
	_23d07c4e3_exit(1LL);
}



inline void _23d049669_init(void) {
	jule::Str _2413_path = _23d07c4e3_executable();
	if (_2413_path == jule::Str()) {
		_23d049669_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _299_pwd = ({
		auto except = _23d0e4923_working_dir();
		(except.ok()) ? (except.result) : ({{
			_23d049669_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
			return;
			return;
		} jule::Str();});
	});
	jule::Str _349_path_exec = _23d08e2c4_dir(_2413_path);
	_2413_path=_23d08e2c4_join(jule::Slice<jule::Str>({_349_path_exec,jule::Str("..", 2)}));
	{
		_23d049669_PATH_WD=_299_pwd;
		_23d049669_PATH_EXEC=_349_path_exec;
		_23d049669_PATH_STDLIB=_23d08e2c4_join(jule::Slice<jule::Str>({_2413_path,jule::Str("std", 3)}));
		_23d049669_PATH_API=_23d08e2c4_join(jule::Slice<jule::Str>({_23d049669_PATH_EXEC,jule::Str("..", 2)}));
		_23d049669_PATH_API=_23d08e2c4_join(jule::Slice<jule::Str>({_23d049669_PATH_API,jule::Str("api", 3)}));
		_23d049669_PATH_API=_23d08e2c4_join(jule::Slice<jule::Str>({_23d049669_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Int _23e648b02_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _23e648b02_len64(_6124_x));
}



inline jule::Int _23e648b02_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_23e648b02_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_23e648b02_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _23e648b02_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_23e648b02_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _23e648b02_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_23e648b02_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _23e648b02_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LLU) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LLU) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



inline jule::Int _23e648b02_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LLU) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LLU) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LLU) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _23e648b02_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _23e648b02_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LLU;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LLU;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LLU;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _23e0ae58a_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _23e0ae58a_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _23e0ae58a_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _23e0ae58a_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _23e148602_nan(void) {
	return static_cast<jule::F64>(_23e0ae58a_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _23e148602_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _23e148602_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_23e0ae58a_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_23e0ae58a_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _23e148602_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline jule::F64 _23e206eb8_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_23e0ae58a_f64_from_bits(static_cast<jule::U64>(_23e0ae58a_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



inline std::tuple<jule::F64,jule::F64> _23e29a699_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _23e206eb8_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_5542660176:;
		}
		_iter_end_5542660176:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::Str _23d12cd35_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_23d12cd35_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _23d12cd35_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_23d12cd35_FloatInfo* _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		if (_match_expr == 32LL) {
			_case_begin_5544031344:;
			{
				_8313_bits=static_cast<jule::U64>(_23e0ae58a_f32_bits(static_cast<jule::F32>(_8234_val)));
				_8413_flt=(&(_23d12cd35_F32_INFO));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_5544030432:;
			{
				_8313_bits=static_cast<jule::U64>(_23e0ae58a_f64_bits(_8234_val));
				_8413_flt=(&(_23d12cd35_F64_INFO));
			}
		}
		else {
			_case_begin_5544029376:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_5544029808:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto &_match_expr{ _9713_exp };
		if (_match_expr == (1LL << _8413_flt->_field_expbits) - 1LL) {
			_case_begin_5544029888:;
			{
				jule::Str _10317_s = jule::Str();
				{
					if (_9813_mant != 0LL) {
						_case_begin_5544044288:;
						{
							_10317_s=jule::Str("nan", 3);
						}
					}
					else if (_969_neg) {
						_case_begin_5544044896:;
						{
							_10317_s=jule::Str("-inf", 4);
						}
					}
					else {
						_case_begin_5544043488:;
						{
							_10317_s=jule::Str("+inf", 4);
						}
					}
					_match_end_5544043376:;
				}
				return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_5544041216:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_5544034304:;
			{
				_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
			}
		}
		_match_end_5544038928:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _23d12cd35_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _23d12cd35_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _23d12cd35_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_23d12cd35_DecimalSlice _13413_digs = _23d12cd35_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		_13413_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_23de8c457_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_5544057232:;
				{
					_8259_prec=static_cast<jule::Int>(_23d12cd35_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_5544057808:;
				{
					_8259_prec=static_cast<jule::Int>(_23d12cd35_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_5544057904:;
				{
					_8259_prec=_13413_digs._field_nd;
				}
			}
			_match_end_5544057712:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15417_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_5544064992:;
				{
					(_15417_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_5544064288:;
				{
					if (_8259_prec == 0LL) {
						_8259_prec=1LL;
					}
					_15417_digits=_8259_prec;
				}
			}
			else {
				_case_begin_5544063088:;
				{
					_15417_digits=1LL;
				}
			}
			_match_end_5544063616:;
		}
		if ((_8270_bit_size == 32LL) && (_15417_digits <= 9LL)) {
			_13413_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_23de8c457_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15417_digits);
			_13513_ok=true;
		} else if (_15417_digits <= 18LL) {
			_13413_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_23de8c457_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15417_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _23d12cd35_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _23d12cd35_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _23d12cd35_big_ftoa(jule::Slice<jule::U8> _18417_dst,jule::Int _18434_prec,jule::U8 _18445_fmt,jule::Bool _18456_neg,jule::U64 _18513_mant,jule::Int _18524_exp,_23d12cd35_FloatInfo& _18535_flt) {
	_23e026524_Decimal _18613_d = _23e026524_Decimal();
	_18613_d._method_assign(_18513_mant);
	_18613_d._method_shift(static_cast<jule::Int>(_18524_exp - static_cast<jule::Int>(_18535_flt._field_mantbits)));
	_23d12cd35_DecimalSlice _18913_digs = _23d12cd35_DecimalSlice();
	jule::Bool _1909_shortest = _18434_prec < 0LL;
	if (_1909_shortest) {
		_23d12cd35_round_shortest(_18613_d,_18513_mant,_18524_exp,_18535_flt);
		_18913_digs=_23d12cd35_DecimalSlice(_18613_d._field_d.slice(0LL),_18613_d._field_nd,_18613_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18445_fmt };
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_5544086432:;
				{
					_18434_prec=static_cast<jule::Int>(_18913_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_5544087328:;
				{
					_18434_prec=static_cast<jule::Int>(_23d12cd35_max(static_cast<jule::Int>(_18913_digs._field_nd - _18913_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_5544087616:;
				{
					_18434_prec=_18913_digs._field_nd;
				}
			}
			_match_end_5544087520:;
		}
	} else {
		{
			auto &_match_expr{ _18445_fmt };
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_5544084784:;
				{
					_18613_d._method_round(static_cast<jule::Int>(_18434_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_5544084880:;
				{
					_18613_d._method_round(static_cast<jule::Int>(_18613_d._field_dp + _18434_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_5544084976:;
				{
					if (_18434_prec == 0LL) {
						_18434_prec=1LL;
					}
					_18613_d._method_round(_18434_prec);
				}
			}
			_match_end_5544084704:;
		}
		_18913_digs=_23d12cd35_DecimalSlice(_18613_d._field_d.slice(0LL),_18613_d._field_nd,_18613_d._field_dp,jule::Bool());
	}
	return _23d12cd35_fmt_digits(_18417_dst,_1909_shortest,_18456_neg,_18913_digs,_18434_prec,_18445_fmt);
}



inline jule::Slice<jule::U8> _23d12cd35_fmt_digits(jule::Slice<jule::U8> _22119_dst,jule::Bool _22132_shortest,jule::Bool _22148_neg,_23d12cd35_DecimalSlice _22213_digs,jule::Int _22237_prec,jule::U8 _22248_fmt) {
	{
		auto &_match_expr{ _22248_fmt };
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_5544103504:;
			{
				return _23d12cd35_fmt_e(_22119_dst,_22148_neg,_22213_digs,_22237_prec,_22248_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_5544103600:;
			{
				return _23d12cd35_fmt_f(_22119_dst,_22148_neg,_22213_digs,_22237_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_5544103712:;
			{
				jule::Int _23017_eprec = _22237_prec;
				if ((_23017_eprec > _22213_digs._field_nd) && (_22213_digs._field_nd >= _22213_digs._field_dp)) {
					_23017_eprec=_22213_digs._field_nd;
				}
				if (_22132_shortest) {
					_23017_eprec=6LL;
				}
				jule::Int _24013_exp = _22213_digs._field_dp - 1LL;
				if ((_24013_exp < -4LL) || (_24013_exp >= _23017_eprec)) {
					if (_22237_prec > _22213_digs._field_nd) {
						_22237_prec=_22213_digs._field_nd;
					}
					return _23d12cd35_fmt_e(_22119_dst,_22148_neg,_22213_digs,static_cast<jule::Int>(_22237_prec - 1LL),static_cast<jule::U8>((_22248_fmt + 'e') - 'g'));
				}
				if (_22237_prec > _22213_digs._field_dp) {
					_22237_prec=_22213_digs._field_nd;
				}
				return _23d12cd35_fmt_f(_22119_dst,_22148_neg,_22213_digs,static_cast<jule::Int>(_23d12cd35_max(static_cast<jule::Int>(_22237_prec - _22213_digs._field_dp),0LL)));
			}
		}
		_match_end_5544103392:;
	}
	return jule::append(_22119_dst,jule::Slice<jule::U8>({'%',_22248_fmt}));
}



inline void _23d12cd35_round_shortest(_23e026524_Decimal& _25924_d,jule::U64 _25936_mant,jule::Int _25947_exp,_23d12cd35_FloatInfo& _25958_flt) {
	if (_25936_mant == 0LL) {
		_25924_d._field_nd=0LL;
		return;
	}
	jule::Int _2809_minexp = _25958_flt._field_bias + 1LL;
	if ((_25947_exp > _2809_minexp) && ((332LL * (_25924_d._field_dp - _25924_d._field_nd)) >= (100LL * (_25947_exp - static_cast<jule::Int>(_25958_flt._field_mantbits))))) {
		return;
	}
	_23e026524_Decimal _28913_upper = _23e026524_Decimal();
	_28913_upper._method_assign(static_cast<jule::U64>((_25936_mant * 2LL) + 1LL));
	_28913_upper._method_shift(static_cast<jule::Int>((_25947_exp - static_cast<jule::Int>(_25958_flt._field_mantbits)) - 1LL));
	jule::U64 _29913_mantlo = 0LLU;
	jule::Int _30013_explo = 0LL;
	if ((_25936_mant > (1LL << _25958_flt._field_mantbits)) || (_25947_exp == _2809_minexp)) {
		_29913_mantlo=static_cast<jule::U64>(_25936_mant - 1LL);
		_30013_explo=_25947_exp;
	} else {
		_29913_mantlo=static_cast<jule::U64>((_25936_mant * 2LL) - 1LL);
		_30013_explo=static_cast<jule::Int>(_25947_exp - 1LL);
	}
	_23e026524_Decimal _30813_lower = _23e026524_Decimal();
	_30813_lower._method_assign(static_cast<jule::U64>((_29913_mantlo * 2LL) + 1LL));
	_30813_lower._method_shift(static_cast<jule::Int>((_30013_explo - static_cast<jule::Int>(_25958_flt._field_mantbits)) - 1LL));
	jule::Bool _3159_inclusive = jule::unsafe_mod(_25936_mant,2LL) == 0LL;
	jule::U8 _32813_upperdelta = 0LLU;
	jule::Int _33213_ui = 0LL;
	for (; ; (_33213_ui)++) {
		{
			jule::Int _33713_mi = (_33213_ui - _28913_upper._field_dp) + _25924_d._field_dp;
			if (_33713_mi >= _25924_d._field_nd) {
				goto _iter_end_5544126336;
			}
			jule::Int _34113_li = (_33213_ui - _28913_upper._field_dp) + _30813_lower._field_dp;
			jule::U8 _34217_l = static_cast<jule::U8>(48LLU);
			if ((_34113_li >= 0LL) && (_34113_li < _30813_lower._field_nd)) {
				_34217_l=_30813_lower._field_d[_34113_li];
			}
			jule::U8 _34617_m = static_cast<jule::U8>(48LLU);
			if (_33713_mi >= 0LL) {
				_34617_m=_25924_d._field_d[_33713_mi];
			}
			jule::U8 _35017_u = static_cast<jule::U8>(48LLU);
			if (_33213_ui < _28913_upper._field_nd) {
				_35017_u=_28913_upper._field_d[_33213_ui];
			}
			jule::Bool _35813_okdown = (_34217_l != _34617_m) || (_3159_inclusive && ((_34113_li + 1LL) == _30813_lower._field_nd));
			{
				if ((_32813_upperdelta == 0LL) && ((_34617_m + 1LL) < _35017_u)) {
					_case_begin_5544149200:;
					{
						_32813_upperdelta=2LL;
					}
				}
				else if ((_32813_upperdelta == 0LL) && (_34617_m != _35017_u)) {
					_case_begin_5544149296:;
					{
						_32813_upperdelta=1LL;
					}
				}
				else if ((_32813_upperdelta == 1LL) && ((_34617_m != '9') || (_35017_u != '0'))) {
					_case_begin_5544149392:;
					{
						_32813_upperdelta=2LL;
					}
				}
				_match_end_5544148864:;
			}
			jule::Bool _37913_okup = (_32813_upperdelta > 0LL) && ((_3159_inclusive || (_32813_upperdelta > 1LL)) || ((_33213_ui + 1LL) < _28913_upper._field_nd));
			{
				if (_35813_okdown && _37913_okup) {
					_case_begin_5544155152:;
					{
						_25924_d._method_round(static_cast<jule::Int>(_33713_mi + 1LL));
						return;
					}
				}
				else if (_35813_okdown) {
					_case_begin_5544155664:;
					{
						_25924_d._method_round_down(static_cast<jule::Int>(_33713_mi + 1LL));
						return;
					}
				}
				else if (_37913_okup) {
					_case_begin_5544155760:;
					{
						_25924_d._method_round_up(static_cast<jule::Int>(_33713_mi + 1LL));
						return;
					}
				}
				_match_end_5544141424:;
			}
		}
	_iter_next_5544126336:;
	}
	_iter_end_5544126336:;
}



inline jule::Slice<jule::U8> _23d12cd35_fmt_e(jule::Slice<jule::U8> _39814_dst,jule::Bool _39827_neg,_23d12cd35_DecimalSlice _39838_d,jule::Int _39855_prec,jule::U8 _39866_fmt) {
	if (_39827_neg) {
		_39814_dst.push('-');
	}
	jule::U8 _40513_ch = '0';
	if (_39838_d._field_nd != 0LL) {
		_40513_ch=_39838_d._field_d[0LL];
	}
	_39814_dst.push(_40513_ch);
	if (_39855_prec > 0LL) {
		_39814_dst.push('.');
		jule::Int _41417_i = 1LL;
		jule::Int _41513_m = _23d12cd35_min(_39838_d._field_nd,static_cast<jule::Int>(_39855_prec + 1LL));
		if (_41417_i < _41513_m) {
			_39814_dst=jule::append(_39814_dst,_39838_d._field_d.slice(_41417_i,_41513_m));
			_41417_i=_41513_m;
		}
		for (; _41417_i <= _39855_prec; (_41417_i)++) {
			{
				_39814_dst.push('0');
			}
		_iter_next_5544169136:;
		}
		_iter_end_5544169136:;
	}
	_39814_dst.push(_39866_fmt);
	jule::Int _42713_exp = _39838_d._field_dp - 1LL;
	if (_39838_d._field_nd == 0LL) {
		_42713_exp=0LL;
	}
	if (_42713_exp < 0LL) {
		_40513_ch='-';
		_42713_exp=static_cast<jule::Int>((-(_42713_exp)));
	} else {
		_40513_ch='+';
	}
	_39814_dst.push(_40513_ch);
	{
		if (_42713_exp < 10LL) {
			_case_begin_5544176928:;
			{
				_39814_dst.push('0');_39814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(_42713_exp) + '0'));
			}
		}
		else if (_42713_exp < 100LL) {
			_case_begin_5544177056:;
			{
				_39814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_42713_exp,10LL)) + '0'));_39814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_42713_exp,10LL)) + '0'));
			}
		}
		else {
			_case_begin_5544175408:;
			{
				_39814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_42713_exp,100LL)) + '0'));_39814_dst.push(static_cast<jule::U8>(jule::unsafe_mod(static_cast<jule::U8>(jule::unsafe_div(_42713_exp,10LL)),10LL) + '0'));_39814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_42713_exp,10LL)) + '0'));
			}
		}
		_match_end_5544175328:;
	}
	return _39814_dst;
}



inline jule::Slice<jule::U8> _23d12cd35_fmt_f(jule::Slice<jule::U8> _45314_dst,jule::Bool _45327_neg,_23d12cd35_DecimalSlice _45338_d,jule::Int _45355_prec) {
	if (_45327_neg) {
		_45314_dst.push('-');
	}
	if (_45338_d._field_dp > 0LL) {
		jule::Int _46117_m = _23d12cd35_min(_45338_d._field_nd,_45338_d._field_dp);
		_45314_dst=jule::append(_45314_dst,_45338_d._field_d.slice(0LL,_46117_m));
		for (; _46117_m < _45338_d._field_dp; (_46117_m)++) {
			{
				_45314_dst.push('0');
			}
		_iter_next_5544189648:;
		}
		_iter_end_5544189648:;
	} else {
		_45314_dst.push('0');
	}
	if (_45355_prec > 0LL) {
		_45314_dst.push('.');
		jule::Int _47217_i = 0LL;
		for (; _47217_i < _45355_prec; (_47217_i)++) {
			{
				jule::U8 _47421_ch = static_cast<jule::U8>(48LLU);
				jule::Int _47517_j = _45338_d._field_dp + _47217_i;
				if ((0LL <= _47517_j) && (_47517_j < _45338_d._field_nd)) {
					_47421_ch=_45338_d._field_d[_47517_j];
				}
				_45314_dst.push(_47421_ch);
			}
		_iter_next_5544192032:;
		}
		_iter_end_5544192032:;
	}
	return _45314_dst;
}



inline jule::Slice<jule::U8> _23d12cd35_fmt_b(jule::Slice<jule::U8> _48614_dst,jule::Bool _48627_neg,jule::U64 _48638_mant,jule::Int _48653_exp,_23d12cd35_FloatInfo& _48664_flt) {
	if (_48627_neg) {
		_48614_dst.push('-');
	}
	std::tie(_48614_dst,std::ignore) = _23e028108_fmt_bits(_48614_dst,_48638_mant,10LL,false,true);
	_48614_dst.push('p');
	_48653_exp-=static_cast<jule::Int>(_48664_flt._field_mantbits);
	if (_48653_exp >= 0LL) {
		_48614_dst.push('+');
	}
	std::tie(_48614_dst,std::ignore) = _23e028108_fmt_bits(_48614_dst,static_cast<jule::U64>(_48653_exp),10LL,_48653_exp < 0LL,true);
	return _48614_dst;
}



inline jule::Slice<jule::U8> _23d12cd35_fmt_x(jule::Slice<jule::U8> _50814_dst,jule::Int _50827_prec,jule::U8 _50838_fmt,jule::Bool _50849_neg,jule::U64 _50913_mant,jule::Int _50928_exp,_23d12cd35_FloatInfo& _50939_flt) {
	if (_50913_mant == 0LL) {
		_50928_exp=0LL;
	}
	_50913_mant<<=static_cast<jule::Uint>(60LL - _50939_flt._field_mantbits);
	while ((_50913_mant != 0LL) && ((_50913_mant & 1152921504606846976LLU) == 0LL)) {
		{
			_50913_mant<<=1LL;
			(_50928_exp)--;
		}
	_iter_next_5544208112:;
	}
	_iter_end_5544208112:;
	if ((_50827_prec >= 0LL) && (_50827_prec < 15LL)) {
		jule::Uint _52313_shift = static_cast<jule::Uint>(_50827_prec * 4LL);
		jule::U64 _52413_extra = (_50913_mant << _52313_shift) & 1152921504606846975LLU;
		_50913_mant>>=static_cast<jule::Uint>(60LL - _52313_shift);
		if ((_52413_extra | (_50913_mant & 1LL)) > 576460752303423488LLU) {
			(_50913_mant)++;
		}
		_50913_mant<<=static_cast<jule::Uint>(60LL - _52313_shift);
		if ((_50913_mant & 2305843009213693952LLU) != 0LL) {
			_50913_mant>>=1LL;
			(_50928_exp)++;
		}
	}
	jule::Str _53713_hex = jule::Str("0123456789abcdef", 16);
	if (_50838_fmt == 'X') {
		_53713_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_50849_neg) {
		_50814_dst.push('-');
	}
	_50814_dst.push('0');_50814_dst.push(_50838_fmt);_50814_dst.push(static_cast<jule::U8>('0' + static_cast<jule::U8>((_50913_mant >> 60LL) & 1LL)));
	_50913_mant<<=4LL;
	if ((_50827_prec < 0LL) && (_50913_mant != 0LL)) {
		_50814_dst.push('.');
		while (_50913_mant != 0LL) {
			{
				_50814_dst.push(_53713_hex[static_cast<jule::Int>((_50913_mant >> 60LL) & 15LL)]);
				_50913_mant<<=4LL;
			}
		_iter_next_5544220064:;
		}
		_iter_end_5544220064:;
	} else if (_50827_prec > 0LL) {
		_50814_dst.push('.');
		jule::Int _55817_i = 0LL;
		for (; _55817_i < _50827_prec; (_55817_i)++) {
			{
				_50814_dst.push(_53713_hex[static_cast<jule::Int>((_50913_mant >> 60LL) & 15LL)]);
				_50913_mant<<=4LL;
			}
		_iter_next_5544221024:;
		}
		_iter_end_5544221024:;
	}
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);
	if (_50838_fmt == _23d01eb8e_lower(_50838_fmt)) {
		_56613_ch='p';
	}
	_50814_dst.push(_56613_ch);
	if (_50928_exp < 0LL) {
		_56613_ch='-';
		_50928_exp=static_cast<jule::Int>((-(_50928_exp)));
	} else {
		_56613_ch='+';
	}
	_50814_dst.push(_56613_ch);
	{
		if (_50928_exp < 100LL) {
			_case_begin_5544217104:;
			{
				_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_50928_exp,10LL)) + '0'));_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_50928_exp,10LL)) + '0'));
			}
		}
		else if (_50928_exp < 1000LL) {
			_case_begin_5544230480:;
			{
				_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_50928_exp,100LL)) + '0'));_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(jule::unsafe_div(_50928_exp,10LL),10LL)) + '0'));_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_50928_exp,10LL)) + '0'));
			}
		}
		else {
			_case_begin_5544217008:;
			{
				_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_div(_50928_exp,1000LL)) + '0'));_50814_dst.push(static_cast<jule::U8>(jule::unsafe_mod(static_cast<jule::U8>(jule::unsafe_div(_50928_exp,100LL)),10LL) + '0'));_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(jule::unsafe_div(_50928_exp,10LL),10LL)) + '0'));_50814_dst.push(static_cast<jule::U8>(static_cast<jule::U8>(jule::unsafe_mod(_50928_exp,10LL)) + '0'));
			}
		}
		_match_end_5544229760:;
	}
	return _50814_dst;
}



inline jule::Int _23d12cd35_min(jule::Int _5918_a,jule::Int _59116_b) {
	if (_5918_a < _59116_b) {
		return _5918_a;
	}
	return _59116_b;
}



inline jule::Int _23d12cd35_max(jule::Int _5988_a,jule::Int _59816_b) {
	if (_5988_a > _59816_b) {
		return _5988_a;
	}
	return _59816_b;
}



inline jule::U8 _23d01eb8e_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



inline std::tuple<jule::U64,jule::Int> _23d01eb8e_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str()) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if ((2LL <= _5435_base) && (_5435_base <= 36LL)) {
			_case_begin_5544248192:;
		}
		else if (_5435_base == 0LL) {
			_case_begin_5544247280:;
			{
				_5435_base=10LL;
				if (_5423_s[0LL] == '0') {
					{
						if ((_5423_s.len() >= 3LL) && (_23d01eb8e_lower(_5423_s[1LL]) == 'b')) {
							_case_begin_5544252080:;
							{
								_5435_base=2LL;
								_5423_s=_5423_s.slice(2LL);
							}
						}
						else if ((_5423_s.len() >= 3LL) && (_23d01eb8e_lower(_5423_s[1LL]) == 'o')) {
							_case_begin_5544252272:;
							{
								_5435_base=8LL;
								_5423_s=_5423_s.slice(2LL);
							}
						}
						else if ((_5423_s.len() >= 3LL) && (_23d01eb8e_lower(_5423_s[1LL]) == 'x')) {
							_case_begin_5544251584:;
							{
								_5435_base=16LL;
								_5423_s=_5423_s.slice(2LL);
							}
						}
						else {
							_case_begin_5544251280:;
							{
								_5435_base=8LL;
								_5423_s=_5423_s.slice(1LL);
							}
						}
						_match_end_5544251104:;
					}
				}
			}
		}
		else {
			_case_begin_5544245088:;
			{
				return std::make_tuple(0LL,3LLU);
			}
		}
		_match_end_5544245680:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LLU;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto &_match_expr{ _5435_base };
		if (_match_expr == 10LL) {
			_case_begin_5544263312:;
			{
				_9313_cutoff=1844674407370955264LL;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_5544262112:;
			{
				_9313_cutoff=1152921504606846976LL;
			}
		}
		else {
			_case_begin_5544250560:;
			{
				_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
			}
		}
		_match_end_5544262016:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto &_match_expr{ _5450_bit_size };
		if (_match_expr == 32LL) {
			_case_begin_5544250448:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_5544266352:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_5544266272:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto &expr = _5423_s;
		auto it = expr.begin();
		_iter_begin_5544267536:;
		if (it != expr.end()) {
			jule::U8 &_23d01eb8e_c = *it;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (('0' <= _23d01eb8e_c) && (_23d01eb8e_c <= '9')) {
						_case_begin_5544273648:;
						{
							_11417_d=static_cast<jule::U8>(_23d01eb8e_c - '0');
						}
					}
					else if (('a' <= _23d01eb8e_lower(_23d01eb8e_c)) && (_23d01eb8e_lower(_23d01eb8e_c) <= 'z')) {
						_case_begin_5544272736:;
						{
							_11417_d=static_cast<jule::U8>((_23d01eb8e_lower(_23d01eb8e_c) - 'a') + 10LL);
						}
					}
					else {
						_case_begin_5544271728:;
						{
							return std::make_tuple(0LL,2LLU);
						}
					}
					_match_end_5544271616:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_5544267536:;
			++it;
			goto _iter_begin_5544267536;
		}
		_iter_end_5544267536:;
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _23d01eb8e_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::I64 _16562_i = jule::I64();
	jule::Int _16570_err = 0LLU;
	if (_16522_s == jule::Str()) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _23d01eb8e_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LLU;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _23dd51c56_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_23e0ae58a_f64_from_bits(9223372036854775808LLU));
		}
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _23e648b02_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _23e648b02_mul64(_4123_man,_23dd51c56_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL].__at(1LL));
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _23e648b02_mul64(_4123_man,_23dd51c56_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL].__at(0LL));
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_23e0ae58a_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _23dd51c56_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_23e0ae58a_f32_from_bits(2147483648LLU));
		}
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _23e648b02_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _23e648b02_mul64(_11023_man,_23dd51c56_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL].__at(1LL));
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _23e648b02_mul64(_11023_man,_23dd51c56_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL].__at(0LL));
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_23e0ae58a_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _23d225b97_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+=32LL;
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_5544369216:;
	}
	_iter_end_5544369216:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _23d225b97_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[0LL] };
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_5544380928:;
			{
				if (_6816_s[0LL] == '-') {
					_7213_sign=-1LL;
				}
				_7313_nsign=1LL;
				_6816_s=_6816_s.slice(1LL);
				goto _case_begin_5544381024;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_5544381024:;
			{
				jule::Int _8317_case_n = _23d225b97_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
				if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
					_8317_case_n=3LL;
				}
				if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
					_6826_f = static_cast<jule::F64>(_23e148602_inf(_7213_sign));
					_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_5544381120:;
			{
				if (_23d225b97_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
					_6826_f = static_cast<jule::F64>(_23e148602_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		_match_end_5544380848:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _23d225b97_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (_10315_s[_10449_i] == '+') {
			_case_begin_5544398656:;
			{
				(_10449_i)++;
			}
		}
		else if (_10315_s[_10449_i] == '-') {
			_case_begin_5544398768:;
			{
				_10350_neg=true;
				(_10449_i)++;
			}
		}
		_match_end_5544398512:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[_10449_i] == '0')) && (_23d01eb8e_lower(_10315_s[_10449_i + 1LL]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	for (; _10449_i < _10315_s.len(); (_10449_i)++) {
		{
			jule::U8 _13413_c = _10315_s[_10449_i];
			{
				if (_13413_c == '.') {
					_case_begin_5544414912:;
					{
						if (_12813_sawdot) {
							goto _julec_label_loop_end;
						}
						_12813_sawdot=true;
						_13213_dp=_13013_nd;
						goto _iter_next_5544397728;
					}
				}
				else if (('0' <= _13413_c) && (_13413_c <= '9')) {
					_case_begin_5544415008:;
					{
						_12913_sawdigits=true;
						if ((_13413_c == '0') && (_13013_nd == 0LL)) {
							(_13213_dp)--;
							goto _iter_next_5544397728;
						}
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=_11813_base;
							_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
							(_13113_nd_mant)++;
						} else if (_13413_c != '0') {
							_10425_trunc=true;
						}
						goto _iter_next_5544397728;
					}
				}
				else if (((_11813_base == 16LL) && ('a' <= _23d01eb8e_lower(_13413_c))) && (_23d01eb8e_lower(_13413_c) <= 'f')) {
					_case_begin_5544415104:;
					{
						_12913_sawdigits=true;
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=16LL;
							_10325_mantissa+=static_cast<jule::U64>((_23d01eb8e_lower(_13413_c) - 'a') + 10LL);
							(_13113_nd_mant)++;
						} else {
							_10425_trunc=true;
						}
						goto _iter_next_5544397728;
					}
				}
				_match_end_5544414832:;
			}
			goto _iter_end_5544397728;
		}
	_iter_next_5544397728:;
	}
	_iter_end_5544397728:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_23d01eb8e_lower(_10315_s[_10449_i]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[_10449_i] == '+') {
			(_10449_i)++;
		} else if (_10315_s[_10449_i] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[_10449_i] < '0')) || (_10315_s[_10449_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		for (; (_10449_i < _10315_s.len()) && (('0' <= _10315_s[_10449_i]) && (_10315_s[_10449_i] <= '9')); (_10449_i)++) {
			{
				if (_20517_e < 10000LL) {
					_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[_10449_i])) - '0');
				}
			}
		_iter_next_5544432960:;
		}
		_iter_end_5544432960:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _23d225b97_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::F64 _47258_f = jule::F64();
	jule::Bool _47266_ok = jule::Bool();
	if ((_47216_mantissa >> _23d12cd35_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (_47235_exp == 0LL) {
			_case_begin_5544462208:;
			{
				_47266_ok = true;
				return std::make_tuple(_47258_f,_47266_ok);
			}
		}
		else if ((_47235_exp > 0LL) && (_47235_exp <= 37LL)) {
			_case_begin_5544462304:;
			{
				if (_47235_exp > 22LL) {
					_47258_f*=_23d225b97_F64_POW10[_47235_exp - 22LL];
					_47235_exp=22LL;
				}
				if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
					return std::make_tuple(_47258_f,_47266_ok);
				}
				_47258_f = static_cast<jule::F64>(_47258_f * _23d225b97_F64_POW10[_47235_exp]);
				_47266_ok = true;
				return std::make_tuple(_47258_f,_47266_ok);
			}
		}
		else if ((_47235_exp < 0LL) && (_47235_exp >= -22LL)) {
			_case_begin_5544462400:;
			{
				_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_23d225b97_F64_POW10[(-(_47235_exp))]));
				_47266_ok = true;
				return std::make_tuple(_47258_f,_47266_ok);
			}
		}
		_match_end_5544460768:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _23d225b97_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::F32 _50662_f = jule::F32();
	jule::Bool _50670_ok = jule::Bool();
	if ((_50616_mantissa >> _23d12cd35_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (_50635_exp == 0LL) {
			_case_begin_5544475776:;
			{
				_50670_ok = true;
				return std::make_tuple(_50662_f,_50670_ok);
			}
		}
		else if ((_50635_exp > 0LL) && (_50635_exp <= 17LL)) {
			_case_begin_5544475872:;
			{
				if (_50635_exp > 10LL) {
					_50662_f*=_23d225b97_F32_POW10[_50635_exp - 10LL];
					_50635_exp=10LL;
				}
				if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
					return std::make_tuple(_50662_f,_50670_ok);
				}
				_50662_f = static_cast<jule::F32>(_50662_f * _23d225b97_F32_POW10[_50635_exp]);
				_50670_ok = true;
				return std::make_tuple(_50662_f,_50670_ok);
			}
		}
		else if ((_50635_exp < 0LL) && (_50635_exp >= -10LL)) {
			_case_begin_5544475968:;
			{
				_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_23d225b97_F32_POW10[(-(_50635_exp))]));
				_50670_ok = true;
				return std::make_tuple(_50662_f,_50670_ok);
			}
		}
		_match_end_5544474368:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _23d225b97_atof_hex(jule::Str _54213_s,_23d12cd35_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	while ((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL)) {
		{
			_54242_mantissa<<=1LL;
			(_54261_exp)--;
		}
	_iter_next_5544488640:;
	}
	_iter_end_5544488640:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	while ((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_5544492336:;
	}
	_iter_end_5544492336:;
	while ((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL))) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_5544493296:;
	}
	_iter_end_5544493296:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _23d12cd35_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_23e0ae58a_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_23e0ae58a_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _23d225b97_atof32(jule::Str _60711_s) {
	jule::F32 _60721_f = jule::F32();
	jule::Int _60729_n = jule::Int();
	jule::Int _60737_err = 0LLU;
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _23d225b97_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60729_n = _60919__n;
			_60737_err = 0LLU;
			return std::make_tuple(_60721_f,_60729_n,_60737_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _23d225b97_read_float(_60711_s);
	_60729_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60737_err) = _23d225b97_atof_hex(_60711_s.slice(0LL,_60729_n),_23d12cd35_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _23d225b97_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _23dd51c56_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _23dd51c56_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
	}
	_23e026524_Decimal _65313_d = _23e026524_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,_60729_n))))) {
		_60721_f = 0LL;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_23d12cd35_F32_INFO);
	_60721_f=static_cast<jule::F32>(_23e0ae58a_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60737_err=1LLU;
	}
	return std::make_tuple(_60721_f,_60729_n,_60737_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _23d225b97_atof64(jule::Str _66511_s) {
	jule::F64 _66521_f = jule::F64();
	jule::Int _66529_n = jule::Int();
	jule::Int _66537_err = 0LLU;
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _23d225b97_special(_66511_s);
		if (_66723_ok) {
			_66521_f = _66714_val;
			_66529_n = _66719__n;
			_66537_err = 0LLU;
			return std::make_tuple(_66521_f,_66529_n,_66537_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _23d225b97_read_float(_66511_s);
	_66529_n=_67342__n;
	if ((!(_67350_ok))) {
		_66521_f = 0LL;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (_67337_hex) {
		std::tie(_66521_f,_66537_err) = _23d225b97_atof_hex(_66511_s.slice(0LL,_66529_n),_23d12cd35_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66521_f,_67350_ok) = _23d225b97_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
		std::tie(_66521_f,_67350_ok) = _23dd51c56_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _23dd51c56_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66521_f == _70121_f_up)) {
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
	}
	_23e026524_Decimal _71013_d = _23e026524_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,_66529_n))))) {
		_66521_f = 0LL;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_23d12cd35_F64_INFO);
	_66521_f=static_cast<jule::F64>(_23e0ae58a_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66537_err=1LLU;
	}
	return std::make_tuple(_66521_f,_66529_n,_66537_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _23d225b97_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _23d225b97_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _23d225b97_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



inline std::tuple<jule::F64,jule::Int> _23d225b97_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _23d225b97_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



inline void _23de8c457_ryu_ftoa_fixed32(_23d12cd35_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:51:9"));;
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:54:9"));;
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _23e648b02_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_23de8c457_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _23de8c457_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:83:9"));;
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _23de8c457_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_23de8c457_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _23de8c457_ryu_ftoa_fixed64(_23d12cd35_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:125:9"));;
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _23e648b02_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_23de8c457_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _23de8c457_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:157:9"));;
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _23de8c457_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_23de8c457_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _23de8c457_format_decimal(_23d12cd35_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _23de8c457_U64_POW10[_20490_prec];
	jule::Int _20613_trimmed = 0LL;
	while (_20445_m >= _2059_max) {
		{
			jule::U64 _20814_a = jule::unsafe_div(_20445_m,10LL);
			jule::U64 _20817_b = jule::unsafe_mod(_20445_m,10LL);
			std::tie(_20814_a,_20817_b) = std::make_tuple(jule::unsafe_div(_20445_m,10LL),jule::unsafe_mod(_20445_m,10LL));
			_20445_m=_20814_a;
			(_20613_trimmed)++;
			if (_20817_b > 5LL) {
				_20474_round_up=true;
			} else if (_20817_b < 5LL) {
				_20474_round_up=false;
			} else {
				_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
			}
			if (_20817_b != 0LL) {
				_20457_trunc=true;
			}
		}
	_iter_next_5544644656:;
	}
	_iter_end_5544644656:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = jule::unsafe_div(_20445_m,10LL);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	while (_23513_v >= 100LL) {
		{
			jule::U64 _23717_v1 = 0LLU;
			jule::U64 _23817_v2 = 0LLU;
			if ((_23513_v >> 32LL) == 0LL) {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::unsafe_div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::unsafe_mod(static_cast<jule::U32>(_23513_v),100LL)));
			} else {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::unsafe_div(_23513_v,100LL)),static_cast<jule::U64>(jule::unsafe_mod(_23513_v,100LL)));
			}
			_23313_n-=2LL;
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
			_23513_v=_23717_v1;
		}
	_iter_next_5544645424:;
	}
	_iter_end_5544645424:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	while (_20424_d._field_d[_20424_d._field_nd - 1LL] == '0') {
		{
			(_20424_d._field_nd)--;
			(_20613_trimmed)++;
		}
	_iter_next_5544668544:;
	}
	_iter_end_5544668544:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



inline void _23de8c457_ryu_ftoa_shortest(_23d12cd35_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_23d12cd35_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_23e648b02_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_23de8c457_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _23de8c457_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_23de8c457_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _23de8c457_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _23d12cd35_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _23de8c457_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _23de8c457_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _23de8c457_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _23de8c457_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _23de8c457_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _23de8c457_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:307:9"));;
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_23de8c457_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_23de8c457_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_23de8c457_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_23de8c457_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _23de8c457_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _23de8c457_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _23de8c457_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_23d12cd35_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _23de8c457_ryu_digits(_23d12cd35_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _23de8c457_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _23de8c457_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _23de8c457_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_23de8c457_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_23de8c457_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		while (_43517_v > 0LL) {
			{
				jule::U32 _43718_v1 = jule::unsafe_div(_43517_v,10LL);
				jule::U32 _43722_v2 = jule::unsafe_mod(_43517_v,10LL);
				std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::unsafe_div(_43517_v,10LL),jule::unsafe_mod(_43517_v,10LL));
				_43517_v=_43718_v1;
				(_43417_n)--;
				_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
			}
		_iter_next_5544746832:;
		}
		_iter_end_5544746832:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_23de8c457_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[_41520_d._field_nd - 1LL] == '0')) {
		{
			(_41520_d._field_nd)--;
		}
	_iter_next_5544757392:;
	}
	_iter_end_5544757392:;
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0')) {
		{
			(_41520_d._field_nd)--;
			(_41520_d._field_dp)--;
			_41520_d._field_d=_41520_d._field_d.slice(1LL);
		}
	_iter_next_5544752288:;
	}
	_iter_end_5544752288:;
}



inline void _23de8c457_ryu_digits32(_23d12cd35_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	while (_46121_upper > 0LL) {
		{
			jule::U32 _47613_l = jule::unsafe_div(_46043_lower + 9LL,10LL);
			jule::U32 _47718_c = jule::unsafe_div(_46059_central,10LL);
			jule::U32 _47725_cdigit = jule::unsafe_mod(_46059_central,10LL);
			std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::unsafe_div(_46059_central,10LL),jule::unsafe_mod(_46059_central,10LL));
			jule::U32 _47813_u = jule::unsafe_div(_46121_upper,10LL);
			if (_47613_l > _47813_u) {
				goto _iter_end_5544767024;
			}
			if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
				(_47718_c)++;
				_47725_cdigit=0LL;
				_46151_cup=false;
			}
			(_46613_trimmed)++;
			_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
			_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
			std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
		}
	_iter_next_5544767024:;
	}
	_iter_end_5544767024:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	while (_51813_n > _46022_d._field_nd) {
		{
			jule::U32 _52014_v1 = jule::unsafe_div(_51713_v,100LL);
			jule::U32 _52018_v2 = jule::unsafe_mod(_51713_v,100LL);
			std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::unsafe_div(_51713_v,100LL),jule::unsafe_mod(_51713_v,100LL));
			_46022_d._field_d[_51813_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
			_46022_d._field_d[_51813_n - 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
			_51813_n-=2LL;
			_51713_v=_52014_v1;
		}
	_iter_next_5544779200:;
	}
	_iter_end_5544779200:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[_51813_n]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _23de8c457_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:549:9"));;
	}
	jule::U64 _55113_pow = _23dd51c56_DETAILED_POWS_OF_TEN[_54241_q - -348LL].__at(1LL);
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _23e648b02_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_23de8c457_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _23de8c457_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/ftoaryu.jule:577:9"));;
	}
	jule::Array<jule::U64,2> _57913_pow = _23dd51c56_DETAILED_POWS_OF_TEN[_57042_q - -348LL];
	if (_57042_q < 0LL) {
		_57913_pow.__at(0LL)+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_23de8c457_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _23e648b02_mul64(_57021_m,_57913_pow.__at(0LL));
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _23e648b02_mul64(_57021_m,_57913_pow.__at(1LL));
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _23e648b02_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _23de8c457_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	for (; _59813_i < _59434_k; (_59813_i)++) {
		{
			if (jule::unsafe_mod(_59426_m,5LL) != 0LL) {
				return false;
			}
			_59426_m = jule::unsafe_div(_59426_m,5LL);
		}
	_iter_next_5544824384:;
	}
	_iter_end_5544824384:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _23de8c457_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::unsafe_div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::unsafe_mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _23e648b02_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



inline void _23e026524_trim(_23e026524_Decimal& _27514_a) {
	while ((_27514_a._field_nd > 0LL) && (_27514_a._field_d[_27514_a._field_nd - 1LL] == '0')) {
		{
			(_27514_a._field_nd)--;
		}
	_iter_next_5544833728:;
	}
	_iter_end_5544833728:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _23e026524_right_shift(_23e026524_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	for (; (_29013_n >> _28533_k) == 0LL; (_28613_r)++) {
		{
			if (_28613_r >= _28521_a._field_nd) {
				if (_29013_n == 0LL) {
					_28521_a._field_nd=0LL;
					return;
				}
				while ((_29013_n >> _28533_k) == 0LL) {
					{
						_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
						(_28613_r)++;
					}
				_iter_next_5544844128:;
				}
				_iter_end_5544844128:;
				goto _iter_end_5544838976;
			}
			jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
		}
	_iter_next_5544838976:;
	}
	_iter_end_5544838976:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	for (; _28613_r < _28521_a._field_nd; (_28613_r)++) {
		{
			jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			jule::Uint _31413_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_31413_dig + '0');
			(_28713_w)++;
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
		}
	_iter_next_5544848480:;
	}
	_iter_end_5544848480:;
	while (_29013_n > 0LL) {
		{
			jule::Uint _32313_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			if (_28713_w < 800LL) {
				_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_32313_dig + '0');
				(_28713_w)++;
			} else if (_32313_dig > 0LL) {
				_28521_a._field_trunc=true;
			}
			_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
		}
	_iter_next_5544852160:;
	}
	_iter_end_5544852160:;
	_28521_a._field_nd=_28713_w;
	_23e026524_trim(_28521_a);
}



inline jule::Bool _23e026524_prefix_is_less_than(jule::Array<jule::U8,800> _33924_b,jule::Int _33938_end,jule::Str _33948_s) {
	jule::Int _34013_i = 0LL;
	for (; _34013_i < _33948_s.len(); (_34013_i)++) {
		{
			if (_34013_i >= _33938_end) {
				return true;
			}
			if (_33924_b[_34013_i] != _33948_s[_34013_i]) {
				return _33924_b[_34013_i] < _33948_s[_34013_i];
			}
		}
	_iter_next_5544859600:;
	}
	_iter_end_5544859600:;
	return false;
}



inline void _23e026524_left_shift(_23e026524_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _23e026524_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_23e026524_prefix_is_less_than(_35320_a._field_d,_35320_a._field_nd,_23e026524_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	for (; _35913_r >= 0LL; (_35913_r)--) {
		{
			_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[_35913_r]) - '0') << _35332_k);
			jule::Uint _36713_quo = jule::unsafe_div(_36313_n,10LL);
			jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_36813_rem + '0');
			} else if (_36813_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_36713_quo;
		}
	_iter_next_5544887072:;
	}
	_iter_end_5544887072:;
	while (_36313_n > 0LL) {
		{
			jule::Uint _38013_quo = jule::unsafe_div(_36313_n,10LL);
			jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_38113_rem + '0');
			} else if (_38113_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_38013_quo;
		}
	_iter_next_5544891104:;
	}
	_iter_end_5544891104:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_23e026524_trim(_35320_a);
}



inline jule::Bool _23e026524_should_round_up(_23e026524_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[_40033_nd] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::unsafe_mod(_40021_a._field_d[_40033_nd - 1LL] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[_40033_nd] >= '5';
}



inline jule::Str _23e028108_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _23e028108_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _23e028108_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _23e028108_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _23e028108_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _23e028108_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _23e028108_itoa(jule::Int _8213_i) {
	return _23e028108_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _23e028108_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,_8510_i + 1LL);
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8510_i * 2LL,(_8510_i * 2LL) + 2LL);
}



inline jule::Bool _23e028108_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _23e028108_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	jule::Str _9992_s = jule::Str();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: /Users/mertcandav/Desktop/dev/jule/std/conv/itoa.jule:101:9"));;
	}
	jule::Slice<jule::U8> _10513_a = jule::Slice<jule::U8>::alloc(65LL);
	jule::I64 _10613_i = _10513_a.len();
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			while (_9934_u >= 1000000000LL) {
				{
					jule::U64 _12521_q = jule::unsafe_div(_9934_u,1000000000LL);
					jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
					jule::Int _12725_j = 4LL;
					for (; _12725_j > 0LL; (_12725_j)--) {
						{
							jule::Uint _12925_is = jule::unsafe_mod(_12625_us,100LL) * 2LL;
							_12625_us = jule::unsafe_div(_12625_us,100LL);
							_10613_i-=2LL;
							_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
							_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
						}
					_iter_next_5544930640:;
					}
					_iter_end_5544930640:;
					(_10613_i)--;
					_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
					_9934_u=_12521_q;
				}
			_iter_next_5544929136:;
			}
			_iter_end_5544929136:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		while (_14717_us >= 100LL) {
			{
				jule::Uint _14917_is = jule::unsafe_mod(_14717_us,100LL) * 2LL;
				_14717_us = jule::unsafe_div(_14717_us,100LL);
				_10613_i-=2LL;
				_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
				_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
			}
		_iter_next_5544933136:;
		}
		_iter_end_5544933136:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_23e028108_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_23e648b02_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		while (_9934_u >= _17313_b) {
			{
				(_10613_i)--;
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
				_9934_u>>=_17213_shift;
			}
		_iter_next_5544952592:;
		}
		_iter_end_5544952592:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		while (_9934_u >= _18513_b) {
			{
				(_10613_i)--;
				jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
				_9934_u=_19117_q;
			}
		_iter_next_5544954896:;
		}
		_iter_end_5544954896:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[_10613_i]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(_10613_i));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(_10613_i));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _23d01979e_push_opt_level(jule::Int _3023_level) {
	_23d01979e_OPT_COPY=_3023_level >= 1LLU;
	_23d01979e_OPT_DEADCODE=_3023_level >= 1LLU;
	_23d01979e_OPT_APPEND=_3023_level >= 1LLU;
	_23d01979e_OPT_MATH=_3023_level >= 1LLU;
	_23d01979e_OPT_ACCESS=_3023_level >= 1LLU;
	_23d01979e_OPT_INLINE=_3023_level >= 1LLU;
	_23d01979e_OPT_PTR=_3023_level >= 1LLU;
}



inline jule::Bool _23e995ec6_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LL) {
		return (_23e9aa1e9__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LL) != 0LL;
	}
	return _224dacb88_is_excluding_latin(_23e9aa1e9_LETTER,_7618_r);
}



inline jule::Bool _224dacb88_is16(jule::Slice<_224dacb88_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LL)) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_5549128048:;
			if (it != expr.end()) {
				jule::Int _224dacb88_i = it - expr.begin();
				{
					_224dacb88_Range16* _19417_range = (&(_1919_ranges.__at(_224dacb88_i)));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LL) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_5549128048:;
				++it;
				_224dacb88_i++;
				goto _iter_begin_5549128048;
			}
			_iter_end_5549128048:;
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::Int _21113_m = _20813_lo + jule::unsafe_div(_20913_hi - _20813_lo,2LL);
			_224dacb88_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LL) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LL);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
				}
			}
		}
	_iter_next_5549119520:;
	}
	_iter_end_5549119520:;
	return false;
}



inline jule::Bool _224dacb88_is32(jule::Slice<_224dacb88_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_5549138736:;
			if (it != expr.end()) {
				jule::Int _224dacb88_i = it - expr.begin();
				{
					_224dacb88_Range32* _23117_range = (&(_2289_ranges.__at(_224dacb88_i)));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LL) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_5549138736:;
				++it;
				_224dacb88_i++;
				goto _iter_begin_5549138736;
			}
			_iter_end_5549138736:;
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::Int _24813_m = _24513_lo + jule::unsafe_div(_24613_hi - _24513_lo,2LL);
			_224dacb88_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LL) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LL);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
				}
			}
		}
	_iter_next_5549142752:;
	}
	_iter_end_5549142752:;
	return false;
}



inline jule::Bool _224dacb88_is_excluding_latin(jule::Ptr<_224dacb88_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_224dacb88_Range16> &_28014_r16 = _27823_range_tab->_field_r16;
		jule::Int _28213_off = _27823_range_tab->_field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[_28014_r16.len() - 1LL]._field_hi))) {
			return _224dacb88_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(_27847_r));
		}
	}
	jule::Slice<_224dacb88_Range32> &_28710_r32 = _27823_range_tab->_field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo))) {
		return _224dacb88_is32(_28710_r32,static_cast<jule::U32>(_27847_r));
	}
	return false;
}



inline std::tuple<jule::I32,jule::Int> _23e9950d5_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _23e9950d5_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_23e9950d5_accept_range _1969_accept = _23e9950d5_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline jule::Slice<jule::U8> _23e9950d5_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (_39835_r <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _23e9950d5_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _23e9950d5_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (_4079_i <= 2047LLU) {
			_case_begin_5549383776:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
			}
		}
		else if (_4079_i > 1114111LL || (55296LL <= _4079_i) && (_4079_i <= 57343LL)) {
			_case_begin_5549384000:;
			{
				_40545_r=65533LL;
				goto _case_begin_5549384096;
			}
		}
		else if (_4079_i <= 65535LLU) {
			_case_begin_5549384096:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
			}
		}
		else {
			_case_begin_5549377952:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
			}
		}
		_match_end_5549377840:;
	}
}



inline jule::Int _224977555_get_last_fs_error(void) {
	jule::Int _729_err = _23d108294_get_last_errno();
	{
		auto &_match_expr{ _729_err };
		if (_match_expr == 13LL) {
			_case_begin_5549507744:;
			{
				return 0LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_5549507840:;
			{
				return 1LLU;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_5549507376:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_5549507472:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_5549507568:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_5549507952:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_5549508048:;
			{
				return 6LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_5549508144:;
			{
				return 7LLU;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_5549506864:;
			{
				return 8LLU;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_5549506960:;
			{
				return 9LLU;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_5549507056:;
			{
				return 10LLU;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_5549507152:;
			{
				return 11LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_5549508832:;
			{
				return 12LLU;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_5549508928:;
			{
				return 13LLU;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_5549509040:;
			{
				return 14LLU;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_5549509152:;
			{
				return 15LLU;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_5549509264:;
			{
				return 16LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_5549509376:;
			{
				return 17LLU;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_5549509488:;
			{
				return 18LLU;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_5549509600:;
			{
				return 19LLU;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_5549509712:;
			{
				return 20LLU;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_5549509824:;
			{
				return 21LLU;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_5549509936:;
			{
				return 22LLU;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_5549510048:;
			{
				return 23LLU;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_5549510160:;
			{
				return 24LLU;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_5549510272:;
			{
				return 25LLU;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_5549510384:;
			{
				return 26LLU;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_5549510496:;
			{
				return 27LLU;
			}
		}
		else {
			_case_begin_5549505520:;
			{
				return 1LLU;
			}
		}
		_match_end_5549506288:;
	}
}



inline jule::Bool _23e730c0b_is_unary_op(jule::Str _31420_kind) {
	{
		auto &expr = _23e730c0b_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_5549804624:;
		if (it != expr.end()) {
			jule::Str &_23e730c0b_op = *it;
			{
				if (_31420_kind == _23e730c0b_op) {
					return true;
				}
			}
			_iter_next_5549804624:;
			++it;
			goto _iter_begin_5549804624;
		}
		_iter_end_5549804624:;
	}
	return false;
}



inline jule::Bool _23e730c0b_is_bin_op(jule::Str _32518_kind) {
	{
		auto &expr = _23e730c0b_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_5549807168:;
		if (it != expr.end()) {
			jule::Str &_23e730c0b_op = *it;
			{
				if (_32518_kind == _23e730c0b_op) {
					return true;
				}
			}
			_iter_next_5549807168:;
			++it;
			goto _iter_begin_5549807168;
		}
		_iter_end_5549807168:;
	}
	return false;
}



inline jule::Bool _23e730c0b_is_str(jule::Str _34715_k) {
	return (_34715_k != jule::Str()) && ((_34715_k[0LL] == '\"') || _23e730c0b_is_raw_str(_34715_k));
}



inline jule::Bool _23e730c0b_is_raw_str(jule::Str _34919_k) {
	return (_34919_k != jule::Str()) && (_34919_k[0LL] == '`');
}



inline jule::Bool _23e730c0b_is_rune(jule::Str _35216_k) {
	return (_35216_k != jule::Str()) && (_35216_k[0LL] == '\'');
}



inline jule::Bool _23e730c0b_is_bool(jule::Str _35616_k) {
	return (_35616_k == jule::Str("true", 4)) || (_35616_k == jule::Str("false", 5));
}



inline jule::Bool _23e730c0b_contains_any(jule::Str _35817_s,jule::Str _35825_bytes) {
	{
		auto &expr = _35825_bytes;
		auto it = expr.begin();
		_iter_begin_5549818144:;
		if (it != expr.end()) {
			jule::U8 &_23e730c0b_b = *it;
			{
				jule::Int _36013_i = _35817_s.find(static_cast<jule::Str>(_23e730c0b_b));
				if (_36013_i >= 0LL) {
					return true;
				}
			}
			_iter_next_5549818144:;
			++it;
			goto _iter_begin_5549818144;
		}
		_iter_end_5549818144:;
	}
	return false;
}



inline jule::Bool _23e730c0b_is_float(jule::Str _37017_k) {
	if (_37017_k.has_prefix(jule::Str("0x", 2))) {
		return _23e730c0b_contains_any(_37017_k,jule::Str(".pP", 3));
	}
	return _23e730c0b_contains_any(_37017_k,jule::Str(".eE", 3));
}



inline jule::Bool _23e730c0b_is_num(jule::Str _37915_k) {
	if (_37915_k == jule::Str()) {
		return false;
	}
	jule::U8 _3849_b = _37915_k[0LL];
	return (_3849_b == '.') || (('0' <= _3849_b) && (_3849_b <= '9'));
}



inline jule::Bool _23e730c0b_is_ignore_ident(jule::Str _39424_ident) {
	return _39424_ident == jule::Str("_", 1);
}



inline jule::Bool _23e730c0b_is_anon_ident(jule::Str _39622_ident) {
	return _39622_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _23e730c0b_is_space(jule::I32 _41017_r) {
	{
		auto &expr = _23e730c0b_SPACES;
		auto it = expr.begin();
		_iter_begin_5549830400:;
		if (it != expr.end()) {
			jule::I32 &_23e730c0b_cr = *it;
			{
				if (_41017_r == _23e730c0b_cr) {
					return true;
				}
			}
			_iter_next_5549830400:;
			++it;
			goto _iter_begin_5549830400;
		}
		_iter_end_5549830400:;
	}
	return false;
}



inline jule::Bool _23e730c0b_is_letter(jule::I32 _42118_r) {
	return _23e995ec6_is_letter(_42118_r);
}



inline jule::Bool _23e730c0b_is_decimal(jule::U8 _44319_b) {
	return ('0' <= _44319_b) && (_44319_b <= '9');
}



inline jule::Bool _23e730c0b_is_binary(jule::U8 _44518_b) {
	return (_44518_b == '0') || (_44518_b == '1');
}



inline jule::Bool _23e730c0b_is_octal(jule::U8 _44717_b) {
	return ('0' <= _44717_b) && (_44717_b <= '7');
}



inline jule::Bool _23e730c0b_is_hex(jule::U8 _45015_b) {
	{
		if (('0' <= _45015_b) && (_45015_b <= '9')) {
			_case_begin_5549851072:;
			{
				return true;
			}
		}
		else if (('a' <= _45015_b) && (_45015_b <= 'f')) {
			_case_begin_5549851168:;
			{
				return true;
			}
		}
		else if (('A' <= _45015_b) && (_45015_b <= 'F')) {
			_case_begin_5549849856:;
			{
				return true;
			}
		}
		else {
			_case_begin_5549844512:;
			{
				return false;
			}
		}
		_match_end_5549847792:;
	}
}



inline jule::Bool _23e730c0b_is_assign(jule::Uint _46218_id) {
	return ((((((_46218_id == 2LLU) || (_46218_id == 31LLU)) || (_46218_id == 34LLU)) || (_46218_id == 20LLU)) || (_46218_id == 28LLU)) || (_46218_id == 3LLU)) || (_46218_id == 7LLU);
}



inline jule::Bool _23e730c0b_is_postfix_op(jule::Str _47522_kind) {
	{
		auto &expr = _23e730c0b_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_5549856464:;
		if (it != expr.end()) {
			jule::Str &_23e730c0b_op = *it;
			{
				if (_47522_kind == _23e730c0b_op) {
					return true;
				}
			}
			_iter_next_5549856464:;
			++it;
			goto _iter_begin_5549856464;
		}
		_iter_end_5549856464:;
	}
	return false;
}



inline jule::Bool _23e730c0b_is_assign_op(jule::Str _48621_kind) {
	if (_23e730c0b_is_postfix_op(_48621_kind)) {
		return true;
	}
	{
		auto &expr = _23e730c0b_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_5549858448:;
		if (it != expr.end()) {
			jule::Str &_23e730c0b_op = *it;
			{
				if (_48621_kind == _23e730c0b_op) {
					return true;
				}
			}
			_iter_next_5549858448:;
			++it;
			goto _iter_begin_5549858448;
		}
		_iter_end_5549858448:;
	}
	return false;
}



inline jule::Ptr<_23e4593c4_File> _23e4593c4_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_23e4593c4_File>(new( std::nothrow ) _23e4593c4_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_23e730c0b_Token>()));
}



inline _23ceb0c1d_Log _23e45a13e_make_err(jule::Int _10513_row,jule::Int _10523_col,jule::Ptr<_23e4593c4_File>& _10534_f,jule::Str _10544_fmt,jule::Slice<jule::Any> _10557_args) {
	return _23ceb0c1d_Log(1LLU,_10513_row,_10523_col,_10534_f->_method_path(),_23ceb0c1d_logf(_10544_fmt,_10557_args),jule::Str(),jule::Str());
}



inline jule::Bool _23e45a13e_bytes_has_prefix(jule::Slice<jule::U8>& _11522_bytes,jule::Str _11537_prefix) {
	if (_11522_bytes.len() < _11537_prefix.len()) {
		return false;
	}
	{
		auto &expr = _11537_prefix;
		auto it = expr.begin();
		_iter_begin_5549865872:;
		if (it != expr.end()) {
			jule::Int _23e45a13e_i = it - expr.begin();
			{
				if (_11522_bytes[_23e45a13e_i] != _11537_prefix.__at(_23e45a13e_i)) {
					return false;
				}
			}
			_iter_next_5549865872:;
			++it;
			_23e45a13e_i++;
			goto _iter_begin_5549865872;
		}
		_iter_end_5549865872:;
	}
	return true;
}



inline jule::Str _23e45a13e_float_fmt_e(jule::Slice<jule::U8>& _12717_txt,jule::Int _12734_i) {
	jule::Str _12744_lit = jule::Str();
	(_12734_i)++;
	if (_12734_i >= _12717_txt.len()) {
		return _12744_lit;
	}
	jule::U8 _13313_b = _12717_txt[_12734_i];
	if ((_13313_b == '+') || (_13313_b == '-')) {
		(_12734_i)++;
		if (_12734_i >= _12717_txt.len()) {
			return _12744_lit;
		}
	}
	jule::Int _1419_first = _12734_i;
	for (; _12734_i < _12717_txt.len(); (_12734_i)++) {
		{
			_13313_b=_12717_txt[_12734_i];
			if ((!(_23e730c0b_is_decimal(_13313_b)))) {
				goto _iter_end_5549877184;
			}
		}
	_iter_next_5549877184:;
	}
	_iter_end_5549877184:;
	if (_12734_i == _1419_first) {
		_12744_lit = jule::Str();
		return _12744_lit;
	}
	_12744_lit = static_cast<jule::Str>(_12717_txt.slice(0LL,_12734_i));
	return _12744_lit;
}



inline jule::Str _23e45a13e_float_fmt_p(jule::Slice<jule::U8>& _15517_txt,jule::Int _15530_i) {
	return _23e45a13e_float_fmt_e(_15517_txt,_15530_i);
}



inline jule::Str _23e45a13e_float_fmt_dotnp(jule::Slice<jule::U8>& _15721_txt,jule::Int _15738_i) {
	if (_15721_txt[_15738_i] != '.') {
		return jule::Str();
	}
	(_15738_i)++;
	_julec_label_loop:;
	for (; _15738_i < _15721_txt.len(); (_15738_i)++) {
		{
			jule::U8 _16513_b = _15721_txt[_15738_i];
			{
				if (_23e730c0b_is_decimal(_16513_b)) {
					_case_begin_5549887392:;
					{
						goto _iter_next_5549880784;
					}
				}
				else if (_23e45a13e_is_float_fmt_p(_16513_b,_15738_i)) {
					_case_begin_5549887488:;
					{
						return _23e45a13e_float_fmt_p(_15721_txt,_15738_i);
					}
				}
				else {
					_case_begin_5549887040:;
					{
						goto _iter_end_5549880784;
					}
				}
				_match_end_5549886928:;
			}
		}
	_iter_next_5549880784:;
	}
	_iter_end_5549880784:;
	return jule::Str();
}



inline jule::Str _23e45a13e_float_fmt_dotfp(jule::Slice<jule::U8>& _17521_txt,jule::Int _17538_i) {
	_17538_i+=2LL;
	return _23e45a13e_float_fmt_e(_17521_txt,_17538_i);
}



inline jule::Str _23e45a13e_float_fmt_dotp(jule::Slice<jule::U8>& _18220_txt,jule::Int _18237_i) {
	(_18237_i)++;
	return _23e45a13e_float_fmt_e(_18220_txt,_18237_i);
}



inline jule::Str _23e45a13e_float_num(jule::Slice<jule::U8>& _18915_txt,jule::Int _18932_i) {
	jule::Str _18942_lit = jule::Str();
	(_18932_i)++;
	for (; _18932_i < _18915_txt.len(); (_18932_i)++) {
		{
			jule::U8 _19213_b = _18915_txt[_18932_i];
			if ((_18932_i > 1LL) && ((_19213_b == 'e') || (_19213_b == 'E'))) {
				_18942_lit = _23e45a13e_float_fmt_e(_18915_txt,_18932_i);
				return _18942_lit;
			}
			if ((!(_23e730c0b_is_decimal(_19213_b)))) {
				goto _iter_end_5549895312;
			}
		}
	_iter_next_5549895312:;
	}
	_iter_end_5549895312:;
	if (_18932_i == 1LL) {
		return _18942_lit;
	}
	_18942_lit = static_cast<jule::Str>(_18915_txt.slice(0LL,_18932_i));
	return _18942_lit;
}



inline jule::Str _23e45a13e_common_num(jule::Slice<jule::U8>& _20716_txt) {
	jule::Str _20731_lit = jule::Str();
	jule::Int _20813_i = 0LL;
	_julec_label_loop:;
	for (; _20813_i < _20716_txt.len(); (_20813_i)++) {
		{
			jule::U8 _21113_b = _20716_txt[_20813_i];
			{
				if (_21113_b == '.') {
					_case_begin_5549905152:;
					{
						_20731_lit = _23e45a13e_float_num(_20716_txt,_20813_i);
						return _20731_lit;
					}
				}
				else if (_23e45a13e_is_float_fmt_e(_21113_b,_20813_i)) {
					_case_begin_5549905264:;
					{
						_20731_lit = _23e45a13e_float_fmt_e(_20716_txt,_20813_i);
						return _20731_lit;
					}
				}
				else if ((!(_23e730c0b_is_decimal(_21113_b)))) {
					_case_begin_5549905376:;
					{
						goto _iter_end_5549902768;
					}
				}
				_match_end_5549904976:;
			}
		}
	_iter_next_5549902768:;
	}
	_iter_end_5549902768:;
	if (_20813_i == 0LL) {
		return _20731_lit;
	}
	_20731_lit = static_cast<jule::Str>(_20716_txt.slice(0LL,_20813_i));
	return _20731_lit;
}



inline jule::Str _23e45a13e_binary_num(jule::Slice<jule::U8>& _22516_txt) {
	jule::Str _22531_lit = jule::Str();
	if ((!(_23e45a13e_bytes_has_prefix(_22516_txt,jule::Str("0b", 2))))) {
		_22531_lit = jule::Str();
		return _22531_lit;
	}
	if (_22516_txt.len() < 2LL) {
		return _22531_lit;
	}
	
	jule::Int _23413_i = 2LL;
	for (; _23413_i < _22516_txt.len(); (_23413_i)++) {
		{
			if ((!(_23e730c0b_is_binary(_22516_txt[_23413_i])))) {
				goto _iter_end_5549911600;
			}
		}
	_iter_next_5549911600:;
	}
	_iter_end_5549911600:;
	if (_23413_i == 2LL) {
		return _22531_lit;
	}
	_22531_lit = static_cast<jule::Str>(_22516_txt.slice(0LL,_23413_i));
	return _22531_lit;
}



inline jule::Bool _23e45a13e_is_float_fmt_e(jule::U8 _24719_b,jule::Int _24728_i) {
	return (_24728_i > 0LL) && ((_24719_b == 'e') || (_24719_b == 'E'));
}



inline jule::Bool _23e45a13e_is_float_fmt_p(jule::U8 _24819_b,jule::Int _24828_i) {
	return (_24828_i > 0LL) && ((_24819_b == 'p') || (_24819_b == 'P'));
}



inline jule::Bool _23e45a13e_is_float_fmt_dotnp(jule::Slice<jule::U8>& _25024_txt,jule::Int _25041_i) {
	if (_25024_txt[_25041_i] != '.') {
		return false;
	}
	(_25041_i)++;
	_julec_label_loop:;
	for (; _25041_i < _25024_txt.len(); (_25041_i)++) {
		{
			jule::U8 _25813_b = _25024_txt[_25041_i];
			{
				if (_23e730c0b_is_decimal(_25813_b)) {
					_case_begin_5549926896:;
					{
						goto _iter_next_5549920848;
					}
				}
				else if (_23e45a13e_is_float_fmt_p(_25813_b,_25041_i)) {
					_case_begin_5549926992:;
					{
						return true;
					}
				}
				else {
					_case_begin_5549926544:;
					{
						goto _iter_end_5549920848;
					}
				}
				_match_end_5549926432:;
			}
		}
	_iter_next_5549920848:;
	}
	_iter_end_5549920848:;
	return false;
}



inline jule::Bool _23e45a13e_is_float_fmt_dotp(jule::Slice<jule::U8>& _26923_txt,jule::Int _26936_i) {
	{
		if (_26923_txt.len() < 3LL) {
			_case_begin_5549932464:;
			{
				goto _case_begin_5549932560;
			}
		}
		else if (_26923_txt[_26936_i] != '.') {
			_case_begin_5549932560:;
			{
				goto _case_begin_5549931104;
			}
		}
		else if ((_26923_txt[_26936_i + 1LL] != 'p') && (_26923_txt[_26936_i + 1LL] != 'P')) {
			_case_begin_5549931104:;
			{
				return false;
			}
		}
		else {
			_case_begin_5549930800:;
			{
				return true;
			}
		}
		_match_end_5549930624:;
	}
}



inline jule::Bool _23e45a13e_is_float_fmt_dotfp(jule::Slice<jule::U8>& _27824_txt,jule::Int _27837_i) {
	{
		if (_27824_txt.len() < 4LL) {
			_case_begin_5549938416:;
			{
				goto _case_begin_5549938512;
			}
		}
		else if (_27824_txt[_27837_i] != '.') {
			_case_begin_5549938512:;
			{
				goto _case_begin_5549937056;
			}
		}
		else if ((_27824_txt[_27837_i + 1LL] != 'f') && (_27824_txt[_27837_i + 1LL] != 'F')) {
			_case_begin_5549937056:;
			{
				goto _case_begin_5549937168;
			}
		}
		else if ((_27824_txt[_27837_i + 2LL] != 'p') && (_27824_txt[_27837_i + 1LL] != 'P')) {
			_case_begin_5549937168:;
			{
				return false;
			}
		}
		else {
			_case_begin_5549936736:;
			{
				return true;
			}
		}
		_match_end_5549936560:;
	}
}



inline jule::Str _23e45a13e_octal_num(jule::Slice<jule::U8>& _28815_txt) {
	jule::Str _28830_lit = jule::Str();
	if (_28815_txt[0LL] != '0') {
		_28830_lit = jule::Str();
		return _28830_lit;
	}
	if (_28815_txt.len() < 2LL) {
		return _28830_lit;
	}
	jule::Int _29613_octal_start = 1LL;
	if (_28815_txt[1LL] == 'o') {
		if (_28815_txt.len() < 3LL) {
			return _28830_lit;
		}
		(_29613_octal_start)++;
	}
	jule::Int _30513_i = _29613_octal_start;
	for (; _30513_i < _28815_txt.len(); (_30513_i)++) {
		{
			jule::U8 _30713_b = _28815_txt[_30513_i];
			if (_23e45a13e_is_float_fmt_e(_30713_b,_30513_i)) {
				_28830_lit = _23e45a13e_float_fmt_e(_28815_txt,_30513_i);
				return _28830_lit;
			}
			if ((!(_23e730c0b_is_octal(_30713_b)))) {
				goto _iter_end_5549947664;
			}
		}
	_iter_next_5549947664:;
	}
	_iter_end_5549947664:;
	if (_30513_i == _29613_octal_start) {
		return _28830_lit;
	}
	_28830_lit = static_cast<jule::Str>(_28815_txt.slice(0LL,_30513_i));
	return _28830_lit;
}



inline jule::Str _23e45a13e_hex_num(jule::Slice<jule::U8>& _32213_txt) {
	jule::Str _32228_lit = jule::Str();
	if (_32213_txt.len() < 3LL) {
		return _32228_lit;
	}
	if ((_32213_txt[0LL] != '0') || ((_32213_txt[1LL] != 'x') && (_32213_txt[1LL] != 'X'))) {
		return _32228_lit;
	}
	
	jule::Int _33113_i = 2LL;
	_julec_label_loop:;
	for (; _33113_i < _32213_txt.len(); (_33113_i)++) {
		{
			jule::U8 _33413_b = _32213_txt[_33113_i];
			{
				if (_23e45a13e_is_float_fmt_dotp(_32213_txt,_33113_i)) {
					_case_begin_5549963376:;
					{
						_32228_lit = _23e45a13e_float_fmt_dotp(_32213_txt,_33113_i);
						return _32228_lit;
					}
				}
				else if (_23e45a13e_is_float_fmt_dotfp(_32213_txt,_33113_i)) {
					_case_begin_5549963488:;
					{
						_32228_lit = _23e45a13e_float_fmt_dotfp(_32213_txt,_33113_i);
						return _32228_lit;
					}
				}
				else if (_23e45a13e_is_float_fmt_p(_33413_b,_33113_i)) {
					_case_begin_5549963600:;
					{
						_32228_lit = _23e45a13e_float_fmt_p(_32213_txt,_33113_i);
						return _32228_lit;
					}
				}
				else if (_23e45a13e_is_float_fmt_dotnp(_32213_txt,_33113_i)) {
					_case_begin_5549963712:;
					{
						_32228_lit = _23e45a13e_float_fmt_dotnp(_32213_txt,_33113_i);
						return _32228_lit;
					}
				}
				else if ((!(_23e730c0b_is_hex(_33413_b)))) {
					_case_begin_5549963824:;
					{
						goto _iter_end_5549961008;
					}
				}
				_match_end_5549963168:;
			}
		}
	_iter_next_5549961008:;
	}
	_iter_end_5549961008:;
	if (_33113_i == 2LL) {
		return _32228_lit;
	}
	_32228_lit = static_cast<jule::Str>(_32213_txt.slice(0LL,_33113_i));
	return _32228_lit;
}



inline jule::Str _23e45a13e_hex_escape(jule::Slice<jule::U8>& _35916_txt,jule::Int _35929_n) {
	jule::Str _35939_seq = jule::Str();
	if (_35916_txt.len() < _35929_n) {
		return _35939_seq;
	}
	
	jule::Int _36513_i = 2LL;
	for (; _36513_i < _35929_n; (_36513_i)++) {
		{
			if ((!(_23e730c0b_is_hex(_35916_txt[_36513_i])))) {
				return _35939_seq;
			}
		}
	_iter_next_5549971904:;
	}
	_iter_end_5549971904:;
	_35939_seq=static_cast<jule::Str>(_35916_txt.slice(0LL,_35929_n));
	return _35939_seq;
}



inline jule::Str _23e45a13e_big_unicode_point_escape(jule::Slice<jule::U8>& _37730_txt) {
	return _23e45a13e_hex_escape(_37730_txt,10LL);
}



inline jule::Str _23e45a13e_little_unicode_point_escape(jule::Slice<jule::U8>& _37933_txt) {
	return _23e45a13e_hex_escape(_37933_txt,6LL);
}



inline jule::Str _23e45a13e_hex_byte_escape(jule::Slice<jule::U8>& _38121_txt) {
	return _23e45a13e_hex_escape(_38121_txt,4LL);
}



inline jule::Str _23e45a13e_byte_escape(jule::Slice<jule::U8>& _38417_txt) {
	jule::Str _38432_seq = jule::Str();
	if (_38417_txt.len() < 4LL) {
		return _38432_seq;
	}
	if (((!(_23e730c0b_is_octal(_38417_txt[1LL]))) || (!(_23e730c0b_is_octal(_38417_txt[2LL])))) || (!(_23e730c0b_is_octal(_38417_txt[3LL])))) {
		return _38432_seq;
	}
	_38432_seq = static_cast<jule::Str>(_38417_txt.slice(0LL,4LL));
	return _38432_seq;
}



inline jule::Slice<_23ceb0c1d_Log> _23e45a13e_lex(jule::Ptr<_23e4593c4_File> _78016_f) {
	if (_78016_f == nullptr) {
		return nullptr;
	}
	_23e45a13e_Lex _78513_lex = _23e45a13e_Lex(jule::Slice<_23e730c0b_Token>(),_78016_f,0LL,jule::Int(),-1LL,jule::Slice<_23ceb0c1d_Log>());
	_78513_lex._method_new_line();
	_78513_lex._method_lex();
	if (_78513_lex._field_errors.len() > 0LL) {
		return _78513_lex._field_errors;
	}
	_78016_f->_field__tokens=_78513_lex._field_tokens;
	return nullptr;
}



inline jule::Ptr<_225036949_FileInfo> _225036949_parse_file(jule::Ptr<_23e4593c4_File> _2223_f) {
	if (_2223_f == nullptr) {
		return nullptr;
	}
	jule::Ptr<_225036949_FileInfo> _2713_finf = jule::new_struct<_225036949_FileInfo>(new( std::nothrow ) _225036949_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _225036949_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		_2713_finf->_field_ast=nullptr;
	}
	return _2713_finf;
}



inline std::tuple<jule::Ptr<_23e249d96_Ast>,jule::Slice<_23ceb0c1d_Log>> _225036949_parse_fileset(jule::Ptr<_23e4593c4_File> _5822_f) {
	jule::Ptr<_225247b9e_Parser> _5913_p = jule::new_struct_ptr<_225247b9e_Parser>(new( std::nothrow ) _225247b9e_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



inline jule::Ptr<_23e45734a_ScopeTree> _225040a63_new_scope(void) {
	return jule::new_struct<_23e45734a_ScopeTree>(new( std::nothrow ) _23e45734a_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _225040a63_is_st(_23e730c0b_Token _4610_current,_23e730c0b_Token _4626_prev) {
	jule::Bool _4641_ok = jule::Bool();
	jule::Bool _4651_terminated = jule::Bool();
	_4641_ok=(_4610_current._field_id == 5LLU) || (_4626_prev._field_row < _4610_current._field_row);
	_4651_terminated=_4610_current._field_id == 5LLU;
	return std::make_tuple(_4641_ok,_4651_terminated);
}



inline jule::Bool _225040a63_prev_is_incomplete_expr(jule::Slice<_23e730c0b_Token>& _5229_tokens,jule::Int& _5247_i) {
	if ((_5247_i > 1LL) && (_5229_tokens[_5247_i - 2LL]._field_id == 23LLU)) {
		return false;
	}
	{
		_23e730c0b_Token* _5913_prev = (&(_5229_tokens[_5247_i - 1LL]));
		return (_5913_prev->_field_id == 20LLU) || (((_5913_prev->_field_id == 7LLU) && _23e730c0b_is_bin_op(_5913_prev->_field_kind)) && (_5913_prev->_field_row < _5229_tokens[_5247_i]._field_row));
	}
}



inline std::tuple<jule::Int,jule::Bool> _225040a63_next_st_pos(jule::Slice<_23e730c0b_Token>& _6817_tokens,jule::Int _6834_start) {
	jule::Int _6913_brace_n = 0LL;
	jule::Int _7013_i = _6834_start;
	for (; _7013_i < _6817_tokens.len(); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;
			jule::Bool _7317_terminated = false;
			_23e730c0b_Token _7413_tok = _6817_tokens[_7013_i];
			{
				auto &_match_expr{ _7413_tok._field_id };
				if (_match_expr == 3LLU) {
					_case_begin_5550635968:;
					{
						{
							auto &_match_expr{ _7413_tok._field_kind };
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_5550642640:;
								{
									if ((_6913_brace_n == 0LL) && (_7013_i > _6834_start)) {
										if ((!(_225040a63_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _225040a63_is_st(_7413_tok,_6817_tokens[_7013_i - 1LL]);
											if (_7217_ok) {
												goto _julec_label_return;
											}
										}
									}
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_5550636064:;
								{
									(_6913_brace_n)--;
									if ((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < _6817_tokens.len())) {
										std::tie(_7217_ok,_7317_terminated) = _225040a63_is_st(_6817_tokens[_7013_i + 1LL],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										}
									}
								}
							}
							_match_end_5550636304:;
						}
						goto _iter_next_5550630848;
					}
				}
				_match_end_5550635888:;
			}
			if (_6913_brace_n != 0LL) {
				goto _iter_next_5550630848;
			}
			if (_7013_i > _6834_start) {
				if (_225040a63_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_5550630848;
				}
				std::tie(_7217_ok,_7317_terminated) = _225040a63_is_st(_7413_tok,_6817_tokens[_7013_i - 1LL]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _225040a63_is_st(_7413_tok,_7413_tok);
			}
			if ((!(_7217_ok))) {
				goto _iter_next_5550630848;
			}
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			}
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_5550630848:;
	}
	_iter_end_5550630848:;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<_23e730c0b_Token>,jule::Bool> _225040a63_skip_st(jule::Int& _13117_i,jule::Slice<_23e730c0b_Token> _13129_tokens) {
	jule::Int _1329_start = _13117_i;
	jule::Bool _13313_terminated = false;
	std::tie(_13117_i,_13313_terminated) = _225040a63_next_st_pos(_13129_tokens,_1329_start);
	jule::Slice<_23e730c0b_Token> _13513_st_tokens = _13129_tokens.slice(_1329_start,_13117_i);
	if (_13313_terminated) {
		if (_13513_st_tokens.len() == 1LL) {
			std::tie(_13513_st_tokens,_13313_terminated) = _225040a63_skip_st(_13117_i,_13129_tokens);
			return std::make_tuple(_13513_st_tokens,_13313_terminated);
		}
		_13513_st_tokens=_13513_st_tokens.slice(0LL,_13513_st_tokens.len() - 1LL);
	}
	return std::make_tuple(_13513_st_tokens,_13313_terminated);
}



inline jule::Slice<jule::Ptr<_225040a63_Stmt>> _225040a63_split_stmts(jule::Slice<_23e730c0b_Token>& _15321_tokens) {
	jule::Slice<jule::Ptr<_225040a63_Stmt>> _15413_stms = nullptr;
	jule::Int _15513_pos = 0LL;
	while (_15513_pos < _15321_tokens.len()) {
		{
			jule::Slice<_23e730c0b_Token> _15718_tokens;
			jule::Bool _15726_terminated;
			std::tie(_15718_tokens,_15726_terminated) = _225040a63_skip_st(_15513_pos,_15321_tokens);
			_15413_stms.push(jule::new_struct<_225040a63_Stmt>(new( std::nothrow ) _225040a63_Stmt(_15718_tokens,_15726_terminated)));
		}
	_iter_next_5550654416:;
	}
	_iter_end_5550654416:;
	return _15413_stms;
}



inline jule::Ptr<_225059ab0_CallData> _225059ab0_get_call_data(jule::Slice<_23e730c0b_Token>& _4523_tokens) {
	jule::Ptr<_225059ab0_CallData> _4613_data = jule::new_struct<_225059ab0_CallData>(new( std::nothrow ) _225059ab0_CallData());
	std::tie(_4613_data->_field_expr_tokens,_4613_data->_field_args_tokens) = _225247b9e_range_last(_4523_tokens);
	if (_4613_data->_field_expr_tokens.len() == 0LL) {
		return _4613_data;
	}
	_23e730c0b_Token _539_token = _4613_data->_field_expr_tokens[_4613_data->_field_expr_tokens.len() - 1LL];
	if ((_539_token._field_id == 3LLU) && (_539_token._field_kind == jule::Str("]", 1))) {
		std::tie(_4613_data->_field_expr_tokens,_4613_data->_field_generics_tokens) = _225247b9e_range_last(_4613_data->_field_expr_tokens);
	}
	return _4613_data;
}



inline jule::Slice<_23e730c0b_Token> _225059ab0_get_block_expr(jule::Slice<_23e730c0b_Token>& _6124_tokens) {
	jule::Int _6213_brace_n = 0LL;
	jule::Int _6313_skip_to_next_brace_close = 0LL;
	{
		auto &expr = _6124_tokens;
		auto it = expr.begin();
		_iter_begin_5550678832:;
		if (it != expr.end()) {
			jule::Int _225059ab0_i = it - expr.begin();
			_23e730c0b_Token &_225059ab0_tok = *it;
			{
				{
					auto &_match_expr{ _225059ab0_tok._field_id };
					if (_match_expr == 16LLU || _match_expr == 17LLU || _match_expr == 35LLU) {
						_case_begin_5550681216:;
						{
							(_6313_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == 3LLU) {
						_case_begin_5550681328:;
						{
							{
								auto &_match_expr{ _225059ab0_tok._field_kind };
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_5550684800:;
									{
										if ((_6213_brace_n > 0LL) || (_6313_skip_to_next_brace_close > 0LL)) {
											if (_6313_skip_to_next_brace_close > 0LL) {
												(_6313_skip_to_next_brace_close)--;
											}
											(_6213_brace_n)++;
											goto _match_end_5550683504;
										}
										return _6124_tokens.slice(0LL,_225059ab0_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_5550685280:;
									{
										(_6213_brace_n)++;
									}
								}
								else {
									_case_begin_5550681488:;
									{
										(_6213_brace_n)--;
									}
								}
								_match_end_5550683504:;
							}
						}
					}
					_match_end_5550680752:;
				}
			}
			_iter_next_5550678832:;
			++it;
			_225059ab0_i++;
			goto _iter_begin_5550678832;
		}
		_iter_end_5550678832:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_23e730c0b_Token>,jule::Slice<_23e730c0b_Token>> _225059ab0_split_colon(jule::Slice<_23e730c0b_Token>& _9521_tokens) {
	jule::Int _9613_range_n = 0LL;
	{
		auto &expr = _9521_tokens;
		auto it = expr.begin();
		_iter_begin_5550680256:;
		if (it != expr.end()) {
			jule::Int _225059ab0_i = it - expr.begin();
			_23e730c0b_Token &_225059ab0_token = *it;
			{
				{
					auto &_match_expr{ _225059ab0_token._field_id };
					if (_match_expr == 3LLU) {
						_case_begin_5550690864:;
						{
							{
								auto &_match_expr{ _225059ab0_token._field_kind };
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_5550693264:;
									{
										(_9613_range_n)++;
										goto _iter_next_5550680256;
									}
								}
								else {
									_case_begin_5550691088:;
									{
										(_9613_range_n)--;
									}
								}
								_match_end_5550691344:;
							}
						}
					}
					else if (_match_expr == 11LLU) {
						_case_begin_5550690976:;
						{
							if (_9613_range_n < 1LL) {
								jule::Slice<_23e730c0b_Token> _11325_l = _9521_tokens.slice(0LL,_225059ab0_i);
								jule::Slice<_23e730c0b_Token> _11425_r = _9521_tokens.slice(_225059ab0_i + 1LL);
								return std::make_tuple(_11325_l,_11425_r);
							}
						}
					}
					_match_end_5550690400:;
				}
			}
			_iter_next_5550680256:;
			++it;
			_225059ab0_i++;
			goto _iter_begin_5550680256;
		}
		_iter_end_5550680256:;
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_23e730c0b_Token> _225059ab0_eliminate_comments(jule::Slice<_23e730c0b_Token>& _12228_tokens) {
	jule::Slice<_23e730c0b_Token> _12313_cutted = nullptr;
	{
		auto &expr = _12228_tokens;
		auto it = expr.begin();
		_iter_begin_5550690192:;
		if (it != expr.end()) {
			_23e730c0b_Token _225059ab0_token = *it;
			{
				if (_225059ab0_token._field_id != 18LLU) {
					_12313_cutted.push(_225059ab0_token);
				}
			}
			_iter_next_5550690192:;
			++it;
			goto _iter_begin_5550690192;
		}
		_iter_end_5550690192:;
	}
	return _12313_cutted;
}



inline jule::Int _225059ab0_find_lowest_prec_op(jule::Slice<_23e730c0b_Token>& _13425_tokens) {
	jule::U8 _13913_prec = 255LLU;
	jule::Int _14013_prec_pos = -1LL;
	jule::Int _14213_brace_n = 0LL;
	jule::Bool _14313_skip_to_next_brace_open = false;
	{
		auto &expr = _13425_tokens;
		auto it = expr.begin();
		_iter_begin_5550705008:;
		if (it != expr.end()) {
			jule::Int _225059ab0_i = it - expr.begin();
			_23e730c0b_Token &_225059ab0_token = *it;
			{
				{
					if (_225059ab0_token._field_id == 3LLU) {
						_case_begin_5550707536:;
						{
							{
								auto &_match_expr{ _225059ab0_token._field_kind };
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_5550711280:;
									{
										_14313_skip_to_next_brace_open=false;
										goto _case_begin_5550711376;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_5550711376:;
									{
										(_14213_brace_n)++;
									}
								}
								else {
									_case_begin_5550708256:;
									{
										(_14213_brace_n)--;
									}
								}
								_match_end_5550709024:;
							}
							goto _iter_next_5550705008;
						}
					}
					else if (_14313_skip_to_next_brace_open) {
						_case_begin_5550707648:;
						{
							goto _iter_next_5550705008;
						}
					}
					else if (_225059ab0_token._field_id == 16LLU) {
						_case_begin_5550707760:;
						{
							_14313_skip_to_next_brace_open=true;
							goto _iter_next_5550705008;
						}
					}
					else if (_225059ab0_i == 0LL) {
						_case_begin_5550707872:;
						{
							goto _iter_next_5550705008;
						}
					}
					else if (_225059ab0_token._field_id != 7LLU) {
						_case_begin_5550707984:;
						{
							goto _iter_next_5550705008;
						}
					}
					else if (_14213_brace_n > 0LL) {
						_case_begin_5550708096:;
						{
							goto _iter_next_5550705008;
						}
					}
					_match_end_5550707248:;
				}
				_23e730c0b_Token _17813_left = _13425_tokens[_225059ab0_i - 1LL];
				if ((_17813_left._field_id == 7LLU) || (_17813_left._field_id == 11LLU)) {
					goto _iter_next_5550705008;
				}
				if (((_225059ab0_i > 1LL) && (_17813_left._field_id == 3LLU)) && (_17813_left._field_kind == jule::Str("]", 1))) {
					_23e730c0b_Token _18617_lleft = _13425_tokens[_225059ab0_i - 2LL];
					if ((_18617_lleft._field_id == 3LLU) && (_18617_lleft._field_kind == jule::Str("[", 1))) {
						if ((_225059ab0_token._field_kind == jule::Str("&", 1)) || (_225059ab0_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_5550705008;
						}
					}
				}
				jule::U8 _19513_p = _225059ab0_token._method_prec();
				if ((_19513_p != 0LL) && (_19513_p <= _13913_prec)) {
					_13913_prec=_19513_p;
					_14013_prec_pos=_225059ab0_i;
				}
			}
			_iter_next_5550705008:;
			++it;
			_225059ab0_i++;
			goto _iter_begin_5550705008;
		}
		_iter_end_5550705008:;
	}
	return _14013_prec_pos;
}



inline jule::Ptr<_23e45734a_IdentExpr> _225059ab0_build_ident_expr(_23e730c0b_Token& _20526_token) {
	return jule::new_struct<_23e45734a_IdentExpr>(new( std::nothrow ) _23e45734a_IdentExpr(_20526_token,_20526_token._field_kind,false));
}



inline std::tuple<jule::Slice<_23e730c0b_Token>,jule::Int> _225059ab0_get_range_expr_tokens(jule::Slice<_23e730c0b_Token>& _21331_tokens) {
	jule::Int _21413_range_n = 0LL;
	jule::I64 _21513_i = _21331_tokens.len() - 1LL;
	for (; _21513_i >= 0LL; (_21513_i)--) {
		{
			_23e730c0b_Token _21713_tok = _21331_tokens[_21513_i];
			if (_21713_tok._field_id == 3LLU) {
				{
					auto &_match_expr{ _21713_tok._field_kind };
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_5550731952:;
						{
							(_21413_range_n)++;
						}
					}
					else {
						_case_begin_5550730192:;
						{
							(_21413_range_n)--;
						}
					}
					_match_end_5550730288:;
				}
			}
			if (_21413_range_n == 0LL) {
				return std::make_tuple(_21331_tokens.slice(0LL,_21513_i),_21413_range_n);
			}
		}
	_iter_next_5550723792:;
	}
	_iter_end_5550723792:;
	return std::make_tuple(nullptr,_21413_range_n);
}



inline jule::Bool _225146a37_check_assign_tokens(jule::Slice<_23e730c0b_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_23e730c0b_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_5550737104:;
		if (it != expr.end()) {
			_23e730c0b_Token &_225146a37_t = *it;
			{
				if (_225146a37_t._field_id == 3LLU) {
					{
						auto &_match_expr{ _225146a37_t._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_5550741056:;
							{
								(_2113_brace_n)++;
							}
						}
						else {
							_case_begin_5550739280:;
							{
								(_2113_brace_n)--;
							}
						}
						_match_end_5550739376:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_5550737104;
				} else if ((_225146a37_t._field_id == 7LLU) && _23e730c0b_is_assign_op(_225146a37_t._field_kind)) {
					return true;
				}
			}
			_iter_next_5550737104:;
			++it;
			goto _iter_begin_5550737104;
		}
		_iter_end_5550737104:;
	}
	return false;
}



inline _23ceb0c1d_Log _225247b9e_make_err(jule::Int _5013_row,jule::Int _5023_col,jule::Ptr<_23e4593c4_File>& _5034_f,jule::Str _5044_fmt,jule::Slice<jule::Any> _5057_args) {
	return _23ceb0c1d_Log(1LLU,_5013_row,_5023_col,_5034_f->_method_path(),_23ceb0c1d_logf(_5044_fmt,_5057_args),jule::Str(),jule::Str());
}



inline jule::Slice<_23e730c0b_Token> _225247b9e_range(jule::Int& _6915_i,jule::Str _6923_open,jule::Str _6940_close,jule::Slice<_23e730c0b_Token>& _6963_tokens) {
	if (_6915_i >= _6963_tokens.len()) {
		return nullptr;
	}
	_23e730c0b_Token _749_tok = _6963_tokens[_6915_i];
	if ((_749_tok._field_id != 3LLU) || (_749_tok._field_kind != _6923_open)) {
		return nullptr;
	}
	(_6915_i)++;
	jule::Int _8013_range_n = 1LL;
	jule::Int _819_start = _6915_i;
	for (; (_8013_range_n != 0LL) && (_6915_i < _6963_tokens.len()); (_6915_i)++) {
		{
			_23e730c0b_Token _8313_token = _6963_tokens[_6915_i];
			if (_8313_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _8313_token._field_kind };
					if (_match_expr == _6923_open) {
						_case_begin_5550757168:;
						{
							(_8013_range_n)++;
						}
					}
					else if (_match_expr == _6940_close) {
						_case_begin_5550757280:;
						{
							(_8013_range_n)--;
						}
					}
					_match_end_5550757072:;
				}
			}
		}
	_iter_next_5550752576:;
	}
	_iter_end_5550752576:;
	return _6963_tokens.slice(_819_start,_6915_i - 1LL);
}



inline std::tuple<jule::Slice<_23e730c0b_Token>,jule::Slice<_23e730c0b_Token>> _225247b9e_range_last(jule::Slice<_23e730c0b_Token>& _10220_tokens) {
	jule::Slice<_23e730c0b_Token> _10239_cutted = jule::Slice<_23e730c0b_Token>();
	jule::Slice<_23e730c0b_Token> _10256_cut = jule::Slice<_23e730c0b_Token>();
	if (_10220_tokens.len() == 0LL) {
		_10239_cutted = _10220_tokens;
		_10256_cut = nullptr;
		return std::make_tuple(_10239_cutted,_10256_cut);
	} else if (_10220_tokens[_10220_tokens.len() - 1LL]._field_id != 3LLU) {
		_10239_cutted = _10220_tokens;
		_10256_cut = nullptr;
		return std::make_tuple(_10239_cutted,_10256_cut);
	}
	jule::Int _10913_brace_n = 0LL;
	jule::I64 _11013_i = _10220_tokens.len() - 1LL;
	for (; _11013_i >= 0LL; (_11013_i)--) {
		{
			_23e730c0b_Token _11213_token = _10220_tokens[_11013_i];
			if (_11213_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _11213_token._field_kind };
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_5550769744:;
						{
							(_10913_brace_n)++;
							goto _iter_next_5550765280;
						}
					}
					else {
						_case_begin_5550767984:;
						{
							(_10913_brace_n)--;
						}
					}
					_match_end_5550768080:;
				}
			}
			if (_10913_brace_n == 0LL) {
				_10239_cutted = _10220_tokens.slice(0LL,_11013_i);
				_10256_cut = _10220_tokens.slice(_11013_i);
				return std::make_tuple(_10239_cutted,_10256_cut);
			}
		}
	_iter_next_5550765280:;
	}
	_iter_end_5550765280:;
	_10239_cutted = _10220_tokens;
	_10256_cut = nullptr;
	return std::make_tuple(_10239_cutted,_10256_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_23e730c0b_Token>>,jule::Slice<_23ceb0c1d_Log>> _225247b9e_parts(jule::Slice<_23e730c0b_Token>& _14015_tokens,jule::Uint _14032_id,jule::Bool _14045_expr_must) {
	if (_14015_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_23e730c0b_Token>> _14513_parts = nullptr;
	jule::Slice<_23ceb0c1d_Log> _14613_errors = nullptr;
	jule::Int _14813_range_n = 0LL;
	jule::Int _14913_last = 0LL;
	{
		auto &expr = _14015_tokens;
		auto it = expr.begin();
		_iter_begin_5550773040:;
		if (it != expr.end()) {
			jule::Int _225247b9e_i = it - expr.begin();
			_23e730c0b_Token &_225247b9e_token = *it;
			{
				if (_225247b9e_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _225247b9e_token._field_kind };
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_5550783136:;
							{
								(_14813_range_n)++;
								goto _iter_next_5550773040;
							}
						}
						else {
							_case_begin_5550781360:;
							{
								(_14813_range_n)--;
							}
						}
						_match_end_5550781456:;
					}
				}
				if (_14813_range_n > 0LL) {
					goto _iter_next_5550773040;
				}
				if (_225247b9e_token._field_id == _14032_id) {
					if (_14045_expr_must && ((_225247b9e_i - _14913_last) <= 0LL)) {
						_23ceb0c1d_Log _16921_err = _225247b9e_make_err(_225247b9e_token._field_row,_225247b9e_token._field_column,_225247b9e_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
						_14613_errors.push(_16921_err);
					}
					_14513_parts.push(_14015_tokens.slice(_14913_last,_225247b9e_i));
					_14913_last=static_cast<jule::Int>(_225247b9e_i + 1LL);
				}
			}
			_iter_next_5550773040:;
			++it;
			_225247b9e_i++;
			goto _iter_begin_5550773040;
		}
		_iter_end_5550773040:;
	}
	if (_14913_last < _14015_tokens.len()) {
		_14513_parts.push(_14015_tokens.slice(_14913_last));
	} else if ((!(_14045_expr_must))) {
		_14513_parts.push(jule::Slice<_23e730c0b_Token>());
	}
	return std::make_tuple(_14513_parts,_14613_errors);
}



inline jule::Str _225247b9e_get_close_kind_of_brace(jule::Str _18628_left) {
	{
		auto &_match_expr{ _18628_left };
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_5550792320:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_5550792064:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_5550792160:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_5550778672:;
			{
				return jule::Str();
			}
		}
		_match_end_5550791040:;
	}
}



inline _23ceb0c1d_Log _225247b9e_compiler_err(_23e730c0b_Token& _19518_token,jule::Str& _19533_fmt,jule::Slice<jule::Any> _19546_args) {
	return _23ceb0c1d_Log(1LLU,_19518_token._field_row,_19518_token._field_column,_19518_token._field_file->_method_path(),_23ceb0c1d_logf(_19533_fmt,_19546_args),_19518_token._field_file->_method_get_row(_19518_token._field_row),jule::Str());
}



inline void _225247b9e_push_suggestion(_23ceb0c1d_Log* _20631_log,jule::Str _20642_fmt,jule::Slice<jule::Any> _20655_args) {
	_20631_log->_field_suggestion=_23ceb0c1d_logf(_20642_fmt,_20655_args);
}



inline jule::Ptr<_23e45734a_Comment> _225247b9e_build_comment(_23e730c0b_Token& _21023_token) {
	_21023_token._field_kind=_21023_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_23e45734a_Comment>(new( std::nothrow ) _23e45734a_Comment(_21023_token,_21023_token._field_kind));
}



inline jule::Str _225247b9e_tokstoa(jule::Slice<_23e730c0b_Token>& _21913_tokens) {
	jule::Str _22013_s = jule::Str();
	{
		auto &expr = _21913_tokens;
		auto it = expr.begin();
		_iter_begin_5550805088:;
		if (it != expr.end()) {
			_23e730c0b_Token &_225247b9e_token = *it;
			{
				_22013_s+=_225247b9e_token._field_kind;
			}
			_iter_next_5550805088:;
			++it;
			goto _iter_begin_5550805088;
		}
		_iter_end_5550805088:;
	}
	return _22013_s;
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_build_void_type(void) {
	return jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl());
}



inline jule::Ptr<_23e45734a_TypeDecl> _225272404_build_prim_type(_23e730c0b_Token _2024_token) {
	return jule::new_struct<_23e45734a_TypeDecl>(new( std::nothrow ) _23e45734a_TypeDecl(_2024_token,jule::Any(jule::new_struct<_23e45734a_IdentTypeDecl>(new( std::nothrow ) _23e45734a_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



inline std::tuple<jule::Slice<_23e730c0b_Token>,jule::Int> _225272404_split_map_range(jule::Slice<_23e730c0b_Token>& _3525_tokens,jule::Int& _3547_i) {
	jule::Slice<_23e730c0b_Token> _3557_range_tokens = jule::Slice<_23e730c0b_Token>();
	jule::Int _3580_colon = jule::Int();
	_3580_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3547_i;
	for (; _3547_i < _3525_tokens.len(); (_3547_i)++) {
		{
			_23e730c0b_Token _4013_token = _3525_tokens[_3547_i];
			if (_4013_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _4013_token._field_kind };
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_5550816960:;
						{
							(_3713_range_n)++;
							goto _iter_next_5550811296;
						}
					}
					else {
						_case_begin_5550815216:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_5550815664:;
				}
			}
			if (_3713_range_n == 0LL) {
				if ((_389_start + 1LL) > _3547_i) {
					return std::make_tuple(_3557_range_tokens,_3580_colon);
				}
				_3557_range_tokens=_3525_tokens.slice(_389_start + 1LL,_3547_i);
				goto _iter_end_5550811296;
			} else if (_3713_range_n != 1LL) {
				goto _iter_next_5550811296;
			}
			if ((_3580_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
				_3580_colon=static_cast<jule::Int>((_3547_i - _389_start) - 1LL);
			}
		}
	_iter_next_5550811296:;
	}
	_iter_end_5550811296:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



inline void _226100d86_lshift_unsig(_226100d86_Const& _55822_c,_226100d86_Const& _55833_x) {
	jule::U64 _5599_l = _55822_c._method_as_u64();
	jule::U64 _5609_r = _55833_x._method_as_u64();
	_55822_c._method_set_u64(static_cast<jule::U64>(_5599_l << _5609_r));
}



inline void _226100d86_rshift_unsig(_226100d86_Const& _56422_c,_226100d86_Const& _56433_x) {
	jule::U64 _5659_l = _56422_c._method_as_u64();
	jule::U64 _5669_r = _56433_x._method_as_u64();
	_56422_c._method_set_u64(static_cast<jule::U64>(_5659_l >> _5669_r));
}



inline jule::Str _226103eee_real_kind_of(jule::Str _2421_kind) {
	{
		auto &_match_expr{ _2421_kind };
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_5553355808:;
			{
				return jule::Str("i64", 3);
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_5553355904:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_5553340864:;
			{
				return _2421_kind;
			}
		}
		_match_end_5553342544:;
	}
}



inline jule::Int _226103eee_bitsize_of(jule::Str _4019_k) {
	{
		auto &_match_expr{ _4019_k };
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_5553360704:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_5553360800:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_5553361056:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_5553361152:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_5553361248:;
			{
				return 64LL;
			}
		}
		else {
			_case_begin_5553357568:;
			{
				return -1LL;
			}
		}
		_match_end_5553358992:;
	}
}



inline jule::Str _226103eee_int_from_bits(jule::U64 _7222_bits) {
	{
		auto &_match_expr{ _7222_bits };
		if (_match_expr == 8LL) {
			_case_begin_5553368912:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_5553369008:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_5553369104:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_5553367936:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_5553367792:;
			{
				return jule::Str();
			}
		}
		_match_end_5553366304:;
	}
}



inline jule::Str _226103eee_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto &_match_expr{ _8523_bits };
		if (_match_expr == 8LL) {
			_case_begin_5553372944:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_5553373040:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_5553373136:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_5553373504:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_5553372000:;
			{
				return jule::Str();
			}
		}
		_match_end_5553370912:;
	}
}



inline jule::Str _226103eee_float_from_bits(jule::U64 _9924_bits) {
	{
		auto &_match_expr{ _9924_bits };
		if (_match_expr == 32LL) {
			_case_begin_5553377840:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_5553377536:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_5553376592:;
			{
				return jule::Str();
			}
		}
		_match_end_5553375504:;
	}
}



inline jule::Bool _226103eee_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _23d225b97_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



inline jule::U64 _226103eee_bitsize_of_float(jule::F64 _13425_x) {
	{
		if ((-340282346638528860000000000000000000000.0 <= _13425_x) && (_13425_x <= 340282346638528860000000000000000000000.0)) {
			_case_begin_5553398064:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_5553396208:;
			{
				return 64LL;
			}
		}
		_match_end_5553396032:;
	}
}



inline jule::U64 _226103eee_bitsize_of_int(jule::I64 _14823_x) {
	{
		if ((-128LL <= _14823_x) && (_14823_x <= 127LL)) {
			_case_begin_5553400688:;
			{
				return 8LL;
			}
		}
		else if ((-32768LL <= _14823_x) && (_14823_x <= 32767LL)) {
			_case_begin_5553401024:;
			{
				return 16LL;
			}
		}
		else if ((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)) {
			_case_begin_5553401120:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_5553398768:;
			{
				return 64LL;
			}
		}
		_match_end_5553398592:;
	}
}



inline jule::U64 _226103eee_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (_16424_x <= 255LL) {
			_case_begin_5553406224:;
			{
				return 8LL;
			}
		}
		else if (_16424_x <= 65535LL) {
			_case_begin_5553406560:;
			{
				return 16LL;
			}
		}
		else if (_16424_x <= 4294967295LL) {
			_case_begin_5553406656:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_5553404384:;
			{
				return 64LL;
			}
		}
		_match_end_5553404256:;
	}
}



inline jule::F64 _226108454_min(jule::Str _4316_k) {
	_4316_k=_226103eee_real_kind_of(_4316_k);
	{
		auto &_match_expr{ _4316_k };
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_5553411216:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_5553411360:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_5553411456:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_5553411552:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_5553410384:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_5553410480:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_5553409472:;
			{
				return 0LL;
			}
		}
		_match_end_5553409232:;
	}
}



inline jule::F64 _226108454_max(jule::Str _5816_k) {
	_5816_k=_226103eee_real_kind_of(_5816_k);
	{
		auto &_match_expr{ _5816_k };
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_5553418112:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_5553418432:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_5553417120:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_5553417216:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_5553417312:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_5553417408:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_5553417552:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_5553417664:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_5553417776:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_5553417888:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_5553416176:;
			{
				return 0LL;
			}
		}
		_match_end_5553416960:;
	}
}



inline jule::Bool _22610564e_is_i8_compatible(jule::Str _629_k) {
	_629_k=_226103eee_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _22610564e_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_226103eee_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



inline jule::Bool _22610564e_is_i32_compatible(jule::Str _2030_k) {
	_2030_k=_226103eee_real_kind_of(_2030_k);
	return ((((_2030_k == jule::Str("i8", 2)) || (_2030_k == jule::Str("i16", 3))) || (_2030_k == jule::Str("i32", 3))) || (_2030_k == jule::Str("u8", 2))) || (_2030_k == jule::Str("u16", 3));
}



inline jule::Bool _22610564e_is_i64_compatible(jule::Str _3030_k) {
	_3030_k=_226103eee_real_kind_of(_3030_k);
	return ((((((_3030_k == jule::Str("i8", 2)) || (_3030_k == jule::Str("i16", 3))) || (_3030_k == jule::Str("i32", 3))) || (_3030_k == jule::Str("i64", 3))) || (_3030_k == jule::Str("u8", 2))) || (_3030_k == jule::Str("u16", 3))) || (_3030_k == jule::Str("u32", 3));
}



inline jule::Bool _22610564e_is_u8_compatible(jule::Str _4229_k) {
	_4229_k=_226103eee_real_kind_of(_4229_k);
	return _4229_k == jule::Str("u8", 2);
}



inline jule::Bool _22610564e_is_u16_compatible(jule::Str _4830_k) {
	_4830_k=_226103eee_real_kind_of(_4830_k);
	return (_4830_k == jule::Str("u8", 2)) || (_4830_k == jule::Str("u16", 3));
}



inline jule::Bool _22610564e_is_u32_compatible(jule::Str _5430_k) {
	_5430_k=_226103eee_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3))) || (_5430_k == jule::Str("u32", 3));
}



inline jule::Bool _22610564e_is_u64_compatible(jule::Str _6230_k) {
	_6230_k=_226103eee_real_kind_of(_6230_k);
	return (((_6230_k == jule::Str("u8", 2)) || (_6230_k == jule::Str("u16", 3))) || (_6230_k == jule::Str("u32", 3))) || (_6230_k == jule::Str("u64", 3));
}



inline jule::Bool _22610564e_is_f32_compatible(jule::Str _7130_k) {
	_7130_k=_226103eee_real_kind_of(_7130_k);
	return _7130_k == jule::Str("f32", 3);
}



inline jule::Bool _22610564e_is_f64_compatible(jule::Str _7730_k) {
	_7730_k=_226103eee_real_kind_of(_7730_k);
	return (_7730_k == jule::Str("f64", 3)) || (_7730_k == jule::Str("f32", 3));
}



inline jule::Bool _22610564e_types_are_compatible(jule::Str _8633_k1,jule::Str _8642_k2) {
	_8633_k1=_226103eee_real_kind_of(_8633_k1);
	{
		auto &_match_expr{ _8633_k1 };
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_5553446608:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_5553446704:;
			{
				return _22610564e_is_i8_compatible(_8642_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_5553446800:;
			{
				return _22610564e_is_i16_compatible(_8642_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_5553446896:;
			{
				return _22610564e_is_i32_compatible(_8642_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_5553447056:;
			{
				return _22610564e_is_i64_compatible(_8642_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_5553447152:;
			{
				return _22610564e_is_u8_compatible(_8642_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_5553447248:;
			{
				return _22610564e_is_u16_compatible(_8642_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_5553447360:;
			{
				return _22610564e_is_u32_compatible(_8642_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_5553447472:;
			{
				return _22610564e_is_u64_compatible(_8642_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_5553447920:;
			{
				return _22610564e_is_f32_compatible(_8642_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_5553448032:;
			{
				return _22610564e_is_f64_compatible(_8642_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_5553448144:;
			{
				return _8642_k2 == jule::Str("bool", 4);
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_5553448256:;
			{
				return _8642_k2 == jule::Str("str", 3);
			}
		}
		else {
			_case_begin_5553445040:;
			{
				return false;
			}
		}
		_match_end_5553444192:;
	}
}



inline jule::Bool _22610564e_is_i16_greater(jule::Str _10727_k) {
	_10727_k=_226103eee_real_kind_of(_10727_k);
	return _10727_k == jule::Str("u8", 2);
}



inline jule::Bool _22610564e_is_i32_greater(jule::Str _11327_k) {
	_11327_k=_226103eee_real_kind_of(_11327_k);
	return (_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3));
}



inline jule::Bool _22610564e_is_i64_greater(jule::Str _11927_k) {
	_11927_k=_226103eee_real_kind_of(_11927_k);
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _22610564e_is_u8_greater(jule::Str _12726_k) {
	_12726_k=_226103eee_real_kind_of(_12726_k);
	return _12726_k == jule::Str("i8", 2);
}



inline jule::Bool _22610564e_is_u16_greater(jule::Str _13327_k) {
	_13327_k=_226103eee_real_kind_of(_13327_k);
	return ((_13327_k == jule::Str("u8", 2)) || (_13327_k == jule::Str("i8", 2))) || (_13327_k == jule::Str("i16", 3));
}



inline jule::Bool _22610564e_is_u32_greater(jule::Str _14127_k) {
	_14127_k=_226103eee_real_kind_of(_14127_k);
	return ((((_14127_k == jule::Str("u8", 2)) || (_14127_k == jule::Str("u16", 3))) || (_14127_k == jule::Str("i8", 2))) || (_14127_k == jule::Str("i16", 3))) || (_14127_k == jule::Str("i32", 3));
}



inline jule::Bool _22610564e_is_u64_greater(jule::Str _15127_k) {
	_15127_k=_226103eee_real_kind_of(_15127_k);
	return ((((((_15127_k == jule::Str("u8", 2)) || (_15127_k == jule::Str("u16", 3))) || (_15127_k == jule::Str("u32", 3))) || (_15127_k == jule::Str("i8", 2))) || (_15127_k == jule::Str("i16", 3))) || (_15127_k == jule::Str("i32", 3))) || (_15127_k == jule::Str("i64", 3));
}



inline jule::Bool _22610564e_is_f32_greater(jule::Str _16323_k) {
	return _16323_k != jule::Str("f64", 3);
}



inline jule::Bool _22610564e_is_f64_greater(jule::Str _16523_k) {
	return true;
}



inline jule::Bool _22610564e_is_greater(jule::Str _16823_k1,jule::Str _16832_k2) {
	_16823_k1=_226103eee_real_kind_of(_16823_k1);
	{
		auto &_match_expr{ _16823_k1 };
		if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_5553479344:;
			{
				return _22610564e_is_i16_greater(_16832_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_5553478112:;
			{
				return _22610564e_is_i32_greater(_16832_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_5553478208:;
			{
				return _22610564e_is_i64_greater(_16832_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_5553478304:;
			{
				return _22610564e_is_u16_greater(_16832_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_5553478576:;
			{
				return _22610564e_is_u8_greater(_16832_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_5553478672:;
			{
				return _22610564e_is_u32_greater(_16832_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_5553478768:;
			{
				return _22610564e_is_u64_greater(_16832_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_5553478864:;
			{
				return _22610564e_is_f32_greater(_16832_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_5553478960:;
			{
				return _22610564e_is_f64_greater(_16832_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_5553479440:;
			{
				return true;
			}
		}
		else {
			_case_begin_5553468992:;
			{
				return false;
			}
		}
		_match_end_5553477424:;
	}
}



inline jule::Bool _2261088d8_is_sig_int(jule::Str _2723_k) {
	_2723_k=_226103eee_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _2261088d8_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_226103eee_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



inline jule::Bool _2261088d8_is_int(jule::Str _4915_k) {
	return _2261088d8_is_sig_int(_4915_k) || _2261088d8_is_unsig_int(_4915_k);
}



inline jule::Bool _2261088d8_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



inline jule::Bool _2261088d8_is_num(jule::Str _5915_k) {
	return _2261088d8_is_int(_5915_k) || _2261088d8_is_float(_5915_k);
}



inline jule::Bool _22625b3ed_is_ascii(jule::I32 _1017_r) {
	
	return _1017_r <= 127LLU;
}



inline jule::I32 _22625b3ed_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if (_1816_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::Int _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_22625b3ed_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _23e9950d5_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



inline jule::Str _22625b3ed_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _22625b3ed_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if (_4215_bytes.len() == 0LL) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_4215_bytes.len()));
	jule::Int _4813_i = 0LL;
	while (_4813_i < _4215_bytes.len()) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_22625b3ed_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::Int _5421_size;
				std::tie(_5418_r,_5421_size) = _23e9950d5_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_23e9950d5_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_5553518288:;
	}
	_iter_end_5553518288:;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _22625b3ed_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		if (_match_expr == '\\') {
			_case_begin_5553531136:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_5553532320:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_5553532768:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_5553532864:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_5553532960:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_5553533056:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_5553533168:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_5553533280:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_5553533392:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_5553533504:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_5553532240:;
	}
	_6252_ok=_6241_seq != 0LL;
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _22625b3ed_rune_from_esq_seq(jule::Slice<jule::U8> _8422_bytes,jule::Int& _8442_i) {
	jule::U8 _8510_b;
	jule::Bool _8513_ok;
	std::tie(_8510_b,_8513_ok) = _22625b3ed_try_btoa_common_esq(_8422_bytes.slice(_8442_i));
	(_8442_i)++;
	if (_8513_ok) {
		(_8442_i)++;
		return static_cast<jule::I32>(_8510_b);
	}
	{
		auto &_match_expr{ _8422_bytes[_8442_i] };
		if (_match_expr == 'u') {
			_case_begin_5553549104:;
			{
				
				jule::U64 _9514_rc;
				std::tie(_9514_rc,std::ignore) = _23d01eb8e_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 5LL)),16LL,64LL);
				_8442_i+=5LL;
				jule::I32 _9713_r = static_cast<jule::I32>(_9514_rc);
				return _9713_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_5553550400:;
			{
				
				jule::U64 _10214_rc;
				std::tie(_10214_rc,std::ignore) = _23d01eb8e_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 9LL)),16LL,64LL);
				_8442_i+=9LL;
				jule::I32 _10413_r = static_cast<jule::I32>(_10214_rc);
				return _10413_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_5553550496:;
			{
				
				jule::Slice<jule::U8> _10913_seq = _8422_bytes.slice(_8442_i + 1LL,_8442_i + 3LL);
				_8442_i+=3LL;
				jule::U64 _11114_b;
				std::tie(_11114_b,std::ignore) = _23d01eb8e_parse_uint(static_cast<jule::Str>(_10913_seq),16LL,64LL);
				return static_cast<jule::I32>(_11114_b);
			}
		}
		else {
			_case_begin_5553545808:;
			{
				
				jule::Slice<jule::U8> _11613_seq = _8422_bytes.slice(_8442_i,_8442_i + 3LL);
				_8442_i+=3LL;
				jule::U64 _11814_b;
				std::tie(_11814_b,std::ignore) = _23d01eb8e_parse_uint(static_cast<jule::Str>(_11613_seq.slice(1LL)),8LL,64LL);
				return static_cast<jule::I32>(_11814_b);
			}
		}
		_match_end_5553545344:;
	}
}



inline jule::Slice<jule::U8> _22625b3ed_str_esq_seq(jule::Slice<jule::U8> _12316_bytes,jule::Int& _12336_i) {
	jule::I32 _1249_r = _22625b3ed_rune_from_esq_seq(_12316_bytes,_12336_i);
	if (_1249_r <= 255LL) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(_1249_r)});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1249_r));
}



inline jule::Bool _2252d6a73_kind_uses_generics(jule::Ptr<_23e2b5818_TypeKind> _39623_k,jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>& _39638_generics) {
	jule::Str _3979_pk = _39623_k->_method_to_str();
	{
		auto &expr = _39638_generics;
		auto it = expr.begin();
		_iter_begin_5554415088:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_GenericDecl> &_2252d6a73_g = *it;
			{
				if (_3979_pk.find(_2252d6a73_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_5554415088:;
			++it;
			goto _iter_begin_5554415088;
		}
		_iter_end_5554415088:;
	}
	return false;
}



inline jule::Bool _2252d6a73_parameter_uses_generics(jule::Ptr<_2252d6a73_Param>& _40629_p,jule::Slice<jule::Ptr<_23e45734a_GenericDecl>>& _40641_generics) {
	if (_40629_p->_method_is_self()) {
		return false;
	}
	return _2252d6a73_kind_uses_generics(_40629_p->_field_kind->_field_kind,_40641_generics);
}



inline jule::Str _22551ab31_str_repeat(jule::Str _8415_sub,jule::Int _8429_n) {
	if (_8429_n == 0LL) {
		return jule::Str();
	}
	jule::Str _8913_s = jule::Str();
	for (; _8429_n > 0LL; (_8429_n)--) {
		{
			_8913_s+=_8415_sub;
		}
	_iter_next_5554423920:;
	}
	_iter_end_5554423920:;
	return _8913_s;
}



inline jule::Str _22551ab31_build_doc(jule::Ptr<_23e45734a_CommentGroup> _9618_cg) {
	if (_9618_cg == nullptr) {
		return jule::Str();
	}
	jule::Str _10113_doc = jule::Str();
	{
		auto &expr = _9618_cg->_field_comments;
		auto it = expr.begin();
		_iter_begin_5554426400:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_Comment> &_22551ab31_c = *it;
			{
				_10113_doc+=_22551ab31_c->_field_text;
				_10113_doc+=jule::Str(" ", 1);
			}
			_iter_next_5554426400:;
			++it;
			goto _iter_begin_5554426400;
		}
		_iter_end_5554426400:;
	}
	return _10113_doc;
}



inline jule::Ptr<_23e2b5818_TypeSymbol> _22551ab31_build_type(jule::Ptr<_23e45734a_TypeDecl> _10919_t) {
	if (_10919_t == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(_10919_t,jule::Ptr<_23e2b5818_TypeKind>()));
}



inline jule::Ptr<_225aa4a5a_Value> _22551ab31_build_expr(jule::Ptr<_23e45734a_Expr> _11819_expr) {
	if (_11819_expr == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_225aa4a5a_Value>(new( std::nothrow ) _225aa4a5a_Value(_11819_expr,jule::Ptr<_225aa4a5a_Data>()));
}



inline jule::Ptr<_23e2b5818_TypeAlias> _22551ab31_build_type_alias(jule::Ptr<_23e45734a_TypeAliasDecl> _12825_decl) {
	return jule::new_struct<_23e2b5818_TypeAlias>(new( std::nothrow ) _23e2b5818_TypeAlias(_12825_decl->_field_scope,_12825_decl->_field_public,_12825_decl->_field_cpp_linked,jule::Bool(),jule::Bool(),_12825_decl->_field_token,_12825_decl->_field_ident,_22551ab31_build_type(_12825_decl->_field_kind),_22551ab31_build_doc(_12825_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ptr<_225036509_Field> _22551ab31_build_field(jule::Ptr<_23e45734a_FieldDecl> _14020_decl) {
	return jule::new_struct_ptr<_225036509_Field>(new( std::nothrow ) _225036509_Field(jule::Ptr<_225036509_Struct>(),_14020_decl->_field_token,_14020_decl->_field_public,_14020_decl->_field_mutable,_14020_decl->_field_ident,_22551ab31_build_type(_14020_decl->_field_kind)));
}



inline jule::Slice<jule::Ptr<_225036509_Field>> _22551ab31_build_fields(jule::Slice<jule::Ptr<_23e45734a_FieldDecl>>& _15022_decls) {
	jule::Slice<jule::Ptr<_225036509_Field>> _15113_fields = jule::Slice<jule::Ptr<_225036509_Field>>::alloc(0LL,static_cast<jule::I64>(_15022_decls.len()));
	{
		auto &expr = _15022_decls;
		auto it = expr.begin();
		_iter_begin_5554439808:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_FieldDecl> _22551ab31_decl = *it;
			{
				_15113_fields.push(_22551ab31_build_field(_22551ab31_decl));
			}
			_iter_next_5554439808:;
			++it;
			goto _iter_begin_5554439808;
		}
		_iter_end_5554439808:;
	}
	return _15113_fields;
}



inline jule::Ptr<_225036509_Struct> _22551ab31_build_struct(jule::Ptr<_23e45734a_StructDecl> _15821_decl) {
	return jule::new_struct_ptr<_225036509_Struct>(new( std::nothrow ) _225036509_Struct(jule::Ptr<_22579574b_Sema>(),jule::Slice<jule::Ptr<_225036509_Struct>>(),jule::Slice<jule::Ptr<_225036509_Struct>>(),_15821_decl->_field_token,_15821_decl->_field_ident,_22551ab31_build_fields(_15821_decl->_field_fields),jule::Slice<jule::Ptr<_2252d6a73_Fn>>(),jule::Slice<jule::Ptr<_2258258db_Var>>(),_15821_decl->_field_public,_15821_decl->_field_cpp_linked,_15821_decl->_field_directives,_22551ab31_build_doc(_15821_decl->_field_doc_comments),_15821_decl->_field_generics,jule::Slice<jule::Ptr<_2255ab70a_Trait>>(),jule::Slice<jule::Ptr<_225036509_StructIns>>()));
}



inline jule::Ptr<_2252d6a73_Param> _22551ab31_build_param(jule::Ptr<_23e45734a_ParamDecl> _17120_decl) {
	return jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_17120_decl->_field_token,_17120_decl->_field_mutable,_17120_decl->_field_variadic,_17120_decl->_field_reference,_22551ab31_build_type(_17120_decl->_field_kind),_17120_decl->_field_ident));
}



inline jule::Slice<jule::Ptr<_2252d6a73_Param>> _22551ab31_build_params(jule::Slice<jule::Ptr<_23e45734a_ParamDecl>>& _18222_decls) {
	jule::Slice<jule::Ptr<_2252d6a73_Param>> _18313_params = jule::Slice<jule::Ptr<_2252d6a73_Param>>::alloc(0LL,static_cast<jule::I64>(_18222_decls.len()));
	{
		auto &expr = _18222_decls;
		auto it = expr.begin();
		_iter_begin_5554449136:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_ParamDecl> _22551ab31_decl = *it;
			{
				_18313_params.push(_22551ab31_build_param(_22551ab31_decl));
			}
			_iter_next_5554449136:;
			++it;
			goto _iter_begin_5554449136;
		}
		_iter_end_5554449136:;
	}
	return _18313_params;
}



inline jule::Ptr<_2252d6a73_RetType> _22551ab31_build_ret_type(jule::Ptr<_23e45734a_RetTypeDecl> _19023_decl) {
	if ((_19023_decl->_field_idents == nullptr) && (_19023_decl->_field_kind == nullptr)) {
		return nullptr;
	}
	return jule::new_struct<_2252d6a73_RetType>(new( std::nothrow ) _2252d6a73_RetType(_22551ab31_build_type(_19023_decl->_field_kind),_19023_decl->_field_idents));
}



inline jule::Ptr<_2252d6a73_Fn> _22551ab31_build_fn(jule::Ptr<_23e45734a_FnDecl> _20017_decl) {
	return jule::new_struct_ptr<_2252d6a73_Fn>(new( std::nothrow ) _2252d6a73_Fn(jule::Ptr<_22579574b_Sema>(),_20017_decl->_field_token,_20017_decl->_field_global,_20017_decl->_field_unsafety,_20017_decl->_field_public,_20017_decl->_field_cpp_linked,_20017_decl->_field_statically,_20017_decl->_field_exceptional,_20017_decl->_field_ident,_20017_decl->_field_directives,_22551ab31_build_doc(_20017_decl->_field_doc_comments),_20017_decl->_field_scope,_20017_decl->_field_generics,_22551ab31_build_ret_type(_20017_decl->_field_result),_22551ab31_build_params(_20017_decl->_field_params),jule::Ptr<_225036509_Struct>(),jule::Slice<jule::Ptr<_2252d6a73_FnIns>>()));
}



inline jule::Slice<jule::Ptr<_2252d6a73_Fn>> _22551ab31_build_methods(jule::Slice<jule::Ptr<_23e45734a_FnDecl>>& _21923_decls) {
	jule::Slice<jule::Ptr<_2252d6a73_Fn>> _22013_methods = jule::Slice<jule::Ptr<_2252d6a73_Fn>>::alloc(0LL,static_cast<jule::I64>(_21923_decls.len()));
	{
		auto &expr = _21923_decls;
		auto it = expr.begin();
		_iter_begin_5554460224:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_FnDecl> _22551ab31_decl = *it;
			{
				_22013_methods.push(_22551ab31_build_fn(_22551ab31_decl));
			}
			_iter_next_5554460224:;
			++it;
			goto _iter_begin_5554460224;
		}
		_iter_end_5554460224:;
	}
	return _22013_methods;
}



inline jule::Ptr<_2255ab70a_Trait> _22551ab31_build_trait(jule::Ptr<_23e45734a_TraitDecl> _22720_decl) {
	return jule::new_struct_ptr<_2255ab70a_Trait>(new( std::nothrow ) _2255ab70a_Trait(_22720_decl->_field_token,_22720_decl->_field_ident,_22720_decl->_field_public,jule::Bool(),_22551ab31_build_doc(_22720_decl->_field_doc_comments),_22551ab31_build_methods(_22720_decl->_field_methods),jule::Slice<jule::Ptr<_225036509_Struct>>()));
}



inline jule::Ptr<_2255aae79_EnumItem> _22551ab31_build_enum_item(jule::Ptr<_23e45734a_EnumItemDecl> _23724_decl) {
	return jule::new_struct<_2255aae79_EnumItem>(new( std::nothrow ) _2255aae79_EnumItem(_23724_decl->_field_token,_23724_decl->_field_ident,_22551ab31_build_expr(_23724_decl->_field_expr)));
}



inline jule::Slice<jule::Ptr<_2255aae79_EnumItem>> _22551ab31_build_enum_items(jule::Slice<jule::Ptr<_23e45734a_EnumItemDecl>>& _24526_decls) {
	jule::Slice<jule::Ptr<_2255aae79_EnumItem>> _24613_items = jule::Slice<jule::Ptr<_2255aae79_EnumItem>>::alloc(0LL,static_cast<jule::I64>(_24526_decls.len()));
	{
		auto &expr = _24526_decls;
		auto it = expr.begin();
		_iter_begin_5554467952:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_EnumItemDecl> _22551ab31_decl = *it;
			{
				_24613_items.push(_22551ab31_build_enum_item(_22551ab31_decl));
			}
			_iter_next_5554467952:;
			++it;
			goto _iter_begin_5554467952;
		}
		_iter_end_5554467952:;
	}
	return _24613_items;
}



inline jule::Ptr<_2255aae79_Enum> _22551ab31_build_enum(jule::Ptr<_23e45734a_EnumDecl> _25319_decl) {
	return jule::new_struct_ptr<_2255aae79_Enum>(new( std::nothrow ) _2255aae79_Enum(_25319_decl->_field_token,_25319_decl->_field_public,_25319_decl->_field_ident,_22551ab31_build_type(_25319_decl->_field_kind),_22551ab31_build_enum_items(_25319_decl->_field_items),_22551ab31_build_doc(_25319_decl->_field_doc_comments)));
}



inline jule::Ptr<_2258258db_Var> _22551ab31_build_var(jule::Ptr<_23e45734a_VarDecl> _26418_decl) {
	return jule::new_struct<_2258258db_Var>(new( std::nothrow ) _2258258db_Var(jule::Ptr<_2255ba3ea_Scope>(),_26418_decl->_field_token,_26418_decl->_field_ident,_26418_decl->_field_cpp_linked,_26418_decl->_field_constant,_26418_decl->_field_mutable,_26418_decl->_field_public,jule::Bool(),_26418_decl->_field_statically,_26418_decl->_field_reference,_22551ab31_build_doc(_26418_decl->_field_doc_comments),_22551ab31_build_type(_26418_decl->_field_kind),_22551ab31_build_expr(_26418_decl->_field_expr),_22551ab31_ReferenceStack::_static_method_new(),_26418_decl->_field_directives,jule::Ptr<_2258258db_IterRelation>(),jule::Slice<jule::Ptr<_2258258db_Var>>()));
}



inline jule::Slice<jule::Ptr<_2258258db_Var>> _22551ab31_build_vars(jule::Slice<jule::Ptr<_23e45734a_VarDecl>> _28219_decls) {
	jule::Slice<jule::Ptr<_2258258db_Var>> _28313_vars = jule::Slice<jule::Ptr<_2258258db_Var>>::alloc(0LL,static_cast<jule::I64>(_28219_decls.len()));
	{
		auto &expr = _28219_decls;
		auto it = expr.begin();
		_iter_begin_5554480592:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_VarDecl> _22551ab31_decl = *it;
			{
				_28313_vars.push(_22551ab31_build_var(_22551ab31_decl));
			}
			_iter_next_5554480592:;
			++it;
			goto _iter_begin_5554480592;
		}
		_iter_end_5554480592:;
	}
	return _28313_vars;
}



inline jule::Ptr<_2255b811d_Impl> _22551ab31_build_impl(jule::Ptr<_23e45734a_Impl> _29019_decl) {
	return jule::new_struct<_2255b811d_Impl>(new( std::nothrow ) _2255b811d_Impl(_29019_decl->_field_base,_29019_decl->_field_dest,_22551ab31_build_methods(_29019_decl->_field_methods),_22551ab31_build_vars(_29019_decl->_field_statics)));
}



inline jule::Ptr<_2255ba3ea_ScopeChecker> _2255ba3ea_new_scope_checker_base(jule::Ptr<_22579574b_Sema>& _4132_s,jule::Ptr<_2252d6a73_FnIns> _4146_owner) {
	return jule::new_struct_ptr<_2255ba3ea_ScopeChecker>(new( std::nothrow ) _2255ba3ea_ScopeChecker(_4132_s,_4146_owner,jule::Ptr<_2255ba3ea_ScopeChecker>(),jule::Int(),jule::new_struct<_225a097a1_SymbolTable>(new( std::nothrow ) _225a097a1_SymbolTable()),jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_23e45734a_ScopeTree>(),jule::Ptr<_23e2b5818_TypeKind>(),jule::Uintptr(),jule::Uintptr(),jule::Ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ptr<_2255ba3ea_ScopeChecker> _2255ba3ea_new_scope_checker(jule::Ptr<_22579574b_Sema>& _4927_s,jule::Ptr<_2252d6a73_FnIns> _4941_owner) {
	jule::Ptr<_2255ba3ea_ScopeChecker> _5013_base = _2255ba3ea_new_scope_checker_base(_4927_s,_4941_owner);
	_5013_base->_field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeLabel>>>(nullptr);
	_5013_base->_field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2255ba3ea_ScopeGoto>>>(nullptr);
	return _5013_base;
}



inline jule::Ptr<_2255ba3ea_ScopeLabel> _2255ba3ea_find_label_parent(jule::Str _5922_ident,jule::Ptr<_2255ba3ea_ScopeChecker> _5938_scope) {
	jule::Ptr<_2255ba3ea_ScopeLabel> _6013_label = _5938_scope->_method_find_label_scope(_5922_ident);
	while (_6013_label == nullptr) {
		{
			if ((_5938_scope->_field_parent == nullptr) || (_5938_scope->_field_owner != nullptr)) {
				return nullptr;
			}
			_5938_scope=_5938_scope->_field_parent;
			_6013_label=_5938_scope->_method_find_label_scope(_5922_ident);
		}
	_iter_next_5554490128:;
	}
	_iter_end_5554490128:;
	return _6013_label;
}



inline jule::Bool _2255ba3ea_stmt_is_goto_scope(jule::Any& _7324_stmt,jule::Ptr<_2255ba3ea_Scope>& _7336_sc) {
	{
		auto &_match_expr{ _7324_stmt };
		if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Scope>>()) {
			_case_begin_5554498560:;
			{
				return _7324_stmt.operator jule::Ptr<_2255ba3ea_Scope>() == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_InfIter>>()) {
			_case_begin_5554497344:;
			{
				return _7324_stmt.operator jule::Ptr<_2255ba3ea_InfIter>()->_field_scope == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_RangeIter>>()) {
			_case_begin_5554497440:;
			{
				return _7324_stmt.operator jule::Ptr<_2255ba3ea_RangeIter>()->_field_scope == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_WhileIter>>()) {
			_case_begin_5554497536:;
			{
				return _7324_stmt.operator jule::Ptr<_2255ba3ea_WhileIter>()->_field_scope == _7336_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Match>>()) {
			_case_begin_5554497632:;
			{
				jule::Ptr<_2255ba3ea_Match> _8813_m = _7324_stmt.operator jule::Ptr<_2255ba3ea_Match>();
				{
					auto &expr = _8813_m->_field_cases;
					auto it = expr.begin();
					_iter_begin_5554507424:;
					if (it != expr.end()) {
						jule::Ptr<_2255ba3ea_Case> &_2255ba3ea_c = *it;
						{
							if (_2255ba3ea_c->_field_scope == _7336_sc) {
								return true;
							}
						}
						_iter_next_5554507424:;
						++it;
						goto _iter_begin_5554507424;
					}
					_iter_end_5554507424:;
				}
				return (_8813_m->_field_default != nullptr) && (_8813_m->_field_default->_field_scope == _7336_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Conditional>>()) {
			_case_begin_5554497856:;
			{
				jule::Ptr<_2255ba3ea_Conditional> _9713_c = _7324_stmt.operator jule::Ptr<_2255ba3ea_Conditional>();
				{
					auto &expr = _9713_c->_field_elifs;
					auto it = expr.begin();
					_iter_begin_5554511520:;
					if (it != expr.end()) {
						jule::Ptr<_2255ba3ea_If> &_2255ba3ea_elif = *it;
						{
							if (_2255ba3ea_elif->_field_scope == _7336_sc) {
								return true;
							}
						}
						_iter_next_5554511520:;
						++it;
						goto _iter_begin_5554511520;
					}
					_iter_end_5554511520:;
				}
				return (_9713_c->_field_default != nullptr) && (_9713_c->_field_default->_field_scope == _7336_sc);
			}
		}
		else {
			_case_begin_5554493472:;
			{
				return false;
			}
		}
		_match_end_5554496816:;
	}
}



inline jule::Int _2255ba3ea_count_match_type(jule::Ptr<_2255ba3ea_Match>& _11022_m,jule::Ptr<_23e2b5818_TypeKind>& _11034_t) {
	jule::Int _11113_n = 0LL;
	jule::Str _1129_kind = _11034_t->_method_to_str();
	_julec_label_loop:;
	{
		auto &expr = _11022_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_5554516864:;
		if (it != expr.end()) {
			jule::Ptr<_2255ba3ea_Case> &_2255ba3ea_c = *it;
			{
				if (_2255ba3ea_c == nullptr) {
					goto _iter_next_5554516864;
				}
				{
					auto &expr = _2255ba3ea_c->_field_exprs;
					auto it = expr.begin();
					_iter_begin_5554518192:;
					if (it != expr.end()) {
						jule::Ptr<_225aa4a5a_Data> &_2255ba3ea_expr = *it;
						{
							if (_2255ba3ea_expr == nullptr) {
								goto _iter_end_5554516864;
							}
							if (_1129_kind == _2255ba3ea_expr->_field_model.operator jule::Ptr<_23e2b5818_TypeKind>()->_method_to_str()) {
								(_11113_n)++;
							}
						}
						_iter_next_5554518192:;
						++it;
						goto _iter_begin_5554518192;
					}
					_iter_end_5554518192:;
				}
			}
			_iter_next_5554516864:;
			++it;
			goto _iter_begin_5554516864;
		}
		_iter_end_5554516864:;
	}
	return _11113_n;
}



inline jule::Slice<jule::Ptr<_225aa4a5a_Data>> _2255ba3ea_get_datas_from_tuple_data(jule::Ptr<_225aa4a5a_Data>& _13435_d) {
	if (_13435_d->_field_kind->_method_tup() != nullptr) {
		{
			auto &_match_expr{ _13435_d->_field_model };
			if (_match_expr.type_is<jule::Ptr<_2255b85b3_TupleExprModel>>()) {
				_case_begin_5554527824:;
				{
					return _13435_d->_field_model.operator jule::Ptr<_2255b85b3_TupleExprModel>()->_field_datas;
				}
			}
			else {
				_case_begin_5554523312:;
				{
					jule::Ptr<_23e2b5818_Tuple> _14121_t = _13435_d->_field_kind->_method_tup();
					jule::Slice<jule::Ptr<_225aa4a5a_Data>> _14221_r = jule::Slice<jule::Ptr<_225aa4a5a_Data>>::alloc(0LL,static_cast<jule::I64>(_14121_t->_field_types.len()));
					{
						auto &expr = _14121_t->_field_types;
						auto it = expr.begin();
						_iter_begin_5554527152:;
						if (it != expr.end()) {
							jule::Ptr<_23e2b5818_TypeKind> _2255ba3ea_kind = *it;
							{
								_14221_r.push(jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(_2255ba3ea_kind,jule::Ptr<_23e2b5818_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>())));
							}
							_iter_next_5554527152:;
							++it;
							goto _iter_begin_5554527152;
						}
						_iter_end_5554527152:;
					}
					return _14221_r;
				}
			}
			_match_end_5554523664:;
		}
	} else {
		return jule::Slice<jule::Ptr<_225aa4a5a_Data>>({_13435_d});
	}
}



inline jule::Slice<jule::Any> _2255ba3ea_get_expr_models(jule::Any& _15625_m) {
	{
		auto &_match_expr{ _15625_m };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_TupleExpr>>()) {
			_case_begin_5554533488:;
			{
				jule::Ptr<_23e45734a_TupleExpr> _15917_tup = _15625_m.operator jule::Ptr<_23e45734a_TupleExpr>();
				jule::Slice<jule::Any> _16017_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_15917_tup->_field_expr.len()));
				{
					auto &expr = _15917_tup->_field_expr;
					auto it = expr.begin();
					_iter_begin_5554537632:;
					if (it != expr.end()) {
						jule::Ptr<_23e45734a_Expr> _2255ba3ea_expr = *it;
						{
							_16017_models.push(_2255ba3ea_expr->_field_kind);
						}
						_iter_next_5554537632:;
						++it;
						goto _iter_begin_5554537632;
					}
					_iter_end_5554537632:;
				}
				return _16017_models;
			}
		}
		else {
			_case_begin_5554532160:;
			{
				return jule::Slice<jule::Any>({_15625_m});
			}
		}
		_match_end_5554519952:;
	}
}



inline jule::Bool _2255ba3ea_check_mut(jule::Ptr<_22579574b_Sema>& _17119_s,jule::Ptr<_225aa4a5a_Data>& _17130_left,jule::Ptr<_225aa4a5a_Data> _17147_right,_23e730c0b_Token _17161_error_token) {
	jule::Bool _17183_ok = jule::Bool();
	{
		if ((!(_17130_left->_field_mutable))) {
			_case_begin_5554543024:;
			{
				_17119_s->_method_push_err(_17161_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>());
				_17183_ok = false;
				return _17183_ok;
			}
		}
		else if (((_17147_right != nullptr) && (!(_17147_right->_field_mutable))) && _17147_right->_field_kind->_method_mutable()) {
			_case_begin_5554543216:;
			{
				_17119_s->_method_push_err(_17161_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>());
				_17183_ok = false;
				return _17183_ok;
			}
		}
		else {
			_case_begin_5554541568:;
			{
				_17183_ok = true;
				return _17183_ok;
			}
		}
		_match_end_5554541392:;
	}
}



inline jule::Bool _2255ba3ea_check_assign(jule::Ptr<_22579574b_Sema>& _18622_s,jule::Ptr<_225aa4a5a_Data>& _18637_left,jule::Ptr<_225aa4a5a_Data> _18654_right,_23e730c0b_Token _18668_error_token) {
	jule::Bool _18690_ok = jule::Bool();
	jule::Ptr<_2252d6a73_FnIns> _1879_f = _18637_left->_field_kind->_method_fnc();
	if (((_1879_f != nullptr) && (_1879_f->_field_decl != nullptr)) && _1879_f->_field_decl->_field_global) {
		_18622_s->_method_push_err(_18668_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_18690_ok = false;
		return _18690_ok;
	}
	{
		if (_18637_left->_method_is_const()) {
			_case_begin_5554557600:;
			{
				_18622_s->_method_push_err(_18668_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_18622_s->_method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_18690_ok = false;
				return _18690_ok;
			}
		}
		else if ((!(_18637_left->_field_lvalue))) {
			_case_begin_5554557776:;
			{
				_18622_s->_method_push_err(_18668_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>());
				_18690_ok = false;
				return _18690_ok;
			}
		}
		else if ((!(_2255ba3ea_check_mut(_18622_s,_18637_left,_18654_right,_18668_error_token)))) {
			_case_begin_5554557872:;
			{
				_18690_ok = false;
				return _18690_ok;
			}
		}
		else {
			_case_begin_5554553792:;
			{
				_18690_ok = true;
				return _18690_ok;
			}
		}
		_match_end_5554555984:;
	}
}



inline jule::Bool _2255ba3ea_is_valid_ast_st_for_next_st(jule::Any& _21137_n) {
	{
		auto &_match_expr{ _21137_n };
		if (_match_expr.type_is<jule::Ptr<_23e45734a_AssignSt>>()) {
			_case_begin_5554566608:;
			{
				return (!(_21137_n.operator jule::Ptr<_23e45734a_AssignSt>()->_field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_23e45734a_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_23e45734a_Expr>>()) {
			_case_begin_5554566704:;
			{
				return true;
			}
		}
		else {
			_case_begin_5554551184:;
			{
				return false;
			}
		}
		_match_end_5554558576:;
	}
}



inline jule::Bool _2255ba3ea_is_valid_st_for_next_st(jule::Any& _22529_st) {
	{
		auto &_match_expr{ _22529_st };
		if (_match_expr.type_is<jule::Ptr<_2255b85b3_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_2255ba3ea_Postfix>>() || _match_expr.type_is<jule::Ptr<_2255ba3ea_Assign>>() || _match_expr.type_is<jule::Ptr<_2255ba3ea_MultiAssign>>()) {
			_case_begin_5554570432:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225aa4a5a_Data>>()) {
			_case_begin_5554570528:;
			{
				{
					auto &_match_expr{ _22529_st.operator jule::Ptr<_225aa4a5a_Data>()->_field_model };
					if (_match_expr.type_is<jule::Ptr<_2255b85b3_FnCallExprModel>>()) {
						_case_begin_5554578752:;
						{
							return true;
						}
					}
					else {
						_case_begin_5554576512:;
						{
							return false;
						}
					}
					_match_end_5554577168:;
				}
			}
		}
		else {
			_case_begin_5554567072:;
			{
				return false;
			}
		}
		_match_end_5554569168:;
	}
}



inline jule::Bool _2255ba3ea_st_is_def(jule::Any& _24415_st) {
	{
		auto &_match_expr{ _24415_st };
		if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
			_case_begin_5554579344:;
			{
				return true;
			}
		}
		else {
			_case_begin_5554576192:;
			{
				return false;
			}
		}
		_match_end_5554578448:;
	}
}



inline jule::Ptr<_2258258db_Var> _225615962_find_var_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>& _2729_files,jule::Str _2752_ident,jule::Bool _2764_cpp_linked) {
	{
		auto &expr = _2729_files;
		auto it = expr.begin();
		_iter_begin_5554581824:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _225615962_f = *it;
			{
				jule::Ptr<_2258258db_Var> _2917_v = _225615962_f->_method_find_var(_2752_ident,_2764_cpp_linked);
				if (_2917_v != nullptr) {
					return _2917_v;
				}
			}
			_iter_next_5554581824:;
			++it;
			goto _iter_begin_5554581824;
		}
		_iter_end_5554581824:;
	}
	return nullptr;
}



inline jule::Ptr<_23e2b5818_TypeAlias> _225615962_find_type_alias_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>& _3936_files,jule::Str _3959_ident,jule::Bool _3971_cpp_linked) {
	{
		auto &expr = _3936_files;
		auto it = expr.begin();
		_iter_begin_5554586320:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _225615962_f = *it;
			{
				jule::Ptr<_23e2b5818_TypeAlias> _4117_ta = _225615962_f->_method_find_type_alias(_3959_ident,_3971_cpp_linked);
				if (_4117_ta != nullptr) {
					return _4117_ta;
				}
			}
			_iter_next_5554586320:;
			++it;
			goto _iter_begin_5554586320;
		}
		_iter_end_5554586320:;
	}
	return nullptr;
}



inline jule::Ptr<_225036509_Struct> _225615962_find_struct_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>& _5132_files,jule::Str _5155_ident,jule::Bool _5167_cpp_linked) {
	{
		auto &expr = _5132_files;
		auto it = expr.begin();
		_iter_begin_5554591968:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _225615962_f = *it;
			{
				jule::Ptr<_225036509_Struct> _5317_s = _225615962_f->_method_find_struct(_5155_ident,_5167_cpp_linked);
				if (_5317_s != nullptr) {
					return _5317_s;
				}
			}
			_iter_next_5554591968:;
			++it;
			goto _iter_begin_5554591968;
		}
		_iter_end_5554591968:;
	}
	return nullptr;
}



inline jule::Ptr<_2252d6a73_Fn> _225615962_find_fn_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>& _6328_files,jule::Str _6351_ident,jule::Bool _6363_cpp_linked) {
	{
		auto &expr = _6328_files;
		auto it = expr.begin();
		_iter_begin_5554597616:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _225615962_file = *it;
			{
				jule::Ptr<_2252d6a73_Fn> _6517_f = _225615962_file->_method_find_fn(_6351_ident,_6363_cpp_linked);
				if (_6517_f != nullptr) {
					return _6517_f;
				}
			}
			_iter_next_5554597616:;
			++it;
			goto _iter_begin_5554597616;
		}
		_iter_end_5554597616:;
	}
	return nullptr;
}



inline jule::Ptr<_2255ab70a_Trait> _225615962_find_trait_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>& _7531_files,jule::Str _7554_ident) {
	{
		auto &expr = _7531_files;
		auto it = expr.begin();
		_iter_begin_5554604336:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _225615962_f = *it;
			{
				jule::Ptr<_2255ab70a_Trait> _7717_t = _225615962_f->_method_find_trait(_7554_ident);
				if (_7717_t != nullptr) {
					return _7717_t;
				}
			}
			_iter_next_5554604336:;
			++it;
			goto _iter_begin_5554604336;
		}
		_iter_end_5554604336:;
	}
	return nullptr;
}



inline jule::Ptr<_2255aae79_Enum> _225615962_find_enum_in_package(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>& _8730_files,jule::Str _8753_ident) {
	{
		auto &expr = _8730_files;
		auto it = expr.begin();
		_iter_begin_5554604992:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _225615962_f = *it;
			{
				jule::Ptr<_2255aae79_Enum> _8917_e = _225615962_f->_method_find_enum(_8753_ident);
				if (_8917_e != nullptr) {
					return _8917_e;
				}
			}
			_iter_next_5554604992:;
			++it;
			goto _iter_begin_5554604992;
		}
		_iter_end_5554604992:;
	}
	return nullptr;
}



inline jule::Bool _22579574b_is_valid_model_for_ref(jule::Any _1627_m) {
	{
		auto &_match_expr{ _1627_m };
		if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
			_case_begin_5554614544:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_StructSubIdentExprModel>>()) {
			_case_begin_5554614640:;
			{
				jule::Ptr<_2255b85b3_StructSubIdentExprModel> _2213_model = _1627_m.operator jule::Ptr<_2255b85b3_StructSubIdentExprModel>();
				return _22579574b_is_valid_model_for_ref(_2213_model->_field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_TraitSubIdentExprModel>>()) {
			_case_begin_5554614800:;
			{
				jule::Ptr<_2255b85b3_TraitSubIdentExprModel> _2613_model = _1627_m.operator jule::Ptr<_2255b85b3_TraitSubIdentExprModel>();
				return _22579574b_is_valid_model_for_ref(_2613_model->_field_expr);
			}
		}
		else {
			_case_begin_5554613776:;
			{
				return false;
			}
		}
		_match_end_5554608080:;
	}
}



inline _23ceb0c1d_Log _22579574b_compiler_err(_23e730c0b_Token& _3418_token,jule::Bool _3432_line,jule::Str _3444_fmt,jule::Slice<jule::Any> _3457_args) {
	_23ceb0c1d_Log _3513_log = _23ceb0c1d_Log(1LLU,_3418_token._field_row,_3418_token._field_column,_3418_token._field_file->_method_path(),_23ceb0c1d_logf(_3444_fmt,_3457_args),jule::Str(),jule::Str());
	if (_3432_line) {
		_3513_log._field_line=_3418_token._field_file->_method_get_row(_3418_token._field_row);
	}
	return _3513_log;
}



inline jule::Bool _22579574b_imp_is_lookupable(jule::Ptr<_225615962_ImportInfo>& _4823_i,jule::Str _4839_ident) {
	if (_4823_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_4823_i->_field_import_all))) {
		if (_4823_i->_field_selected.len() > 0LL) {
			return _4823_i->_method_exist_ident(_4839_ident);
		}
	}
	return _4823_i->_field_import_all;
}



inline jule::Slice<jule::Ptr<_2258258db_Var>> _22579574b_build_ret_vars(jule::Ptr<_2252d6a73_FnIns>& _6124_f) {
	if (_6124_f->_field_decl->_method_is_void() || (_6124_f->_field_result == nullptr)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_2258258db_Var>> _6613_vars = nullptr;
	jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> _6713_types = _22582290a_get_result_types(_6124_f->_field_result);
	{
		auto &expr = _6124_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_5554637792:;
		if (it != expr.end()) {
			jule::Int _22579574b_i = it - expr.begin();
			_23e730c0b_Token _22579574b_ident = *it;
			{
				if (_23e730c0b_is_ignore_ident(_22579574b_ident._field_kind)) {
					goto _iter_next_5554637792;
				}
				jule::Ptr<_2258258db_Var> _7317_v = jule::new_struct<_2258258db_Var>(new( std::nothrow ) _2258258db_Var(_6124_f->_field_scope,_22579574b_ident,_22579574b_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),_6713_types[_22579574b_i])),jule::new_struct<_225aa4a5a_Value>(new( std::nothrow ) _225aa4a5a_Value(jule::Ptr<_23e45734a_Expr>(),jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data()))),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Ptr<_2258258db_IterRelation>(),jule::Slice<jule::Ptr<_2258258db_Var>>()));
				_6613_vars.push(_7317_v);
			}
			_iter_next_5554637792:;
			++it;
			_22579574b_i++;
			goto _iter_begin_5554637792;
		}
		_iter_end_5554637792:;
	}
	return _6613_vars;
}



inline jule::Slice<jule::Ptr<_2258258db_Var>> _22579574b_build_param_vars(jule::Ptr<_2252d6a73_FnIns>& _9026_f) {
	if (_9026_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_2258258db_Var>> _9513_vars = jule::Slice<jule::Ptr<_2258258db_Var>>::alloc(0LL,static_cast<jule::I64>(_9026_f->_field_params.len()));
	{
		auto &expr = _9026_f->_field_params;
		auto it = expr.begin();
		_iter_begin_5554639424:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_ParamIns> _22579574b_p = *it;
			{
				jule::Ptr<_2258258db_Var> _9717_v = jule::new_struct<_2258258db_Var>(new( std::nothrow ) _2258258db_Var(_9026_f->_field_scope,_22579574b_p->_field_decl->_field_token,_22579574b_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_22579574b_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),_22579574b_p->_field_decl->_field_reference,jule::Str(),jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol()),jule::new_struct<_225aa4a5a_Value>(new( std::nothrow ) _225aa4a5a_Value(jule::Ptr<_23e45734a_Expr>(),jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data()))),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Ptr<_2258258db_IterRelation>(),jule::Slice<jule::Ptr<_2258258db_Var>>()));
				{
					if (_22579574b_p->_field_decl->_method_is_self()) {
						_case_begin_5554652784:;
						{
							_9717_v->_field_kind->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_9026_f->_field_owner));
							_9717_v->_field_reference=true;
							if (_22579574b_p->_field_decl->_method_is_ref()) {
								_9717_v->_field_ident=_9717_v->_field_ident.slice(1LL);
								_9717_v->_field_kind->_field_kind->_field_kind=jule::new_struct_ptr<_23e2b5818_Sptr>(new( std::nothrow ) _23e2b5818_Sptr(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(_9717_v->_field_kind->_field_kind->_field_cpp_ident,jule::Bool(),jule::Bool(),_9717_v->_field_kind->_field_kind->_field_kind))));
							}
						}
					}
					else if (_22579574b_p->_field_decl->_field_variadic) {
						_case_begin_5554653744:;
						{
							_9717_v->_field_kind->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_23e2b5818_Slc>(new( std::nothrow ) _23e2b5818_Slc(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(_22579574b_p->_field_kind->_field_cpp_ident,jule::Bool(),jule::Bool(),_22579574b_p->_field_kind->_field_kind))))));
						}
					}
					else {
						_case_begin_5554651984:;
						{
							_9717_v->_field_kind->_field_kind=_22579574b_p->_field_kind;
						}
					}
					_match_end_5554651872:;
				}
				_9513_vars.push(_9717_v);
			}
			_iter_next_5554639424:;
			++it;
			goto _iter_begin_5554639424;
		}
		_iter_end_5554639424:;
	}
	return _9513_vars;
}



inline jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>> _22579574b_build_generic_type_aliases(jule::Ptr<_2252d6a73_FnIns>& _14536_f) {
	jule::I64 _14613_size = _14536_f->_field_generics.len();
	if (_14536_f->_field_decl->_field_owner != nullptr) {
		_14613_size+=static_cast<jule::I64>(_14536_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_14613_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>> _15513_aliases = jule::Slice<jule::Ptr<_23e2b5818_TypeAlias>>::alloc(0LL,_14613_size);
	{
		auto &expr = _14536_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_5554665488:;
		if (it != expr.end()) {
			jule::Int _22579574b_i = it - expr.begin();
			jule::Ptr<_23e2b5818_TypeKind> _22579574b_g = *it;
			{
				jule::Ptr<_23e45734a_GenericDecl> _15817_decl = _14536_f->_field_decl->_field_generics[_22579574b_i];
				_15513_aliases.push(jule::new_struct<_23e2b5818_TypeAlias>(new( std::nothrow ) _23e2b5818_TypeAlias(_14536_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_15817_decl->_field_token,_15817_decl->_field_ident,jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),_22579574b_g)),jule::Str(),jule::Slice<jule::Any>())));
			}
			_iter_next_5554665488:;
			++it;
			_22579574b_i++;
			goto _iter_begin_5554665488;
		}
		_iter_end_5554665488:;
	}
	if (_14536_f->_field_decl->_field_owner != nullptr) {
		jule::Ptr<_225036509_StructIns> _17017_owner = _14536_f->_field_owner;
		{
			auto &expr = _17017_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_5554669888:;
			if (it != expr.end()) {
				jule::Int _22579574b_i = it - expr.begin();
				jule::Ptr<_23e2b5818_TypeKind> _22579574b_g = *it;
				{
					jule::Ptr<_23e45734a_GenericDecl> _17221_decl = _17017_owner->_field_decl->_field_generics[_22579574b_i];
					_15513_aliases.push(jule::new_struct<_23e2b5818_TypeAlias>(new( std::nothrow ) _23e2b5818_TypeAlias(_14536_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_17221_decl->_field_token,_17221_decl->_field_ident,jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),_22579574b_g)),jule::Str(),jule::Slice<jule::Any>())));
				}
				_iter_next_5554669888:;
				++it;
				_22579574b_i++;
				goto _iter_begin_5554669888;
			}
			_iter_end_5554669888:;
		}
	}
	return _15513_aliases;
}



inline jule::Ptr<_225a097a1_SymbolTable> _22579574b_find_file(jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>& _18719_files,jule::Ptr<_23e4593c4_File>& _18743_handler) {
	{
		auto &expr = _18719_files;
		auto it = expr.begin();
		_iter_begin_5554675360:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _22579574b_fl = *it;
			{
				if (_22579574b_fl->_field_file == _18743_handler) {
					return _22579574b_fl;
				}
			}
			_iter_next_5554675360:;
			++it;
			goto _iter_begin_5554675360;
		}
		_iter_end_5554675360:;
	}
	return nullptr;
}



inline std::tuple<jule::Bool,jule::Bool> _22579574b_conditional_has_ret(jule::Ptr<_2255ba3ea_Conditional> _19628_c) {
	jule::Bool _19647_ok = jule::Bool();
	jule::Bool _19657_breaking = jule::Bool();
	jule::Bool _19713_breaked = false;
	{
		auto &expr = _19628_c->_field_elifs;
		auto it = expr.begin();
		_iter_begin_5554681632:;
		if (it != expr.end()) {
			jule::Ptr<_2255ba3ea_If> _22579574b_elif = *it;
			{
				if (_22579574b_elif == nullptr) {
					_19647_ok = false;
					_19657_breaking = false;
					return std::make_tuple(_19647_ok,_19657_breaking);
				}
				std::tie(_19647_ok,std::ignore,_19657_breaking) = _22579574b___has_ret(_22579574b_elif->_field_scope);
				_19713_breaked=_19713_breaked || _19657_breaking;
				if ((!(_19647_ok))) {
					_19647_ok = false;
					_19657_breaking = _19713_breaked;
					return std::make_tuple(_19647_ok,_19657_breaking);
				}
			}
			_iter_next_5554681632:;
			++it;
			goto _iter_begin_5554681632;
		}
		_iter_end_5554681632:;
	}
	if (_19628_c->_field_default == nullptr) {
		_19647_ok = false;
		_19657_breaking = _19713_breaked;
		return std::make_tuple(_19647_ok,_19657_breaking);
	}
	std::tie(_19647_ok,std::ignore,_19657_breaking) = _22579574b___has_ret(_19628_c->_field_default->_field_scope);
	_19713_breaked=_19713_breaked || _19657_breaking;
	_19657_breaking = _19713_breaked;
	return std::make_tuple(_19647_ok,_19657_breaking);
}



inline jule::Bool _22579574b_match_has_ret(jule::Ptr<_2255ba3ea_Match> _21822_m) {
	if (_21822_m->_field_default == nullptr) {
		return false;
	}
	jule::Bool _22313_ok = true;
	jule::Bool _22413_falled = false;
	jule::Bool _22513_breaked = false;
	{
		auto &expr = _21822_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_5554693120:;
		if (it != expr.end()) {
			jule::Ptr<_2255ba3ea_Case> _22579574b_c = *it;
			{
				if (_22579574b_c == nullptr) {
					return false;
				}
				std::tie(_22313_ok,_22413_falled,_22513_breaked) = _22579574b___has_ret(_22579574b_c->_field_scope);
				if (((!(_22313_ok)) && (!(_22413_falled))) || _22513_breaked) {
					return false;
				}
				{
					if ((!(_22313_ok))) {
						_case_begin_5554697200:;
						{
							if ((!(_22413_falled))) {
								return false;
							}
							goto _case_begin_5554697296;
						}
					}
					else if (_22413_falled) {
						_case_begin_5554697296:;
						{
							if (_22579574b_c->_field_next == nullptr) {
								return false;
							}
							goto _iter_next_5554693120;
						}
					}
					_match_end_5554697072:;
				}
				_22413_falled=false;
			}
			_iter_next_5554693120:;
			++it;
			goto _iter_begin_5554693120;
		}
		_iter_end_5554693120:;
	}
	return _22579574b_has_ret(_21822_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _22579574b___has_ret(jule::Ptr<_2255ba3ea_Scope> _25418_s) {
	jule::Bool _25431_ok = jule::Bool();
	jule::Bool _25441_falled = jule::Bool();
	jule::Bool _25455_breaked = jule::Bool();
	if (_25418_s == nullptr) {
		_25431_ok = false;
		_25441_falled = false;
		_25455_breaked = false;
		return std::make_tuple(_25431_ok,_25441_falled,_25455_breaked);
	}
	{
		auto &expr = _25418_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_5554703360:;
		if (it != expr.end()) {
			jule::Any _22579574b_st = *it;
			{
				{
					auto &_match_expr{ _22579574b_st };
					if (_match_expr.type_is<jule::Ptr<_2255ba3ea_FallSt>>()) {
						_case_begin_5554705568:;
						{
							_25441_falled=true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_BreakSt>>()) {
						_case_begin_5554706208:;
						{
							_25431_ok = false;
							_25441_falled = false;
							_25455_breaked = true;
							return std::make_tuple(_25431_ok,_25441_falled,_25455_breaked);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ContSt>>()) {
						_case_begin_5554706304:;
						{
							_25431_ok = false;
							_25441_falled = false;
							_25455_breaked = true;
							return std::make_tuple(_25431_ok,_25441_falled,_25455_breaked);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_InfIter>>()) {
						_case_begin_5554706400:;
						{
							_25431_ok=_22579574b_has_ret(_22579574b_st.operator jule::Ptr<_2255ba3ea_InfIter>()->_field_scope);
							if (_25431_ok) {
								_25431_ok = true;
								_25441_falled = false;
								_25455_breaked = false;
								return std::make_tuple(_25431_ok,_25441_falled,_25455_breaked);
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_RetSt>>()) {
						_case_begin_5554706496:;
						{
							_25431_ok = true;
							return std::make_tuple(_25431_ok,_25441_falled,_25455_breaked);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Scope>>()) {
						_case_begin_5554706592:;
						{
							_25431_ok=_22579574b_has_ret(_22579574b_st.operator jule::Ptr<_2255ba3ea_Scope>());
							if (_25431_ok) {
								_25431_ok = true;
								_25441_falled = false;
								_25455_breaked = false;
								return std::make_tuple(_25431_ok,_25441_falled,_25455_breaked);
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_225aa4a5a_Data>>()) {
						_case_begin_5554706688:;
						{
							{
								auto &_match_expr{ _22579574b_st.operator jule::Ptr<_225aa4a5a_Data>()->_field_model };
								if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>>()) {
									_case_begin_5554717280:;
									{
										_25431_ok = true;
										return std::make_tuple(_25431_ok,_25441_falled,_25455_breaked);
									}
								}
								_match_end_5554722896:;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Conditional>>()) {
						_case_begin_5554706784:;
						{
							std::tie(_25431_ok,_25455_breaked) = _22579574b_conditional_has_ret(_22579574b_st.operator jule::Ptr<_2255ba3ea_Conditional>());
							if (_25431_ok) {
								_25431_ok = true;
								_25441_falled = false;
								_25455_breaked = false;
								return std::make_tuple(_25431_ok,_25441_falled,_25455_breaked);
							}
							if (_25455_breaked) {
								_25431_ok = false;
								_25441_falled = false;
								return std::make_tuple(_25431_ok,_25441_falled,_25455_breaked);
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Match>>()) {
						_case_begin_5554706896:;
						{
							_25431_ok=_22579574b_match_has_ret(_22579574b_st.operator jule::Ptr<_2255ba3ea_Match>());
							if (_25431_ok) {
								_25431_ok = true;
								_25441_falled = false;
								_25455_breaked = false;
								return std::make_tuple(_25431_ok,_25441_falled,_25455_breaked);
							}
						}
					}
					_match_end_5554705936:;
				}
			}
			_iter_next_5554703360:;
			++it;
			goto _iter_begin_5554703360;
		}
		_iter_end_5554703360:;
	}
	_25431_ok = false;
	return std::make_tuple(_25431_ok,_25441_falled,_25455_breaked);
}



inline jule::Bool _22579574b_has_ret(jule::Ptr<_2255ba3ea_Scope> _31316_s) {
	jule::Bool _31410_ok;
	std::tie(_31410_ok,std::ignore,std::ignore) = _22579574b___has_ret(_31316_s);
	return _31410_ok;
}



inline void _22579574b_push_suggestion(_23ceb0c1d_Log* _31831_log,jule::Str _31842_fmt,jule::Slice<jule::Any> _31855_args) {
	_31831_log->_field_suggestion=_23ceb0c1d_logf(_31842_fmt,_31855_args);
}



inline jule::Slice<jule::Ptr<_23e2b5818_TypeKind>> _22582290a_get_result_types(jule::Ptr<_23e2b5818_TypeKind>& _2626_result) {
	{
		if (_2626_result == nullptr) {
			_case_begin_5554739616:;
			{
				return nullptr;
			}
		}
		else if (_2626_result->_method_tup() == nullptr) {
			_case_begin_5554739248:;
			{
				return jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>({_2626_result});
			}
		}
		else {
			_case_begin_5554738240:;
			{
				return _2626_result->_method_tup()->_field_types;
			}
		}
		_match_end_5554736768:;
	}
}



inline jule::Bool _22582290a_trait_has_reference_receiver(jule::Ptr<_2255ab70a_Trait>& _3934_t) {
	{
		auto &expr = _3934_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_5554741472:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> &_22582290a_f = *it;
			{
				if (_22582290a_f->_field_statically) {
					goto _iter_next_5554741472;
				}
				jule::Ptr<_2252d6a73_Param> _4613_p = _22582290a_f->_field_params[0LL];
				if (_4613_p->_method_is_ref() && _4613_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_5554741472:;
			++it;
			goto _iter_begin_5554741472;
		}
		_iter_end_5554741472:;
	}
	return false;
}



inline jule::Bool _22582290a_float_assignable(jule::Str _5421_kind,jule::Ptr<_225aa4a5a_Data>& _5433_d) {
	jule::Str _559_value = _23d12cd35_fmt_float(static_cast<jule::F64>(_5433_d->_field_constant->_method_as_f64()),'g',-1LL,64LL);
	return _226103eee_check_bit_float(_559_value,static_cast<jule::Int>(_226103eee_bitsize_of(_5421_kind)));
}



inline jule::Bool _22582290a_sig_assignable(jule::Str _5919_kind,jule::Ptr<_225aa4a5a_Data>& _5931_d) {
	jule::F64 _609_min = _226108454_min(_5919_kind);
	jule::F64 _619_max = _226108454_max(_5919_kind);
	{
		if (_5931_d->_field_constant->_method_is_f64()) {
			_case_begin_5554753696:;
			{
				jule::F64 _6513_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_f64());
				jule::F64 _6614_i;
				jule::F64 _6617_frac;
				std::tie(_6614_i,_6617_frac) = _23e29a699_modf(_6513_x);
				if (_6617_frac != 0LL) {
					return false;
				}
				return (_6614_i >= _609_min) && (_6614_i <= _619_max);
			}
		}
		else if (_5931_d->_field_constant->_method_is_u64()) {
			_case_begin_5554753792:;
			{
				jule::F64 _7313_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_u64());
				if (_7313_x <= _619_max) {
					return true;
				}
			}
		}
		else if (_5931_d->_field_constant->_method_is_i64()) {
			_case_begin_5554753888:;
			{
				jule::F64 _7913_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_i64());
				return (_609_min <= _7913_x) && (_7913_x <= _619_max);
			}
		}
		_match_end_5554753392:;
	}
	return false;
}



inline jule::Bool _22582290a_unsig_assignable(jule::Str _8621_kind,jule::Ptr<_225aa4a5a_Data>& _8633_d) {
	jule::F64 _879_max = _226108454_max(_8621_kind);
	if (_8633_d->_field_is_rune && (_8621_kind == jule::Str("u8", 2))) {
		return _22625b3ed_is_ascii(static_cast<jule::I32>(_8633_d->_field_constant->_method_read_i64()));
	}
	{
		if (_8633_d->_field_constant->_method_is_f64()) {
			_case_begin_5554767072:;
			{
				jule::F64 _9413_x = _8633_d->_field_constant->_method_read_f64();
				if (_9413_x < 0LL) {
					return false;
				}
				jule::F64 _9914_i;
				jule::F64 _9917_frac;
				std::tie(_9914_i,_9917_frac) = _23e29a699_modf(_9413_x);
				if (_9917_frac != 0LL) {
					return false;
				}
				return _9914_i <= _879_max;
			}
		}
		else if (_8633_d->_field_constant->_method_is_u64()) {
			_case_begin_5554767168:;
			{
				jule::F64 _10613_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_u64());
				if (_10613_x <= _879_max) {
					return true;
				}
			}
		}
		else if (_8633_d->_field_constant->_method_is_i64()) {
			_case_begin_5554767264:;
			{
				jule::F64 _11213_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_i64());
				return (0LL <= _11213_x) && (_11213_x <= _879_max);
			}
		}
		_match_end_5554766736:;
	}
	return false;
}



inline jule::Bool _22582290a_int_assignable(jule::Str _11919_kind,jule::Ptr<_225aa4a5a_Data>& _11931_d) {
	{
		if (_2261088d8_is_sig_int(_11919_kind)) {
			_case_begin_5554782944:;
			{
				return _22582290a_sig_assignable(_11919_kind,_11931_d);
			}
		}
		else if (_2261088d8_is_unsig_int(_11919_kind)) {
			_case_begin_5554783040:;
			{
				return _22582290a_unsig_assignable(_11919_kind,_11931_d);
			}
		}
		else {
			_case_begin_5554781056:;
			{
				return false;
			}
		}
		_match_end_5554780352:;
	}
}



inline jule::Any _225aa4a5a_find_builtins_import(jule::Str _4625_ident,jule::Ptr<_225615962_ImportInfo> _4637_imp) {
	return _22602dc1a_find_package_builtin_def(_4637_imp->_field_link_path,_4625_ident);
}



inline void _225aa4a5a_make_struct_lit_alloc(jule::Ptr<_225aa4a5a_Data>& _5031_d,jule::Ptr<_2255b85b3_StructLitExprModel>& _5046_lit) {
	_5031_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_23e2b5818_Sptr>(new( std::nothrow ) _23e2b5818_Sptr(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_5046_lit->_field_strct))))));
	_5031_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_AllocStructLitExprModel>(new( std::nothrow ) _2255b85b3_AllocStructLitExprModel(_5046_lit)));
}



inline jule::Ptr<_2258258db_Var> _225aa4a5a_build_error_var(jule::Ptr<_2255ba3ea_Scope>& _6225_s,jule::Ptr<_23e45734a_FnCallExpr>& _6241_fc) {
	return jule::new_struct<_2258258db_Var>(new( std::nothrow ) _2258258db_Var(_6225_s,_6241_fc->_field_token,jule::Str("error", 5),jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),false,jule::Str(),jule::new_struct<_23e2b5818_TypeSymbol>(new( std::nothrow ) _23e2b5818_TypeSymbol(jule::Ptr<_23e45734a_TypeDecl>(),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("any", 3)))))),jule::new_struct<_225aa4a5a_Value>(new( std::nothrow ) _225aa4a5a_Value(jule::Ptr<_23e45734a_Expr>(),jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data()))),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Slice<jule::Ptr<_23e45734a_Directive>>(),jule::Ptr<_2258258db_IterRelation>(),jule::Slice<jule::Ptr<_2258258db_Var>>()));
}



inline jule::Any _225aa4a5a_find_builtins_sema(jule::Str _8123_ident,jule::Ptr<_22579574b_Sema> _8139_s) {
	{
		auto &expr = _8139_s->_field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_5554794880:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _225aa4a5a_imp = *it;
			{
				if (_225aa4a5a_imp->_field_import_all || _225aa4a5a_imp->_method_exist_ident(_8123_ident)) {
					jule::Any _8421_def = _225aa4a5a_find_builtins_import(_8123_ident,_225aa4a5a_imp);
					if (_8421_def != nullptr) {
						return _8421_def;
					}
				}
			}
			_iter_next_5554794880:;
			++it;
			goto _iter_begin_5554794880;
		}
		_iter_end_5554794880:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _225aa4a5a_is_ok_for_shifting(jule::Ptr<_225aa4a5a_Data>& _9328_d) {
	jule::Ptr<_23e2b5818_Prim> _949_prim = _9328_d->_field_kind->_method_prim();
	if ((_949_prim == nullptr) || (!(_2261088d8_is_int(_949_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_9328_d->_method_is_const()))) {
		return true;
	}
	{
		if (_9328_d->_field_constant->_method_is_i64()) {
			_case_begin_5554806688:;
			{
				return _9328_d->_field_constant->_method_read_i64() >= 0LL;
			}
		}
		else if (_9328_d->_field_constant->_method_is_u64()) {
			_case_begin_5554806784:;
			{
				return true;
			}
		}
		else {
			_case_begin_5554804720:;
			{
				return false;
			}
		}
		_match_end_5554804496:;
	}
}



inline jule::Bool _225aa4a5a_is_instanced_struct(jule::Ptr<_225036509_StructIns> _11024_s) {
	return _11024_s->_field_decl->_field_generics.len() == _11024_s->_field_generics.len();
}



inline jule::Bool _225aa4a5a_is_ptr_arithmetic_compatible_int(jule::Ptr<_225aa4a5a_Data>& _11442_d) {
	if (_11442_d->_method_is_const()) {
		return _22582290a_int_assignable(jule::Str("int", 3),_11442_d);
	}
	_22582290a_TypeCompatibilityChecker _11813_tcc = _22582290a_TypeCompatibilityChecker(jule::Ptr<_22579574b_Sema>(),jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3)))),_11442_d->_field_kind,_23e730c0b_Token());
	return _11813_tcc._method_check();
}



inline void _225aa4a5a_normalize_bitsize(jule::Ptr<_225aa4a5a_Data>& _12527_d) {
	if ((!(_12527_d->_method_is_const()))) {
		return;
	}
	jule::Str _13013_kind = jule::Str();
	{
		if (_12527_d->_field_constant->_method_is_i64()) {
			_case_begin_5554821920:;
			{
				jule::I64 _13313_x = _12527_d->_field_constant->_method_read_i64();
				_13013_kind=_226103eee_int_from_bits(static_cast<jule::U64>(_226103eee_bitsize_of_int(_13313_x)));
			}
		}
		else if (_12527_d->_field_constant->_method_is_u64()) {
			_case_begin_5554822016:;
			{
				jule::U64 _13713_x = _12527_d->_field_constant->_method_read_u64();
				_13013_kind=_226103eee_uint_from_bits(static_cast<jule::U64>(_226103eee_bitsize_of_uint(_13713_x)));
			}
		}
		else {
			_case_begin_5554820928:;
			{
				return;
			}
		}
		_match_end_5554820688:;
	}
	if (_12527_d->_field_kind->_method_enm() != nullptr) {
		return;
	}
	_12527_d->_field_kind->_field_kind=_23e2b5818_build_prim_type(_13013_kind);
}



inline void _225aa4a5a_normalize_type(jule::Ptr<_225aa4a5a_Data>& _15224_d) {
	{
		if (_22582290a_int_assignable(jule::Str("int", 3),_15224_d)) {
			_case_begin_5554830848:;
			{
				_15224_d->_field_kind->_field_kind=_23e2b5818_build_prim_type(jule::Str("int", 3));
				_15224_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_15224_d->_field_constant->_method_as_f64()));
			}
		}
		else if (_22582290a_int_assignable(jule::Str("uint", 4),_15224_d)) {
			_case_begin_5554830960:;
			{
				_15224_d->_field_kind->_field_kind=_23e2b5818_build_prim_type(jule::Str("uint", 4));
				_15224_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_15224_d->_field_constant->_method_as_f64()));
			}
		}
		_match_end_5554830336:;
	}
}



inline void _225aa4a5a_apply_cast_kind_model(jule::Ptr<_225aa4a5a_Data>& _16431_d) {
	_16431_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_CastingExprModel>(new( std::nothrow ) _2255b85b3_CastingExprModel(_16431_d->_field_model,_16431_d->_field_cast_kind,_16431_d->_field_kind)));
}



inline void _225aa4a5a_apply_cast_kind(jule::Ptr<_225aa4a5a_Data>& _17225_d) {
	if (_17225_d->_field_cast_kind == nullptr) {
		return;
	}
	_225aa4a5a_apply_cast_kind_model(_17225_d);
	_17225_d->_field_kind=_17225_d->_field_cast_kind;
	_17225_d->_field_cast_kind=nullptr;
}



inline jule::Ptr<_225aa4a5a_Data> _225aa4a5a_build_void_data(void) {
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("void", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_226100d86_Const>()));
}



inline jule::Str _225aa4a5a_kind_by_bitsize(jule::Any _19320_expr) {
	{
		auto &_match_expr{ _19320_expr };
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_5554846160:;
			{
				jule::F64 _19613_x = _19320_expr.operator jule::F64();
				return _226103eee_float_from_bits(static_cast<jule::U64>(_226103eee_bitsize_of_float(_19613_x)));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_5554846352:;
			{
				jule::I64 _20013_x = _19320_expr.operator jule::I64();
				return _226103eee_int_from_bits(static_cast<jule::U64>(_226103eee_bitsize_of_int(_20013_x)));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_5554846448:;
			{
				jule::U64 _20413_x = _19320_expr.operator jule::U64();
				return _226103eee_uint_from_bits(static_cast<jule::U64>(_226103eee_bitsize_of_uint(_20413_x)));
			}
		}
		else {
			_case_begin_5554841552:;
			{
				return jule::Str();
			}
		}
		_match_end_5554843456:;
	}
}



inline jule::Str _225aa4a5a_check_data_for_integer_indexing(jule::Ptr<_225aa4a5a_Data>& _21241_d) {
	jule::Str _21253_err_fmt = jule::Str();
	if (_21241_d == nullptr) {
		_21253_err_fmt = jule::Str();
		return _21253_err_fmt;
	}
	{
		if (_21241_d->_field_kind->_method_prim() == nullptr) {
			_case_begin_5554854688:;
			{
				_21253_err_fmt = jule::Str("type \"@\" is invalid for indexing", 32);
				return _21253_err_fmt;
			}
		}
		else if ((!(_2261088d8_is_int(_21241_d->_field_kind->_method_prim()->_method_to_str())))) {
			_case_begin_5554855248:;
			{
				_21253_err_fmt = jule::Str("type \"@\" is invalid for indexing", 32);
				return _21253_err_fmt;
			}
		}
		else if (_21241_d->_method_is_const()) {
			_case_begin_5554855344:;
			{
				if (_21241_d->_field_constant->_method_as_f64() < 0LL) {
					_21253_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _21253_err_fmt;
				}
			}
		}
		else if (_21241_d->_field_kind->_method_prim() == nullptr || _21241_d->_method_is_const() || _226103eee_real_kind_of(_21241_d->_field_kind->_method_prim()->_method_to_str()) != _226103eee_real_kind_of(jule::Str("int", 3))) {
			_case_begin_5554855440:;
			{
				_21241_d->_field_cast_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("int", 3))));
				_225aa4a5a_apply_cast_kind(_21241_d);
			}
		}
		_match_end_5554855104:;
	}
	_21253_err_fmt = jule::Str();
	return _21253_err_fmt;
}



inline jule::Bool _23e2b5818_can_get_ptr(jule::Ptr<_225aa4a5a_Data>& _53821_d) {
	if ((!(_53821_d->_field_lvalue)) || _53821_d->_method_is_const()) {
		return false;
	}
	{
		if ((_53821_d->_field_kind->_method_fnc() != nullptr) || (_53821_d->_field_kind->_method_enm() != nullptr)) {
			_case_begin_5554868864:;
			{
				return false;
			}
		}
		else {
			_case_begin_5554866928:;
			{
				return true;
			}
		}
		_match_end_5554866448:;
	}
}



inline jule::Bool _23e2b5818_is_valid_for_sptr_type(jule::Ptr<_23e2b5818_TypeKind>& _55332_t) {
	jule::Ptr<_225036509_StructIns> _55413_s = _55332_t->_method_strct();
	if (((_55413_s != nullptr) && (_55413_s->_field_decl != nullptr)) && _55413_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return true;
}



inline jule::Bool _23e2b5818_is_valid_for_ref(jule::Ptr<_23e2b5818_TypeKind>& _56226_t) {
	return _56226_t->_method_fnc() == nullptr;
}



inline jule::Bool _23e2b5818_is_builtin_str_convertable(jule::Ptr<_23e2b5818_TypeKind>& _56536_t) {
	return ((!(_56536_t->_method_void())) && (_56536_t->_method_fnc() == nullptr)) && (_56536_t->_method_tup() == nullptr);
}



inline jule::Str _23e2b5818_build_link_path_by_tokens(jule::Slice<_23e730c0b_Token>& _56931_tokens) {
	jule::Str _57013_s = _56931_tokens[0LL]._field_kind;
	{
		auto expr = _56931_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_5554880064:;
		if (it != expr.end()) {
			_23e730c0b_Token &_23e2b5818_token = *it;
			{
				_57013_s+=jule::Str("::", 2);
				_57013_s+=_23e2b5818_token._field_kind;
			}
			_iter_next_5554880064:;
			++it;
			goto _iter_begin_5554880064;
		}
		_iter_end_5554880064:;
	}
	return _57013_s;
}



inline jule::Ptr<_23e2b5818_Prim> _23e2b5818_build_prim_type(jule::Str _57820_kind) {
	return jule::new_struct_ptr<_23e2b5818_Prim>(new( std::nothrow ) _23e2b5818_Prim(_57820_kind));
}



inline jule::Ptr<_225036509_Struct> _23e2b5818_get_struct_from_kind(jule::Ptr<_23e2b5818_TypeKind> _58429_k) {
	{
		if (_58429_k == nullptr) {
			_case_begin_5554885104:;
			{
				return nullptr;
			}
		}
		else if (_58429_k->_method_strct() != nullptr) {
			_case_begin_5554885200:;
			{
				return _58429_k->_method_strct()->_field_decl;
			}
		}
		else if (_58429_k->_method_sptr() != nullptr) {
			_case_begin_5554884544:;
			{
				return _23e2b5818_get_struct_from_kind(_58429_k->_method_sptr()->_field_elem);
			}
		}
		else if (_58429_k->_method_slc() != nullptr) {
			_case_begin_5554884640:;
			{
				return _23e2b5818_get_struct_from_kind(_58429_k->_method_slc()->_field_elem);
			}
		}
		else if (_58429_k->_method_arr() != nullptr) {
			_case_begin_5554884736:;
			{
				return _23e2b5818_get_struct_from_kind(_58429_k->_method_arr()->_field_elem);
			}
		}
		else if (_58429_k->_method_ptr() != nullptr) {
			_case_begin_5554883872:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_5554883568:;
			{
				return nullptr;
			}
		}
		_match_end_5554882592:;
	}
}



inline jule::Bool _23e2b5818_is_prim(jule::Str _61312_kind) {
	return (((((((((((((((_61312_kind == jule::Str("i8", 2)) || (_61312_kind == jule::Str("i16", 3))) || (_61312_kind == jule::Str("i32", 3))) || (_61312_kind == jule::Str("i64", 3))) || (_61312_kind == jule::Str("u8", 2))) || (_61312_kind == jule::Str("u16", 3))) || (_61312_kind == jule::Str("u32", 3))) || (_61312_kind == jule::Str("u64", 3))) || (_61312_kind == jule::Str("f32", 3))) || (_61312_kind == jule::Str("f64", 3))) || (_61312_kind == jule::Str("int", 3))) || (_61312_kind == jule::Str("uint", 4))) || (_61312_kind == jule::Str("uintptr", 7))) || (_61312_kind == jule::Str("bool", 4))) || (_61312_kind == jule::Str("str", 3))) || (_61312_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ptr<_225a097a1_SymbolTable>,jule::Slice<_23ceb0c1d_Log>> _225e03282_build_symbols(jule::Ptr<_23e249d96_Ast>& _1523_ast,jule::Trait<_225615962_Importer>& _1539_importer,jule::Ptr<_22551ab31_SymbolBuilder> _1563_owner) {
	jule::Ptr<_22551ab31_SymbolBuilder> _1613_sb = jule::new_struct_ptr<_22551ab31_SymbolBuilder>(new( std::nothrow ) _22551ab31_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_23ceb0c1d_Log>(),_1523_ast,jule::Ptr<_225a097a1_SymbolTable>()));
	_1613_sb->_method_build();
	if (_1613_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1613_sb->_field_table,nullptr);
	}
	return std::make_tuple(nullptr,_1613_sb->_field_errors);
}



inline std::tuple<jule::Ptr<_225615962_Package>,jule::Slice<_23ceb0c1d_Log>> _225e03282___analyze_package(jule::Slice<jule::Ptr<_23e249d96_Ast>>& _2927_files,jule::Trait<_225615962_Importer>& _2947_importer,jule::Int& _2968_flags) {
	jule::Slice<jule::Ptr<_225a097a1_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>::alloc(0LL,static_cast<jule::I64>(_2927_files.len()));
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_5554912528:;
		if (it != expr.end()) {
			jule::Ptr<_23e249d96_Ast> _225e03282_f = *it;
			{
				jule::Ptr<_225a097a1_SymbolTable> _3318_table;
				jule::Slice<_23ceb0c1d_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _225e03282_build_symbols(_225e03282_f,_2947_importer,nullptr);
				if (_3329_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_3329_errors);
				}
				_3113_tables.push(_3318_table);
			}
			_iter_next_5554912528:;
			++it;
			goto _iter_begin_5554912528;
		}
		_iter_end_5554912528:;
	}
	jule::Ptr<_22579574b_Sema> _4013_sema = jule::new_struct_ptr<_22579574b_Sema>(new( std::nothrow ) _22579574b_Sema(jule::Slice<_23ceb0c1d_Log>(),jule::Slice<jule::Ptr<_225a097a1_SymbolTable>>(),jule::Ptr<_225a097a1_SymbolTable>(),_2968_flags));
	_4013_sema->_method_check(_3113_tables);
	if (_4013_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(nullptr,_4013_sema->_field_errors);
	}
	jule::Ptr<_225615962_Package> _4813_pkg = jule::new_struct<_225615962_Package>(new( std::nothrow ) _225615962_Package(_4013_sema->_field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_225615962_Package>,jule::Slice<_23ceb0c1d_Log>> _225e03282_analyze_package(jule::Slice<jule::Ptr<_23e249d96_Ast>> _7228_files,jule::Trait<_225615962_Importer> _7247_importer,jule::Int _7267_flags) {
	if (_7228_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_225615962_Package> _7714_package;
	jule::Slice<_23ceb0c1d_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _225e03282___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline void _22602dc1a_init(void) {
	_22602dc1a_BUILTIN_FN_OUT->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_out);
	_22602dc1a_BUILTIN_FN_OUTLN->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_outln);
	_22602dc1a_BUILTIN_FN_NEW->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_new);
	_22602dc1a_BUILTIN_FN_PANIC->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_panic);
	_22602dc1a_BUILTIN_FN_MAKE->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_make);
	_22602dc1a_BUILTIN_FN_APPEND->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_append);
	_22602dc1a_BUILTIN_FN_COPY->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_copy);
	_22602dc1a_BUILTIN_FN_CLONE->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_clone);
	_22602dc1a_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_std_mem_size_of);
	_22602dc1a_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_std_mem_align_of);
	_22602dc1a_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_std_jule_integrated_to_str);
	jule::Ptr<_2252d6a73_Fn> _8213_dispose_method = _22602dc1a_BUILTIN_TRAIT_DISPOSE->_method_find_method(jule::Str("dispose", 7));
	jule::Ptr<_2252d6a73_FnIns> _8313_dispose_method_ins = _8213_dispose_method->_method_instance();
	_8313_dispose_method_ins->_field_caller=jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common);
	_8213_dispose_method->_method_append_instance(_8313_dispose_method_ins);
}



inline jule::Ptr<_2252d6a73_FnIns> _22602dc1a_find_builtin_fn(jule::Str _8820_ident) {
	{
		auto &_match_expr{ _8820_ident };
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_5554951152:;
			{
				return _22602dc1a_BUILTIN_FN_OUT;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_5554951248:;
			{
				return _22602dc1a_BUILTIN_FN_OUTLN;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_5554950640:;
			{
				return _22602dc1a_BUILTIN_FN_NEW;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_5554950736:;
			{
				return _22602dc1a_BUILTIN_FN_PANIC;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_5554950832:;
			{
				return _22602dc1a_BUILTIN_FN_MAKE;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_5554950160:;
			{
				return _22602dc1a_BUILTIN_FN_APPEND;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_5554950256:;
			{
				return _22602dc1a_BUILTIN_FN_COPY;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_5554950352:;
			{
				return _22602dc1a_BUILTIN_FN_CLONE;
			}
		}
		else {
			_case_begin_5554939328:;
			{
				return nullptr;
			}
		}
		_match_end_5554950064:;
	}
}



inline jule::Ptr<_23e2b5818_TypeAlias> _22602dc1a_find_builtin_type_alias(jule::Str _10228_ident) {
	{
		auto &_match_expr{ _10228_ident };
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_5554958640:;
			{
				return _22602dc1a_BUILTIN_TYPE_ALIAS_BYTE;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_5554958784:;
			{
				return _22602dc1a_BUILTIN_TYPE_ALIAS_RUNE;
			}
		}
		else {
			_case_begin_5554958016:;
			{
				return nullptr;
			}
		}
		_match_end_5554957776:;
	}
}



inline jule::Ptr<_2255ab70a_Trait> _22602dc1a_find_builtin_trait(jule::Str _11023_ident) {
	{
		auto &_match_expr{ _11023_ident };
		if (_match_expr == jule::Str("Dispose", 7)) {
			_case_begin_5554961584:;
			{
				return _22602dc1a_BUILTIN_TRAIT_DISPOSE;
			}
		}
		else {
			_case_begin_5554960432:;
			{
				return nullptr;
			}
		}
		_match_end_5554959792:;
	}
}



inline jule::Any _22602dc1a_find_builtin_def(jule::Str _11721_ident) {
	jule::Ptr<_2252d6a73_FnIns> _11813_f = _22602dc1a_find_builtin_fn(_11721_ident);
	if (_11813_f != nullptr) {
		return jule::Any(_11813_f);
	}
	jule::Ptr<_23e2b5818_TypeAlias> _12313_ta = _22602dc1a_find_builtin_type_alias(_11721_ident);
	if (_12313_ta != nullptr) {
		return jule::Any(_12313_ta);
	}
	jule::Ptr<_2255ab70a_Trait> _12813_t = _22602dc1a_find_builtin_trait(_11721_ident);
	if (_12813_t != nullptr) {
		return jule::Any(_12813_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _22602dc1a_find_builtin_def_std_mem(jule::Str _13629_ident) {
	{
		auto &_match_expr{ _13629_ident };
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_5554970032:;
			{
				return jule::Any(_22602dc1a_BUILTIN_FN_STD_MEM_SIZE_OF);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_5554969664:;
			{
				return jule::Any(_22602dc1a_BUILTIN_FN_STD_MEM_ALIGN_OF);
			}
		}
		else {
			_case_begin_5554963520:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_5554968048:;
	}
}



inline jule::Any _22602dc1a_find_builtin_def_std_jule_integrated(jule::Str _14441_ident) {
	{
		auto &_match_expr{ _14441_ident };
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_5554973200:;
			{
				return jule::Any(_22602dc1a_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR);
			}
		}
		else {
			_case_begin_5554972032:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_5554972256:;
	}
}



inline jule::Any _22602dc1a_find_package_builtin_def(jule::Str _15129_link_path,jule::Str _15145_ident) {
	{
		auto &_match_expr{ _15129_link_path };
		if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_5554976016:;
			{
				return _22602dc1a_find_builtin_def_std_mem(_15145_ident);
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_5554975648:;
			{
				return _22602dc1a_find_builtin_def_std_jule_integrated(_15145_ident);
			}
		}
		else {
			_case_begin_5554973792:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_5554973888:;
	}
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_common_plain(jule::Ptr<_225aa4a5a_Eval>& _15937_e,jule::Ptr<_23e45734a_FnCallExpr>& _15952_fc,jule::Ptr<_225aa4a5a_Data>& _15974_d) {
	jule::Ptr<_2252d6a73_FnIns> _16013_f = _15974_d->_field_kind->_method_fnc();
	_22582290a_FnCallArgChecker _16213_fcac = _22582290a_FnCallArgChecker(_15937_e,_15952_fc->_field_args,_15952_fc->_field_token,_16013_f,false,jule::Slice<jule::Any>());
	_16213_fcac._method_check();
	jule::Ptr<_2255b85b3_FnCallExprModel> _17113_model = jule::new_struct<_2255b85b3_FnCallExprModel>(new( std::nothrow ) _2255b85b3_FnCallExprModel(_23e730c0b_Token(),_16013_f,jule::Bool(),_15974_d->_field_model,_16213_fcac._field_arg_models,jule::Ptr<_2255ba3ea_Scope>(),jule::Bool()));
	if (_16013_f->_field_result == nullptr) {
		_15974_d=_225aa4a5a_build_void_data();
	} else {
		_15974_d=jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(_16013_f->_field_result,jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
	}
	_15974_d->_field_model=jule::Any(_17113_model);
	return _15974_d;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_common(jule::Ptr<_225aa4a5a_Eval>& _18931_e,jule::Ptr<_23e45734a_FnCallExpr>& _18946_fc,jule::Ptr<_225aa4a5a_Data>& _18968_d) {
	if (_18946_fc->_field_generics.len() > 0LL) {
		_18931_e->_method_push_err(_18946_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	return _22602dc1a_builtin_caller_common_plain(_18931_e,_18946_fc,_18968_d);
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_common_mut(jule::Ptr<_225aa4a5a_Eval>& _19735_e,jule::Ptr<_23e45734a_FnCallExpr>& _19750_fc,jule::Ptr<_225aa4a5a_Data>& _19772_d) {
	if ((!(_19772_d->_field_mutable))) {
		_19735_e->_method_push_err(_19750_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	}
	return _22602dc1a_builtin_caller_common(_19735_e,_19750_fc,_19772_d);
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_error(jule::Ptr<_225aa4a5a_Eval>& _20430_e,jule::Ptr<_23e45734a_FnCallExpr>& _20445_fc) {
	if (_20445_fc->_field_generics.len() > 0LL) {
		_20430_e->_method_push_err(_20445_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_20445_fc->_field_args.len() < 1LL) {
		_20430_e->_method_push_err(_20445_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	}
	if (_20445_fc->_field_args.len() > 1LL) {
		_20430_e->_method_push_err(_20445_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _21513_expr = _20430_e->_method_eval_expr(_20445_fc->_field_args[0LL]);
	if (_21513_expr == nullptr) {
		return nullptr;
	}
	if (_21513_expr->_method_is_nil()) {
		_20430_e->_method_push_err(_20445_fc->_field_args[0LL]->_field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _22413_d = _225aa4a5a_build_void_data();
	_22413_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_BuiltinErrorCallExprModel>(new( std::nothrow ) _2255b85b3_BuiltinErrorCallExprModel(jule::Ptr<_2252d6a73_FnIns>(),_21513_expr->_field_model)));
	return _22413_d;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_out(jule::Ptr<_225aa4a5a_Eval>& _23228_e,jule::Ptr<_23e45734a_FnCallExpr>& _23243_fc,jule::Ptr<_225aa4a5a_Data>& ) {
	if (_23243_fc->_field_generics.len() > 0LL) {
		_23228_e->_method_push_err(_23243_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_23243_fc->_field_args.len() < 1LL) {
		_23228_e->_method_push_err(_23243_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	}
	if (_23243_fc->_field_args.len() > 1LL) {
		_23228_e->_method_push_err(_23243_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _24413_expr = _23228_e->_method_eval_expr(_23243_fc->_field_args[0LL]);
	if (_24413_expr == nullptr) {
		return nullptr;
	}
	if ((!(_23e2b5818_is_builtin_str_convertable(_24413_expr->_field_kind)))) {
		_23228_e->_method_push_err(_23243_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_225aa4a5a_Data> _25413_d = _225aa4a5a_build_void_data();
	_25413_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_BuiltinOutCallExprModel>(new( std::nothrow ) _2255b85b3_BuiltinOutCallExprModel(_24413_expr->_field_model)));
	return _25413_d;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_outln(jule::Ptr<_225aa4a5a_Eval>& _25930_e,jule::Ptr<_23e45734a_FnCallExpr>& _25945_fc,jule::Ptr<_225aa4a5a_Data>& _25967_d) {
	_25967_d=_22602dc1a_builtin_caller_out(_25930_e,_25945_fc,_25967_d);
	if (_25967_d == nullptr) {
		return nullptr;
	}
	_25967_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_BuiltinOutlnCallExprModel>(new( std::nothrow ) _2255b85b3_BuiltinOutlnCallExprModel(_25967_d->_field_model.operator jule::Ptr<_2255b85b3_BuiltinOutCallExprModel>()->_field_expr)));
	return _25967_d;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_new(jule::Ptr<_225aa4a5a_Eval>& _27128_e,jule::Ptr<_23e45734a_FnCallExpr>& _27143_fc,jule::Ptr<_225aa4a5a_Data>& _27165_d) {
	if (_27143_fc->_field_generics.len() > 0LL) {
		_27128_e->_method_push_err(_27143_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_27143_fc->_field_args.len() < 1LL) {
		_27128_e->_method_push_err(_27143_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	}
	if (_27143_fc->_field_args.len() > 2LL) {
		_27128_e->_method_push_err(_27143_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _28313_t = _27128_e->_method_eval_expr_kind(_27143_fc->_field_args[0LL]->_field_kind);
	if (_28313_t == nullptr) {
		return nullptr;
	}
	if ((!(_28313_t->_field_decl))) {
		_27128_e->_method_push_err(_27143_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_23e2b5818_is_valid_for_sptr_type(_28313_t->_field_kind)))) {
		jule::Ptr<_225036509_StructIns> _29417_s = _28313_t->_field_kind->_method_strct();
		if (((_29417_s != nullptr) && (_29417_s->_field_decl != nullptr)) && _29417_s->_field_decl->_field_cpp_linked) {
			_27128_e->_method_push_err(_27143_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	_27165_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_23e2b5818_Sptr>(new( std::nothrow ) _23e2b5818_Sptr(_28313_t->_field_kind))));
	if (_27143_fc->_field_args.len() == 2LL) {
		jule::Ptr<_23e2b5818_TypeKind> _30417_old = _27128_e->_field_prefix;
		_27128_e->_field_prefix=_28313_t->_field_kind;
		jule::Ptr<_225aa4a5a_Data> _30717_init = _27128_e->_method_eval_expr(_27143_fc->_field_args[1LL]);
		_27128_e->_field_prefix=_30417_old;
		if (_30717_init != nullptr) {
			_23e730c0b_Token _31221_token = _27143_fc->_field_args[1LL]->_field_token;
			
			_27128_e->_field_s->_method_check_validity_for_init_expr((!(_27128_e->_field_immutable)),false,_28313_t->_field_kind,_30717_init,_31221_token);
			_27128_e->_field_s->_method_check_assign_type(false,_28313_t->_field_kind,_30717_init,_31221_token);
			_27165_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_BuiltinNewCallExprModel>(new( std::nothrow ) _2255b85b3_BuiltinNewCallExprModel(_28313_t->_field_kind,_30717_init->_field_model)));
		}
	} else {
		_27165_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_BuiltinNewCallExprModel>(new( std::nothrow ) _2255b85b3_BuiltinNewCallExprModel(_28313_t->_field_kind,jule::Any())));
	}
	return _27165_d;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_panic(jule::Ptr<_225aa4a5a_Eval>& _33030_e,jule::Ptr<_23e45734a_FnCallExpr>& _33045_fc,jule::Ptr<_225aa4a5a_Data>& ) {
	if (_33045_fc->_field_generics.len() > 0LL) {
		_33030_e->_method_push_err(_33045_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_33045_fc->_field_args.len() < 1LL) {
		_33030_e->_method_push_err(_33045_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	}
	if (_33045_fc->_field_args.len() > 1LL) {
		_33030_e->_method_push_err(_33045_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _34213_expr = _33030_e->_method_eval_expr(_33045_fc->_field_args[0LL]);
	if (_34213_expr == nullptr) {
		return nullptr;
	}
	if ((_34213_expr->_field_kind->_method_prim() == nullptr) || (!(_34213_expr->_field_kind->_method_prim()->_method_is_str()))) {
		_33030_e->_method_push_err(_33045_fc->_field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _35113_d = _225aa4a5a_build_void_data();
	_35113_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_BuiltinPanicCallExprModel>(new( std::nothrow ) _2255b85b3_BuiltinPanicCallExprModel(_33045_fc->_field_token,_34213_expr->_field_model)));
	return _35113_d;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_make(jule::Ptr<_225aa4a5a_Eval>& _35929_e,jule::Ptr<_23e45734a_FnCallExpr>& _35944_fc,jule::Ptr<_225aa4a5a_Data>& _35966_d) {
	if (_35944_fc->_field_generics.len() > 0LL) {
		_35929_e->_method_push_err(_35944_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_35944_fc->_field_args.len() < 2LL) {
		if (_35944_fc->_field_args.len() == 1LL) {
			_35929_e->_method_push_err(_35944_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		}
		_35929_e->_method_push_err(_35944_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	}
	if (_35944_fc->_field_args.len() > 3LL) {
		_35929_e->_method_push_err(_35944_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _37513_t = _35929_e->_method_eval_expr_kind(_35944_fc->_field_args[0LL]->_field_kind);
	if (_37513_t == nullptr) {
		return nullptr;
	}
	if ((!(_37513_t->_field_decl)) || (_37513_t->_field_kind->_method_slc() == nullptr)) {
		_35929_e->_method_push_err(_35944_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>());
		return nullptr;
	}
	_35966_d->_field_kind=_37513_t->_field_kind;
	jule::Ptr<_225aa4a5a_Data> _38713_len = _35929_e->_field_s->_method_evalp(_35929_e->_field_lookup,_37513_t->_field_kind)->_method_eval_expr(_35944_fc->_field_args[1LL]);
	if (_38713_len == nullptr) {
		return _35966_d;
	}
	_35929_e->_method_check_integer_indexing_by_data(_38713_len,_35944_fc->_field_args[1LL]->_field_token);
	if (_35944_fc->_field_args.len() == 3LL) {
		jule::Ptr<_225aa4a5a_Data> _39517_cap = _35929_e->_field_s->_method_evalp(_35929_e->_field_lookup,_37513_t->_field_kind)->_method_eval_expr(_35944_fc->_field_args[2LL]);
		if (_39517_cap == nullptr) {
			return _35966_d;
		}
		_35929_e->_method_check_integer_indexing_by_data(_39517_cap,_35944_fc->_field_args[2LL]->_field_token);
		_35966_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_BuiltinMakeCallExprModel>(new( std::nothrow ) _2255b85b3_BuiltinMakeCallExprModel(_37513_t->_field_kind,_38713_len->_field_model,_39517_cap->_field_model)));
	} else {
		_35966_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_BuiltinMakeCallExprModel>(new( std::nothrow ) _2255b85b3_BuiltinMakeCallExprModel(_37513_t->_field_kind,_38713_len->_field_model,jule::Any())));
	}
	return _35966_d;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_append(jule::Ptr<_225aa4a5a_Eval>& _41631_e,jule::Ptr<_23e45734a_FnCallExpr>& _41646_fc,jule::Ptr<_225aa4a5a_Data>& _41668_d) {
	if (_41646_fc->_field_generics.len() > 0LL) {
		_41631_e->_method_push_err(_41646_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_41646_fc->_field_args.len() < 2LL) {
		if (_41646_fc->_field_args.len() == 1LL) {
			_41631_e->_method_push_err(_41646_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_41631_e->_method_push_err(_41646_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	jule::Ptr<_225aa4a5a_Data> _42913_t = _41631_e->_method_eval_expr(_41646_fc->_field_args[0LL]);
	if (_42913_t == nullptr) {
		return nullptr;
	}
	if (_42913_t->_field_kind->_method_slc() == nullptr) {
		_41631_e->_method_push_err(_41646_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_2252d6a73_FnIns> _43913_f = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str())),_42913_t->_field_kind)),jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),true,true,jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str())),_42913_t->_field_kind->_method_slc()->_field_elem))}),_42913_t->_field_kind,jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_41668_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_43913_f));
	_41668_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_CommonIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonIdentExprModel(jule::Str("append", 6))));
	_41668_d=_22602dc1a_builtin_caller_common_plain(_41631_e,_41646_fc,_41668_d);
	if (_41668_d != nullptr) {
		jule::Ptr<_2255b85b3_FnCallExprModel> _46317_model = _41668_d->_field_model.operator jule::Ptr<_2255b85b3_FnCallExprModel>();
		_41668_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_BuiltinAppendCallExprModel>(new( std::nothrow ) _2255b85b3_BuiltinAppendCallExprModel(_46317_model->_field_args[0LL],_46317_model->_field_args[1LL])));
	}
	return _41668_d;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_copy(jule::Ptr<_225aa4a5a_Eval>& _47229_e,jule::Ptr<_23e45734a_FnCallExpr>& _47244_fc,jule::Ptr<_225aa4a5a_Data>& _47266_d) {
	if (_47244_fc->_field_generics.len() > 0LL) {
		_47229_e->_method_push_err(_47244_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_47244_fc->_field_args.len() < 2LL) {
		if (_47244_fc->_field_args.len() == 1LL) {
			_47229_e->_method_push_err(_47244_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_47229_e->_method_push_err(_47244_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	if (_47244_fc->_field_args.len() > 2LL) {
		_47229_e->_method_push_err(_47244_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _48813_t = _47229_e->_method_eval_expr(_47244_fc->_field_args[0LL]);
	if (_48813_t == nullptr) {
		return nullptr;
	}
	if (_48813_t->_field_kind->_method_slc() == nullptr) {
		_47229_e->_method_push_err(_47244_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_48813_t->_field_mutable))) {
		_47229_e->_method_push_err(_47244_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>());
	}
	jule::Ptr<_2252d6a73_FnIns> _50213_f = jule::new_struct_ptr<_2252d6a73_FnIns>(new( std::nothrow ) _2252d6a73_FnIns(jule::Ptr<_225036509_StructIns>(),jule::Ptr<_2252d6a73_Fn>(),jule::Slice<jule::Ptr<_23e2b5818_TypeKind>>(),jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>({jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param()),_48813_t->_field_kind)),jule::new_struct<_2252d6a73_ParamIns>(new( std::nothrow ) _2252d6a73_ParamIns(jule::new_struct_ptr<_2252d6a73_Param>(new( std::nothrow ) _2252d6a73_Param(_23e730c0b_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_23e2b5818_TypeSymbol>(),jule::Str())),_48813_t->_field_kind))}),_22602dc1a_BUILTIN_FN_COPY->_field_result,jule::Ptr<_2255ba3ea_Scope>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Ptr<_22551ab31_ReferenceStack>(),jule::Fn<jule::Ptr<_225aa4a5a_Data>(jule::Ptr<_225aa4a5a_Eval>&,jule::Ptr<_23e45734a_FnCallExpr>&,jule::Ptr<_225aa4a5a_Data>&)>(_22602dc1a_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_47266_d->_field_kind=jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_50213_f));
	_47266_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_CommonIdentExprModel>(new( std::nothrow ) _2255b85b3_CommonIdentExprModel(jule::Str("copy", 4))));
	_47266_d=_22602dc1a_builtin_caller_common_plain(_47229_e,_47244_fc,_47266_d);
	return _47266_d;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_clone(jule::Ptr<_225aa4a5a_Eval>& _52630_e,jule::Ptr<_23e45734a_FnCallExpr>& _52645_fc,jule::Ptr<_225aa4a5a_Data>& ) {
	if (_52645_fc->_field_generics.len() > 0LL) {
		_52630_e->_method_push_err(_52645_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_52645_fc->_field_args.len() < 1LL) {
		_52630_e->_method_push_err(_52645_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if (_52645_fc->_field_args.len() > 1LL) {
		_52630_e->_method_push_err(_52645_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _53913_d = _52630_e->_method_eval_expr_kind(_52645_fc->_field_args[0LL]->_field_kind);
	if (_53913_d == nullptr) {
		return nullptr;
	}
	jule::Fn<void(jule::Ptr<_23e2b5818_TypeKind>)> _5449_check_kind = jule::Fn<void(jule::Ptr<_23e2b5818_TypeKind>)>([=](jule::Ptr<_23e2b5818_TypeKind> _54429_k) mutable -> void {
		{
			if (_54429_k->_method_slc() != nullptr) {
				_case_begin_5555185216:;
				{
					if ((!(_54429_k->_method_slc()->_field_elem->_method_supports_cloning()))) {
						{
							_52630_e->_method_push_err(_52645_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_54429_k->_method_to_str())}));
						}
					}
				}
			}
			else if (_54429_k->_method_map() != nullptr) {
				_case_begin_5555184000:;
				{
					jule::Ptr<_23e2b5818_Map> _55517_m = _54429_k->_method_map();
					if ((!(_55517_m->_field_key->_method_supports_cloning())) || (!(_55517_m->_field_val->_method_supports_cloning()))) {
						{
							_52630_e->_method_push_err(_52645_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_54429_k->_method_to_str())}));
						}
					}
				}
			}
			else if (_54429_k->_method_arr() != nullptr) {
				_case_begin_5555184096:;
				{
					if ((!(_54429_k->_method_arr()->_field_elem->_method_supports_cloning()))) {
						{
							_52630_e->_method_push_err(_52645_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_54429_k->_method_to_str())}));
						}
					}
				}
			}
			else if (_54429_k->_method_sptr() != nullptr) {
				_case_begin_5555184192:;
				{
					if ((!(_54429_k->_method_sptr()->_field_elem->_method_supports_cloning()))) {
						{
							_52630_e->_method_push_err(_52645_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_54429_k->_method_to_str())}));
						}
					}
				}
			}
			else if (_54429_k->_method_strct() != nullptr) {
				_case_begin_5555184288:;
				{
					jule::Ptr<_225036509_StructIns> _58017_s = _53913_d->_field_kind->_method_strct();
					if ((!(_58017_s->_field_mutable))) {
						{
							_52630_e->_method_push_err(_52645_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_53913_d->_field_kind->_method_to_str())}));
						}
					}
					if (((_58017_s->_field_decl == nullptr) || _58017_s->_field_decl->_field_cpp_linked) || (!(_58017_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
						{
							_52630_e->_method_push_err(_52645_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_53913_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
						}
					}
				}
			}
			else {
				_case_begin_5555183696:;
				{
					{
						_52630_e->_method_push_err(_52645_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_53913_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			_match_end_5555183520:;
		}
	});
	{
		if ((!(_53913_d->_field_lvalue))) {
			_case_begin_5555211584:;
			{
				_52630_e->_method_push_err(_52645_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>());
			}
		}
		else if ((!(_53913_d->_field_kind->_method_supports_cloning()))) {
			_case_begin_5555211680:;
			{
				_5449_check_kind(_53913_d->_field_kind);
			}
		}
		_match_end_5555219232:;
	}
	_53913_d->_field_mutable=true;
	_53913_d->_field_model=jule::Any(jule::new_struct<_2255b85b3_BuiltinCloneCallExprModel>(new( std::nothrow ) _2255b85b3_BuiltinCloneCallExprModel(_53913_d->_field_model)));
	return _53913_d;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_std_mem_size_of(jule::Ptr<_225aa4a5a_Eval>& _61740_e,jule::Ptr<_23e45734a_FnCallExpr>& _61755_fc,jule::Ptr<_225aa4a5a_Data>& ) {
	if (_61755_fc->_field_generics.len() > 0LL) {
		_61740_e->_method_push_err(_61755_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _62113_result = jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
	if (_61755_fc->_field_args.len() < 1LL) {
		_61740_e->_method_push_err(_61755_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _62113_result;
	}
	if (_61755_fc->_field_args.len() > 1LL) {
		_61740_e->_method_push_err(_61755_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _63313_d = _61740_e->_method_eval_expr_kind(_61755_fc->_field_args[0LL]->_field_kind);
	if (_63313_d == nullptr) {
		return _62113_result;
	}
	_62113_result->_field_model=jule::Any(jule::new_struct<_2255b85b3_SizeofExprModel>(new( std::nothrow ) _2255b85b3_SizeofExprModel(_63313_d->_field_model)));
	return _62113_result;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_std_mem_align_of(jule::Ptr<_225aa4a5a_Eval>& _64241_e,jule::Ptr<_23e45734a_FnCallExpr>& _64256_fc,jule::Ptr<_225aa4a5a_Data>& ) {
	if (_64256_fc->_field_generics.len() > 0LL) {
		_64241_e->_method_push_err(_64256_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _64613_result = jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_226100d86_Const>()));
	if (_64256_fc->_field_args.len() < 1LL) {
		_64241_e->_method_push_err(_64256_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _64613_result;
	}
	if (_64256_fc->_field_args.len() > 1LL) {
		_64241_e->_method_push_err(_64256_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _65813_d = _64241_e->_method_eval_expr_kind(_64256_fc->_field_args[0LL]->_field_kind);
	if (_65813_d == nullptr) {
		return _64613_result;
	}
	_64613_result->_field_model=jule::Any(jule::new_struct<_2255b85b3_AlignofExprModel>(new( std::nothrow ) _2255b85b3_AlignofExprModel(_65813_d->_field_model)));
	return _64613_result;
}



inline jule::Ptr<_225aa4a5a_Data> _22602dc1a_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_225aa4a5a_Eval>& _66751_e,jule::Ptr<_23e45734a_FnCallExpr>& _66766_fc,jule::Ptr<_225aa4a5a_Data>& ) {
	if (_66766_fc->_field_generics.len() > 0LL) {
		_66751_e->_method_push_err(_66766_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if (_66766_fc->_field_args.len() < 1LL) {
		_66751_e->_method_push_err(_66766_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if (_66766_fc->_field_args.len() > 1LL) {
		_66751_e->_method_push_err(_66766_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>());
	}
	jule::Ptr<_225aa4a5a_Data> _68013_d = _66751_e->_method_eval_expr_kind(_66766_fc->_field_args[0LL]->_field_kind);
	if (_68013_d == nullptr) {
		return nullptr;
	}
	if ((!(_23e2b5818_is_builtin_str_convertable(_68013_d->_field_kind)))) {
		_66751_e->_method_push_err(_66766_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_struct<_225aa4a5a_Data>(new( std::nothrow ) _225aa4a5a_Data(jule::new_struct_ptr<_23e2b5818_TypeKind>(new( std::nothrow ) _23e2b5818_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_23e2b5818_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_23e2b5818_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2255b85b3_IntegratedToStrExprModel>(new( std::nothrow ) _2255b85b3_IntegratedToStrExprModel(_68013_d->_field_model))),jule::Bool(),jule::Ptr<_226100d86_Const>()));
}



inline std::tuple<jule::Bool,jule::Bool> _23e0e568c_check_os(jule::Str _1013_arg) {
	jule::Bool _1025_ok = jule::Bool();
	jule::Bool _1035_exist = jule::Bool();
	_1025_ok=false;
	_1035_exist=true;
	{
		auto &_match_expr{ _1013_arg };
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_5560827632:;
			{
				_1025_ok=_23d049526_is_windows(_23d0184a1_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_5560827728:;
			{
				_1025_ok=_23d049526_is_darwin(_23d0184a1_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_5560826528:;
			{
				_1025_ok=_23d049526_is_linux(_23d0184a1_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_5560826624:;
			{
				_1025_ok=_23d049526_is_unix(_23d0184a1_OS);
			}
		}
		else {
			_case_begin_5560825936:;
			{
				_1025_ok=true;
				_1035_exist=false;
			}
		}
		_match_end_5560825488:;
	}
	return std::make_tuple(_1025_ok,_1035_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _23e0e568c_check_arch(jule::Str _2715_arg) {
	jule::Bool _2727_ok = jule::Bool();
	jule::Bool _2737_exist = jule::Bool();
	_2727_ok=false;
	_2737_exist=true;
	{
		auto &_match_expr{ _2715_arg };
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_5560835296:;
			{
				_2727_ok=_23d049526_is_i386(_23d0184a1_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_5560835392:;
			{
				_2727_ok=_23d049526_is_amd64(_23d0184a1_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_5560834192:;
			{
				_2727_ok=_23d049526_is_arm64(_23d0184a1_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_5560834288:;
			{
				_2727_ok=_23d049526_is_64bit(_23d0184a1_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_5560834384:;
			{
				_2727_ok=_23d049526_is_32bit(_23d0184a1_ARCH);
			}
		}
		else {
			_case_begin_5560833600:;
			{
				_2727_ok=true;
				_2737_exist=false;
			}
		}
		_match_end_5560833152:;
	}
	return std::make_tuple(_2727_ok,_2737_exist);
}



inline jule::Bool _23e0e568c_is_pass_file_annotation(jule::Str _4632_p) {
	_4632_p=_23d08e2c4_base(_4632_p);
	jule::I64 _489_n = _4632_p.len();
	_4632_p=_4632_p.slice(0LL,_489_n - _23d08e2c4_ext(_4632_p).len());
	jule::Str _5413_a1 = jule::Str();
	jule::Str _5713_a2 = jule::Str();
	jule::Int _6013_i = _4632_p.rfind(jule::Str("_", 1));
	if (_6013_i == -1LL) {
		jule::Bool _6318_ok;
		jule::Bool _6326_exist;
		std::tie(_6318_ok,_6326_exist) = _23e0e568c_check_os(_4632_p);
		if (_6326_exist) {
			return _6318_ok;
		}
		std::tie(_6318_ok,_6326_exist) = _23e0e568c_check_arch(_4632_p);
		return (!(_6326_exist)) || _6318_ok;
	}
	if ((_6013_i + 1LL) >= _489_n) {
		return true;
	}
	_5413_a1=_4632_p.slice(_6013_i + 1LL);
	_4632_p=_4632_p.slice(0LL,_6013_i);
	_6013_i=static_cast<jule::Int>(_4632_p.rfind(jule::Str("_", 1)));
	if (_6013_i != -1LL) {
		_5713_a2=_4632_p.slice(_6013_i + 1LL);
	}
	if (_5713_a2 == jule::Str()) {
		jule::Bool _8418_ok;
		jule::Bool _8426_exist;
		std::tie(_8418_ok,_8426_exist) = _23e0e568c_check_os(_5413_a1);
		if (_8426_exist) {
			return _8418_ok;
		}
		std::tie(_8418_ok,_8426_exist) = _23e0e568c_check_arch(_5413_a1);
		return (!(_8426_exist)) || _8418_ok;
	}
	jule::Bool _9214_ok;
	jule::Bool _9222_exist;
	std::tie(_9214_ok,_9222_exist) = _23e0e568c_check_arch(_5413_a1);
	if (_9222_exist) {
		if ((!(_9214_ok))) {
			return false;
		}
		jule::Bool _9714_ok;
		jule::Bool _9718_exist;
		std::tie(_9714_ok,_9718_exist) = _23e0e568c_check_os(_5713_a2);
		return (!(_9718_exist)) || _9714_ok;
	}
	std::tie(_9214_ok,_9222_exist) = _23e0e568c_check_os(_5413_a1);
	return (!(_9222_exist)) || _9214_ok;
}



inline void _23e1c54b4_set_os_flags(void) {
	{
		auto &_match_expr{ _23d0184a1_OS };
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_5560863440:;
			{
				_23e1c54b4_FLAGS.push(jule::Str("windows", 7));
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_5560831248:;
			{
				_23e1c54b4_FLAGS.push(jule::Str("linux", 5));
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_5560831344:;
			{
				_23e1c54b4_FLAGS.push(jule::Str("darwin", 6));
			}
		}
		_match_end_5560859776:;
	}
	if (_23d049526_is_unix(_23d0184a1_OS)) {
		_23e1c54b4_FLAGS.push(jule::Str("unix", 4));
	}
}



inline void _23e1c54b4_set_arch_flags(void) {
	{
		auto &_match_expr{ _23d0184a1_ARCH };
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_5560869760:;
			{
				_23e1c54b4_FLAGS.push(jule::Str("i386", 4));
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_5560868176:;
			{
				_23e1c54b4_FLAGS.push(jule::Str("amd64", 5));
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_5560868272:;
			{
				_23e1c54b4_FLAGS.push(jule::Str("arm64", 5));
			}
		}
		_match_end_5560869680:;
	}
	if (_23d049526_is_64bit(_23d0184a1_ARCH)) {
		_23e1c54b4_FLAGS.push(jule::Str("x64", 3));
	}
	if (_23d049526_is_32bit(_23d0184a1_ARCH)) {
		_23e1c54b4_FLAGS.push(jule::Str("x32", 3));
	}
}



inline void _23e1c54b4_init_flags(void) {
	_23e1c54b4_set_os_flags();
	_23e1c54b4_set_arch_flags();
}



inline void _23e3748d8_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_23d07c4e3_exit(1LL);
}



inline jule::Slice<jule::U8> _23e3748d8_read_buff(jule::Str _3014_path) {
	return ({
		auto except = _224eb1ee0_File::_static_method_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			_23e3748d8_exit_err(jule::Str("error: file cannot read", 23));
			return nullptr;
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _23ceb0c1d_Log _23e3748d8_flat_compiler_err(jule::Str _3922_text) {
	return _23ceb0c1d_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_3922_text,jule::Str(),jule::Str());
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_224ea5599_DirEntry>>> _23e3748d8_read_package_dirents(jule::Str _4725_path) {
	jule::Slice<jule::Ptr<_224ea5599_DirEntry>> _4813_dirents = ({
		auto except = _224ea5599_Directory::_static_method_read(_4725_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::Ptr<_224ea5599_DirEntry>>>(jule::Str("connot read package directory: ", 31) + _4725_path);
			return jule::Exceptional<jule::Slice<jule::Ptr<_224ea5599_DirEntry>>>(jule::Str("connot read package directory: ", 31) + _4725_path);
		} jule::Slice<jule::Ptr<_224ea5599_DirEntry>>();});
	});
	jule::Slice<jule::Ptr<_224ea5599_DirEntry>> _5113_passed_dirents = nullptr;
	{
		auto &expr = _4813_dirents;
		auto it = expr.begin();
		_iter_begin_5560883856:;
		if (it != expr.end()) {
			jule::Ptr<_224ea5599_DirEntry> _23e3748d8_dirent = *it;
			{
				jule::Str _5313_name = _23e3748d8_dirent->_field_name;
				if (_23e3748d8_dirent->_field_stat->_method_is_dir() || (!(_5313_name.has_suffix(jule::Str(".jule", 5))))) {
					goto _iter_next_5560883856;
				}
				_5113_passed_dirents.push(_23e3748d8_dirent);
			}
			_iter_next_5560883856:;
			++it;
			goto _iter_begin_5560883856;
		}
		_iter_end_5560883856:;
	}
	return jule::Exceptional(jule::Any(),_5113_passed_dirents);
}



inline std::tuple<jule::Bool,jule::Slice<_23ceb0c1d_Log>> _23e3748d8_is_pass_build_directives(jule::Ptr<_23e249d96_Ast>& _6734_file) {
	{
		auto &expr = _6734_file->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_5560891712:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_Directive> _23e3748d8_td = *it;
			{
				if (_23e3748d8_td->_field_tag._field_kind != jule::Str("build", 5)) {
					goto _iter_next_5560891712;
				}
				_23e12e1ba_DirectiveEval _7317_de = _23e12e1ba_DirectiveEval(jule::Slice<_23ceb0c1d_Log>(),_23e3748d8_td);
				jule::Bool _7613_result = _7317_de._method_eval();
				if (_7317_de._field_logs.len() > 0LL) {
					return std::make_tuple(false,_7317_de._field_logs);
				}
				if ((!(_7613_result))) {
					return std::make_tuple(false,nullptr);
				}
			}
			_iter_next_5560891712:;
			++it;
			goto _iter_begin_5560891712;
		}
		_iter_end_5560891712:;
	}
	return std::make_tuple(true,nullptr);
}



inline void _23de59556_push_passes(jule::Ptr<_225615962_Package>& _11321_p,jule::Slice<jule::Str>& _11345_passes) {
	{
		auto &expr = _11321_p->_field_files;
		auto it = expr.begin();
		_iter_begin_5561009040:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _23de59556_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _23de59556_f->_field_passes;
					auto it = expr.begin();
					_iter_begin_5561011136:;
					if (it != expr.end()) {
						_22551ab31_Pass &_23de59556_pass = *it;
						{
							if (_23de59556_pass._field_text == jule::Str()) {
								goto _iter_next_5561011136;
							}
							{
								auto &expr = _11345_passes;
								auto it = expr.begin();
								_iter_begin_5561013456:;
								if (it != expr.end()) {
									jule::Str &_23de59556_cpass = *it;
									{
										if (_23de59556_cpass == _23de59556_pass._field_text) {
											goto _iter_next_5561011136;
										}
									}
									_iter_next_5561013456:;
									++it;
									goto _iter_begin_5561013456;
								}
								_iter_end_5561013456:;
							}
							_11345_passes.push(_23de59556_pass._field_text);
						}
						_iter_next_5561011136:;
						++it;
						goto _iter_begin_5561011136;
					}
					_iter_end_5561011136:;
				}
			}
			_iter_next_5561009040:;
			++it;
			goto _iter_begin_5561009040;
		}
		_iter_end_5561009040:;
	}
}



inline jule::Slice<jule::Str> _23de59556_get_all_unique_passes(jule::Ptr<_225615962_Package>& _13031_pkg,jule::Slice<jule::Ptr<_225615962_ImportInfo>> _13056_uses) {
	jule::Slice<jule::Str> _13113_passes = nullptr;
	_23de59556_push_passes(_13031_pkg,_13113_passes);
	{
		auto &expr = _13056_uses;
		auto it = expr.begin();
		_iter_begin_5561018336:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _23de59556_u = *it;
			{
				if ((!(_23de59556_u->_field_cpp_linked))) {
					_23de59556_push_passes(_23de59556_u->_field_package,_13113_passes);
				}
			}
			_iter_next_5561018336:;
			++it;
			goto _iter_begin_5561018336;
		}
		_iter_end_5561018336:;
	}
	return _13113_passes;
}



inline jule::Bool _23d019073_is_exist(jule::Slice<jule::Any> _3013_arr,jule::Any _3025_t) {
	{
		auto &expr = _3013_arr;
		auto it = expr.begin();
		_iter_begin_5561149888:;
		if (it != expr.end()) {
			jule::Any &_23d019073_ref = *it;
			{
				if (_3025_t == _23d019073_ref) {
					return true;
				}
			}
			_iter_next_5561149888:;
			++it;
			goto _iter_begin_5561149888;
		}
		_iter_end_5561149888:;
	}
	return false;
}



inline jule::Bool _23d019073_is_dead(jule::Any _4016_ref) {
	jule::Bool _4028_dead = jule::Bool();
	if (_23d019073_is_exist(_23d019073_deads,_4016_ref)) {
		_4028_dead = true;
		return _4028_dead;
	}
	{
		auto &_match_expr{ _4016_ref };
		if (_match_expr.type_is<jule::Ptr<_2252d6a73_FnIns>>()) {
			_case_begin_5561157504:;
			{
				if (_4016_ref.operator jule::Ptr<_2252d6a73_FnIns>()->_field_decl->_method_is_init()) {
					goto _match_end_5561151584;
				}
				goto _case_begin_5561154016;
			}
		}
		else {
			_case_begin_5561154016:;
			{
				if ((_23d019073_current == _4016_ref) || (_23d019073_main_current == _4016_ref)) {
					_4028_dead = true;
					return _4028_dead;
				}
				if (_23d019073_is_exist(_23d019073_checking,_4016_ref)) {
					_4028_dead = true;
					return _4028_dead;
				}
			}
		}
		_match_end_5561151584:;
	}
	jule::Any _6113_old = _23d019073_current;
	_23d019073_current=_4016_ref;
	jule::I64 _639_len = _23d019073_checking.len();
	_23d019073_checking.push(_4016_ref);
	__JULE_DEFER({
		_23d019073_current=_6113_old;
		_23d019073_drop_ref(_23d019073_checking,_639_len);
	});
	{
		auto &_match_expr{ _4016_ref };
		if (_match_expr.type_is<jule::Ptr<_2252d6a73_FnIns>>()) {
			_case_begin_5561163120:;
			{
				_4028_dead = _23d019073_is_fn_dead(_4016_ref.operator jule::Ptr<_2252d6a73_FnIns>());
				return _4028_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
			_case_begin_5561163280:;
			{
				_4028_dead = _23d019073_is_var_dead(_4016_ref.operator jule::Ptr<_2258258db_Var>());
				return _4028_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225036509_StructIns>>()) {
			_case_begin_5561163376:;
			{
				_4028_dead = _23d019073_is_struct_dead(_4016_ref.operator jule::Ptr<_225036509_StructIns>());
				return _4028_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ab70a_Trait>>()) {
			_case_begin_5561162256:;
			{
				_4028_dead = _23d019073_is_trait_dead(_4016_ref.operator jule::Ptr<_2255ab70a_Trait>());
				return _4028_dead;
			}
		}
		else {
			_case_begin_5561157168:;
			{
				_4028_dead = false;
				return _4028_dead;
			}
		}
		_match_end_5561161248:;
	}
}



inline void _23d019073_drop_ref(jule::Slice<jule::Any>& _9218_refs,jule::Int _9231_pos) {
	_9218_refs=_9218_refs.slice(0LL,_9231_pos);
}



inline jule::Bool _23d019073_is_all_references_are_dead(jule::Ptr<_22551ab31_ReferenceStack> _10035_references) {
	jule::Int _10113_i = 0LL;
	for (; _10113_i < _10035_references->_method_len(); (_10113_i)++) {
		{
			jule::Any _10317_ref = _10035_references->_method_at(_10113_i);
			if (_10317_ref == _23d019073_current) {
				goto _iter_next_5561167312;
			}
			if (_10317_ref == _23d019073_main_current) {
				goto _iter_next_5561167312;
			}
			if ((!(_23d019073_is_dead(_10317_ref)))) {
				return false;
			}
		}
	_iter_next_5561167312:;
	}
	_iter_end_5561167312:;
	return true;
}



inline jule::Bool _23d019073_is_fn_dead(jule::Ptr<_2252d6a73_FnIns> _11719_f) {
	if (_11719_f->_field_decl->_field_cpp_linked) {
		return false;
	}
	if (_11719_f->_field_decl->_method_is_entry_point() || _11719_f->_field_decl->_method_is_init()) {
		return (!(_11719_f->_field_decl->_field_statically));
	}
	if (_11719_f->_field_owner != nullptr) {
		if (_23d019073_is_exist(_23d019073_checking,jule::Any(_11719_f->_field_owner))) {
			return true;
		}
		return _23d019073_is_dead(jule::Any(_11719_f->_field_owner));
	}
	return _23d019073_is_all_references_are_dead(_11719_f->_field_references);
}



inline jule::Bool _23d019073_is_var_dead(jule::Ptr<_2258258db_Var> _14320_v) {
	if (_14320_v->_field_constant) {
		return true;
	}
	if (_14320_v->_field_cpp_linked) {
		return false;
	}
	return _23d019073_is_all_references_are_dead(_14320_v->_field_references);
}



inline jule::Bool _23d019073_is_struct_dead(jule::Ptr<_225036509_StructIns> _19323_s) {
	return false;
}



inline jule::Bool _23d019073_is_trait_dead(jule::Ptr<_2255ab70a_Trait> _21022_t) {
	return false;
}



inline void _23d019073_eliminate_dead_functions(jule::Slice<jule::Ptr<_2252d6a73_Fn>>& _22834_funcs) {
	jule::Int _22913_i = 0LL;
	while (_22913_i < _22834_funcs.len()) {
		{
			jule::Ptr<_2252d6a73_Fn> _23117_f = _22834_funcs[_22913_i];
			jule::Int _23217_j = 0LL;
			while (_23217_j < _23117_f->_field_instances.len()) {
				{
					jule::Ptr<_2252d6a73_FnIns> _23421_ins = _23117_f->_field_instances[_23217_j];
					_23d019073_main_current=jule::Any(_23421_ins);
					if (_23d019073_is_fn_dead(_23421_ins)) {
						_23d019073_deads.push(jule::Any(_23421_ins));
						_23117_f->_field_instances=jule::append(_23117_f->_field_instances.slice(0LL,_23217_j),_23117_f->_field_instances.slice(_23217_j + 1LL));
						goto _iter_next_5561212752;
					}
					_23d0477ee_eliminate_dead_code_of_scope(_23421_ins->_field_scope);
					(_23217_j)++;
				}
			_iter_next_5561212752:;
			}
			_iter_end_5561212752:;
			if (_23117_f->_field_instances.len() == 0LL) {
				_22834_funcs=jule::append(_22834_funcs.slice(0LL,_22913_i),_22834_funcs.slice(_22913_i + 1LL));
				goto _iter_next_5561205504;
			}
			(_22913_i)++;
		}
	_iter_next_5561205504:;
	}
	_iter_end_5561205504:;
}



inline void _23d019073_eliminate_dead_globals(jule::Ptr<_225615962_Package>& _25432_pkg) {
	{
		auto &expr = _25432_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_5561221248:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _23d019073_f = *it;
			{
				jule::Int _25617_i = 0LL;
				while (_25617_i < _23d019073_f->_field_vars.len()) {
					{
						jule::Ptr<_2258258db_Var> _25821_v = _23d019073_f->_field_vars[_25617_i];
						_23d019073_main_current=jule::Any(_25821_v);
						if (_23d019073_is_var_dead(_25821_v)) {
							_23d019073_deads.push(jule::Any(_25821_v));
							_23d019073_f->_field_vars=jule::append(_23d019073_f->_field_vars.slice(0LL,_25617_i),_23d019073_f->_field_vars.slice(_25617_i + 1LL));
						} else {
							(_25617_i)++;
						}
					}
				_iter_next_5561217552:;
				}
				_iter_end_5561217552:;
			}
			_iter_next_5561221248:;
			++it;
			goto _iter_begin_5561221248;
		}
		_iter_end_5561221248:;
	}
}



inline void _23d019073_eliminate_dead_functions_package(jule::Ptr<_225615962_Package>& _27042_pkg) {
	{
		auto &expr = _27042_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_5561222320:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _23d019073_f = *it;
			{
				_23d019073_eliminate_dead_functions(_23d019073_f->_field_funcs);
			}
			_iter_next_5561222320:;
			++it;
			goto _iter_begin_5561222320;
		}
		_iter_end_5561222320:;
	}
}



inline void _23d019073_catch_alive_init(jule::Ptr<_225615962_Package>& _31826_pkg) {
	
	
	jule::Ptr<_2252d6a73_Fn> _32113_f = _31826_pkg->_method_find_fn(jule::Str("init", 4),false);
	if (_32113_f == nullptr) {
		return;
	}
	jule::I64 _3269_n = _23d019073_deads.len();
	__JULE_DEFER({
		_23d019073_deads=_23d019073_deads.slice(0LL,_3269_n);
		_23d019073_checking=nullptr;
		_23d019073_current=jule::Any(nullptr);
	});
	jule::Ptr<_2252d6a73_FnIns> _33413_ins = _32113_f->_field_instances[0LL];
	jule::Int _33513_i = 0LL;
	for (; _33513_i < _33413_ins->_field_refers->_method_len(); (_33513_i)++) {
		{
			if ((!(_23d019073_is_dead(_33413_ins->_field_refers->_method_at(_33513_i))))) {
				_32113_f->_field_statically=true;
				return;
			}
		}
	_iter_next_5561253888:;
	}
	_iter_end_5561253888:;
}



inline void _23d019073_eliminate_package(jule::Ptr<_225615962_Package>& _34427_pkg) {
	_23d019073_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_23d019073_catch_alive_init(_34427_pkg);
	_23d019073_eliminate_dead_globals(_34427_pkg);
	_23d019073_eliminate_dead_functions_package(_34427_pkg);
}



inline void _23d019073_eliminate(jule::Ptr<_23de59556_IR>& _35523_ir) {
	jule::I64 _35613_i = _35523_ir->_field_used.len() - 1LL;
	for (; _35613_i >= 0LL; (_35613_i)--) {
		{
			jule::Ptr<_225615962_ImportInfo> _35817_u = _35523_ir->_field_used[_35613_i];
			if ((!(_35817_u->_field_cpp_linked))) {
				_23d019073_eliminate_package(_35817_u->_field_package);
			}
		}
	_iter_next_5561261920:;
	}
	_iter_end_5561261920:;
	_23d019073_eliminate_package(_35523_ir->_field_main);
	_23d019073_deads=nullptr;
	_23d019073_checking=nullptr;
	_23d019073_current=jule::Any(nullptr);
}



inline void _23d0477ee_eliminate_dead_code_of_scope(jule::Ptr<_2255ba3ea_Scope> _7537_s) {
	jule::Ptr<_23d0477ee_ScopeDeadCode> _7613_sdc = jule::new_struct_ptr<_23d0477ee_ScopeDeadCode>(new( std::nothrow ) _23d0477ee_ScopeDeadCode(jule::Ptr<_23d0477ee_ScopeDeadCode>(),_7537_s,(&(_7537_s->_field_stmts)),jule::Int()));
	{
		_7613_sdc->_method_optimize_stmts();
	}
}



inline jule::Int _2265c1279_find_format_prefix(jule::Slice<jule::U8>& _924_bytes,jule::Int& _940_start) {
	jule::Int _1013_i = _940_start;
	while (_1013_i < _924_bytes.len()) {
		{
			jule::I32 _1214_r;
			jule::Int _1217_size;
			std::tie(_1214_r,_1217_size) = _23e9950d5_decode_rune(_924_bytes.slice(_1013_i));
			if (_1214_r == '{') {
				return _1013_i;
			}
			_1013_i+=_1217_size;
		}
	_iter_next_5561399840:;
	}
	_iter_end_5561399840:;
	return -1LL;
}



inline jule::Slice<jule::U8> _2265c1279_get_format_range(jule::Int& _2630_i,jule::Slice<jule::U8>& _2643_bytes) {
	jule::Int _279_start = _2630_i;
	jule::Int _2813_braces = 0LL;
	while (_2630_i < _2643_bytes.len()) {
		{
			jule::I32 _3014_r;
			jule::Int _3017_size;
			std::tie(_3014_r,_3017_size) = _23e9950d5_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				if (_match_expr == '{') {
					_case_begin_5561409952:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_5561410192:;
					{
						(_2813_braces)--;
						if (_2813_braces == 0LL) {
							return _2643_bytes.slice(_279_start,_2630_i);
						}
					}
				}
				_match_end_5561408064:;
			}
		}
	_iter_next_5561406864:;
	}
	_iter_end_5561406864:;
	return nullptr;
}



inline jule::Slice<jule::U8> _2265c1279_fmt_by_default(jule::Any& _4620_arg) {
	if (_4620_arg == nullptr) {
		return jule::Slice<jule::U8>({'n','i','l'});
	}
	{
		auto &_match_expr{ _4620_arg };
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_5561416224:;
			{
				return static_cast<jule::Slice<jule::U8>>(_23d12cd35_fmt_float(_4620_arg.operator jule::F32(),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_5561414128:;
			{
				return static_cast<jule::Slice<jule::U8>>(_23d12cd35_fmt_float(_4620_arg.operator jule::F64(),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_5561414224:;
			{
				return static_cast<jule::Slice<jule::U8>>(_23e028108_fmt_int(_4620_arg.operator jule::I8(),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_5561415888:;
			{
				return static_cast<jule::Slice<jule::U8>>(_23e028108_fmt_int(_4620_arg.operator jule::I16(),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_5561415984:;
			{
				return static_cast<jule::Slice<jule::U8>>(_23e028108_fmt_int(_4620_arg.operator jule::I32(),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_5561415104:;
			{
				return static_cast<jule::Slice<jule::U8>>(_23e028108_fmt_int(_4620_arg.operator jule::I64(),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_5561415200:;
			{
				return static_cast<jule::Slice<jule::U8>>(_23e028108_fmt_uint(_4620_arg.operator jule::U8(),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_5561415296:;
			{
				return static_cast<jule::Slice<jule::U8>>(_23e028108_fmt_uint(_4620_arg.operator jule::U16(),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_5561379296:;
			{
				return static_cast<jule::Slice<jule::U8>>(_23e028108_fmt_uint(_4620_arg.operator jule::U32(),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_5561379392:;
			{
				return static_cast<jule::Slice<jule::U8>>(_23e028108_fmt_uint(_4620_arg.operator jule::U64(),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_5561379488:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4620_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_5561379584:;
			{
				if (_4620_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>({'t','r','u','e'});
				}
				return jule::Slice<jule::U8>({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_5561407776:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4620_arg));
			}
		}
		_match_end_5561414688:;
	}
}



inline jule::Slice<jule::U8> _2265c1279_apply_fmt_by_default(jule::Int& _7530_j,jule::Slice<jule::Any>& _7539_args) {
	jule::Any _769_arg = _7539_args[_7530_j];
	(_7530_j)++;
	return _2265c1279_fmt_by_default(_769_arg);
}



inline jule::Slice<jule::U8> _2265c1279_apply_fmt(jule::Slice<jule::U8>& _8319_fmt,jule::Int& _8337_j,jule::Slice<jule::Any>& _8346_args) {
	if (_8319_fmt.len() == 2LL) {
		return _2265c1279_apply_fmt_by_default(_8337_j,_8346_args);
	}
	if ((_8319_fmt.len() == 4LL) && (_8319_fmt == jule::Slice<jule::U8>({'{','{','}','}'}))) {
		return jule::Slice<jule::U8>({'{','}'});
	}
	return _8319_fmt;
}



inline jule::Slice<jule::U8> _2265c1279_format_bytes(jule::Str _9717_fmt,jule::Slice<jule::Any> _9727_args) {
	jule::Slice<jule::U8> _9813_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_9717_fmt);
	if (_9727_args.len() == 0LL) {
		return _9813_fmt_bytes;
	}
	jule::Slice<jule::U8> _10413_bytes = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_9717_fmt.len()));
	jule::Int _10613_j = 0LL;
	jule::Int _10713_last = 0LL;
	jule::Int _10813_i = _2265c1279_find_format_prefix(_9813_fmt_bytes,_10713_last);
	for (; _10813_i != -1LL; _10813_i=static_cast<jule::Int>(_2265c1279_find_format_prefix(_9813_fmt_bytes,_10813_i))) {
		{
			_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last,_10813_i));
			jule::Slice<jule::U8> _11117_format = _2265c1279_get_format_range(_10813_i,_9813_fmt_bytes);
			if (_11117_format == nullptr) {
				goto _iter_next_5561449888;
			}
			_10413_bytes=jule::append(_10413_bytes,_2265c1279_apply_fmt(_11117_format,_10613_j,_9727_args));
			if (_10613_j >= _9727_args.len()) {
				_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10813_i));
				_10713_last=static_cast<jule::I64>(_9813_fmt_bytes.len());
				goto _iter_end_5561449888;
			}
			_10713_last=_10813_i;
		}
	_iter_next_5561449888:;
	}
	_iter_end_5561449888:;
	if (_10713_last < _9813_fmt_bytes.len()) {
		_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last));
	}
	return _10413_bytes;
}



inline jule::Str _2265c1279_format(jule::Str _15715_fmt,jule::Slice<jule::Any> _15725_args) {
	return static_cast<jule::Str>(_2265c1279_format_bytes(_15715_fmt,_15725_args));
}



inline jule::U64 _226630371_unix(void) {
	return static_cast<jule::U64>(time(nullptr));
}



inline jule::U64 _226630371_unix_year_to_seconds(jule::Uint _25725_y,jule::Bool& _25743_leap) {
	if ((_25725_y - 2LL) <= 136LL) {
		jule::Uint _25917_leaps = (_25725_y - 68LL) >> 2LL;
		_25743_leap=((_25725_y - 68LL) & 3LL) == 0LL;
		if (_25743_leap) {
			(_25917_leaps)--;
		}
		return static_cast<jule::Uint>((31536000LL * (_25725_y - 70LL)) + (86400LL * _25917_leaps));
	}
	jule::Uint _26713_leaps = 0LLU;
	jule::Uint _26813_centuries = 0LLU;
	jule::Uint _26913_cycles = jule::unsafe_div(_25725_y - 100LL,400LL);
	jule::Uint _27013_rem = jule::unsafe_mod(_25725_y - 100LL,400LL);
	if (_27013_rem < 0LL) {
		(_26913_cycles)--;
		_27013_rem+=400LL;
	}
	if (_27013_rem == 0LL) {
		_25743_leap=true;
		_26813_centuries=0LL;
		_26713_leaps=0LL;
	} else {
		if (_27013_rem >= 200LL) {
			if (_27013_rem >= 300LL) {
				_26813_centuries=3LL;
				_27013_rem-=300LL;
			} else {
				_26813_centuries=2LL;
				_27013_rem-=200LL;
			}
		} else {
			if (_27013_rem >= 100LL) {
				_26813_centuries=1LL;
				_27013_rem-=100LL;
			} else {
				_26813_centuries=0LL;
			}
		}
		if (_27013_rem == 0LL) {
			_25743_leap=false;
			_26713_leaps=0LL;
		} else {
			_26713_leaps=static_cast<jule::Uint>(jule::unsafe_div(_27013_rem,4LL));
			_27013_rem = jule::unsafe_mod(_27013_rem,4LL);
			_25743_leap=_27013_rem == 0LL;
		}
	}
	_26713_leaps+=static_cast<jule::Uint>((97LL * _26913_cycles) + (24LL * _26813_centuries));
	if (_25743_leap) {
		(_26713_leaps)++;
	}
	return static_cast<jule::Uint>(((((_25725_y - 100LL) * 31536000LL) + (_26713_leaps * 86400LL)) + 946684800LL) + 86400LL);
}



inline jule::U64 _226630371_unix_month_to_seconds(jule::Uint _31426_m,jule::Bool _31439_leap) {
	jule::U64 _31613_t = 0LLU;
	{
		auto &_match_expr{ _31426_m };
		if (_match_expr == 1LL) {
			_case_begin_5561497952:;
			{
				_31613_t=2678400LL;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_5561507008:;
			{
				_31613_t=5097600LL;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_5561507104:;
			{
				_31613_t=7776000LL;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_5561507200:;
			{
				_31613_t=10368000LL;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_5561507296:;
			{
				_31613_t=13046400LL;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_5561507408:;
			{
				_31613_t=15638400LL;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_5561507520:;
			{
				_31613_t=18316800LL;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_5561507632:;
			{
				_31613_t=20995200LL;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_5561507744:;
			{
				_31613_t=23587200LL;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_5561507856:;
			{
				_31613_t=26265600LL;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_5561507968:;
			{
				_31613_t=28857600LL;
			}
		}
		_match_end_5561506624:;
	}
	if (_31439_leap && (_31426_m >= 2LL)) {
		_31613_t+=86400LL;
	}
	return _31613_t;
}



inline jule::Bool _23d057e3b_iter_expr_is_copy_optimizable(jule::Ptr<_225aa4a5a_Data>& _3835_expr,jule::Ptr<_2258258db_Var>& _3849_v) {
	return ((!(_3835_expr->_field_lvalue)) && (!(_3835_expr->_field_kind->_method_mutable()))) || (!(_3849_v->_field_mutable));
}



inline jule::Str _23d057e3b_gen_range_index_iter(jule::Ptr<_2255ba3ea_RangeIter>& _4230_it) {
	jule::Str _439_begin = _22635bd4a_iter_begin_label_ident(static_cast<jule::Uintptr>(_4230_it));
	jule::Str _449_next = _22635bd4a_iter_next_label_ident(static_cast<jule::Uintptr>(_4230_it));
	jule::Str _4613_obj = jule::Str("{\n", 2);
	_2264c2c91_add_indent();
	_4613_obj+=_2264c2c91_indent();
	_4613_obj+=jule::Str("auto ", 5);
	if (_23d01979e_OPT_COPY && _4230_it->_field_expr->_field_lvalue) {
		_4613_obj+=jule::Str("&", 1);
	}
	_4613_obj+=jule::Str("expr = ", 7);
	_4613_obj+=_23d1d4c66_gen_expr_model(_4230_it->_field_expr->_field_model);
	_4613_obj+=jule::Str(";\n", 2);
	_4613_obj+=_2264c2c91_indent();
	_4613_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_4613_obj+=_2264c2c91_indent();
	_4613_obj+=_439_begin;
	_4613_obj+=jule::Str(":;\n", 3);
	_4613_obj+=_2264c2c91_indent();
	_4613_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_2264c2c91_add_indent();
	_4613_obj+=_2264c2c91_indent();
	if (_4230_it->_field_key_a != nullptr) {
		_4613_obj+=_2264c2c91_gen_var_init_expr(_4230_it->_field_key_a,jule::Str("it - expr.begin()", 17));
		_4613_obj+=jule::Str("\n", 1);
		_4613_obj+=_2264c2c91_indent();
	}
	if (_4230_it->_field_key_b != nullptr) {
		if (_23d01979e_OPT_COPY) {
			_4230_it->_field_key_b->_field_reference=_23d057e3b_iter_expr_is_copy_optimizable(_4230_it->_field_expr,_4230_it->_field_key_b);
		}
		_4613_obj+=_2264c2c91_gen_var_init_expr(_4230_it->_field_key_b,jule::Str("*it", 3));
		_4613_obj+=jule::Str("\n", 1);
		_4613_obj+=_2264c2c91_indent();
	}
	_4613_obj+=_23d057e3b_gen_scope(_4230_it->_field_scope);
	_4613_obj+=jule::Str("\n", 1);
	_4613_obj+=_2264c2c91_indent();
	_4613_obj+=_449_next;
	_4613_obj+=jule::Str(":;\n", 3);
	_4613_obj+=_2264c2c91_indent();
	_4613_obj+=jule::Str("++it;\n", 6);
	_4613_obj+=_2264c2c91_indent();
	if (_4230_it->_field_key_a != nullptr) {
		_4613_obj+=_22635bd4a_var_out_ident(_4230_it->_field_key_a);
		_4613_obj+=jule::Str("++;\n", 4);
		_4613_obj+=_2264c2c91_indent();
	}
	_4613_obj+=jule::Str("goto ", 5);
	_4613_obj+=_439_begin;
	_4613_obj+=jule::Str(";\n", 2);
	_2264c2c91_done_indent();
	_4613_obj+=_2264c2c91_indent();
	_4613_obj+=jule::Str("}\n", 2);
	_4613_obj+=_2264c2c91_indent();
	_4613_obj+=_22635bd4a_iter_end_label_ident(static_cast<jule::Uintptr>(_4230_it));
	_4613_obj+=jule::Str(":;\n", 3);
	_2264c2c91_done_indent();
	_4613_obj+=_2264c2c91_indent();
	_4613_obj+=jule::Str("}", 1);
	return _4613_obj;
}



inline jule::Str _23d057e3b_gen_range_hashmap_iter(jule::Ptr<_2255ba3ea_RangeIter>& _11232_it) {
	jule::Str _1139_begin = _22635bd4a_iter_begin_label_ident(static_cast<jule::Uintptr>(_11232_it));
	jule::Str _1149_next = _22635bd4a_iter_next_label_ident(static_cast<jule::Uintptr>(_11232_it));
	jule::Str _11613_obj = jule::Str("{\n", 2);
	_2264c2c91_add_indent();
	_11613_obj+=_2264c2c91_indent();
	_11613_obj+=jule::Str("auto ", 5);
	if (_23d01979e_OPT_COPY && _11232_it->_field_expr->_field_lvalue) {
		_11613_obj+=jule::Str("&", 1);
	}
	_11613_obj+=jule::Str("expr = ", 7);
	_11613_obj+=_23d1d4c66_gen_expr_model(_11232_it->_field_expr->_field_model);
	_11613_obj+=jule::Str(";\n", 2);
	_11613_obj+=_2264c2c91_indent();
	_11613_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_11613_obj+=_2264c2c91_indent();
	_11613_obj+=_1139_begin;
	_11613_obj+=jule::Str(":;\n", 3);
	_11613_obj+=_2264c2c91_indent();
	_11613_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_2264c2c91_add_indent();
	_11613_obj+=_2264c2c91_indent();
	if (_11232_it->_field_key_a != nullptr) {
		if (_23d01979e_OPT_COPY) {
			_11232_it->_field_key_a->_field_reference=_23d057e3b_iter_expr_is_copy_optimizable(_11232_it->_field_expr,_11232_it->_field_key_a);
		}
		_11613_obj+=_2264c2c91_gen_var_init_expr(_11232_it->_field_key_a,jule::Str("it->first", 9));
		_11613_obj+=jule::Str("\n", 1);
		_11613_obj+=_2264c2c91_indent();
	}
	if (_11232_it->_field_key_b != nullptr) {
		if (_23d01979e_OPT_COPY) {
			_11232_it->_field_key_b->_field_reference=_23d057e3b_iter_expr_is_copy_optimizable(_11232_it->_field_expr,_11232_it->_field_key_b);
		}
		_11613_obj+=_2264c2c91_gen_var_init_expr(_11232_it->_field_key_b,jule::Str("it->second", 10));
		_11613_obj+=jule::Str("\n", 1);
		_11613_obj+=_2264c2c91_indent();
	}
	_11613_obj+=_23d057e3b_gen_scope(_11232_it->_field_scope);
	_11613_obj+=jule::Str("\n", 1);
	_11613_obj+=_2264c2c91_indent();
	_11613_obj+=_1149_next;
	_11613_obj+=jule::Str(":;\n", 3);
	_11613_obj+=_2264c2c91_indent();
	_11613_obj+=jule::Str("++it;\n", 6);
	_11613_obj+=_2264c2c91_indent();
	_11613_obj+=jule::Str("goto ", 5);
	_11613_obj+=_1139_begin;
	_11613_obj+=jule::Str(";\n", 2);
	_2264c2c91_done_indent();
	_11613_obj+=_2264c2c91_indent();
	_11613_obj+=jule::Str("}\n", 2);
	_11613_obj+=_2264c2c91_indent();
	_11613_obj+=_22635bd4a_iter_end_label_ident(static_cast<jule::Uintptr>(_11232_it));
	_11613_obj+=jule::Str(":;\n", 3);
	_2264c2c91_done_indent();
	_11613_obj+=_2264c2c91_indent();
	_11613_obj+=jule::Str("}", 1);
	return _11613_obj;
}



inline jule::Str _23d057e3b_gen_if(jule::Ptr<_2255ba3ea_If> _18015_i) {
	jule::Str _18113_obj = jule::Str("if (", 4);
	_18113_obj+=_23d1d4c66_gen_expr(_18015_i->_field_expr);
	_18113_obj+=jule::Str(") ", 2);
	_18113_obj+=_23d057e3b_gen_scope(_18015_i->_field_scope);
	return _18113_obj;
}



inline jule::Str _23d057e3b_gen_conditional(jule::Ptr<_2255ba3ea_Conditional> _18824_c) {
	jule::Str _18913_obj = _23d057e3b_gen_if(_18824_c->_field_elifs[0LL]);
	{
		auto expr = _18824_c->_field_elifs.slice(1LL);
		auto it = expr.begin();
		_iter_begin_5561932624:;
		if (it != expr.end()) {
			jule::Ptr<_2255ba3ea_If> _23d057e3b_elif = *it;
			{
				_18913_obj+=jule::Str(" else ", 6);
				_18913_obj+=_23d057e3b_gen_if(_23d057e3b_elif);
			}
			_iter_next_5561932624:;
			++it;
			goto _iter_begin_5561932624;
		}
		_iter_end_5561932624:;
	}
	if (_18824_c->_field_default != nullptr) {
		_18913_obj+=jule::Str(" else ", 6);
		_18913_obj+=_23d057e3b_gen_scope(_18824_c->_field_default->_field_scope);
	}
	return _18913_obj;
}



inline jule::Str _23d057e3b_gen_inf_iter(jule::Ptr<_2255ba3ea_InfIter> _20421_it) {
	jule::Str _20513_obj = jule::Str("for (;;) {\n", 11);
	_2264c2c91_add_indent();
	_20513_obj+=_2264c2c91_indent();
	_20513_obj+=_23d057e3b_gen_scope(_20421_it->_field_scope);
	_2264c2c91_done_indent();
	jule::Str _2129_indent = _2264c2c91_indent();
	_20513_obj+=jule::Str("\n", 1);
	_20513_obj+=_2129_indent;
	_20513_obj+=_22635bd4a_iter_next_label_ident(static_cast<jule::Uintptr>(_20421_it));
	_20513_obj+=jule::Str(":;\n", 3);
	_20513_obj+=_2129_indent;
	_20513_obj+=jule::Str("}\n", 2);
	_20513_obj+=_2129_indent;
	_20513_obj+=_22635bd4a_iter_end_label_ident(static_cast<jule::Uintptr>(_20421_it));
	_20513_obj+=jule::Str(":;", 2);
	return _20513_obj;
}



inline jule::Str _23d057e3b_gen_while_iter(jule::Ptr<_2255ba3ea_WhileIter> _22723_it) {
	jule::Str _22813_obj = jule::Str();
	if ((_22723_it->_field_expr != nullptr) && (_22723_it->_field_next == nullptr)) {
		_22813_obj+=jule::Str("while (", 7);
		_22813_obj+=_23d1d4c66_gen_expr(_22723_it->_field_expr);
		_22813_obj+=jule::Str(") {\n", 4);
	} else {
		_22813_obj+=jule::Str("for (; ", 7);
		if (_22723_it->_field_expr != nullptr) {
			_22813_obj+=_23d1d4c66_gen_expr(_22723_it->_field_expr);
		}
		_22813_obj+=jule::Str("; ", 2);
		if (_22723_it->_field_next != nullptr) {
			jule::Str _24017_st = _23d057e3b_gen_st(_22723_it->_field_next);
			_22813_obj+=_24017_st.slice(0LL,_24017_st.len() - 1LL);
		}
		_22813_obj+=jule::Str(") {\n", 4);
	}
	_2264c2c91_add_indent();
	_22813_obj+=_2264c2c91_indent();
	_22813_obj+=_23d057e3b_gen_scope(_22723_it->_field_scope);
	_22813_obj+=jule::Str("\n", 1);
	_2264c2c91_done_indent();
	_22813_obj+=_2264c2c91_indent();
	_22813_obj+=_22635bd4a_iter_next_label_ident(static_cast<jule::Uintptr>(_22723_it));
	_22813_obj+=jule::Str(":;\n", 3);
	_22813_obj+=_2264c2c91_indent();
	_22813_obj+=jule::Str("}\n", 2);
	_22813_obj+=_2264c2c91_indent();
	_22813_obj+=_22635bd4a_iter_end_label_ident(static_cast<jule::Uintptr>(_22723_it));
	_22813_obj+=jule::Str(":;", 2);
	return _22813_obj;
}



inline jule::Str _23d057e3b_gen_range_iter(jule::Ptr<_2255ba3ea_RangeIter> _26323_it) {
	{
		if (_26323_it->_field_expr->_field_kind->_method_slc() != nullptr) {
			_case_begin_5561958896:;
			{
				return _23d057e3b_gen_range_index_iter(_26323_it);
			}
		}
		else if (_26323_it->_field_expr->_field_kind->_method_arr() != nullptr) {
			_case_begin_5561959200:;
			{
				return _23d057e3b_gen_range_index_iter(_26323_it);
			}
		}
		else if (_26323_it->_field_expr->_field_kind->_method_map() != nullptr) {
			_case_begin_5561959632:;
			{
				return _23d057e3b_gen_range_hashmap_iter(_26323_it);
			}
		}
		else {
			_case_begin_5561953504:;
			{
				return _23d057e3b_gen_range_index_iter(_26323_it);
			}
		}
		_match_end_5561953392:;
	}
}



inline jule::Str _23d057e3b_gen_cont(jule::Ptr<_2255ba3ea_ContSt> _27213_c) {
	jule::Str _27313_obj = jule::Str("goto ", 5);
	_27313_obj+=_22635bd4a_iter_next_label_ident(_27213_c->_field_it);
	_27313_obj+=jule::Str(";", 1);
	return _27313_obj;
}



inline jule::Str _23d057e3b_gen_label(jule::Ptr<_2255ba3ea_Label> _27914_l) {
	return _22635bd4a_label_ident(_27914_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _23d057e3b_gen_goto(jule::Ptr<_2255ba3ea_GotoSt> _28313_gt) {
	jule::Str _28413_obj = jule::Str("goto ", 5);
	_28413_obj+=_22635bd4a_label_ident(_28313_gt->_field_ident);
	_28413_obj+=jule::Str(";", 1);
	return _28413_obj;
}



inline jule::Str _23d057e3b_gen_postfix(jule::Ptr<_2255ba3ea_Postfix> _29020_p) {
	jule::Str _29113_obj = jule::Str("(", 1);
	_29113_obj+=_23d1d4c66_gen_expr(_29020_p->_field_expr);
	_29113_obj+=jule::Str(")", 1);
	_29113_obj+=_29020_p->_field_op;
	_29113_obj+=jule::Str(";", 1);
	return _29113_obj;
}



inline jule::Str _23d057e3b_gen_div_by_zero_assign(jule::Ptr<_2255ba3ea_Assign> _29931_a) {
	jule::Str _30013_obj = _23d1d4c66_gen_expr(_29931_a->_field_l);
	_30013_obj+=jule::Str(" = ", 3);
	_30013_obj+=_23d1d4c66_gen_div_by_zero_binop_expr_model(_29931_a->_field_op.slice(0LL,1LL),_29931_a->_field_l,_29931_a->_field_r);
	_30013_obj+=jule::Str(";", 1);
	return _30013_obj;
}



inline jule::Str _23d057e3b_gen_assign(jule::Ptr<_2255ba3ea_Assign> _30719_a) {
	{
		auto &_match_expr{ _30719_a->_field_op };
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_5561977120:;
			{
				return _23d057e3b_gen_div_by_zero_assign(_30719_a);
			}
		}
		_match_end_5561977040:;
	}
	jule::Str _31413_obj = _23d1d4c66_gen_expr(_30719_a->_field_l);
	_31413_obj+=_30719_a->_field_op;
	if (_23d01979e_OPT_APPEND) {
		{
			auto &_match_expr{ _30719_a->_field_r };
			if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel>>()) {
				_case_begin_5561981968:;
				{
					jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel> _31921_model = _30719_a->_field_r.operator jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel>();
					jule::Str _32018_expr;
					jule::Bool _32024_optimized;
					std::tie(_32018_expr,_32024_optimized) = _23d1d4c66_gen_builtin_append_call_expr_model_assign(_30719_a->_field_l,_31921_model);
					if (_32024_optimized) {
						return _32018_expr;
					}
					_31413_obj+=_32018_expr;
				}
			}
			else {
				_case_begin_5561979296:;
				{
					_31413_obj+=_23d1d4c66_gen_expr(_30719_a->_field_r);
				}
			}
			_match_end_5561981184:;
		}
	} else {
		_31413_obj+=_23d1d4c66_gen_expr(_30719_a->_field_r);
	}
	_31413_obj+=jule::Str(";", 1);
	return _31413_obj;
}



inline jule::Str _23d057e3b_gen_multi_assign(jule::Ptr<_2255ba3ea_MultiAssign> _33625_a) {
	jule::Str _33713_obj = jule::Str("std::tie(", 9);
	{
		auto &expr = _33625_a->_field_l;
		auto it = expr.begin();
		_iter_begin_5561988464:;
		if (it != expr.end()) {
			jule::Any _23d057e3b_l = *it;
			{
				if (_23d057e3b_l == nullptr) {
					_33713_obj+=jule::Str("std::ignore", 11);
					_33713_obj+=jule::Str(",", 1);
				} else {
					_33713_obj+=_23d1d4c66_gen_expr(_23d057e3b_l);
					_33713_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_5561988464:;
			++it;
			goto _iter_begin_5561988464;
		}
		_iter_end_5561988464:;
	}
	_33713_obj=_33713_obj.slice(0LL,_33713_obj.len() - 1LL);
	_33713_obj+=jule::Str(") = ", 4);
	_33713_obj+=_23d1d4c66_gen_expr(_33625_a->_field_r);
	_33713_obj+=jule::Str(";", 1);
	return _33713_obj;
}



inline jule::Str _23d057e3b_get_case_match_expr(jule::Ptr<_2255ba3ea_Match>& _35829_m) {
	if ((!(_35829_m->_field_expr->_method_is_const()))) {
		return jule::Str("_match_expr", 11);
	}
	if ((!(_35829_m->_field_expr->_field_constant->_method_is_bool())) || (!(_35829_m->_field_expr->_field_constant->_method_read_bool()))) {
		return _23d1d4c66_gen_expr_model(_35829_m->_field_expr->_field_model);
	}
	return jule::Str();
}



inline jule::Str _23d057e3b_gen_case(jule::Ptr<_2255ba3ea_Match> _36817_m,jule::Ptr<_2255ba3ea_Case> _36832_c) {
	jule::Str _36913_obj = jule::Str();
	if ((_36832_c->_field_exprs.len() != 0LL) && (!(_36817_m->_method_is_generic_type_match()))) {
		if ((_36817_m->_field_cases.len() > 0LL) && (_36817_m->_field_cases[0LL] == _36832_c)) {
			_36913_obj+=jule::Str("if (", 4);
		} else {
			_36913_obj+=jule::Str("else if (", 9);
		}
		{
			auto &expr = _36832_c->_field_exprs;
			auto it = expr.begin();
			_iter_begin_5562003264:;
			if (it != expr.end()) {
				jule::Int _23d057e3b_i = it - expr.begin();
				jule::Ptr<_225aa4a5a_Data> _23d057e3b_expr = *it;
				{
					{
						if ((!(_36817_m->_field_type_match))) {
							_case_begin_5562005424:;
							{
								jule::Str _38021_case_expr = _23d057e3b_get_case_match_expr(_36817_m);
								if (_36817_m->_field_expr->_method_good_operand(_23d057e3b_expr)) {
									if (_38021_case_expr.len() != 0LL) {
										_36913_obj+=_38021_case_expr;
										_36913_obj+=jule::Str(" == ", 4);
									}
									_36913_obj+=_23d1d4c66_gen_expr(_23d057e3b_expr->_field_model);
								} else {
									_36913_obj+=_23d1d4c66_gen_expr(_23d057e3b_expr->_field_model);
									if (_38021_case_expr.len() != 0LL) {
										_36913_obj+=jule::Str(" == ", 4);
										_36913_obj+=_38021_case_expr;
									}
								}
							}
						}
						else {
							_case_begin_5562004624:;
							{
								_36913_obj+=jule::Str("_match_expr", 11);
								_36913_obj+=jule::Str(".type_is<", 9);
								_36913_obj+=_23d1d4c66_gen_expr(_23d057e3b_expr->_field_model);
								_36913_obj+=jule::Str(">()", 3);
							}
						}
						_match_end_5562004448:;
					}
					if ((_23d057e3b_i + 1LL) < _36832_c->_field_exprs.len()) {
						_36913_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_5562003264:;
				++it;
				_23d057e3b_i++;
				goto _iter_begin_5562003264;
			}
			_iter_end_5562003264:;
		}
		_36913_obj+=jule::Str(") ", 2);
	} else if ((_36817_m->_field_default == _36832_c) && (_36817_m->_field_cases.len() != 0LL)) {
		_36913_obj+=_2264c2c91_indent();
		_36913_obj+=jule::Str("else ", 5);
	} else {
		_36913_obj+=_2264c2c91_indent();
	}
	_2264c2c91_add_indent();
	_36913_obj+=jule::Str("{\n", 2);
	_36913_obj+=_2264c2c91_indent();
	_36913_obj+=_22635bd4a_case_begin_label_ident(static_cast<jule::Uintptr>(_36832_c));
	_36913_obj+=jule::Str(":;\n", 3);
	if (_36832_c->_field_scope->_field_stmts.len() > 0LL) {
		_36913_obj+=_2264c2c91_indent();
		_36913_obj+=_23d057e3b_gen_scope(_36832_c->_field_scope);
		_36913_obj+=jule::Str("\n", 1);
	}
	_2264c2c91_done_indent();
	_36913_obj+=_2264c2c91_indent();
	_36913_obj+=jule::Str("}", 1);
	return _36913_obj;
}



inline jule::Str _23d057e3b_gen_match(jule::Ptr<_2255ba3ea_Match> _43518_m) {
	if ((_43518_m->_field_cases.len() == 0LL) && (_43518_m->_field_default == nullptr)) {
		return jule::Str();
	}
	jule::Bool _4409_generic_type_match = _43518_m->_method_is_generic_type_match();
	if (_4409_generic_type_match && ((_43518_m->_field_default == nullptr) || (_43518_m->_field_default->_field_scope->_field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _44513_obj = jule::Str("{\n", 2);
	_2264c2c91_add_indent();
	_44513_obj+=_2264c2c91_indent();
	if ((!(_4409_generic_type_match)) && (!(_43518_m->_field_expr->_method_is_const()))) {
		if (_43518_m->_field_expr->_field_lvalue && _23d01979e_OPT_COPY) {
			_44513_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_44513_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_44513_obj+=_23d1d4c66_gen_expr(_43518_m->_field_expr->_field_model);
		_44513_obj+=jule::Str(" };\n", 4);
		_44513_obj+=_2264c2c91_indent();
	}
	if (_43518_m->_field_cases.len() > 0LL) {
		_44513_obj+=_23d057e3b_gen_case(_43518_m,_43518_m->_field_cases[0LL]);
		{
			auto expr = _43518_m->_field_cases.slice(1LL);
			auto it = expr.begin();
			_iter_begin_5562032320:;
			if (it != expr.end()) {
				jule::Ptr<_2255ba3ea_Case> _23d057e3b_c = *it;
				{
					_44513_obj+=jule::Str("\n", 1);
					_44513_obj+=_2264c2c91_indent();
					_44513_obj+=_23d057e3b_gen_case(_43518_m,_23d057e3b_c);
				}
				_iter_next_5562032320:;
				++it;
				goto _iter_begin_5562032320;
			}
			_iter_end_5562032320:;
		}
	}
	if (_43518_m->_field_default != nullptr) {
		_44513_obj+=jule::Str("\n", 1);
		_44513_obj+=_23d057e3b_gen_case(_43518_m,_43518_m->_field_default);
	}
	_44513_obj+=jule::Str("\n", 1);
	_44513_obj+=_2264c2c91_indent();
	_44513_obj+=_22635bd4a_match_end_label_ident(static_cast<jule::Uintptr>(_43518_m));
	_44513_obj+=jule::Str(":;", 2);
	_44513_obj+=jule::Str("\n", 1);
	_2264c2c91_done_indent();
	_44513_obj+=_2264c2c91_indent();
	_44513_obj+=jule::Str("}", 1);
	return _44513_obj;
}



inline jule::Str _23d057e3b_gen_fall_st(jule::Ptr<_2255ba3ea_FallSt> _49116_f) {
	jule::Str _49213_obj = jule::Str("goto ", 5);
	_49213_obj+=_22635bd4a_case_begin_label_ident(_49116_f->_field_dest_case);
	_49213_obj+=jule::Str(";", 1);
	return _49213_obj;
}



inline jule::Str _23d057e3b_gen_break_st(jule::Ptr<_2255ba3ea_BreakSt> _49817_b) {
	jule::Str _49913_obj = jule::Str("goto ", 5);
	if (_49817_b->_field_it != 0LL) {
		_49913_obj+=_22635bd4a_iter_end_label_ident(_49817_b->_field_it);
	} else {
		_49913_obj+=_22635bd4a_match_end_label_ident(_49817_b->_field_mtch);
	}
	_49913_obj+=jule::Str(";", 1);
	return _49913_obj;
}



inline jule::Str _23d057e3b_gen_ret_vars(jule::Ptr<_2255ba3ea_RetSt> _51021_r) {
	jule::Str _51113_obj = jule::Str();
	{
		auto &expr = _51021_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_5562046320:;
		if (it != expr.end()) {
			jule::Ptr<_2258258db_Var> _23d057e3b_v = *it;
			{
				if (_23e730c0b_is_ignore_ident(_23d057e3b_v->_field_ident)) {
					_51113_obj+=_23d1d4c66_get_init_expr(_23d057e3b_v->_field_kind->_field_kind);
				} else {
					_51113_obj+=_22635bd4a_var_out_ident(_23d057e3b_v);
				}
				_51113_obj+=jule::Str(",", 1);
			}
			_iter_next_5562046320:;
			++it;
			goto _iter_begin_5562046320;
		}
		_iter_end_5562046320:;
	}
	_51113_obj=_51113_obj.slice(0LL,_51113_obj.len() - 1LL);
	jule::Str _52413_oobj = jule::Str("return ", 7);
	if (_51021_r->_field_func->_field_decl->_field_exceptional) {
		_52413_oobj+=jule::Str("jule::Exceptional(jule::Any(),", 30);
	}
	if (_51021_r->_field_vars.len() > 1LL) {
		_52413_oobj+=jule::Str("std::make_tuple(", 16);
		_52413_oobj+=_51113_obj;
		_52413_oobj+=jule::Str(")", 1);
	} else {
		_52413_oobj+=_51113_obj;
	}
	if (_51021_r->_field_func->_field_decl->_field_exceptional) {
		_52413_oobj+=jule::Str(")", 1);
	}
	_52413_oobj+=jule::Str(";", 1);
	return _52413_oobj;
}



inline jule::Str _23d057e3b_gen_ret_expr_tuple(jule::Ptr<_2255ba3ea_RetSt> _54627_r) {
	jule::Slice<jule::Ptr<_225aa4a5a_Data>> _54713_datas = _54627_r->_field_expr.operator jule::Ptr<_2255b85b3_TupleExprModel>()->_field_datas;
	jule::Str _54813_obj = jule::Str();
	{
		auto &expr = _54627_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_5562057440:;
		if (it != expr.end()) {
			jule::Int _23d057e3b_i = it - expr.begin();
			jule::Ptr<_2258258db_Var> _23d057e3b_v = *it;
			{
				if (_23e730c0b_is_ignore_ident(_23d057e3b_v->_field_ident)) {
					goto _iter_next_5562057440;
				}
				jule::Any _55417_model = _54713_datas[_23d057e3b_i]->_field_model;
				if (_55417_model == _23d057e3b_v) {
					goto _iter_next_5562057440;
				}
				jule::Str _55913_ident = _22635bd4a_var_out_ident(_23d057e3b_v);
				_54813_obj+=_55913_ident;
				_54813_obj+=jule::Str(" = ", 3);
				_54813_obj+=_23d1d4c66_gen_expr(_55417_model);
				_54813_obj+=jule::Str(";\n", 2);
				_54813_obj+=_2264c2c91_indent();
			}
			_iter_next_5562057440:;
			++it;
			_23d057e3b_i++;
			goto _iter_begin_5562057440;
		}
		_iter_end_5562057440:;
	}
	jule::Str _56713_oobj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _54713_datas;
		auto it = expr.begin();
		_iter_begin_5562065312:;
		if (it != expr.end()) {
			jule::Int _23d057e3b_i = it - expr.begin();
			jule::Ptr<_225aa4a5a_Data> _23d057e3b_d = *it;
			{
				jule::Ptr<_2258258db_Var> _56917_v = _54627_r->_field_vars[_23d057e3b_i];
				if (_23e730c0b_is_ignore_ident(_56917_v->_field_ident)) {
					_56713_oobj+=_23d1d4c66_gen_expr(_23d057e3b_d->_field_model);
				} else {
					_56713_oobj+=_22635bd4a_var_out_ident(_56917_v);
				}
				_56713_oobj+=jule::Str(",", 1);
			}
			_iter_next_5562065312:;
			++it;
			_23d057e3b_i++;
			goto _iter_begin_5562065312;
		}
		_iter_end_5562065312:;
	}
	_56713_oobj=_56713_oobj.slice(0LL,_56713_oobj.len() - 1LL);
	_56713_oobj+=jule::Str(")", 1);
	if (_54627_r->_field_func->_field_decl->_field_exceptional) {
		_54813_obj+=jule::Str("return jule::Exceptional(jule::Any(),", 37);
		_54813_obj+=_56713_oobj;
		_54813_obj+=jule::Str(")", 1);
	} else {
		_54813_obj+=jule::Str("return ", 7);
		_54813_obj+=_56713_oobj;
	}
	_54813_obj+=jule::Str(";", 1);
	return _54813_obj;
}



inline jule::Str _23d057e3b_gen_ret_expr(jule::Ptr<_2255ba3ea_RetSt> _59421_r) {
	if (_59421_r->_field_vars.len() > 1LL) {
		return _23d057e3b_gen_ret_expr_tuple(_59421_r);
	}
	if (_59421_r->_field_vars.len() > 0LL) {
		jule::Ptr<_2258258db_Var> _60117_v = _59421_r->_field_vars[0LL];
		if ((!(_23e730c0b_is_ignore_ident(_60117_v->_field_ident))) && (_59421_r->_field_expr != _60117_v)) {
			jule::Str _60317_ident = _22635bd4a_var_out_ident(_60117_v);
			jule::Str _60421_obj = _60317_ident;
			_60421_obj+=jule::Str(" = ", 3);
			_60421_obj+=_23d1d4c66_gen_expr(_59421_r->_field_expr);
			_60421_obj+=jule::Str(";\n", 2);
			_60421_obj+=_2264c2c91_indent();
			if (_59421_r->_field_func->_field_decl->_field_exceptional) {
				_60421_obj+=jule::Str("return jule::Exceptional(jule::Any(),", 37);
				_60421_obj+=_60317_ident;
				_60421_obj+=jule::Str(")", 1);
			} else {
				_60421_obj+=jule::Str("return ", 7);
				_60421_obj+=_60317_ident;
			}
			_60421_obj+=jule::Str(";", 1);
			return _60421_obj;
		}
	}
	if (_59421_r->_field_func->_field_decl->_field_exceptional) {
		jule::Str _62317_obj = jule::Str("return jule::Exceptional(jule::Any(),", 37);
		_62317_obj+=_23d1d4c66_gen_expr(_59421_r->_field_expr);
		_62317_obj+=jule::Str(")", 1);
		_62317_obj+=jule::Str(";", 1);
		return _62317_obj;
	}
	jule::Str _63013_obj = jule::Str("return ", 7);
	_63013_obj+=_23d1d4c66_gen_expr(_59421_r->_field_expr);
	_63013_obj+=jule::Str(";", 1);
	return _63013_obj;
}



inline jule::Str _23d057e3b_gen_ret_st(jule::Ptr<_2255ba3ea_RetSt> _63619_r) {
	if ((_63619_r->_field_expr == nullptr) && (_63619_r->_field_vars.len() == 0LL)) {
		if (_63619_r->_field_func->_field_decl->_field_exceptional) {
			return jule::Str("return jule::VoidExceptional();", 31);
		}
		return jule::Str("return;", 7);
	}
	if (_63619_r->_field_expr == nullptr) {
		return _23d057e3b_gen_ret_vars(_63619_r);
	}
	return _23d057e3b_gen_ret_expr(_63619_r);
}



inline jule::Str _23d057e3b_gen_data_expr(jule::Ptr<_225aa4a5a_Data> _66922_d) {
	return _23d1d4c66_gen_expr(_66922_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _23d057e3b_gen_scope_var(jule::Ptr<_2258258db_Var> _67322_v) {
	if (_67322_v->_field_constant) {
		return jule::Str();
	}
	return _2264c2c91_gen_var(_67322_v);
}



inline jule::Str _23d057e3b_gen_st(jule::Any _68115_st) {
	{
		auto &_match_expr{ _68115_st };
		if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Scope>>()) {
			_case_begin_5562102672:;
			{
				return _23d057e3b_gen_scope(_68115_st.operator jule::Ptr<_2255ba3ea_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
			_case_begin_5562102768:;
			{
				return _23d057e3b_gen_scope_var(_68115_st.operator jule::Ptr<_2258258db_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225aa4a5a_Data>>()) {
			_case_begin_5562102304:;
			{
				return _23d057e3b_gen_data_expr(_68115_st.operator jule::Ptr<_225aa4a5a_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Conditional>>()) {
			_case_begin_5562102416:;
			{
				return _23d057e3b_gen_conditional(_68115_st.operator jule::Ptr<_2255ba3ea_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_InfIter>>()) {
			_case_begin_5562102528:;
			{
				return _23d057e3b_gen_inf_iter(_68115_st.operator jule::Ptr<_2255ba3ea_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_WhileIter>>()) {
			_case_begin_5562101808:;
			{
				return _23d057e3b_gen_while_iter(_68115_st.operator jule::Ptr<_2255ba3ea_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_RangeIter>>()) {
			_case_begin_5562101904:;
			{
				return _23d057e3b_gen_range_iter(_68115_st.operator jule::Ptr<_2255ba3ea_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_ContSt>>()) {
			_case_begin_5562102016:;
			{
				return _23d057e3b_gen_cont(_68115_st.operator jule::Ptr<_2255ba3ea_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Label>>()) {
			_case_begin_5562103216:;
			{
				return _23d057e3b_gen_label(_68115_st.operator jule::Ptr<_2255ba3ea_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_GotoSt>>()) {
			_case_begin_5562103312:;
			{
				return _23d057e3b_gen_goto(_68115_st.operator jule::Ptr<_2255ba3ea_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Postfix>>()) {
			_case_begin_5562103408:;
			{
				return _23d057e3b_gen_postfix(_68115_st.operator jule::Ptr<_2255ba3ea_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Assign>>()) {
			_case_begin_5562103504:;
			{
				return _23d057e3b_gen_assign(_68115_st.operator jule::Ptr<_2255ba3ea_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_MultiAssign>>()) {
			_case_begin_5562103600:;
			{
				return _23d057e3b_gen_multi_assign(_68115_st.operator jule::Ptr<_2255ba3ea_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_Match>>()) {
			_case_begin_5562103696:;
			{
				return _23d057e3b_gen_match(_68115_st.operator jule::Ptr<_2255ba3ea_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_FallSt>>()) {
			_case_begin_5562103808:;
			{
				return _23d057e3b_gen_fall_st(_68115_st.operator jule::Ptr<_2255ba3ea_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_BreakSt>>()) {
			_case_begin_5562103920:;
			{
				return _23d057e3b_gen_break_st(_68115_st.operator jule::Ptr<_2255ba3ea_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ba3ea_RetSt>>()) {
			_case_begin_5562104032:;
			{
				return _23d057e3b_gen_ret_st(_68115_st.operator jule::Ptr<_2255ba3ea_RetSt>());
			}
		}
		else {
			_case_begin_5562099920:;
			{
				return jule::Str("<unimplemented_stmt>", 20);
			}
		}
		_match_end_5562101520:;
	}
}



inline jule::Str _23d057e3b_gen_scope(jule::Ptr<_2255ba3ea_Scope> _70518_s) {
	jule::Str _70613_obj = jule::Str("{\n", 2);
	_2264c2c91_add_indent();
	{
		auto &expr = _70518_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_5562130560:;
		if (it != expr.end()) {
			jule::Any _23d057e3b_st = *it;
			{
				_70613_obj+=_2264c2c91_indent();
				_70613_obj+=_23d057e3b_gen_st(_23d057e3b_st);
				_70613_obj+=jule::Str("\n", 1);
			}
			_iter_next_5562130560:;
			++it;
			goto _iter_begin_5562130560;
		}
		_iter_end_5562130560:;
	}
	_2264c2c91_done_indent();
	_70613_obj+=_2264c2c91_indent();
	_70613_obj+=jule::Str("}", 1);
	if (_70518_s->_field_deferred) {
		_70613_obj=(jule::Str("__JULE_DEFER(", 13) + _70613_obj) + jule::Str(");", 2);
	}
	return _70613_obj;
}



inline jule::Str _23d057e3b_gen_fn_scope(jule::Ptr<_2252d6a73_FnIns> _72721_f) {
	jule::Str _72813_obj = (((_72721_f->_field_owner != nullptr)) ? (_23d057e3b_gen_method_scope(_72721_f)) : (_23d057e3b_gen_scope(_72721_f->_field_scope)));
	if (_72721_f->_field_decl->_field_exceptional && _72721_f->_field_decl->_method_is_void()) {
		_72813_obj=_72813_obj.slice(0LL,_72813_obj.len() - 2LL) + jule::Str(" return jule::VoidExceptional(); }", 34);
	}
	return _72813_obj;
}



inline jule::Str _23d057e3b_gen_method_scope(jule::Ptr<_2252d6a73_FnIns> _74025_f) {
	return _23d057e3b_gen_scope(_74025_f->_field_scope);
}



inline jule::Str _23d1d4c66_concat_all_parts(jule::Slice<_23e730c0b_Token> _7821_parts) {
	jule::Str _7913_s = jule::Str();
	{
		auto &expr = _7821_parts;
		auto it = expr.begin();
		_iter_begin_5562141872:;
		if (it != expr.end()) {
			_23e730c0b_Token &_23d1d4c66_part = *it;
			{
				_7913_s+=_23d1d4c66_part._field_kind;
			}
			_iter_next_5562141872:;
			++it;
			goto _iter_begin_5562141872;
		}
		_iter_end_5562141872:;
	}
	return _7913_s;
}



inline jule::Str _23d1d4c66_get_accessor(jule::Ptr<_23e2b5818_TypeKind>& _8622_t) {
	if ((_8622_t->_method_sptr() != nullptr) || (_8622_t->_method_ptr() != nullptr)) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _23d1d4c66_decompose_common_esq(jule::U8 _9325_b) {
	{
		auto &_match_expr{ _9325_b };
		if (_match_expr == '\\') {
			_case_begin_5562148048:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_5562147616:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_5562147248:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_5562147344:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_5562147440:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_5562146672:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_5562146768:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_5562146864:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_5562146960:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_5562148160:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_5562145792:;
			{
				return jule::Str();
			}
		}
		_match_end_5562146256:;
	}
}



inline jule::Str _23d1d4c66_sbtoa(jule::U8 _10910_b) {
	if (_10910_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_10910_b <= 127LL) {
		jule::Str _11513_seq = _23d1d4c66_decompose_common_esq(_10910_b);
		if (_11513_seq != jule::Str()) {
			return _11513_seq;
		}
		if ((32LL <= _10910_b) && (_10910_b <= 126LL)) {
			return static_cast<jule::Str>(_10910_b);
		}
	}
	jule::Str _1259_seq = _23e028108_fmt_uint(static_cast<jule::U64>(_10910_b),8LL);
	if (_1259_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1259_seq;
	}
	return jule::Str("\\", 1) + _1259_seq;
}



inline jule::Str _23d1d4c66_get_cstr_model(jule::Slice<jule::U8> _13219_bytes) {
	jule::Str _13313_lit = jule::Str();
	{
		auto &expr = _13219_bytes;
		auto it = expr.begin();
		_iter_begin_5562164112:;
		if (it != expr.end()) {
			jule::U8 &_23d1d4c66_b = *it;
			{
				_13313_lit+=_23d1d4c66_sbtoa(_23d1d4c66_b);
			}
			_iter_next_5562164112:;
			++it;
			goto _iter_begin_5562164112;
		}
		_iter_end_5562164112:;
	}
	return (jule::Str("\"", 1) + _13313_lit) + jule::Str("\"", 1);
}



inline jule::Str _23d1d4c66_get_str_model(jule::Ptr<_226100d86_Const>& _14119_c) {
	jule::Str _1429_content = _14119_c->_method_read_str();
	if (_1429_content.len() == 0LL) {
		return _22635bd4a_as_jt(jule::Str("str", 3)) + jule::Str("()", 2);
	}
	jule::Slice<jule::U8> _1479_bytes = static_cast<jule::Slice<jule::U8>>(_1429_content);
	jule::Str _1489_len = _23e028108_fmt_int(static_cast<jule::I64>(_1479_bytes.len()),10LL);
	jule::Str _1499_lit = _23d1d4c66_get_cstr_model(_1479_bytes);
	return ((((_22635bd4a_as_jt(jule::Str("str", 3)) + jule::Str("(", 1)) + _1499_lit) + jule::Str(", ", 2)) + _1489_len) + jule::Str(")", 1);
}



inline jule::Str _23d1d4c66_get_bool_model(jule::Ptr<_226100d86_Const>& _15320_c) {
	if (_15320_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _23d1d4c66_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _23d1d4c66_gen_float_special_cases(jule::F64& _16229_x) {
	{
		if (_23e148602_is_nan(_16229_x)) {
			_case_begin_5562178192:;
			{
				return jule::Str("NAN", 3);
			}
		}
		else if (_23e148602_is_inf(_16229_x,1LL)) {
			_case_begin_5562178384:;
			{
				return jule::Str("INFINITY", 8);
			}
		}
		else if (_23e148602_is_inf(_16229_x,-1LL)) {
			_case_begin_5562178480:;
			{
				return jule::Str("-INFINITY", 9);
			}
		}
		else {
			_case_begin_5562176752:;
			{
				return jule::Str();
			}
		}
		_match_end_5562176576:;
	}
}



inline jule::Str _23d1d4c66_ftoa(jule::F64 _1719_f,jule::Int _17117_bitsize) {
	if (_17117_bitsize != 32LL) {
		if (_1719_f == static_cast<jule::F64>(static_cast<jule::I64>(_1719_f))) {
			return _23d1d4c66_i64toa(static_cast<jule::I64>(_1719_f));
		}
		if (_1719_f == static_cast<jule::F64>(static_cast<jule::U64>(_1719_f))) {
			return _23d1d4c66_u64toa(static_cast<jule::U64>(_1719_f));
		}
	}
	jule::Str _18113_m = _23d12cd35_fmt_float(_1719_f,'f',-1LL,_17117_bitsize);
	if (_18113_m.find(jule::Str(".", 1)) == -1LL) {
		_18113_m+=jule::Str(".0", 2);
	}
	return _18113_m;
}



inline jule::Str _23d1d4c66_get_f32_model(jule::Ptr<_226100d86_Const>& _18819_c) {
	jule::F64 _1899_x = _18819_c->_method_as_f64();
	jule::Str _1929_f = _23d1d4c66_gen_float_special_cases(_1899_x);
	if (_1929_f != jule::Str()) {
		return _1929_f;
	}
	{
		if (_1899_x == 340282346638528860000000000000000000000.0) {
			_case_begin_5562192304:;
			{
				return jule::Str("jule::MAX_F32", 13);
			}
		}
		else if (_1899_x == -340282346638528860000000000000000000000.0) {
			_case_begin_5562192400:;
			{
				return jule::Str("jule::MIN_F32", 13);
			}
		}
		_match_end_5562192640:;
	}
	return _23d1d4c66_ftoa(_1899_x,32LL) + jule::Str("f", 1);
}



inline jule::Str _23d1d4c66_get_f64_model(jule::Ptr<_226100d86_Const>& _20519_c) {
	jule::F64 _2069_x = _20519_c->_method_as_f64();
	jule::Str _2099_f = _23d1d4c66_gen_float_special_cases(_2069_x);
	if (_2099_f != jule::Str()) {
		return _2099_f;
	}
	{
		if (_2069_x == jule::MAX_F64) {
			_case_begin_5562198784:;
			{
				return jule::Str("jule::MAX_F64", 13);
			}
		}
		else if (_2069_x == jule::MIN_F64) {
			_case_begin_5562198880:;
			{
				return jule::Str("jule::MIN_F64", 13);
			}
		}
		_match_end_5562199488:;
	}
	return _23d1d4c66_ftoa(_2069_x,64LL);
}



inline jule::Str _23d1d4c66_get_float_model(jule::Ptr<_225aa4a5a_Data>& _22225_d) {
	{
		if (_22225_d->_field_kind->_method_prim()->_method_is_f32()) {
			_case_begin_5562204688:;
			{
				return _23d1d4c66_get_f32_model(_22225_d->_field_constant);
			}
		}
		else {
			_case_begin_5562201840:;
			{
				return _23d1d4c66_get_f64_model(_22225_d->_field_constant);
			}
		}
		_match_end_5562200416:;
	}
}



inline jule::Str _23d1d4c66_i64toa(jule::I64 _22911_x) {
	{
		if (_22911_x == jule::MAX_I64) {
			_case_begin_5562202864:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if (_22911_x == jule::MIN_I64) {
			_case_begin_5562202960:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_5562205664:;
	}
	jule::Str _2359_fmt = _23e028108_fmt_int(_22911_x,10LL);
	if (_23d049526_is_64bit(jule::Str("arm64", 5))) {
		return _2359_fmt + jule::Str("LL", 2);
	}
	return _2359_fmt + jule::Str("L", 1);
}



inline jule::Str _23d1d4c66_get_i64_model(jule::Ptr<_226100d86_Const>& _24219_c) {
	return _23d1d4c66_i64toa(static_cast<jule::I64>(_24219_c->_method_read_i64()));
}



inline jule::Str _23d1d4c66_u64toa(jule::U64 _24611_x) {
	{
		if (_24611_x == jule::MAX_U64) {
			_case_begin_5562210016:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_5562212000:;
	}
	jule::Str _2529_fmt = _23e028108_fmt_uint(_24611_x,10LL);
	if (_23d049526_is_64bit(jule::Str("arm64", 5))) {
		return _2529_fmt + jule::Str("LLU", 3);
	}
	return _2529_fmt + jule::Str("LU", 2);
}



inline jule::Str _23d1d4c66_get_u64_model(jule::Ptr<_226100d86_Const> _25918_c) {
	return _23d1d4c66_u64toa(static_cast<jule::U64>(_25918_c->_method_read_u64()));
}



inline jule::Str _23d1d4c66_gen_const_expr(jule::Ptr<_225aa4a5a_Data> _26323_d) {
	{
		if (_26323_d->_field_constant->_method_is_str()) {
			_case_begin_5562221008:;
			{
				return _23d1d4c66_get_str_model(_26323_d->_field_constant);
			}
		}
		else if (_26323_d->_field_constant->_method_is_bool()) {
			_case_begin_5562221104:;
			{
				return _23d1d4c66_get_bool_model(_26323_d->_field_constant);
			}
		}
		else if (_26323_d->_field_constant->_method_is_f64()) {
			_case_begin_5562221200:;
			{
				return _23d1d4c66_get_float_model(_26323_d);
			}
		}
		else if (_26323_d->_field_constant->_method_is_i64()) {
			_case_begin_5562220384:;
			{
				return _23d1d4c66_get_i64_model(_26323_d->_field_constant);
			}
		}
		else if (_26323_d->_field_constant->_method_is_u64()) {
			_case_begin_5562220480:;
			{
				return _23d1d4c66_get_u64_model(_26323_d->_field_constant);
			}
		}
		else if (_26323_d->_field_constant->_method_is_nil()) {
			_case_begin_5562220576:;
			{
				return _23d1d4c66_get_nil_model();
			}
		}
		else {
			_case_begin_5562217728:;
			{
				return jule::Str();
			}
		}
		_match_end_5562218016:;
	}
}



inline jule::Str _23d1d4c66_gen_const_expr_model(jule::Ptr<_226100d86_Const> _27525_m) {
	{
		if (_27525_m->_method_is_str()) {
			_case_begin_5562231360:;
			{
				return _23d1d4c66_get_str_model(_27525_m);
			}
		}
		else if (_27525_m->_method_is_bool()) {
			_case_begin_5562231456:;
			{
				return _23d1d4c66_get_bool_model(_27525_m);
			}
		}
		else if (_27525_m->_method_is_f64()) {
			_case_begin_5562231552:;
			{
				return _23d1d4c66_get_f64_model(_27525_m);
			}
		}
		else if (_27525_m->_method_is_i64()) {
			_case_begin_5562230736:;
			{
				return _23d1d4c66_get_i64_model(_27525_m);
			}
		}
		else if (_27525_m->_method_is_u64()) {
			_case_begin_5562230832:;
			{
				return _23d1d4c66_get_u64_model(_27525_m);
			}
		}
		else if (_27525_m->_method_is_nil()) {
			_case_begin_5562230928:;
			{
				return _23d1d4c66_get_nil_model();
			}
		}
		else {
			_case_begin_5562223776:;
			{
				return jule::Str();
			}
		}
		_match_end_5562229824:;
	}
}



inline jule::Str _23d1d4c66_gen_div_by_zero_binop_expr_model(jule::Str _28737_op,jule::Any _28750_l,jule::Any _28768_r) {
	jule::Str _28813_op_func = jule::Str();
	{
		auto &_match_expr{ _28737_op };
		if (_match_expr == jule::Str("/", 1)) {
			_case_begin_5562240144:;
			{
				_28813_op_func=jule::Str("div", 3);
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_5562240240:;
			{
				_28813_op_func=jule::Str("mod", 3);
			}
		}
		_match_end_5562239984:;
	}
	if (_23d01979e_OPT_MATH) {
		{
			auto &_match_expr{ _28768_r };
			if (_match_expr.type_is<jule::Ptr<_226100d86_Const>>()) {
				_case_begin_5562242656:;
				{
					_28813_op_func=jule::Str("unsafe_", 7) + _28813_op_func;
				}
			}
			_match_end_5562243136:;
		}
	}
	jule::Str _30113_obj = jule::Str("jule::", 6);
	_30113_obj+=_28813_op_func;
	_30113_obj+=jule::Str("(", 1);
	_30113_obj+=_23d1d4c66_gen_expr(_28750_l);
	_30113_obj+=jule::Str(",", 1);
	_30113_obj+=_23d1d4c66_gen_expr(_28768_r);
	_30113_obj+=jule::Str(")", 1);
	return _30113_obj;
}



inline jule::Str _23d1d4c66_gen_binop_expr_model(jule::Ptr<_2255b85b3_BinopExprModel> _31129_m) {
	{
		auto &_match_expr{ _31129_m->_field_op };
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_5562247120:;
			{
				return _23d1d4c66_gen_div_by_zero_binop_expr_model(_31129_m->_field_op,_31129_m->_field_left,_31129_m->_field_right);
			}
		}
		_match_end_5562247040:;
	}
	jule::Str _31813_obj = jule::Str("(", 1);
	_31813_obj+=_23d1d4c66_gen_expr_model(_31129_m->_field_left);
	_31813_obj+=jule::Str(" ", 1);
	_31813_obj+=_31129_m->_field_op;
	_31813_obj+=jule::Str(" ", 1);
	_31813_obj+=_23d1d4c66_gen_expr_model(_31129_m->_field_right);
	_31813_obj+=jule::Str(")", 1);
	return _31813_obj;
}



inline jule::Str _23d1d4c66_gen_var_expr_model(jule::Ptr<_2258258db_Var> _32827_m) {
	if (_32827_m->_field_cpp_linked) {
		jule::Ptr<_23e45734a_Directive> _33013_d = _22649998d_find_directive(_32827_m->_field_directives,jule::Str("namespace", 9));
		if (_33013_d != nullptr) {
			jule::Str _33221_obj = _23d1d4c66_concat_all_parts(_33013_d->_field_args);
			_33221_obj+=jule::Str("::", 2);
			_33221_obj+=_22635bd4a_var_out_ident(_32827_m);
			return _33221_obj;
		}
	}
	return _22635bd4a_var_out_ident(_32827_m);
}



inline jule::Str _23d1d4c66_gen_struct_expr_model(jule::Ptr<_225036509_Struct> _34126_m) {
	return _22649998d_gen_struct_kind(_34126_m);
}



inline jule::Str _23d1d4c66_gen_struct_ins_expr_model(jule::Ptr<_225036509_StructIns> _34534_m) {
	return _22649998d_gen_struct_kind_ins(_34534_m);
}



inline jule::Str _23d1d4c66_gen_unary_expr_model(jule::Ptr<_2255b85b3_UnaryExprModel> _34929_m) {
	if (_23d01979e_OPT_PTR && (_34929_m->_field_op == jule::Str("*", 1))) {
		{
			auto &_match_expr{ _34929_m->_field_expr };
			if (_match_expr.type_is<jule::Ptr<_2255b85b3_UnaryExprModel>>()) {
				_case_begin_5562260080:;
				{
					jule::Ptr<_2255b85b3_UnaryExprModel> _35321_um = _34929_m->_field_expr.operator jule::Ptr<_2255b85b3_UnaryExprModel>();
					if (_35321_um->_field_op == jule::Str("&", 1)) {
						return _23d1d4c66_gen_expr_model(_35321_um->_field_expr);
					}
				}
			}
			_match_end_5562261088:;
		}
	}
	{
		auto &_match_expr{ _34929_m->_field_op };
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_5562266320:;
			{
				jule::Str _36217_obj = jule::Str("(~(", 3);
				_36217_obj+=_23d1d4c66_gen_expr(_34929_m->_field_expr);
				_36217_obj+=jule::Str("))", 2);
				return _36217_obj;
			}
		}
		else {
			_case_begin_5562264896:;
			{
				jule::Str _36817_obj = jule::Str("(", 1);
				_36817_obj+=_34929_m->_field_op;
				_36817_obj+=jule::Str("(", 1);
				_36817_obj+=_23d1d4c66_gen_expr(_34929_m->_field_expr);
				_36817_obj+=jule::Str("))", 2);
				return _36817_obj;
			}
		}
		_match_end_5562260624:;
	}
}



inline jule::Str _23d1d4c66_gen_cpp_struct_lit_expr_model(jule::Ptr<_2255b85b3_StructLitExprModel> _37738_m) {
	jule::Str _37813_obj = jule::Str("(", 1) + _22649998d_gen_struct_kind_ins(_37738_m->_field_strct);
	_37813_obj+=jule::Str("){", 2);
	if (_37738_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &expr = _37738_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_5562273056:;
			if (it != expr.end()) {
				jule::Ptr<_225036509_FieldIns> _23d1d4c66_f = *it;
				{
					if (_37738_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto &expr = _37738_m->_field_args;
							auto it = expr.begin();
							_iter_begin_5562275504:;
							if (it != expr.end()) {
								jule::Ptr<_2255b85b3_StructArgExprModel> _23d1d4c66_arg = *it;
								{
									if (_23d1d4c66_arg->_field_field == _23d1d4c66_f) {
										_37813_obj+=jule::Str(".", 1);
										_37813_obj+=_22635bd4a_field_out_ident(_23d1d4c66_f->_field_decl);
										_37813_obj+=jule::Str("=", 1);
										_37813_obj+=_23d1d4c66_gen_expr(_23d1d4c66_arg->_field_expr);
										_37813_obj+=jule::Str(",", 1);
										goto _iter_next_5562273056;
									}
								}
								_iter_next_5562275504:;
								++it;
								goto _iter_begin_5562275504;
							}
							_iter_end_5562275504:;
						}
						goto _iter_next_5562273056;
					}
					_37813_obj+=_22635bd4a_field_out_ident(_23d1d4c66_f->_field_decl);
					_37813_obj+=jule::Str(": ", 2);
					{
						auto &expr = _37738_m->_field_args;
						auto it = expr.begin();
						_iter_begin_5562276272:;
						if (it != expr.end()) {
							jule::Ptr<_2255b85b3_StructArgExprModel> _23d1d4c66_arg = *it;
							{
								if (_23d1d4c66_arg->_field_field == _23d1d4c66_f) {
									_37813_obj+=_23d1d4c66_gen_expr(_23d1d4c66_arg->_field_expr);
									_37813_obj+=jule::Str(",", 1);
									goto _iter_next_5562273056;
								}
							}
							_iter_next_5562276272:;
							++it;
							goto _iter_begin_5562276272;
						}
						_iter_end_5562276272:;
					}
					_37813_obj+=_23d1d4c66_get_init_expr(_23d1d4c66_f->_field_kind);
					_37813_obj+=jule::Str(",", 1);
				}
				_iter_next_5562273056:;
				++it;
				goto _iter_begin_5562273056;
			}
			_iter_end_5562273056:;
		}
		_37813_obj=_37813_obj.slice(0LL,_37813_obj.len() - 1LL);
	}
	_37813_obj+=jule::Str("}", 1);
	return _37813_obj;
}



inline jule::Str _23d1d4c66_gen_struct_lit_expr_model(jule::Ptr<_2255b85b3_StructLitExprModel> _41534_m) {
	if (_41534_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _23d1d4c66_gen_cpp_struct_lit_expr_model(_41534_m);
	}
	jule::Str _42013_obj = _22635bd4a_struct_ins_out_ident(_41534_m->_field_strct);
	_42013_obj+=jule::Str("(", 1);
	if (_41534_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &expr = _41534_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_5562288512:;
			if (it != expr.end()) {
				jule::Ptr<_225036509_FieldIns> _23d1d4c66_f = *it;
				{
					{
						auto &expr = _41534_m->_field_args;
						auto it = expr.begin();
						_iter_begin_5562290032:;
						if (it != expr.end()) {
							jule::Ptr<_2255b85b3_StructArgExprModel> _23d1d4c66_arg = *it;
							{
								if (_23d1d4c66_arg->_field_field == _23d1d4c66_f) {
									_42013_obj+=_23d1d4c66_gen_expr(_23d1d4c66_arg->_field_expr);
									_42013_obj+=jule::Str(",", 1);
									goto _iter_next_5562288512;
								}
							}
							_iter_next_5562290032:;
							++it;
							goto _iter_begin_5562290032;
						}
						_iter_end_5562290032:;
					}
					_42013_obj+=_23d1d4c66_get_init_expr(_23d1d4c66_f->_field_kind);
					_42013_obj+=jule::Str(",", 1);
				}
				_iter_next_5562288512:;
				++it;
				goto _iter_begin_5562288512;
			}
			_iter_end_5562288512:;
		}
		_42013_obj=_42013_obj.slice(0LL,_42013_obj.len() - 1LL);
	}
	_42013_obj+=jule::Str(")", 1);
	return _42013_obj;
}



inline jule::Str _23d1d4c66_gen_alloc_struct_lit_expr_model(jule::Ptr<_2255b85b3_AllocStructLitExprModel> _44140_m) {
	jule::Str _44213_obj = jule::Str("jule::new_struct", 16);
	if (_44140_m->_field_lit->_field_strct->_field_decl->_method_has_ref_accessible()) {
		_44213_obj+=jule::Str("_ptr", 4);
	}
	_44213_obj+=jule::Str("<", 1);
	_44213_obj+=_22635bd4a_struct_ins_out_ident(_44140_m->_field_lit->_field_strct);
	_44213_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_44213_obj+=_23d1d4c66_gen_struct_lit_expr_model(_44140_m->_field_lit);
	_44213_obj+=jule::Str(")", 1);
	return _44213_obj;
}



inline jule::Str _23d1d4c66_gen_casting_expr_model(jule::Ptr<_2255b85b3_CastingExprModel> _45431_m) {
	jule::Str _45513_obj = jule::Str();
	{
		if ((_45431_m->_field_kind->_method_prim() != nullptr) && _45431_m->_field_kind->_method_prim()->_method_is_any()) {
			_case_begin_5562302112:;
			{
				_45513_obj+=_22649998d_gen_type_kind(_45431_m->_field_kind);
				_45513_obj+=jule::Str("(", 1);
				_45513_obj+=_23d1d4c66_gen_expr_model(_45431_m->_field_expr);
				_45513_obj+=jule::Str(")", 1);
			}
		}
		else if (_45431_m->_field_expr_kind->_method_ptr() != nullptr || _45431_m->_field_kind->_method_ptr() != nullptr) {
			_case_begin_5562304304:;
			{
				_45513_obj+=jule::Str("((", 2);
				_45513_obj+=_22649998d_gen_type_kind(_45431_m->_field_kind);
				_45513_obj+=jule::Str(")(", 2);
				_45513_obj+=_23d1d4c66_gen_expr(_45431_m->_field_expr);
				_45513_obj+=jule::Str("))", 2);
			}
		}
		else if (_45431_m->_field_expr_kind->_method_trt() != nullptr || (_45431_m->_field_expr_kind->_method_prim() != nullptr) && _45431_m->_field_expr_kind->_method_prim()->_method_is_any()) {
			_case_begin_5562304400:;
			{
				_45513_obj+=_23d1d4c66_gen_expr_model(_45431_m->_field_expr);
				_45513_obj+=_23d1d4c66_get_accessor(_45431_m->_field_expr_kind);
				_45513_obj+=jule::Str("operator ", 9);
				_45513_obj+=_22649998d_gen_type_kind(_45431_m->_field_kind);
				_45513_obj+=jule::Str("()", 2);
			}
		}
		else {
			_case_begin_5562301312:;
			{
				_45513_obj+=jule::Str("static_cast<", 12);
				_45513_obj+=_22649998d_gen_type_kind(_45431_m->_field_kind);
				_45513_obj+=jule::Str(">(", 2);
				_45513_obj+=_23d1d4c66_gen_expr(_45431_m->_field_expr);
				_45513_obj+=jule::Str(")", 1);
			}
		}
		_match_end_5562301200:;
	}
	return _45513_obj;
}



inline jule::Str _23d1d4c66_gen_arg_expr_models(jule::Slice<jule::Any> _48928_models) {
	if (_48928_models.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _49413_obj = jule::Str();
	{
		auto &expr = _48928_models;
		auto it = expr.begin();
		_iter_begin_5562317024:;
		if (it != expr.end()) {
			jule::Any _23d1d4c66_m = *it;
			{
				_49413_obj+=_23d1d4c66_gen_expr(_23d1d4c66_m);
				_49413_obj+=jule::Str(",", 1);
			}
			_iter_next_5562317024:;
			++it;
			goto _iter_begin_5562317024;
		}
		_iter_end_5562317024:;
	}
	_49413_obj=_49413_obj.slice(0LL,_49413_obj.len() - 1LL);
	return _49413_obj;
}



inline jule::Str _23d1d4c66_gen_expr_model_for_call(jule::Any _50332_expr) {
	{
		auto &_match_expr{ _50332_expr };
		if (_match_expr.type_is<jule::Ptr<_2252d6a73_FnIns>>()) {
			_case_begin_5561996080:;
			{
				return _23d1d4c66_gen_fn_ins_expr_model(_50332_expr.operator jule::Ptr<_2252d6a73_FnIns>());
			}
		}
		else {
			_case_begin_5562318800:;
			{
				return _23d1d4c66_gen_expr_model(_50332_expr);
			}
		}
		_match_end_5562320704:;
	}
}



inline jule::Str _23d1d4c66_gen_pure_fn_call_expr_model(jule::Ptr<_2255b85b3_FnCallExprModel>& _51037_m) {
	jule::Str _51113_obj = _23d1d4c66_gen_expr_model_for_call(_51037_m->_field_expr);
	if ((!(_51037_m->_field_func->_method_is_builtin()))) {
		if (_51037_m->_field_func->_field_decl->_field_cpp_linked && (_51037_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_22649998d_has_directive(_51037_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_51113_obj+=jule::Str("<", 1);
				{
					auto &expr = _51037_m->_field_func->_field_generics;
					auto it = expr.begin();
					_iter_begin_5562328128:;
					if (it != expr.end()) {
						jule::Ptr<_23e2b5818_TypeKind> _23d1d4c66_g = *it;
						{
							_51113_obj+=_22649998d_gen_type_kind(_23d1d4c66_g);
							_51113_obj+=jule::Str(",", 1);
						}
						_iter_next_5562328128:;
						++it;
						goto _iter_begin_5562328128;
					}
					_iter_end_5562328128:;
				}
				_51113_obj=_51113_obj.slice(0LL,_51113_obj.len() - 1LL);
				_51113_obj+=jule::Str(">", 1);
			}
		}
	}
	_51113_obj+=jule::Str("(", 1);
	_51113_obj+=_23d1d4c66_gen_arg_expr_models(_51037_m->_field_args);
	_51113_obj+=jule::Str(")", 1);
	if (_51037_m->_field_is_co) {
		_51113_obj=jule::Str("__JULE_CO(", 10) + _51113_obj;
		_51113_obj+=jule::Str(")", 1);
	}
	return _51113_obj;
}



inline jule::Bool _23d1d4c66_is_forwarded(jule::Ptr<_2255ba3ea_Scope>& _53718_s) {
	jule::Any _5389_last = _53718_s->_field_stmts[_53718_s->_field_stmts.len() - 1LL];
	{
		auto &_match_expr{ _5389_last };
		if (_match_expr.type_is<jule::Ptr<_225aa4a5a_Data>>()) {
			_case_begin_5562337184:;
			{
				{
					auto &_match_expr{ _5389_last.operator jule::Ptr<_225aa4a5a_Data>()->_field_model };
					if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>>()) {
						_case_begin_5562339584:;
						{
							return true;
						}
					}
					else {
						_case_begin_5562337344:;
						{
							return false;
						}
					}
					_match_end_5562338048:;
				}
			}
		}
		else {
			_case_begin_5562334272:;
			{
				return true;
			}
		}
		_match_end_5562335648:;
	}
}



inline jule::Str _23d1d4c66_gen_fn_call_expr_model(jule::Ptr<_2255b85b3_FnCallExprModel> _55431_m) {
	if ((_55431_m->_field_func->_method_is_builtin() || (!(_55431_m->_field_func->_field_decl->_field_exceptional))) || ((_55431_m->_field_except != nullptr) && (_55431_m->_field_except->_field_stmts.len() == 0LL))) {
		return _23d1d4c66_gen_pure_fn_call_expr_model(_55431_m);
	}
	jule::Str _56213_obj = jule::Str("({\n", 3);
	_2264c2c91_add_indent();
	_56213_obj+=_2264c2c91_indent();
	_56213_obj+=jule::Str("auto except = ", 14);
	_56213_obj+=_23d1d4c66_gen_pure_fn_call_expr_model(_55431_m);
	_56213_obj+=jule::Str(";\n", 2);
	_56213_obj+=_2264c2c91_indent();
	if (_55431_m->_field_except != nullptr) {
		if ((_55431_m->_field_func->_field_result == nullptr) || (!(_55431_m->_field_assigned))) {
			_56213_obj+=jule::Str("if (!except.ok()) ", 18);
			_56213_obj+=_23d057e3b_gen_scope(_55431_m->_field_except);
			_56213_obj+=jule::Str("\n", 1);
		} else {
			jule::Bool _57517_forwarded = _23d1d4c66_is_forwarded(_55431_m->_field_except);
			_56213_obj+=jule::Str("(except.ok()) ? (except.result) : (", 35);
			if (_57517_forwarded) {
				_56213_obj+=jule::Str("{", 1);
			}
			_56213_obj+=_23d057e3b_gen_scope(_55431_m->_field_except);
			if (_57517_forwarded) {
				_56213_obj+=jule::Str(" ", 1);
				_56213_obj+=_23d1d4c66_get_init_expr(_55431_m->_field_func->_field_result);
				_56213_obj+=jule::Str(";}", 2);
			}
			_56213_obj+=jule::Str(");\n", 3);
		}
		_2264c2c91_done_indent();
	} else {
		_56213_obj+=jule::Str("if (!except.ok()) jule::panic(jule::Str(\"", 41);
		_56213_obj+=jule::Str("unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 98);
		_56213_obj+=_2265c1279_format(jule::Str("{}:{}:{}", 8),jule::Slice<jule::Any>({jule::Any(_55431_m->_field_token._field_file->_method_path()),jule::Any(_23e028108_itoa(_55431_m->_field_token._field_row)),jule::Any(_23e028108_itoa(_55431_m->_field_token._field_column))}));
		_56213_obj+=jule::Str("\"));\n", 5);
		if ((!(_55431_m->_field_func->_field_decl->_method_is_void()))) {
			_56213_obj+=_2264c2c91_indent();
			_56213_obj+=jule::Str("(except.result);\n", 17);
		}
		_2264c2c91_done_indent();
	}
	_56213_obj+=_2264c2c91_indent();
	_56213_obj+=jule::Str("})", 2);
	return _56213_obj;
}



inline jule::Str _23d1d4c66_gen_slice_expr_model(jule::Ptr<_2255b85b3_SliceExprModel> _60629_m) {
	if (_60629_m->_field_elems.len() == 0LL) {
		return _22649998d_as_slice_kind(_60629_m->_field_elem_kind) + jule::Str("()", 2);
	}
	jule::Str _61113_obj = _22649998d_as_slice_kind(_60629_m->_field_elem_kind);
	_61113_obj+=jule::Str("({", 2);
	_61113_obj+=_23d1d4c66_gen_arg_expr_models(_60629_m->_field_elems);
	_61113_obj+=jule::Str("})", 2);
	return _61113_obj;
}



inline jule::Str _23d1d4c66_gen_indexing_expr_model(jule::Ptr<_2255b85b3_IndexigExprModel> _61832_m) {
	jule::Str _61913_obj = _23d1d4c66_gen_expr_model(_61832_m->_field_expr->_field_model);
	if (_23d01979e_OPT_ACCESS) {
		jule::Bool _62313_array = _61832_m->_field_expr->_field_kind->_method_arr() != nullptr;
		if (_62313_array && _61832_m->_field_index->_method_is_const()) {
			_61913_obj+=jule::Str(".__at(", 6);
			_61913_obj+=_23d1d4c66_gen_expr(_61832_m->_field_index->_field_model);
			_61913_obj+=jule::Str(")", 1);
			return _61913_obj;
		}
		{
			auto &_match_expr{ _61832_m->_field_index->_field_model };
			if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
				_case_begin_5562367408:;
				{
					jule::Ptr<_2258258db_Var> _63517_i = _61832_m->_field_index->_field_model.operator jule::Ptr<_2258258db_Var>();
					if (_63517_i->_field_mutable || (_63517_i->_field_iter_relation == nullptr)) {
						goto _match_end_5562369840;
					}
					{
						auto &_match_expr{ _61832_m->_field_expr->_field_model };
						if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
							_case_begin_5562372672:;
							{
								jule::Ptr<_2258258db_Var> _64121_r = _61832_m->_field_expr->_field_model.operator jule::Ptr<_2258258db_Var>();
								if (_63517_i->_field_iter_relation->_field_range == _64121_r) {
									_61913_obj+=jule::Str(".__at(", 6);
									_61913_obj+=_23d1d4c66_gen_expr(_61832_m->_field_index->_field_model);
									_61913_obj+=jule::Str(")", 1);
									return _61913_obj;
								}
							}
						}
						_match_end_5562373488:;
					}
				}
			}
			_match_end_5562369840:;
		}
	}
	_61913_obj+=jule::Str("[", 1);
	_61913_obj+=_23d1d4c66_gen_expr(_61832_m->_field_index->_field_model);
	_61913_obj+=jule::Str("]", 1);
	return _61913_obj;
}



inline jule::Str _23d1d4c66_gen_anon_fn_expr_model(jule::Ptr<_2255b85b3_AnonFnExprModel> _66131_m) {
	jule::Str _66213_obj = _22649998d_gen_fn_kind(_66131_m->_field_func);
	_66213_obj+=jule::Str("([=]", 4);
	_66213_obj+=_2264c2c91_gen_params_ins(_66131_m->_field_func->_field_params);
	_66213_obj+=jule::Str(" mutable -> ", 12);
	_66213_obj+=_2264c2c91_gen_fn_ins_result(_66131_m->_field_func);
	_66213_obj+=jule::Str(" ", 1);
	_66213_obj+=_23d057e3b_gen_fn_scope(_66131_m->_field_func);
	_66213_obj+=jule::Str(")", 1);
	return _66213_obj;
}



inline jule::Str _23d1d4c66_gen_map_expr_model(jule::Ptr<_2255b85b3_MapExprModel> _67327_m) {
	jule::Str _67413_obj = _22635bd4a_as_jt(jule::Str("map", 3));
	_67413_obj+=jule::Str("<", 1);
	_67413_obj+=_22649998d_gen_type_kind(_67327_m->_field_key_kind);
	_67413_obj+=jule::Str(",", 1);
	_67413_obj+=_22649998d_gen_type_kind(_67327_m->_field_val_kind);
	_67413_obj+=jule::Str(">({", 3);
	if (_67327_m->_field_entries.len() > 0LL) {
		{
			auto &expr = _67327_m->_field_entries;
			auto it = expr.begin();
			_iter_begin_5562386896:;
			if (it != expr.end()) {
				jule::Ptr<_2255b85b3_KeyValPairExprModel> _23d1d4c66_pair = *it;
				{
					jule::Str _68221_pair_obj = jule::Str("{", 1);
					_68221_pair_obj+=_23d1d4c66_gen_expr(_23d1d4c66_pair->_field_key);
					_68221_pair_obj+=jule::Str(",", 1);
					_68221_pair_obj+=_23d1d4c66_gen_expr(_23d1d4c66_pair->_field_val);
					_68221_pair_obj+=jule::Str("}", 1);
					_67413_obj+=_68221_pair_obj;
					_67413_obj+=jule::Str(",", 1);
				}
				_iter_next_5562386896:;
				++it;
				goto _iter_begin_5562386896;
			}
			_iter_end_5562386896:;
		}
		_67413_obj=_67413_obj.slice(0LL,_67413_obj.len() - 1LL);
	}
	_67413_obj+=jule::Str("})", 2);
	return _67413_obj;
}



inline jule::Str _23d1d4c66_gen_slicing_expr_model(jule::Ptr<_2255b85b3_SlicingExprModel> _69631_m) {
	jule::Str _69713_obj = _23d1d4c66_gen_expr_model(_69631_m->_field_expr);
	_69713_obj+=jule::Str(".slice(", 7);
	_69713_obj+=_23d1d4c66_gen_expr(_69631_m->_field_left);
	if (_69631_m->_field_right != nullptr) {
		_69713_obj+=jule::Str(",", 1);
		_69713_obj+=_23d1d4c66_gen_expr(_69631_m->_field_right);
	}
	_69713_obj+=jule::Str(")", 1);
	return _69713_obj;
}



inline jule::Str _23d1d4c66_gen_trait_sub_ident_expr_model(jule::Ptr<_2255b85b3_TraitSubIdentExprModel> _70839_m) {
	jule::Str _70913_obj = _23d1d4c66_gen_expr_model(_70839_m->_field_expr);
	_70913_obj+=jule::Str(".get()._method_", 15);
	_70913_obj+=_70839_m->_field_ident;
	return _70913_obj;
}



inline jule::Str _23d1d4c66_gen_struct_sub_ident_expr_model(jule::Ptr<_2255b85b3_StructSubIdentExprModel> _71540_m) {
	jule::Str _71613_obj = _23d1d4c66_gen_expr_model(_71540_m->_field_expr);
	_71613_obj+=_23d1d4c66_get_accessor(_71540_m->_field_expr_kind);
	if (_71540_m->_field_field != nullptr) {
		_71613_obj+=_22635bd4a_field_out_ident(_71540_m->_field_field->_field_decl);
	} else {
		_71613_obj+=_22635bd4a_fn_ins_out_ident(_71540_m->_field_method);
	}
	return _71613_obj;
}



inline jule::Str _23d1d4c66_gen_common_ident_expr_model(jule::Ptr<_2255b85b3_CommonIdentExprModel> _72632_m) {
	return _72632_m->_field_ident;
}



inline jule::Str _23d1d4c66_gen_common_sub_ident_expr_model(jule::Ptr<_2255b85b3_CommonSubIdentExprModel> _73040_m) {
	jule::Str _73113_obj = _23d1d4c66_gen_expr_model(_73040_m->_field_expr);
	_73113_obj+=_23d1d4c66_get_accessor(_73040_m->_field_expr_kind);
	_73113_obj+=_73040_m->_field_ident;
	return _73113_obj;
}



inline jule::Str _23d1d4c66_gen_array_expr_model(jule::Ptr<_2255b85b3_ArrayExprModel> _73729_m) {
	if (_73729_m->_field_elems.len() == 0LL) {
		return _22649998d_gen_array_kind(_73729_m->_field_kind) + jule::Str("()", 2);
	}
	jule::Str _74213_obj = _22649998d_gen_array_kind(_73729_m->_field_kind);
	if ((_73729_m->_field_elems.len() == 2LL) && (_73729_m->_field_elems[1LL] == nullptr)) {
		_74213_obj+=jule::Str("(", 1);
		_74213_obj+=_23d1d4c66_gen_expr(_73729_m->_field_elems[0LL]);
		_74213_obj+=jule::Str(")", 1);
		return _74213_obj;
	}
	_74213_obj+=jule::Str("({", 2);
	_74213_obj+=_23d1d4c66_gen_arg_expr_models(_73729_m->_field_elems);
	_74213_obj+=jule::Str("})", 2);
	return _74213_obj;
}



inline jule::Str _23d1d4c66_gen_fn_ins_expr_model_common(jule::Ptr<_2252d6a73_FnIns> _76037_m) {
	jule::Str _76113_obj = _22649998d_gen_fn_kind(_76037_m);
	_76113_obj+=jule::Str("(", 1);
	_76113_obj+=_23d1d4c66_gen_fn_ins_expr_model(_76037_m);
	_76113_obj+=jule::Str(")", 1);
	return _76113_obj;
}



inline jule::Str _23d1d4c66_gen_fn_ins_expr_model(jule::Ptr<_2252d6a73_FnIns> _76930_m) {
	if ((_76930_m->_field_decl != nullptr) && _76930_m->_field_decl->_field_cpp_linked) {
		jule::Ptr<_23e45734a_Directive> _77113_d = _22649998d_find_directive(_76930_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (_77113_d != nullptr) {
			jule::Str _77321_obj = _23d1d4c66_concat_all_parts(_77113_d->_field_args);
			_77321_obj+=jule::Str("::", 2);
			_77321_obj+=_22635bd4a_fn_ins_out_ident(_76930_m);
			return _77321_obj;
		}
	}
	return _22635bd4a_fn_ins_out_ident(_76930_m);
}



inline jule::Str _23d1d4c66_gen_tuple_expr_model(jule::Ptr<_2255b85b3_TupleExprModel> _78229_m) {
	jule::Str _78313_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _78229_m->_field_datas;
		auto it = expr.begin();
		_iter_begin_5562422400:;
		if (it != expr.end()) {
			jule::Ptr<_225aa4a5a_Data> _23d1d4c66_d = *it;
			{
				_78313_obj+=_23d1d4c66_gen_expr(_23d1d4c66_d->_field_model);
				_78313_obj+=jule::Str(",", 1);
			}
			_iter_next_5562422400:;
			++it;
			goto _iter_begin_5562422400;
		}
		_iter_end_5562422400:;
	}
	_78313_obj=_78313_obj.slice(0LL,_78313_obj.len() - 1LL);
	_78313_obj+=jule::Str(")", 1);
	return _78313_obj;
}



inline jule::Str _23d1d4c66_gen_builtin_new_call_expr_model(jule::Ptr<_2255b85b3_BuiltinNewCallExprModel> _79340_m) {
	jule::Str _79413_obj = jule::Str("jule::new_ptr<", 14);
	_79413_obj+=_22649998d_gen_type_kind(_79340_m->_field_kind);
	_79413_obj+=jule::Str(">(", 2);
	if (_79340_m->_field_init != nullptr) {
		_79413_obj+=_23d1d4c66_gen_expr(_79340_m->_field_init);
	}
	_79413_obj+=jule::Str(")", 1);
	return _79413_obj;
}



inline jule::Str _23d1d4c66_gen_builtin_out_call_expr_model(jule::Ptr<_2255b85b3_BuiltinOutCallExprModel> _80440_m) {
	jule::Str _80513_obj = jule::Str("jule::out(", 10);
	_80513_obj+=_23d1d4c66_gen_expr(_80440_m->_field_expr);
	_80513_obj+=jule::Str(")", 1);
	return _80513_obj;
}



inline jule::Str _23d1d4c66_gen_builtin_outln_call_expr_model(jule::Ptr<_2255b85b3_BuiltinOutlnCallExprModel> _81142_m) {
	jule::Str _81213_obj = jule::Str("jule::outln(", 12);
	_81213_obj+=_23d1d4c66_gen_expr(_81142_m->_field_expr);
	_81213_obj+=jule::Str(")", 1);
	return _81213_obj;
}



inline jule::Str _23d1d4c66_gen_builtin_panic_call_expr_model(jule::Ptr<_2255b85b3_BuiltinPanicCallExprModel> _81842_m) {
	jule::Str _81913_obj = jule::Str("jule::panic(", 12);
	_81913_obj+=_23d1d4c66_gen_expr(_81842_m->_field_expr);
	_81913_obj+=jule::Str(" + jule::Str(\"\\nlocation: ", 26);
	_81913_obj+=_2265c1279_format(jule::Str("{}:{}:{}", 8),jule::Slice<jule::Any>({jule::Any(_81842_m->_field_token._field_file->_method_path()),jule::Any(_23e028108_itoa(_81842_m->_field_token._field_row)),jule::Any(_23e028108_itoa(_81842_m->_field_token._field_column))}));
	_81913_obj+=jule::Str("\"));", 4);
	return _81913_obj;
}



inline jule::Str _23d1d4c66_gen_builtin_error_call_expr_model(jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel> _82742_m) {
	jule::Str _82813_obj = jule::Str("return ", 7);
	if (_82742_m->_field_func->_field_decl->_method_is_void()) {
		_82813_obj+=jule::Str("jule::VoidExceptional(", 22);
	} else {
		_82813_obj+=jule::Str("jule::Exceptional<", 18);
		_82813_obj+=_22649998d_gen_type_kind(_82742_m->_field_func->_field_result);
		_82813_obj+=jule::Str(">(", 2);
	}
	_82813_obj+=_23d1d4c66_gen_expr(_82742_m->_field_err);
	_82813_obj+=jule::Str(")", 1);
	return _82813_obj;
}



inline jule::Str _23d1d4c66_gen_builtin_make_call_expr_model(jule::Ptr<_2255b85b3_BuiltinMakeCallExprModel> _84141_m) {
	jule::Str _84213_obj = jule::Str();
	if (_84141_m->_field_len != nullptr) {
		_84213_obj+=_23d1d4c66_gen_expr(_84141_m->_field_len);
	} else {
		_84213_obj+=jule::Str("0", 1);
	}
	if (_84141_m->_field_cap != nullptr) {
		_84213_obj+=jule::Str(",", 1) + _23d1d4c66_gen_expr(_84141_m->_field_cap);
	}
	if (_84141_m->_field_kind->_method_slc()->_field_elem->_method_enm() != nullptr) {
		_84213_obj+=jule::Str(",", 1);
		_84213_obj+=_23d1d4c66_get_init_expr(_84141_m->_field_kind->_method_slc()->_field_elem);
		if (_84141_m->_field_cap != nullptr) {
			_84213_obj=(_22649998d_gen_type_kind(_84141_m->_field_kind) + jule::Str("::alloc(", 8)) + _84213_obj;
		} else {
			_84213_obj=(_22649998d_gen_type_kind(_84141_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _84213_obj;
		}
	} else {
		_84213_obj=(_22649998d_gen_type_kind(_84141_m->_field_kind) + jule::Str("::alloc(", 8)) + _84213_obj;
	}
	_84213_obj+=jule::Str(")", 1);
	return _84213_obj;
}



inline jule::Str _23d1d4c66_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _8695_same_dest,jule::Str& _8706_dest_expr,jule::Ptr<_23e2b5818_TypeKind>& _87110_dest_kind,jule::Ptr<_2255b85b3_SliceExprModel>& _87210_s,jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel>& _87310_m) {
	jule::Str _87413_obj = jule::Str();
	if ((!(_8695_same_dest))) {
		_87413_obj+=_8706_dest_expr;
		_87413_obj+=jule::Str(" = jule::alloc_for_append(", 26);
		_87413_obj+=_23d1d4c66_gen_expr_model(_87310_m->_field_dest);
		_87413_obj+=jule::Str(",", 1);
		_87413_obj+=_23e028108_itoa(static_cast<jule::I64>(_87210_s->_field_elems.len()));
		_87413_obj+=jule::Str(");", 2);
	}
	{
		auto &expr = _87210_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_5562460496:;
		if (it != expr.end()) {
			jule::Any _23d1d4c66_e = *it;
			{
				_87413_obj+=_8706_dest_expr;
				_87413_obj+=_23d1d4c66_get_accessor(_87110_dest_kind);
				_87413_obj+=jule::Str("push(", 5);
				_87413_obj+=_23d1d4c66_gen_expr_model(_23d1d4c66_e);
				_87413_obj+=jule::Str(");", 2);
			}
			_iter_next_5562460496:;
			++it;
			goto _iter_begin_5562460496;
		}
		_iter_end_5562460496:;
	}
	return _87413_obj;
}



inline std::tuple<jule::Str,jule::Bool> _23d1d4c66_gen_builtin_append_call_expr_model_assign(jule::Any _89350_dest,jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel> _89371_m) {
	jule::Bool _893110_optimized = jule::Bool();
	{
		auto &_match_expr{ _89371_m->_field_elements };
		if (_match_expr.type_is<jule::Ptr<_2255b85b3_SliceExprModel>>()) {
			_case_begin_5562463232:;
			{
				{
					auto &_match_expr{ _89350_dest };
					if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
						_case_begin_5562464464:;
						{
							jule::Ptr<_2255b85b3_SliceExprModel> _89821_s = _89371_m->_field_elements.operator jule::Ptr<_2255b85b3_SliceExprModel>();
							jule::Str _89917_dest_expr = _23d1d4c66_gen_expr_model(_89350_dest);
							jule::Ptr<_2258258db_Var> _90021_dest_var = _89350_dest.operator jule::Ptr<_2258258db_Var>();
							jule::Bool _90117_same_dest = _89371_m->_field_dest == _90021_dest_var;
							_893110_optimized = true;
							return std::make_tuple(_23d1d4c66_gen_builtin_append_call_expr_model_assign_opt(_90117_same_dest,_89917_dest_expr,_90021_dest_var->_field_kind->_field_kind,_89821_s,_89371_m),_893110_optimized);
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_2255b85b3_StructSubIdentExprModel>>()) {
						_case_begin_5562465936:;
						{
							jule::Ptr<_2255b85b3_SliceExprModel> _90621_s = _89371_m->_field_elements.operator jule::Ptr<_2255b85b3_SliceExprModel>();
							jule::Str _90717_dest_expr = _23d1d4c66_gen_expr_model(_89350_dest);
							jule::Ptr<_225036509_FieldIns> _90821_dest_field = _89350_dest.operator jule::Ptr<_2255b85b3_StructSubIdentExprModel>()->_field_field;
							jule::Bool _90917_same_dest = _89371_m->_field_dest == _90821_dest_field;
							_893110_optimized = true;
							return std::make_tuple(_23d1d4c66_gen_builtin_append_call_expr_model_assign_opt(_90917_same_dest,_90717_dest_expr,_90821_dest_field->_field_kind,_90621_s,_89371_m),_893110_optimized);
						}
					}
					_match_end_5562465648:;
				}
			}
		}
		_match_end_5562464384:;
	}
	_893110_optimized = false;
	return std::make_tuple(_23d1d4c66_gen_builtin_append_call_expr_model(_89371_m),_893110_optimized);
}



inline jule::Str _23d1d4c66_gen_builtin_append_call_expr_model(jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel> _91843_m) {
	jule::Str _91913_obj = jule::Str("jule::append(", 13);
	_91913_obj+=_23d1d4c66_gen_expr_model(_91843_m->_field_dest);
	_91913_obj+=jule::Str(",", 1);
	_91913_obj+=_23d1d4c66_gen_expr_model(_91843_m->_field_elements);
	_91913_obj+=jule::Str(")", 1);
	return _91913_obj;
}



inline jule::Str _23d1d4c66_gen_builtin_clone_call_expr_model(jule::Ptr<_2255b85b3_BuiltinCloneCallExprModel> _92742_m) {
	jule::Str _92813_obj = jule::Str("jule::clone(", 12);
	_92813_obj+=_23d1d4c66_gen_expr_model(_92742_m->_field_expr);
	_92813_obj+=jule::Str(")", 1);
	return _92813_obj;
}



inline jule::Str _23d1d4c66_gen_sizeof_expr_model(jule::Ptr<_2255b85b3_SizeofExprModel> _93430_m) {
	jule::Str _93513_obj = jule::Str("sizeof(", 7);
	_93513_obj+=_23d1d4c66_gen_expr(_93430_m->_field_expr);
	_93513_obj+=jule::Str(")", 1);
	return _93513_obj;
}



inline jule::Str _23d1d4c66_gen_alignof_expr_model(jule::Ptr<_2255b85b3_AlignofExprModel> _94131_m) {
	jule::Str _94213_obj = jule::Str("alignof(", 8);
	_94213_obj+=_23d1d4c66_gen_expr(_94131_m->_field_expr);
	_94213_obj+=jule::Str(")", 1);
	return _94213_obj;
}



inline jule::Str _23d1d4c66_gen_rune_expr_model(jule::Ptr<_2255b85b3_RuneExprModel> _94824_m) {
	if (_94824_m->_field_code <= 127LL) {
		jule::Str _95017_b = _23d1d4c66_sbtoa(static_cast<jule::U8>(_94824_m->_field_code));
		if (_95017_b == jule::Str("'", 1)) {
			_95017_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _95017_b) + jule::Str("'", 1);
	}
	return _23d1d4c66_i64toa(static_cast<jule::I64>(_94824_m->_field_code));
}



inline jule::Str _23d1d4c66_gen_struct_static_ident_expr_model(jule::Ptr<_2255b85b3_StructStaticIdentExprModel> _95943_m) {
	jule::Str _96013_obj = _22635bd4a_struct_ins_out_ident(_95943_m->_field_structure);
	_96013_obj+=jule::Str("::", 2);
	_96013_obj+=_22635bd4a_fn_ins_out_ident(_95943_m->_field_method);
	return _96013_obj;
}



inline jule::Str _23d1d4c66_gen_integrated_to_str_expr_model(jule::Ptr<_2255b85b3_IntegratedToStrExprModel> _96641_m) {
	jule::Str _96713_obj = jule::Str("jule::to_str(", 13);
	_96713_obj+=_23d1d4c66_gen_expr_model(_96641_m->_field_expr);
	_96713_obj+=jule::Str(")", 1);
	return _96713_obj;
}



inline jule::Str _23d1d4c66_gen_ternary_expr_model(jule::Ptr<_2255b85b3_TernaryExprModel> _97331_m) {
	jule::Str _97413_obj = jule::Str("((", 2);
	_97413_obj+=_23d1d4c66_gen_expr_model(_97331_m->_field_condition);
	_97413_obj+=jule::Str(") ? (", 5);
	_97413_obj+=_23d1d4c66_gen_expr_model(_97331_m->_field_true_expr);
	_97413_obj+=jule::Str(") : (", 5);
	_97413_obj+=_23d1d4c66_gen_expr_model(_97331_m->_field_false_expr);
	_97413_obj+=jule::Str("))", 2);
	return _97413_obj;
}



inline jule::Str _23d1d4c66_gen_expr_model(jule::Any _98423_m) {
	{
		auto &_match_expr{ _98423_m };
		if (_match_expr.type_is<jule::Ptr<_23e2b5818_TypeKind>>()) {
			_case_begin_5562506576:;
			{
				return _22649998d_gen_type_kind(_98423_m.operator jule::Ptr<_23e2b5818_TypeKind>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_226100d86_Const>>()) {
			_case_begin_5562506128:;
			{
				return _23d1d4c66_gen_const_expr_model(_98423_m.operator jule::Ptr<_226100d86_Const>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2258258db_Var>>()) {
			_case_begin_5562506224:;
			{
				return _23d1d4c66_gen_var_expr_model(_98423_m.operator jule::Ptr<_2258258db_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255ab70a_Trait>>()) {
			_case_begin_5562506320:;
			{
				return _22635bd4a_trait_out_ident(_98423_m.operator jule::Ptr<_2255ab70a_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225036509_Struct>>()) {
			_case_begin_5562505760:;
			{
				return _23d1d4c66_gen_struct_expr_model(_98423_m.operator jule::Ptr<_225036509_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_225036509_StructIns>>()) {
			_case_begin_5562505856:;
			{
				return _23d1d4c66_gen_struct_ins_expr_model(_98423_m.operator jule::Ptr<_225036509_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2252d6a73_FnIns>>()) {
			_case_begin_5562505952:;
			{
				return _23d1d4c66_gen_fn_ins_expr_model_common(_98423_m.operator jule::Ptr<_2252d6a73_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_BinopExprModel>>()) {
			_case_begin_5562505312:;
			{
				return _23d1d4c66_gen_binop_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_UnaryExprModel>>()) {
			_case_begin_5562505408:;
			{
				return _23d1d4c66_gen_unary_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_StructLitExprModel>>()) {
			_case_begin_5562505504:;
			{
				return _23d1d4c66_gen_struct_lit_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_AllocStructLitExprModel>>()) {
			_case_begin_5562505600:;
			{
				return _23d1d4c66_gen_alloc_struct_lit_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_CastingExprModel>>()) {
			_case_begin_5562507360:;
			{
				return _23d1d4c66_gen_casting_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_FnCallExprModel>>()) {
			_case_begin_5562507456:;
			{
				return _23d1d4c66_gen_fn_call_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_SliceExprModel>>()) {
			_case_begin_5562507552:;
			{
				return _23d1d4c66_gen_slice_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_ArrayExprModel>>()) {
			_case_begin_5562507648:;
			{
				return _23d1d4c66_gen_array_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_IndexigExprModel>>()) {
			_case_begin_5562507760:;
			{
				return _23d1d4c66_gen_indexing_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_IndexigExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_AnonFnExprModel>>()) {
			_case_begin_5562507872:;
			{
				return _23d1d4c66_gen_anon_fn_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_MapExprModel>>()) {
			_case_begin_5562507984:;
			{
				return _23d1d4c66_gen_map_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_SlicingExprModel>>()) {
			_case_begin_5562508096:;
			{
				return _23d1d4c66_gen_slicing_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_TraitSubIdentExprModel>>()) {
			_case_begin_5562508208:;
			{
				return _23d1d4c66_gen_trait_sub_ident_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_StructSubIdentExprModel>>()) {
			_case_begin_5562508320:;
			{
				return _23d1d4c66_gen_struct_sub_ident_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_CommonIdentExprModel>>()) {
			_case_begin_5562508432:;
			{
				return _23d1d4c66_gen_common_ident_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_CommonSubIdentExprModel>>()) {
			_case_begin_5562508544:;
			{
				return _23d1d4c66_gen_common_sub_ident_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_TupleExprModel>>()) {
			_case_begin_5562508656:;
			{
				return _23d1d4c66_gen_tuple_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinOutCallExprModel>>()) {
			_case_begin_5562508768:;
			{
				return _23d1d4c66_gen_builtin_out_call_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinOutlnCallExprModel>>()) {
			_case_begin_5562508880:;
			{
				return _23d1d4c66_gen_builtin_outln_call_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinNewCallExprModel>>()) {
			_case_begin_5562508992:;
			{
				return _23d1d4c66_gen_builtin_new_call_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinPanicCallExprModel>>()) {
			_case_begin_5562509104:;
			{
				return _23d1d4c66_gen_builtin_panic_call_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>>()) {
			_case_begin_5562509216:;
			{
				return _23d1d4c66_gen_builtin_error_call_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinMakeCallExprModel>>()) {
			_case_begin_5562509328:;
			{
				return _23d1d4c66_gen_builtin_make_call_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel>>()) {
			_case_begin_5562509440:;
			{
				return _23d1d4c66_gen_builtin_append_call_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_BuiltinCloneCallExprModel>>()) {
			_case_begin_5562509552:;
			{
				return _23d1d4c66_gen_builtin_clone_call_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_SizeofExprModel>>()) {
			_case_begin_5562509664:;
			{
				return _23d1d4c66_gen_sizeof_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_AlignofExprModel>>()) {
			_case_begin_5562509776:;
			{
				return _23d1d4c66_gen_alignof_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_RuneExprModel>>()) {
			_case_begin_5562509888:;
			{
				return _23d1d4c66_gen_rune_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_RuneExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_StructStaticIdentExprModel>>()) {
			_case_begin_5562510000:;
			{
				return _23d1d4c66_gen_struct_static_ident_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_IntegratedToStrExprModel>>()) {
			_case_begin_5562510112:;
			{
				return _23d1d4c66_gen_integrated_to_str_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_2255b85b3_TernaryExprModel>>()) {
			_case_begin_5562510224:;
			{
				return _23d1d4c66_gen_ternary_expr_model(_98423_m.operator jule::Ptr<_2255b85b3_TernaryExprModel>());
			}
		}
		else {
			_case_begin_5562504912:;
			{
				return jule::Str("<unimplemented_expression_model>", 32);
			}
		}
		_match_end_5562504080:;
	}
}



inline jule::Str _23d1d4c66_gen_expr(jule::Any _110517_e) {
	jule::Str _110613_obj = _23d1d4c66_gen_expr_model(_110517_e);
	if (_110613_obj[0LL] != '(') {
		return _110613_obj;
	}
	{
		auto &_match_expr{ _110517_e };
		if (_match_expr.type_is<jule::Ptr<_2255b85b3_BinopExprModel>>()) {
			_case_begin_5562568352:;
			{
				_110613_obj=_110613_obj.slice(1LL,_110613_obj.len() - 1LL);
			}
		}
		_match_end_5562567536:;
	}
	return _110613_obj;
}



inline jule::Str _23d1d4c66_gen_val(jule::Ptr<_225aa4a5a_Value> _111816_v) {
	if (_111816_v->_field_data->_method_is_const()) {
		return _23d1d4c66_gen_const_expr(_111816_v->_field_data);
	}
	return _23d1d4c66_gen_expr(_111816_v->_field_data->_field_model);
}



inline jule::Str _23d1d4c66_get_init_expr(jule::Ptr<_23e2b5818_TypeKind> _112522_t) {
	if (_112522_t->_method_ptr() != nullptr) {
		return jule::Str("nullptr", 7);
	}
	jule::Ptr<_2255aae79_Enum> _113013_enm = _112522_t->_method_enm();
	if (_113013_enm != nullptr) {
		return _23d1d4c66_gen_val(_113013_enm->_field_items[0LL]->_field_value);
	}
	return _22649998d_gen_type_kind(_112522_t) + jule::Str("()", 2);
}



inline jule::Str _226470579_get_derive_fn_decl_clone(jule::Ptr<_225036509_Struct>& _730_s) {
	jule::Str _813_obj = _22649998d_gen_struct_kind(_730_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _226470579_get_derive_fn_def_clone(jule::Ptr<_225036509_Struct>& _1329_s) {
	jule::Str _1413_obj = _22649998d_gen_struct_kind(_1329_s);
	_1413_obj+=jule::Str(" ", 1) + _1413_obj;
	_1413_obj+=jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _22635bd4a_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _22635bd4a_as_jt(jule::Str _2814_id) {
	if ((97LL <= _2814_id[0LL]) && (_2814_id[0LL] <= 122LL)) {
		_2814_id[0LL]-=32LL;
	}
	return jule::Str("jule::", 6) + _2814_id;
}



inline jule::Str _22635bd4a_get_addr_as_ident(jule::Uintptr _3622_addr) {
	return jule::Str("_", 1) + _23e028108_fmt_uint(static_cast<jule::U64>(_3622_addr),15LL);
}



inline jule::Str _22635bd4a_as_out_ident(jule::Str _4517_ident,jule::Uintptr _4529_addr) {
	if (_4529_addr != 0LL) {
		jule::Str _4717_obj = _22635bd4a_get_addr_as_ident(_4529_addr);
		_4717_obj+=jule::Str("_", 1);
		_4717_obj+=_4517_ident;
		return _4717_obj;
	}
	return _22635bd4a_as_ident(_4517_ident);
}



inline jule::Str _22635bd4a_as_local_ident(jule::Int _6119_row,jule::Int _6129_col,jule::Str _6139_ident) {
	jule::Str _6213_obj = _23e028108_itoa(_6119_row);
	_6213_obj+=_23e028108_itoa(_6129_col);
	_6213_obj+=jule::Str("_", 1);
	_6213_obj+=_6139_ident;
	return _22635bd4a_as_ident(_6213_obj);
}



inline jule::Str _22635bd4a_fn_out_ident(jule::Ptr<_2252d6a73_Fn>& _7018_f) {
	{
		if (_7018_f->_field_cpp_linked) {
			_case_begin_5562598640:;
			{
				return _7018_f->_field_ident;
			}
		}
		else if (_7018_f->_field_ident == jule::Str("main", 4)) {
			_case_begin_5562597120:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_7018_f->_method_is_method()) {
			_case_begin_5562597488:;
			{
				if (_7018_f->_field_statically) {
					return jule::Str("_static_method_", 15) + _7018_f->_field_ident;
				}
				return jule::Str("_method_", 8) + _7018_f->_field_ident;
			}
		}
		else {
			_case_begin_5562595744:;
			{
				return _22635bd4a_as_out_ident(_7018_f->_field_ident,static_cast<jule::Uintptr>(_7018_f->_field_token._field_file->_method_addr()));
			}
		}
		_match_end_5562595568:;
	}
}



inline jule::Str _22635bd4a_fn_ins_out_ident(jule::Ptr<_2252d6a73_FnIns>& _9026_f) {
	if (_9026_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _9026_f->_field_decl->_field_ident;
	}
	if (_9026_f->_field_decl->_field_cpp_linked || (_9026_f->_field_generics.len() == 0LL)) {
		return _22635bd4a_fn_out_ident(_9026_f->_field_decl);
	}
	{
		auto &expr = _9026_f->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_5562603424:;
		if (it != expr.end()) {
			jule::Int _22635bd4a_i = it - expr.begin();
			jule::Ptr<_2252d6a73_FnIns> _22635bd4a_ins = *it;
			{
				if (_22635bd4a_ins->_method_same(_9026_f)) {
					jule::Str _10121_obj = _22635bd4a_fn_out_ident(_9026_f->_field_decl);
					_10121_obj+=jule::Str("_", 1);
					_10121_obj+=_23e028108_itoa(_22635bd4a_i);
					return _10121_obj;
				}
			}
			_iter_next_5562603424:;
			++it;
			_22635bd4a_i++;
			goto _iter_begin_5562603424;
		}
		_iter_end_5562603424:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _22635bd4a_trait_out_ident(jule::Ptr<_2255ab70a_Trait> _11220_t) {
	if (_11220_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _11220_t->_field_ident;
	}
	return _22635bd4a_as_out_ident(_11220_t->_field_ident,static_cast<jule::Uintptr>(_11220_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _22635bd4a_param_out_ident(jule::Ptr<_2252d6a73_Param>& _12021_p) {
	if (_23e730c0b_is_anon_ident(_12021_p->_field_ident) || _23e730c0b_is_ignore_ident(_12021_p->_field_ident)) {
		return jule::Str();
	}
	return _22635bd4a_as_local_ident(_12021_p->_field_token._field_row,_12021_p->_field_token._field_column,_12021_p->_field_ident);
}



inline jule::Str _22635bd4a_struct_out_ident(jule::Ptr<_225036509_Struct>& _12822_s) {
	if (_12822_s->_field_cpp_linked) {
		if (_22649998d_has_directive(_12822_s->_field_directives,jule::Str("typedef", 7))) {
			return _12822_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12822_s->_field_ident;
	}
	return _22635bd4a_as_out_ident(_12822_s->_field_ident,static_cast<jule::Uintptr>(_12822_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _22635bd4a_struct_ins_out_ident(jule::Ptr<_225036509_StructIns>& _13930_s) {
	if (_13930_s->_field_decl->_field_cpp_linked || (_13930_s->_field_generics.len() == 0LL)) {
		return _22635bd4a_struct_out_ident(_13930_s->_field_decl);
	}
	{
		auto &expr = _13930_s->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_5562621008:;
		if (it != expr.end()) {
			jule::Int _22635bd4a_i = it - expr.begin();
			jule::Ptr<_225036509_StructIns> _22635bd4a_ins = *it;
			{
				if (_22635bd4a_ins->_method_same(_13930_s)) {
					jule::Str _14621_obj = _22635bd4a_struct_out_ident(_13930_s->_field_decl);
					_14621_obj+=jule::Str("_", 1);
					_14621_obj+=_23e028108_itoa(_22635bd4a_i);
					return _14621_obj;
				}
			}
			_iter_next_5562621008:;
			++it;
			_22635bd4a_i++;
			goto _iter_begin_5562621008;
		}
		_iter_end_5562621008:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _22635bd4a_field_out_ident(jule::Ptr<_225036509_Field>& _15721_f) {
	if (_15721_f->_field_owner->_field_cpp_linked) {
		return _15721_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _15721_f->_field_ident;
}



inline jule::Str _22635bd4a_var_out_ident(jule::Ptr<_2258258db_Var> _16522_v) {
	{
		if (_16522_v->_field_cpp_linked) {
			_case_begin_5562630976:;
			{
				return _16522_v->_field_ident;
			}
		}
		else if (_16522_v->_field_ident == jule::Str("error", 5)) {
			_case_begin_5562629952:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if (_16522_v->_field_ident == jule::Str("self", 4)) {
			_case_begin_5562630192:;
			{
				if (_16522_v->_field_kind->_field_kind->_method_sptr() != nullptr) {
					return jule::Str("this->self", 10);
				}
				return jule::Str("(*this)", 7);
			}
		}
		else if (_16522_v->_field_scope != nullptr) {
			_case_begin_5562629584:;
			{
				return _22635bd4a_as_local_ident(_16522_v->_field_token._field_row,_16522_v->_field_token._field_column,_16522_v->_field_ident);
			}
		}
		else {
			_case_begin_5562627536:;
			{
				return _22635bd4a_as_out_ident(_16522_v->_field_ident,static_cast<jule::Uintptr>(_16522_v->_field_token._field_file->_method_addr()));
			}
		}
		_match_end_5562627072:;
	}
}



inline jule::Str _22635bd4a_iter_begin_label_ident(jule::Uintptr _18827_it) {
	return jule::Str("_iter_begin_", 12) + _23e028108_itoa(static_cast<jule::Int>(_18827_it));
}



inline jule::Str _22635bd4a_iter_end_label_ident(jule::Uintptr _19325_it) {
	return jule::Str("_iter_end_", 10) + _23e028108_itoa(static_cast<jule::Int>(_19325_it));
}



inline jule::Str _22635bd4a_iter_next_label_ident(jule::Uintptr _19826_it) {
	return jule::Str("_iter_next_", 11) + _23e028108_itoa(static_cast<jule::Int>(_19826_it));
}



inline jule::Str _22635bd4a_label_ident(jule::Str _20316_ident) {
	return jule::Str("_julec_label_", 13) + _20316_ident;
}



inline jule::Str _22635bd4a_match_end_label_ident(jule::Uintptr _20826_m) {
	return jule::Str("_match_end_", 11) + _23e028108_itoa(static_cast<jule::Int>(_20826_m));
}



inline jule::Str _22635bd4a_case_begin_label_ident(jule::Uintptr _21327_c) {
	return jule::Str("_case_begin_", 12) + _23e028108_itoa(static_cast<jule::Int>(_21327_c));
}



inline jule::Ptr<_23e45734a_Directive> _22649998d_find_directive(jule::Slice<jule::Ptr<_23e45734a_Directive>>& _2524_directives,jule::Str _2555_tag) {
	{
		auto &expr = _2524_directives;
		auto it = expr.begin();
		_iter_begin_5562645056:;
		if (it != expr.end()) {
			jule::Ptr<_23e45734a_Directive> _22649998d_dr = *it;
			{
				if (_22649998d_dr->_field_tag._field_kind == _2555_tag) {
					return _22649998d_dr;
				}
			}
			_iter_next_5562645056:;
			++it;
			goto _iter_begin_5562645056;
		}
		_iter_end_5562645056:;
	}
	return nullptr;
}



inline jule::Bool _22649998d_has_directive(jule::Slice<jule::Ptr<_23e45734a_Directive>>& _3519_directives,jule::Str _3550_tag) {
	return _22649998d_find_directive(_3519_directives,_3550_tag) != nullptr;
}



inline jule::Str _22649998d_gen_prim_kind(jule::Ptr<_23e2b5818_Prim> _4018_p) {
	return _22635bd4a_as_jt(_4018_p->_method_to_str());
}



inline jule::Str _22649998d_gen_tuple_kind(jule::Ptr<_23e2b5818_Tuple> _4523_t) {
	jule::Str _4613_obj = jule::Str("std::tuple<", 11);
	{
		auto &expr = _4523_t->_field_types;
		auto it = expr.begin();
		_iter_begin_5562651808:;
		if (it != expr.end()) {
			jule::Ptr<_23e2b5818_TypeKind> _22649998d_tk = *it;
			{
				_4613_obj+=_22649998d_gen_type_kind(_22649998d_tk);
				_4613_obj+=jule::Str(",", 1);
			}
			_iter_next_5562651808:;
			++it;
			goto _iter_begin_5562651808;
		}
		_iter_end_5562651808:;
	}
	_4613_obj=_4613_obj.slice(0LL,_4613_obj.len() - 1LL);
	_4613_obj+=jule::Str(">", 1);
	return _4613_obj;
}



inline jule::Str _22649998d_as_sptr_kind(jule::Str _5717_elem) {
	jule::Str _5813_obj = _22635bd4a_as_jt(jule::Str("ptr", 3));
	_5813_obj+=jule::Str("<", 1);
	_5813_obj+=_5717_elem;
	_5813_obj+=jule::Str(">", 1);
	return _5813_obj;
}



inline jule::Str _22649998d_gen_sptr_kind(jule::Ptr<_23e2b5818_Sptr> _6622_sptr) {
	return _22649998d_as_sptr_kind(_22649998d_gen_type_kind(_6622_sptr->_field_elem));
}



inline jule::Str _22649998d_gen_ptr_kind(jule::Ptr<_23e2b5818_Ptr> _7121_p) {
	
	if (_7121_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _7713_elem = _22649998d_gen_type_kind(_7121_p->_field_elem);
	_7713_elem+=jule::Str("*", 1);
	return _7713_elem;
}



inline jule::Str _22649998d_gen_enum_kind(jule::Ptr<_2255aae79_Enum> _8322_e) {
	return _22649998d_gen_type_kind(_8322_e->_field_kind->_field_kind);
}



inline jule::Str _22649998d_as_slice_kind(jule::Ptr<_23e2b5818_TypeKind> _8722_elem) {
	jule::Str _8813_obj = _22635bd4a_as_jt(jule::Str("slice", 5));
	_8813_obj+=jule::Str("<", 1);
	_8813_obj+=_22649998d_gen_type_kind(_8722_elem);
	_8813_obj+=jule::Str(">", 1);
	return _8813_obj;
}



inline jule::Str _22649998d_gen_slice_kind(jule::Ptr<_23e2b5818_Slc> _9623_s) {
	return _22649998d_as_slice_kind(_9623_s->_field_elem);
}



inline jule::Str _22649998d_gen_map_kind(jule::Ptr<_23e2b5818_Map> _10121_m) {
	jule::Str _10213_obj = _22635bd4a_as_jt(jule::Str("map", 3));
	_10213_obj+=jule::Str("<", 1);
	_10213_obj+=_22649998d_gen_type_kind(_10121_m->_field_key);
	_10213_obj+=jule::Str(",", 1);
	_10213_obj+=_22649998d_gen_type_kind(_10121_m->_field_val);
	_10213_obj+=jule::Str(">", 1);
	return _10213_obj;
}



inline jule::Str _22649998d_gen_trait_kind_from_ident(jule::Str _11130_ident) {
	jule::Str _11213_obj = _22635bd4a_as_jt(jule::Str("trait", 5));
	_11213_obj+=jule::Str("<", 1);
	_11213_obj+=_11130_ident;
	_11213_obj+=jule::Str(">", 1);
	return _11213_obj;
}



inline jule::Str _22649998d_gen_trait_kind(jule::Ptr<_2255ab70a_Trait> _12019_t) {
	jule::Str _1219_ident = _22635bd4a_trait_out_ident(_12019_t);
	return _22649998d_gen_trait_kind_from_ident(_1219_ident);
}



inline jule::Str _22649998d_gen_struct_kind(jule::Ptr<_225036509_Struct> _12620_s) {
	jule::Str _12713_rep = jule::Str();
	if (_12620_s->_field_cpp_linked && (!(_22649998d_has_directive(_12620_s->_field_directives,jule::Str("typedef", 7))))) {
		_12713_rep+=jule::Str("struct ", 7);
	}
	_12713_rep+=_22635bd4a_struct_out_ident(_12620_s);
	return _12713_rep;
}



inline jule::Str _22649998d_gen_struct_kind_ins(jule::Ptr<_225036509_StructIns> _13728_s) {
	if (_13728_s->_field_decl->_field_cpp_linked) {
		jule::Str _13917_ident = _22635bd4a_struct_ins_out_ident(_13728_s);
		if (_13728_s->_field_generics.len() > 0LL) {
			_13917_ident+=jule::Str("<", 1);
			{
				auto &expr = _13728_s->_field_generics;
				auto it = expr.begin();
				_iter_begin_5562682368:;
				if (it != expr.end()) {
					jule::Ptr<_23e2b5818_TypeKind> _22649998d_g = *it;
					{
						_13917_ident+=_22649998d_gen_type_kind(_22649998d_g);
						_13917_ident+=jule::Str(",", 1);
					}
					_iter_next_5562682368:;
					++it;
					goto _iter_begin_5562682368;
				}
				_iter_end_5562682368:;
			}
			_13917_ident=_13917_ident.slice(0LL,_13917_ident.len() - 1LL);
			_13917_ident+=jule::Str(">", 1);
		}
		jule::Ptr<_23e45734a_Directive> _14913_d = _22649998d_find_directive(_13728_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (_14913_d != nullptr) {
			_13917_ident=(_23d1d4c66_concat_all_parts(_14913_d->_field_args) + jule::Str("::", 2)) + _13917_ident;
		}
		return _13917_ident;
	}
	return _22635bd4a_struct_ins_out_ident(_13728_s);
}



inline jule::Str _22649998d_gen_array_kind(jule::Ptr<_23e2b5818_Arr> _15923_a) {
	jule::Str _16013_obj = _22635bd4a_as_jt(jule::Str("array", 5));
	_16013_obj+=jule::Str("<", 1);
	_16013_obj+=_22649998d_gen_type_kind(_15923_a->_field_elem);
	_16013_obj+=jule::Str(",", 1);
	_16013_obj+=_23e028108_itoa(_15923_a->_field_n);
	_16013_obj+=jule::Str(">", 1);
	return _16013_obj;
}



inline jule::Str _22649998d_gen_fn_anon_decl(jule::Ptr<_2252d6a73_FnIns> _16925_f) {
	jule::Str _17013_decl = _2264c2c91_gen_fn_ins_result(_16925_f);
	_17013_decl+=jule::Str("(", 1);
	if (_16925_f->_field_params.len() > 0LL) {
		{
			auto &expr = _16925_f->_field_params;
			auto it = expr.begin();
			_iter_begin_5562693392:;
			if (it != expr.end()) {
				jule::Ptr<_2252d6a73_ParamIns> _22649998d_param = *it;
				{
					if (_22649998d_param->_field_decl->_method_is_self()) {
						goto _iter_next_5562693392;
					}
					_17013_decl+=_2264c2c91_gen_param_ins_prototype(_22649998d_param);
					_17013_decl+=jule::Str(",", 1);
				}
				_iter_next_5562693392:;
				++it;
				goto _iter_begin_5562693392;
			}
			_iter_end_5562693392:;
		}
		_17013_decl=_17013_decl.slice(0LL,_17013_decl.len() - 1LL);
	} else {
		_17013_decl+=jule::Str("void", 4);
	}
	_17013_decl+=jule::Str(")", 1);
	return _17013_decl;
}



inline jule::Str _22649998d_gen_fn_kind(jule::Ptr<_2252d6a73_FnIns> _19220_f) {
	jule::Str _19313_obj = _22635bd4a_as_jt(jule::Str("fn", 2));
	_19313_obj+=jule::Str("<", 1);
	_19313_obj+=_22649998d_gen_fn_anon_decl(_19220_f);
	_19313_obj+=jule::Str(">", 1);
	return _19313_obj;
}



inline jule::Str _22649998d_gen_type_kind(jule::Ptr<_23e2b5818_TypeKind> _20122_k) {
	{
		if (_20122_k->_method_cpp_linked()) {
			_case_begin_5562718768:;
			{
				return _20122_k->_field_cpp_ident;
			}
		}
		else if (_20122_k->_method_prim() != nullptr) {
			_case_begin_5562718864:;
			{
				return _22649998d_gen_prim_kind(_20122_k->_method_prim());
			}
		}
		else if (_20122_k->_method_tup() != nullptr) {
			_case_begin_5562718352:;
			{
				return _22649998d_gen_tuple_kind(_20122_k->_method_tup());
			}
		}
		else if (_20122_k->_method_sptr() != nullptr) {
			_case_begin_5562718448:;
			{
				return _22649998d_gen_sptr_kind(_20122_k->_method_sptr());
			}
		}
		else if (_20122_k->_method_ptr() != nullptr) {
			_case_begin_5562717984:;
			{
				return _22649998d_gen_ptr_kind(_20122_k->_method_ptr());
			}
		}
		else if (_20122_k->_method_enm() != nullptr) {
			_case_begin_5562718080:;
			{
				return _22649998d_gen_enum_kind(_20122_k->_method_enm());
			}
		}
		else if (_20122_k->_method_slc() != nullptr) {
			_case_begin_5562718176:;
			{
				return _22649998d_gen_slice_kind(_20122_k->_method_slc());
			}
		}
		else if (_20122_k->_method_map() != nullptr) {
			_case_begin_5562717312:;
			{
				return _22649998d_gen_map_kind(_20122_k->_method_map());
			}
		}
		else if (_20122_k->_method_trt() != nullptr) {
			_case_begin_5562717408:;
			{
				return _22649998d_gen_trait_kind(_20122_k->_method_trt());
			}
		}
		else if (_20122_k->_method_strct() != nullptr) {
			_case_begin_5562717504:;
			{
				return _22649998d_gen_struct_kind_ins(_20122_k->_method_strct());
			}
		}
		else if (_20122_k->_method_arr() != nullptr) {
			_case_begin_5562717600:;
			{
				return _22649998d_gen_array_kind(_20122_k->_method_arr());
			}
		}
		else if (_20122_k->_method_fnc() != nullptr) {
			_case_begin_5562718976:;
			{
				return _22649998d_gen_fn_kind(_20122_k->_method_fnc());
			}
		}
		else {
			_case_begin_5562716976:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_5562716800:;
	}
}



inline void _2264c2c91_add_indent(void) {
	_2264c2c91_INDENT.push(9LLU);
}



inline void _2264c2c91_done_indent(void) {
	_2264c2c91_INDENT=_2264c2c91_INDENT.slice(0LL,_2264c2c91_INDENT.len() - 1LL);
}



inline jule::Str _2264c2c91_indent(void) {
	return static_cast<jule::Str>(_2264c2c91_INDENT);
}



inline jule::Bool _2264c2c91_is_cpp_header_file(jule::Str _6723_path) {
	jule::Int _689_offset = _6723_path.rfind(jule::Str(".", 1));
	if (_689_offset == -1LL) {
		return false;
	}
	return _23ceb0954_is_valid_header_ext(_6723_path.slice(_689_offset));
}



inline jule::Str _2264c2c91_gen_links(jule::Ptr<_23de59556_IR>& _7619_ir) {
	jule::Str _7713_obj = jule::Str();
	{
		auto &expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_5562746400:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _2264c2c91_pkg = *it;
			{
				{
					if ((!(_2264c2c91_pkg->_field_cpp_linked))) {
						_case_begin_5562748080:;
						{
							goto _iter_next_5562746400;
						}
					}
					else if (_23ceb0954_is_std_header_path(_2264c2c91_pkg->_field_path)) {
						_case_begin_5562748192:;
						{
							_7713_obj+=jule::Str("#include ", 9);
							_7713_obj+=_2264c2c91_pkg->_field_path;
							_7713_obj+=jule::Str("\n", 1);
						}
					}
					_match_end_5562747856:;
				}
			}
			_iter_next_5562746400:;
			++it;
			goto _iter_begin_5562746400;
		}
		_iter_end_5562746400:;
	}
	{
		auto &expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_5562751664:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _2264c2c91_pkg = *it;
			{
				{
					if ((!(_2264c2c91_pkg->_field_cpp_linked))) {
						_case_begin_5562751824:;
						{
							goto _iter_next_5562751664;
						}
					}
					else if (_2264c2c91_is_cpp_header_file(_2264c2c91_pkg->_field_path)) {
						_case_begin_5562751920:;
						{
							_7713_obj+=jule::Str("#include \"", 10);
							_7713_obj+=_2264c2c91_pkg->_field_path;
							_7713_obj+=jule::Str("\"\n", 2);
						}
					}
					_match_end_5562747376:;
				}
			}
			_iter_next_5562751664:;
			++it;
			goto _iter_begin_5562751664;
		}
		_iter_end_5562751664:;
	}
	return _7713_obj;
}



inline jule::Str _2264c2c91_gen_fn_result(jule::Ptr<_2252d6a73_Fn>& _10523_f) {
	if (_10523_f->_method_is_void()) {
		if (_10523_f->_field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_10523_f->_field_exceptional) {
		return (jule::Str("jule::Exceptional<", 18) + _22649998d_gen_type_kind(_10523_f->_field_result->_field_kind->_field_kind)) + jule::Str(">", 1);
	}
	return _22649998d_gen_type_kind(_10523_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _2264c2c91_gen_fn_ins_result(jule::Ptr<_2252d6a73_FnIns>& _11927_f) {
	if (_11927_f->_field_decl->_method_is_void()) {
		if (_11927_f->_field_decl->_field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_11927_f->_field_decl->_field_exceptional) {
		return (jule::Str("jule::Exceptional<", 18) + _22649998d_gen_type_kind(_11927_f->_field_result)) + jule::Str(">", 1);
	}
	return _22649998d_gen_type_kind(_11927_f->_field_result);
}



inline jule::Str _2264c2c91_gen_param_prototype(jule::Ptr<_2252d6a73_Param>& _13329_p) {
	jule::Str _13413_obj = jule::Str();
	if (_13329_p->_field_variadic) {
		_13413_obj+=_22635bd4a_as_jt(jule::Str("slice", 5));
		_13413_obj+=jule::Str("<", 1);
		_13413_obj+=_22649998d_gen_type_kind(_13329_p->_field_kind->_field_kind);
		_13413_obj+=jule::Str(">", 1);
	} else {
		_13413_obj+=_22649998d_gen_type_kind(_13329_p->_field_kind->_field_kind);
	}
	return _13413_obj;
}



inline jule::Str _2264c2c91_gen_param_ins(jule::Ptr<_2252d6a73_ParamIns>& _14723_p) {
	jule::Str _14813_obj = _2264c2c91_gen_param_ins_prototype(_14723_p);
	_14813_obj+=jule::Str(" ", 1);
	_14813_obj+=_22635bd4a_param_out_ident(_14723_p->_field_decl);
	return _14813_obj;
}



inline jule::Str _2264c2c91_gen_param_ins_prototype(jule::Ptr<_2252d6a73_ParamIns>& _15533_p) {
	jule::Str _15613_obj = jule::Str();
	if (_15533_p->_field_decl->_field_variadic) {
		_15613_obj+=_22635bd4a_as_jt(jule::Str("slice", 5));
		_15613_obj+=jule::Str("<", 1);
		_15613_obj+=_22649998d_gen_type_kind(_15533_p->_field_kind);
		_15613_obj+=jule::Str(">", 1);
	} else {
		_15613_obj+=_22649998d_gen_type_kind(_15533_p->_field_kind);
	}
	if (_15533_p->_field_decl->_field_reference) {
		_15613_obj+=jule::Str("&", 1);
	}
	return _15613_obj;
}



inline jule::Str _2264c2c91_gen_param(jule::Ptr<_2252d6a73_Param>& _17419_p) {
	jule::Str _17513_obj = _2264c2c91_gen_param_prototype(_17419_p);
	if (((_17419_p->_field_ident != jule::Str()) && (!(_23e730c0b_is_ignore_ident(_17419_p->_field_ident)))) && (!(_23e730c0b_is_anon_ident(_17419_p->_field_ident)))) {
		_17513_obj+=jule::Str(" ", 1);
		_17513_obj+=_22635bd4a_param_out_ident(_17419_p);
	}
	return _17513_obj;
}



inline jule::Str _2264c2c91_gen_params(jule::Slice<jule::Ptr<_2252d6a73_Param>>& _18420_params) {
	{
		if (_18420_params.len() == 0LL) {
			_case_begin_5562780064:;
			{
				return jule::Str("(void)", 6);
			}
		}
		else if ((_18420_params.len() == 1LL) && _18420_params[0LL]->_method_is_self()) {
			_case_begin_5562780176:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_5562779840:;
	}
	jule::Str _19313_obj = jule::Str("(", 1);
	{
		auto &expr = _18420_params;
		auto it = expr.begin();
		_iter_begin_5562783040:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Param> _2264c2c91_p = *it;
			{
				if ((!(_2264c2c91_p->_method_is_self()))) {
					_19313_obj+=_2264c2c91_gen_param(_2264c2c91_p) + jule::Str(",", 1);
				}
			}
			_iter_next_5562783040:;
			++it;
			goto _iter_begin_5562783040;
		}
		_iter_end_5562783040:;
	}
	_19313_obj=_19313_obj.slice(0LL,_19313_obj.len() - 1LL);
	return _19313_obj + jule::Str(")", 1);
}



inline jule::Str _2264c2c91_gen_params_ins(jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>& _20524_params) {
	{
		if (_20524_params.len() == 0LL) {
			_case_begin_5562788208:;
			{
				return jule::Str("(void)", 6);
			}
		}
		else if ((_20524_params.len() == 1LL) && _20524_params[0LL]->_field_decl->_method_is_self()) {
			_case_begin_5562788304:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_5562785696:;
	}
	jule::Str _21413_obj = jule::Str("(", 1);
	{
		auto &expr = _20524_params;
		auto it = expr.begin();
		_iter_begin_5562791216:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_ParamIns> _2264c2c91_p = *it;
			{
				if ((!(_2264c2c91_p->_field_decl->_method_is_self()))) {
					_21413_obj+=_2264c2c91_gen_param_ins(_2264c2c91_p) + jule::Str(",", 1);
				}
			}
			_iter_next_5562791216:;
			++it;
			goto _iter_begin_5562791216;
		}
		_iter_end_5562791216:;
	}
	_21413_obj=_21413_obj.slice(0LL,_21413_obj.len() - 1LL);
	return _21413_obj + jule::Str(")", 1);
}



inline jule::Str _2264c2c91_gen_params_prototypes(jule::Slice<jule::Ptr<_2252d6a73_ParamIns>>& _22731_params) {
	{
		if (_22731_params.len() == 0LL) {
			_case_begin_5562796480:;
			{
				return jule::Str("(void)", 6);
			}
		}
		else if ((_22731_params.len() == 1LL) && _22731_params[0LL]->_field_decl->_method_is_self()) {
			_case_begin_5562796592:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_5562796208:;
	}
	jule::Str _23613_obj = jule::Str("(", 1);
	{
		auto &expr = _22731_params;
		auto it = expr.begin();
		_iter_begin_5562799824:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_ParamIns> _2264c2c91_p = *it;
			{
				if ((!(_2264c2c91_p->_field_decl->_method_is_self()))) {
					_23613_obj+=_2264c2c91_gen_param_ins_prototype(_2264c2c91_p);
					_23613_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_5562799824:;
			++it;
			goto _iter_begin_5562799824;
		}
		_iter_end_5562799824:;
	}
	_23613_obj=_23613_obj.slice(0LL,_23613_obj.len() - 1LL);
	return _23613_obj + jule::Str(")", 1);
}



inline jule::Str _2264c2c91_gen_trait(jule::Ptr<_2255ab70a_Trait>& _25019_t) {
	
	jule::Str _2529_outid = _22635bd4a_trait_out_ident(_25019_t);
	jule::Str _25413_obj = jule::Str("struct ", 7);
	_25413_obj+=_2529_outid;
	_25413_obj+=jule::Str(" {\n", 3);
	_25413_obj+=jule::Str("\t", 1);
	_25413_obj+=jule::Str("virtual ~", 9);
	_25413_obj+=_2529_outid;
	_25413_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto &expr = _25019_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_5562809088:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _2264c2c91_f = *it;
			{
				_25413_obj+=jule::Str("\t", 1);
				_25413_obj+=jule::Str("virtual ", 8);
				_25413_obj+=_2264c2c91_gen_fn_result(_2264c2c91_f);
				_25413_obj+=jule::Str(" _method_", 9);
				_25413_obj+=_2264c2c91_f->_field_ident;
				_25413_obj+=_2264c2c91_gen_params(_2264c2c91_f->_field_params);
				_25413_obj+=jule::Str(" {", 2);
				if ((!(_2264c2c91_f->_method_is_void()))) {
					_25413_obj+=jule::Str(" return {}; ", 12);
				}
				_25413_obj+=jule::Str("}\n", 2);
			}
			_iter_next_5562809088:;
			++it;
			goto _iter_begin_5562809088;
		}
		_iter_end_5562809088:;
	}
	_25413_obj+=jule::Str("};", 2);
	return _25413_obj;
}



inline jule::Str _2264c2c91_gen_traits_tbl(jule::Ptr<_225a097a1_SymbolTable>& _27924_tbl) {
	jule::Str _28013_obj = jule::Str();
	{
		auto &expr = _27924_tbl->_field_traits;
		auto it = expr.begin();
		_iter_begin_5562815104:;
		if (it != expr.end()) {
			jule::Ptr<_2255ab70a_Trait> _2264c2c91_t = *it;
			{
				_28013_obj+=_2264c2c91_gen_trait(_2264c2c91_t);
				_28013_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5562815104:;
			++it;
			goto _iter_begin_5562815104;
		}
		_iter_end_5562815104:;
	}
	return _28013_obj;
}



inline jule::Str _2264c2c91_gen_traits_pkg(jule::Ptr<_225615962_Package>& _28924_pkg) {
	jule::Str _29013_obj = jule::Str();
	{
		auto &expr = _28924_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_5562818416:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _2264c2c91_tbl = *it;
			{
				_29013_obj+=_2264c2c91_gen_traits_tbl(_2264c2c91_tbl);
			}
			_iter_next_5562818416:;
			++it;
			goto _iter_begin_5562818416;
		}
		_iter_end_5562818416:;
	}
	return _29013_obj;
}



inline jule::Str _2264c2c91_gen_traits(jule::Ptr<_23de59556_IR>& _29820_ir) {
	jule::Str _29913_obj = jule::Str();
	{
		auto &expr = _29820_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_5562821536:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _2264c2c91_u = *it;
			{
				if ((!(_2264c2c91_u->_field_cpp_linked))) {
					_29913_obj+=_2264c2c91_gen_traits_pkg(_2264c2c91_u->_field_package);
				}
			}
			_iter_next_5562821536:;
			++it;
			goto _iter_begin_5562821536;
		}
		_iter_end_5562821536:;
	}
	_29913_obj+=_2264c2c91_gen_traits_pkg(_29820_ir->_field_main);
	return _29913_obj;
}



inline jule::Str _2264c2c91_gen_trait_prototype(jule::Ptr<_2255ab70a_Trait>& _31025_t) {
	jule::Str _31113_obj = jule::Str("struct ", 7);
	_31113_obj+=_22635bd4a_trait_out_ident(_31025_t);
	_31113_obj+=jule::Str(";", 1);
	return _31113_obj;
}



inline jule::Str _2264c2c91_gen_trait_prototypes(jule::Ptr<_225615962_Package>& _31830_p) {
	jule::Str _31913_obj = jule::Str();
	{
		auto &expr = _31830_p->_field_files;
		auto it = expr.begin();
		_iter_begin_5562828080:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _2264c2c91_f = *it;
			{
				{
					auto &expr = _2264c2c91_f->_field_traits;
					auto it = expr.begin();
					_iter_begin_5562829680:;
					if (it != expr.end()) {
						jule::Ptr<_2255ab70a_Trait> &_2264c2c91_t = *it;
						{
							if (_2264c2c91_t->_field_token._field_id != 0LLU) {
								_31913_obj+=_2264c2c91_gen_trait_prototype(_2264c2c91_t);
								_31913_obj+=jule::Str("\n", 1);
							}
						}
						_iter_next_5562829680:;
						++it;
						goto _iter_begin_5562829680;
					}
					_iter_end_5562829680:;
				}
			}
			_iter_next_5562828080:;
			++it;
			goto _iter_begin_5562828080;
		}
		_iter_end_5562828080:;
	}
	return _31913_obj;
}



inline jule::Str _2264c2c91_gen_struct_plain_prototype(jule::Ptr<_225036509_Struct>& _33236_s) {
	jule::Str _33313_obj = jule::Str();
	{
		auto &expr = _33236_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_5562828896:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_StructIns> _2264c2c91_ins = *it;
			{
				_33313_obj+=jule::Str("\nstruct ", 8);
				_33313_obj+=_22635bd4a_struct_ins_out_ident(_2264c2c91_ins);
				_33313_obj+=jule::Str(";", 1);
				_33313_obj+=jule::Str("\n", 1);
			}
			_iter_next_5562828896:;
			++it;
			goto _iter_begin_5562828896;
		}
		_iter_end_5562828896:;
	}
	return _33313_obj;
}



inline jule::Str _2264c2c91_gen_struct_plain_prototypes(jule::Slice<jule::Ptr<_225036509_Struct>>& _34437_structs) {
	jule::Str _34513_obj = jule::Str();
	{
		auto &expr = _34437_structs;
		auto it = expr.begin();
		_iter_begin_5562836448:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> _2264c2c91_s = *it;
			{
				if ((!(_2264c2c91_s->_field_cpp_linked)) && (_2264c2c91_s->_field_token._field_id != 0LLU)) {
					_34513_obj+=_2264c2c91_gen_struct_plain_prototype(_2264c2c91_s);
					_34513_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_5562836448:;
			++it;
			goto _iter_begin_5562836448;
		}
		_iter_end_5562836448:;
	}
	return _34513_obj;
}



inline jule::Str _2264c2c91_gen_struct_traits(jule::Ptr<_225036509_Struct>& _35623_s) {
	if (_35623_s->_field_implements.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _36113_obj = jule::Str(": ", 2);
	{
		auto &expr = _35623_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_5562841840:;
		if (it != expr.end()) {
			jule::Ptr<_2255ab70a_Trait> &_2264c2c91_i = *it;
			{
				_36113_obj+=jule::Str("public ", 7);
				_36113_obj+=_22635bd4a_trait_out_ident(_2264c2c91_i);
				_36113_obj+=jule::Str(",", 1);
			}
			_iter_next_5562841840:;
			++it;
			goto _iter_begin_5562841840;
		}
		_iter_end_5562841840:;
	}
	_36113_obj=_36113_obj.slice(0LL,_36113_obj.len() - 1LL);
	return _36113_obj;
}



inline jule::Str _2264c2c91_gen_field_decl(jule::Ptr<_225036509_FieldIns>& _37224_f) {
	jule::Str _37313_obj = _22649998d_gen_type_kind(_37224_f->_field_kind);
	_37313_obj+=jule::Str(" ", 1);
	_37313_obj+=_22635bd4a_field_out_ident(_37224_f->_field_decl);
	_37313_obj+=jule::Str(" = ", 3);
	_37313_obj+=_23d1d4c66_get_init_expr(_37224_f->_field_kind);
	_37313_obj+=jule::Str(";", 1);
	return _37313_obj;
}



inline jule::Str _2264c2c91_gen_struct_self_field_type_kind(jule::Ptr<_225036509_StructIns>& _38241_s) {
	return _22649998d_as_sptr_kind(_22649998d_gen_struct_kind_ins(_38241_s));
}



inline jule::Str _2264c2c91_gen_struct_self_field(jule::Ptr<_225036509_StructIns>& _38731_s) {
	jule::Str _38813_obj = _2264c2c91_gen_struct_self_field_type_kind(_38731_s);
	_38813_obj+=jule::Str(" self;", 6);
	return _38813_obj;
}



inline jule::Str _2264c2c91_gen_struct_self_field_init_st(jule::Ptr<_225036509_StructIns>& _39339_s) {
	jule::Str _39413_obj = jule::Str("this->self = ", 13);
	_39413_obj+=_2264c2c91_gen_struct_self_field_type_kind(_39339_s);
	_39413_obj+=jule::Str("::make(this, nullptr);", 22);
	return _39413_obj;
}



inline jule::Str _2264c2c91_gen_struct_constructor(jule::Ptr<_225036509_StructIns>& _40032_s) {
	jule::Str _40113_obj = _22635bd4a_struct_ins_out_ident(_40032_s);
	_40113_obj+=jule::Str("(", 1);
	if (_40032_s->_field_fields.len() > 0LL) {
		{
			auto &expr = _40032_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_5562856496:;
			if (it != expr.end()) {
				jule::Ptr<_225036509_FieldIns> _2264c2c91_f = *it;
				{
					_40113_obj+=_22649998d_gen_type_kind(_2264c2c91_f->_field_kind);
					_40113_obj+=jule::Str(" __param_", 9);
					_40113_obj+=_2264c2c91_f->_field_decl->_field_ident;
					_40113_obj+=jule::Str(", ", 2);
				}
				_iter_next_5562856496:;
				++it;
				goto _iter_begin_5562856496;
			}
			_iter_end_5562856496:;
		}
		_40113_obj=_40113_obj.slice(0LL,_40113_obj.len() - 2LL);
	} else {
		_40113_obj+=jule::Str("void", 4);
	}
	_40113_obj+=jule::Str(")", 1);
	if (_40032_s->_field_fields.len() > 0LL) {
		_40113_obj+=jule::Str(": ", 2);
		{
			auto &expr = _40032_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_5562860336:;
			if (it != expr.end()) {
				jule::Ptr<_225036509_FieldIns> &_2264c2c91_f = *it;
				{
					_40113_obj+=_22635bd4a_field_out_ident(_2264c2c91_f->_field_decl);
					_40113_obj+=jule::Str("(", 1);
					_40113_obj+=jule::Str("__param_", 8);
					_40113_obj+=_2264c2c91_f->_field_decl->_field_ident;
					_40113_obj+=jule::Str("), ", 3);
				}
				_iter_next_5562860336:;
				++it;
				goto _iter_begin_5562860336;
			}
			_iter_end_5562860336:;
		}
		_40113_obj=_40113_obj.slice(0LL,_40113_obj.len() - 2LL);
	}
	_40113_obj+=jule::Str(" {", 2);
	if (_40032_s->_field_decl->_method_has_ref_accessible()) {
		_40113_obj+=jule::Str("\n", 1);
		_2264c2c91_add_indent();
		_40113_obj+=_2264c2c91_indent();
		_40113_obj+=_2264c2c91_gen_struct_self_field_init_st(_40032_s);
		_40113_obj+=jule::Str("\n", 1);
		_2264c2c91_done_indent();
		_40113_obj+=jule::Str("\n", 1);
		_40113_obj+=_2264c2c91_indent();
	}
	_40113_obj+=jule::Str("}", 1);
	return _40113_obj;
}



inline jule::Str _2264c2c91_gen_struct_destructor(jule::Ptr<_225036509_StructIns>& _44431_s) {
	jule::Bool _4459_disposed = _44431_s->_field_decl->_method_is_implements(_22602dc1a_BUILTIN_TRAIT_DISPOSE);
	jule::Bool _4469_ref_access = _44431_s->_field_decl->_method_has_ref_accessible();
	if ((!(_4469_ref_access)) && (!(_4459_disposed))) {
		return jule::Str();
	}
	jule::Str _45213_obj = jule::Str("~", 1);
	_45213_obj+=_22635bd4a_struct_ins_out_ident(_44431_s);
	_45213_obj+=jule::Str("(void) { ", 9);
	if (_4459_disposed) {
		jule::Ptr<_2252d6a73_Fn> _45713_dispose_method = _44431_s->_method_find_method(jule::Str("dispose", 7),false);
		_45213_obj+=jule::Str("this->", 6);
		_45213_obj+=_22635bd4a_fn_out_ident(_45713_dispose_method);
		_45213_obj+=jule::Str("(); ", 4);
	}
	if (_4469_ref_access) {
		_45213_obj+=jule::Str("this->self.ref = nullptr; ", 26);
	}
	_45213_obj+=jule::Str("}", 1);
	return _45213_obj;
}



inline jule::Str _2264c2c91_gen_struct_operators(jule::Ptr<_225036509_StructIns>& _47130_s) {
	jule::Str _4729_out_ident = _22635bd4a_struct_ins_out_ident(_47130_s);
	jule::Str _47313_obj = jule::Str();
	_47313_obj+=_2264c2c91_indent();
	if (_23d01979e_OPT_INLINE) {
		_47313_obj+=jule::Str("inline ", 7);
	}
	_47313_obj+=jule::Str("bool operator==(const ", 22);
	_47313_obj+=_4729_out_ident;
	_47313_obj+=jule::Str(" &_Src) const {", 15);
	if (_47130_s->_field_fields.len() > 0LL) {
		_2264c2c91_add_indent();
		_47313_obj+=jule::Str("\n", 1);
		_47313_obj+=_2264c2c91_indent();
		_47313_obj+=jule::Str("return ", 7);
		_2264c2c91_add_indent();
		jule::Int _48817_n = 0LL;
		{
			auto &expr = _47130_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_5562884928:;
			if (it != expr.end()) {
				jule::Ptr<_225036509_FieldIns> _2264c2c91_f = *it;
				{
					jule::Ptr<_225036509_StructIns> _49117_strct = _2264c2c91_f->_field_kind->_method_strct();
					if (((_49117_strct != nullptr) && (_49117_strct->_field_decl != nullptr)) && _49117_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_5562884928;
					}
					(_48817_n)++;
					_47313_obj+=jule::Str("\n", 1);
					_47313_obj+=_2264c2c91_indent();
					_47313_obj+=jule::Str("this->", 6);
					jule::Str _50017_f_ident = _22635bd4a_field_out_ident(_2264c2c91_f->_field_decl);
					_47313_obj+=_50017_f_ident;
					_47313_obj+=jule::Str(" == _Src.", 9);
					_47313_obj+=_50017_f_ident;
					_47313_obj+=jule::Str(" &&", 3);
				}
				_iter_next_5562884928:;
				++it;
				goto _iter_begin_5562884928;
			}
			_iter_end_5562884928:;
		}
		_2264c2c91_done_indent();
		if (_48817_n > 0LL) {
			_47313_obj=_47313_obj.slice(0LL,_47313_obj.len() - 3LL);
		} else {
			_47313_obj+=jule::Str("true", 4);
		}
		_47313_obj+=jule::Str(";\n", 2);
		_2264c2c91_done_indent();
		_47313_obj+=_2264c2c91_indent();
		_47313_obj+=jule::Str("}", 1);
	} else {
		_47313_obj+=jule::Str(" return true; }", 15);
	}
	_47313_obj+=jule::Str("\n\n", 2);
	_47313_obj+=_2264c2c91_indent();
	if (_23d01979e_OPT_INLINE) {
		_47313_obj+=jule::Str("inline ", 7);
	}
	_47313_obj+=jule::Str("bool operator!=(const ", 22);
	_47313_obj+=_4729_out_ident;
	_47313_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _47313_obj;
}



inline jule::Str _2264c2c91_gen_struct_derive_defs_prototypes(jule::Ptr<_225036509_StructIns>& _53039_s) {
	jule::Str _53113_obj = jule::Str();
	if (_53039_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_53113_obj+=_2264c2c91_indent();
		_53113_obj+=_226470579_get_derive_fn_decl_clone(_53039_s->_field_decl);
		_53113_obj+=jule::Str(";\n\n", 3);
	}
	return _53113_obj;
}



inline jule::Str _2264c2c91_gen_struct_ins_prototype(jule::Ptr<_225036509_StructIns>& _54234_s) {
	jule::Str _54313_obj = jule::Str("struct ", 7);
	jule::Str _5449_out_ident = _22635bd4a_struct_ins_out_ident(_54234_s);
	_54313_obj+=_5449_out_ident;
	_54313_obj+=_2264c2c91_gen_struct_traits(_54234_s->_field_decl);
	_54313_obj+=jule::Str(" {\n", 3);
	jule::Bool _5509_ref_access = _54234_s->_field_decl->_method_has_ref_accessible();
	_2264c2c91_add_indent();
	if (_5509_ref_access) {
		_54313_obj+=_2264c2c91_indent();
		_54313_obj+=_2264c2c91_gen_struct_self_field(_54234_s);
		_54313_obj+=jule::Str("\n\n", 2);
	}
	if (_54234_s->_field_fields.len() > 0LL) {
		{
			auto &expr = _54234_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_5562907680:;
			if (it != expr.end()) {
				jule::Ptr<_225036509_FieldIns> _2264c2c91_f = *it;
				{
					_54313_obj+=_2264c2c91_indent();
					_54313_obj+=_2264c2c91_gen_field_decl(_2264c2c91_f);
					_54313_obj+=jule::Str("\n", 1);
				}
				_iter_next_5562907680:;
				++it;
				goto _iter_begin_5562907680;
			}
			_iter_end_5562907680:;
		}
		_54313_obj+=jule::Str("\n\n", 2);
		_54313_obj+=_2264c2c91_indent();
		_54313_obj+=_2264c2c91_gen_struct_constructor(_54234_s);
		_54313_obj+=jule::Str("\n\n", 2);
	}
	_54313_obj+=_2264c2c91_indent();
	_54313_obj+=_2264c2c91_gen_struct_destructor(_54234_s);
	_54313_obj+=jule::Str("\n\n", 2);
	_54313_obj+=_2264c2c91_indent();
	_54313_obj+=_5449_out_ident;
	if (_5509_ref_access) {
		_54313_obj+=jule::Str("(void) { ", 9);
		_54313_obj+=_2264c2c91_gen_struct_self_field_init_st(_54234_s);
		_54313_obj+=jule::Str(" }\n\n", 4);
	} else {
		_54313_obj+=jule::Str("(void) = default;\n\n", 19);
	}
	{
		auto &expr = _54234_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_5562905216:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _2264c2c91_f = *it;
			{
				_54313_obj+=_2264c2c91_gen_fn_prototype(_2264c2c91_f,true);
				_54313_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5562905216:;
			++it;
			goto _iter_begin_5562905216;
		}
		_iter_end_5562905216:;
	}
	_54313_obj+=_2264c2c91_gen_struct_derive_defs_prototypes(_54234_s);
	_54313_obj+=_2264c2c91_gen_struct_operators(_54234_s);
	_54313_obj+=jule::Str("\n", 1);
	_2264c2c91_done_indent();
	_54313_obj+=_2264c2c91_indent() + jule::Str("};", 2);
	return _54313_obj;
}



inline jule::Str _2264c2c91_gen_struct_prototype(jule::Ptr<_225036509_Struct>& _60130_s) {
	jule::Str _60213_obj = jule::Str();
	{
		auto &expr = _60130_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_5562919824:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_StructIns> _2264c2c91_ins = *it;
			{
				_60213_obj+=_2264c2c91_gen_struct_ins_prototype(_2264c2c91_ins);
				_60213_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5562919824:;
			++it;
			goto _iter_begin_5562919824;
		}
		_iter_end_5562919824:;
	}
	return _60213_obj;
}



inline jule::Str _2264c2c91_gen_struct_prototypes(jule::Slice<jule::Ptr<_225036509_Struct>>& _61131_structs) {
	jule::Str _61213_obj = jule::Str();
	{
		auto &expr = _61131_structs;
		auto it = expr.begin();
		_iter_begin_5562922896:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> _2264c2c91_s = *it;
			{
				if ((!(_2264c2c91_s->_field_cpp_linked)) && (_2264c2c91_s->_field_token._field_id != 0LLU)) {
					_61213_obj+=_2264c2c91_gen_struct_prototype(_2264c2c91_s);
					_61213_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_5562922896:;
			++it;
			goto _iter_begin_5562922896;
		}
		_iter_end_5562922896:;
	}
	return _61213_obj;
}



inline jule::Str _2264c2c91_gen_fn_decl_head(jule::Ptr<_2252d6a73_FnIns>& _62226_f,jule::Bool _62237_method) {
	jule::Str _62313_obj = jule::Str();
	if (_62237_method && _62226_f->_field_decl->_field_statically) {
		_62313_obj+=jule::Str("static ", 7);
	}
	if (_23d01979e_OPT_INLINE && (!(_62226_f->_field_decl->_method_is_entry_point()))) {
		_62313_obj+=jule::Str("inline ", 7);
	}
	_62313_obj+=_2264c2c91_gen_fn_ins_result(_62226_f) + jule::Str(" ", 1);
	if ((!(_62237_method)) && (_62226_f->_field_decl->_field_owner != nullptr)) {
		_62313_obj+=_22635bd4a_struct_ins_out_ident(_62226_f->_field_owner);
		_62313_obj+=jule::Str("::", 2);
	}
	_62313_obj+=_22635bd4a_fn_ins_out_ident(_62226_f);
	return _62313_obj;
}



inline jule::Str _2264c2c91_gen_fn_prototype(jule::Ptr<_2252d6a73_Fn>& _64426_f,jule::Bool _64434_method) {
	jule::Str _64513_obj = jule::Str();
	{
		auto &expr = _64426_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_5562935024:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_FnIns> _2264c2c91_c = *it;
			{
				_64513_obj+=_2264c2c91_indent();
				_64513_obj+=_2264c2c91_gen_fn_decl_head(_2264c2c91_c,_64434_method);
				_64513_obj+=_2264c2c91_gen_params_prototypes(_2264c2c91_c->_field_params);
				_64513_obj+=jule::Str(";\n", 2);
			}
			_iter_next_5562935024:;
			++it;
			goto _iter_begin_5562935024;
		}
		_iter_end_5562935024:;
	}
	return _64513_obj;
}



inline jule::Str _2264c2c91_gen_fn_prototypes(jule::Ptr<_225615962_Package>& _65627_pkg) {
	jule::Str _65713_obj = jule::Str();
	{
		auto &expr = _65627_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_5562939632:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _2264c2c91_file = *it;
			{
				{
					auto &expr = _2264c2c91_file->_field_funcs;
					auto it = expr.begin();
					_iter_begin_5562941232:;
					if (it != expr.end()) {
						jule::Ptr<_2252d6a73_Fn> _2264c2c91_f = *it;
						{
							if ((!(_2264c2c91_f->_field_cpp_linked)) && (_2264c2c91_f->_field_token._field_id != 0LLU)) {
								_65713_obj+=_2264c2c91_gen_fn_prototype(_2264c2c91_f,false);
							}
						}
						_iter_next_5562941232:;
						++it;
						goto _iter_begin_5562941232;
					}
					_iter_end_5562941232:;
				}
			}
			_iter_next_5562939632:;
			++it;
			goto _iter_begin_5562939632;
		}
		_iter_end_5562939632:;
	}
	return _65713_obj;
}



inline jule::Str _2264c2c91_gen_prototypes(jule::Ptr<_23de59556_IR>& _66924_ir) {
	jule::Str _67013_obj = jule::Str();
	{
		auto &expr = _66924_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_5562940560:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _2264c2c91_u = *it;
			{
				if ((!(_2264c2c91_u->_field_cpp_linked))) {
					_67013_obj+=_2264c2c91_gen_trait_prototypes(_2264c2c91_u->_field_package);
				}
			}
			_iter_next_5562940560:;
			++it;
			goto _iter_begin_5562940560;
		}
		_iter_end_5562940560:;
	}
	_67013_obj+=_2264c2c91_gen_trait_prototypes(_66924_ir->_field_main);
	_67013_obj+=_2264c2c91_gen_struct_plain_prototypes(_66924_ir->_field_ordered._field_structs);
	_67013_obj+=_2264c2c91_gen_traits(_66924_ir);
	_67013_obj+=jule::Str("\n", 1);
	_67013_obj+=_2264c2c91_gen_struct_prototypes(_66924_ir->_field_ordered._field_structs);
	{
		auto &expr = _66924_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_5562945696:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _2264c2c91_u = *it;
			{
				if ((!(_2264c2c91_u->_field_cpp_linked))) {
					_67013_obj+=_2264c2c91_gen_fn_prototypes(_2264c2c91_u->_field_package);
				}
			}
			_iter_next_5562945696:;
			++it;
			goto _iter_begin_5562945696;
		}
		_iter_end_5562945696:;
	}
	_67013_obj+=_2264c2c91_gen_fn_prototypes(_66924_ir->_field_main);
	return _67013_obj;
}



inline jule::Str _2264c2c91_gen_var_init_expr(jule::Ptr<_2258258db_Var>& _69827_v,jule::Str _69836_init) {
	jule::Str _69913_obj = jule::Str();
	if (_69827_v->_field_statically) {
		_69913_obj+=jule::Str("static ", 7);
	}
	_69913_obj+=_22649998d_gen_type_kind(_69827_v->_field_kind->_field_kind);
	_69913_obj+=jule::Str(" ", 1);
	if (_69827_v->_field_reference) {
		_69913_obj+=jule::Str("&", 1);
	}
	_69913_obj+=_22635bd4a_var_out_ident(_69827_v);
	if (_69836_init != jule::Str()) {
		_69913_obj+=jule::Str(" = ", 3);
		_69913_obj+=_69836_init;
	}
	_69913_obj+=jule::Str(";", 1);
	return _69913_obj;
}



inline jule::Str _2264c2c91_gen_var(jule::Ptr<_2258258db_Var> _71916_v) {
	if (_23e730c0b_is_ignore_ident(_71916_v->_field_ident)) {
		return jule::Str();
	}
	if ((_71916_v->_field_value != nullptr) && (_71916_v->_field_value->_field_expr != nullptr)) {
		if (_71916_v->_field_value->_field_data->_field_model != nullptr) {
			return _2264c2c91_gen_var_init_expr(_71916_v,_23d1d4c66_gen_val(_71916_v->_field_value));
		}
		return _2264c2c91_gen_var_init_expr(_71916_v,jule::Str());
	}
	return _2264c2c91_gen_var_init_expr(_71916_v,_23d1d4c66_get_init_expr(_71916_v->_field_kind->_field_kind));
}



inline jule::Str _2264c2c91_gen_globals(jule::Slice<jule::Ptr<_2258258db_Var>>& _73421_globals) {
	jule::Str _73513_obj = jule::Str();
	{
		auto &expr = _73421_globals;
		auto it = expr.begin();
		_iter_begin_5562965248:;
		if (it != expr.end()) {
			jule::Ptr<_2258258db_Var> _2264c2c91_v = *it;
			{
				if (_2264c2c91_v->_field_token._field_id != 0LLU) {
					_73513_obj+=_2264c2c91_gen_var(_2264c2c91_v);
					_73513_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_5562965248:;
			++it;
			goto _iter_begin_5562965248;
		}
		_iter_end_5562965248:;
	}
	return _73513_obj;
}



inline jule::Str _2264c2c91_gen_fn(jule::Ptr<_2252d6a73_Fn>& _74816_f) {
	jule::Str _74913_obj = jule::Str();
	{
		auto &expr = _74816_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_5562969248:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_FnIns> _2264c2c91_ins = *it;
			{
				_74913_obj+=_2264c2c91_gen_fn_decl_head(_2264c2c91_ins,false);
				_74913_obj+=_2264c2c91_gen_params_ins(_2264c2c91_ins->_field_params);
				_74913_obj+=jule::Str(" ", 1);
				_74913_obj+=_23d057e3b_gen_fn_scope(_2264c2c91_ins);
				_74913_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5562969248:;
			++it;
			goto _iter_begin_5562969248;
		}
		_iter_end_5562969248:;
	}
	return _74913_obj;
}



inline jule::Str _2264c2c91_gen_pkg_fns(jule::Ptr<_225615962_Package>& _76121_p) {
	jule::Str _76213_obj = jule::Str();
	{
		auto &expr = _76121_p->_field_files;
		auto it = expr.begin();
		_iter_begin_5562973744:;
		if (it != expr.end()) {
			jule::Ptr<_225a097a1_SymbolTable> _2264c2c91_f = *it;
			{
				{
					auto &expr = _2264c2c91_f->_field_funcs;
					auto it = expr.begin();
					_iter_begin_5562975344:;
					if (it != expr.end()) {
						jule::Ptr<_2252d6a73_Fn> _2264c2c91_f = *it;
						{
							if ((!(_2264c2c91_f->_field_cpp_linked)) && (_2264c2c91_f->_field_token._field_id != 0LLU)) {
								_76213_obj+=_2264c2c91_gen_fn(_2264c2c91_f);
								_76213_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_5562975344:;
						++it;
						goto _iter_begin_5562975344;
					}
					_iter_end_5562975344:;
				}
			}
			_iter_next_5562973744:;
			++it;
			goto _iter_begin_5562973744;
		}
		_iter_end_5562973744:;
	}
	return _76213_obj;
}



inline jule::Str _2264c2c91_gen_struct_method_defs(jule::Ptr<_225036509_StructIns>& _77532_s) {
	jule::Str _77613_obj = jule::Str();
	{
		auto &expr = _77532_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_5562974672:;
		if (it != expr.end()) {
			jule::Ptr<_2252d6a73_Fn> _2264c2c91_f = *it;
			{
				_77613_obj+=_2264c2c91_indent();
				_77613_obj+=_2264c2c91_gen_fn(_2264c2c91_f);
				_77613_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5562974672:;
			++it;
			goto _iter_begin_5562974672;
		}
		_iter_end_5562974672:;
	}
	return _77613_obj;
}



inline jule::Str _2264c2c91_gen_struct_ostream(jule::Ptr<_225036509_StructIns>& _78628_s) {
	jule::Str _78713_obj = jule::Str();
	_78713_obj+=_2264c2c91_indent();
	_78713_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_78713_obj+=_22635bd4a_struct_ins_out_ident(_78628_s);
	_78713_obj+=jule::Str(" &_Src) {\n", 10);
	_2264c2c91_add_indent();
	_78713_obj+=_2264c2c91_indent();
	_78713_obj+=jule::Str("_Stream << \"", 12);
	_78713_obj+=_78628_s->_field_decl->_field_ident;
	_78713_obj+=jule::Str("{\";\n", 4);
	{
		auto &expr = _78628_s->_field_fields;
		auto it = expr.begin();
		_iter_begin_5562985552:;
		if (it != expr.end()) {
			jule::Int _2264c2c91_i = it - expr.begin();
			jule::Ptr<_225036509_FieldIns> _2264c2c91_f = *it;
			{
				_78713_obj+=_2264c2c91_indent();
				_78713_obj+=jule::Str("_Stream << \"", 12);
				_78713_obj+=_2264c2c91_f->_field_decl->_field_ident;
				_78713_obj+=jule::Str(":", 1);
				jule::Ptr<_225036509_StructIns> _80513_strct = _2264c2c91_f->_field_kind->_method_strct();
				if (((_80513_strct != nullptr) && (_80513_strct->_field_decl != nullptr)) && _80513_strct->_field_decl->_field_cpp_linked) {
					_78713_obj+=jule::Str(" cpp.", 5);
					_78713_obj+=_22635bd4a_field_out_ident(_2264c2c91_f->_field_decl);
					_78713_obj+=jule::Str("\"", 1);
				} else {
					_78713_obj+=jule::Str("\" << _Src.", 10);
					_78713_obj+=_22635bd4a_field_out_ident(_2264c2c91_f->_field_decl);
				}
				if ((_2264c2c91_i + 1LL) < _78628_s->_field_fields.len()) {
					_78713_obj+=jule::Str(" << \", \"", 8);
				}
				_78713_obj+=jule::Str(";\n", 2);
			}
			_iter_next_5562985552:;
			++it;
			_2264c2c91_i++;
			goto _iter_begin_5562985552;
		}
		_iter_end_5562985552:;
	}
	_78713_obj+=_2264c2c91_indent();
	_78713_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_78713_obj+=_2264c2c91_indent();
	_78713_obj+=jule::Str("return _Stream;\n", 16);
	_2264c2c91_done_indent();
	_78713_obj+=_2264c2c91_indent();
	_78713_obj+=jule::Str("}", 1);
	return _78713_obj;
}



inline jule::Str _2264c2c91_gen_struct_derive_defs(jule::Ptr<_225036509_StructIns>& _83032_s) {
	jule::Str _83113_obj = jule::Str();
	if (_83032_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_83113_obj+=_2264c2c91_indent();
		_83113_obj+=_226470579_get_derive_fn_def_clone(_83032_s->_field_decl);
		_83113_obj+=jule::Str("{\n", 2);
		_2264c2c91_add_indent();
		_83113_obj+=_2264c2c91_indent();
		_83113_obj+=_22649998d_gen_struct_kind_ins(_83032_s);
		_83113_obj+=jule::Str(" clone;\n", 8);
		{
			auto &expr = _83032_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_5562999920:;
			if (it != expr.end()) {
				jule::Ptr<_225036509_FieldIns> &_2264c2c91_f = *it;
				{
					jule::Str _84217_ident = _22635bd4a_field_out_ident(_2264c2c91_f->_field_decl);
					_83113_obj+=_2264c2c91_indent();
					_83113_obj+=jule::Str("clone.", 6);
					_83113_obj+=_84217_ident;
					_83113_obj+=jule::Str(" = jule::clone(this->", 21);
					_83113_obj+=_84217_ident;
					_83113_obj+=jule::Str(");\n", 3);
				}
				_iter_next_5562999920:;
				++it;
				goto _iter_begin_5562999920;
			}
			_iter_end_5562999920:;
		}
		_83113_obj+=_2264c2c91_indent();
		_83113_obj+=jule::Str("return clone;\n", 14);
		_2264c2c91_done_indent();
		_83113_obj+=_2264c2c91_indent();
		_83113_obj+=jule::Str("}", 1);
	}
	return _83113_obj;
}



inline jule::Str _2264c2c91_gen_struct_ins(jule::Ptr<_225036509_StructIns>& _86224_s) {
	jule::Str _86313_obj = _2264c2c91_gen_struct_method_defs(_86224_s);
	_86313_obj+=jule::Str("\n\n", 2);
	_86313_obj+=_2264c2c91_gen_struct_derive_defs(_86224_s);
	_86313_obj+=jule::Str("\n\n", 2);
	_86313_obj+=_2264c2c91_gen_struct_ostream(_86224_s);
	return _86313_obj;
}



inline jule::Str _2264c2c91_gen_struct(jule::Ptr<_225036509_Struct>& _87220_s) {
	jule::Str _87313_obj = jule::Str();
	{
		auto &expr = _87220_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_5563011424:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_StructIns> _2264c2c91_ins = *it;
			{
				_87313_obj+=_2264c2c91_gen_struct_ins(_2264c2c91_ins);
				_87313_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5563011424:;
			++it;
			goto _iter_begin_5563011424;
		}
		_iter_end_5563011424:;
	}
	return _87313_obj;
}



inline jule::Str _2264c2c91_gen_structs(jule::Slice<jule::Ptr<_225036509_Struct>>& _88221_structs) {
	jule::Str _88313_obj = jule::Str();
	{
		auto &expr = _88221_structs;
		auto it = expr.begin();
		_iter_begin_5563014464:;
		if (it != expr.end()) {
			jule::Ptr<_225036509_Struct> _2264c2c91_s = *it;
			{
				if ((!(_2264c2c91_s->_field_cpp_linked)) && (_2264c2c91_s->_field_token._field_id != 0LLU)) {
					_88313_obj+=_2264c2c91_gen_struct(_2264c2c91_s);
					_88313_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_5563014464:;
			++it;
			goto _iter_begin_5563014464;
		}
		_iter_end_5563014464:;
	}
	return _88313_obj;
}



inline jule::Str _2264c2c91_gen_fns(jule::Ptr<_23de59556_IR>& _89417_ir) {
	jule::Str _89513_obj = jule::Str();
	{
		auto &expr = _89417_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_5563018944:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _2264c2c91_u = *it;
			{
				if ((!(_2264c2c91_u->_field_cpp_linked))) {
					_89513_obj+=_2264c2c91_gen_pkg_fns(_2264c2c91_u->_field_package);
				}
			}
			_iter_next_5563018944:;
			++it;
			goto _iter_begin_5563018944;
		}
		_iter_end_5563018944:;
	}
	_89513_obj+=_2264c2c91_gen_pkg_fns(_89417_ir->_field_main);
	return _89513_obj;
}



inline void _2264c2c91_push_init(jule::Ptr<_225615962_Package>& _90719_pkg,jule::Str& _90739_obj) {
	
	
	jule::Ptr<_2252d6a73_Fn> _9119_f = _90719_pkg->_method_find_fn(jule::Str("init", 4),false);
	if (_9119_f == nullptr) {
		return;
	}
	_90739_obj+=jule::Str("\n\t", 2);
	_90739_obj+=_22635bd4a_fn_out_ident(_9119_f);
	_90739_obj+=jule::Str("();", 3);
}



inline jule::Str _2264c2c91_gen_init_caller(jule::Ptr<_23de59556_IR>& _92225_ir) {
	jule::Str _92313_obj = jule::Str("void ", 5);
	_92313_obj+=jule::Str("__jule_call_initializers", 24);
	_92313_obj+=jule::Str("(void) {", 8);
	{
		auto &expr = _92225_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_5563029376:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> _2264c2c91_u = *it;
			{
				if ((!(_2264c2c91_u->_field_cpp_linked))) {
					_2264c2c91_push_init(_2264c2c91_u->_field_package,_92313_obj);
				}
			}
			_iter_next_5563029376:;
			++it;
			goto _iter_begin_5563029376;
		}
		_iter_end_5563029376:;
	}
	_2264c2c91_push_init(_92225_ir->_field_main,_92313_obj);
	_92313_obj+=jule::Str("\n}", 2);
	return _92313_obj;
}



inline void _2264c2c91_append_standard(jule::Str& _93829_obj_code,jule::Str _93844_compiler,jule::Str _93859_compiler_cmd) {
	_226630371_AbsTime _9399_time = _226630371_Time::_static_method_now()._method_abs();
	jule::Str _94113_time_str = jule::Str();
	_94113_time_str+=_23e028108_fmt_uint(_9399_time._field_day,10LL);
	_94113_time_str+=jule::Str("/", 1);
	_94113_time_str+=_23e028108_fmt_uint(_9399_time._field_month,10LL);
	_94113_time_str+=jule::Str("/", 1);
	_94113_time_str+=_23e028108_fmt_uint(_9399_time._field_year,10LL);
	_94113_time_str+=jule::Str(" ", 1);
	_94113_time_str+=_23e028108_fmt_uint(_9399_time._field_hour,10LL);
	_94113_time_str+=jule::Str(".", 1);
	_94113_time_str+=_23e028108_fmt_uint(_9399_time._field_minute,10LL);
	_94113_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _95313_s = jule::Str();
	_95313_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_95313_s+=jule::Str("// JuleC version: ", 18);
	_95313_s+=jule::Str("beta 0.0.6 @master", 18);
	_95313_s+=jule::Str("\n", 1);
	_95313_s+=jule::Str("// Date: ", 9);
	_95313_s+=_94113_time_str;
	_95313_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_95313_s+=_93844_compiler;
	_95313_s+=jule::Str(" ", 1);
	_95313_s+=_93859_compiler_cmd;
	_95313_s+=jule::Str("\n\n#include \"", 12);
	_95313_s+=_23d049669_PATH_API;
	_95313_s+=jule::Str("\"\n\n", 3);
	_95313_s+=_93829_obj_code;
	_95313_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    jule::set_sig_handler(jule::signal_handler);\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 240);
	_93829_obj_code=_95313_s;
}



inline jule::Str _2264c2c91_gen(jule::Ptr<_23de59556_IR>& _98617_ir) {
	jule::Str _98713_obj = jule::Str();
	_98713_obj+=_2264c2c91_gen_links(_98617_ir);
	_98713_obj+=jule::Str("\n", 1);
	_98713_obj+=_2264c2c91_gen_prototypes(_98617_ir);
	_98713_obj+=jule::Str("\n\n", 2);
	_98713_obj+=_2264c2c91_gen_globals(_98617_ir->_field_ordered._field_globals);
	_98713_obj+=jule::Str("\n", 1);
	_98713_obj+=_2264c2c91_gen_structs(_98617_ir->_field_ordered._field_structs);
	_98713_obj+=_2264c2c91_gen_fns(_98617_ir);
	_98713_obj+=jule::Str("\n", 1);
	_98713_obj+=_2264c2c91_gen_init_caller(_98617_ir);
	_98713_obj+=jule::Str("\n", 1);
	return _98713_obj;
}



inline jule::Str _23ce7c756_str_repeat(jule::Str _3015_sub,jule::Int _3029_n) {
	if (_3029_n == 0LL) {
		return jule::Str();
	}
	jule::Str _3513_s = jule::Str();
	for (; _3029_n > 0LL; (_3029_n)--) {
		{
			_3513_s+=_3015_sub;
		}
	_iter_next_5563291872:;
	}
	_iter_end_5563291872:;
	return _3513_s;
}



inline void _23ce7c756_print_error_message(jule::Str _4224_msg) {
	jule::outln(_4224_msg);
}



inline void _23ce7c756_help(jule::Slice<jule::Str>& _4510_args) {
	if (_4510_args.len() > 2LL) {
		_23ce7c756_print_error_message(jule::Str("invalid command: ", 17) + _4510_args[2LL]);
		return;
	}
	jule::I64 _5113_max = _23ce7c756_HELP_MAP.__at(0LL).__at(0LL).len();
	{
		auto &expr = _23ce7c756_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_5563298144:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_23ce7c756_k = *it;
			{
				jule::I64 _5313_n = _23ce7c756_k.__at(0LL).len();
				if (_5313_n > _5113_max) {
					_5113_max=_5313_n;
				}
			}
			_iter_next_5563298144:;
			++it;
			goto _iter_begin_5563298144;
		}
		_iter_end_5563298144:;
	}
	jule::Str _5913_s = jule::Str();
	
	{
		auto &expr = _23ce7c756_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_5563303248:;
		if (it != expr.end()) {
			jule::Int _23ce7c756_i = it - expr.begin();
			jule::Array<jule::Str,2> &_23ce7c756_part = *it;
			{
				_5913_s+=_23ce7c756_part.__at(0LL);
				_5913_s+=_23ce7c756_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5113_max - _23ce7c756_part.__at(0LL).len()) + 5LL));
				_5913_s+=_23ce7c756_part.__at(1LL);
				if ((_23ce7c756_i + 1LL) < 4LL) {
					_5913_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_5563303248:;
			++it;
			_23ce7c756_i++;
			goto _iter_begin_5563303248;
		}
		_iter_end_5563303248:;
	}
	jule::outln(_5913_s);
}



inline void _23ce7c756_version(jule::Slice<jule::Str>& _7313_args) {
	if (_7313_args.len() > 2LL) {
		_23ce7c756_print_error_message(jule::Str("invalid command: ", 17) + _7313_args[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.6 @master", 18));
}



inline void _23ce7c756_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _23d049526_DISTOS;
		auto it = expr.begin();
		_iter_begin_5563312672:;
		if (it != expr.end()) {
			jule::Str &_23ce7c756_os = *it;
			{
				jule::out(_23ce7c756_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_5563312672:;
			++it;
			goto _iter_begin_5563312672;
		}
		_iter_end_5563312672:;
	}
	jule::outln(jule::Str());
}



inline void _23ce7c756_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _23d049526_DISTARCH;
		auto it = expr.begin();
		_iter_begin_5563314208:;
		if (it != expr.end()) {
			jule::Str &_23ce7c756_arch = *it;
			{
				jule::out(_23ce7c756_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_5563314208:;
			++it;
			goto _iter_begin_5563314208;
		}
		_iter_end_5563314208:;
	}
	jule::outln(jule::Str());
}



inline void _23ce7c756_tool(jule::Slice<jule::Str>& _10310_args) {
	if (_10310_args.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_10310_args.len() > 3LL) {
		_23ce7c756_print_error_message(jule::Str("invalid command: ", 17) + _10310_args[3LL]);
		return;
	}
	jule::Str _1149_cmd = _10310_args[2LL];
	{
		auto &_match_expr{ _1149_cmd };
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_5563323360:;
			{
				_23ce7c756_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_5563322912:;
			{
				_23ce7c756_tool_distarch();
			}
		}
		else {
			_case_begin_5563320512:;
			{
				_23ce7c756_print_error_message(jule::Str("Undefined command: ", 19) + _1149_cmd);
			}
		}
		_match_end_5563322512:;
	}
}



inline void _23ce7c756_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.6 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln(jule::Str("default compiler: ", 18) + _23ceb479e_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _23ceb479e_CPP_STD);
}



inline jule::Bool _23ce7c756_process_command(jule::Slice<jule::Str>& _13321_args) {
	{
		auto &_match_expr{ _13321_args[1LL] };
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_5563331824:;
			{
				_23ce7c756_help(_13321_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_5563331920:;
			{
				_23ce7c756_version(_13321_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_5563330464:;
			{
				_23ce7c756_tool(_13321_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_5563330576:;
			{
				_23ce7c756_julenv();
			}
		}
		else {
			_case_begin_5563323008:;
			{
				return false;
			}
		}
		_match_end_5563330112:;
	}
	return true;
}



inline void _23ce7c756_exit_err(jule::Str _14513_msg) {
	jule::outln(_14513_msg);
	_23d07c4e3_exit(1LL);
}



void entry_point(void) {
	jule::Slice<jule::Str> _1519_args = _23d0e4923_args();
	if (_1519_args.len() < 2LL) {
		return;
	}
	if (_23ce7c756_process_command(_1519_args)) {
		return;
	}
	_23ceb479e_compile_command(_1519_args);
}



inline void _23ce7ce1b___init_common(void) {
	_23ceb479e_COMPILER=jule::Str("clang", 5);
	_23ceb479e_COMPILER_PATH=jule::Str("clang++", 7);
}



inline void _23ceb3825_init(void) {
	_23ce7ce1b___init_common();
}



inline jule::Int _23ceb479e_system(jule::Str _5011_cmd) {
	return static_cast<jule::Int>(static_cast<jule::Int>(system(((char*)((&(_5011_cmd[0LL])))))));
}



inline void _23ceb479e_write_output(jule::Str _5417_path,jule::Str _5428_content) {
	jule::Str _559_dir = _23d08e2c4_dir(_5417_path);
	({
		auto except = _224eb5730_Status::_static_method_of(_559_dir);
		if (!except.ok()) {
			({
				auto except = _224ea5599_Directory::_static_method_create(_559_dir);
				if (!except.ok()) {
					_23ce7c756_exit_err(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	({
		auto except = _224eb1ee0_File::_static_method_write(_5417_path,static_cast<jule::Slice<jule::U8>>(_5428_content),432LL);
		if (!except.ok()) {
			_23ce7c756_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	});
}



inline void _23ceb479e_clear_objects(void) {
	({
		auto except = _224eb1ee0_File::_static_method_remove(_23ceb479e_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;
		}
	});
	_224ea5599_Directory::_static_method_remove(_23ceb479e_OUT_DIR);
}



inline void _23ceb479e_compile_ir(jule::Str _8215_compiler,jule::Str _8230_compiler_cmd) {
	jule::Int _839_status = _23ceb479e_system((_8215_compiler + jule::Str(" ", 1)) + _8230_compiler_cmd);
	if (_839_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_839_status);
		_23ce7c756_exit_err(jule::Str());
	}
	_23ceb479e_clear_objects();
}



inline void _23ceb479e_do_spell(jule::Str _9413_obj,jule::Str _9423_compiler,jule::Str _9438_compiler_cmd) {
	jule::Str _959_path = _23ceb479e_get_compile_path();
	_23ceb479e_write_output(_959_path,_9413_obj);
	if ((!(_23ceb479e_TRANSPILATION))) {
		_23ceb479e_compile_ir(_9423_compiler,_9438_compiler_cmd);
	}
}



inline jule::Bool _23ceb479e_is_cpp_source_file(jule::Str _10223_path) {
	jule::Int _1039_offset = _10223_path.rfind(jule::Str(".", 1));
	if (_1039_offset == -1LL) {
		return false;
	}
	return _23ceb0954_is_valid_cpp_ext(_10223_path.slice(_1039_offset));
}



inline std::tuple<jule::Str,jule::Str> _23ceb479e_gen_compile_cmd(jule::Str _11120_source_path,jule::Ptr<_23de59556_IR>& _11139_ir) {
	jule::Str &_11210_compiler = _23ceb479e_COMPILER_PATH;
	
	
	
	jule::Str _1179_SET_STD = jule::Str("--std=", 6) + _23ceb479e_CPP_STD;
	jule::Str _11913_cmd = jule::Str("-O0", 3);
	_11913_cmd+=jule::Str(" ", 1);
	{
		auto &_match_expr{ _23ceb479e_COMPILER };
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_5563371648:;
			{
				_11913_cmd+=jule::Str("-w", 2);
				_11913_cmd+=jule::Str(" ", 1);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_5563374704:;
			{
				_11913_cmd+=jule::Str("-Wno-everything", 15);
				_11913_cmd+=jule::Str(" ", 1);
			}
		}
		_match_end_5563373760:;
	}
	_11913_cmd+=_1179_SET_STD;
	_11913_cmd+=jule::Str(" ", 1);
	{
		auto &expr = _11139_ir->_field_passes;
		auto it = expr.begin();
		_iter_begin_5563378448:;
		if (it != expr.end()) {
			jule::Str &_23ceb479e_pass = *it;
			{
				_11913_cmd+=_23ceb479e_pass;
				_11913_cmd+=jule::Str(" ", 1);
			}
			_iter_next_5563378448:;
			++it;
			goto _iter_begin_5563378448;
		}
		_iter_end_5563378448:;
	}
	{
		auto &expr = _11139_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_5563380224:;
		if (it != expr.end()) {
			jule::Ptr<_225615962_ImportInfo> &_23ceb479e_u = *it;
			{
				if (_23ceb479e_u->_field_cpp_linked && _23ceb479e_is_cpp_source_file(_23ceb479e_u->_field_path)) {
					_11913_cmd+=_23ceb479e_u->_field_path;
					_11913_cmd+=jule::Str(" ", 1);
				}
			}
			_iter_next_5563380224:;
			++it;
			goto _iter_begin_5563380224;
		}
		_iter_end_5563380224:;
	}
	if (_23ceb479e_OUT != jule::Str()) {
		_11913_cmd+=jule::Str("-o ", 3);
		_11913_cmd+=_23ceb479e_OUT;
		_11913_cmd+=jule::Str(" ", 1);
	}
	_11913_cmd+=_11120_source_path;
	return std::make_tuple(_11210_compiler,_11913_cmd);
}



inline jule::Str _23ceb479e_get_compile_path(void) {
	return _23d08e2c4_join(jule::Slice<jule::Str>({_23ceb479e_OUT_DIR,_23ceb479e_OUT_NAME}));
}



inline void _23ceb479e_apply_target_independent_optimizations(jule::Ptr<_23de59556_IR>& _16848_ir) {
	if (_23d01979e_OPT_DEADCODE) {
		_23d019073_eliminate(_16848_ir);
	}
}



inline void _23ceb479e_check_compiler_flag(void) {
	{
		auto &_match_expr{ _23ceb479e_COMPILER };
		if (_match_expr == jule::Str()) {
			_case_begin_5563385632:;
			{
				_23ce7c756_exit_err(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_5563386640:;
			{
				_23ceb479e_COMPILER_PATH=jule::Str("clang++", 7);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_5563386736:;
			{
				_23ceb479e_COMPILER_PATH=jule::Str("g++", 3);
			}
		}
		else {
			_case_begin_5563386016:;
			{
				_23ce7c756_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _23ceb479e_COMPILER);
			}
		}
		_match_end_5563379872:;
	}
}



inline void _23ceb479e_check_target_arch(jule::Str _19022_arch) {
	{
		auto &expr = _23d049526_DISTARCH;
		auto it = expr.begin();
		_iter_begin_5563390544:;
		if (it != expr.end()) {
			jule::Str &_23ceb479e_distarch = *it;
			{
				if (_19022_arch == _23ceb479e_distarch) {
					return;
				}
			}
			_iter_next_5563390544:;
			++it;
			goto _iter_begin_5563390544;
		}
		_iter_end_5563390544:;
	}
	_23ce7c756_exit_err(jule::Str("--target: unsupported/undefined architecture: ", 46) + _19022_arch);
}



inline void _23ceb479e_check_target_os(jule::Str _20020_os) {
	{
		auto &expr = _23d049526_DISTOS;
		auto it = expr.begin();
		_iter_begin_5563392256:;
		if (it != expr.end()) {
			jule::Str &_23ceb479e_distos = *it;
			{
				if (_20020_os == _23ceb479e_distos) {
					return;
				}
			}
			_iter_next_5563392256:;
			++it;
			goto _iter_begin_5563392256;
		}
		_iter_end_5563392256:;
	}
	_23ce7c756_exit_err(jule::Str("--target: unsupported/undefined operating system: ", 50) + _20020_os);
}



inline void _23ceb479e_check_target_flag(jule::Str& _21023_target) {
	if (_21023_target == jule::Str()) {
		_23ce7c756_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2159_parts = _21023_target.split(jule::Str("-", 1),-1LL);
	if (_2159_parts.len() != 2LL) {
		_23ce7c756_exit_err(jule::Str("--target: undefined platform target format: ", 44) + _21023_target);
	}
	jule::Str _22010_os = _2159_parts[0LL];
	jule::Str _22014_arch = _2159_parts[1LL];
	std::tie(_22010_os,_22014_arch) = std::make_tuple(_2159_parts[0LL],_2159_parts[1LL]);
	if (_22010_os != jule::Str("native", 6)) {
		_23ceb479e_check_target_os(_22010_os);
		_23d0184a1_OS=_22010_os;
	}
	if (_22014_arch != jule::Str("native", 6)) {
		_23ceb479e_check_target_arch(_22014_arch);
		_23d0184a1_ARCH=_22014_arch;
	}
}



inline void _23ceb479e_check_opt_flag(jule::Str& _23320_opt) {
	if (_23320_opt == jule::Str()) {
		_23ce7c756_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _23320_opt };
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_5563409808:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_5563409904:;
			{
				_23d01979e_push_opt_level(1LLU);
			}
		}
		else {
			_case_begin_5563408544:;
			{
				_23ce7c756_exit_err(jule::Str("--opt: invalid optimization level: ", 35) + _23320_opt);
			}
		}
		_match_end_5563387136:;
	}
}



inline jule::Slice<jule::Str> _23ceb479e_check_flags(jule::Slice<jule::Str>& _24517_args) {
	jule::Str _24613_opt = jule::Str("L0", 2);
	jule::Str _24713_target = jule::Str("native-native", 13);
	jule::Ptr<_23d0249a7_FlagSet> _24913_fs = _23d0249a7_FlagSet::_static_method_new();
	_24913_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_23ceb479e_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Let shadowing", 13));
	_24913_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_23ceb479e_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_24913_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_23ceb479e_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_24913_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_24613_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_24913_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_24713_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_24913_fs->_method_add_var_1(((jule::Ptr<jule::Str>)((&(_23ceb479e_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_24913_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_23d01979e_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_24913_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_23d01979e_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_24913_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_23d01979e_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_24913_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_23d01979e_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_24913_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_23d01979e_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_24913_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_23d01979e_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_24913_fs->_method_add_var_0(((jule::Ptr<jule::Bool>)((&(_23d01979e_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	jule::Slice<jule::Str> _26513_content = ({
		auto except = _24913_fs->_method_parse(_24517_args.slice(1LL));
		(except.ok()) ? (except.result) : ({
			_23ce7c756_exit_err(except.error.operator jule::Str());
			nullptr;
		});
	});
	_23ceb479e_check_compiler_flag();
	_23ceb479e_check_target_flag(_24713_target);
	_23ceb479e_check_opt_flag(_24613_opt);
	return _26513_content;
}



inline void _23ceb479e_setup_sema_flags(jule::Int& _27726_flags) {
	if (_23ceb479e_SHADOWING) {
		_27726_flags|=1LL;
	}
}



inline jule::Ptr<_23de59556_IR> _23ceb479e_build_ir(jule::Slice<jule::Str>& _28314_args) {
	jule::Slice<jule::Str> _2849_content = _23ceb479e_check_flags(_28314_args);
	jule::Int _28613_sema_flags = 0LL;
	_23ceb479e_setup_sema_flags(_28613_sema_flags);
	if (_2849_content.len() == 0LL) {
		_23ce7c756_exit_err(_23ceb0c1d_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if (_2849_content.len() > 1LL) {
		_23ce7c756_exit_err(jule::Str("undefined content: ", 19) + _2849_content[1LL]);
	}
	jule::Str _2949_path = _2849_content[0LL];
	jule::Ptr<_224eb5730_Status> _2979_inf = ({
		auto except = _224eb5730_Status::_static_method_of(_23d049669_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_23ce7c756_exit_err(_23ceb0c1d_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
			return nullptr;
		} jule::Ptr<_224eb5730_Status>();});
	});
	if ((!(_2979_inf->_method_is_dir()))) {
		_23ce7c756_exit_err(_23ceb0c1d_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	}
	_23e1c54b4_init_flags();
	jule::Ptr<_23de59556_IR> _30814_ir;
	jule::Slice<_23ceb0c1d_Log> _30818_logs;
	std::tie(_30814_ir,_30818_logs) = _23de59556_IR::_static_method_build(_2949_path,_28613_sema_flags);
	if ((_30814_ir == nullptr) && (_30818_logs == nullptr)) {
		_23ce7c756_exit_err(_23ceb0c1d_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_2949_path)})));
	}
	if (_30818_logs != nullptr) {
		_23ce97bb1_Logger::_static_method_print_logs(_30818_logs);
		_23ce7c756_exit_err(jule::Str());
	}
	return _30814_ir;
}



inline void _23ceb479e_compile_command(jule::Slice<jule::Str>& _32321_args) {
	jule::Ptr<_23de59556_IR> _32413_ir = _23ceb479e_build_ir(_32321_args);
	
	jule::Ptr<_2252d6a73_Fn> _32713_f = _32413_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if (_32713_f == nullptr) {
		_23ce7c756_exit_err(_23ceb0c1d_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>()));
	}
	_32713_f->_field_statically=true;
	_32713_f=_32413_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (_32713_f != nullptr) {
		_32713_f->_field_statically=true;
	}
	_23ceb479e_apply_target_independent_optimizations(_32413_ir);
	_32413_ir->_method_order();
	jule::Str _34310_compiler;
	jule::Str _34320_compiler_cmd;
	std::tie(_34310_compiler,_34320_compiler_cmd) = _23ceb479e_gen_compile_cmd(_23ceb479e_get_compile_path(),_32413_ir);
	jule::Str _34513_obj = _2264c2c91_gen(_32413_ir);
	_2264c2c91_append_standard(_34513_obj,_34310_compiler,_34320_compiler_cmd);
	_23ceb479e_do_spell(_34513_obj,_34310_compiler,_34320_compiler_cmd);
}




void __jule_call_initializers(void) {
	_23d049669_init();
	_22602dc1a_init();
	_23ceb3825_init();
}

int main(int argc, char *argv[], char *envp[]) {
    jule::set_sig_handler(jule::signal_handler);
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}